{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome This multi-language repository is your practical guide to mastering system design. Dive into core concepts like microservices, caching, databases, message queues, and more through hands-on examples and exercises implemented in various programming languages. See firsthand how fundamental design choices translate across different tech stacks, gaining a deeper understanding of language-specific nuances within the context of building robust and scalable systems. Whether you are a beginner exploring architectural patterns or an experienced developer comparing implementation approaches, this repository provides a valuable resource for learning and practicing essential system design principles. Explore diverse coding styles and discover how to apply key concepts in the language of your choice. Table of Contents Section 1: getting-started Subsection 1.1: User Guide Subsection 1.2: License Section 2: system Degign 101 Subsection 2.1: Crud app with rest api","title":"Home"},{"location":"#welcome","text":"This multi-language repository is your practical guide to mastering system design. Dive into core concepts like microservices, caching, databases, message queues, and more through hands-on examples and exercises implemented in various programming languages. See firsthand how fundamental design choices translate across different tech stacks, gaining a deeper understanding of language-specific nuances within the context of building robust and scalable systems. Whether you are a beginner exploring architectural patterns or an experienced developer comparing implementation approaches, this repository provides a valuable resource for learning and practicing essential system design principles. Explore diverse coding styles and discover how to apply key concepts in the language of your choice.","title":"Welcome"},{"location":"#table-of-contents","text":"Section 1: getting-started Subsection 1.1: User Guide Subsection 1.2: License Section 2: system Degign 101 Subsection 2.1: Crud app with rest api","title":"Table of Contents"},{"location":"LICENSE/","text":"MIT License Copyright (c) 2025 Diptu Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"system-desing/","text":"System Design Multilangul My digital laboratory for mastering system design through Practice in multiple language. Table of Contents Section 1: getting-started Subsection 1.1: User Guide Subsection 1.2: License Section 2: system Degign 101 Subsection 2.1: Crud app with rest api","title":"Topics"},{"location":"system-desing/#system-design-multilangul","text":"My digital laboratory for mastering system design through Practice in multiple language.","title":"System Design Multilangul"},{"location":"system-desing/#table-of-contents","text":"Section 1: getting-started Subsection 1.1: User Guide Subsection 1.2: License Section 2: system Degign 101 Subsection 2.1: Crud app with rest api","title":"Table of Contents"},{"location":"system-desing/getting-started/","text":"Getting Started Welcome to the system-design-multilang repository! This project aims to provide practical examples and exercises for learning and practicing system design concepts using various programming languages. Repository Structure The repository is organized to help you easily find examples related to specific system design topics and programming languages. You'll generally find the following structure: layout README.md # Repository-level overview concept-name-01 language-01/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. language-02/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. Concept Folders: Each top-level folder represents a key system design concept (e.g., microservices , caching , databases , message-queues ). Language Folders: Within each concept folder, you'll find subfolders named after the programming languages used to demonstrate that concept (e.g., python , node ). Concept README: Each concept folder may contain a README.md file providing a brief explanation of the concept and its relevance. Code Files: The language-specific folders will contain the actual code examples and potentially instructions on how to run them. How to Use This Repository Explore Concepts: Navigate through the top-level folders to find the system design concept you're interested in learning about. Choose a Language: Within a concept folder, select the programming language you're comfortable with or want to explore. Review the Code: Examine the code examples to understand how the system design concept is implemented in that specific language. Run the Code (If Applicable): Follow any instructions provided within the language-specific folder or the concept's README.md to run the code and experiment. Compare Implementations: Explore the same concept implemented in different programming languages to see the variations and trade-offs. Contributing (Optional) If you'd like to contribute to this repository by adding new examples, implementing concepts in different languages, or improving existing code, please refer to the CONTRIBUTING.md file (if it exists). We welcome contributions that enhance the learning experience for everyone. License This repository is licensed under the MIT lisense .(See LICENSE file for details). Happy learning and practicing system design!","title":"user guide"},{"location":"system-desing/getting-started/#getting-started","text":"Welcome to the system-design-multilang repository! This project aims to provide practical examples and exercises for learning and practicing system design concepts using various programming languages.","title":"Getting Started"},{"location":"system-desing/getting-started/#repository-structure","text":"The repository is organized to help you easily find examples related to specific system design topics and programming languages. You'll generally find the following structure:","title":"Repository Structure"},{"location":"system-desing/getting-started/#layout","text":"README.md # Repository-level overview concept-name-01 language-01/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. language-02/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. Concept Folders: Each top-level folder represents a key system design concept (e.g., microservices , caching , databases , message-queues ). Language Folders: Within each concept folder, you'll find subfolders named after the programming languages used to demonstrate that concept (e.g., python , node ). Concept README: Each concept folder may contain a README.md file providing a brief explanation of the concept and its relevance. Code Files: The language-specific folders will contain the actual code examples and potentially instructions on how to run them.","title":"layout"},{"location":"system-desing/getting-started/#how-to-use-this-repository","text":"Explore Concepts: Navigate through the top-level folders to find the system design concept you're interested in learning about. Choose a Language: Within a concept folder, select the programming language you're comfortable with or want to explore. Review the Code: Examine the code examples to understand how the system design concept is implemented in that specific language. Run the Code (If Applicable): Follow any instructions provided within the language-specific folder or the concept's README.md to run the code and experiment. Compare Implementations: Explore the same concept implemented in different programming languages to see the variations and trade-offs.","title":"How to Use This Repository"},{"location":"system-desing/getting-started/#contributing-optional","text":"If you'd like to contribute to this repository by adding new examples, implementing concepts in different languages, or improving existing code, please refer to the CONTRIBUTING.md file (if it exists). We welcome contributions that enhance the learning experience for everyone.","title":"Contributing (Optional)"},{"location":"system-desing/getting-started/#license","text":"This repository is licensed under the MIT lisense .(See LICENSE file for details). Happy learning and practicing system design!","title":"License"},{"location":"system-desing/crud-app/","text":"CRUD Application Author: Nazmul Alam Date: 2025-04-09 email:diptunazmulalam@gmail.com API An API ( Application Programming Interface ) is a technology enabling communication between software applications over the internet. It defines a set of rules and protocols that govern how different software components can interact and exchange data. CRUD APi A CRUD API facilitates the management of data within backend systems through four fundamental operations: Create, Read, Update, and Delete. These operations are typically mapped to specific HTTP methods: GET : Used to retrieve data from the server. POST : Used to create new data on the server. PUT : Used to update existing data on the server. DELETE : Used to remove data from the server. These methods form the cornerstone of many web applications, enabling comprehensive data manipulation through programmatic interfaces. Implementation: js/ : Contains the implementation of the CRUD application using Mern python/ : Contains the implementation of the CRUD application using Python Fastapi and flask.","title":"CRUD Application"},{"location":"system-desing/crud-app/#crud-application","text":"Author: Nazmul Alam Date: 2025-04-09 email:diptunazmulalam@gmail.com API An API ( Application Programming Interface ) is a technology enabling communication between software applications over the internet. It defines a set of rules and protocols that govern how different software components can interact and exchange data. CRUD APi A CRUD API facilitates the management of data within backend systems through four fundamental operations: Create, Read, Update, and Delete. These operations are typically mapped to specific HTTP methods: GET : Used to retrieve data from the server. POST : Used to create new data on the server. PUT : Used to update existing data on the server. DELETE : Used to remove data from the server. These methods form the cornerstone of many web applications, enabling comprehensive data manipulation through programmatic interfaces.","title":"CRUD Application"},{"location":"system-desing/crud-app/#implementation","text":"js/ : Contains the implementation of the CRUD application using Mern python/ : Contains the implementation of the CRUD application using Python Fastapi and flask.","title":"Implementation:"},{"location":"system-desing/crud-app/JS/","text":"Introduction to Node.js and Express What is Node.js? Node.js is an open-source and cross-platform runtime environment for executing JavaScript code outside of a web browser. It is commonly used to build back-end services , also known as APIs . Node.js is particularly well-suited for building: Highly scalable applications Data-intensive applications Real-time back-end services that power client applications Why Node? Node.js has become a preferred choice for backend development due to several compelling reasons: JavaScript Everywhere: It allows you to use JavaScript for both your frontend and backend, simplifying development and enabling easier transitions between roles. Scalability: Node.js facilitates the easy scaling of applications, making it suitable for large-scale professional projects with growing user bases. Performance: Its fast and non-blocking nature, driven by its asynchronous event-driven architecture, ensures efficient handling of concurrent requests. Community and Ecosystem: Node.js boasts a vibrant community of developers and a rich ecosystem of readily available packages and libraries (primarily through npm - Node Package Manager). How to Install Node.js Follow these steps to install Node.js on your system: Download the Installer: Visit the official Node.js website and download the appropriate installer for your operating system (Mac or Windows). Choose the LTS Version: It is generally recommended to download and install the Long-Term Support (LTS) version, which is usually displayed on the left side of the download page. Run the Installer: Once the download is complete, run the installer and follow the on-screen prompts. You will likely need to click the \"NEXT\" button multiple times and accept the default installation settings. Verify Installation: To confirm that Node.js has been installed correctly, open your terminal (or command prompt on Windows) and run the following command: node --version If the installation was successful, this command will output the installed version of Node.js. On Windows, you might need to restart your command prompt after installation before running this command. What is Express? Express is a fast , unopinionated , and minimalist web backend or server-side web framework for Node.js. Essentially, Express simplifies the process of building APIs and web applications with Node.js by providing a set of robust features and tools with less code. Key aspects of Express: It is a framework built on top of Node.js . It enables you to create your backend with ease , providing structure and conventions for handling routing, middleware, and more. It can be used in conjunction with frontend frameworks like React , Angular , or Vue to build complete full-stack applications . Why do You Need Express? Express offers significant advantages for Node.js web development: Simplified Development: It makes building web applications with Node.js much easier by abstracting away low-level details and providing a more intuitive API. Lightweight and Fast: Express is extremely light , fast , and free , contributing to the overall performance of your application. Versatility: It is suitable for building both server-rendered applications (where HTML is generated on the server) as well as API/Microservices (for data exchange with frontend applications). Popularity and Community Support: Express is the most popular Node.js web framework, benefiting from a large and active community that provides extensive documentation, tutorials, and support. Full Control: It gives you full control over requests and responses , allowing for highly customized application logic. Prerequisites Before you begin working with Node.js and Express, ensure you have the following: Basic knowledge of JavaScript: A fundamental understanding of JavaScript syntax, concepts, and asynchronous programming is essential. Node.js Installed: You need to have successfully downloaded and installed Node.js on your computer as described in the installation section. Postman (Recommended): While not strictly required for development, Postman is a valuable tool for testing and interacting with your backend APIs. You can download it from the Postman website . Crud-api projrct structure create a directory called server aand move into server directory. mkdir server cd server View npm Version Information npm stands for Node Package Manager . It is the default package manager for the Node.js JavaScript runtime environment. -v is a common command-line flag that typically stands for \" version \". When you execute npm -v , the terminal will output the version number of the npm client that is installed on your machine. Example Output The provided output shows the following: 10.9.2 Initialize a new Node.js project Inside server directory run the following command to initialize a Node.js project. npm init -y The command npm init -y is used within a Node.js project to initialize a new package.json file . This file is a fundamental part of any Node.js project managed with npm (Node Package Manager). package.json { \"name\" : \"server\" , \"version\" : \"1.0.0\" , \"main\" : \"index.js\" , \"scripts\" : { \"test\" : \"echo \\\"Error: no test specified\\\" && exit 1\" }, \"keywords\" : [], \"author\" : \"\" , \"license\" : \"ISC\" , \"description\" : \"\" } Project Structure: server \u2514\u2500\u2500 ./server/package.json Install Express.js ` npm i express ` Why use express? Installing Express allows us to: Quickly set up a web server: Express simplifies the process of creating and configuring HTTP servers in Node.js. Define routes for your application: It provides a clear and organized way to handle different HTTP requests (like GET, POST, PUT, DELETE) to specific URLs (routes) in your application. Implement middleware: Express allows you to use middleware functions to perform various tasks before or after handling a request, such as logging, authentication, and data parsing. Build APIs: It is a popular choice for building RESTful APIs that can be consumed by frontend applications or other services. Render dynamic web pages: Express can be used with templating engines to generate HTML content dynamically on the server. Project Structure: server \u2514\u2500\u2500 ./server/package.json \u2514\u2500\u2500 ./server/node_modules package.json \"dependencies\" : { \"express\" : \"^5.1.0\" } Setting Up code Directory Creating the Source Directory The first step is to create a directory that will house all your project's source code files. A common convention is to name this directory src (short for \"source\"). mkdir src Next, we'll typically want to create a main JavaScript file where our application's entry point will reside. A common name for this file is index.js touch src/index.js Creating a Basic Express Server index.js 1 2 3 4 5 6 const express = require ( 'express' ); const app = express () app . listen ( 3000 , ()=>{ console . log ( `server running on http://localhost:3000` ); }) Running the Node.js Server node src/index.js Package Installation Nodemon morgan Why Use Nodemon? Automatic Restarts: The primary benefit of Nodemon is its ability to automatically restart your Node.js server upon saving changes to your files. This saves you valuable development time and allows you to focus on coding. No Code Changes Required: Nodemon is designed to be a seamless replacement for the node command. You don't need to modify your existing Node.js code to use it. Improved Development Experience: By automating the server restart process, Nodemon provides a smoother and more efficient development experience. We can easily install Nodemon as a development dependency for your project using npm (Node Package Manager): npm install --save-dev nodemon Why Use Morgan? Morgan is a popular Node.js logging middleware that provides a simple way to log HTTP requests and responses. * HTTP Request and Response Logging: Morgan logs HTTP requests and responses, making it easier to monitor and debug your application. npm install --save-dev morgan package.json 14 15 16 17 \"devDependencies\" : { \"morgan\" : \"^1.10.0\" , \"nodemon\" : \"^3.1.9\" } Add the following lines to script section: package.json 5 6 7 8 \"scripts\" : { \"start\" : \"node ./src/index.js\" , \"dev\" : \"nodemon ./src/index.js\" , }, Running the Production Application npm run start will run the commad node ./src/index.js Running the Development Application with Nodemon npm run dev will run the commad nodemon ./src/index.js Create a HTTP request index.js 1 2 3 4 5 6 7 8 9 10 11 12 13 const express = require ( 'express' ); const app = express () app . get ( '/products' , ( req , res ) => { res . status ( 200 ). send ( { 'success' : true , 'msg' : 'products is returned' } ); }) app . listen ( 3000 , ()=>{ console . log ( `server is running on http://localhost:3000` ); }) Now let's the Development Application with Nodemon npm run dev now we can visit http://localhost:3000/products in our browser to see the response. package.json 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 const express = require ( 'express' ); const app = express () const morgan = require ( 'morgan' ) // setup the logger app . use ( morgan ( 'dev' )) app . get ( '/products' , ( req , res ) => { res . status ( 200 ). send ( { 'success' : true , 'msg' : 'products is returned' } ); }) app . listen ( 3000 , ()=>{ console . log ( `server running on http://localhost:3000` ); }) now if we send any request to server e,g http://localhost:3000/products we'll see logs in the terminal. Express Middleware Express middleware are functions that have access to the request object ( req ), the response object ( res ) and the next middleware function in the application\u2019s request-response cycle. The next middleware function is commonly denoted by a variable named next . Middleware functions can perform the following tasks: Execute any code. Make changes to the request and the response objects. End the request-response cycle. Call the next middleware function in the stack. If the current middleware function does not end the request-response cycle, it must call next() to pass control to the next middleware function. Otherwise, the request will be left hanging.","title":"Introduction to Node.js and Express"},{"location":"system-desing/crud-app/JS/#introduction-to-nodejs-and-express","text":"What is Node.js? Node.js is an open-source and cross-platform runtime environment for executing JavaScript code outside of a web browser. It is commonly used to build back-end services , also known as APIs . Node.js is particularly well-suited for building: Highly scalable applications Data-intensive applications Real-time back-end services that power client applications Why Node? Node.js has become a preferred choice for backend development due to several compelling reasons: JavaScript Everywhere: It allows you to use JavaScript for both your frontend and backend, simplifying development and enabling easier transitions between roles. Scalability: Node.js facilitates the easy scaling of applications, making it suitable for large-scale professional projects with growing user bases. Performance: Its fast and non-blocking nature, driven by its asynchronous event-driven architecture, ensures efficient handling of concurrent requests. Community and Ecosystem: Node.js boasts a vibrant community of developers and a rich ecosystem of readily available packages and libraries (primarily through npm - Node Package Manager). How to Install Node.js Follow these steps to install Node.js on your system: Download the Installer: Visit the official Node.js website and download the appropriate installer for your operating system (Mac or Windows). Choose the LTS Version: It is generally recommended to download and install the Long-Term Support (LTS) version, which is usually displayed on the left side of the download page. Run the Installer: Once the download is complete, run the installer and follow the on-screen prompts. You will likely need to click the \"NEXT\" button multiple times and accept the default installation settings. Verify Installation: To confirm that Node.js has been installed correctly, open your terminal (or command prompt on Windows) and run the following command: node --version If the installation was successful, this command will output the installed version of Node.js. On Windows, you might need to restart your command prompt after installation before running this command. What is Express? Express is a fast , unopinionated , and minimalist web backend or server-side web framework for Node.js. Essentially, Express simplifies the process of building APIs and web applications with Node.js by providing a set of robust features and tools with less code. Key aspects of Express: It is a framework built on top of Node.js . It enables you to create your backend with ease , providing structure and conventions for handling routing, middleware, and more. It can be used in conjunction with frontend frameworks like React , Angular , or Vue to build complete full-stack applications . Why do You Need Express? Express offers significant advantages for Node.js web development: Simplified Development: It makes building web applications with Node.js much easier by abstracting away low-level details and providing a more intuitive API. Lightweight and Fast: Express is extremely light , fast , and free , contributing to the overall performance of your application. Versatility: It is suitable for building both server-rendered applications (where HTML is generated on the server) as well as API/Microservices (for data exchange with frontend applications). Popularity and Community Support: Express is the most popular Node.js web framework, benefiting from a large and active community that provides extensive documentation, tutorials, and support. Full Control: It gives you full control over requests and responses , allowing for highly customized application logic. Prerequisites Before you begin working with Node.js and Express, ensure you have the following: Basic knowledge of JavaScript: A fundamental understanding of JavaScript syntax, concepts, and asynchronous programming is essential. Node.js Installed: You need to have successfully downloaded and installed Node.js on your computer as described in the installation section. Postman (Recommended): While not strictly required for development, Postman is a valuable tool for testing and interacting with your backend APIs. You can download it from the Postman website .","title":"Introduction to Node.js and Express"},{"location":"system-desing/crud-app/JS/#crud-api","text":"projrct structure create a directory called server aand move into server directory. mkdir server cd server View npm Version Information npm stands for Node Package Manager . It is the default package manager for the Node.js JavaScript runtime environment. -v is a common command-line flag that typically stands for \" version \". When you execute npm -v , the terminal will output the version number of the npm client that is installed on your machine.","title":"Crud-api"},{"location":"system-desing/crud-app/JS/#example-output","text":"The provided output shows the following: 10.9.2 Initialize a new Node.js project Inside server directory run the following command to initialize a Node.js project. npm init -y The command npm init -y is used within a Node.js project to initialize a new package.json file . This file is a fundamental part of any Node.js project managed with npm (Node Package Manager). package.json { \"name\" : \"server\" , \"version\" : \"1.0.0\" , \"main\" : \"index.js\" , \"scripts\" : { \"test\" : \"echo \\\"Error: no test specified\\\" && exit 1\" }, \"keywords\" : [], \"author\" : \"\" , \"license\" : \"ISC\" , \"description\" : \"\" } Project Structure: server \u2514\u2500\u2500 ./server/package.json Install Express.js ` npm i express ` Why use express? Installing Express allows us to: Quickly set up a web server: Express simplifies the process of creating and configuring HTTP servers in Node.js. Define routes for your application: It provides a clear and organized way to handle different HTTP requests (like GET, POST, PUT, DELETE) to specific URLs (routes) in your application. Implement middleware: Express allows you to use middleware functions to perform various tasks before or after handling a request, such as logging, authentication, and data parsing. Build APIs: It is a popular choice for building RESTful APIs that can be consumed by frontend applications or other services. Render dynamic web pages: Express can be used with templating engines to generate HTML content dynamically on the server. Project Structure: server \u2514\u2500\u2500 ./server/package.json \u2514\u2500\u2500 ./server/node_modules package.json \"dependencies\" : { \"express\" : \"^5.1.0\" }","title":"Example Output"},{"location":"system-desing/crud-app/JS/#setting-up-code-directory","text":"","title":"Setting Up code Directory"},{"location":"system-desing/crud-app/JS/#creating-the-source-directory","text":"The first step is to create a directory that will house all your project's source code files. A common convention is to name this directory src (short for \"source\"). mkdir src Next, we'll typically want to create a main JavaScript file where our application's entry point will reside. A common name for this file is index.js touch src/index.js","title":"Creating the Source Directory"},{"location":"system-desing/crud-app/JS/#creating-a-basic-express-server","text":"index.js 1 2 3 4 5 6 const express = require ( 'express' ); const app = express () app . listen ( 3000 , ()=>{ console . log ( `server running on http://localhost:3000` ); })","title":"Creating a Basic Express Server"},{"location":"system-desing/crud-app/JS/#running-the-nodejs-server","text":"node src/index.js","title":"Running the Node.js Server"},{"location":"system-desing/crud-app/JS/#package-installation","text":"Nodemon morgan Why Use Nodemon? Automatic Restarts: The primary benefit of Nodemon is its ability to automatically restart your Node.js server upon saving changes to your files. This saves you valuable development time and allows you to focus on coding. No Code Changes Required: Nodemon is designed to be a seamless replacement for the node command. You don't need to modify your existing Node.js code to use it. Improved Development Experience: By automating the server restart process, Nodemon provides a smoother and more efficient development experience. We can easily install Nodemon as a development dependency for your project using npm (Node Package Manager): npm install --save-dev nodemon Why Use Morgan? Morgan is a popular Node.js logging middleware that provides a simple way to log HTTP requests and responses. * HTTP Request and Response Logging: Morgan logs HTTP requests and responses, making it easier to monitor and debug your application. npm install --save-dev morgan package.json 14 15 16 17 \"devDependencies\" : { \"morgan\" : \"^1.10.0\" , \"nodemon\" : \"^3.1.9\" } Add the following lines to script section: package.json 5 6 7 8 \"scripts\" : { \"start\" : \"node ./src/index.js\" , \"dev\" : \"nodemon ./src/index.js\" , },","title":"Package Installation"},{"location":"system-desing/crud-app/JS/#running-the-production-application","text":"npm run start will run the commad node ./src/index.js","title":"Running the Production Application"},{"location":"system-desing/crud-app/JS/#running-the-development-application-with-nodemon","text":"npm run dev will run the commad nodemon ./src/index.js","title":"Running the Development Application with Nodemon"},{"location":"system-desing/crud-app/JS/#create-a-http-request","text":"index.js 1 2 3 4 5 6 7 8 9 10 11 12 13 const express = require ( 'express' ); const app = express () app . get ( '/products' , ( req , res ) => { res . status ( 200 ). send ( { 'success' : true , 'msg' : 'products is returned' } ); }) app . listen ( 3000 , ()=>{ console . log ( `server is running on http://localhost:3000` ); }) Now let's the Development Application with Nodemon npm run dev now we can visit http://localhost:3000/products in our browser to see the response. package.json 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 const express = require ( 'express' ); const app = express () const morgan = require ( 'morgan' ) // setup the logger app . use ( morgan ( 'dev' )) app . get ( '/products' , ( req , res ) => { res . status ( 200 ). send ( { 'success' : true , 'msg' : 'products is returned' } ); }) app . listen ( 3000 , ()=>{ console . log ( `server running on http://localhost:3000` ); }) now if we send any request to server e,g http://localhost:3000/products we'll see logs in the terminal. Express Middleware Express middleware are functions that have access to the request object ( req ), the response object ( res ) and the next middleware function in the application\u2019s request-response cycle. The next middleware function is commonly denoted by a variable named next . Middleware functions can perform the following tasks: Execute any code. Make changes to the request and the response objects. End the request-response cycle. Call the next middleware function in the stack. If the current middleware function does not end the request-response cycle, it must call next() to pass control to the next middleware function. Otherwise, the request will be left hanging.","title":"Create a HTTP request"},{"location":"system-desing/crud-app/JS/server/node_modules/%40mongodb-js/saslprep/readme/","text":"saslprep Note: This is a fork of the original saslprep npm package and provides equivalent functionality. Stringprep Profile for User Names and Passwords, rfc4013 Usage const saslprep = require ( '@mongodb-js/saslprep' ); saslprep ( 'password\\u00AD' ); // password saslprep ( 'password\\u0007' ); // Error: prohibited character API saslprep(input: String, opts: Options): String Normalize user name or password. Options.allowUnassigned: bool A special behavior for unassigned code points, see https://tools.ietf.org/html/rfc4013#section-2.5. Disabled by default. License MIT, 2017-2019 (c) Dmitriy Tsvettsikh","title":"saslprep"},{"location":"system-desing/crud-app/JS/server/node_modules/%40mongodb-js/saslprep/readme/#saslprep","text":"Note: This is a fork of the original saslprep npm package and provides equivalent functionality. Stringprep Profile for User Names and Passwords, rfc4013","title":"saslprep"},{"location":"system-desing/crud-app/JS/server/node_modules/%40mongodb-js/saslprep/readme/#usage","text":"const saslprep = require ( '@mongodb-js/saslprep' ); saslprep ( 'password\\u00AD' ); // password saslprep ( 'password\\u0007' ); // Error: prohibited character","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/%40mongodb-js/saslprep/readme/#api","text":"","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/%40mongodb-js/saslprep/readme/#saslprepinput-string-opts-options-string","text":"Normalize user name or password.","title":"saslprep(input: String, opts: Options): String"},{"location":"system-desing/crud-app/JS/server/node_modules/%40mongodb-js/saslprep/readme/#optionsallowunassigned-bool","text":"A special behavior for unassigned code points, see https://tools.ietf.org/html/rfc4013#section-2.5. Disabled by default.","title":"Options.allowUnassigned: bool"},{"location":"system-desing/crud-app/JS/server/node_modules/%40mongodb-js/saslprep/readme/#license","text":"MIT, 2017-2019 (c) Dmitriy Tsvettsikh","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/%40types/webidl-conversions/","text":"Installation npm install --save @types/webidl-conversions Summary This package contains type definitions for webidl-conversions (https://github.com/jsdom/webidl-conversions#readme). Details Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/webidl-conversions. Additional Details Last updated: Tue, 07 Nov 2023 15:11:36 GMT Dependencies: none Credits These definitions were written by ExE Boss , and BendingBender .","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/%40types/webidl-conversions/#installation","text":"npm install --save @types/webidl-conversions","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/%40types/webidl-conversions/#summary","text":"This package contains type definitions for webidl-conversions (https://github.com/jsdom/webidl-conversions#readme).","title":"Summary"},{"location":"system-desing/crud-app/JS/server/node_modules/%40types/webidl-conversions/#details","text":"Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/webidl-conversions.","title":"Details"},{"location":"system-desing/crud-app/JS/server/node_modules/%40types/webidl-conversions/#additional-details","text":"Last updated: Tue, 07 Nov 2023 15:11:36 GMT Dependencies: none","title":"Additional Details"},{"location":"system-desing/crud-app/JS/server/node_modules/%40types/webidl-conversions/#credits","text":"These definitions were written by ExE Boss , and BendingBender .","title":"Credits"},{"location":"system-desing/crud-app/JS/server/node_modules/%40types/whatwg-url/","text":"Installation npm install --save @types/whatwg-url Summary This package contains type definitions for whatwg-url (https://github.com/jsdom/whatwg-url#readme). Details Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/whatwg-url. Additional Details Last updated: Sat, 18 May 2024 21:06:54 GMT Dependencies: @types/webidl-conversions Credits These definitions were written by Alexander Marks , ExE Boss , and BendingBender .","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/%40types/whatwg-url/#installation","text":"npm install --save @types/whatwg-url","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/%40types/whatwg-url/#summary","text":"This package contains type definitions for whatwg-url (https://github.com/jsdom/whatwg-url#readme).","title":"Summary"},{"location":"system-desing/crud-app/JS/server/node_modules/%40types/whatwg-url/#details","text":"Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/whatwg-url.","title":"Details"},{"location":"system-desing/crud-app/JS/server/node_modules/%40types/whatwg-url/#additional-details","text":"Last updated: Sat, 18 May 2024 21:06:54 GMT Dependencies: @types/webidl-conversions","title":"Additional Details"},{"location":"system-desing/crud-app/JS/server/node_modules/%40types/whatwg-url/#credits","text":"These definitions were written by Alexander Marks , ExE Boss , and BendingBender .","title":"Credits"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/","text":"accepts Higher level content negotiation based on negotiator . Extracted from koa for general use. In addition to negotiator, it allows: Allows types as an array or arguments list, ie (['text/html', 'application/json']) as well as ('text/html', 'application/json') . Allows type shorthands such as json . Returns false when no types match Treats non-existent headers as * Installation This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install accepts API var accepts = require ( 'accepts' ) accepts(req) Create a new Accepts object for the given req . .charset(charsets) Return the first accepted charset. If nothing in charsets is accepted, then false is returned. .charsets() Return the charsets that the request accepts, in the order of the client's preference (most preferred first). .encoding(encodings) Return the first accepted encoding. If nothing in encodings is accepted, then false is returned. .encodings() Return the encodings that the request accepts, in the order of the client's preference (most preferred first). .language(languages) Return the first accepted language. If nothing in languages is accepted, then false is returned. .languages() Return the languages that the request accepts, in the order of the client's preference (most preferred first). .type(types) Return the first accepted type (and it is returned as the same text as what appears in the types array). If nothing in types is accepted, then false is returned. The types array can contain full MIME types or file extensions. Any value that is not a full MIME type is passed to require('mime-types').lookup . .types() Return the types that the request accepts, in the order of the client's preference (most preferred first). Examples Simple type negotiation This simple example shows how to use accepts to return a different typed respond body based on what the client wants to accept. The server lists it's preferences in order and will get back the best match between the client and server. var accepts = require ( 'accepts' ) var http = require ( 'http' ) function app ( req , res ) { var accept = accepts ( req ) // the order of this list is significant; should be server preferred order switch ( accept . type ([ 'json' , 'html' ])) { case 'json' : res . setHeader ( 'Content-Type' , 'application/json' ) res . write ( '{\"hello\":\"world!\"}' ) break case 'html' : res . setHeader ( 'Content-Type' , 'text/html' ) res . write ( '<b>hello, world!</b>' ) break default : // the fallback is text/plain, so no need to specify it above res . setHeader ( 'Content-Type' , 'text/plain' ) res . write ( 'hello, world!' ) break } res . end () } http . createServer ( app ). listen ( 3000 ) You can test this out with the cURL program: curl -I -H 'Accept: text/html' http://localhost:3000/ License MIT","title":"accepts"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/#accepts","text":"Higher level content negotiation based on negotiator . Extracted from koa for general use. In addition to negotiator, it allows: Allows types as an array or arguments list, ie (['text/html', 'application/json']) as well as ('text/html', 'application/json') . Allows type shorthands such as json . Returns false when no types match Treats non-existent headers as *","title":"accepts"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/#installation","text":"This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install accepts","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/#api","text":"var accepts = require ( 'accepts' )","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/#acceptsreq","text":"Create a new Accepts object for the given req .","title":"accepts(req)"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/#charsetcharsets","text":"Return the first accepted charset. If nothing in charsets is accepted, then false is returned.","title":".charset(charsets)"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/#charsets","text":"Return the charsets that the request accepts, in the order of the client's preference (most preferred first).","title":".charsets()"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/#encodingencodings","text":"Return the first accepted encoding. If nothing in encodings is accepted, then false is returned.","title":".encoding(encodings)"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/#encodings","text":"Return the encodings that the request accepts, in the order of the client's preference (most preferred first).","title":".encodings()"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/#languagelanguages","text":"Return the first accepted language. If nothing in languages is accepted, then false is returned.","title":".language(languages)"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/#languages","text":"Return the languages that the request accepts, in the order of the client's preference (most preferred first).","title":".languages()"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/#typetypes","text":"Return the first accepted type (and it is returned as the same text as what appears in the types array). If nothing in types is accepted, then false is returned. The types array can contain full MIME types or file extensions. Any value that is not a full MIME type is passed to require('mime-types').lookup .","title":".type(types)"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/#types","text":"Return the types that the request accepts, in the order of the client's preference (most preferred first).","title":".types()"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/#examples","text":"","title":"Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/#simple-type-negotiation","text":"This simple example shows how to use accepts to return a different typed respond body based on what the client wants to accept. The server lists it's preferences in order and will get back the best match between the client and server. var accepts = require ( 'accepts' ) var http = require ( 'http' ) function app ( req , res ) { var accept = accepts ( req ) // the order of this list is significant; should be server preferred order switch ( accept . type ([ 'json' , 'html' ])) { case 'json' : res . setHeader ( 'Content-Type' , 'application/json' ) res . write ( '{\"hello\":\"world!\"}' ) break case 'html' : res . setHeader ( 'Content-Type' , 'text/html' ) res . write ( '<b>hello, world!</b>' ) break default : // the fallback is text/plain, so no need to specify it above res . setHeader ( 'Content-Type' , 'text/plain' ) res . write ( 'hello, world!' ) break } res . end () } http . createServer ( app ). listen ( 3000 ) You can test this out with the cURL program: curl -I -H 'Accept: text/html' http://localhost:3000/","title":"Simple type negotiation"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/","text":"2.0.0 / 2024-08-31 Drop node <18 support deps: mime-types@^3.0.0 deps: negotiator@^1.0.0 1.3.8 / 2022-02-02 deps: mime-types@~2.1.34 deps: mime-db@~1.51.0 deps: negotiator@0.6.3 1.3.7 / 2019-04-29 deps: negotiator@0.6.2 Fix sorting charset, encoding, and language with extra parameters 1.3.6 / 2019-04-28 deps: mime-types@~2.1.24 deps: mime-db@~1.40.0 1.3.5 / 2018-02-28 deps: mime-types@~2.1.18 deps: mime-db@~1.33.0 1.3.4 / 2017-08-22 deps: mime-types@~2.1.16 deps: mime-db@~1.29.0 1.3.3 / 2016-05-02 deps: mime-types@~2.1.11 deps: mime-db@~1.23.0 deps: negotiator@0.6.1 perf: improve Accept parsing speed perf: improve Accept-Charset parsing speed perf: improve Accept-Encoding parsing speed perf: improve Accept-Language parsing speed 1.3.2 / 2016-03-08 deps: mime-types@~2.1.10 Fix extension of application/dash+xml Update primary extension for audio/mp4 deps: mime-db@~1.22.0 1.3.1 / 2016-01-19 deps: mime-types@~2.1.9 deps: mime-db@~1.21.0 1.3.0 / 2015-09-29 deps: mime-types@~2.1.7 deps: mime-db@~1.19.0 deps: negotiator@0.6.0 Fix including type extensions in parameters in Accept parsing Fix parsing Accept parameters with quoted equals Fix parsing Accept parameters with quoted semicolons Lazy-load modules from main entry point perf: delay type concatenation until needed perf: enable strict mode perf: hoist regular expressions perf: remove closures getting spec properties perf: remove a closure from media type parsing perf: remove property delete from media type parsing 1.2.13 / 2015-09-06 deps: mime-types@~2.1.6 deps: mime-db@~1.18.0 1.2.12 / 2015-07-30 deps: mime-types@~2.1.4 deps: mime-db@~1.16.0 1.2.11 / 2015-07-16 deps: mime-types@~2.1.3 deps: mime-db@~1.15.0 1.2.10 / 2015-07-01 deps: mime-types@~2.1.2 deps: mime-db@~1.14.0 1.2.9 / 2015-06-08 deps: mime-types@~2.1.1 perf: fix deopt during mapping 1.2.8 / 2015-06-07 deps: mime-types@~2.1.0 deps: mime-db@~1.13.0 perf: avoid argument reassignment & argument slice perf: avoid negotiator recursive construction perf: enable strict mode perf: remove unnecessary bitwise operator 1.2.7 / 2015-05-10 deps: negotiator@0.5.3 Fix media type parameter matching to be case-insensitive 1.2.6 / 2015-05-07 deps: mime-types@~2.0.11 deps: mime-db@~1.9.1 deps: negotiator@0.5.2 Fix comparing media types with quoted values Fix splitting media types with quoted commas 1.2.5 / 2015-03-13 deps: mime-types@~2.0.10 deps: mime-db@~1.8.0 1.2.4 / 2015-02-14 Support Node.js 0.6 deps: mime-types@~2.0.9 deps: mime-db@~1.7.0 deps: negotiator@0.5.1 Fix preference sorting to be stable for long acceptable lists 1.2.3 / 2015-01-31 deps: mime-types@~2.0.8 deps: mime-db@~1.6.0 1.2.2 / 2014-12-30 deps: mime-types@~2.0.7 deps: mime-db@~1.5.0 1.2.1 / 2014-12-30 deps: mime-types@~2.0.5 deps: mime-db@~1.3.1 1.2.0 / 2014-12-19 deps: negotiator@0.5.0 Fix list return order when large accepted list Fix missing identity encoding when q=0 exists Remove dynamic building of Negotiator class 1.1.4 / 2014-12-10 deps: mime-types@~2.0.4 deps: mime-db@~1.3.0 1.1.3 / 2014-11-09 deps: mime-types@~2.0.3 deps: mime-db@~1.2.0 1.1.2 / 2014-10-14 deps: negotiator@0.4.9 Fix error when media type has invalid parameter 1.1.1 / 2014-09-28 deps: mime-types@~2.0.2 deps: mime-db@~1.1.0 deps: negotiator@0.4.8 Fix all negotiations to be case-insensitive Stable sort preferences of same quality according to client order 1.1.0 / 2014-09-02 update mime-types 1.0.7 / 2014-07-04 Fix wrong type returned from type when match after unknown extension 1.0.6 / 2014-06-24 deps: negotiator@0.4.7 1.0.5 / 2014-06-20 fix crash when unknown extension given 1.0.4 / 2014-06-19 use mime-types 1.0.3 / 2014-06-11 deps: negotiator@0.4.6 Order by specificity when quality is the same 1.0.2 / 2014-05-29 Fix interpretation when header not in request deps: pin negotiator@0.4.5 1.0.1 / 2014-01-18 Identity encoding isn't always acceptable deps: negotiator@~0.4.0 1.0.0 / 2013-12-27 Genesis","title":"2.0.0 / 2024-08-31"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#200-2024-08-31","text":"Drop node <18 support deps: mime-types@^3.0.0 deps: negotiator@^1.0.0","title":"2.0.0 / 2024-08-31"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#138-2022-02-02","text":"deps: mime-types@~2.1.34 deps: mime-db@~1.51.0 deps: negotiator@0.6.3","title":"1.3.8 / 2022-02-02"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#137-2019-04-29","text":"deps: negotiator@0.6.2 Fix sorting charset, encoding, and language with extra parameters","title":"1.3.7 / 2019-04-29"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#136-2019-04-28","text":"deps: mime-types@~2.1.24 deps: mime-db@~1.40.0","title":"1.3.6 / 2019-04-28"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#135-2018-02-28","text":"deps: mime-types@~2.1.18 deps: mime-db@~1.33.0","title":"1.3.5 / 2018-02-28"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#134-2017-08-22","text":"deps: mime-types@~2.1.16 deps: mime-db@~1.29.0","title":"1.3.4 / 2017-08-22"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#133-2016-05-02","text":"deps: mime-types@~2.1.11 deps: mime-db@~1.23.0 deps: negotiator@0.6.1 perf: improve Accept parsing speed perf: improve Accept-Charset parsing speed perf: improve Accept-Encoding parsing speed perf: improve Accept-Language parsing speed","title":"1.3.3 / 2016-05-02"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#132-2016-03-08","text":"deps: mime-types@~2.1.10 Fix extension of application/dash+xml Update primary extension for audio/mp4 deps: mime-db@~1.22.0","title":"1.3.2 / 2016-03-08"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#131-2016-01-19","text":"deps: mime-types@~2.1.9 deps: mime-db@~1.21.0","title":"1.3.1 / 2016-01-19"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#130-2015-09-29","text":"deps: mime-types@~2.1.7 deps: mime-db@~1.19.0 deps: negotiator@0.6.0 Fix including type extensions in parameters in Accept parsing Fix parsing Accept parameters with quoted equals Fix parsing Accept parameters with quoted semicolons Lazy-load modules from main entry point perf: delay type concatenation until needed perf: enable strict mode perf: hoist regular expressions perf: remove closures getting spec properties perf: remove a closure from media type parsing perf: remove property delete from media type parsing","title":"1.3.0 / 2015-09-29"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#1213-2015-09-06","text":"deps: mime-types@~2.1.6 deps: mime-db@~1.18.0","title":"1.2.13 / 2015-09-06"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#1212-2015-07-30","text":"deps: mime-types@~2.1.4 deps: mime-db@~1.16.0","title":"1.2.12 / 2015-07-30"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#1211-2015-07-16","text":"deps: mime-types@~2.1.3 deps: mime-db@~1.15.0","title":"1.2.11 / 2015-07-16"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#1210-2015-07-01","text":"deps: mime-types@~2.1.2 deps: mime-db@~1.14.0","title":"1.2.10 / 2015-07-01"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#129-2015-06-08","text":"deps: mime-types@~2.1.1 perf: fix deopt during mapping","title":"1.2.9 / 2015-06-08"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#128-2015-06-07","text":"deps: mime-types@~2.1.0 deps: mime-db@~1.13.0 perf: avoid argument reassignment & argument slice perf: avoid negotiator recursive construction perf: enable strict mode perf: remove unnecessary bitwise operator","title":"1.2.8 / 2015-06-07"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#127-2015-05-10","text":"deps: negotiator@0.5.3 Fix media type parameter matching to be case-insensitive","title":"1.2.7 / 2015-05-10"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#126-2015-05-07","text":"deps: mime-types@~2.0.11 deps: mime-db@~1.9.1 deps: negotiator@0.5.2 Fix comparing media types with quoted values Fix splitting media types with quoted commas","title":"1.2.6 / 2015-05-07"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#125-2015-03-13","text":"deps: mime-types@~2.0.10 deps: mime-db@~1.8.0","title":"1.2.5 / 2015-03-13"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#124-2015-02-14","text":"Support Node.js 0.6 deps: mime-types@~2.0.9 deps: mime-db@~1.7.0 deps: negotiator@0.5.1 Fix preference sorting to be stable for long acceptable lists","title":"1.2.4 / 2015-02-14"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#123-2015-01-31","text":"deps: mime-types@~2.0.8 deps: mime-db@~1.6.0","title":"1.2.3 / 2015-01-31"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#122-2014-12-30","text":"deps: mime-types@~2.0.7 deps: mime-db@~1.5.0","title":"1.2.2 / 2014-12-30"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#121-2014-12-30","text":"deps: mime-types@~2.0.5 deps: mime-db@~1.3.1","title":"1.2.1 / 2014-12-30"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#120-2014-12-19","text":"deps: negotiator@0.5.0 Fix list return order when large accepted list Fix missing identity encoding when q=0 exists Remove dynamic building of Negotiator class","title":"1.2.0 / 2014-12-19"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#114-2014-12-10","text":"deps: mime-types@~2.0.4 deps: mime-db@~1.3.0","title":"1.1.4 / 2014-12-10"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#113-2014-11-09","text":"deps: mime-types@~2.0.3 deps: mime-db@~1.2.0","title":"1.1.3 / 2014-11-09"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#112-2014-10-14","text":"deps: negotiator@0.4.9 Fix error when media type has invalid parameter","title":"1.1.2 / 2014-10-14"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#111-2014-09-28","text":"deps: mime-types@~2.0.2 deps: mime-db@~1.1.0 deps: negotiator@0.4.8 Fix all negotiations to be case-insensitive Stable sort preferences of same quality according to client order","title":"1.1.1 / 2014-09-28"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#110-2014-09-02","text":"update mime-types","title":"1.1.0 / 2014-09-02"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#107-2014-07-04","text":"Fix wrong type returned from type when match after unknown extension","title":"1.0.7 / 2014-07-04"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#106-2014-06-24","text":"deps: negotiator@0.4.7","title":"1.0.6 / 2014-06-24"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#105-2014-06-20","text":"fix crash when unknown extension given","title":"1.0.5 / 2014-06-20"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#104-2014-06-19","text":"use mime-types","title":"1.0.4 / 2014-06-19"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#103-2014-06-11","text":"deps: negotiator@0.4.6 Order by specificity when quality is the same","title":"1.0.3 / 2014-06-11"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#102-2014-05-29","text":"Fix interpretation when header not in request deps: pin negotiator@0.4.5","title":"1.0.2 / 2014-05-29"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#101-2014-01-18","text":"Identity encoding isn't always acceptable deps: negotiator@~0.4.0","title":"1.0.1 / 2014-01-18"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#100-2013-12-27","text":"Genesis","title":"1.0.0 / 2013-12-27"},{"location":"system-desing/crud-app/JS/server/node_modules/anymatch/","text":"anymatch Javascript module to match a string against a regular expression, glob, string, or function that takes the string as an argument and returns a truthy or falsy value. The matcher can also be an array of any or all of these. Useful for allowing a very flexible user-defined config to define things like file paths. Note: This module has Bash-parity, please be aware that Windows-style backslashes are not supported as separators. See https://github.com/micromatch/micromatch#backslashes for more information. Usage npm install anymatch anymatch(matchers, testString, [returnIndex], [options]) matchers : ( Array|String|RegExp|Function ) String to be directly matched, string with glob patterns, regular expression test, function that takes the testString as an argument and returns a truthy value if it should be matched, or an array of any number and mix of these types. testString : ( String|Array ) The string to test against the matchers. If passed as an array, the first element of the array will be used as the testString for non-function matchers, while the entire array will be applied as the arguments for function matchers. options : ( Object [optional]_) Any of the picomatch options. returnIndex : ( Boolean [optional] ) If true, return the array index of the first matcher that that testString matched, or -1 if no match, instead of a boolean result. const anymatch = require ( 'anymatch' ); const matchers = [ 'path/to/file.js' , 'path/anyjs/**/*.js' , /foo.js$/ , string => string . includes ( 'bar' ) && string . length > 10 ] ; anymatch ( matchers , 'path/to/file.js' ); // true anymatch ( matchers , 'path/anyjs/baz.js' ); // true anymatch ( matchers , 'path/to/foo.js' ); // true anymatch ( matchers , 'path/to/bar.js' ); // true anymatch ( matchers , 'bar.js' ); // false // returnIndex = true anymatch ( matchers , 'foo.js' , { returnIndex : true }); // 2 anymatch ( matchers , 'path/anyjs/foo.js' , { returnIndex : true }); // 1 // any picomatc // using globs to match directories and their children anymatch ( 'node_modules' , 'node_modules' ); // true anymatch ( 'node_modules' , 'node_modules/somelib/index.js' ); // false anymatch ( 'node_modules/**' , 'node_modules/somelib/index.js' ); // true anymatch ( 'node_modules/**' , '/absolute/path/to/node_modules/somelib/index.js' ); // false anymatch ( '**/node_modules/**' , '/absolute/path/to/node_modules/somelib/index.js' ); // true const matcher = anymatch ( matchers ); [ 'foo.js' , 'bar.js' ]. filter ( matcher ); // [ 'foo.js' ] anymatch master * \u276f anymatch(matchers) You can also pass in only your matcher(s) to get a curried function that has already been bound to the provided matching criteria. This can be used as an Array#filter callback. var matcher = anymatch ( matchers ); matcher ( 'path/to/file.js' ); // true matcher ( 'path/anyjs/baz.js' , true ); // 1 [ 'foo.js' , 'bar.js' ]. filter ( matcher ); // ['foo.js'] Changelog See release notes page on GitHub v3.0: Removed startIndex and endIndex arguments. Node 8.x-only. v2.0: micromatch moves away from minimatch-parity and inline with Bash. This includes handling backslashes differently (see https://github.com/micromatch/micromatch#backslashes for more information). v1.2: anymatch uses micromatch for glob pattern matching. Issues with glob pattern matching should be reported directly to the micromatch issue tracker . License ISC","title":"anymatch Build Status Coverage Status"},{"location":"system-desing/crud-app/JS/server/node_modules/anymatch/#anymatch","text":"Javascript module to match a string against a regular expression, glob, string, or function that takes the string as an argument and returns a truthy or falsy value. The matcher can also be an array of any or all of these. Useful for allowing a very flexible user-defined config to define things like file paths. Note: This module has Bash-parity, please be aware that Windows-style backslashes are not supported as separators. See https://github.com/micromatch/micromatch#backslashes for more information.","title":"anymatch"},{"location":"system-desing/crud-app/JS/server/node_modules/anymatch/#usage","text":"npm install anymatch","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/anymatch/#anymatchmatchers-teststring-returnindex-options","text":"matchers : ( Array|String|RegExp|Function ) String to be directly matched, string with glob patterns, regular expression test, function that takes the testString as an argument and returns a truthy value if it should be matched, or an array of any number and mix of these types. testString : ( String|Array ) The string to test against the matchers. If passed as an array, the first element of the array will be used as the testString for non-function matchers, while the entire array will be applied as the arguments for function matchers. options : ( Object [optional]_) Any of the picomatch options. returnIndex : ( Boolean [optional] ) If true, return the array index of the first matcher that that testString matched, or -1 if no match, instead of a boolean result. const anymatch = require ( 'anymatch' ); const matchers = [ 'path/to/file.js' , 'path/anyjs/**/*.js' , /foo.js$/ , string => string . includes ( 'bar' ) && string . length > 10 ] ; anymatch ( matchers , 'path/to/file.js' ); // true anymatch ( matchers , 'path/anyjs/baz.js' ); // true anymatch ( matchers , 'path/to/foo.js' ); // true anymatch ( matchers , 'path/to/bar.js' ); // true anymatch ( matchers , 'bar.js' ); // false // returnIndex = true anymatch ( matchers , 'foo.js' , { returnIndex : true }); // 2 anymatch ( matchers , 'path/anyjs/foo.js' , { returnIndex : true }); // 1 // any picomatc // using globs to match directories and their children anymatch ( 'node_modules' , 'node_modules' ); // true anymatch ( 'node_modules' , 'node_modules/somelib/index.js' ); // false anymatch ( 'node_modules/**' , 'node_modules/somelib/index.js' ); // true anymatch ( 'node_modules/**' , '/absolute/path/to/node_modules/somelib/index.js' ); // false anymatch ( '**/node_modules/**' , '/absolute/path/to/node_modules/somelib/index.js' ); // true const matcher = anymatch ( matchers ); [ 'foo.js' , 'bar.js' ]. filter ( matcher ); // [ 'foo.js' ] anymatch master * \u276f","title":"anymatch(matchers, testString, [returnIndex], [options])"},{"location":"system-desing/crud-app/JS/server/node_modules/anymatch/#anymatchmatchers","text":"You can also pass in only your matcher(s) to get a curried function that has already been bound to the provided matching criteria. This can be used as an Array#filter callback. var matcher = anymatch ( matchers ); matcher ( 'path/to/file.js' ); // true matcher ( 'path/anyjs/baz.js' , true ); // 1 [ 'foo.js' , 'bar.js' ]. filter ( matcher ); // ['foo.js']","title":"anymatch(matchers)"},{"location":"system-desing/crud-app/JS/server/node_modules/anymatch/#changelog","text":"See release notes page on GitHub v3.0: Removed startIndex and endIndex arguments. Node 8.x-only. v2.0: micromatch moves away from minimatch-parity and inline with Bash. This includes handling backslashes differently (see https://github.com/micromatch/micromatch#backslashes for more information). v1.2: anymatch uses micromatch for glob pattern matching. Issues with glob pattern matching should be reported directly to the micromatch issue tracker .","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/anymatch/#license","text":"ISC","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/balanced-match/","text":"balanced-match Match balanced string pairs, like { and } or <b> and </b> . Supports regular expressions as well! Example Get the first matching pair of braces: var balanced = require ( 'balanced-match' ); console . log ( balanced ( '{' , '}' , 'pre{in{nested}}post' )); console . log ( balanced ( '{' , '}' , 'pre{first}between{second}post' )); console . log ( balanced ( /\\s+\\{\\s+/ , /\\s+\\}\\s+/ , 'pre { in{nest} } post' )); The matches are: $ node example.js { start: 3 , end: 14 , pre: 'pre' , body: 'in{nested}' , post: 'post' } { start: 3 , end: 9 , pre: 'pre' , body: 'first' , post: 'between{second}post' } { start: 3 , end: 17 , pre: 'pre' , body: 'in{nest}' , post: 'post' } API var m = balanced(a, b, str) For the first non-nested matching pair of a and b in str , return an object with those keys: start the index of the first match of a end the index of the matching b pre the preamble, a and b not included body the match, a and b not included post the postscript, a and b not included If there's no match, undefined will be returned. If the str contains more a than b / there are unmatched pairs, the first match that was closed will be used. For example, {{a} will match ['{', 'a', ''] and {a}} will match ['', 'a', '}'] . var r = balanced.range(a, b, str) For the first non-nested matching pair of a and b in str , return an array with indexes: [ <a index>, <b index> ] . If there's no match, undefined will be returned. If the str contains more a than b / there are unmatched pairs, the first match that was closed will be used. For example, {{a} will match [ 1, 3 ] and {a}} will match [0, 2] . Installation With npm do: npm install balanced-match Security contact information To report a security vulnerability, please use the Tidelift security contact . Tidelift will coordinate the fix and disclosure. License (MIT) Copyright (c) 2013 Julian Gruber <julian@juliangruber.com> Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"balanced-match"},{"location":"system-desing/crud-app/JS/server/node_modules/balanced-match/#balanced-match","text":"Match balanced string pairs, like { and } or <b> and </b> . Supports regular expressions as well!","title":"balanced-match"},{"location":"system-desing/crud-app/JS/server/node_modules/balanced-match/#example","text":"Get the first matching pair of braces: var balanced = require ( 'balanced-match' ); console . log ( balanced ( '{' , '}' , 'pre{in{nested}}post' )); console . log ( balanced ( '{' , '}' , 'pre{first}between{second}post' )); console . log ( balanced ( /\\s+\\{\\s+/ , /\\s+\\}\\s+/ , 'pre { in{nest} } post' )); The matches are: $ node example.js { start: 3 , end: 14 , pre: 'pre' , body: 'in{nested}' , post: 'post' } { start: 3 , end: 9 , pre: 'pre' , body: 'first' , post: 'between{second}post' } { start: 3 , end: 17 , pre: 'pre' , body: 'in{nest}' , post: 'post' }","title":"Example"},{"location":"system-desing/crud-app/JS/server/node_modules/balanced-match/#api","text":"","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/balanced-match/#var-m-balanceda-b-str","text":"For the first non-nested matching pair of a and b in str , return an object with those keys: start the index of the first match of a end the index of the matching b pre the preamble, a and b not included body the match, a and b not included post the postscript, a and b not included If there's no match, undefined will be returned. If the str contains more a than b / there are unmatched pairs, the first match that was closed will be used. For example, {{a} will match ['{', 'a', ''] and {a}} will match ['', 'a', '}'] .","title":"var m = balanced(a, b, str)"},{"location":"system-desing/crud-app/JS/server/node_modules/balanced-match/#var-r-balancedrangea-b-str","text":"For the first non-nested matching pair of a and b in str , return an array with indexes: [ <a index>, <b index> ] . If there's no match, undefined will be returned. If the str contains more a than b / there are unmatched pairs, the first match that was closed will be used. For example, {{a} will match [ 1, 3 ] and {a}} will match [0, 2] .","title":"var r = balanced.range(a, b, str)"},{"location":"system-desing/crud-app/JS/server/node_modules/balanced-match/#installation","text":"With npm do: npm install balanced-match","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/balanced-match/#security-contact-information","text":"To report a security vulnerability, please use the Tidelift security contact . Tidelift will coordinate the fix and disclosure.","title":"Security contact information"},{"location":"system-desing/crud-app/JS/server/node_modules/balanced-match/#license","text":"(MIT) Copyright (c) 2013 Julian Gruber <julian@juliangruber.com> Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/balanced-match/LICENSE/","text":"(MIT) Copyright (c) 2013 Julian Gruber <julian@juliangruber.com> Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/","text":"basic-auth Generic basic auth Authorization header field parser for whatever. Installation This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install basic-auth API var auth = require ( 'basic-auth' ) auth(req) Get the basic auth credentials from the given request. The Authorization header is parsed and if the header is invalid, undefined is returned, otherwise an object with name and pass properties. auth.parse(string) Parse a basic auth authorization header string. This will return an object with name and pass properties, or undefined if the string is invalid. Example Pass a Node.js request object to the module export. If parsing fails undefined is returned, otherwise an object with .name and .pass . var auth = require ( 'basic-auth' ) var user = auth ( req ) // => { name: 'something', pass: 'whatever' } A header string from any other location can also be parsed with auth.parse , for example a Proxy-Authorization header: var auth = require ( 'basic-auth' ) var user = auth . parse ( req . getHeader ( 'Proxy-Authorization' )) With vanilla node.js http server var http = require ( 'http' ) var auth = require ( 'basic-auth' ) var compare = require ( 'tsscmp' ) // Create server var server = http . createServer ( function ( req , res ) { var credentials = auth ( req ) // Check credentials // The \"check\" function will typically be against your user store if ( ! credentials || ! check ( credentials . name , credentials . pass )) { res . statusCode = 401 res . setHeader ( 'WWW-Authenticate' , 'Basic realm=\"example\"' ) res . end ( 'Access denied' ) } else { res . end ( 'Access granted' ) } }) // Basic function to validate credentials for example function check ( name , pass ) { var valid = true // Simple method to prevent short-circut and use timing-safe compare valid = compare ( name , 'john' ) && valid valid = compare ( pass , 'secret' ) && valid return valid } // Listen server . listen ( 3000 ) License MIT","title":"basic-auth"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/#basic-auth","text":"Generic basic auth Authorization header field parser for whatever.","title":"basic-auth"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/#installation","text":"This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install basic-auth","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/#api","text":"var auth = require ( 'basic-auth' )","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/#authreq","text":"Get the basic auth credentials from the given request. The Authorization header is parsed and if the header is invalid, undefined is returned, otherwise an object with name and pass properties.","title":"auth(req)"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/#authparsestring","text":"Parse a basic auth authorization header string. This will return an object with name and pass properties, or undefined if the string is invalid.","title":"auth.parse(string)"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/#example","text":"Pass a Node.js request object to the module export. If parsing fails undefined is returned, otherwise an object with .name and .pass . var auth = require ( 'basic-auth' ) var user = auth ( req ) // => { name: 'something', pass: 'whatever' } A header string from any other location can also be parsed with auth.parse , for example a Proxy-Authorization header: var auth = require ( 'basic-auth' ) var user = auth . parse ( req . getHeader ( 'Proxy-Authorization' ))","title":"Example"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/#with-vanilla-nodejs-http-server","text":"var http = require ( 'http' ) var auth = require ( 'basic-auth' ) var compare = require ( 'tsscmp' ) // Create server var server = http . createServer ( function ( req , res ) { var credentials = auth ( req ) // Check credentials // The \"check\" function will typically be against your user store if ( ! credentials || ! check ( credentials . name , credentials . pass )) { res . statusCode = 401 res . setHeader ( 'WWW-Authenticate' , 'Basic realm=\"example\"' ) res . end ( 'Access denied' ) } else { res . end ( 'Access granted' ) } }) // Basic function to validate credentials for example function check ( name , pass ) { var valid = true // Simple method to prevent short-circut and use timing-safe compare valid = compare ( name , 'john' ) && valid valid = compare ( pass , 'secret' ) && valid return valid } // Listen server . listen ( 3000 )","title":"With vanilla node.js http server"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/HISTORY/","text":"2.0.1 / 2018-09-19 deps: safe-buffer@5.1.2 2.0.0 / 2017-09-12 Drop support for Node.js below 0.8 Remove auth(ctx) signature -- pass in header or auth(ctx.req) Use safe-buffer for improved Buffer API 1.1.0 / 2016-11-18 Add auth.parse for low-level string parsing 1.0.4 / 2016-05-10 Improve error message when req argument is not an object Improve error message when req missing headers property 1.0.3 / 2015-07-01 Fix regression accepting a Koa context 1.0.2 / 2015-06-12 Improve error message when req argument missing perf: enable strict mode perf: hoist regular expression perf: parse with regular expressions perf: remove argument reassignment 1.0.1 / 2015-05-04 Update readme 1.0.0 / 2014-07-01 Support empty password Support empty username 0.0.1 / 2013-11-30 Initial release","title":"2.0.1 / 2018-09-19"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/HISTORY/#201-2018-09-19","text":"deps: safe-buffer@5.1.2","title":"2.0.1 / 2018-09-19"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/HISTORY/#200-2017-09-12","text":"Drop support for Node.js below 0.8 Remove auth(ctx) signature -- pass in header or auth(ctx.req) Use safe-buffer for improved Buffer API","title":"2.0.0 / 2017-09-12"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/HISTORY/#110-2016-11-18","text":"Add auth.parse for low-level string parsing","title":"1.1.0 / 2016-11-18"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/HISTORY/#104-2016-05-10","text":"Improve error message when req argument is not an object Improve error message when req missing headers property","title":"1.0.4 / 2016-05-10"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/HISTORY/#103-2015-07-01","text":"Fix regression accepting a Koa context","title":"1.0.3 / 2015-07-01"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/HISTORY/#102-2015-06-12","text":"Improve error message when req argument missing perf: enable strict mode perf: hoist regular expression perf: parse with regular expressions perf: remove argument reassignment","title":"1.0.2 / 2015-06-12"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/HISTORY/#101-2015-05-04","text":"Update readme","title":"1.0.1 / 2015-05-04"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/HISTORY/#100-2014-07-01","text":"Support empty password Support empty username","title":"1.0.0 / 2014-07-01"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/HISTORY/#001-2013-11-30","text":"Initial release","title":"0.0.1 / 2013-11-30"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/","text":"safe-buffer Safer Node.js Buffer API Use the new Node.js Buffer APIs ( Buffer.from , Buffer.alloc , Buffer.allocUnsafe , Buffer.allocUnsafeSlow ) in all versions of Node.js. Uses the built-in implementation when available. install npm install safe-buffer usage The goal of this package is to provide a safe replacement for the node.js Buffer . It's a drop-in replacement for Buffer . You can use it by adding one require line to the top of your node.js modules: var Buffer = require ( 'safe-buffer' ). Buffer // Existing buffer code will continue to work without issues: new Buffer ( 'hey' , 'utf8' ) new Buffer ([ 1 , 2 , 3 ], 'utf8' ) new Buffer ( obj ) new Buffer ( 16 ) // create an uninitialized buffer (potentially unsafe) // But you can use these new explicit APIs to make clear what you want: Buffer . from ( 'hey' , 'utf8' ) // convert from many types to a Buffer Buffer . alloc ( 16 ) // create a zero-filled buffer (safe) Buffer . allocUnsafe ( 16 ) // create an uninitialized buffer (potentially unsafe) api Class Method: Buffer.from(array) array {Array} Allocates a new Buffer using an array of octets. const buf = Buffer . from ([ 0x62 , 0x75 , 0x66 , 0x66 , 0x65 , 0x72 ]); // creates a new Buffer containing ASCII bytes // ['b','u','f','f','e','r'] A TypeError will be thrown if array is not an Array . Class Method: Buffer.from(arrayBuffer[, byteOffset[, length]]) arrayBuffer {ArrayBuffer} The .buffer property of a TypedArray or a new ArrayBuffer() byteOffset {Number} Default: 0 length {Number} Default: arrayBuffer.length - byteOffset When passed a reference to the .buffer property of a TypedArray instance, the newly created Buffer will share the same allocated memory as the TypedArray. const arr = new Uint16Array ( 2 ); arr [ 0 ] = 5000 ; arr [ 1 ] = 4000 ; const buf = Buffer . from ( arr . buffer ); // shares the memory with arr; console . log ( buf ); // Prints: <Buffer 88 13 a0 0f> // changing the TypedArray changes the Buffer also arr [ 1 ] = 6000 ; console . log ( buf ); // Prints: <Buffer 88 13 70 17> The optional byteOffset and length arguments specify a memory range within the arrayBuffer that will be shared by the Buffer . const ab = new ArrayBuffer ( 10 ); const buf = Buffer . from ( ab , 0 , 2 ); console . log ( buf . length ); // Prints: 2 A TypeError will be thrown if arrayBuffer is not an ArrayBuffer . Class Method: Buffer.from(buffer) buffer {Buffer} Copies the passed buffer data onto a new Buffer instance. const buf1 = Buffer . from ( 'buffer' ); const buf2 = Buffer . from ( buf1 ); buf1 [ 0 ] = 0x61 ; console . log ( buf1 . toString ()); // 'auffer' console . log ( buf2 . toString ()); // 'buffer' (copy is not changed) A TypeError will be thrown if buffer is not a Buffer . Class Method: Buffer.from(str[, encoding]) str {String} String to encode. encoding {String} Encoding to use, Default: 'utf8' Creates a new Buffer containing the given JavaScript string str . If provided, the encoding parameter identifies the character encoding. If not provided, encoding defaults to 'utf8' . const buf1 = Buffer . from ( 'this is a t\u00e9st' ); console . log ( buf1 . toString ()); // prints: this is a t\u00e9st console . log ( buf1 . toString ( 'ascii' )); // prints: this is a tC)st const buf2 = Buffer . from ( '7468697320697320612074c3a97374' , 'hex' ); console . log ( buf2 . toString ()); // prints: this is a t\u00e9st A TypeError will be thrown if str is not a string. Class Method: Buffer.alloc(size[, fill[, encoding]]) size {Number} fill {Value} Default: undefined encoding {String} Default: utf8 Allocates a new Buffer of size bytes. If fill is undefined , the Buffer will be zero-filled . const buf = Buffer . alloc ( 5 ); console . log ( buf ); // <Buffer 00 00 00 00 00> The size must be less than or equal to the value of require('buffer').kMaxLength (on 64-bit architectures, kMaxLength is (2^31)-1 ). Otherwise, a [ RangeError ][] is thrown. A zero-length Buffer will be created if a size less than or equal to 0 is specified. If fill is specified, the allocated Buffer will be initialized by calling buf.fill(fill) . See [ buf.fill() ][] for more information. const buf = Buffer . alloc ( 5 , 'a' ); console . log ( buf ); // <Buffer 61 61 61 61 61> If both fill and encoding are specified, the allocated Buffer will be initialized by calling buf.fill(fill, encoding) . For example: const buf = Buffer . alloc ( 11 , 'aGVsbG8gd29ybGQ=' , 'base64' ); console . log ( buf ); // <Buffer 68 65 6c 6c 6f 20 77 6f 72 6c 64> Calling Buffer.alloc(size) can be significantly slower than the alternative Buffer.allocUnsafe(size) but ensures that the newly created Buffer instance contents will never contain sensitive data . A TypeError will be thrown if size is not a number. Class Method: Buffer.allocUnsafe(size) size {Number} Allocates a new non-zero-filled Buffer of size bytes. The size must be less than or equal to the value of require('buffer').kMaxLength (on 64-bit architectures, kMaxLength is (2^31)-1 ). Otherwise, a [ RangeError ][] is thrown. A zero-length Buffer will be created if a size less than or equal to 0 is specified. The underlying memory for Buffer instances created in this way is not initialized . The contents of the newly created Buffer are unknown and may contain sensitive data . Use [ buf.fill(0) ][] to initialize such Buffer instances to zeroes. const buf = Buffer . allocUnsafe ( 5 ); console . log ( buf ); // <Buffer 78 e0 82 02 01> // (octets will be different, every time) buf . fill ( 0 ); console . log ( buf ); // <Buffer 00 00 00 00 00> A TypeError will be thrown if size is not a number. Note that the Buffer module pre-allocates an internal Buffer instance of size Buffer.poolSize that is used as a pool for the fast allocation of new Buffer instances created using Buffer.allocUnsafe(size) (and the deprecated new Buffer(size) constructor) only when size is less than or equal to Buffer.poolSize >> 1 (floor of Buffer.poolSize divided by two). The default value of Buffer.poolSize is 8192 but can be modified. Use of this pre-allocated internal memory pool is a key difference between calling Buffer.alloc(size, fill) vs. Buffer.allocUnsafe(size).fill(fill) . Specifically, Buffer.alloc(size, fill) will never use the internal Buffer pool, while Buffer.allocUnsafe(size).fill(fill) will use the internal Buffer pool if size is less than or equal to half Buffer.poolSize . The difference is subtle but can be important when an application requires the additional performance that Buffer.allocUnsafe(size) provides. Class Method: Buffer.allocUnsafeSlow(size) size {Number} Allocates a new non-zero-filled and non-pooled Buffer of size bytes. The size must be less than or equal to the value of require('buffer').kMaxLength (on 64-bit architectures, kMaxLength is (2^31)-1 ). Otherwise, a [ RangeError ][] is thrown. A zero-length Buffer will be created if a size less than or equal to 0 is specified. The underlying memory for Buffer instances created in this way is not initialized . The contents of the newly created Buffer are unknown and may contain sensitive data . Use [ buf.fill(0) ][] to initialize such Buffer instances to zeroes. When using Buffer.allocUnsafe() to allocate new Buffer instances, allocations under 4KB are, by default, sliced from a single pre-allocated Buffer . This allows applications to avoid the garbage collection overhead of creating many individually allocated Buffers. This approach improves both performance and memory usage by eliminating the need to track and cleanup as many Persistent objects. However, in the case where a developer may need to retain a small chunk of memory from a pool for an indeterminate amount of time, it may be appropriate to create an un-pooled Buffer instance using Buffer.allocUnsafeSlow() then copy out the relevant bits. // need to keep around a few small chunks of memory const store = []; socket . on ( 'readable' , () => { const data = socket . read (); // allocate for retained data const sb = Buffer . allocUnsafeSlow ( 10 ); // copy the data into the new allocation data . copy ( sb , 0 , 0 , 10 ); store . push ( sb ); }); Use of Buffer.allocUnsafeSlow() should be used only as a last resort after a developer has observed undue memory retention in their applications. A TypeError will be thrown if size is not a number. All the Rest The rest of the Buffer API is exactly the same as in node.js. See the docs . Related links Node.js issue: Buffer(number) is unsafe Node.js Enhancement Proposal: Buffer.from/Buffer.alloc/Buffer.zalloc/Buffer() soft-deprecate Why is Buffer unsafe? Today, the node.js Buffer constructor is overloaded to handle many different argument types like String , Array , Object , TypedArrayView ( Uint8Array , etc.), ArrayBuffer , and also Number . The API is optimized for convenience: you can throw any type at it, and it will try to do what you want. Because the Buffer constructor is so powerful, you often see code like this: // Convert UTF-8 strings to hex function toHex ( str ) { return new Buffer ( str ). toString ( 'hex' ) } But what happens if toHex is called with a Number argument? Remote Memory Disclosure If an attacker can make your program call the Buffer constructor with a Number argument, then they can make it allocate uninitialized memory from the node.js process. This could potentially disclose TLS private keys, user data, or database passwords. When the Buffer constructor is passed a Number argument, it returns an UNINITIALIZED block of memory of the specified size . When you create a Buffer like this, you MUST overwrite the contents before returning it to the user. From the node.js docs : new Buffer(size) size Number The underlying memory for Buffer instances created in this way is not initialized. The contents of a newly created Buffer are unknown and could contain sensitive data. Use buf.fill(0) to initialize a Buffer to zeroes. (Emphasis our own.) Whenever the programmer intended to create an uninitialized Buffer you often see code like this: var buf = new Buffer ( 16 ) // Immediately overwrite the uninitialized buffer with data from another buffer for ( var i = 0 ; i < buf . length ; i ++ ) { buf [ i ] = otherBuf [ i ] } Would this ever be a problem in real code? Yes. It's surprisingly common to forget to check the type of your variables in a dynamically-typed language like JavaScript. Usually the consequences of assuming the wrong type is that your program crashes with an uncaught exception. But the failure mode for forgetting to check the type of arguments to the Buffer constructor is more catastrophic. Here's an example of a vulnerable service that takes a JSON payload and converts it to hex: // Take a JSON payload {str: \"some string\"} and convert it to hex var server = http . createServer ( function ( req , res ) { var data = '' req . setEncoding ( 'utf8' ) req . on ( 'data' , function ( chunk ) { data += chunk }) req . on ( 'end' , function () { var body = JSON . parse ( data ) res . end ( new Buffer ( body . str ). toString ( 'hex' )) }) }) server . listen ( 8080 ) In this example, an http client just has to send: { \"str\" : 1000 } and it will get back 1,000 bytes of uninitialized memory from the server. This is a very serious bug. It's similar in severity to the the Heartbleed bug that allowed disclosure of OpenSSL process memory by remote attackers. Which real-world packages were vulnerable? bittorrent-dht Mathias Buus and I ( Feross Aboukhadijeh ) found this issue in one of our own packages, bittorrent-dht . The bug would allow anyone on the internet to send a series of messages to a user of bittorrent-dht and get them to reveal 20 bytes at a time of uninitialized memory from the node.js process. Here's the commit that fixed it. We released a new fixed version, created a Node Security Project disclosure , and deprecated all vulnerable versions on npm so users will get a warning to upgrade to a newer version. ws That got us wondering if there were other vulnerable packages. Sure enough, within a short period of time, we found the same issue in ws , the most popular WebSocket implementation in node.js. If certain APIs were called with Number parameters instead of String or Buffer as expected, then uninitialized server memory would be disclosed to the remote peer. These were the vulnerable methods: socket . send ( number ) socket . ping ( number ) socket . pong ( number ) Here's a vulnerable socket server with some echo functionality: server . on ( 'connection' , function ( socket ) { socket . on ( 'message' , function ( message ) { message = JSON . parse ( message ) if ( message . type === 'echo' ) { socket . send ( message . data ) // send back the user's message } }) }) socket.send(number) called on the server, will disclose server memory. Here's the release where the issue was fixed, with a more detailed explanation. Props to Arnout Kazemier for the quick fix. Here's the Node Security Project disclosure . What's the solution? It's important that node.js offers a fast way to get memory otherwise performance-critical applications would needlessly get a lot slower. But we need a better way to signal our intent as programmers. When we want uninitialized memory, we should request it explicitly. Sensitive functionality should not be packed into a developer-friendly API that loosely accepts many different types. This type of API encourages the lazy practice of passing variables in without checking the type very carefully. A new API: Buffer.allocUnsafe(number) The functionality of creating buffers with uninitialized memory should be part of another API. We propose Buffer.allocUnsafe(number) . This way, it's not part of an API that frequently gets user input of all sorts of different types passed into it. var buf = Buffer . allocUnsafe ( 16 ) // careful, uninitialized memory! // Immediately overwrite the uninitialized buffer with data from another buffer for ( var i = 0 ; i < buf . length ; i ++ ) { buf [ i ] = otherBuf [ i ] } How do we fix node.js core? We sent a PR to node.js core (merged as semver-major ) which defends against one case: var str = 16 new Buffer ( str , 'utf8' ) In this situation, it's implied that the programmer intended the first argument to be a string, since they passed an encoding as a second argument. Today, node.js will allocate uninitialized memory in the case of new Buffer(number, encoding) , which is probably not what the programmer intended. But this is only a partial solution, since if the programmer does new Buffer(variable) (without an encoding parameter) there's no way to know what they intended. If variable is sometimes a number, then uninitialized memory will sometimes be returned. What's the real long-term fix? We could deprecate and remove new Buffer(number) and use Buffer.allocUnsafe(number) when we need uninitialized memory. But that would break 1000s of packages. ~~We believe the best solution is to:~~ ~~1. Change new Buffer(number) to return safe, zeroed-out memory~~ ~~2. Create a new API for creating uninitialized Buffers. We propose: Buffer.allocUnsafe(number) ~~ Update We now support adding three new APIs: Buffer.from(value) - convert from any type to a buffer Buffer.alloc(size) - create a zero-filled buffer Buffer.allocUnsafe(size) - create an uninitialized buffer with given size This solves the core problem that affected ws and bittorrent-dht which is Buffer(variable) getting tricked into taking a number argument. This way, existing code continues working and the impact on the npm ecosystem will be minimal. Over time, npm maintainers can migrate performance-critical code to use Buffer.allocUnsafe(number) instead of new Buffer(number) . Conclusion We think there's a serious design issue with the Buffer API as it exists today. It promotes insecure software by putting high-risk functionality into a convenient API with friendly \"developer ergonomics\". This wasn't merely a theoretical exercise because we found the issue in some of the most popular npm packages. Fortunately, there's an easy fix that can be applied today. Use safe-buffer in place of buffer . var Buffer = require ( 'safe-buffer' ). Buffer Eventually, we hope that node.js core can switch to this new, safer behavior. We believe the impact on the ecosystem would be minimal since it's not a breaking change. Well-maintained, popular packages would be updated to use Buffer.alloc quickly, while older, insecure packages would magically become safe from this attack vector. links Node.js PR: buffer: throw if both length and enc are passed Node Security Project disclosure for ws Node Security Project disclosure for bittorrent-dht credit The original issues in bittorrent-dht ( disclosure ) and ws ( disclosure ) were discovered by Mathias Buus and Feross Aboukhadijeh . Thanks to Adam Baldwin for helping disclose these issues and for his work running the Node Security Project . Thanks to John Hiesey for proofreading this README and auditing the code. license MIT. Copyright (C) Feross Aboukhadijeh","title":"safe-buffer travis npm downloads javascript style guide"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#safe-buffer","text":"","title":"safe-buffer"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#safer-nodejs-buffer-api","text":"Use the new Node.js Buffer APIs ( Buffer.from , Buffer.alloc , Buffer.allocUnsafe , Buffer.allocUnsafeSlow ) in all versions of Node.js. Uses the built-in implementation when available.","title":"Safer Node.js Buffer API"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#install","text":"npm install safe-buffer","title":"install"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#usage","text":"The goal of this package is to provide a safe replacement for the node.js Buffer . It's a drop-in replacement for Buffer . You can use it by adding one require line to the top of your node.js modules: var Buffer = require ( 'safe-buffer' ). Buffer // Existing buffer code will continue to work without issues: new Buffer ( 'hey' , 'utf8' ) new Buffer ([ 1 , 2 , 3 ], 'utf8' ) new Buffer ( obj ) new Buffer ( 16 ) // create an uninitialized buffer (potentially unsafe) // But you can use these new explicit APIs to make clear what you want: Buffer . from ( 'hey' , 'utf8' ) // convert from many types to a Buffer Buffer . alloc ( 16 ) // create a zero-filled buffer (safe) Buffer . allocUnsafe ( 16 ) // create an uninitialized buffer (potentially unsafe)","title":"usage"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#api","text":"","title":"api"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#class-method-bufferfromarray","text":"array {Array} Allocates a new Buffer using an array of octets. const buf = Buffer . from ([ 0x62 , 0x75 , 0x66 , 0x66 , 0x65 , 0x72 ]); // creates a new Buffer containing ASCII bytes // ['b','u','f','f','e','r'] A TypeError will be thrown if array is not an Array .","title":"Class Method: Buffer.from(array)"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#class-method-bufferfromarraybuffer-byteoffset-length","text":"arrayBuffer {ArrayBuffer} The .buffer property of a TypedArray or a new ArrayBuffer() byteOffset {Number} Default: 0 length {Number} Default: arrayBuffer.length - byteOffset When passed a reference to the .buffer property of a TypedArray instance, the newly created Buffer will share the same allocated memory as the TypedArray. const arr = new Uint16Array ( 2 ); arr [ 0 ] = 5000 ; arr [ 1 ] = 4000 ; const buf = Buffer . from ( arr . buffer ); // shares the memory with arr; console . log ( buf ); // Prints: <Buffer 88 13 a0 0f> // changing the TypedArray changes the Buffer also arr [ 1 ] = 6000 ; console . log ( buf ); // Prints: <Buffer 88 13 70 17> The optional byteOffset and length arguments specify a memory range within the arrayBuffer that will be shared by the Buffer . const ab = new ArrayBuffer ( 10 ); const buf = Buffer . from ( ab , 0 , 2 ); console . log ( buf . length ); // Prints: 2 A TypeError will be thrown if arrayBuffer is not an ArrayBuffer .","title":"Class Method: Buffer.from(arrayBuffer[, byteOffset[, length]])"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#class-method-bufferfrombuffer","text":"buffer {Buffer} Copies the passed buffer data onto a new Buffer instance. const buf1 = Buffer . from ( 'buffer' ); const buf2 = Buffer . from ( buf1 ); buf1 [ 0 ] = 0x61 ; console . log ( buf1 . toString ()); // 'auffer' console . log ( buf2 . toString ()); // 'buffer' (copy is not changed) A TypeError will be thrown if buffer is not a Buffer .","title":"Class Method: Buffer.from(buffer)"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#class-method-bufferfromstr-encoding","text":"str {String} String to encode. encoding {String} Encoding to use, Default: 'utf8' Creates a new Buffer containing the given JavaScript string str . If provided, the encoding parameter identifies the character encoding. If not provided, encoding defaults to 'utf8' . const buf1 = Buffer . from ( 'this is a t\u00e9st' ); console . log ( buf1 . toString ()); // prints: this is a t\u00e9st console . log ( buf1 . toString ( 'ascii' )); // prints: this is a tC)st const buf2 = Buffer . from ( '7468697320697320612074c3a97374' , 'hex' ); console . log ( buf2 . toString ()); // prints: this is a t\u00e9st A TypeError will be thrown if str is not a string.","title":"Class Method: Buffer.from(str[, encoding])"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#class-method-bufferallocsize-fill-encoding","text":"size {Number} fill {Value} Default: undefined encoding {String} Default: utf8 Allocates a new Buffer of size bytes. If fill is undefined , the Buffer will be zero-filled . const buf = Buffer . alloc ( 5 ); console . log ( buf ); // <Buffer 00 00 00 00 00> The size must be less than or equal to the value of require('buffer').kMaxLength (on 64-bit architectures, kMaxLength is (2^31)-1 ). Otherwise, a [ RangeError ][] is thrown. A zero-length Buffer will be created if a size less than or equal to 0 is specified. If fill is specified, the allocated Buffer will be initialized by calling buf.fill(fill) . See [ buf.fill() ][] for more information. const buf = Buffer . alloc ( 5 , 'a' ); console . log ( buf ); // <Buffer 61 61 61 61 61> If both fill and encoding are specified, the allocated Buffer will be initialized by calling buf.fill(fill, encoding) . For example: const buf = Buffer . alloc ( 11 , 'aGVsbG8gd29ybGQ=' , 'base64' ); console . log ( buf ); // <Buffer 68 65 6c 6c 6f 20 77 6f 72 6c 64> Calling Buffer.alloc(size) can be significantly slower than the alternative Buffer.allocUnsafe(size) but ensures that the newly created Buffer instance contents will never contain sensitive data . A TypeError will be thrown if size is not a number.","title":"Class Method: Buffer.alloc(size[, fill[, encoding]])"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#class-method-bufferallocunsafesize","text":"size {Number} Allocates a new non-zero-filled Buffer of size bytes. The size must be less than or equal to the value of require('buffer').kMaxLength (on 64-bit architectures, kMaxLength is (2^31)-1 ). Otherwise, a [ RangeError ][] is thrown. A zero-length Buffer will be created if a size less than or equal to 0 is specified. The underlying memory for Buffer instances created in this way is not initialized . The contents of the newly created Buffer are unknown and may contain sensitive data . Use [ buf.fill(0) ][] to initialize such Buffer instances to zeroes. const buf = Buffer . allocUnsafe ( 5 ); console . log ( buf ); // <Buffer 78 e0 82 02 01> // (octets will be different, every time) buf . fill ( 0 ); console . log ( buf ); // <Buffer 00 00 00 00 00> A TypeError will be thrown if size is not a number. Note that the Buffer module pre-allocates an internal Buffer instance of size Buffer.poolSize that is used as a pool for the fast allocation of new Buffer instances created using Buffer.allocUnsafe(size) (and the deprecated new Buffer(size) constructor) only when size is less than or equal to Buffer.poolSize >> 1 (floor of Buffer.poolSize divided by two). The default value of Buffer.poolSize is 8192 but can be modified. Use of this pre-allocated internal memory pool is a key difference between calling Buffer.alloc(size, fill) vs. Buffer.allocUnsafe(size).fill(fill) . Specifically, Buffer.alloc(size, fill) will never use the internal Buffer pool, while Buffer.allocUnsafe(size).fill(fill) will use the internal Buffer pool if size is less than or equal to half Buffer.poolSize . The difference is subtle but can be important when an application requires the additional performance that Buffer.allocUnsafe(size) provides.","title":"Class Method: Buffer.allocUnsafe(size)"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#class-method-bufferallocunsafeslowsize","text":"size {Number} Allocates a new non-zero-filled and non-pooled Buffer of size bytes. The size must be less than or equal to the value of require('buffer').kMaxLength (on 64-bit architectures, kMaxLength is (2^31)-1 ). Otherwise, a [ RangeError ][] is thrown. A zero-length Buffer will be created if a size less than or equal to 0 is specified. The underlying memory for Buffer instances created in this way is not initialized . The contents of the newly created Buffer are unknown and may contain sensitive data . Use [ buf.fill(0) ][] to initialize such Buffer instances to zeroes. When using Buffer.allocUnsafe() to allocate new Buffer instances, allocations under 4KB are, by default, sliced from a single pre-allocated Buffer . This allows applications to avoid the garbage collection overhead of creating many individually allocated Buffers. This approach improves both performance and memory usage by eliminating the need to track and cleanup as many Persistent objects. However, in the case where a developer may need to retain a small chunk of memory from a pool for an indeterminate amount of time, it may be appropriate to create an un-pooled Buffer instance using Buffer.allocUnsafeSlow() then copy out the relevant bits. // need to keep around a few small chunks of memory const store = []; socket . on ( 'readable' , () => { const data = socket . read (); // allocate for retained data const sb = Buffer . allocUnsafeSlow ( 10 ); // copy the data into the new allocation data . copy ( sb , 0 , 0 , 10 ); store . push ( sb ); }); Use of Buffer.allocUnsafeSlow() should be used only as a last resort after a developer has observed undue memory retention in their applications. A TypeError will be thrown if size is not a number.","title":"Class Method: Buffer.allocUnsafeSlow(size)"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#all-the-rest","text":"The rest of the Buffer API is exactly the same as in node.js. See the docs .","title":"All the Rest"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#related-links","text":"Node.js issue: Buffer(number) is unsafe Node.js Enhancement Proposal: Buffer.from/Buffer.alloc/Buffer.zalloc/Buffer() soft-deprecate","title":"Related links"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#why-is-buffer-unsafe","text":"Today, the node.js Buffer constructor is overloaded to handle many different argument types like String , Array , Object , TypedArrayView ( Uint8Array , etc.), ArrayBuffer , and also Number . The API is optimized for convenience: you can throw any type at it, and it will try to do what you want. Because the Buffer constructor is so powerful, you often see code like this: // Convert UTF-8 strings to hex function toHex ( str ) { return new Buffer ( str ). toString ( 'hex' ) } But what happens if toHex is called with a Number argument?","title":"Why is Buffer unsafe?"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#remote-memory-disclosure","text":"If an attacker can make your program call the Buffer constructor with a Number argument, then they can make it allocate uninitialized memory from the node.js process. This could potentially disclose TLS private keys, user data, or database passwords. When the Buffer constructor is passed a Number argument, it returns an UNINITIALIZED block of memory of the specified size . When you create a Buffer like this, you MUST overwrite the contents before returning it to the user. From the node.js docs : new Buffer(size) size Number The underlying memory for Buffer instances created in this way is not initialized. The contents of a newly created Buffer are unknown and could contain sensitive data. Use buf.fill(0) to initialize a Buffer to zeroes. (Emphasis our own.) Whenever the programmer intended to create an uninitialized Buffer you often see code like this: var buf = new Buffer ( 16 ) // Immediately overwrite the uninitialized buffer with data from another buffer for ( var i = 0 ; i < buf . length ; i ++ ) { buf [ i ] = otherBuf [ i ] }","title":"Remote Memory Disclosure"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#would-this-ever-be-a-problem-in-real-code","text":"Yes. It's surprisingly common to forget to check the type of your variables in a dynamically-typed language like JavaScript. Usually the consequences of assuming the wrong type is that your program crashes with an uncaught exception. But the failure mode for forgetting to check the type of arguments to the Buffer constructor is more catastrophic. Here's an example of a vulnerable service that takes a JSON payload and converts it to hex: // Take a JSON payload {str: \"some string\"} and convert it to hex var server = http . createServer ( function ( req , res ) { var data = '' req . setEncoding ( 'utf8' ) req . on ( 'data' , function ( chunk ) { data += chunk }) req . on ( 'end' , function () { var body = JSON . parse ( data ) res . end ( new Buffer ( body . str ). toString ( 'hex' )) }) }) server . listen ( 8080 ) In this example, an http client just has to send: { \"str\" : 1000 } and it will get back 1,000 bytes of uninitialized memory from the server. This is a very serious bug. It's similar in severity to the the Heartbleed bug that allowed disclosure of OpenSSL process memory by remote attackers.","title":"Would this ever be a problem in real code?"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#which-real-world-packages-were-vulnerable","text":"","title":"Which real-world packages were vulnerable?"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#bittorrent-dht","text":"Mathias Buus and I ( Feross Aboukhadijeh ) found this issue in one of our own packages, bittorrent-dht . The bug would allow anyone on the internet to send a series of messages to a user of bittorrent-dht and get them to reveal 20 bytes at a time of uninitialized memory from the node.js process. Here's the commit that fixed it. We released a new fixed version, created a Node Security Project disclosure , and deprecated all vulnerable versions on npm so users will get a warning to upgrade to a newer version.","title":"bittorrent-dht"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#ws","text":"That got us wondering if there were other vulnerable packages. Sure enough, within a short period of time, we found the same issue in ws , the most popular WebSocket implementation in node.js. If certain APIs were called with Number parameters instead of String or Buffer as expected, then uninitialized server memory would be disclosed to the remote peer. These were the vulnerable methods: socket . send ( number ) socket . ping ( number ) socket . pong ( number ) Here's a vulnerable socket server with some echo functionality: server . on ( 'connection' , function ( socket ) { socket . on ( 'message' , function ( message ) { message = JSON . parse ( message ) if ( message . type === 'echo' ) { socket . send ( message . data ) // send back the user's message } }) }) socket.send(number) called on the server, will disclose server memory. Here's the release where the issue was fixed, with a more detailed explanation. Props to Arnout Kazemier for the quick fix. Here's the Node Security Project disclosure .","title":"ws"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#whats-the-solution","text":"It's important that node.js offers a fast way to get memory otherwise performance-critical applications would needlessly get a lot slower. But we need a better way to signal our intent as programmers. When we want uninitialized memory, we should request it explicitly. Sensitive functionality should not be packed into a developer-friendly API that loosely accepts many different types. This type of API encourages the lazy practice of passing variables in without checking the type very carefully.","title":"What's the solution?"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#a-new-api-bufferallocunsafenumber","text":"The functionality of creating buffers with uninitialized memory should be part of another API. We propose Buffer.allocUnsafe(number) . This way, it's not part of an API that frequently gets user input of all sorts of different types passed into it. var buf = Buffer . allocUnsafe ( 16 ) // careful, uninitialized memory! // Immediately overwrite the uninitialized buffer with data from another buffer for ( var i = 0 ; i < buf . length ; i ++ ) { buf [ i ] = otherBuf [ i ] }","title":"A new API: Buffer.allocUnsafe(number)"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#how-do-we-fix-nodejs-core","text":"We sent a PR to node.js core (merged as semver-major ) which defends against one case: var str = 16 new Buffer ( str , 'utf8' ) In this situation, it's implied that the programmer intended the first argument to be a string, since they passed an encoding as a second argument. Today, node.js will allocate uninitialized memory in the case of new Buffer(number, encoding) , which is probably not what the programmer intended. But this is only a partial solution, since if the programmer does new Buffer(variable) (without an encoding parameter) there's no way to know what they intended. If variable is sometimes a number, then uninitialized memory will sometimes be returned.","title":"How do we fix node.js core?"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#whats-the-real-long-term-fix","text":"We could deprecate and remove new Buffer(number) and use Buffer.allocUnsafe(number) when we need uninitialized memory. But that would break 1000s of packages. ~~We believe the best solution is to:~~ ~~1. Change new Buffer(number) to return safe, zeroed-out memory~~ ~~2. Create a new API for creating uninitialized Buffers. We propose: Buffer.allocUnsafe(number) ~~","title":"What's the real long-term fix?"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#update","text":"We now support adding three new APIs: Buffer.from(value) - convert from any type to a buffer Buffer.alloc(size) - create a zero-filled buffer Buffer.allocUnsafe(size) - create an uninitialized buffer with given size This solves the core problem that affected ws and bittorrent-dht which is Buffer(variable) getting tricked into taking a number argument. This way, existing code continues working and the impact on the npm ecosystem will be minimal. Over time, npm maintainers can migrate performance-critical code to use Buffer.allocUnsafe(number) instead of new Buffer(number) .","title":"Update"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#conclusion","text":"We think there's a serious design issue with the Buffer API as it exists today. It promotes insecure software by putting high-risk functionality into a convenient API with friendly \"developer ergonomics\". This wasn't merely a theoretical exercise because we found the issue in some of the most popular npm packages. Fortunately, there's an easy fix that can be applied today. Use safe-buffer in place of buffer . var Buffer = require ( 'safe-buffer' ). Buffer Eventually, we hope that node.js core can switch to this new, safer behavior. We believe the impact on the ecosystem would be minimal since it's not a breaking change. Well-maintained, popular packages would be updated to use Buffer.alloc quickly, while older, insecure packages would magically become safe from this attack vector.","title":"Conclusion"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#links","text":"Node.js PR: buffer: throw if both length and enc are passed Node Security Project disclosure for ws Node Security Project disclosure for bittorrent-dht","title":"links"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#credit","text":"The original issues in bittorrent-dht ( disclosure ) and ws ( disclosure ) were discovered by Mathias Buus and Feross Aboukhadijeh . Thanks to Adam Baldwin for helping disclose these issues and for his work running the Node Security Project . Thanks to John Hiesey for proofreading this README and auditing the code.","title":"credit"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#license","text":"MIT. Copyright (C) Feross Aboukhadijeh","title":"license"},{"location":"system-desing/crud-app/JS/server/node_modules/bcryptjs/","text":"bcrypt.js Optimized bcrypt in JavaScript with zero dependencies, with TypeScript support. Compatible to the C++ bcrypt binding on Node.js and also working in the browser. Security considerations Besides incorporating a salt to protect against rainbow table attacks, bcrypt is an adaptive function: over time, the iteration count can be increased to make it slower, so it remains resistant to brute-force search attacks even with increasing computation power. ( see ) While bcrypt.js is compatible to the C++ bcrypt binding, it is written in pure JavaScript and thus slower ( about 30% ), effectively reducing the number of iterations that can be processed in an equal time span. The maximum input length is 72 bytes (note that UTF-8 encoded characters use up to 4 bytes) and the length of generated hashes is 60 characters. Note that maximum input length is not implicitly checked by the library for compatibility with the C++ binding on Node.js, but should be checked with bcrypt.truncates(password) where necessary. Usage The package exports an ECMAScript module with an UMD fallback. $> npm install bcryptjs import bcrypt from \"bcryptjs\" ; Usage with a CDN From GitHub via jsDelivr : https://cdn.jsdelivr.net/gh/dcodeIO/bcrypt.js@TAG/index.js (ESM) From npm via jsDelivr : https://cdn.jsdelivr.net/npm/bcryptjs@VERSION/index.js (ESM) https://cdn.jsdelivr.net/npm/bcryptjs@VERSION/umd/index.js (UMD) From npm via unpkg : https://unpkg.com/bcryptjs@VERSION/index.js (ESM) https://unpkg.com/bcryptjs@VERSION/umd/index.js (UMD) Replace TAG respectively VERSION with a specific version or omit it (not recommended in production) to use latest. When using the ESM variant in a browser, the crypto import needs to be stubbed out, for example using an import map . Bundlers should omit it automatically. Usage - Sync To hash a password: const salt = bcrypt . genSaltSync ( 10 ); const hash = bcrypt . hashSync ( \"B4c0/\\/\" , salt ); // Store hash in your password DB To check a password: // Load hash from your password DB bcrypt . compareSync ( \"B4c0/\\/\" , hash ); // true bcrypt . compareSync ( \"not_bacon\" , hash ); // false Auto-gen a salt and hash: const hash = bcrypt . hashSync ( \"bacon\" , 10 ); Usage - Async To hash a password: const salt = await bcrypt . genSalt ( 10 ); const hash = await bcrypt . hash ( \"B4c0/\\/\" , salt ); // Store hash in your password DB bcrypt . genSalt ( 10 , ( err , salt ) => { bcrypt . hash ( \"B4c0/\\/\" , salt , function ( err , hash ) { // Store hash in your password DB }); }); To check a password: // Load hash from your password DB await bcrypt . compare ( \"B4c0/\\/\" , hash ); // true await bcrypt . compare ( \"not_bacon\" , hash ); // false // Load hash from your password DB bcrypt . compare ( \"B4c0/\\/\" , hash , ( err , res ) => { // res === true }); bcrypt . compare ( \"not_bacon\" , hash , ( err , res ) => { // res === false }); Auto-gen a salt and hash: await bcrypt . hash ( \"B4c0/\\/\" , 10 ); // Store hash in your password DB bcrypt . hash ( \"B4c0/\\/\" , 10 , ( err , hash ) => { // Store hash in your password DB }); Note: Under the hood, asynchronous APIs split an operation into small chunks. After the completion of a chunk, the execution of the next chunk is placed on the back of the JS event queue , efficiently yielding for other computation to execute. Usage - Command Line Usage: bcrypt <input> [rounds|salt] API Callback types Callback< T > : (err: Error | null, result?: T) => void Called with an error on failure or a value of type T upon success. ProgressCallback : (percentage: number) => void Called with the percentage of rounds completed (0.0 - 1.0), maximally once per MAX_EXECUTION_TIME = 100 ms. RandomFallback : (length: number) => number[] Called to obtain random bytes when both Web Crypto API and Node.js crypto are not available. Functions bcrypt. genSaltSync (rounds?: number ): string Synchronously generates a salt. Number of rounds defaults to 10 when omitted. bcrypt. genSalt (rounds?: number ): Promise<string> Asynchronously generates a salt. Number of rounds defaults to 10 when omitted. bcrypt. genSalt ([rounds: number , ]callback: Callback<string> ): void Asynchronously generates a salt. Number of rounds defaults to 10 when omitted. bcrypt. truncates (password: string ): boolean Tests if a password will be truncated when hashed, that is its length is greater than 72 bytes when converted to UTF-8. bcrypt. hashSync (password: string , salt?: number | string ): string Synchronously generates a hash for the given password. Number of rounds defaults to 10 when omitted. bcrypt. hash (password: string , salt: number | string ): Promise<string> Asynchronously generates a hash for the given password. bcrypt. hash (password: string , salt: number | string , callback: Callback<string> , progressCallback?: ProgressCallback ): void Asynchronously generates a hash for the given password. bcrypt. compareSync (password: string , hash: string ): boolean Synchronously tests a password against a hash. bcrypt. compare (password: string , hash: string ): Promise<boolean> Asynchronously compares a password against a hash. bcrypt. compare (password: string , hash: string , callback: Callback<boolean> , progressCallback?: ProgressCallback ) Asynchronously compares a password against a hash. bcrypt. getRounds (hash: string ): number Gets the number of rounds used to encrypt the specified hash. bcrypt. getSalt (hash: string ): string Gets the salt portion from a hash. Does not validate the hash. bcrypt. setRandomFallback (random: RandomFallback ): void Sets the pseudo random number generator to use as a fallback if neither Web Crypto API nor Node.js crypto are available. Please note: It is highly important that the PRNG used is cryptographically secure and that it is seeded properly! Building Building the UMD fallback: $> npm run build Running the tests : $> npm test Credits Based on work started by Shane Girish at bcrypt-nodejs , which is itself based on javascript-bcrypt (New BSD-licensed).","title":"bcrypt.js"},{"location":"system-desing/crud-app/JS/server/node_modules/bcryptjs/#bcryptjs","text":"Optimized bcrypt in JavaScript with zero dependencies, with TypeScript support. Compatible to the C++ bcrypt binding on Node.js and also working in the browser.","title":"bcrypt.js"},{"location":"system-desing/crud-app/JS/server/node_modules/bcryptjs/#security-considerations","text":"Besides incorporating a salt to protect against rainbow table attacks, bcrypt is an adaptive function: over time, the iteration count can be increased to make it slower, so it remains resistant to brute-force search attacks even with increasing computation power. ( see ) While bcrypt.js is compatible to the C++ bcrypt binding, it is written in pure JavaScript and thus slower ( about 30% ), effectively reducing the number of iterations that can be processed in an equal time span. The maximum input length is 72 bytes (note that UTF-8 encoded characters use up to 4 bytes) and the length of generated hashes is 60 characters. Note that maximum input length is not implicitly checked by the library for compatibility with the C++ binding on Node.js, but should be checked with bcrypt.truncates(password) where necessary.","title":"Security considerations"},{"location":"system-desing/crud-app/JS/server/node_modules/bcryptjs/#usage","text":"The package exports an ECMAScript module with an UMD fallback. $> npm install bcryptjs import bcrypt from \"bcryptjs\" ;","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/bcryptjs/#usage-with-a-cdn","text":"From GitHub via jsDelivr : https://cdn.jsdelivr.net/gh/dcodeIO/bcrypt.js@TAG/index.js (ESM) From npm via jsDelivr : https://cdn.jsdelivr.net/npm/bcryptjs@VERSION/index.js (ESM) https://cdn.jsdelivr.net/npm/bcryptjs@VERSION/umd/index.js (UMD) From npm via unpkg : https://unpkg.com/bcryptjs@VERSION/index.js (ESM) https://unpkg.com/bcryptjs@VERSION/umd/index.js (UMD) Replace TAG respectively VERSION with a specific version or omit it (not recommended in production) to use latest. When using the ESM variant in a browser, the crypto import needs to be stubbed out, for example using an import map . Bundlers should omit it automatically.","title":"Usage with a CDN"},{"location":"system-desing/crud-app/JS/server/node_modules/bcryptjs/#usage-sync","text":"To hash a password: const salt = bcrypt . genSaltSync ( 10 ); const hash = bcrypt . hashSync ( \"B4c0/\\/\" , salt ); // Store hash in your password DB To check a password: // Load hash from your password DB bcrypt . compareSync ( \"B4c0/\\/\" , hash ); // true bcrypt . compareSync ( \"not_bacon\" , hash ); // false Auto-gen a salt and hash: const hash = bcrypt . hashSync ( \"bacon\" , 10 );","title":"Usage - Sync"},{"location":"system-desing/crud-app/JS/server/node_modules/bcryptjs/#usage-async","text":"To hash a password: const salt = await bcrypt . genSalt ( 10 ); const hash = await bcrypt . hash ( \"B4c0/\\/\" , salt ); // Store hash in your password DB bcrypt . genSalt ( 10 , ( err , salt ) => { bcrypt . hash ( \"B4c0/\\/\" , salt , function ( err , hash ) { // Store hash in your password DB }); }); To check a password: // Load hash from your password DB await bcrypt . compare ( \"B4c0/\\/\" , hash ); // true await bcrypt . compare ( \"not_bacon\" , hash ); // false // Load hash from your password DB bcrypt . compare ( \"B4c0/\\/\" , hash , ( err , res ) => { // res === true }); bcrypt . compare ( \"not_bacon\" , hash , ( err , res ) => { // res === false }); Auto-gen a salt and hash: await bcrypt . hash ( \"B4c0/\\/\" , 10 ); // Store hash in your password DB bcrypt . hash ( \"B4c0/\\/\" , 10 , ( err , hash ) => { // Store hash in your password DB }); Note: Under the hood, asynchronous APIs split an operation into small chunks. After the completion of a chunk, the execution of the next chunk is placed on the back of the JS event queue , efficiently yielding for other computation to execute.","title":"Usage - Async"},{"location":"system-desing/crud-app/JS/server/node_modules/bcryptjs/#usage-command-line","text":"Usage: bcrypt <input> [rounds|salt]","title":"Usage - Command Line"},{"location":"system-desing/crud-app/JS/server/node_modules/bcryptjs/#api","text":"","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/bcryptjs/#callback-types","text":"Callback< T > : (err: Error | null, result?: T) => void Called with an error on failure or a value of type T upon success. ProgressCallback : (percentage: number) => void Called with the percentage of rounds completed (0.0 - 1.0), maximally once per MAX_EXECUTION_TIME = 100 ms. RandomFallback : (length: number) => number[] Called to obtain random bytes when both Web Crypto API and Node.js crypto are not available.","title":"Callback types"},{"location":"system-desing/crud-app/JS/server/node_modules/bcryptjs/#functions","text":"bcrypt. genSaltSync (rounds?: number ): string Synchronously generates a salt. Number of rounds defaults to 10 when omitted. bcrypt. genSalt (rounds?: number ): Promise<string> Asynchronously generates a salt. Number of rounds defaults to 10 when omitted. bcrypt. genSalt ([rounds: number , ]callback: Callback<string> ): void Asynchronously generates a salt. Number of rounds defaults to 10 when omitted. bcrypt. truncates (password: string ): boolean Tests if a password will be truncated when hashed, that is its length is greater than 72 bytes when converted to UTF-8. bcrypt. hashSync (password: string , salt?: number | string ): string Synchronously generates a hash for the given password. Number of rounds defaults to 10 when omitted. bcrypt. hash (password: string , salt: number | string ): Promise<string> Asynchronously generates a hash for the given password. bcrypt. hash (password: string , salt: number | string , callback: Callback<string> , progressCallback?: ProgressCallback ): void Asynchronously generates a hash for the given password. bcrypt. compareSync (password: string , hash: string ): boolean Synchronously tests a password against a hash. bcrypt. compare (password: string , hash: string ): Promise<boolean> Asynchronously compares a password against a hash. bcrypt. compare (password: string , hash: string , callback: Callback<boolean> , progressCallback?: ProgressCallback ) Asynchronously compares a password against a hash. bcrypt. getRounds (hash: string ): number Gets the number of rounds used to encrypt the specified hash. bcrypt. getSalt (hash: string ): string Gets the salt portion from a hash. Does not validate the hash. bcrypt. setRandomFallback (random: RandomFallback ): void Sets the pseudo random number generator to use as a fallback if neither Web Crypto API nor Node.js crypto are available. Please note: It is highly important that the PRNG used is cryptographically secure and that it is seeded properly!","title":"Functions"},{"location":"system-desing/crud-app/JS/server/node_modules/bcryptjs/#building","text":"Building the UMD fallback: $> npm run build Running the tests : $> npm test","title":"Building"},{"location":"system-desing/crud-app/JS/server/node_modules/bcryptjs/#credits","text":"Based on work started by Shane Girish at bcrypt-nodejs , which is itself based on javascript-bcrypt (New BSD-licensed).","title":"Credits"},{"location":"system-desing/crud-app/JS/server/node_modules/binary-extensions/readme/","text":"binary-extensions List of binary file extensions The list is just a JSON file and can be used anywhere. Install npm install binary-extensions Usage const binaryExtensions = require ( 'binary-extensions' ); console . log ( binaryExtensions ); //=> ['3ds', '3g2', \u2026] Related is-binary-path - Check if a filepath is a binary file text-extensions - List of text file extensions","title":"binary-extensions"},{"location":"system-desing/crud-app/JS/server/node_modules/binary-extensions/readme/#binary-extensions","text":"List of binary file extensions The list is just a JSON file and can be used anywhere.","title":"binary-extensions"},{"location":"system-desing/crud-app/JS/server/node_modules/binary-extensions/readme/#install","text":"npm install binary-extensions","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/binary-extensions/readme/#usage","text":"const binaryExtensions = require ( 'binary-extensions' ); console . log ( binaryExtensions ); //=> ['3ds', '3g2', \u2026]","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/binary-extensions/readme/#related","text":"is-binary-path - Check if a filepath is a binary file text-extensions - List of text file extensions","title":"Related"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/","text":"body-parser Node.js body parsing middleware. Parse incoming request bodies in a middleware before your handlers, available under the req.body property. Note As req.body 's shape is based on user-controlled input, all properties and values in this object are untrusted and should be validated before trusting. For example, req.body.foo.toString() may fail in multiple ways, for example the foo property may not be there or may not be a string, and toString may not be a function and instead a string or other user input. Learn about the anatomy of an HTTP transaction in Node.js . This does not handle multipart bodies , due to their complex and typically large nature. For multipart bodies, you may be interested in the following modules: busboy and connect-busboy multiparty and connect-multiparty formidable multer This module provides the following parsers: JSON body parser Raw body parser Text body parser URL-encoded form body parser Other body parsers you might be interested in: body co-body Installation $ npm install body-parser API const bodyParser = require ( 'body-parser' ) The bodyParser object exposes various factories to create middlewares. All middlewares will populate the req.body property with the parsed body when the Content-Type request header matches the type option. The various errors returned by this module are described in the errors section . bodyParser.json([options]) Returns middleware that only parses json and only looks at requests where the Content-Type header matches the type option. This parser accepts any Unicode encoding of the body and supports automatic inflation of gzip , br (brotli) and deflate encodings. A new body object containing the parsed data is populated on the request object after the middleware (i.e. req.body ). Options The json function takes an optional options object that may contain any of the following keys: inflate When set to true , then deflated (compressed) bodies will be inflated; when false , deflated bodies are rejected. Defaults to true . limit Controls the maximum request body size. If this is a number, then the value specifies the number of bytes; if it is a string, the value is passed to the bytes library for parsing. Defaults to '100kb' . reviver The reviver option is passed directly to JSON.parse as the second argument. You can find more information on this argument in the MDN documentation about JSON.parse . strict When set to true , will only accept arrays and objects; when false will accept anything JSON.parse accepts. Defaults to true . type The type option is used to determine what media type the middleware will parse. This option can be a string, array of strings, or a function. If not a function, type option is passed directly to the type-is library and this can be an extension name (like json ), a mime type (like application/json ), or a mime type with a wildcard (like */* or */json ). If a function, the type option is called as fn(req) and the request is parsed if it returns a truthy value. Defaults to application/json . verify The verify option, if supplied, is called as verify(req, res, buf, encoding) , where buf is a Buffer of the raw request body and encoding is the encoding of the request. The parsing can be aborted by throwing an error. bodyParser.raw([options]) Returns middleware that parses all bodies as a Buffer and only looks at requests where the Content-Type header matches the type option. This parser supports automatic inflation of gzip , br (brotli) and deflate encodings. A new body object containing the parsed data is populated on the request object after the middleware (i.e. req.body ). This will be a Buffer object of the body. Options The raw function takes an optional options object that may contain any of the following keys: inflate When set to true , then deflated (compressed) bodies will be inflated; when false , deflated bodies are rejected. Defaults to true . limit Controls the maximum request body size. If this is a number, then the value specifies the number of bytes; if it is a string, the value is passed to the bytes library for parsing. Defaults to '100kb' . type The type option is used to determine what media type the middleware will parse. This option can be a string, array of strings, or a function. If not a function, type option is passed directly to the type-is library and this can be an extension name (like bin ), a mime type (like application/octet-stream ), or a mime type with a wildcard (like */* or application/* ). If a function, the type option is called as fn(req) and the request is parsed if it returns a truthy value. Defaults to application/octet-stream . verify The verify option, if supplied, is called as verify(req, res, buf, encoding) , where buf is a Buffer of the raw request body and encoding is the encoding of the request. The parsing can be aborted by throwing an error. bodyParser.text([options]) Returns middleware that parses all bodies as a string and only looks at requests where the Content-Type header matches the type option. This parser supports automatic inflation of gzip , br (brotli) and deflate encodings. A new body string containing the parsed data is populated on the request object after the middleware (i.e. req.body ). This will be a string of the body. Options The text function takes an optional options object that may contain any of the following keys: defaultCharset Specify the default character set for the text content if the charset is not specified in the Content-Type header of the request. Defaults to utf-8 . inflate When set to true , then deflated (compressed) bodies will be inflated; when false , deflated bodies are rejected. Defaults to true . limit Controls the maximum request body size. If this is a number, then the value specifies the number of bytes; if it is a string, the value is passed to the bytes library for parsing. Defaults to '100kb' . type The type option is used to determine what media type the middleware will parse. This option can be a string, array of strings, or a function. If not a function, type option is passed directly to the type-is library and this can be an extension name (like txt ), a mime type (like text/plain ), or a mime type with a wildcard (like */* or text/* ). If a function, the type option is called as fn(req) and the request is parsed if it returns a truthy value. Defaults to text/plain . verify The verify option, if supplied, is called as verify(req, res, buf, encoding) , where buf is a Buffer of the raw request body and encoding is the encoding of the request. The parsing can be aborted by throwing an error. bodyParser.urlencoded([options]) Returns middleware that only parses urlencoded bodies and only looks at requests where the Content-Type header matches the type option. This parser accepts only UTF-8 encoding of the body and supports automatic inflation of gzip , br (brotli) and deflate encodings. A new body object containing the parsed data is populated on the request object after the middleware (i.e. req.body ). This object will contain key-value pairs, where the value can be a string or array (when extended is false ), or any type (when extended is true ). Options The urlencoded function takes an optional options object that may contain any of the following keys: extended The \"extended\" syntax allows for rich objects and arrays to be encoded into the URL-encoded format, allowing for a JSON-like experience with URL-encoded. For more information, please see the qs library . Defaults to false . inflate When set to true , then deflated (compressed) bodies will be inflated; when false , deflated bodies are rejected. Defaults to true . limit Controls the maximum request body size. If this is a number, then the value specifies the number of bytes; if it is a string, the value is passed to the bytes library for parsing. Defaults to '100kb' . parameterLimit The parameterLimit option controls the maximum number of parameters that are allowed in the URL-encoded data. If a request contains more parameters than this value, a 413 will be returned to the client. Defaults to 1000 . type The type option is used to determine what media type the middleware will parse. This option can be a string, array of strings, or a function. If not a function, type option is passed directly to the type-is library and this can be an extension name (like urlencoded ), a mime type (like application/x-www-form-urlencoded ), or a mime type with a wildcard (like */x-www-form-urlencoded ). If a function, the type option is called as fn(req) and the request is parsed if it returns a truthy value. Defaults to application/x-www-form-urlencoded . verify The verify option, if supplied, is called as verify(req, res, buf, encoding) , where buf is a Buffer of the raw request body and encoding is the encoding of the request. The parsing can be aborted by throwing an error. defaultCharset The default charset to parse as, if not specified in content-type. Must be either utf-8 or iso-8859-1 . Defaults to utf-8 . charsetSentinel Whether to let the value of the utf8 parameter take precedence as the charset selector. It requires the form to contain a parameter named utf8 with a value of \u2713 . Defaults to false . interpretNumericEntities Whether to decode numeric entities such as &#9786; when parsing an iso-8859-1 form. Defaults to false . depth The depth option is used to configure the maximum depth of the qs library when extended is true . This allows you to limit the amount of keys that are parsed and can be useful to prevent certain types of abuse. Defaults to 32 . It is recommended to keep this value as low as possible. Errors The middlewares provided by this module create errors using the http-errors module . The errors will typically have a status / statusCode property that contains the suggested HTTP response code, an expose property to determine if the message property should be displayed to the client, a type property to determine the type of error without matching against the message , and a body property containing the read body, if available. The following are the common errors created, though any error can come through for various reasons. content encoding unsupported This error will occur when the request had a Content-Encoding header that contained an encoding but the \"inflation\" option was set to false . The status property is set to 415 , the type property is set to 'encoding.unsupported' , and the charset property will be set to the encoding that is unsupported. entity parse failed This error will occur when the request contained an entity that could not be parsed by the middleware. The status property is set to 400 , the type property is set to 'entity.parse.failed' , and the body property is set to the entity value that failed parsing. entity verify failed This error will occur when the request contained an entity that could not be failed verification by the defined verify option. The status property is set to 403 , the type property is set to 'entity.verify.failed' , and the body property is set to the entity value that failed verification. request aborted This error will occur when the request is aborted by the client before reading the body has finished. The received property will be set to the number of bytes received before the request was aborted and the expected property is set to the number of expected bytes. The status property is set to 400 and type property is set to 'request.aborted' . request entity too large This error will occur when the request body's size is larger than the \"limit\" option. The limit property will be set to the byte limit and the length property will be set to the request body's length. The status property is set to 413 and the type property is set to 'entity.too.large' . request size did not match content length This error will occur when the request's length did not match the length from the Content-Length header. This typically occurs when the request is malformed, typically when the Content-Length header was calculated based on characters instead of bytes. The status property is set to 400 and the type property is set to 'request.size.invalid' . stream encoding should not be set This error will occur when something called the req.setEncoding method prior to this middleware. This module operates directly on bytes only and you cannot call req.setEncoding when using this module. The status property is set to 500 and the type property is set to 'stream.encoding.set' . stream is not readable This error will occur when the request is no longer readable when this middleware attempts to read it. This typically means something other than a middleware from this module read the request body already and the middleware was also configured to read the same request. The status property is set to 500 and the type property is set to 'stream.not.readable' . too many parameters This error will occur when the content of the request exceeds the configured parameterLimit for the urlencoded parser. The status property is set to 413 and the type property is set to 'parameters.too.many' . unsupported charset \"BOGUS\" This error will occur when the request had a charset parameter in the Content-Type header, but the iconv-lite module does not support it OR the parser does not support it. The charset is contained in the message as well as in the charset property. The status property is set to 415 , the type property is set to 'charset.unsupported' , and the charset property is set to the charset that is unsupported. unsupported content encoding \"bogus\" This error will occur when the request had a Content-Encoding header that contained an unsupported encoding. The encoding is contained in the message as well as in the encoding property. The status property is set to 415 , the type property is set to 'encoding.unsupported' , and the encoding property is set to the encoding that is unsupported. The input exceeded the depth This error occurs when using bodyParser.urlencoded with the extended property set to true and the input exceeds the configured depth option. The status property is set to 400 . It is recommended to review the depth option and evaluate if it requires a higher value. When the depth option is set to 32 (default value), the error will not be thrown. Examples Express/Connect top-level generic This example demonstrates adding a generic JSON and URL-encoded parser as a top-level middleware, which will parse the bodies of all incoming requests. This is the simplest setup. const express = require ( 'express' ) const bodyParser = require ( 'body-parser' ) const app = express () // parse application/x-www-form-urlencoded app . use ( bodyParser . urlencoded ()) // parse application/json app . use ( bodyParser . json ()) app . use ( function ( req , res ) { res . setHeader ( 'Content-Type' , 'text/plain' ) res . write ( 'you posted:\\n' ) res . end ( String ( JSON . stringify ( req . body , null , 2 ))) }) Express route-specific This example demonstrates adding body parsers specifically to the routes that need them. In general, this is the most recommended way to use body-parser with Express. const express = require ( 'express' ) const bodyParser = require ( 'body-parser' ) const app = express () // create application/json parser const jsonParser = bodyParser . json () // create application/x-www-form-urlencoded parser const urlencodedParser = bodyParser . urlencoded () // POST /login gets urlencoded bodies app . post ( '/login' , urlencodedParser , function ( req , res ) { if ( ! req . body || ! req . body . username ) res . sendStatus ( 400 ) res . send ( 'welcome, ' + req . body . username ) }) // POST /api/users gets JSON bodies app . post ( '/api/users' , jsonParser , function ( req , res ) { if ( ! req . body ) res . sendStatus ( 400 ) // create user in req.body }) Change accepted type for parsers All the parsers accept a type option which allows you to change the Content-Type that the middleware will parse. const express = require ( 'express' ) const bodyParser = require ( 'body-parser' ) const app = express () // parse various different custom JSON types as JSON app . use ( bodyParser . json ({ type : 'application/*+json' })) // parse some custom thing into a Buffer app . use ( bodyParser . raw ({ type : 'application/vnd.custom-type' })) // parse an HTML body into a string app . use ( bodyParser . text ({ type : 'text/html' })) License MIT","title":"body-parser"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#body-parser","text":"Node.js body parsing middleware. Parse incoming request bodies in a middleware before your handlers, available under the req.body property. Note As req.body 's shape is based on user-controlled input, all properties and values in this object are untrusted and should be validated before trusting. For example, req.body.foo.toString() may fail in multiple ways, for example the foo property may not be there or may not be a string, and toString may not be a function and instead a string or other user input. Learn about the anatomy of an HTTP transaction in Node.js . This does not handle multipart bodies , due to their complex and typically large nature. For multipart bodies, you may be interested in the following modules: busboy and connect-busboy multiparty and connect-multiparty formidable multer This module provides the following parsers: JSON body parser Raw body parser Text body parser URL-encoded form body parser Other body parsers you might be interested in: body co-body","title":"body-parser"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#installation","text":"$ npm install body-parser","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#api","text":"const bodyParser = require ( 'body-parser' ) The bodyParser object exposes various factories to create middlewares. All middlewares will populate the req.body property with the parsed body when the Content-Type request header matches the type option. The various errors returned by this module are described in the errors section .","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#bodyparserjsonoptions","text":"Returns middleware that only parses json and only looks at requests where the Content-Type header matches the type option. This parser accepts any Unicode encoding of the body and supports automatic inflation of gzip , br (brotli) and deflate encodings. A new body object containing the parsed data is populated on the request object after the middleware (i.e. req.body ).","title":"bodyParser.json([options])"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#options","text":"The json function takes an optional options object that may contain any of the following keys:","title":"Options"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#inflate","text":"When set to true , then deflated (compressed) bodies will be inflated; when false , deflated bodies are rejected. Defaults to true .","title":"inflate"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#limit","text":"Controls the maximum request body size. If this is a number, then the value specifies the number of bytes; if it is a string, the value is passed to the bytes library for parsing. Defaults to '100kb' .","title":"limit"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#reviver","text":"The reviver option is passed directly to JSON.parse as the second argument. You can find more information on this argument in the MDN documentation about JSON.parse .","title":"reviver"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#strict","text":"When set to true , will only accept arrays and objects; when false will accept anything JSON.parse accepts. Defaults to true .","title":"strict"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#type","text":"The type option is used to determine what media type the middleware will parse. This option can be a string, array of strings, or a function. If not a function, type option is passed directly to the type-is library and this can be an extension name (like json ), a mime type (like application/json ), or a mime type with a wildcard (like */* or */json ). If a function, the type option is called as fn(req) and the request is parsed if it returns a truthy value. Defaults to application/json .","title":"type"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#verify","text":"The verify option, if supplied, is called as verify(req, res, buf, encoding) , where buf is a Buffer of the raw request body and encoding is the encoding of the request. The parsing can be aborted by throwing an error.","title":"verify"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#bodyparserrawoptions","text":"Returns middleware that parses all bodies as a Buffer and only looks at requests where the Content-Type header matches the type option. This parser supports automatic inflation of gzip , br (brotli) and deflate encodings. A new body object containing the parsed data is populated on the request object after the middleware (i.e. req.body ). This will be a Buffer object of the body.","title":"bodyParser.raw([options])"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#options_1","text":"The raw function takes an optional options object that may contain any of the following keys:","title":"Options"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#inflate_1","text":"When set to true , then deflated (compressed) bodies will be inflated; when false , deflated bodies are rejected. Defaults to true .","title":"inflate"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#limit_1","text":"Controls the maximum request body size. If this is a number, then the value specifies the number of bytes; if it is a string, the value is passed to the bytes library for parsing. Defaults to '100kb' .","title":"limit"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#type_1","text":"The type option is used to determine what media type the middleware will parse. This option can be a string, array of strings, or a function. If not a function, type option is passed directly to the type-is library and this can be an extension name (like bin ), a mime type (like application/octet-stream ), or a mime type with a wildcard (like */* or application/* ). If a function, the type option is called as fn(req) and the request is parsed if it returns a truthy value. Defaults to application/octet-stream .","title":"type"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#verify_1","text":"The verify option, if supplied, is called as verify(req, res, buf, encoding) , where buf is a Buffer of the raw request body and encoding is the encoding of the request. The parsing can be aborted by throwing an error.","title":"verify"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#bodyparsertextoptions","text":"Returns middleware that parses all bodies as a string and only looks at requests where the Content-Type header matches the type option. This parser supports automatic inflation of gzip , br (brotli) and deflate encodings. A new body string containing the parsed data is populated on the request object after the middleware (i.e. req.body ). This will be a string of the body.","title":"bodyParser.text([options])"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#options_2","text":"The text function takes an optional options object that may contain any of the following keys:","title":"Options"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#defaultcharset","text":"Specify the default character set for the text content if the charset is not specified in the Content-Type header of the request. Defaults to utf-8 .","title":"defaultCharset"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#inflate_2","text":"When set to true , then deflated (compressed) bodies will be inflated; when false , deflated bodies are rejected. Defaults to true .","title":"inflate"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#limit_2","text":"Controls the maximum request body size. If this is a number, then the value specifies the number of bytes; if it is a string, the value is passed to the bytes library for parsing. Defaults to '100kb' .","title":"limit"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#type_2","text":"The type option is used to determine what media type the middleware will parse. This option can be a string, array of strings, or a function. If not a function, type option is passed directly to the type-is library and this can be an extension name (like txt ), a mime type (like text/plain ), or a mime type with a wildcard (like */* or text/* ). If a function, the type option is called as fn(req) and the request is parsed if it returns a truthy value. Defaults to text/plain .","title":"type"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#verify_2","text":"The verify option, if supplied, is called as verify(req, res, buf, encoding) , where buf is a Buffer of the raw request body and encoding is the encoding of the request. The parsing can be aborted by throwing an error.","title":"verify"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#bodyparserurlencodedoptions","text":"Returns middleware that only parses urlencoded bodies and only looks at requests where the Content-Type header matches the type option. This parser accepts only UTF-8 encoding of the body and supports automatic inflation of gzip , br (brotli) and deflate encodings. A new body object containing the parsed data is populated on the request object after the middleware (i.e. req.body ). This object will contain key-value pairs, where the value can be a string or array (when extended is false ), or any type (when extended is true ).","title":"bodyParser.urlencoded([options])"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#options_3","text":"The urlencoded function takes an optional options object that may contain any of the following keys:","title":"Options"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#extended","text":"The \"extended\" syntax allows for rich objects and arrays to be encoded into the URL-encoded format, allowing for a JSON-like experience with URL-encoded. For more information, please see the qs library . Defaults to false .","title":"extended"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#inflate_3","text":"When set to true , then deflated (compressed) bodies will be inflated; when false , deflated bodies are rejected. Defaults to true .","title":"inflate"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#limit_3","text":"Controls the maximum request body size. If this is a number, then the value specifies the number of bytes; if it is a string, the value is passed to the bytes library for parsing. Defaults to '100kb' .","title":"limit"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#parameterlimit","text":"The parameterLimit option controls the maximum number of parameters that are allowed in the URL-encoded data. If a request contains more parameters than this value, a 413 will be returned to the client. Defaults to 1000 .","title":"parameterLimit"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#type_3","text":"The type option is used to determine what media type the middleware will parse. This option can be a string, array of strings, or a function. If not a function, type option is passed directly to the type-is library and this can be an extension name (like urlencoded ), a mime type (like application/x-www-form-urlencoded ), or a mime type with a wildcard (like */x-www-form-urlencoded ). If a function, the type option is called as fn(req) and the request is parsed if it returns a truthy value. Defaults to application/x-www-form-urlencoded .","title":"type"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#verify_3","text":"The verify option, if supplied, is called as verify(req, res, buf, encoding) , where buf is a Buffer of the raw request body and encoding is the encoding of the request. The parsing can be aborted by throwing an error.","title":"verify"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#defaultcharset_1","text":"The default charset to parse as, if not specified in content-type. Must be either utf-8 or iso-8859-1 . Defaults to utf-8 .","title":"defaultCharset"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#charsetsentinel","text":"Whether to let the value of the utf8 parameter take precedence as the charset selector. It requires the form to contain a parameter named utf8 with a value of \u2713 . Defaults to false .","title":"charsetSentinel"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#interpretnumericentities","text":"Whether to decode numeric entities such as &#9786; when parsing an iso-8859-1 form. Defaults to false .","title":"interpretNumericEntities"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#depth","text":"The depth option is used to configure the maximum depth of the qs library when extended is true . This allows you to limit the amount of keys that are parsed and can be useful to prevent certain types of abuse. Defaults to 32 . It is recommended to keep this value as low as possible.","title":"depth"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#errors","text":"The middlewares provided by this module create errors using the http-errors module . The errors will typically have a status / statusCode property that contains the suggested HTTP response code, an expose property to determine if the message property should be displayed to the client, a type property to determine the type of error without matching against the message , and a body property containing the read body, if available. The following are the common errors created, though any error can come through for various reasons.","title":"Errors"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#content-encoding-unsupported","text":"This error will occur when the request had a Content-Encoding header that contained an encoding but the \"inflation\" option was set to false . The status property is set to 415 , the type property is set to 'encoding.unsupported' , and the charset property will be set to the encoding that is unsupported.","title":"content encoding unsupported"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#entity-parse-failed","text":"This error will occur when the request contained an entity that could not be parsed by the middleware. The status property is set to 400 , the type property is set to 'entity.parse.failed' , and the body property is set to the entity value that failed parsing.","title":"entity parse failed"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#entity-verify-failed","text":"This error will occur when the request contained an entity that could not be failed verification by the defined verify option. The status property is set to 403 , the type property is set to 'entity.verify.failed' , and the body property is set to the entity value that failed verification.","title":"entity verify failed"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#request-aborted","text":"This error will occur when the request is aborted by the client before reading the body has finished. The received property will be set to the number of bytes received before the request was aborted and the expected property is set to the number of expected bytes. The status property is set to 400 and type property is set to 'request.aborted' .","title":"request aborted"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#request-entity-too-large","text":"This error will occur when the request body's size is larger than the \"limit\" option. The limit property will be set to the byte limit and the length property will be set to the request body's length. The status property is set to 413 and the type property is set to 'entity.too.large' .","title":"request entity too large"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#request-size-did-not-match-content-length","text":"This error will occur when the request's length did not match the length from the Content-Length header. This typically occurs when the request is malformed, typically when the Content-Length header was calculated based on characters instead of bytes. The status property is set to 400 and the type property is set to 'request.size.invalid' .","title":"request size did not match content length"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#stream-encoding-should-not-be-set","text":"This error will occur when something called the req.setEncoding method prior to this middleware. This module operates directly on bytes only and you cannot call req.setEncoding when using this module. The status property is set to 500 and the type property is set to 'stream.encoding.set' .","title":"stream encoding should not be set"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#stream-is-not-readable","text":"This error will occur when the request is no longer readable when this middleware attempts to read it. This typically means something other than a middleware from this module read the request body already and the middleware was also configured to read the same request. The status property is set to 500 and the type property is set to 'stream.not.readable' .","title":"stream is not readable"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#too-many-parameters","text":"This error will occur when the content of the request exceeds the configured parameterLimit for the urlencoded parser. The status property is set to 413 and the type property is set to 'parameters.too.many' .","title":"too many parameters"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#unsupported-charset-bogus","text":"This error will occur when the request had a charset parameter in the Content-Type header, but the iconv-lite module does not support it OR the parser does not support it. The charset is contained in the message as well as in the charset property. The status property is set to 415 , the type property is set to 'charset.unsupported' , and the charset property is set to the charset that is unsupported.","title":"unsupported charset \"BOGUS\""},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#unsupported-content-encoding-bogus","text":"This error will occur when the request had a Content-Encoding header that contained an unsupported encoding. The encoding is contained in the message as well as in the encoding property. The status property is set to 415 , the type property is set to 'encoding.unsupported' , and the encoding property is set to the encoding that is unsupported.","title":"unsupported content encoding \"bogus\""},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#the-input-exceeded-the-depth","text":"This error occurs when using bodyParser.urlencoded with the extended property set to true and the input exceeds the configured depth option. The status property is set to 400 . It is recommended to review the depth option and evaluate if it requires a higher value. When the depth option is set to 32 (default value), the error will not be thrown.","title":"The input exceeded the depth"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#examples","text":"","title":"Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#expressconnect-top-level-generic","text":"This example demonstrates adding a generic JSON and URL-encoded parser as a top-level middleware, which will parse the bodies of all incoming requests. This is the simplest setup. const express = require ( 'express' ) const bodyParser = require ( 'body-parser' ) const app = express () // parse application/x-www-form-urlencoded app . use ( bodyParser . urlencoded ()) // parse application/json app . use ( bodyParser . json ()) app . use ( function ( req , res ) { res . setHeader ( 'Content-Type' , 'text/plain' ) res . write ( 'you posted:\\n' ) res . end ( String ( JSON . stringify ( req . body , null , 2 ))) })","title":"Express/Connect top-level generic"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#express-route-specific","text":"This example demonstrates adding body parsers specifically to the routes that need them. In general, this is the most recommended way to use body-parser with Express. const express = require ( 'express' ) const bodyParser = require ( 'body-parser' ) const app = express () // create application/json parser const jsonParser = bodyParser . json () // create application/x-www-form-urlencoded parser const urlencodedParser = bodyParser . urlencoded () // POST /login gets urlencoded bodies app . post ( '/login' , urlencodedParser , function ( req , res ) { if ( ! req . body || ! req . body . username ) res . sendStatus ( 400 ) res . send ( 'welcome, ' + req . body . username ) }) // POST /api/users gets JSON bodies app . post ( '/api/users' , jsonParser , function ( req , res ) { if ( ! req . body ) res . sendStatus ( 400 ) // create user in req.body })","title":"Express route-specific"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#change-accepted-type-for-parsers","text":"All the parsers accept a type option which allows you to change the Content-Type that the middleware will parse. const express = require ( 'express' ) const bodyParser = require ( 'body-parser' ) const app = express () // parse various different custom JSON types as JSON app . use ( bodyParser . json ({ type : 'application/*+json' })) // parse some custom thing into a Buffer app . use ( bodyParser . raw ({ type : 'application/vnd.custom-type' })) // parse an HTML body into a string app . use ( bodyParser . text ({ type : 'text/html' }))","title":"Change accepted type for parsers"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/","text":"2.2.0 / 2025-03-27 refactor: normalize common options for all parsers deps: iconv-lite@^0.6.3 2.1.0 / 2025-02-10 deps: type-is@^2.0.0 debug@^4.4.0 Removed destroy refactor: prefix built-in node module imports use the node require cache instead of custom caching 2.0.2 / 2024-10-31 remove unpipe package and use native unpipe() method 2.0.1 / 2024-09-10 Restore expected behavior extended to false 2.0.0 / 2024-09-10 Propagate changes from 1.20.3 add brotli support #406 Breaking Change: Node.js 18 is the minimum supported version 2.0.0-beta.2 / 2023-02-23 This incorporates all changes after 1.19.1 up to 1.20.2. Remove deprecated bodyParser() combination middleware deps: debug@3.1.0 Add DEBUG_HIDE_DATE environment variable Change timer to per-namespace instead of global Change non-TTY date format Remove DEBUG_FD environment variable support Support 256 namespace colors deps: iconv-lite@0.5.2 Add encoding cp720 Add encoding UTF-32 deps: raw-body@3.0.0-beta.1 2.0.0-beta.1 / 2021-12-17 Drop support for Node.js 0.8 req.body is no longer always initialized to {} it is left undefined unless a body is parsed urlencoded parser now defaults extended to false Use on-finished to determine when body read 1.20.3 / 2024-09-10 deps: qs@6.13.0 add depth option to customize the depth level in the parser IMPORTANT: The default depth level for parsing URL-encoded data is now 32 (previously was Infinity ) 1.20.2 / 2023-02-21 Fix strict json error message on Node.js 19+ deps: content-type@~1.0.5 perf: skip value escaping when unnecessary deps: raw-body@2.5.2 1.20.1 / 2022-10-06 deps: qs@6.11.0 perf: remove unnecessary object clone 1.20.0 / 2022-04-02 Fix error message for json parse whitespace in strict Fix internal error when inflated body exceeds limit Prevent loss of async hooks context Prevent hanging when request already read deps: depd@2.0.0 Replace internal eval usage with Function constructor Use instance methods on process to check for listeners deps: http-errors@2.0.0 deps: depd@2.0.0 deps: statuses@2.0.1 deps: on-finished@2.4.1 deps: qs@6.10.3 deps: raw-body@2.5.1 deps: http-errors@2.0.0 1.19.2 / 2022-02-15 deps: bytes@3.1.2 deps: qs@6.9.7 Fix handling of __proto__ keys deps: raw-body@2.4.3 deps: bytes@3.1.2 1.19.1 / 2021-12-10 deps: bytes@3.1.1 deps: http-errors@1.8.1 deps: inherits@2.0.4 deps: toidentifier@1.0.1 deps: setprototypeof@1.2.0 deps: qs@6.9.6 deps: raw-body@2.4.2 deps: bytes@3.1.1 deps: http-errors@1.8.1 deps: safe-buffer@5.2.1 deps: type-is@~1.6.18 1.19.0 / 2019-04-25 deps: bytes@3.1.0 Add petabyte ( pb ) support deps: http-errors@1.7.2 Set constructor name when possible deps: setprototypeof@1.1.1 deps: statuses@'>= 1.5.0 < 2' deps: iconv-lite@0.4.24 Added encoding MIK deps: qs@6.7.0 Fix parsing array brackets after index deps: raw-body@2.4.0 deps: bytes@3.1.0 deps: http-errors@1.7.2 deps: iconv-lite@0.4.24 deps: type-is@~1.6.17 deps: mime-types@~2.1.24 perf: prevent internal throw on invalid type 1.18.3 / 2018-05-14 Fix stack trace for strict json parse error deps: depd@~1.1.2 perf: remove argument reassignment deps: http-errors@~1.6.3 deps: depd@~1.1.2 deps: setprototypeof@1.1.0 deps: statuses@'>= 1.3.1 < 2' deps: iconv-lite@0.4.23 Fix loading encoding with year appended Fix deprecation warnings on Node.js 10+ deps: qs@6.5.2 deps: raw-body@2.3.3 deps: http-errors@1.6.3 deps: iconv-lite@0.4.23 deps: type-is@~1.6.16 deps: mime-types@~2.1.18 1.18.2 / 2017-09-22 deps: debug@2.6.9 perf: remove argument reassignment 1.18.1 / 2017-09-12 deps: content-type@~1.0.4 perf: remove argument reassignment perf: skip parameter parsing when no parameters deps: iconv-lite@0.4.19 Fix ISO-8859-1 regression Update Windows-1255 deps: qs@6.5.1 Fix parsing & compacting very deep objects deps: raw-body@2.3.2 deps: iconv-lite@0.4.19 1.18.0 / 2017-09-08 Fix JSON strict violation error to match native parse error Include the body property on verify errors Include the type property on all generated errors Use http-errors to set status code on errors deps: bytes@3.0.0 deps: debug@2.6.8 deps: depd@~1.1.1 Remove unnecessary Buffer loading deps: http-errors@~1.6.2 deps: depd@1.1.1 deps: iconv-lite@0.4.18 Add support for React Native Add a warning if not loaded as utf-8 Fix CESU-8 decoding in Node.js 8 Improve speed of ISO-8859-1 encoding deps: qs@6.5.0 deps: raw-body@2.3.1 Use http-errors for standard emitted errors deps: bytes@3.0.0 deps: iconv-lite@0.4.18 perf: skip buffer decoding on overage chunk perf: prevent internal throw when missing charset 1.17.2 / 2017-05-17 deps: debug@2.6.7 Fix DEBUG_MAX_ARRAY_LENGTH deps: ms@2.0.0 deps: type-is@~1.6.15 deps: mime-types@~2.1.15 1.17.1 / 2017-03-06 deps: qs@6.4.0 Fix regression parsing keys starting with [ 1.17.0 / 2017-03-01 deps: http-errors@~1.6.1 Make message property enumerable for HttpError s deps: setprototypeof@1.0.3 deps: qs@6.3.1 Fix compacting nested arrays 1.16.1 / 2017-02-10 deps: debug@2.6.1 Fix deprecation messages in WebStorm and other editors Undeprecate DEBUG_FD set to 1 or 2 1.16.0 / 2017-01-17 deps: debug@2.6.0 Allow colors in workers Deprecated DEBUG_FD environment variable Fix error when running under React Native Use same color for same namespace deps: ms@0.7.2 deps: http-errors@~1.5.1 deps: inherits@2.0.3 deps: setprototypeof@1.0.2 deps: statuses@'>= 1.3.1 < 2' deps: iconv-lite@0.4.15 Added encoding MS-31J Added encoding MS-932 Added encoding MS-936 Added encoding MS-949 Added encoding MS-950 Fix GBK/GB18030 handling of Euro character deps: qs@6.2.1 Fix array parsing from skipping empty values deps: raw-body@~2.2.0 deps: iconv-lite@0.4.15 deps: type-is@~1.6.14 deps: mime-types@~2.1.13 1.15.2 / 2016-06-19 deps: bytes@2.4.0 deps: content-type@~1.0.2 perf: enable strict mode deps: http-errors@~1.5.0 Use setprototypeof module to replace __proto__ setting deps: statuses@'>= 1.3.0 < 2' perf: enable strict mode deps: qs@6.2.0 deps: raw-body@~2.1.7 deps: bytes@2.4.0 perf: remove double-cleanup on happy path deps: type-is@~1.6.13 deps: mime-types@~2.1.11 1.15.1 / 2016-05-05 deps: bytes@2.3.0 Drop partial bytes on all parsed units Fix parsing byte string that looks like hex deps: raw-body@~2.1.6 deps: bytes@2.3.0 deps: type-is@~1.6.12 deps: mime-types@~2.1.10 1.15.0 / 2016-02-10 deps: http-errors@~1.4.0 Add HttpError export, for err instanceof createError.HttpError deps: inherits@2.0.1 deps: statuses@'>= 1.2.1 < 2' deps: qs@6.1.0 deps: type-is@~1.6.11 deps: mime-types@~2.1.9 1.14.2 / 2015-12-16 deps: bytes@2.2.0 deps: iconv-lite@0.4.13 deps: qs@5.2.0 deps: raw-body@~2.1.5 deps: bytes@2.2.0 deps: iconv-lite@0.4.13 deps: type-is@~1.6.10 deps: mime-types@~2.1.8 1.14.1 / 2015-09-27 Fix issue where invalid charset results in 400 when verify used deps: iconv-lite@0.4.12 Fix CESU-8 decoding in Node.js 4.x deps: raw-body@~2.1.4 Fix masking critical errors from iconv-lite deps: iconv-lite@0.4.12 deps: type-is@~1.6.9 deps: mime-types@~2.1.7 1.14.0 / 2015-09-16 Fix JSON strict parse error to match syntax errors Provide static require analysis in urlencoded parser deps: depd@~1.1.0 Support web browser loading deps: qs@5.1.0 deps: raw-body@~2.1.3 Fix sync callback when attaching data listener causes sync read deps: type-is@~1.6.8 Fix type error when given invalid type to match against deps: mime-types@~2.1.6 1.13.3 / 2015-07-31 deps: type-is@~1.6.6 deps: mime-types@~2.1.4 1.13.2 / 2015-07-05 deps: iconv-lite@0.4.11 deps: qs@4.0.0 Fix dropping parameters like hasOwnProperty Fix user-visible incompatibilities from 3.1.0 Fix various parsing edge cases deps: raw-body@~2.1.2 Fix error stack traces to skip makeError deps: iconv-lite@0.4.11 deps: type-is@~1.6.4 deps: mime-types@~2.1.2 perf: enable strict mode perf: remove argument reassignment 1.13.1 / 2015-06-16 deps: qs@2.4.2 Downgraded from 3.1.0 because of user-visible incompatibilities 1.13.0 / 2015-06-14 Add statusCode property on Error s, in addition to status Change type default to application/json for JSON parser Change type default to application/x-www-form-urlencoded for urlencoded parser Provide static require analysis Use the http-errors module to generate errors deps: bytes@2.1.0 Slight optimizations deps: iconv-lite@0.4.10 The encoding UTF-16 without BOM now defaults to UTF-16LE when detection fails Leading BOM is now removed when decoding deps: on-finished@~2.3.0 Add defined behavior for HTTP CONNECT requests Add defined behavior for HTTP Upgrade requests deps: ee-first@1.1.1 deps: qs@3.1.0 Fix dropping parameters like hasOwnProperty Fix various parsing edge cases Parsed object now has null prototype deps: raw-body@~2.1.1 Use unpipe module for unpiping requests deps: iconv-lite@0.4.10 deps: type-is@~1.6.3 deps: mime-types@~2.1.1 perf: reduce try block size perf: remove bitwise operations perf: enable strict mode perf: remove argument reassignment perf: remove delete call 1.12.4 / 2015-05-10 deps: debug@~2.2.0 deps: qs@2.4.2 Fix allowing parameters like constructor deps: on-finished@~2.2.1 deps: raw-body@~2.0.1 Fix a false-positive when unpiping in Node.js 0.8 deps: bytes@2.0.1 deps: type-is@~1.6.2 deps: mime-types@~2.0.11 1.12.3 / 2015-04-15 Slight efficiency improvement when not debugging deps: depd@~1.0.1 deps: iconv-lite@0.4.8 Add encoding alias UNICODE-1-1-UTF-7 deps: raw-body@1.3.4 Fix hanging callback if request aborts during read deps: iconv-lite@0.4.8 1.12.2 / 2015-03-16 deps: qs@2.4.1 Fix error when parameter hasOwnProperty is present 1.12.1 / 2015-03-15 deps: debug@~2.1.3 Fix high intensity foreground color for bold deps: ms@0.7.0 deps: type-is@~1.6.1 deps: mime-types@~2.0.10 1.12.0 / 2015-02-13 add debug messages accept a function for the type option use content-type to parse Content-Type headers deps: iconv-lite@0.4.7 Gracefully support enumerables on Object.prototype deps: raw-body@1.3.3 deps: iconv-lite@0.4.7 deps: type-is@~1.6.0 fix argument reassignment fix false-positives in hasBody Transfer-Encoding check support wildcard for both type and subtype ( */* ) deps: mime-types@~2.0.9 1.11.0 / 2015-01-30 make internal extended: true depth limit infinity deps: type-is@~1.5.6 deps: mime-types@~2.0.8 1.10.2 / 2015-01-20 deps: iconv-lite@0.4.6 Fix rare aliases of single-byte encodings deps: raw-body@1.3.2 deps: iconv-lite@0.4.6 1.10.1 / 2015-01-01 deps: on-finished@~2.2.0 deps: type-is@~1.5.5 deps: mime-types@~2.0.7 1.10.0 / 2014-12-02 make internal extended: true array limit dynamic 1.9.3 / 2014-11-21 deps: iconv-lite@0.4.5 Fix Windows-31J and X-SJIS encoding support deps: qs@2.3.3 Fix arrayLimit behavior deps: raw-body@1.3.1 deps: iconv-lite@0.4.5 deps: type-is@~1.5.3 deps: mime-types@~2.0.3 1.9.2 / 2014-10-27 deps: qs@2.3.2 Fix parsing of mixed objects and values 1.9.1 / 2014-10-22 deps: on-finished@~2.1.1 Fix handling of pipelined requests deps: qs@2.3.0 Fix parsing of mixed implicit and explicit arrays deps: type-is@~1.5.2 deps: mime-types@~2.0.2 1.9.0 / 2014-09-24 include the charset in \"unsupported charset\" error message include the encoding in \"unsupported content encoding\" error message deps: depd@~1.0.0 1.8.4 / 2014-09-23 fix content encoding to be case-insensitive 1.8.3 / 2014-09-19 deps: qs@2.2.4 Fix issue with object keys starting with numbers truncated 1.8.2 / 2014-09-15 deps: depd@0.4.5 1.8.1 / 2014-09-07 deps: media-typer@0.3.0 deps: type-is@~1.5.1 1.8.0 / 2014-09-05 make empty-body-handling consistent between chunked requests empty json produces {} empty raw produces new Buffer(0) empty text produces '' empty urlencoded produces {} deps: qs@2.2.3 Fix issue where first empty value in array is discarded deps: type-is@~1.5.0 fix hasbody to be true for content-length: 0 1.7.0 / 2014-09-01 add parameterLimit option to urlencoded parser change urlencoded extended array limit to 100 respond with 413 when over parameterLimit in urlencoded 1.6.7 / 2014-08-29 deps: qs@2.2.2 Remove unnecessary cloning 1.6.6 / 2014-08-27 deps: qs@2.2.0 Array parsing fix Performance improvements 1.6.5 / 2014-08-16 deps: on-finished@2.1.0 1.6.4 / 2014-08-14 deps: qs@1.2.2 1.6.3 / 2014-08-10 deps: qs@1.2.1 1.6.2 / 2014-08-07 deps: qs@1.2.0 Fix parsing array of objects 1.6.1 / 2014-08-06 deps: qs@1.1.0 Accept urlencoded square brackets Accept empty values in implicit array notation 1.6.0 / 2014-08-05 deps: qs@1.0.2 Complete rewrite Limits array length to 20 Limits object depth to 5 Limits parameters to 1,000 1.5.2 / 2014-07-27 deps: depd@0.4.4 Work-around v8 generating empty stack traces 1.5.1 / 2014-07-26 deps: depd@0.4.3 Fix exception when global Error.stackTraceLimit is too low 1.5.0 / 2014-07-20 deps: depd@0.4.2 Add TRACE_DEPRECATION environment variable Remove non-standard grey color from color output Support --no-deprecation argument Support --trace-deprecation argument deps: iconv-lite@0.4.4 Added encoding UTF-7 deps: raw-body@1.3.0 deps: iconv-lite@0.4.4 Added encoding UTF-7 Fix Cannot switch to old mode now error on Node.js 0.10+ deps: type-is@~1.3.2 1.4.3 / 2014-06-19 deps: type-is@1.3.1 fix global variable leak 1.4.2 / 2014-06-19 deps: type-is@1.3.0 improve type parsing 1.4.1 / 2014-06-19 fix urlencoded extended deprecation message 1.4.0 / 2014-06-19 add text parser add raw parser check accepted charset in content-type (accepts utf-8) check accepted encoding in content-encoding (accepts identity) deprecate bodyParser() middleware; use .json() and .urlencoded() as needed deprecate urlencoded() without provided extended option lazy-load urlencoded parsers parsers split into files for reduced mem usage support gzip and deflate bodies set inflate: false to turn off deps: raw-body@1.2.2 Support all encodings from iconv-lite 1.3.1 / 2014-06-11 deps: type-is@1.2.1 Switch dependency from mime to mime-types@1.0.0 1.3.0 / 2014-05-31 add extended option to urlencoded parser 1.2.2 / 2014-05-27 deps: raw-body@1.1.6 assert stream encoding on node.js 0.8 assert stream encoding on node.js < 0.10.6 deps: bytes@1 1.2.1 / 2014-05-26 invoke next(err) after request fully read prevents hung responses and socket hang ups 1.2.0 / 2014-05-11 add verify option deps: type-is@1.2.0 support suffix matching 1.1.2 / 2014-05-11 improve json parser speed 1.1.1 / 2014-05-11 fix repeated limit parsing with every request 1.1.0 / 2014-05-10 add type option deps: pin for safety and consistency 1.0.2 / 2014-04-14 use type-is module 1.0.1 / 2014-03-20 lower default limits to 100kb","title":"2.2.0 / 2025-03-27"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#220-2025-03-27","text":"refactor: normalize common options for all parsers deps: iconv-lite@^0.6.3","title":"2.2.0 / 2025-03-27"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#210-2025-02-10","text":"deps: type-is@^2.0.0 debug@^4.4.0 Removed destroy refactor: prefix built-in node module imports use the node require cache instead of custom caching","title":"2.1.0 / 2025-02-10"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#202-2024-10-31","text":"remove unpipe package and use native unpipe() method","title":"2.0.2 / 2024-10-31"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#201-2024-09-10","text":"Restore expected behavior extended to false","title":"2.0.1 / 2024-09-10"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#200-2024-09-10","text":"Propagate changes from 1.20.3 add brotli support #406 Breaking Change: Node.js 18 is the minimum supported version","title":"2.0.0 / 2024-09-10"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#200-beta2-2023-02-23","text":"This incorporates all changes after 1.19.1 up to 1.20.2. Remove deprecated bodyParser() combination middleware deps: debug@3.1.0 Add DEBUG_HIDE_DATE environment variable Change timer to per-namespace instead of global Change non-TTY date format Remove DEBUG_FD environment variable support Support 256 namespace colors deps: iconv-lite@0.5.2 Add encoding cp720 Add encoding UTF-32 deps: raw-body@3.0.0-beta.1","title":"2.0.0-beta.2 / 2023-02-23"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#200-beta1-2021-12-17","text":"Drop support for Node.js 0.8 req.body is no longer always initialized to {} it is left undefined unless a body is parsed urlencoded parser now defaults extended to false Use on-finished to determine when body read","title":"2.0.0-beta.1 / 2021-12-17"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1203-2024-09-10","text":"deps: qs@6.13.0 add depth option to customize the depth level in the parser IMPORTANT: The default depth level for parsing URL-encoded data is now 32 (previously was Infinity )","title":"1.20.3 / 2024-09-10"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1202-2023-02-21","text":"Fix strict json error message on Node.js 19+ deps: content-type@~1.0.5 perf: skip value escaping when unnecessary deps: raw-body@2.5.2","title":"1.20.2 / 2023-02-21"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1201-2022-10-06","text":"deps: qs@6.11.0 perf: remove unnecessary object clone","title":"1.20.1 / 2022-10-06"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1200-2022-04-02","text":"Fix error message for json parse whitespace in strict Fix internal error when inflated body exceeds limit Prevent loss of async hooks context Prevent hanging when request already read deps: depd@2.0.0 Replace internal eval usage with Function constructor Use instance methods on process to check for listeners deps: http-errors@2.0.0 deps: depd@2.0.0 deps: statuses@2.0.1 deps: on-finished@2.4.1 deps: qs@6.10.3 deps: raw-body@2.5.1 deps: http-errors@2.0.0","title":"1.20.0 / 2022-04-02"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1192-2022-02-15","text":"deps: bytes@3.1.2 deps: qs@6.9.7 Fix handling of __proto__ keys deps: raw-body@2.4.3 deps: bytes@3.1.2","title":"1.19.2 / 2022-02-15"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1191-2021-12-10","text":"deps: bytes@3.1.1 deps: http-errors@1.8.1 deps: inherits@2.0.4 deps: toidentifier@1.0.1 deps: setprototypeof@1.2.0 deps: qs@6.9.6 deps: raw-body@2.4.2 deps: bytes@3.1.1 deps: http-errors@1.8.1 deps: safe-buffer@5.2.1 deps: type-is@~1.6.18","title":"1.19.1 / 2021-12-10"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1190-2019-04-25","text":"deps: bytes@3.1.0 Add petabyte ( pb ) support deps: http-errors@1.7.2 Set constructor name when possible deps: setprototypeof@1.1.1 deps: statuses@'>= 1.5.0 < 2' deps: iconv-lite@0.4.24 Added encoding MIK deps: qs@6.7.0 Fix parsing array brackets after index deps: raw-body@2.4.0 deps: bytes@3.1.0 deps: http-errors@1.7.2 deps: iconv-lite@0.4.24 deps: type-is@~1.6.17 deps: mime-types@~2.1.24 perf: prevent internal throw on invalid type","title":"1.19.0 / 2019-04-25"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1183-2018-05-14","text":"Fix stack trace for strict json parse error deps: depd@~1.1.2 perf: remove argument reassignment deps: http-errors@~1.6.3 deps: depd@~1.1.2 deps: setprototypeof@1.1.0 deps: statuses@'>= 1.3.1 < 2' deps: iconv-lite@0.4.23 Fix loading encoding with year appended Fix deprecation warnings on Node.js 10+ deps: qs@6.5.2 deps: raw-body@2.3.3 deps: http-errors@1.6.3 deps: iconv-lite@0.4.23 deps: type-is@~1.6.16 deps: mime-types@~2.1.18","title":"1.18.3 / 2018-05-14"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1182-2017-09-22","text":"deps: debug@2.6.9 perf: remove argument reassignment","title":"1.18.2 / 2017-09-22"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1181-2017-09-12","text":"deps: content-type@~1.0.4 perf: remove argument reassignment perf: skip parameter parsing when no parameters deps: iconv-lite@0.4.19 Fix ISO-8859-1 regression Update Windows-1255 deps: qs@6.5.1 Fix parsing & compacting very deep objects deps: raw-body@2.3.2 deps: iconv-lite@0.4.19","title":"1.18.1 / 2017-09-12"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1180-2017-09-08","text":"Fix JSON strict violation error to match native parse error Include the body property on verify errors Include the type property on all generated errors Use http-errors to set status code on errors deps: bytes@3.0.0 deps: debug@2.6.8 deps: depd@~1.1.1 Remove unnecessary Buffer loading deps: http-errors@~1.6.2 deps: depd@1.1.1 deps: iconv-lite@0.4.18 Add support for React Native Add a warning if not loaded as utf-8 Fix CESU-8 decoding in Node.js 8 Improve speed of ISO-8859-1 encoding deps: qs@6.5.0 deps: raw-body@2.3.1 Use http-errors for standard emitted errors deps: bytes@3.0.0 deps: iconv-lite@0.4.18 perf: skip buffer decoding on overage chunk perf: prevent internal throw when missing charset","title":"1.18.0 / 2017-09-08"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1172-2017-05-17","text":"deps: debug@2.6.7 Fix DEBUG_MAX_ARRAY_LENGTH deps: ms@2.0.0 deps: type-is@~1.6.15 deps: mime-types@~2.1.15","title":"1.17.2 / 2017-05-17"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1171-2017-03-06","text":"deps: qs@6.4.0 Fix regression parsing keys starting with [","title":"1.17.1 / 2017-03-06"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1170-2017-03-01","text":"deps: http-errors@~1.6.1 Make message property enumerable for HttpError s deps: setprototypeof@1.0.3 deps: qs@6.3.1 Fix compacting nested arrays","title":"1.17.0 / 2017-03-01"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1161-2017-02-10","text":"deps: debug@2.6.1 Fix deprecation messages in WebStorm and other editors Undeprecate DEBUG_FD set to 1 or 2","title":"1.16.1 / 2017-02-10"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1160-2017-01-17","text":"deps: debug@2.6.0 Allow colors in workers Deprecated DEBUG_FD environment variable Fix error when running under React Native Use same color for same namespace deps: ms@0.7.2 deps: http-errors@~1.5.1 deps: inherits@2.0.3 deps: setprototypeof@1.0.2 deps: statuses@'>= 1.3.1 < 2' deps: iconv-lite@0.4.15 Added encoding MS-31J Added encoding MS-932 Added encoding MS-936 Added encoding MS-949 Added encoding MS-950 Fix GBK/GB18030 handling of Euro character deps: qs@6.2.1 Fix array parsing from skipping empty values deps: raw-body@~2.2.0 deps: iconv-lite@0.4.15 deps: type-is@~1.6.14 deps: mime-types@~2.1.13","title":"1.16.0 / 2017-01-17"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1152-2016-06-19","text":"deps: bytes@2.4.0 deps: content-type@~1.0.2 perf: enable strict mode deps: http-errors@~1.5.0 Use setprototypeof module to replace __proto__ setting deps: statuses@'>= 1.3.0 < 2' perf: enable strict mode deps: qs@6.2.0 deps: raw-body@~2.1.7 deps: bytes@2.4.0 perf: remove double-cleanup on happy path deps: type-is@~1.6.13 deps: mime-types@~2.1.11","title":"1.15.2 / 2016-06-19"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1151-2016-05-05","text":"deps: bytes@2.3.0 Drop partial bytes on all parsed units Fix parsing byte string that looks like hex deps: raw-body@~2.1.6 deps: bytes@2.3.0 deps: type-is@~1.6.12 deps: mime-types@~2.1.10","title":"1.15.1 / 2016-05-05"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1150-2016-02-10","text":"deps: http-errors@~1.4.0 Add HttpError export, for err instanceof createError.HttpError deps: inherits@2.0.1 deps: statuses@'>= 1.2.1 < 2' deps: qs@6.1.0 deps: type-is@~1.6.11 deps: mime-types@~2.1.9","title":"1.15.0 / 2016-02-10"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1142-2015-12-16","text":"deps: bytes@2.2.0 deps: iconv-lite@0.4.13 deps: qs@5.2.0 deps: raw-body@~2.1.5 deps: bytes@2.2.0 deps: iconv-lite@0.4.13 deps: type-is@~1.6.10 deps: mime-types@~2.1.8","title":"1.14.2 / 2015-12-16"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1141-2015-09-27","text":"Fix issue where invalid charset results in 400 when verify used deps: iconv-lite@0.4.12 Fix CESU-8 decoding in Node.js 4.x deps: raw-body@~2.1.4 Fix masking critical errors from iconv-lite deps: iconv-lite@0.4.12 deps: type-is@~1.6.9 deps: mime-types@~2.1.7","title":"1.14.1 / 2015-09-27"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1140-2015-09-16","text":"Fix JSON strict parse error to match syntax errors Provide static require analysis in urlencoded parser deps: depd@~1.1.0 Support web browser loading deps: qs@5.1.0 deps: raw-body@~2.1.3 Fix sync callback when attaching data listener causes sync read deps: type-is@~1.6.8 Fix type error when given invalid type to match against deps: mime-types@~2.1.6","title":"1.14.0 / 2015-09-16"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1133-2015-07-31","text":"deps: type-is@~1.6.6 deps: mime-types@~2.1.4","title":"1.13.3 / 2015-07-31"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1132-2015-07-05","text":"deps: iconv-lite@0.4.11 deps: qs@4.0.0 Fix dropping parameters like hasOwnProperty Fix user-visible incompatibilities from 3.1.0 Fix various parsing edge cases deps: raw-body@~2.1.2 Fix error stack traces to skip makeError deps: iconv-lite@0.4.11 deps: type-is@~1.6.4 deps: mime-types@~2.1.2 perf: enable strict mode perf: remove argument reassignment","title":"1.13.2 / 2015-07-05"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1131-2015-06-16","text":"deps: qs@2.4.2 Downgraded from 3.1.0 because of user-visible incompatibilities","title":"1.13.1 / 2015-06-16"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1130-2015-06-14","text":"Add statusCode property on Error s, in addition to status Change type default to application/json for JSON parser Change type default to application/x-www-form-urlencoded for urlencoded parser Provide static require analysis Use the http-errors module to generate errors deps: bytes@2.1.0 Slight optimizations deps: iconv-lite@0.4.10 The encoding UTF-16 without BOM now defaults to UTF-16LE when detection fails Leading BOM is now removed when decoding deps: on-finished@~2.3.0 Add defined behavior for HTTP CONNECT requests Add defined behavior for HTTP Upgrade requests deps: ee-first@1.1.1 deps: qs@3.1.0 Fix dropping parameters like hasOwnProperty Fix various parsing edge cases Parsed object now has null prototype deps: raw-body@~2.1.1 Use unpipe module for unpiping requests deps: iconv-lite@0.4.10 deps: type-is@~1.6.3 deps: mime-types@~2.1.1 perf: reduce try block size perf: remove bitwise operations perf: enable strict mode perf: remove argument reassignment perf: remove delete call","title":"1.13.0 / 2015-06-14"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1124-2015-05-10","text":"deps: debug@~2.2.0 deps: qs@2.4.2 Fix allowing parameters like constructor deps: on-finished@~2.2.1 deps: raw-body@~2.0.1 Fix a false-positive when unpiping in Node.js 0.8 deps: bytes@2.0.1 deps: type-is@~1.6.2 deps: mime-types@~2.0.11","title":"1.12.4 / 2015-05-10"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1123-2015-04-15","text":"Slight efficiency improvement when not debugging deps: depd@~1.0.1 deps: iconv-lite@0.4.8 Add encoding alias UNICODE-1-1-UTF-7 deps: raw-body@1.3.4 Fix hanging callback if request aborts during read deps: iconv-lite@0.4.8","title":"1.12.3 / 2015-04-15"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1122-2015-03-16","text":"deps: qs@2.4.1 Fix error when parameter hasOwnProperty is present","title":"1.12.2 / 2015-03-16"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1121-2015-03-15","text":"deps: debug@~2.1.3 Fix high intensity foreground color for bold deps: ms@0.7.0 deps: type-is@~1.6.1 deps: mime-types@~2.0.10","title":"1.12.1 / 2015-03-15"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1120-2015-02-13","text":"add debug messages accept a function for the type option use content-type to parse Content-Type headers deps: iconv-lite@0.4.7 Gracefully support enumerables on Object.prototype deps: raw-body@1.3.3 deps: iconv-lite@0.4.7 deps: type-is@~1.6.0 fix argument reassignment fix false-positives in hasBody Transfer-Encoding check support wildcard for both type and subtype ( */* ) deps: mime-types@~2.0.9","title":"1.12.0 / 2015-02-13"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1110-2015-01-30","text":"make internal extended: true depth limit infinity deps: type-is@~1.5.6 deps: mime-types@~2.0.8","title":"1.11.0 / 2015-01-30"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1102-2015-01-20","text":"deps: iconv-lite@0.4.6 Fix rare aliases of single-byte encodings deps: raw-body@1.3.2 deps: iconv-lite@0.4.6","title":"1.10.2 / 2015-01-20"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1101-2015-01-01","text":"deps: on-finished@~2.2.0 deps: type-is@~1.5.5 deps: mime-types@~2.0.7","title":"1.10.1 / 2015-01-01"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1100-2014-12-02","text":"make internal extended: true array limit dynamic","title":"1.10.0 / 2014-12-02"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#193-2014-11-21","text":"deps: iconv-lite@0.4.5 Fix Windows-31J and X-SJIS encoding support deps: qs@2.3.3 Fix arrayLimit behavior deps: raw-body@1.3.1 deps: iconv-lite@0.4.5 deps: type-is@~1.5.3 deps: mime-types@~2.0.3","title":"1.9.3 / 2014-11-21"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#192-2014-10-27","text":"deps: qs@2.3.2 Fix parsing of mixed objects and values","title":"1.9.2 / 2014-10-27"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#191-2014-10-22","text":"deps: on-finished@~2.1.1 Fix handling of pipelined requests deps: qs@2.3.0 Fix parsing of mixed implicit and explicit arrays deps: type-is@~1.5.2 deps: mime-types@~2.0.2","title":"1.9.1 / 2014-10-22"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#190-2014-09-24","text":"include the charset in \"unsupported charset\" error message include the encoding in \"unsupported content encoding\" error message deps: depd@~1.0.0","title":"1.9.0 / 2014-09-24"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#184-2014-09-23","text":"fix content encoding to be case-insensitive","title":"1.8.4 / 2014-09-23"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#183-2014-09-19","text":"deps: qs@2.2.4 Fix issue with object keys starting with numbers truncated","title":"1.8.3 / 2014-09-19"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#182-2014-09-15","text":"deps: depd@0.4.5","title":"1.8.2 / 2014-09-15"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#181-2014-09-07","text":"deps: media-typer@0.3.0 deps: type-is@~1.5.1","title":"1.8.1 / 2014-09-07"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#180-2014-09-05","text":"make empty-body-handling consistent between chunked requests empty json produces {} empty raw produces new Buffer(0) empty text produces '' empty urlencoded produces {} deps: qs@2.2.3 Fix issue where first empty value in array is discarded deps: type-is@~1.5.0 fix hasbody to be true for content-length: 0","title":"1.8.0 / 2014-09-05"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#170-2014-09-01","text":"add parameterLimit option to urlencoded parser change urlencoded extended array limit to 100 respond with 413 when over parameterLimit in urlencoded","title":"1.7.0 / 2014-09-01"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#167-2014-08-29","text":"deps: qs@2.2.2 Remove unnecessary cloning","title":"1.6.7 / 2014-08-29"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#166-2014-08-27","text":"deps: qs@2.2.0 Array parsing fix Performance improvements","title":"1.6.6 / 2014-08-27"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#165-2014-08-16","text":"deps: on-finished@2.1.0","title":"1.6.5 / 2014-08-16"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#164-2014-08-14","text":"deps: qs@1.2.2","title":"1.6.4 / 2014-08-14"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#163-2014-08-10","text":"deps: qs@1.2.1","title":"1.6.3 / 2014-08-10"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#162-2014-08-07","text":"deps: qs@1.2.0 Fix parsing array of objects","title":"1.6.2 / 2014-08-07"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#161-2014-08-06","text":"deps: qs@1.1.0 Accept urlencoded square brackets Accept empty values in implicit array notation","title":"1.6.1 / 2014-08-06"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#160-2014-08-05","text":"deps: qs@1.0.2 Complete rewrite Limits array length to 20 Limits object depth to 5 Limits parameters to 1,000","title":"1.6.0 / 2014-08-05"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#152-2014-07-27","text":"deps: depd@0.4.4 Work-around v8 generating empty stack traces","title":"1.5.2 / 2014-07-27"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#151-2014-07-26","text":"deps: depd@0.4.3 Fix exception when global Error.stackTraceLimit is too low","title":"1.5.1 / 2014-07-26"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#150-2014-07-20","text":"deps: depd@0.4.2 Add TRACE_DEPRECATION environment variable Remove non-standard grey color from color output Support --no-deprecation argument Support --trace-deprecation argument deps: iconv-lite@0.4.4 Added encoding UTF-7 deps: raw-body@1.3.0 deps: iconv-lite@0.4.4 Added encoding UTF-7 Fix Cannot switch to old mode now error on Node.js 0.10+ deps: type-is@~1.3.2","title":"1.5.0 / 2014-07-20"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#143-2014-06-19","text":"deps: type-is@1.3.1 fix global variable leak","title":"1.4.3 / 2014-06-19"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#142-2014-06-19","text":"deps: type-is@1.3.0 improve type parsing","title":"1.4.2 / 2014-06-19"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#141-2014-06-19","text":"fix urlencoded extended deprecation message","title":"1.4.1 / 2014-06-19"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#140-2014-06-19","text":"add text parser add raw parser check accepted charset in content-type (accepts utf-8) check accepted encoding in content-encoding (accepts identity) deprecate bodyParser() middleware; use .json() and .urlencoded() as needed deprecate urlencoded() without provided extended option lazy-load urlencoded parsers parsers split into files for reduced mem usage support gzip and deflate bodies set inflate: false to turn off deps: raw-body@1.2.2 Support all encodings from iconv-lite","title":"1.4.0 / 2014-06-19"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#131-2014-06-11","text":"deps: type-is@1.2.1 Switch dependency from mime to mime-types@1.0.0","title":"1.3.1 / 2014-06-11"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#130-2014-05-31","text":"add extended option to urlencoded parser","title":"1.3.0 / 2014-05-31"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#122-2014-05-27","text":"deps: raw-body@1.1.6 assert stream encoding on node.js 0.8 assert stream encoding on node.js < 0.10.6 deps: bytes@1","title":"1.2.2 / 2014-05-27"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#121-2014-05-26","text":"invoke next(err) after request fully read prevents hung responses and socket hang ups","title":"1.2.1 / 2014-05-26"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#120-2014-05-11","text":"add verify option deps: type-is@1.2.0 support suffix matching","title":"1.2.0 / 2014-05-11"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#112-2014-05-11","text":"improve json parser speed","title":"1.1.2 / 2014-05-11"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#111-2014-05-11","text":"fix repeated limit parsing with every request","title":"1.1.1 / 2014-05-11"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#110-2014-05-10","text":"add type option deps: pin for safety and consistency","title":"1.1.0 / 2014-05-10"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#102-2014-04-14","text":"use type-is module","title":"1.0.2 / 2014-04-14"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#101-2014-03-20","text":"lower default limits to 100kb","title":"1.0.1 / 2014-03-20"},{"location":"system-desing/crud-app/JS/server/node_modules/brace-expansion/","text":"brace-expansion Brace expansion , as known from sh/bash, in JavaScript. Example var expand = require ( 'brace-expansion' ); expand ( 'file-{a,b,c}.jpg' ) // => ['file-a.jpg', 'file-b.jpg', 'file-c.jpg'] expand ( '-v{,,}' ) // => ['-v', '-v', '-v'] expand ( 'file{0..2}.jpg' ) // => ['file0.jpg', 'file1.jpg', 'file2.jpg'] expand ( 'file-{a..c}.jpg' ) // => ['file-a.jpg', 'file-b.jpg', 'file-c.jpg'] expand ( 'file{2..0}.jpg' ) // => ['file2.jpg', 'file1.jpg', 'file0.jpg'] expand ( 'file{0..4..2}.jpg' ) // => ['file0.jpg', 'file2.jpg', 'file4.jpg'] expand ( 'file-{a..e..2}.jpg' ) // => ['file-a.jpg', 'file-c.jpg', 'file-e.jpg'] expand ( 'file{00..10..5}.jpg' ) // => ['file00.jpg', 'file05.jpg', 'file10.jpg'] expand ( '{{A..C},{a..c}}' ) // => ['A', 'B', 'C', 'a', 'b', 'c'] expand ( 'ppp{,config,oe{,conf}}' ) // => ['ppp', 'pppconfig', 'pppoe', 'pppoeconf'] API var expand = require ( 'brace-expansion' ); var expanded = expand(str) Return an array of all possible and valid expansions of str . If none are found, [str] is returned. Valid expansions are: /^(.*,)+(.+)?$/ // {a,b,...} A comma separated list of options, like {a,b} or {a,{b,c}} or {,a,} . /^-?\\d+\\.\\.-?\\d+(\\.\\.-?\\d+)?$/ // {x..y[..incr]} A numeric sequence from x to y inclusive, with optional increment. If x or y start with a leading 0 , all the numbers will be padded to have equal length. Negative numbers and backwards iteration work too. /^-?\\d+\\.\\.-?\\d+(\\.\\.-?\\d+)?$/ // {x..y[..incr]} An alphabetic sequence from x to y inclusive, with optional increment. x and y must be exactly one character, and if given, incr must be a number. For compatibility reasons, the string ${ is not eligible for brace expansion. Installation With npm do: npm install brace-expansion Contributors Julian Gruber Isaac Z. Schlueter Sponsors This module is proudly supported by my Sponsors ! Do you want to support modules like this to improve their quality, stability and weigh in on new features? Then please consider donating to my Patreon . Not sure how much of my modules you're using? Try feross/thanks ! License (MIT) Copyright (c) 2013 Julian Gruber <julian@juliangruber.com> Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"brace-expansion"},{"location":"system-desing/crud-app/JS/server/node_modules/brace-expansion/#brace-expansion","text":"Brace expansion , as known from sh/bash, in JavaScript.","title":"brace-expansion"},{"location":"system-desing/crud-app/JS/server/node_modules/brace-expansion/#example","text":"var expand = require ( 'brace-expansion' ); expand ( 'file-{a,b,c}.jpg' ) // => ['file-a.jpg', 'file-b.jpg', 'file-c.jpg'] expand ( '-v{,,}' ) // => ['-v', '-v', '-v'] expand ( 'file{0..2}.jpg' ) // => ['file0.jpg', 'file1.jpg', 'file2.jpg'] expand ( 'file-{a..c}.jpg' ) // => ['file-a.jpg', 'file-b.jpg', 'file-c.jpg'] expand ( 'file{2..0}.jpg' ) // => ['file2.jpg', 'file1.jpg', 'file0.jpg'] expand ( 'file{0..4..2}.jpg' ) // => ['file0.jpg', 'file2.jpg', 'file4.jpg'] expand ( 'file-{a..e..2}.jpg' ) // => ['file-a.jpg', 'file-c.jpg', 'file-e.jpg'] expand ( 'file{00..10..5}.jpg' ) // => ['file00.jpg', 'file05.jpg', 'file10.jpg'] expand ( '{{A..C},{a..c}}' ) // => ['A', 'B', 'C', 'a', 'b', 'c'] expand ( 'ppp{,config,oe{,conf}}' ) // => ['ppp', 'pppconfig', 'pppoe', 'pppoeconf']","title":"Example"},{"location":"system-desing/crud-app/JS/server/node_modules/brace-expansion/#api","text":"var expand = require ( 'brace-expansion' );","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/brace-expansion/#var-expanded-expandstr","text":"Return an array of all possible and valid expansions of str . If none are found, [str] is returned. Valid expansions are: /^(.*,)+(.+)?$/ // {a,b,...} A comma separated list of options, like {a,b} or {a,{b,c}} or {,a,} . /^-?\\d+\\.\\.-?\\d+(\\.\\.-?\\d+)?$/ // {x..y[..incr]} A numeric sequence from x to y inclusive, with optional increment. If x or y start with a leading 0 , all the numbers will be padded to have equal length. Negative numbers and backwards iteration work too. /^-?\\d+\\.\\.-?\\d+(\\.\\.-?\\d+)?$/ // {x..y[..incr]} An alphabetic sequence from x to y inclusive, with optional increment. x and y must be exactly one character, and if given, incr must be a number. For compatibility reasons, the string ${ is not eligible for brace expansion.","title":"var expanded = expand(str)"},{"location":"system-desing/crud-app/JS/server/node_modules/brace-expansion/#installation","text":"With npm do: npm install brace-expansion","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/brace-expansion/#contributors","text":"Julian Gruber Isaac Z. Schlueter","title":"Contributors"},{"location":"system-desing/crud-app/JS/server/node_modules/brace-expansion/#sponsors","text":"This module is proudly supported by my Sponsors ! Do you want to support modules like this to improve their quality, stability and weigh in on new features? Then please consider donating to my Patreon . Not sure how much of my modules you're using? Try feross/thanks !","title":"Sponsors"},{"location":"system-desing/crud-app/JS/server/node_modules/brace-expansion/#license","text":"(MIT) Copyright (c) 2013 Julian Gruber <julian@juliangruber.com> Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/","text":"braces Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support for the Bash 4.3 braces specification, without sacrificing speed. Please consider following this project's author, Jon Schlinkert , and consider starring the project to show your and support. Install Install with npm : $ npm install --save braces v3.0.0 Released!! See the changelog for details. Why use braces? Brace patterns make globs more powerful by adding the ability to match specific ranges and sequences of characters. Accurate - complete support for the Bash 4.3 Brace Expansion specification (passes all of the Bash braces tests) fast and performant - Starts fast, runs fast and scales well as patterns increase in complexity. Organized code base - The parser and compiler are easy to maintain and update when edge cases crop up. Well-tested - Thousands of test assertions, and passes all of the Bash, minimatch, and brace-expansion unit tests (as of the date this was written). Safer - You shouldn't have to worry about users defining aggressive or malicious brace patterns that can break your application. Braces takes measures to prevent malicious regex that can be used for DDoS attacks (see catastrophic backtracking ). Supports lists - (aka \"sets\") a/{b,c}/d => ['a/b/d', 'a/c/d'] Supports sequences - (aka \"ranges\") {01..03} => ['01', '02', '03'] Supports steps - (aka \"increments\") {2..10..2} => ['2', '4', '6', '8', '10'] Supports escaping - To prevent evaluation of special characters. Usage The main export is a function that takes one or more brace patterns and options . const braces = require ( 'braces' ); // braces(patterns[, options]); console . log ( braces ([ '{01..05}' , '{a..e}' ])); //=> ['(0[1-5])', '([a-e])'] console . log ( braces ([ '{01..05}' , '{a..e}' ], { expand : true })); //=> ['01', '02', '03', '04', '05', 'a', 'b', 'c', 'd', 'e'] Brace Expansion vs. Compilation By default, brace patterns are compiled into strings that are optimized for creating regular expressions and matching. Compiled console . log ( braces ( 'a/{x,y,z}/b' )); //=> ['a/(x|y|z)/b'] console . log ( braces ([ 'a/{01..20}/b' , 'a/{1..5}/b' ])); //=> [ 'a/(0[1-9]|1[0-9]|20)/b', 'a/([1-5])/b' ] Expanded Enable brace expansion by setting the expand option to true, or by using braces.expand() (returns an array similar to what you'd expect from Bash, or echo {1..5} , or minimatch ): console . log ( braces ( 'a/{x,y,z}/b' , { expand : true })); //=> ['a/x/b', 'a/y/b', 'a/z/b'] console . log ( braces . expand ( '{01..10}' )); //=> ['01','02','03','04','05','06','07','08','09','10'] Lists Expand lists (like Bash \"sets\"): console . log ( braces ( 'a/{foo,bar,baz}/*.js' )); //=> ['a/(foo|bar|baz)/*.js'] console . log ( braces . expand ( 'a/{foo,bar,baz}/*.js' )); //=> ['a/foo/*.js', 'a/bar/*.js', 'a/baz/*.js'] Sequences Expand ranges of characters (like Bash \"sequences\"): console . log ( braces . expand ( '{1..3}' )); // ['1', '2', '3'] console . log ( braces . expand ( 'a/{1..3}/b' )); // ['a/1/b', 'a/2/b', 'a/3/b'] console . log ( braces ( '{a..c}' , { expand : true })); // ['a', 'b', 'c'] console . log ( braces ( 'foo/{a..c}' , { expand : true })); // ['foo/a', 'foo/b', 'foo/c'] // supports zero-padded ranges console . log ( braces ( 'a/{01..03}/b' )); //=> ['a/(0[1-3])/b'] console . log ( braces ( 'a/{001..300}/b' )); //=> ['a/(0{2}[1-9]|0[1-9][0-9]|[12][0-9]{2}|300)/b'] See fill-range for all available range-expansion options. Steppped ranges Steps, or increments, may be used with ranges: console . log ( braces . expand ( '{2..10..2}' )); //=> ['2', '4', '6', '8', '10'] console . log ( braces ( '{2..10..2}' )); //=> ['(2|4|6|8|10)'] When the .optimize method is used, or options.optimize is set to true, sequences are passed to to-regex-range for expansion. Nesting Brace patterns may be nested. The results of each expanded string are not sorted, and left to right order is preserved. \"Expanded\" braces console . log ( braces . expand ( 'a{b,c,/{x,y}}/e' )); //=> ['ab/e', 'ac/e', 'a/x/e', 'a/y/e'] console . log ( braces . expand ( 'a/{x,{1..5},y}/c' )); //=> ['a/x/c', 'a/1/c', 'a/2/c', 'a/3/c', 'a/4/c', 'a/5/c', 'a/y/c'] \"Optimized\" braces console . log ( braces ( 'a{b,c,/{x,y}}/e' )); //=> ['a(b|c|/(x|y))/e'] console . log ( braces ( 'a/{x,{1..5},y}/c' )); //=> ['a/(x|([1-5])|y)/c'] Escaping Escaping braces A brace pattern will not be expanded or evaluted if either the opening or closing brace is escaped : console . log ( braces . expand ( 'a\\\\{d,c,b}e' )); //=> ['a{d,c,b}e'] console . log ( braces . expand ( 'a{d,c,b\\\\}e' )); //=> ['a{d,c,b}e'] Escaping commas Commas inside braces may also be escaped: console . log ( braces . expand ( 'a{b\\\\,c}d' )); //=> ['a{b,c}d'] console . log ( braces . expand ( 'a{d\\\\,c,b}e' )); //=> ['ad,ce', 'abe'] Single items Following bash conventions, a brace pattern is also not expanded when it contains a single character: console . log ( braces . expand ( 'a{b}c' )); //=> ['a{b}c'] Options options.maxLength Type : Number Default : 10,000 Description : Limit the length of the input string. Useful when the input string is generated or your application allows users to pass a string, et cetera. console . log ( braces ( 'a/{b,c}/d' , { maxLength : 3 })); //=> throws an error options.expand Type : Boolean Default : undefined Description : Generate an \"expanded\" brace pattern (alternatively you can use the braces.expand() method, which does the same thing). console . log ( braces ( 'a/{b,c}/d' , { expand : true })); //=> [ 'a/b/d', 'a/c/d' ] options.nodupes Type : Boolean Default : undefined Description : Remove duplicates from the returned array. options.rangeLimit Type : Number Default : 1000 Description : To prevent malicious patterns from being passed by users, an error is thrown when braces.expand() is used or options.expand is true and the generated range will exceed the rangeLimit . You can customize options.rangeLimit or set it to Inifinity to disable this altogether. Examples // pattern exceeds the \"rangeLimit\", so it's optimized automatically console . log ( braces . expand ( '{1..1000}' )); //=> ['([1-9]|[1-9][0-9]{1,2}|1000)'] // pattern does not exceed \"rangeLimit\", so it's NOT optimized console . log ( braces . expand ( '{1..100}' )); //=> ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100'] options.transform Type : Function Default : undefined Description : Customize range expansion. Example: Transforming non-numeric values const alpha = braces . expand ( 'x/{a..e}/y' , { transform ( value , index ) { // When non-numeric values are passed, \"value\" is a character code. return 'foo/' + String . fromCharCode ( value ) + '-' + index ; }, }); console . log ( alpha ); //=> [ 'x/foo/a-0/y', 'x/foo/b-1/y', 'x/foo/c-2/y', 'x/foo/d-3/y', 'x/foo/e-4/y' ] Example: Transforming numeric values const numeric = braces . expand ( '{1..5}' , { transform ( value ) { // when numeric values are passed, \"value\" is a number return 'foo/' + value * 2 ; }, }); console . log ( numeric ); //=> [ 'foo/2', 'foo/4', 'foo/6', 'foo/8', 'foo/10' ] options.quantifiers Type : Boolean Default : undefined Description : In regular expressions, quanitifiers can be used to specify how many times a token can be repeated. For example, a{1,3} will match the letter a one to three times. Unfortunately, regex quantifiers happen to share the same syntax as Bash lists The quantifiers option tells braces to detect when regex quantifiers are defined in the given pattern, and not to try to expand them as lists. Examples const braces = require ( 'braces' ); console . log ( braces ( 'a/b{1,3}/{x,y,z}' )); //=> [ 'a/b(1|3)/(x|y|z)' ] console . log ( braces ( 'a/b{1,3}/{x,y,z}' , { quantifiers : true })); //=> [ 'a/b{1,3}/(x|y|z)' ] console . log ( braces ( 'a/b{1,3}/{x,y,z}' , { quantifiers : true , expand : true })); //=> [ 'a/b{1,3}/x', 'a/b{1,3}/y', 'a/b{1,3}/z' ] options.keepEscaping Type : Boolean Default : undefined Description : Do not strip backslashes that were used for escaping from the result. What is \"brace expansion\"? Brace expansion is a type of parameter expansion that was made popular by unix shells for generating lists of strings, as well as regex-like matching when used alongside wildcards (globs). In addition to \"expansion\", braces are also used for matching. In other words: brace expansion is for generating new lists brace matching is for filtering existing lists More about brace expansion (click to expand) There are two main types of brace expansion: 1. **lists**: which are defined using comma-separated values inside curly braces: `{a,b,c}` 2. **sequences**: which are defined using a starting value and an ending value, separated by two dots: `a{1..3}b`. Optionally, a third argument may be passed to define a \"step\" or increment to use: `a{1..100..10}b`. These are also sometimes referred to as \"ranges\". Here are some example brace patterns to illustrate how they work: **Sets** {a,b,c} => a b c {a,b,c}{1,2} => a1 a2 b1 b2 c1 c2 **Sequences** {1..9} => 1 2 3 4 5 6 7 8 9 {4..-4} => 4 3 2 1 0 -1 -2 -3 -4 {1..20..3} => 1 4 7 10 13 16 19 {a..j} => a b c d e f g h i j {j..a} => j i h g f e d c b a {a..z..3} => a d g j m p s v y **Combination** Sets and sequences can be mixed together or used along with any other strings. {a,b,c}{1..3} => a1 a2 a3 b1 b2 b3 c1 c2 c3 foo/{a,b,c}/bar => foo/a/bar foo/b/bar foo/c/bar The fact that braces can be \"expanded\" from relatively simple patterns makes them ideal for quickly generating test fixtures, file paths, and similar use cases. ## Brace matching In addition to _expansion_, brace patterns are also useful for performing regular-expression-like matching. For example, the pattern `foo/{1..3}/bar` would match any of following strings: foo/1/bar foo/2/bar foo/3/bar But not: baz/1/qux baz/2/qux baz/3/qux Braces can also be combined with [glob patterns](https://github.com/jonschlinkert/micromatch) to perform more advanced wildcard matching. For example, the pattern `*/{1..3}/*` would match any of following strings: foo/1/bar foo/2/bar foo/3/bar baz/1/qux baz/2/qux baz/3/qux ## Brace matching pitfalls Although brace patterns offer a user-friendly way of matching ranges or sets of strings, there are also some major disadvantages and potential risks you should be aware of. ### tldr **\"brace bombs\"** - brace expansion can eat up a huge amount of processing resources - as brace patterns increase _linearly in size_, the system resources required to expand the pattern increase exponentially - users can accidentally (or intentially) exhaust your system's resources resulting in the equivalent of a DoS attack (bonus: no programming knowledge is required!) For a more detailed explanation with examples, see the [geometric complexity](#geometric-complexity) section. ### The solution Jump to the [performance section](#performance) to see how Braces solves this problem in comparison to other libraries. ### Geometric complexity At minimum, brace patterns with sets limited to two elements have quadradic or `O(n^2)` complexity. But the complexity of the algorithm increases exponentially as the number of sets, _and elements per set_, increases, which is `O(n^c)`. For example, the following sets demonstrate quadratic (`O(n^2)`) complexity: {1,2}{3,4} => (2X2) => 13 14 23 24 {1,2}{3,4}{5,6} => (2X2X2) => 135 136 145 146 235 236 245 246 But add an element to a set, and we get a n-fold Cartesian product with `O(n^c)` complexity: {1,2,3}{4,5,6}{7,8,9} => (3X3X3) => 147 148 149 157 158 159 167 168 169 247 248 249 257 258 259 267 268 269 347 348 349 357 358 359 367 368 369 Now, imagine how this complexity grows given that each element is a n-tuple: {1..100}{1..100} => (100X100) => 10,000 elements (38.4 kB) {1..100}{1..100}{1..100} => (100X100X100) => 1,000,000 elements (5.76 MB) Although these examples are clearly contrived, they demonstrate how brace patterns can quickly grow out of control. **More information** Interested in learning more about brace expansion? - [linuxjournal/bash-brace-expansion](http://www.linuxjournal.com/content/bash-brace-expansion) - [rosettacode/Brace_expansion](https://rosettacode.org/wiki/Brace_expansion) - [cartesian product](https://en.wikipedia.org/wiki/Cartesian_product) Performance Braces is not only screaming fast, it's also more accurate the other brace expansion libraries. Better algorithms Fortunately there is a solution to the \"brace bomb\" problem : don't expand brace patterns into an array when they're used for matching . Instead, convert the pattern into an optimized regular expression. This is easier said than done, and braces is the only library that does this currently. The proof is in the numbers Minimatch gets exponentially slower as patterns increase in complexity, braces does not. The following results were generated using braces() and minimatch.braceExpand() , respectively. Pattern braces [minimatch][] {1..9007199254740991} [^1] 298 B (5ms 459\u03bcs) N/A (freezes) {1..1000000000000000} 41 B (1ms 15\u03bcs) N/A (freezes) {1..100000000000000} 40 B (890\u03bcs) N/A (freezes) {1..10000000000000} 39 B (2ms 49\u03bcs) N/A (freezes) {1..1000000000000} 38 B (608\u03bcs) N/A (freezes) {1..100000000000} 37 B (397\u03bcs) N/A (freezes) {1..10000000000} 35 B (983\u03bcs) N/A (freezes) {1..1000000000} 34 B (798\u03bcs) N/A (freezes) {1..100000000} 33 B (733\u03bcs) N/A (freezes) {1..10000000} 32 B (5ms 632\u03bcs) 78.89 MB (16s 388ms 569\u03bcs) {1..1000000} 31 B (1ms 381\u03bcs) 6.89 MB (1s 496ms 887\u03bcs) {1..100000} 30 B (950\u03bcs) 588.89 kB (146ms 921\u03bcs) {1..10000} 29 B (1ms 114\u03bcs) 48.89 kB (14ms 187\u03bcs) {1..1000} 28 B (760\u03bcs) 3.89 kB (1ms 453\u03bcs) {1..100} 22 B (345\u03bcs) 291 B (196\u03bcs) {1..10} 10 B (533\u03bcs) 20 B (37\u03bcs) {1..3} 7 B (190\u03bcs) 5 B (27\u03bcs) Faster algorithms When you need expansion, braces is still much faster. (the following results were generated using braces.expand() and minimatch.braceExpand() , respectively) Pattern braces [minimatch][] {1..10000000} 78.89 MB (2s 698ms 642\u03bcs) 78.89 MB (18s 601ms 974\u03bcs) {1..1000000} 6.89 MB (458ms 576\u03bcs) 6.89 MB (1s 491ms 621\u03bcs) {1..100000} 588.89 kB (20ms 728\u03bcs) 588.89 kB (156ms 919\u03bcs) {1..10000} 48.89 kB (2ms 202\u03bcs) 48.89 kB (13ms 641\u03bcs) {1..1000} 3.89 kB (1ms 796\u03bcs) 3.89 kB (1ms 958\u03bcs) {1..100} 291 B (424\u03bcs) 291 B (211\u03bcs) {1..10} 20 B (487\u03bcs) 20 B (72\u03bcs) {1..3} 5 B (166\u03bcs) 5 B (27\u03bcs) If you'd like to run these comparisons yourself, see test/support/generate.js . Benchmarks Running benchmarks Install dev dependencies: npm i -d && npm benchmark Latest results Braces is more accurate, without sacrificing performance. \u25cf expand - range ( expanded ) braces x 53 ,167 ops/sec \u00b10.12% ( 102 runs sampled ) minimatch x 11 ,378 ops/sec \u00b10.10% ( 102 runs sampled ) \u25cf expand - range ( optimized for regex ) braces x 373 ,442 ops/sec \u00b10.04% ( 100 runs sampled ) minimatch x 3 ,262 ops/sec \u00b10.18% ( 100 runs sampled ) \u25cf expand - nested ranges ( expanded ) braces x 33 ,921 ops/sec \u00b10.09% ( 99 runs sampled ) minimatch x 10 ,855 ops/sec \u00b10.28% ( 100 runs sampled ) \u25cf expand - nested ranges ( optimized for regex ) braces x 287 ,479 ops/sec \u00b10.52% ( 98 runs sampled ) minimatch x 3 ,219 ops/sec \u00b10.28% ( 101 runs sampled ) \u25cf expand - set ( expanded ) braces x 238 ,243 ops/sec \u00b10.19% ( 97 runs sampled ) minimatch x 538 ,268 ops/sec \u00b10.31% ( 96 runs sampled ) \u25cf expand - set ( optimized for regex ) braces x 321 ,844 ops/sec \u00b10.10% ( 97 runs sampled ) minimatch x 140 ,600 ops/sec \u00b10.15% ( 100 runs sampled ) \u25cf expand - nested sets ( expanded ) braces x 165 ,371 ops/sec \u00b10.42% ( 96 runs sampled ) minimatch x 337 ,720 ops/sec \u00b10.28% ( 100 runs sampled ) \u25cf expand - nested sets ( optimized for regex ) braces x 242 ,948 ops/sec \u00b10.12% ( 99 runs sampled ) minimatch x 87 ,403 ops/sec \u00b10.79% ( 96 runs sampled ) About Contributing Pull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new). Running Tests Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command: $ npm install && npm test Building docs _(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_ To generate the readme, run the following command: $ npm install -g verbose/verb#dev verb-generate-readme && verb Contributors Commits Contributor 197 jonschlinkert 4 doowb 1 es128 1 eush77 1 hemanth 1 wtgtybhertgeghgtwtg Author Jon Schlinkert GitHub Profile Twitter Profile LinkedIn Profile License Copyright \u00a9 2019, Jon Schlinkert . Released under the MIT License . This file was generated by verb-generate-readme , v0.8.0, on April 08, 2019.","title":"braces Donate NPM version NPM monthly downloads NPM total downloads Linux Build Status"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#braces","text":"Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support for the Bash 4.3 braces specification, without sacrificing speed. Please consider following this project's author, Jon Schlinkert , and consider starring the project to show your and support.","title":"braces"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#install","text":"Install with npm : $ npm install --save braces","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#v300-released","text":"See the changelog for details.","title":"v3.0.0 Released!!"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#why-use-braces","text":"Brace patterns make globs more powerful by adding the ability to match specific ranges and sequences of characters. Accurate - complete support for the Bash 4.3 Brace Expansion specification (passes all of the Bash braces tests) fast and performant - Starts fast, runs fast and scales well as patterns increase in complexity. Organized code base - The parser and compiler are easy to maintain and update when edge cases crop up. Well-tested - Thousands of test assertions, and passes all of the Bash, minimatch, and brace-expansion unit tests (as of the date this was written). Safer - You shouldn't have to worry about users defining aggressive or malicious brace patterns that can break your application. Braces takes measures to prevent malicious regex that can be used for DDoS attacks (see catastrophic backtracking ). Supports lists - (aka \"sets\") a/{b,c}/d => ['a/b/d', 'a/c/d'] Supports sequences - (aka \"ranges\") {01..03} => ['01', '02', '03'] Supports steps - (aka \"increments\") {2..10..2} => ['2', '4', '6', '8', '10'] Supports escaping - To prevent evaluation of special characters.","title":"Why use braces?"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#usage","text":"The main export is a function that takes one or more brace patterns and options . const braces = require ( 'braces' ); // braces(patterns[, options]); console . log ( braces ([ '{01..05}' , '{a..e}' ])); //=> ['(0[1-5])', '([a-e])'] console . log ( braces ([ '{01..05}' , '{a..e}' ], { expand : true })); //=> ['01', '02', '03', '04', '05', 'a', 'b', 'c', 'd', 'e']","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#brace-expansion-vs-compilation","text":"By default, brace patterns are compiled into strings that are optimized for creating regular expressions and matching. Compiled console . log ( braces ( 'a/{x,y,z}/b' )); //=> ['a/(x|y|z)/b'] console . log ( braces ([ 'a/{01..20}/b' , 'a/{1..5}/b' ])); //=> [ 'a/(0[1-9]|1[0-9]|20)/b', 'a/([1-5])/b' ] Expanded Enable brace expansion by setting the expand option to true, or by using braces.expand() (returns an array similar to what you'd expect from Bash, or echo {1..5} , or minimatch ): console . log ( braces ( 'a/{x,y,z}/b' , { expand : true })); //=> ['a/x/b', 'a/y/b', 'a/z/b'] console . log ( braces . expand ( '{01..10}' )); //=> ['01','02','03','04','05','06','07','08','09','10']","title":"Brace Expansion vs. Compilation"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#lists","text":"Expand lists (like Bash \"sets\"): console . log ( braces ( 'a/{foo,bar,baz}/*.js' )); //=> ['a/(foo|bar|baz)/*.js'] console . log ( braces . expand ( 'a/{foo,bar,baz}/*.js' )); //=> ['a/foo/*.js', 'a/bar/*.js', 'a/baz/*.js']","title":"Lists"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#sequences","text":"Expand ranges of characters (like Bash \"sequences\"): console . log ( braces . expand ( '{1..3}' )); // ['1', '2', '3'] console . log ( braces . expand ( 'a/{1..3}/b' )); // ['a/1/b', 'a/2/b', 'a/3/b'] console . log ( braces ( '{a..c}' , { expand : true })); // ['a', 'b', 'c'] console . log ( braces ( 'foo/{a..c}' , { expand : true })); // ['foo/a', 'foo/b', 'foo/c'] // supports zero-padded ranges console . log ( braces ( 'a/{01..03}/b' )); //=> ['a/(0[1-3])/b'] console . log ( braces ( 'a/{001..300}/b' )); //=> ['a/(0{2}[1-9]|0[1-9][0-9]|[12][0-9]{2}|300)/b'] See fill-range for all available range-expansion options.","title":"Sequences"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#steppped-ranges","text":"Steps, or increments, may be used with ranges: console . log ( braces . expand ( '{2..10..2}' )); //=> ['2', '4', '6', '8', '10'] console . log ( braces ( '{2..10..2}' )); //=> ['(2|4|6|8|10)'] When the .optimize method is used, or options.optimize is set to true, sequences are passed to to-regex-range for expansion.","title":"Steppped ranges"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#nesting","text":"Brace patterns may be nested. The results of each expanded string are not sorted, and left to right order is preserved. \"Expanded\" braces console . log ( braces . expand ( 'a{b,c,/{x,y}}/e' )); //=> ['ab/e', 'ac/e', 'a/x/e', 'a/y/e'] console . log ( braces . expand ( 'a/{x,{1..5},y}/c' )); //=> ['a/x/c', 'a/1/c', 'a/2/c', 'a/3/c', 'a/4/c', 'a/5/c', 'a/y/c'] \"Optimized\" braces console . log ( braces ( 'a{b,c,/{x,y}}/e' )); //=> ['a(b|c|/(x|y))/e'] console . log ( braces ( 'a/{x,{1..5},y}/c' )); //=> ['a/(x|([1-5])|y)/c']","title":"Nesting"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#escaping","text":"Escaping braces A brace pattern will not be expanded or evaluted if either the opening or closing brace is escaped : console . log ( braces . expand ( 'a\\\\{d,c,b}e' )); //=> ['a{d,c,b}e'] console . log ( braces . expand ( 'a{d,c,b\\\\}e' )); //=> ['a{d,c,b}e'] Escaping commas Commas inside braces may also be escaped: console . log ( braces . expand ( 'a{b\\\\,c}d' )); //=> ['a{b,c}d'] console . log ( braces . expand ( 'a{d\\\\,c,b}e' )); //=> ['ad,ce', 'abe'] Single items Following bash conventions, a brace pattern is also not expanded when it contains a single character: console . log ( braces . expand ( 'a{b}c' )); //=> ['a{b}c']","title":"Escaping"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#options","text":"","title":"Options"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#optionsmaxlength","text":"Type : Number Default : 10,000 Description : Limit the length of the input string. Useful when the input string is generated or your application allows users to pass a string, et cetera. console . log ( braces ( 'a/{b,c}/d' , { maxLength : 3 })); //=> throws an error","title":"options.maxLength"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#optionsexpand","text":"Type : Boolean Default : undefined Description : Generate an \"expanded\" brace pattern (alternatively you can use the braces.expand() method, which does the same thing). console . log ( braces ( 'a/{b,c}/d' , { expand : true })); //=> [ 'a/b/d', 'a/c/d' ]","title":"options.expand"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#optionsnodupes","text":"Type : Boolean Default : undefined Description : Remove duplicates from the returned array.","title":"options.nodupes"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#optionsrangelimit","text":"Type : Number Default : 1000 Description : To prevent malicious patterns from being passed by users, an error is thrown when braces.expand() is used or options.expand is true and the generated range will exceed the rangeLimit . You can customize options.rangeLimit or set it to Inifinity to disable this altogether. Examples // pattern exceeds the \"rangeLimit\", so it's optimized automatically console . log ( braces . expand ( '{1..1000}' )); //=> ['([1-9]|[1-9][0-9]{1,2}|1000)'] // pattern does not exceed \"rangeLimit\", so it's NOT optimized console . log ( braces . expand ( '{1..100}' )); //=> ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']","title":"options.rangeLimit"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#optionstransform","text":"Type : Function Default : undefined Description : Customize range expansion. Example: Transforming non-numeric values const alpha = braces . expand ( 'x/{a..e}/y' , { transform ( value , index ) { // When non-numeric values are passed, \"value\" is a character code. return 'foo/' + String . fromCharCode ( value ) + '-' + index ; }, }); console . log ( alpha ); //=> [ 'x/foo/a-0/y', 'x/foo/b-1/y', 'x/foo/c-2/y', 'x/foo/d-3/y', 'x/foo/e-4/y' ] Example: Transforming numeric values const numeric = braces . expand ( '{1..5}' , { transform ( value ) { // when numeric values are passed, \"value\" is a number return 'foo/' + value * 2 ; }, }); console . log ( numeric ); //=> [ 'foo/2', 'foo/4', 'foo/6', 'foo/8', 'foo/10' ]","title":"options.transform"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#optionsquantifiers","text":"Type : Boolean Default : undefined Description : In regular expressions, quanitifiers can be used to specify how many times a token can be repeated. For example, a{1,3} will match the letter a one to three times. Unfortunately, regex quantifiers happen to share the same syntax as Bash lists The quantifiers option tells braces to detect when regex quantifiers are defined in the given pattern, and not to try to expand them as lists. Examples const braces = require ( 'braces' ); console . log ( braces ( 'a/b{1,3}/{x,y,z}' )); //=> [ 'a/b(1|3)/(x|y|z)' ] console . log ( braces ( 'a/b{1,3}/{x,y,z}' , { quantifiers : true })); //=> [ 'a/b{1,3}/(x|y|z)' ] console . log ( braces ( 'a/b{1,3}/{x,y,z}' , { quantifiers : true , expand : true })); //=> [ 'a/b{1,3}/x', 'a/b{1,3}/y', 'a/b{1,3}/z' ]","title":"options.quantifiers"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#optionskeepescaping","text":"Type : Boolean Default : undefined Description : Do not strip backslashes that were used for escaping from the result.","title":"options.keepEscaping"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#what-is-brace-expansion","text":"Brace expansion is a type of parameter expansion that was made popular by unix shells for generating lists of strings, as well as regex-like matching when used alongside wildcards (globs). In addition to \"expansion\", braces are also used for matching. In other words: brace expansion is for generating new lists brace matching is for filtering existing lists More about brace expansion (click to expand) There are two main types of brace expansion: 1. **lists**: which are defined using comma-separated values inside curly braces: `{a,b,c}` 2. **sequences**: which are defined using a starting value and an ending value, separated by two dots: `a{1..3}b`. Optionally, a third argument may be passed to define a \"step\" or increment to use: `a{1..100..10}b`. These are also sometimes referred to as \"ranges\". Here are some example brace patterns to illustrate how they work: **Sets** {a,b,c} => a b c {a,b,c}{1,2} => a1 a2 b1 b2 c1 c2 **Sequences** {1..9} => 1 2 3 4 5 6 7 8 9 {4..-4} => 4 3 2 1 0 -1 -2 -3 -4 {1..20..3} => 1 4 7 10 13 16 19 {a..j} => a b c d e f g h i j {j..a} => j i h g f e d c b a {a..z..3} => a d g j m p s v y **Combination** Sets and sequences can be mixed together or used along with any other strings. {a,b,c}{1..3} => a1 a2 a3 b1 b2 b3 c1 c2 c3 foo/{a,b,c}/bar => foo/a/bar foo/b/bar foo/c/bar The fact that braces can be \"expanded\" from relatively simple patterns makes them ideal for quickly generating test fixtures, file paths, and similar use cases. ## Brace matching In addition to _expansion_, brace patterns are also useful for performing regular-expression-like matching. For example, the pattern `foo/{1..3}/bar` would match any of following strings: foo/1/bar foo/2/bar foo/3/bar But not: baz/1/qux baz/2/qux baz/3/qux Braces can also be combined with [glob patterns](https://github.com/jonschlinkert/micromatch) to perform more advanced wildcard matching. For example, the pattern `*/{1..3}/*` would match any of following strings: foo/1/bar foo/2/bar foo/3/bar baz/1/qux baz/2/qux baz/3/qux ## Brace matching pitfalls Although brace patterns offer a user-friendly way of matching ranges or sets of strings, there are also some major disadvantages and potential risks you should be aware of. ### tldr **\"brace bombs\"** - brace expansion can eat up a huge amount of processing resources - as brace patterns increase _linearly in size_, the system resources required to expand the pattern increase exponentially - users can accidentally (or intentially) exhaust your system's resources resulting in the equivalent of a DoS attack (bonus: no programming knowledge is required!) For a more detailed explanation with examples, see the [geometric complexity](#geometric-complexity) section. ### The solution Jump to the [performance section](#performance) to see how Braces solves this problem in comparison to other libraries. ### Geometric complexity At minimum, brace patterns with sets limited to two elements have quadradic or `O(n^2)` complexity. But the complexity of the algorithm increases exponentially as the number of sets, _and elements per set_, increases, which is `O(n^c)`. For example, the following sets demonstrate quadratic (`O(n^2)`) complexity: {1,2}{3,4} => (2X2) => 13 14 23 24 {1,2}{3,4}{5,6} => (2X2X2) => 135 136 145 146 235 236 245 246 But add an element to a set, and we get a n-fold Cartesian product with `O(n^c)` complexity: {1,2,3}{4,5,6}{7,8,9} => (3X3X3) => 147 148 149 157 158 159 167 168 169 247 248 249 257 258 259 267 268 269 347 348 349 357 358 359 367 368 369 Now, imagine how this complexity grows given that each element is a n-tuple: {1..100}{1..100} => (100X100) => 10,000 elements (38.4 kB) {1..100}{1..100}{1..100} => (100X100X100) => 1,000,000 elements (5.76 MB) Although these examples are clearly contrived, they demonstrate how brace patterns can quickly grow out of control. **More information** Interested in learning more about brace expansion? - [linuxjournal/bash-brace-expansion](http://www.linuxjournal.com/content/bash-brace-expansion) - [rosettacode/Brace_expansion](https://rosettacode.org/wiki/Brace_expansion) - [cartesian product](https://en.wikipedia.org/wiki/Cartesian_product)","title":"What is \"brace expansion\"?"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#performance","text":"Braces is not only screaming fast, it's also more accurate the other brace expansion libraries.","title":"Performance"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#better-algorithms","text":"Fortunately there is a solution to the \"brace bomb\" problem : don't expand brace patterns into an array when they're used for matching . Instead, convert the pattern into an optimized regular expression. This is easier said than done, and braces is the only library that does this currently. The proof is in the numbers Minimatch gets exponentially slower as patterns increase in complexity, braces does not. The following results were generated using braces() and minimatch.braceExpand() , respectively. Pattern braces [minimatch][] {1..9007199254740991} [^1] 298 B (5ms 459\u03bcs) N/A (freezes) {1..1000000000000000} 41 B (1ms 15\u03bcs) N/A (freezes) {1..100000000000000} 40 B (890\u03bcs) N/A (freezes) {1..10000000000000} 39 B (2ms 49\u03bcs) N/A (freezes) {1..1000000000000} 38 B (608\u03bcs) N/A (freezes) {1..100000000000} 37 B (397\u03bcs) N/A (freezes) {1..10000000000} 35 B (983\u03bcs) N/A (freezes) {1..1000000000} 34 B (798\u03bcs) N/A (freezes) {1..100000000} 33 B (733\u03bcs) N/A (freezes) {1..10000000} 32 B (5ms 632\u03bcs) 78.89 MB (16s 388ms 569\u03bcs) {1..1000000} 31 B (1ms 381\u03bcs) 6.89 MB (1s 496ms 887\u03bcs) {1..100000} 30 B (950\u03bcs) 588.89 kB (146ms 921\u03bcs) {1..10000} 29 B (1ms 114\u03bcs) 48.89 kB (14ms 187\u03bcs) {1..1000} 28 B (760\u03bcs) 3.89 kB (1ms 453\u03bcs) {1..100} 22 B (345\u03bcs) 291 B (196\u03bcs) {1..10} 10 B (533\u03bcs) 20 B (37\u03bcs) {1..3} 7 B (190\u03bcs) 5 B (27\u03bcs)","title":"Better algorithms"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#faster-algorithms","text":"When you need expansion, braces is still much faster. (the following results were generated using braces.expand() and minimatch.braceExpand() , respectively) Pattern braces [minimatch][] {1..10000000} 78.89 MB (2s 698ms 642\u03bcs) 78.89 MB (18s 601ms 974\u03bcs) {1..1000000} 6.89 MB (458ms 576\u03bcs) 6.89 MB (1s 491ms 621\u03bcs) {1..100000} 588.89 kB (20ms 728\u03bcs) 588.89 kB (156ms 919\u03bcs) {1..10000} 48.89 kB (2ms 202\u03bcs) 48.89 kB (13ms 641\u03bcs) {1..1000} 3.89 kB (1ms 796\u03bcs) 3.89 kB (1ms 958\u03bcs) {1..100} 291 B (424\u03bcs) 291 B (211\u03bcs) {1..10} 20 B (487\u03bcs) 20 B (72\u03bcs) {1..3} 5 B (166\u03bcs) 5 B (27\u03bcs) If you'd like to run these comparisons yourself, see test/support/generate.js .","title":"Faster algorithms"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#benchmarks","text":"","title":"Benchmarks"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#running-benchmarks","text":"Install dev dependencies: npm i -d && npm benchmark","title":"Running benchmarks"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#latest-results","text":"Braces is more accurate, without sacrificing performance. \u25cf expand - range ( expanded ) braces x 53 ,167 ops/sec \u00b10.12% ( 102 runs sampled ) minimatch x 11 ,378 ops/sec \u00b10.10% ( 102 runs sampled ) \u25cf expand - range ( optimized for regex ) braces x 373 ,442 ops/sec \u00b10.04% ( 100 runs sampled ) minimatch x 3 ,262 ops/sec \u00b10.18% ( 100 runs sampled ) \u25cf expand - nested ranges ( expanded ) braces x 33 ,921 ops/sec \u00b10.09% ( 99 runs sampled ) minimatch x 10 ,855 ops/sec \u00b10.28% ( 100 runs sampled ) \u25cf expand - nested ranges ( optimized for regex ) braces x 287 ,479 ops/sec \u00b10.52% ( 98 runs sampled ) minimatch x 3 ,219 ops/sec \u00b10.28% ( 101 runs sampled ) \u25cf expand - set ( expanded ) braces x 238 ,243 ops/sec \u00b10.19% ( 97 runs sampled ) minimatch x 538 ,268 ops/sec \u00b10.31% ( 96 runs sampled ) \u25cf expand - set ( optimized for regex ) braces x 321 ,844 ops/sec \u00b10.10% ( 97 runs sampled ) minimatch x 140 ,600 ops/sec \u00b10.15% ( 100 runs sampled ) \u25cf expand - nested sets ( expanded ) braces x 165 ,371 ops/sec \u00b10.42% ( 96 runs sampled ) minimatch x 337 ,720 ops/sec \u00b10.28% ( 100 runs sampled ) \u25cf expand - nested sets ( optimized for regex ) braces x 242 ,948 ops/sec \u00b10.12% ( 99 runs sampled ) minimatch x 87 ,403 ops/sec \u00b10.79% ( 96 runs sampled )","title":"Latest results"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#about","text":"Contributing Pull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new). Running Tests Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command: $ npm install && npm test Building docs _(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_ To generate the readme, run the following command: $ npm install -g verbose/verb#dev verb-generate-readme && verb","title":"About"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#contributors","text":"Commits Contributor 197 jonschlinkert 4 doowb 1 es128 1 eush77 1 hemanth 1 wtgtybhertgeghgtwtg","title":"Contributors"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#author","text":"Jon Schlinkert GitHub Profile Twitter Profile LinkedIn Profile","title":"Author"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#license","text":"Copyright \u00a9 2019, Jon Schlinkert . Released under the MIT License . This file was generated by verb-generate-readme , v0.8.0, on April 08, 2019.","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/","text":"BSON parser BSON is short for \"Binary JSON,\" and is the binary-encoded serialization of JSON-like documents. You can learn more about it in the specification . Table of Contents Usage Bugs/Feature Requests Installation Documentation FAQ Release Integrity Releases are created automatically and signed using the Node team's GPG key . This applies to the git tag as well as all release packages provided as part of a GitHub release. To verify the provided packages, download the key and import it using gpg: gpg --import node-driver.asc The GitHub release contains a detached signature file for the NPM package (named bson-X.Y.Z.tgz.sig ). The following command returns the link npm package. npm view bson@vX.Y.Z dist.tarball Using the result of the above command, a curl command can return the official npm package for the release. To verify the integrity of the downloaded package, run the following command: gpg --verify bson-X.Y.Z.tgz.sig bson-X.Y.Z.tgz [!Note] No verification is done when using npm to install the package. The contents of the Github tarball and npm's tarball are identical. Bugs / Feature Requests Think you've found a bug? Want to see a new feature in bson ? Please open a case in our issue management tool, JIRA: Create an account and login: jira.mongodb.org Navigate to the NODE project: jira.mongodb.org/browse/NODE Click Create Issue - Please provide as much information as possible about the issue and how to reproduce it. Bug reports in JIRA for the NODE driver project are public . Usage To build a new version perform the following operations: npm install npm run build Node.js or Bundling Usage When using a bundler or Node.js you can import bson using the package name: import { BSON , EJSON , ObjectId } from 'bson' ; // or: // const { BSON, EJSON, ObjectId } = require('bson'); const bytes = BSON . serialize ({ _id : new ObjectId () }); console . log ( bytes ); const doc = BSON . deserialize ( bytes ); console . log ( EJSON . stringify ( doc )); // {\"_id\":{\"$oid\":\"...\"}} Browser Usage If you are working directly in the browser without a bundler please use the .mjs bundle like so: < script type = \"module\" > import { BSON , EJSON , ObjectId } from './lib/bson.mjs' ; const bytes = BSON . serialize ({ _id : new ObjectId () }); console . log ( bytes ); const doc = BSON . deserialize ( bytes ); console . log ( EJSON . stringify ( doc )); // {\"_id\":{\"$oid\":\"...\"}} </ script > Installation npm install bson MongoDB Node.js Driver Version Compatibility Only the following version combinations with the MongoDB Node.js Driver are considered stable. bson@1.x bson@4.x bson@5.x bson@6.x mongodb@6.x N/A N/A N/A \u2713 mongodb@5.x N/A N/A \u2713 N/A mongodb@4.x N/A \u2713 N/A N/A mongodb@3.x \u2713 N/A N/A N/A Documentation BSON API documentation EJSON EJSON .parse(text, [options]) .stringify(value, [replacer], [space], [options]) .serialize(bson, [options]) .deserialize(ejson, [options]) EJSON .parse(text, [options]) Param Type Default Description text string [options] object Optional settings [options.relaxed] boolean true Attempt to return native JS types where possible, rather than BSON types (if true) Parse an Extended JSON string, constructing the JavaScript value or object described by that string. Example const { EJSON } = require ( 'bson' ); const text = '{ \"int32\": { \"$numberInt\": \"10\" } }' ; // prints { int32: { [String: '10'] _bsontype: 'Int32', value: '10' } } console . log ( EJSON . parse ( text , { relaxed : false })); // prints { int32: 10 } console . log ( EJSON . parse ( text )); EJSON .stringify(value, [replacer], [space], [options]) Param Type Default Description value object The value to convert to extended JSON [replacer] function | array A function that alters the behavior of the stringification process, or an array of String and Number objects that serve as a whitelist for selecting/filtering the properties of the value object to be included in the JSON string. If this value is null or not provided, all properties of the object are included in the resulting JSON string [space] string | number A String or Number object that's used to insert white space into the output JSON string for readability purposes. [options] object Optional settings [options.relaxed] boolean true Enabled Extended JSON's relaxed mode [options.legacy] boolean true Output in Extended JSON v1 Converts a BSON document to an Extended JSON string, optionally replacing values if a replacer function is specified or optionally including only the specified properties if a replacer array is specified. Example const { EJSON } = require ( 'bson' ); const Int32 = require ( 'mongodb' ). Int32 ; const doc = { int32 : new Int32 ( 10 ) }; // prints '{\"int32\":{\"$numberInt\":\"10\"}}' console . log ( EJSON . stringify ( doc , { relaxed : false })); // prints '{\"int32\":10}' console . log ( EJSON . stringify ( doc )); EJSON .serialize(bson, [options]) Param Type Description bson object The object to serialize [options] object Optional settings passed to the stringify function Serializes an object to an Extended JSON string, and reparse it as a JavaScript object. EJSON .deserialize(ejson, [options]) Param Type Description ejson object The Extended JSON object to deserialize [options] object Optional settings passed to the parse method Deserializes an Extended JSON object into a plain JavaScript object with native/BSON types Error Handling It is our recommendation to use BSONError.isBSONError() checks on errors and to avoid relying on parsing error.message and error.name strings in your code. We guarantee BSONError.isBSONError() checks will pass according to semver guidelines, but errors may be sub-classed or their messages may change at any time, even patch releases, as we see fit to increase the helpfulness of the errors. Any new errors we add to the driver will directly extend an existing error class and no existing error will be moved to a different parent class outside of a major release. This means BSONError.isBSONError() will always be able to accurately capture the errors that our BSON library throws. Hypothetical example: A collection in our Db has an issue with UTF-8 data: let documentCount = 0 ; const cursor = collection . find ({}, { utf8Validation : true }); try { for await ( const doc of cursor ) documentCount += 1 ; } catch ( error ) { if ( BSONError . isBSONError ( error )) { console . log ( `Found the troublemaker UTF-8!: ${ documentCount } ${ error . message } ` ); return documentCount ; } throw error ; } React Native BSON vendors the required polyfills for TextEncoder , TextDecoder , atob , btoa imported from React Native and therefore doesn't expect users to polyfill these. One additional polyfill, crypto.getRandomValues is recommended and can be installed with the following command: npm install --save react-native-get-random-values The following snippet should be placed at the top of the entrypoint (by default this is the root index.js file) for React Native projects using the BSON library. These lines must be placed for any code that imports BSON . // Required Polyfills For ReactNative import 'react-native-get-random-values' ; Finally, import the BSON library like so: import { BSON , EJSON } from 'bson' ; This will cause React Native to import the node_modules/bson/lib/bson.rn.cjs bundle (see the \"react-native\" setting we have in the \"exports\" section of our package.json .) Technical Note about React Native module import The \"exports\" definition in our package.json will result in BSON's CommonJS bundle being imported in a React Native project instead of the ES module bundle. Importing the CommonJS bundle is necessary because BSON's ES module bundle of BSON uses top-level await, which is not supported syntax in React Native's runtime hermes . FAQ Why does undefined get converted to null ? The undefined BSON type has been deprecated for many years , so this library has dropped support for it. Use the ignoreUndefined option (for example, from the driver ) to instead remove undefined keys. How do I add custom serialization logic? This library looks for toBSON() functions on every path, and calls the toBSON() function to get the value to serialize. const BSON = require ( 'bson' ); class CustomSerialize { toBSON () { return 42 ; } } const obj = { answer : new CustomSerialize () }; // \"{ answer: 42 }\" console . log ( BSON . deserialize ( BSON . serialize ( obj )));","title":"BSON parser"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#bson-parser","text":"BSON is short for \"Binary JSON,\" and is the binary-encoded serialization of JSON-like documents. You can learn more about it in the specification .","title":"BSON parser"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#table-of-contents","text":"Usage Bugs/Feature Requests Installation Documentation FAQ","title":"Table of Contents"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#release-integrity","text":"Releases are created automatically and signed using the Node team's GPG key . This applies to the git tag as well as all release packages provided as part of a GitHub release. To verify the provided packages, download the key and import it using gpg: gpg --import node-driver.asc The GitHub release contains a detached signature file for the NPM package (named bson-X.Y.Z.tgz.sig ). The following command returns the link npm package. npm view bson@vX.Y.Z dist.tarball Using the result of the above command, a curl command can return the official npm package for the release. To verify the integrity of the downloaded package, run the following command: gpg --verify bson-X.Y.Z.tgz.sig bson-X.Y.Z.tgz [!Note] No verification is done when using npm to install the package. The contents of the Github tarball and npm's tarball are identical.","title":"Release Integrity"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#bugs-feature-requests","text":"Think you've found a bug? Want to see a new feature in bson ? Please open a case in our issue management tool, JIRA: Create an account and login: jira.mongodb.org Navigate to the NODE project: jira.mongodb.org/browse/NODE Click Create Issue - Please provide as much information as possible about the issue and how to reproduce it. Bug reports in JIRA for the NODE driver project are public .","title":"Bugs / Feature Requests"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#usage","text":"To build a new version perform the following operations: npm install npm run build","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#nodejs-or-bundling-usage","text":"When using a bundler or Node.js you can import bson using the package name: import { BSON , EJSON , ObjectId } from 'bson' ; // or: // const { BSON, EJSON, ObjectId } = require('bson'); const bytes = BSON . serialize ({ _id : new ObjectId () }); console . log ( bytes ); const doc = BSON . deserialize ( bytes ); console . log ( EJSON . stringify ( doc )); // {\"_id\":{\"$oid\":\"...\"}}","title":"Node.js or Bundling Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#browser-usage","text":"If you are working directly in the browser without a bundler please use the .mjs bundle like so: < script type = \"module\" > import { BSON , EJSON , ObjectId } from './lib/bson.mjs' ; const bytes = BSON . serialize ({ _id : new ObjectId () }); console . log ( bytes ); const doc = BSON . deserialize ( bytes ); console . log ( EJSON . stringify ( doc )); // {\"_id\":{\"$oid\":\"...\"}} </ script >","title":"Browser Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#installation","text":"npm install bson","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#mongodb-nodejs-driver-version-compatibility","text":"Only the following version combinations with the MongoDB Node.js Driver are considered stable. bson@1.x bson@4.x bson@5.x bson@6.x mongodb@6.x N/A N/A N/A \u2713 mongodb@5.x N/A N/A \u2713 N/A mongodb@4.x N/A \u2713 N/A N/A mongodb@3.x \u2713 N/A N/A N/A","title":"MongoDB Node.js Driver Version Compatibility"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#documentation","text":"","title":"Documentation"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#bson","text":"API documentation","title":"BSON"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#ejson","text":"EJSON .parse(text, [options]) .stringify(value, [replacer], [space], [options]) .serialize(bson, [options]) .deserialize(ejson, [options])","title":"EJSON"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#ejsonparsetext-options","text":"Param Type Default Description text string [options] object Optional settings [options.relaxed] boolean true Attempt to return native JS types where possible, rather than BSON types (if true) Parse an Extended JSON string, constructing the JavaScript value or object described by that string. Example const { EJSON } = require ( 'bson' ); const text = '{ \"int32\": { \"$numberInt\": \"10\" } }' ; // prints { int32: { [String: '10'] _bsontype: 'Int32', value: '10' } } console . log ( EJSON . parse ( text , { relaxed : false })); // prints { int32: 10 } console . log ( EJSON . parse ( text ));","title":"EJSON.parse(text, [options])"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#ejsonstringifyvalue-replacer-space-options","text":"Param Type Default Description value object The value to convert to extended JSON [replacer] function | array A function that alters the behavior of the stringification process, or an array of String and Number objects that serve as a whitelist for selecting/filtering the properties of the value object to be included in the JSON string. If this value is null or not provided, all properties of the object are included in the resulting JSON string [space] string | number A String or Number object that's used to insert white space into the output JSON string for readability purposes. [options] object Optional settings [options.relaxed] boolean true Enabled Extended JSON's relaxed mode [options.legacy] boolean true Output in Extended JSON v1 Converts a BSON document to an Extended JSON string, optionally replacing values if a replacer function is specified or optionally including only the specified properties if a replacer array is specified. Example const { EJSON } = require ( 'bson' ); const Int32 = require ( 'mongodb' ). Int32 ; const doc = { int32 : new Int32 ( 10 ) }; // prints '{\"int32\":{\"$numberInt\":\"10\"}}' console . log ( EJSON . stringify ( doc , { relaxed : false })); // prints '{\"int32\":10}' console . log ( EJSON . stringify ( doc ));","title":"EJSON.stringify(value, [replacer], [space], [options])"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#ejsonserializebson-options","text":"Param Type Description bson object The object to serialize [options] object Optional settings passed to the stringify function Serializes an object to an Extended JSON string, and reparse it as a JavaScript object.","title":"EJSON.serialize(bson, [options])"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#ejsondeserializeejson-options","text":"Param Type Description ejson object The Extended JSON object to deserialize [options] object Optional settings passed to the parse method Deserializes an Extended JSON object into a plain JavaScript object with native/BSON types","title":"EJSON.deserialize(ejson, [options])"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#error-handling","text":"It is our recommendation to use BSONError.isBSONError() checks on errors and to avoid relying on parsing error.message and error.name strings in your code. We guarantee BSONError.isBSONError() checks will pass according to semver guidelines, but errors may be sub-classed or their messages may change at any time, even patch releases, as we see fit to increase the helpfulness of the errors. Any new errors we add to the driver will directly extend an existing error class and no existing error will be moved to a different parent class outside of a major release. This means BSONError.isBSONError() will always be able to accurately capture the errors that our BSON library throws. Hypothetical example: A collection in our Db has an issue with UTF-8 data: let documentCount = 0 ; const cursor = collection . find ({}, { utf8Validation : true }); try { for await ( const doc of cursor ) documentCount += 1 ; } catch ( error ) { if ( BSONError . isBSONError ( error )) { console . log ( `Found the troublemaker UTF-8!: ${ documentCount } ${ error . message } ` ); return documentCount ; } throw error ; }","title":"Error Handling"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#react-native","text":"BSON vendors the required polyfills for TextEncoder , TextDecoder , atob , btoa imported from React Native and therefore doesn't expect users to polyfill these. One additional polyfill, crypto.getRandomValues is recommended and can be installed with the following command: npm install --save react-native-get-random-values The following snippet should be placed at the top of the entrypoint (by default this is the root index.js file) for React Native projects using the BSON library. These lines must be placed for any code that imports BSON . // Required Polyfills For ReactNative import 'react-native-get-random-values' ; Finally, import the BSON library like so: import { BSON , EJSON } from 'bson' ; This will cause React Native to import the node_modules/bson/lib/bson.rn.cjs bundle (see the \"react-native\" setting we have in the \"exports\" section of our package.json .)","title":"React Native"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#technical-note-about-react-native-module-import","text":"The \"exports\" definition in our package.json will result in BSON's CommonJS bundle being imported in a React Native project instead of the ES module bundle. Importing the CommonJS bundle is necessary because BSON's ES module bundle of BSON uses top-level await, which is not supported syntax in React Native's runtime hermes .","title":"Technical Note about React Native module import"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#faq","text":"","title":"FAQ"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#why-does-undefined-get-converted-to-null","text":"The undefined BSON type has been deprecated for many years , so this library has dropped support for it. Use the ignoreUndefined option (for example, from the driver ) to instead remove undefined keys.","title":"Why does undefined get converted to null?"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#how-do-i-add-custom-serialization-logic","text":"This library looks for toBSON() functions on every path, and calls the toBSON() function to get the value to serialize. const BSON = require ( 'bson' ); class CustomSerialize { toBSON () { return 42 ; } } const obj = { answer : new CustomSerialize () }; // \"{ answer: 42 }\" console . log ( BSON . deserialize ( BSON . serialize ( obj )));","title":"How do I add custom serialization logic?"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/LICENSE/","text":"Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"LICENSE"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/base64/","text":"base64 base64 is a robust base64 encoder/decoder that is fully compatible with atob() and btoa() , written in JavaScript. The base64-encoding and -decoding algorithms it uses are fully RFC 4648 compliant. Installation Via npm : npm install base-64 In a browser: < script src = \"base64.js\" ></ script > In Narwhal , Node.js , and RingoJS : var base64 = require ( 'base-64' ); In Rhino : load ( 'base64.js' ); Using an AMD loader like RequireJS : require ( { 'paths' : { 'base64' : 'path/to/base64' } }, [ 'base64' ], function ( base64 ) { console . log ( base64 ); } ); API base64.version A string representing the semantic version number. base64.encode(input) This function takes a byte string (the input parameter) and encodes it according to base64. The input data must be in the form of a string containing only characters in the range from U+0000 to U+00FF, each representing a binary byte with values 0x00 to 0xFF . The base64.encode() function is designed to be fully compatible with btoa() as described in the HTML Standard . var encodedData = base64 . encode ( input ); To base64-encode any Unicode string, encode it as UTF-8 first : var base64 = require ( 'base-64' ); var utf8 = require ( 'utf8' ); var text = 'foo \u00a9 bar \ud834\udf06 baz' ; var bytes = utf8 . encode ( text ); var encoded = base64 . encode ( bytes ); console . log ( encoded ); // \u2192 'Zm9vIMKpIGJhciDwnYyGIGJheg==' base64.decode(input) This function takes a base64-encoded string (the input parameter) and decodes it. The return value is in the form of a string containing only characters in the range from U+0000 to U+00FF, each representing a binary byte with values 0x00 to 0xFF . The base64.decode() function is designed to be fully compatible with atob() as described in the HTML Standard . var decodedData = base64 . decode ( encodedData ); To base64-decode UTF-8-encoded data back into a Unicode string, UTF-8-decode it after base64-decoding it: var encoded = 'Zm9vIMKpIGJhciDwnYyGIGJheg==' ; var bytes = base64 . decode ( encoded ); var text = utf8 . decode ( bytes ); console . log ( text ); // \u2192 'foo \u00a9 bar \ud834\udf06 baz' Support base64 is designed to work in at least Node.js v0.10.0, Narwhal 0.3.2, RingoJS 0.8-0.9, PhantomJS 1.9.0, Rhino 1.7RC4, as well as old and modern versions of Chrome, Firefox, Safari, Opera, and Internet Explorer. Unit tests & code coverage After cloning this repository, run npm install to install the dependencies needed for development and testing. You may want to install Istanbul globally using npm install istanbul -g . Once that\u2019s done, you can run the unit tests in Node using npm test or node tests/tests.js . To run the tests in Rhino, Ringo, Narwhal, and web browsers as well, use grunt test . To generate the code coverage report, use grunt cover . Author Mathias Bynens License base64 is available under the MIT license.","title":"base64 Build status Code coverage status"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/base64/#base64","text":"base64 is a robust base64 encoder/decoder that is fully compatible with atob() and btoa() , written in JavaScript. The base64-encoding and -decoding algorithms it uses are fully RFC 4648 compliant.","title":"base64"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/base64/#installation","text":"Via npm : npm install base-64 In a browser: < script src = \"base64.js\" ></ script > In Narwhal , Node.js , and RingoJS : var base64 = require ( 'base-64' ); In Rhino : load ( 'base64.js' ); Using an AMD loader like RequireJS : require ( { 'paths' : { 'base64' : 'path/to/base64' } }, [ 'base64' ], function ( base64 ) { console . log ( base64 ); } );","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/base64/#api","text":"","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/base64/#base64version","text":"A string representing the semantic version number.","title":"base64.version"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/base64/#base64encodeinput","text":"This function takes a byte string (the input parameter) and encodes it according to base64. The input data must be in the form of a string containing only characters in the range from U+0000 to U+00FF, each representing a binary byte with values 0x00 to 0xFF . The base64.encode() function is designed to be fully compatible with btoa() as described in the HTML Standard . var encodedData = base64 . encode ( input ); To base64-encode any Unicode string, encode it as UTF-8 first : var base64 = require ( 'base-64' ); var utf8 = require ( 'utf8' ); var text = 'foo \u00a9 bar \ud834\udf06 baz' ; var bytes = utf8 . encode ( text ); var encoded = base64 . encode ( bytes ); console . log ( encoded ); // \u2192 'Zm9vIMKpIGJhciDwnYyGIGJheg=='","title":"base64.encode(input)"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/base64/#base64decodeinput","text":"This function takes a base64-encoded string (the input parameter) and decodes it. The return value is in the form of a string containing only characters in the range from U+0000 to U+00FF, each representing a binary byte with values 0x00 to 0xFF . The base64.decode() function is designed to be fully compatible with atob() as described in the HTML Standard . var decodedData = base64 . decode ( encodedData ); To base64-decode UTF-8-encoded data back into a Unicode string, UTF-8-decode it after base64-decoding it: var encoded = 'Zm9vIMKpIGJhciDwnYyGIGJheg==' ; var bytes = base64 . decode ( encoded ); var text = utf8 . decode ( bytes ); console . log ( text ); // \u2192 'foo \u00a9 bar \ud834\udf06 baz'","title":"base64.decode(input)"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/base64/#support","text":"base64 is designed to work in at least Node.js v0.10.0, Narwhal 0.3.2, RingoJS 0.8-0.9, PhantomJS 1.9.0, Rhino 1.7RC4, as well as old and modern versions of Chrome, Firefox, Safari, Opera, and Internet Explorer.","title":"Support"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/base64/#unit-tests-code-coverage","text":"After cloning this repository, run npm install to install the dependencies needed for development and testing. You may want to install Istanbul globally using npm install istanbul -g . Once that\u2019s done, you can run the unit tests in Node using npm test or node tests/tests.js . To run the tests in Rhino, Ringo, Narwhal, and web browsers as well, use grunt test . To generate the code coverage report, use grunt cover .","title":"Unit tests &amp; code coverage"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/base64/#author","text":"Mathias Bynens","title":"Author"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/base64/#license","text":"base64 is available under the MIT license.","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/text-encoding/","text":"text-encoding This is a polyfill for the Encoding Living Standard API for the Web, allowing encoding and decoding of textual data to and from Typed Array buffers for binary data in JavaScript. By default it adheres to the spec and does not support encoding to legacy encodings, only decoding . It is also implemented to match the specification's algorithms, rather than for performance. The intended use is within Web pages, so it has no dependency on server frameworks or particular module schemes. Basic examples and tests are included. Install There are a few ways you can get and use the text-encoding library. HTML Page Usage Clone the repo and include the files directly: <!-- Required for non-UTF encodings --> < script src = \"encoding-indexes.js\" ></ script > < script src = \"encoding.js\" ></ script > This is the only use case the developer cares about. If you want those fancy module and/or package manager things that are popular these days you should probably use a different library. Package Managers The package is published to npm and bower as text-encoding . Use through these is not really supported, since they aren't used by the developer of the library. Using require() in interesting ways probably breaks. Patches welcome, as long as they don't break the basic use of the files via <script> . API Overview Basic Usage var uint8array = new TextEncoder (). encode ( string ); var string = new TextDecoder ( encoding ). decode ( uint8array ); Streaming Decode var string = \"\" , decoder = new TextDecoder ( encoding ), buffer ; while ( buffer = next_chunk ()) { string += decoder . decode ( buffer , { stream : true }); } string += decoder . decode (); // finish the stream Encodings All encodings from the Encoding specification are supported: utf-8 ibm866 iso-8859-2 iso-8859-3 iso-8859-4 iso-8859-5 iso-8859-6 iso-8859-7 iso-8859-8 iso-8859-8-i iso-8859-10 iso-8859-13 iso-8859-14 iso-8859-15 iso-8859-16 koi8-r koi8-u macintosh windows-874 windows-1250 windows-1251 windows-1252 windows-1253 windows-1254 windows-1255 windows-1256 windows-1257 windows-1258 x-mac-cyrillic gb18030 hz-gb-2312 big5 euc-jp iso-2022-jp shift_jis euc-kr replacement utf-16be utf-16le x-user-defined (Some encodings may be supported under other names, e.g. ascii, iso-8859-1, etc. See Encoding for additional labels for each encoding.) Encodings other than utf-8 , utf-16le and utf-16be require an additional encoding-indexes.js file to be included. It is rather large (596kB uncompressed, 188kB gzipped); portions may be deleted if support for some encodings is not required. Non-Standard Behavior As required by the specification, only encoding to utf-8 is supported. If you want to try it out, you can force a non-standard behavior by passing the NONSTANDARD_allowLegacyEncoding option to TextEncoder and a label. For example: var uint8array = new TextEncoder ( 'windows-1252' , { NONSTANDARD_allowLegacyEncoding : true }). encode ( text ); But note that the above won't work if you're using the polyfill in a browser that natively supports the TextEncoder API natively, since the polyfill won't be used! You can force the polyfill to be used by using this before the polyfill: < script > window . TextEncoder = window . TextDecoder = null ; </ script > To support the legacy encodings (which may be stateful), the TextEncoder encode() method accepts an optional dictionary and stream option, e.g. encoder.encode(string, {stream: true}); This is not needed for standard encoding since the input is always in complete code points.","title":"text-encoding"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/text-encoding/#text-encoding","text":"This is a polyfill for the Encoding Living Standard API for the Web, allowing encoding and decoding of textual data to and from Typed Array buffers for binary data in JavaScript. By default it adheres to the spec and does not support encoding to legacy encodings, only decoding . It is also implemented to match the specification's algorithms, rather than for performance. The intended use is within Web pages, so it has no dependency on server frameworks or particular module schemes. Basic examples and tests are included.","title":"text-encoding"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/text-encoding/#install","text":"There are a few ways you can get and use the text-encoding library.","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/text-encoding/#html-page-usage","text":"Clone the repo and include the files directly: <!-- Required for non-UTF encodings --> < script src = \"encoding-indexes.js\" ></ script > < script src = \"encoding.js\" ></ script > This is the only use case the developer cares about. If you want those fancy module and/or package manager things that are popular these days you should probably use a different library.","title":"HTML Page Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/text-encoding/#package-managers","text":"The package is published to npm and bower as text-encoding . Use through these is not really supported, since they aren't used by the developer of the library. Using require() in interesting ways probably breaks. Patches welcome, as long as they don't break the basic use of the files via <script> .","title":"Package Managers"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/text-encoding/#api-overview","text":"Basic Usage var uint8array = new TextEncoder (). encode ( string ); var string = new TextDecoder ( encoding ). decode ( uint8array ); Streaming Decode var string = \"\" , decoder = new TextDecoder ( encoding ), buffer ; while ( buffer = next_chunk ()) { string += decoder . decode ( buffer , { stream : true }); } string += decoder . decode (); // finish the stream","title":"API Overview"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/text-encoding/#encodings","text":"All encodings from the Encoding specification are supported: utf-8 ibm866 iso-8859-2 iso-8859-3 iso-8859-4 iso-8859-5 iso-8859-6 iso-8859-7 iso-8859-8 iso-8859-8-i iso-8859-10 iso-8859-13 iso-8859-14 iso-8859-15 iso-8859-16 koi8-r koi8-u macintosh windows-874 windows-1250 windows-1251 windows-1252 windows-1253 windows-1254 windows-1255 windows-1256 windows-1257 windows-1258 x-mac-cyrillic gb18030 hz-gb-2312 big5 euc-jp iso-2022-jp shift_jis euc-kr replacement utf-16be utf-16le x-user-defined (Some encodings may be supported under other names, e.g. ascii, iso-8859-1, etc. See Encoding for additional labels for each encoding.) Encodings other than utf-8 , utf-16le and utf-16be require an additional encoding-indexes.js file to be included. It is rather large (596kB uncompressed, 188kB gzipped); portions may be deleted if support for some encodings is not required.","title":"Encodings"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/text-encoding/#non-standard-behavior","text":"As required by the specification, only encoding to utf-8 is supported. If you want to try it out, you can force a non-standard behavior by passing the NONSTANDARD_allowLegacyEncoding option to TextEncoder and a label. For example: var uint8array = new TextEncoder ( 'windows-1252' , { NONSTANDARD_allowLegacyEncoding : true }). encode ( text ); But note that the above won't work if you're using the polyfill in a browser that natively supports the TextEncoder API natively, since the polyfill won't be used! You can force the polyfill to be used by using this before the polyfill: < script > window . TextEncoder = window . TextDecoder = null ; </ script > To support the legacy encodings (which may be stateful), the TextEncoder encode() method accepts an optional dictionary and stream option, e.g. encoder.encode(string, {stream: true}); This is not needed for standard encoding since the input is always in complete code points.","title":"Non-Standard Behavior"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/text-encoding/LICENSE/","text":"The encoding indexes, algorithms, and many comments in the code derive from the Encoding Standard https://encoding.spec.whatwg.org/ Otherwise, the code of this repository is released under the Unlicense license and is also dual-licensed under an Apache 2.0 license. Both are included below. Unlicense This is free and unencumbered software released into the public domain. Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means. In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. For more information, please refer to http://unlicense.org/ Apache 2.0 License Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"LICENSE"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/text-encoding/LICENSE/#unlicense","text":"This is free and unencumbered software released into the public domain. Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means. In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. For more information, please refer to http://unlicense.org/","title":"Unlicense"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/text-encoding/LICENSE/#apache-20-license","text":"Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"Apache 2.0 License"},{"location":"system-desing/crud-app/JS/server/node_modules/buffer-equal-constant-time/","text":"buffer-equal-constant-time Constant-time Buffer comparison for node.js. Should work with browserify too. npm install buffer-equal-constant-time Usage var bufferEq = require ( 'buffer-equal-constant-time' ); var a = new Buffer ( 'asdf' ); var b = new Buffer ( 'asdf' ); if ( bufferEq ( a , b )) { // the same! } else { // different in at least one byte! } If you'd like to install an .equal() method onto the node.js Buffer and SlowBuffer prototypes: require ( 'buffer-equal-constant-time' ). install (); var a = new Buffer ( 'asdf' ); var b = new Buffer ( 'asdf' ); if ( a . equal ( b )) { // the same! } else { // different in at least one byte! } To get rid of the installed .equal() method, call .restore() : require ( 'buffer-equal-constant-time' ). restore (); Legal \u00a9 2013 GoInstant Inc., a salesforce.com company Licensed under the BSD 3-clause license.","title":"buffer-equal-constant-time"},{"location":"system-desing/crud-app/JS/server/node_modules/buffer-equal-constant-time/#buffer-equal-constant-time","text":"Constant-time Buffer comparison for node.js. Should work with browserify too. npm install buffer-equal-constant-time","title":"buffer-equal-constant-time"},{"location":"system-desing/crud-app/JS/server/node_modules/buffer-equal-constant-time/#usage","text":"var bufferEq = require ( 'buffer-equal-constant-time' ); var a = new Buffer ( 'asdf' ); var b = new Buffer ( 'asdf' ); if ( bufferEq ( a , b )) { // the same! } else { // different in at least one byte! } If you'd like to install an .equal() method onto the node.js Buffer and SlowBuffer prototypes: require ( 'buffer-equal-constant-time' ). install (); var a = new Buffer ( 'asdf' ); var b = new Buffer ( 'asdf' ); if ( a . equal ( b )) { // the same! } else { // different in at least one byte! } To get rid of the installed .equal() method, call .restore() : require ( 'buffer-equal-constant-time' ). restore ();","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/buffer-equal-constant-time/#legal","text":"\u00a9 2013 GoInstant Inc., a salesforce.com company Licensed under the BSD 3-clause license.","title":"Legal"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/","text":"3.1.2 / 2022-01-27 Fix return value for un-parsable strings 3.1.1 / 2021-11-15 Fix \"thousandsSeparator\" incorrecting formatting fractional part 3.1.0 / 2019-01-22 Add petabyte ( pb ) support 3.0.0 / 2017-08-31 Change \"kB\" to \"KB\" in format output Remove support for Node.js 0.6 Remove support for ComponentJS 2.5.0 / 2017-03-24 Add option \"unit\" 2.4.0 / 2016-06-01 Add option \"unitSeparator\" 2.3.0 / 2016-02-15 Drop partial bytes on all parsed units Fix non-finite numbers to .format to return null Fix parsing byte string that looks like hex perf: hoist regular expressions 2.2.0 / 2015-11-13 add option \"decimalPlaces\" add option \"fixedDecimals\" 2.1.0 / 2015-05-21 add .format export add .parse export 2.0.2 / 2015-05-20 remove map recreation remove unnecessary object construction 2.0.1 / 2015-05-07 fix browserify require remove node.extend dependency 2.0.0 / 2015-04-12 add option \"case\" add option \"thousandsSeparator\" return \"null\" on invalid parse input support proper round-trip: bytes(bytes(num)) === num units no longer case sensitive when parsing 1.0.0 / 2014-05-05 add negative support. fixes #6 0.3.0 / 2014-03-19 added terabyte support 0.2.1 / 2013-04-01 add .component 0.2.0 / 2012-10-28 bytes(200).should.eql('200b') 0.1.0 / 2012-07-04 add bytes to string conversion [yields]","title":"3.1.2 / 2022-01-27"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#312-2022-01-27","text":"Fix return value for un-parsable strings","title":"3.1.2 / 2022-01-27"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#311-2021-11-15","text":"Fix \"thousandsSeparator\" incorrecting formatting fractional part","title":"3.1.1 / 2021-11-15"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#310-2019-01-22","text":"Add petabyte ( pb ) support","title":"3.1.0 / 2019-01-22"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#300-2017-08-31","text":"Change \"kB\" to \"KB\" in format output Remove support for Node.js 0.6 Remove support for ComponentJS","title":"3.0.0 / 2017-08-31"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#250-2017-03-24","text":"Add option \"unit\"","title":"2.5.0 / 2017-03-24"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#240-2016-06-01","text":"Add option \"unitSeparator\"","title":"2.4.0 / 2016-06-01"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#230-2016-02-15","text":"Drop partial bytes on all parsed units Fix non-finite numbers to .format to return null Fix parsing byte string that looks like hex perf: hoist regular expressions","title":"2.3.0 / 2016-02-15"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#220-2015-11-13","text":"add option \"decimalPlaces\" add option \"fixedDecimals\"","title":"2.2.0 / 2015-11-13"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#210-2015-05-21","text":"add .format export add .parse export","title":"2.1.0 / 2015-05-21"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#202-2015-05-20","text":"remove map recreation remove unnecessary object construction","title":"2.0.2 / 2015-05-20"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#201-2015-05-07","text":"fix browserify require remove node.extend dependency","title":"2.0.1 / 2015-05-07"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#200-2015-04-12","text":"add option \"case\" add option \"thousandsSeparator\" return \"null\" on invalid parse input support proper round-trip: bytes(bytes(num)) === num units no longer case sensitive when parsing","title":"2.0.0 / 2015-04-12"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#100-2014-05-05","text":"add negative support. fixes #6","title":"1.0.0 / 2014-05-05"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#030-2014-03-19","text":"added terabyte support","title":"0.3.0 / 2014-03-19"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#021-2013-04-01","text":"add .component","title":"0.2.1 / 2013-04-01"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#020-2012-10-28","text":"bytes(200).should.eql('200b')","title":"0.2.0 / 2012-10-28"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#010-2012-07-04","text":"add bytes to string conversion [yields]","title":"0.1.0 / 2012-07-04"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/Readme/","text":"Bytes utility Utility to parse a string bytes (ex: 1TB ) to bytes ( 1099511627776 ) and vice-versa. Installation This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install bytes Usage var bytes = require ( 'bytes' ); bytes(number\uff5cstring value, [options]): number\uff5cstring\uff5cnull Default export function. Delegates to either bytes.format or bytes.parse based on the type of value . Arguments Name Type Description value number \uff5c string Number value to format or string value to parse options Object Conversion options for format Returns Name Type Description results string \uff5c number \uff5c null Return null upon error. Numeric value in bytes, or string value otherwise. Example bytes ( 1024 ); // output: '1KB' bytes ( '1KB' ); // output: 1024 bytes.format(number value, [options]): string\uff5cnull Format the given value in bytes into a string. If the value is negative, it is kept as such. If it is a float, it is rounded. Arguments Name Type Description value number Value in bytes options Object Conversion options Options Property Type Description decimalPlaces number \uff5c null Maximum number of decimal places to include in output. Default value to 2 . fixedDecimals boolean \uff5c null Whether to always display the maximum number of decimal places. Default value to false thousandsSeparator string \uff5c null Example of values: ' ' , ',' and '.' ... Default value to '' . unit string \uff5c null The unit in which the result will be returned (B/KB/MB/GB/TB). Default value to '' (which means auto detect). unitSeparator string \uff5c null Separator to use between number and unit. Default value to '' . Returns Name Type Description results string \uff5c null Return null upon error. String value otherwise. Example bytes . format ( 1024 ); // output: '1KB' bytes . format ( 1000 ); // output: '1000B' bytes . format ( 1000 , { thousandsSeparator : ' ' }); // output: '1 000B' bytes . format ( 1024 * 1.7 , { decimalPlaces : 0 }); // output: '2KB' bytes . format ( 1024 , { unitSeparator : ' ' }); // output: '1 KB' bytes.parse(string\uff5cnumber value): number\uff5cnull Parse the string value into an integer in bytes. If no unit is given, or value is a number, it is assumed the value is in bytes. Supported units and abbreviations are as follows and are case-insensitive: b for bytes kb for kilobytes mb for megabytes gb for gigabytes tb for terabytes pb for petabytes The units are in powers of two, not ten. This means 1kb = 1024b according to this parser. Arguments Name Type Description value string \uff5c number String to parse, or number in bytes. Returns Name Type Description results number \uff5c null Return null upon error. Value in bytes otherwise. Example bytes . parse ( '1KB' ); // output: 1024 bytes . parse ( '1024' ); // output: 1024 bytes . parse ( 1024 ); // output: 1024 License MIT","title":"Bytes utility"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/Readme/#bytes-utility","text":"Utility to parse a string bytes (ex: 1TB ) to bytes ( 1099511627776 ) and vice-versa.","title":"Bytes utility"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/Readme/#installation","text":"This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install bytes","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/Readme/#usage","text":"var bytes = require ( 'bytes' );","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/Readme/#bytesnumberstring-value-options-numberstringnull","text":"Default export function. Delegates to either bytes.format or bytes.parse based on the type of value . Arguments Name Type Description value number \uff5c string Number value to format or string value to parse options Object Conversion options for format Returns Name Type Description results string \uff5c number \uff5c null Return null upon error. Numeric value in bytes, or string value otherwise. Example bytes ( 1024 ); // output: '1KB' bytes ( '1KB' ); // output: 1024","title":"bytes(number\uff5cstring value, [options]): number\uff5cstring\uff5cnull"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/Readme/#bytesformatnumber-value-options-stringnull","text":"Format the given value in bytes into a string. If the value is negative, it is kept as such. If it is a float, it is rounded. Arguments Name Type Description value number Value in bytes options Object Conversion options Options Property Type Description decimalPlaces number \uff5c null Maximum number of decimal places to include in output. Default value to 2 . fixedDecimals boolean \uff5c null Whether to always display the maximum number of decimal places. Default value to false thousandsSeparator string \uff5c null Example of values: ' ' , ',' and '.' ... Default value to '' . unit string \uff5c null The unit in which the result will be returned (B/KB/MB/GB/TB). Default value to '' (which means auto detect). unitSeparator string \uff5c null Separator to use between number and unit. Default value to '' . Returns Name Type Description results string \uff5c null Return null upon error. String value otherwise. Example bytes . format ( 1024 ); // output: '1KB' bytes . format ( 1000 ); // output: '1000B' bytes . format ( 1000 , { thousandsSeparator : ' ' }); // output: '1 000B' bytes . format ( 1024 * 1.7 , { decimalPlaces : 0 }); // output: '2KB' bytes . format ( 1024 , { unitSeparator : ' ' }); // output: '1 KB'","title":"bytes.format(number value, [options]): string\uff5cnull"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/Readme/#bytesparsestringnumber-value-numbernull","text":"Parse the string value into an integer in bytes. If no unit is given, or value is a number, it is assumed the value is in bytes. Supported units and abbreviations are as follows and are case-insensitive: b for bytes kb for kilobytes mb for megabytes gb for gigabytes tb for terabytes pb for petabytes The units are in powers of two, not ten. This means 1kb = 1024b according to this parser. Arguments Name Type Description value string \uff5c number String to parse, or number in bytes. Returns Name Type Description results number \uff5c null Return null upon error. Value in bytes otherwise. Example bytes . parse ( '1KB' ); // output: 1024 bytes . parse ( '1024' ); // output: 1024 bytes . parse ( 1024 ); // output: 1024","title":"bytes.parse(string\uff5cnumber value): number\uff5cnull"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/Readme/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bind-apply-helpers/","text":"call-bind-apply-helpers Helper functions around Function call/apply/bind, for use in call-bind . The only packages that should likely ever use this package directly are call-bind and get-intrinsic . Please use call-bind unless you have a very good reason not to. Getting started npm install --save call-bind-apply-helpers Usage/Examples const assert = require ( 'assert' ); const callBindBasic = require ( 'call-bind-apply-helpers' ); function f ( a , b ) { assert . equal ( this , 1 ); assert . equal ( a , 2 ); assert . equal ( b , 3 ); assert . equal ( arguments . length , 2 ); } const fBound = callBindBasic ([ f , 1 ]); delete Function . prototype . call ; delete Function . prototype . bind ; fBound ( 2 , 3 ); Tests Clone the repo, npm install , and run npm test","title":"call-bind-apply-helpers Version Badge"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bind-apply-helpers/#call-bind-apply-helpers","text":"Helper functions around Function call/apply/bind, for use in call-bind . The only packages that should likely ever use this package directly are call-bind and get-intrinsic . Please use call-bind unless you have a very good reason not to.","title":"call-bind-apply-helpers"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bind-apply-helpers/#getting-started","text":"npm install --save call-bind-apply-helpers","title":"Getting started"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bind-apply-helpers/#usageexamples","text":"const assert = require ( 'assert' ); const callBindBasic = require ( 'call-bind-apply-helpers' ); function f ( a , b ) { assert . equal ( this , 1 ); assert . equal ( a , 2 ); assert . equal ( b , 3 ); assert . equal ( arguments . length , 2 ); } const fBound = callBindBasic ([ f , 1 ]); delete Function . prototype . call ; delete Function . prototype . bind ; fBound ( 2 , 3 );","title":"Usage/Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bind-apply-helpers/#tests","text":"Clone the repo, npm install , and run npm test","title":"Tests"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bind-apply-helpers/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.2 - 2025-02-12 Commits [types] improve inferred types e6f9586 [Dev Deps] update @arethetypeswrong/cli , @ljharb/tsconfig , @types/tape , es-value-fixtures , for-each , has-strict-mode , object-inspect e43d540 v1.0.1 - 2024-12-08 Commits [types] reflectApply : fix types 4efc396 [Fix] reflectApply : oops, Reflect is not a function 83cc739 [Dev Deps] update @arethetypeswrong/cli 80bd5d3 v1.0.0 - 2024-12-05 Commits Initial implementation, tests, readme 7879629 Initial commit 3f1dc16 npm init 081df04 Only apps should have lockfiles 5b9ca0f","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bind-apply-helpers/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bind-apply-helpers/CHANGELOG/#v102-2025-02-12","text":"","title":"v1.0.2 - 2025-02-12"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bind-apply-helpers/CHANGELOG/#commits","text":"[types] improve inferred types e6f9586 [Dev Deps] update @arethetypeswrong/cli , @ljharb/tsconfig , @types/tape , es-value-fixtures , for-each , has-strict-mode , object-inspect e43d540","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bind-apply-helpers/CHANGELOG/#v101-2024-12-08","text":"","title":"v1.0.1 - 2024-12-08"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bind-apply-helpers/CHANGELOG/#commits_1","text":"[types] reflectApply : fix types 4efc396 [Fix] reflectApply : oops, Reflect is not a function 83cc739 [Dev Deps] update @arethetypeswrong/cli 80bd5d3","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bind-apply-helpers/CHANGELOG/#v100-2024-12-05","text":"","title":"v1.0.0 - 2024-12-05"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bind-apply-helpers/CHANGELOG/#commits_2","text":"Initial implementation, tests, readme 7879629 Initial commit 3f1dc16 npm init 081df04 Only apps should have lockfiles 5b9ca0f","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bound/","text":"call-bound Robust call-bound JavaScript intrinsics, using call-bind and get-intrinsic . Getting started npm install --save call-bound Usage/Examples const assert = require ( 'assert' ); const callBound = require ( 'call-bound' ); const slice = callBound ( 'Array.prototype.slice' ); delete Function . prototype . call ; delete Function . prototype . bind ; delete Array . prototype . slice ; assert . deepEqual ( slice ([ 1 , 2 , 3 , 4 ], 1 , - 1 ), [ 2 , 3 ]); Tests Clone the repo, npm install , and run npm test","title":"call-bound Version Badge"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bound/#call-bound","text":"Robust call-bound JavaScript intrinsics, using call-bind and get-intrinsic .","title":"call-bound"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bound/#getting-started","text":"npm install --save call-bound","title":"Getting started"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bound/#usageexamples","text":"const assert = require ( 'assert' ); const callBound = require ( 'call-bound' ); const slice = callBound ( 'Array.prototype.slice' ); delete Function . prototype . call ; delete Function . prototype . bind ; delete Array . prototype . slice ; assert . deepEqual ( slice ([ 1 , 2 , 3 , 4 ], 1 , - 1 ), [ 2 , 3 ]);","title":"Usage/Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bound/#tests","text":"Clone the repo, npm install , and run npm test","title":"Tests"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bound/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.4 - 2025-03-03 Commits [types] improve types e648922 [Dev Deps] update @arethetypeswrong/cli , @ljharb/tsconfig , @types/tape , es-value-fixtures , for-each , has-strict-mode , object-inspect a42a5eb [Deps] update call-bind-apply-helpers , get-intrinsic f529eac v1.0.3 - 2024-12-15 Commits [Refactor] use call-bind-apply-helpers instead of call-bind 5e0b134 [Deps] update get-intrinsic 41fc967 [readme] fix example 79a0137 [meta] add sideEffects flag 08b07be v1.0.2 - 2024-12-10 Commits [Dev Deps] update @arethetypeswrong/cli , @ljharb/tsconfig , gopd e6a5ffe [Deps] update call-bind , get-intrinsic 2aeb5b5 [types] improve return type 1a0c9fe v1.0.1 - 2024-12-05 Commits Initial implementation, tests, readme, types 6d94121 Initial commit 0eae867 npm init 71b2479 Only apps should have lockfiles c3754a9 [actions] skip npm ls in node < 10 74275a5 [Dev Deps] add missing peer dep 1354de8","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bound/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bound/CHANGELOG/#v104-2025-03-03","text":"","title":"v1.0.4 - 2025-03-03"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bound/CHANGELOG/#commits","text":"[types] improve types e648922 [Dev Deps] update @arethetypeswrong/cli , @ljharb/tsconfig , @types/tape , es-value-fixtures , for-each , has-strict-mode , object-inspect a42a5eb [Deps] update call-bind-apply-helpers , get-intrinsic f529eac","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bound/CHANGELOG/#v103-2024-12-15","text":"","title":"v1.0.3 - 2024-12-15"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bound/CHANGELOG/#commits_1","text":"[Refactor] use call-bind-apply-helpers instead of call-bind 5e0b134 [Deps] update get-intrinsic 41fc967 [readme] fix example 79a0137 [meta] add sideEffects flag 08b07be","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bound/CHANGELOG/#v102-2024-12-10","text":"","title":"v1.0.2 - 2024-12-10"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bound/CHANGELOG/#commits_2","text":"[Dev Deps] update @arethetypeswrong/cli , @ljharb/tsconfig , gopd e6a5ffe [Deps] update call-bind , get-intrinsic 2aeb5b5 [types] improve return type 1a0c9fe","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bound/CHANGELOG/#v101-2024-12-05","text":"","title":"v1.0.1 - 2024-12-05"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bound/CHANGELOG/#commits_3","text":"Initial implementation, tests, readme, types 6d94121 Initial commit 0eae867 npm init 71b2479 Only apps should have lockfiles c3754a9 [actions] skip npm ls in node < 10 74275a5 [Dev Deps] add missing peer dep 1354de8","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/","text":"Chokidar Minimal and efficient cross-platform file watching library Why? Node.js fs.watch : Doesn't report filenames on MacOS. Doesn't report events at all when using editors like Sublime on MacOS. Often reports events twice. Emits most changes as rename . Does not provide an easy way to recursively watch file trees. Does not support recursive watching on Linux. Node.js fs.watchFile : Almost as bad at event handling. Also does not provide any recursive watching. Results in high CPU utilization. Chokidar resolves these problems. Initially made for Brunch (an ultra-swift web app build tool), it is now used in Microsoft's Visual Studio Code , gulp , karma , PM2 , browserify , webpack , BrowserSync , and many others . It has proven itself in production environments. Version 3 is out! Check out our blog post about it: Chokidar 3: How to save 32TB of traffic every week How? Chokidar does still rely on the Node.js core fs module, but when using fs.watch and fs.watchFile for watching, it normalizes the events it receives, often checking for truth by getting file stats and/or dir contents. On MacOS, chokidar by default uses a native extension exposing the Darwin FSEvents API. This provides very efficient recursive watching compared with implementations like kqueue available on most *nix platforms. Chokidar still does have to do some work to normalize the events received that way as well. On most other platforms, the fs.watch -based implementation is the default, which avoids polling and keeps CPU usage down. Be advised that chokidar will initiate watchers recursively for everything within scope of the paths that have been specified, so be judicious about not wasting system resources by watching much more than needed. Getting started Install with npm: npm install chokidar Then require and use it in your code: const chokidar = require ( 'chokidar' ); // One-liner for current directory chokidar . watch ( '.' ). on ( 'all' , ( event , path ) => { console . log ( event , path ); }); API // Example of a more typical implementation structure // Initialize watcher. const watcher = chokidar . watch ( 'file, dir, glob, or array' , { ignored : /(^|[\\/\\\\])\\../ , // ignore dotfiles persistent : true }); // Something to use when events are received. const log = console . log . bind ( console ); // Add event listeners. watcher . on ( 'add' , path => log ( `File ${ path } has been added` )) . on ( 'change' , path => log ( `File ${ path } has been changed` )) . on ( 'unlink' , path => log ( `File ${ path } has been removed` )); // More possible events. watcher . on ( 'addDir' , path => log ( `Directory ${ path } has been added` )) . on ( 'unlinkDir' , path => log ( `Directory ${ path } has been removed` )) . on ( 'error' , error => log ( `Watcher error: ${ error } ` )) . on ( 'ready' , () => log ( 'Initial scan complete. Ready for changes' )) . on ( 'raw' , ( event , path , details ) => { // internal log ( 'Raw event info:' , event , path , details ); }); // 'add', 'addDir' and 'change' events also receive stat() results as second // argument when available: https://nodejs.org/api/fs.html#fs_class_fs_stats watcher . on ( 'change' , ( path , stats ) => { if ( stats ) console . log ( `File ${ path } changed size to ${ stats . size } ` ); }); // Watch new files. watcher . add ( 'new-file' ); watcher . add ([ 'new-file-2' , 'new-file-3' , '**/other-file*' ]); // Get list of actual paths being watched on the filesystem var watchedPaths = watcher . getWatched (); // Un-watch some files. await watcher . unwatch ( 'new-file*' ); // Stop watching. // The method is async! watcher . close (). then (() => console . log ( 'closed' )); // Full list of options. See below for descriptions. // Do not use this example! chokidar . watch ( 'file' , { persistent : true , ignored : '*.txt' , ignoreInitial : false , followSymlinks : true , cwd : '.' , disableGlobbing : false , usePolling : false , interval : 100 , binaryInterval : 300 , alwaysStat : false , depth : 99 , awaitWriteFinish : { stabilityThreshold : 2000 , pollInterval : 100 }, ignorePermissionErrors : false , atomic : true // or a custom 'atomicity delay', in milliseconds (default 100) }); chokidar.watch(paths, [options]) paths (string or array of strings). Paths to files, dirs to be watched recursively, or glob patterns. Note: globs must not contain windows separators ( \\ ), because that's how they work by the standard \u2014 you'll need to replace them with forward slashes ( / ). Note 2: for additional glob documentation, check out low-level library: picomatch . options (object) Options object as defined below: Persistence persistent (default: true ). Indicates whether the process should continue to run as long as files are being watched. If set to false when using fsevents to watch, no more events will be emitted after ready , even if the process continues to run. Path filtering ignored ( anymatch -compatible definition) Defines files/paths to be ignored. The whole relative or absolute path is tested, not just filename. If a function with two arguments is provided, it gets called twice per path - once with a single argument (the path), second time with two arguments (the path and the fs.Stats object of that path). ignoreInitial (default: false ). If set to false then add / addDir events are also emitted for matching paths while instantiating the watching as chokidar discovers these file paths (before the ready event). followSymlinks (default: true ). When false , only the symlinks themselves will be watched for changes instead of following the link references and bubbling events through the link's path. cwd (no default). The base directory from which watch paths are to be derived. Paths emitted with events will be relative to this. disableGlobbing (default: false ). If set to true then the strings passed to .watch() and .add() are treated as literal path names, even if they look like globs. Performance usePolling (default: false ). Whether to use fs.watchFile (backed by polling), or fs.watch. If polling leads to high CPU utilization, consider setting this to false . It is typically necessary to set this to true to successfully watch files over a network , and it may be necessary to successfully watch files in other non-standard situations. Setting to true explicitly on MacOS overrides the useFsEvents default. You may also set the CHOKIDAR_USEPOLLING env variable to true (1) or false (0) in order to override this option. Polling-specific settings (effective when usePolling: true ) interval (default: 100 ). Interval of file system polling, in milliseconds. You may also set the CHOKIDAR_INTERVAL env variable to override this option. binaryInterval (default: 300 ). Interval of file system polling for binary files. ( see list of binary extensions ) useFsEvents (default: true on MacOS). Whether to use the fsevents watching interface if available. When set to true explicitly and fsevents is available this supercedes the usePolling setting. When set to false on MacOS, usePolling: true becomes the default. alwaysStat (default: false ). If relying upon the fs.Stats object that may get passed with add , addDir , and change events, set this to true to ensure it is provided even in cases where it wasn't already available from the underlying watch events. depth (default: undefined ). If set, limits how many levels of subdirectories will be traversed. awaitWriteFinish (default: false ). By default, the add event will fire when a file first appears on disk, before the entire file has been written. Furthermore, in some cases some change events will be emitted while the file is being written. In some cases, especially when watching for large files there will be a need to wait for the write operation to finish before responding to a file creation or modification. Setting awaitWriteFinish to true (or a truthy value) will poll file size, holding its add and change events until the size does not change for a configurable amount of time. The appropriate duration setting is heavily dependent on the OS and hardware. For accurate detection this parameter should be relatively high, making file watching much less responsive. Use with caution. options.awaitWriteFinish can be set to an object in order to adjust timing params: awaitWriteFinish.stabilityThreshold (default: 2000). Amount of time in milliseconds for a file size to remain constant before emitting its event. awaitWriteFinish.pollInterval (default: 100). File size polling interval, in milliseconds. Errors ignorePermissionErrors (default: false ). Indicates whether to watch files that don't have read permissions if possible. If watching fails due to EPERM or EACCES with this set to true , the errors will be suppressed silently. atomic (default: true if useFsEvents and usePolling are false ). Automatically filters out artifacts that occur when using editors that use \"atomic writes\" instead of writing directly to the source file. If a file is re-added within 100 ms of being deleted, Chokidar emits a change event rather than unlink then add . If the default of 100 ms does not work well for you, you can override it by setting atomic to a custom value, in milliseconds. Methods & Events chokidar.watch() produces an instance of FSWatcher . Methods of FSWatcher : .add(path / paths) : Add files, directories, or glob patterns for tracking. Takes an array of strings or just one string. .on(event, callback) : Listen for an FS event. Available events: add , addDir , change , unlink , unlinkDir , ready , raw , error . Additionally all is available which gets emitted with the underlying event name and path for every event other than ready , raw , and error . raw is internal, use it carefully. .unwatch(path / paths) : Stop watching files, directories, or glob patterns. Takes an array of strings or just one string. .close() : async Removes all listeners from watched files. Asynchronous, returns Promise. Use with await to ensure bugs don't happen. .getWatched() : Returns an object representing all the paths on the file system being watched by this FSWatcher instance. The object's keys are all the directories (using absolute paths unless the cwd option was used), and the values are arrays of the names of the items contained in each directory. CLI If you need a CLI interface for your file watching, check out chokidar-cli , allowing you to execute a command on each change, or get a stdio stream of change events. Install Troubleshooting npm WARN optional dep failed, continuing fsevents@n.n.n This message is normal part of how npm handles optional dependencies and is not indicative of a problem. Even if accompanied by other related error messages, Chokidar should function properly. TypeError: fsevents is not a constructor Update chokidar by doing rm -rf node_modules package-lock.json yarn.lock && npm install , or update your dependency that uses chokidar. Chokidar is producing ENOSP error on Linux, like this: bash: cannot set terminal process group (-1): Inappropriate ioctl for device bash: no job control in this shell Error: watch /home/ ENOSPC This means Chokidar ran out of file handles and you'll need to increase their count by executing the following command in Terminal: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p Changelog For more detailed changelog, see full_changelog.md . - v3.5 (Jan 6, 2021): Support for ARM Macs with Apple Silicon. Fixes for deleted symlinks. - v3.4 (Apr 26, 2020): Support for directory-based symlinks. Fixes for macos file replacement. - v3.3 (Nov 2, 2019): FSWatcher#close() method became async. That fixes IO race conditions related to close method. - v3.2 (Oct 1, 2019): Improve Linux RAM usage by 50%. Race condition fixes. Windows glob fixes. Improve stability by using tight range of dependency versions. - v3.1 (Sep 16, 2019): dotfiles are no longer filtered out by default. Use ignored option if needed. Improve initial Linux scan time by 50%. - v3 (Apr 30, 2019): massive CPU & RAM consumption improvements; reduces deps / package size by a factor of 17x and bumps Node.js requirement to v8.16 and higher. - v2 (Dec 29, 2017): Globs are now posix-style-only; without windows support. Tons of bugfixes. - v1 (Apr 7, 2015): Glob support, symlink support, tons of bugfixes. Node 0.8+ is supported - v0.1 (Apr 20, 2012): Initial release, extracted from Brunch Also Why was chokidar named this way? What's the meaning behind it? Chowkidar is a transliteration of a Hindi word meaning 'watchman, gatekeeper', \u091a\u094c\u0915\u0940\u0926\u093e\u0930. This ultimately comes from Sanskrit _ \u091a\u0924\u0941\u0937\u094d\u0915_ (crossway, quadrangle, consisting-of-four). This word is also used in other languages like Urdu as (\u0686\u0648\u06a9\u06cc\u062f\u0627\u0631) which is widely used in Pakistan and India. License MIT (c) Paul Miller ( https://paulmillr.com ), see LICENSE file.","title":"Chokidar Weekly downloads Yearly downloads"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/#chokidar","text":"Minimal and efficient cross-platform file watching library","title":"Chokidar"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/#why","text":"Node.js fs.watch : Doesn't report filenames on MacOS. Doesn't report events at all when using editors like Sublime on MacOS. Often reports events twice. Emits most changes as rename . Does not provide an easy way to recursively watch file trees. Does not support recursive watching on Linux. Node.js fs.watchFile : Almost as bad at event handling. Also does not provide any recursive watching. Results in high CPU utilization. Chokidar resolves these problems. Initially made for Brunch (an ultra-swift web app build tool), it is now used in Microsoft's Visual Studio Code , gulp , karma , PM2 , browserify , webpack , BrowserSync , and many others . It has proven itself in production environments. Version 3 is out! Check out our blog post about it: Chokidar 3: How to save 32TB of traffic every week","title":"Why?"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/#how","text":"Chokidar does still rely on the Node.js core fs module, but when using fs.watch and fs.watchFile for watching, it normalizes the events it receives, often checking for truth by getting file stats and/or dir contents. On MacOS, chokidar by default uses a native extension exposing the Darwin FSEvents API. This provides very efficient recursive watching compared with implementations like kqueue available on most *nix platforms. Chokidar still does have to do some work to normalize the events received that way as well. On most other platforms, the fs.watch -based implementation is the default, which avoids polling and keeps CPU usage down. Be advised that chokidar will initiate watchers recursively for everything within scope of the paths that have been specified, so be judicious about not wasting system resources by watching much more than needed.","title":"How?"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/#getting-started","text":"Install with npm: npm install chokidar Then require and use it in your code: const chokidar = require ( 'chokidar' ); // One-liner for current directory chokidar . watch ( '.' ). on ( 'all' , ( event , path ) => { console . log ( event , path ); });","title":"Getting started"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/#api","text":"// Example of a more typical implementation structure // Initialize watcher. const watcher = chokidar . watch ( 'file, dir, glob, or array' , { ignored : /(^|[\\/\\\\])\\../ , // ignore dotfiles persistent : true }); // Something to use when events are received. const log = console . log . bind ( console ); // Add event listeners. watcher . on ( 'add' , path => log ( `File ${ path } has been added` )) . on ( 'change' , path => log ( `File ${ path } has been changed` )) . on ( 'unlink' , path => log ( `File ${ path } has been removed` )); // More possible events. watcher . on ( 'addDir' , path => log ( `Directory ${ path } has been added` )) . on ( 'unlinkDir' , path => log ( `Directory ${ path } has been removed` )) . on ( 'error' , error => log ( `Watcher error: ${ error } ` )) . on ( 'ready' , () => log ( 'Initial scan complete. Ready for changes' )) . on ( 'raw' , ( event , path , details ) => { // internal log ( 'Raw event info:' , event , path , details ); }); // 'add', 'addDir' and 'change' events also receive stat() results as second // argument when available: https://nodejs.org/api/fs.html#fs_class_fs_stats watcher . on ( 'change' , ( path , stats ) => { if ( stats ) console . log ( `File ${ path } changed size to ${ stats . size } ` ); }); // Watch new files. watcher . add ( 'new-file' ); watcher . add ([ 'new-file-2' , 'new-file-3' , '**/other-file*' ]); // Get list of actual paths being watched on the filesystem var watchedPaths = watcher . getWatched (); // Un-watch some files. await watcher . unwatch ( 'new-file*' ); // Stop watching. // The method is async! watcher . close (). then (() => console . log ( 'closed' )); // Full list of options. See below for descriptions. // Do not use this example! chokidar . watch ( 'file' , { persistent : true , ignored : '*.txt' , ignoreInitial : false , followSymlinks : true , cwd : '.' , disableGlobbing : false , usePolling : false , interval : 100 , binaryInterval : 300 , alwaysStat : false , depth : 99 , awaitWriteFinish : { stabilityThreshold : 2000 , pollInterval : 100 }, ignorePermissionErrors : false , atomic : true // or a custom 'atomicity delay', in milliseconds (default 100) }); chokidar.watch(paths, [options]) paths (string or array of strings). Paths to files, dirs to be watched recursively, or glob patterns. Note: globs must not contain windows separators ( \\ ), because that's how they work by the standard \u2014 you'll need to replace them with forward slashes ( / ). Note 2: for additional glob documentation, check out low-level library: picomatch . options (object) Options object as defined below:","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/#persistence","text":"persistent (default: true ). Indicates whether the process should continue to run as long as files are being watched. If set to false when using fsevents to watch, no more events will be emitted after ready , even if the process continues to run.","title":"Persistence"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/#path-filtering","text":"ignored ( anymatch -compatible definition) Defines files/paths to be ignored. The whole relative or absolute path is tested, not just filename. If a function with two arguments is provided, it gets called twice per path - once with a single argument (the path), second time with two arguments (the path and the fs.Stats object of that path). ignoreInitial (default: false ). If set to false then add / addDir events are also emitted for matching paths while instantiating the watching as chokidar discovers these file paths (before the ready event). followSymlinks (default: true ). When false , only the symlinks themselves will be watched for changes instead of following the link references and bubbling events through the link's path. cwd (no default). The base directory from which watch paths are to be derived. Paths emitted with events will be relative to this. disableGlobbing (default: false ). If set to true then the strings passed to .watch() and .add() are treated as literal path names, even if they look like globs.","title":"Path filtering"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/#performance","text":"usePolling (default: false ). Whether to use fs.watchFile (backed by polling), or fs.watch. If polling leads to high CPU utilization, consider setting this to false . It is typically necessary to set this to true to successfully watch files over a network , and it may be necessary to successfully watch files in other non-standard situations. Setting to true explicitly on MacOS overrides the useFsEvents default. You may also set the CHOKIDAR_USEPOLLING env variable to true (1) or false (0) in order to override this option. Polling-specific settings (effective when usePolling: true ) interval (default: 100 ). Interval of file system polling, in milliseconds. You may also set the CHOKIDAR_INTERVAL env variable to override this option. binaryInterval (default: 300 ). Interval of file system polling for binary files. ( see list of binary extensions ) useFsEvents (default: true on MacOS). Whether to use the fsevents watching interface if available. When set to true explicitly and fsevents is available this supercedes the usePolling setting. When set to false on MacOS, usePolling: true becomes the default. alwaysStat (default: false ). If relying upon the fs.Stats object that may get passed with add , addDir , and change events, set this to true to ensure it is provided even in cases where it wasn't already available from the underlying watch events. depth (default: undefined ). If set, limits how many levels of subdirectories will be traversed. awaitWriteFinish (default: false ). By default, the add event will fire when a file first appears on disk, before the entire file has been written. Furthermore, in some cases some change events will be emitted while the file is being written. In some cases, especially when watching for large files there will be a need to wait for the write operation to finish before responding to a file creation or modification. Setting awaitWriteFinish to true (or a truthy value) will poll file size, holding its add and change events until the size does not change for a configurable amount of time. The appropriate duration setting is heavily dependent on the OS and hardware. For accurate detection this parameter should be relatively high, making file watching much less responsive. Use with caution. options.awaitWriteFinish can be set to an object in order to adjust timing params: awaitWriteFinish.stabilityThreshold (default: 2000). Amount of time in milliseconds for a file size to remain constant before emitting its event. awaitWriteFinish.pollInterval (default: 100). File size polling interval, in milliseconds.","title":"Performance"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/#errors","text":"ignorePermissionErrors (default: false ). Indicates whether to watch files that don't have read permissions if possible. If watching fails due to EPERM or EACCES with this set to true , the errors will be suppressed silently. atomic (default: true if useFsEvents and usePolling are false ). Automatically filters out artifacts that occur when using editors that use \"atomic writes\" instead of writing directly to the source file. If a file is re-added within 100 ms of being deleted, Chokidar emits a change event rather than unlink then add . If the default of 100 ms does not work well for you, you can override it by setting atomic to a custom value, in milliseconds.","title":"Errors"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/#methods-events","text":"chokidar.watch() produces an instance of FSWatcher . Methods of FSWatcher : .add(path / paths) : Add files, directories, or glob patterns for tracking. Takes an array of strings or just one string. .on(event, callback) : Listen for an FS event. Available events: add , addDir , change , unlink , unlinkDir , ready , raw , error . Additionally all is available which gets emitted with the underlying event name and path for every event other than ready , raw , and error . raw is internal, use it carefully. .unwatch(path / paths) : Stop watching files, directories, or glob patterns. Takes an array of strings or just one string. .close() : async Removes all listeners from watched files. Asynchronous, returns Promise. Use with await to ensure bugs don't happen. .getWatched() : Returns an object representing all the paths on the file system being watched by this FSWatcher instance. The object's keys are all the directories (using absolute paths unless the cwd option was used), and the values are arrays of the names of the items contained in each directory.","title":"Methods &amp; Events"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/#cli","text":"If you need a CLI interface for your file watching, check out chokidar-cli , allowing you to execute a command on each change, or get a stdio stream of change events.","title":"CLI"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/#install-troubleshooting","text":"npm WARN optional dep failed, continuing fsevents@n.n.n This message is normal part of how npm handles optional dependencies and is not indicative of a problem. Even if accompanied by other related error messages, Chokidar should function properly. TypeError: fsevents is not a constructor Update chokidar by doing rm -rf node_modules package-lock.json yarn.lock && npm install , or update your dependency that uses chokidar. Chokidar is producing ENOSP error on Linux, like this: bash: cannot set terminal process group (-1): Inappropriate ioctl for device bash: no job control in this shell Error: watch /home/ ENOSPC This means Chokidar ran out of file handles and you'll need to increase their count by executing the following command in Terminal: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p","title":"Install Troubleshooting"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/#changelog","text":"For more detailed changelog, see full_changelog.md . - v3.5 (Jan 6, 2021): Support for ARM Macs with Apple Silicon. Fixes for deleted symlinks. - v3.4 (Apr 26, 2020): Support for directory-based symlinks. Fixes for macos file replacement. - v3.3 (Nov 2, 2019): FSWatcher#close() method became async. That fixes IO race conditions related to close method. - v3.2 (Oct 1, 2019): Improve Linux RAM usage by 50%. Race condition fixes. Windows glob fixes. Improve stability by using tight range of dependency versions. - v3.1 (Sep 16, 2019): dotfiles are no longer filtered out by default. Use ignored option if needed. Improve initial Linux scan time by 50%. - v3 (Apr 30, 2019): massive CPU & RAM consumption improvements; reduces deps / package size by a factor of 17x and bumps Node.js requirement to v8.16 and higher. - v2 (Dec 29, 2017): Globs are now posix-style-only; without windows support. Tons of bugfixes. - v1 (Apr 7, 2015): Glob support, symlink support, tons of bugfixes. Node 0.8+ is supported - v0.1 (Apr 20, 2012): Initial release, extracted from Brunch","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/#also","text":"Why was chokidar named this way? What's the meaning behind it? Chowkidar is a transliteration of a Hindi word meaning 'watchman, gatekeeper', \u091a\u094c\u0915\u0940\u0926\u093e\u0930. This ultimately comes from Sanskrit _ \u091a\u0924\u0941\u0937\u094d\u0915_ (crossway, quadrangle, consisting-of-four). This word is also used in other languages like Urdu as (\u0686\u0648\u06a9\u06cc\u062f\u0627\u0631) which is widely used in Pakistan and India.","title":"Also"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/#license","text":"MIT (c) Paul Miller ( https://paulmillr.com ), see LICENSE file.","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/concat-map/","text":"concat-map Concatenative mapdashery. example var concatMap = require ( 'concat-map' ); var xs = [ 1 , 2 , 3 , 4 , 5 , 6 ]; var ys = concatMap ( xs , function ( x ) { return x % 2 ? [ x - 0.1 , x , x + 0.1 ] : []; }); console . dir ( ys ); [ 0.9, 1, 1.1, 2.9, 3, 3.1, 4.9, 5, 5.1 ] methods var concatMap = require ( 'concat-map' ) concatMap(xs, fn) Return an array of concatenated elements by calling fn(x, i) for each element x and each index i in the array xs . When fn(x, i) returns an array, its result will be concatenated with the result array. If fn(x, i) returns anything else, that value will be pushed onto the end of the result array. install With npm do: npm install concat-map license MIT notes This module was written while sitting high above the ground in a tree.","title":"concat-map"},{"location":"system-desing/crud-app/JS/server/node_modules/concat-map/#concat-map","text":"Concatenative mapdashery.","title":"concat-map"},{"location":"system-desing/crud-app/JS/server/node_modules/concat-map/#example","text":"var concatMap = require ( 'concat-map' ); var xs = [ 1 , 2 , 3 , 4 , 5 , 6 ]; var ys = concatMap ( xs , function ( x ) { return x % 2 ? [ x - 0.1 , x , x + 0.1 ] : []; }); console . dir ( ys ); [ 0.9, 1, 1.1, 2.9, 3, 3.1, 4.9, 5, 5.1 ]","title":"example"},{"location":"system-desing/crud-app/JS/server/node_modules/concat-map/#methods","text":"var concatMap = require ( 'concat-map' )","title":"methods"},{"location":"system-desing/crud-app/JS/server/node_modules/concat-map/#concatmapxs-fn","text":"Return an array of concatenated elements by calling fn(x, i) for each element x and each index i in the array xs . When fn(x, i) returns an array, its result will be concatenated with the result array. If fn(x, i) returns anything else, that value will be pushed onto the end of the result array.","title":"concatMap(xs, fn)"},{"location":"system-desing/crud-app/JS/server/node_modules/concat-map/#install","text":"With npm do: npm install concat-map","title":"install"},{"location":"system-desing/crud-app/JS/server/node_modules/concat-map/#license","text":"MIT","title":"license"},{"location":"system-desing/crud-app/JS/server/node_modules/concat-map/#notes","text":"This module was written while sitting high above the ground in a tree.","title":"notes"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/","text":"content-disposition Create and parse HTTP Content-Disposition header Installation $ npm install content-disposition API var contentDisposition = require ( 'content-disposition' ) contentDisposition(filename, options) Create an attachment Content-Disposition header value using the given file name, if supplied. The filename is optional and if no file name is desired, but you want to specify options , set filename to undefined . res . setHeader ( 'Content-Disposition' , contentDisposition ( '\u222b maths.pdf' )) note HTTP headers are of the ISO-8859-1 character set. If you are writing this header through a means different from setHeader in Node.js, you'll want to specify the 'binary' encoding in Node.js. Options contentDisposition accepts these properties in the options object. fallback If the filename option is outside ISO-8859-1, then the file name is actually stored in a supplemental field for clients that support Unicode file names and a ISO-8859-1 version of the file name is automatically generated. This specifies the ISO-8859-1 file name to override the automatic generation or disables the generation all together, defaults to true . A string will specify the ISO-8859-1 file name to use in place of automatic generation. false will disable including a ISO-8859-1 file name and only include the Unicode version (unless the file name is already ISO-8859-1). true will enable automatic generation if the file name is outside ISO-8859-1. If the filename option is ISO-8859-1 and this option is specified and has a different value, then the filename option is encoded in the extended field and this set as the fallback field, even though they are both ISO-8859-1. type Specifies the disposition type, defaults to \"attachment\" . This can also be \"inline\" , or any other value (all values except inline are treated like attachment , but can convey additional information if both parties agree to it). The type is normalized to lower-case. contentDisposition.parse(string) var disposition = contentDisposition . parse ( 'attachment; filename=\"EURO rates.txt\"; filename*=UTF-8\\'\\'%e2%82%ac%20rates.txt' ) Parse a Content-Disposition header string. This automatically handles extended (\"Unicode\") parameters by decoding them and providing them under the standard parameter name. This will return an object with the following properties (examples are shown for the string 'attachment; filename=\"EURO rates.txt\"; filename*=UTF-8\\'\\'%e2%82%ac%20rates.txt' ): type : The disposition type (always lower case). Example: 'attachment' parameters : An object of the parameters in the disposition (name of parameter always lower case and extended versions replace non-extended versions). Example: {filename: \"\u20ac rates.txt\"} Examples Send a file for download var contentDisposition = require ( 'content-disposition' ) var destroy = require ( 'destroy' ) var fs = require ( 'fs' ) var http = require ( 'http' ) var onFinished = require ( 'on-finished' ) var filePath = '/path/to/public/plans.pdf' http . createServer ( function onRequest ( req , res ) { // set headers res . setHeader ( 'Content-Type' , 'application/pdf' ) res . setHeader ( 'Content-Disposition' , contentDisposition ( filePath )) // send file var stream = fs . createReadStream ( filePath ) stream . pipe ( res ) onFinished ( res , function () { destroy ( stream ) }) }) Testing $ npm test References RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1 RFC 5987: Character Set and Language Encoding for Hypertext Transfer Protocol (HTTP) Header Field Parameters RFC 6266: Use of the Content-Disposition Header Field in the Hypertext Transfer Protocol (HTTP) Test Cases for HTTP Content-Disposition header field (RFC 6266) and the Encodings defined in RFCs 2047, 2231 and 5987 License MIT","title":"content-disposition"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/#content-disposition","text":"Create and parse HTTP Content-Disposition header","title":"content-disposition"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/#installation","text":"$ npm install content-disposition","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/#api","text":"var contentDisposition = require ( 'content-disposition' )","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/#contentdispositionfilename-options","text":"Create an attachment Content-Disposition header value using the given file name, if supplied. The filename is optional and if no file name is desired, but you want to specify options , set filename to undefined . res . setHeader ( 'Content-Disposition' , contentDisposition ( '\u222b maths.pdf' )) note HTTP headers are of the ISO-8859-1 character set. If you are writing this header through a means different from setHeader in Node.js, you'll want to specify the 'binary' encoding in Node.js.","title":"contentDisposition(filename, options)"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/#options","text":"contentDisposition accepts these properties in the options object.","title":"Options"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/#fallback","text":"If the filename option is outside ISO-8859-1, then the file name is actually stored in a supplemental field for clients that support Unicode file names and a ISO-8859-1 version of the file name is automatically generated. This specifies the ISO-8859-1 file name to override the automatic generation or disables the generation all together, defaults to true . A string will specify the ISO-8859-1 file name to use in place of automatic generation. false will disable including a ISO-8859-1 file name and only include the Unicode version (unless the file name is already ISO-8859-1). true will enable automatic generation if the file name is outside ISO-8859-1. If the filename option is ISO-8859-1 and this option is specified and has a different value, then the filename option is encoded in the extended field and this set as the fallback field, even though they are both ISO-8859-1.","title":"fallback"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/#type","text":"Specifies the disposition type, defaults to \"attachment\" . This can also be \"inline\" , or any other value (all values except inline are treated like attachment , but can convey additional information if both parties agree to it). The type is normalized to lower-case.","title":"type"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/#contentdispositionparsestring","text":"var disposition = contentDisposition . parse ( 'attachment; filename=\"EURO rates.txt\"; filename*=UTF-8\\'\\'%e2%82%ac%20rates.txt' ) Parse a Content-Disposition header string. This automatically handles extended (\"Unicode\") parameters by decoding them and providing them under the standard parameter name. This will return an object with the following properties (examples are shown for the string 'attachment; filename=\"EURO rates.txt\"; filename*=UTF-8\\'\\'%e2%82%ac%20rates.txt' ): type : The disposition type (always lower case). Example: 'attachment' parameters : An object of the parameters in the disposition (name of parameter always lower case and extended versions replace non-extended versions). Example: {filename: \"\u20ac rates.txt\"}","title":"contentDisposition.parse(string)"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/#examples","text":"","title":"Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/#send-a-file-for-download","text":"var contentDisposition = require ( 'content-disposition' ) var destroy = require ( 'destroy' ) var fs = require ( 'fs' ) var http = require ( 'http' ) var onFinished = require ( 'on-finished' ) var filePath = '/path/to/public/plans.pdf' http . createServer ( function onRequest ( req , res ) { // set headers res . setHeader ( 'Content-Type' , 'application/pdf' ) res . setHeader ( 'Content-Disposition' , contentDisposition ( filePath )) // send file var stream = fs . createReadStream ( filePath ) stream . pipe ( res ) onFinished ( res , function () { destroy ( stream ) }) })","title":"Send a file for download"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/#testing","text":"$ npm test","title":"Testing"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/#references","text":"RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1 RFC 5987: Character Set and Language Encoding for Hypertext Transfer Protocol (HTTP) Header Field Parameters RFC 6266: Use of the Content-Disposition Header Field in the Hypertext Transfer Protocol (HTTP) Test Cases for HTTP Content-Disposition header field (RFC 6266) and the Encodings defined in RFCs 2047, 2231 and 5987","title":"References"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/HISTORY/","text":"1.0.0 / 2024-08-31 drop node <18 allow utf8 as alias for utf-8 0.5.4 / 2021-12-10 deps: safe-buffer@5.2.1 0.5.3 / 2018-12-17 Use safe-buffer for improved Buffer API 0.5.2 / 2016-12-08 Fix parse to accept any linear whitespace character 0.5.1 / 2016-01-17 perf: enable strict mode 0.5.0 / 2014-10-11 Add parse function 0.4.0 / 2014-09-21 Expand non-Unicode filename to the full ISO-8859-1 charset 0.3.0 / 2014-09-20 Add fallback option Add type option 0.2.0 / 2014-09-19 Reduce ambiguity of file names with hex escape in buggy browsers 0.1.2 / 2014-09-19 Fix periodic invalid Unicode filename header 0.1.1 / 2014-09-19 Fix invalid characters appearing in filename* parameter 0.1.0 / 2014-09-18 Make the filename argument optional 0.0.0 / 2014-09-18 Initial release","title":"1.0.0 / 2024-08-31"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/HISTORY/#100-2024-08-31","text":"drop node <18 allow utf8 as alias for utf-8","title":"1.0.0 / 2024-08-31"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/HISTORY/#054-2021-12-10","text":"deps: safe-buffer@5.2.1","title":"0.5.4 / 2021-12-10"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/HISTORY/#053-2018-12-17","text":"Use safe-buffer for improved Buffer API","title":"0.5.3 / 2018-12-17"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/HISTORY/#052-2016-12-08","text":"Fix parse to accept any linear whitespace character","title":"0.5.2 / 2016-12-08"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/HISTORY/#051-2016-01-17","text":"perf: enable strict mode","title":"0.5.1 / 2016-01-17"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/HISTORY/#050-2014-10-11","text":"Add parse function","title":"0.5.0 / 2014-10-11"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/HISTORY/#040-2014-09-21","text":"Expand non-Unicode filename to the full ISO-8859-1 charset","title":"0.4.0 / 2014-09-21"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/HISTORY/#030-2014-09-20","text":"Add fallback option Add type option","title":"0.3.0 / 2014-09-20"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/HISTORY/#020-2014-09-19","text":"Reduce ambiguity of file names with hex escape in buggy browsers","title":"0.2.0 / 2014-09-19"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/HISTORY/#012-2014-09-19","text":"Fix periodic invalid Unicode filename header","title":"0.1.2 / 2014-09-19"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/HISTORY/#011-2014-09-19","text":"Fix invalid characters appearing in filename* parameter","title":"0.1.1 / 2014-09-19"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/HISTORY/#010-2014-09-18","text":"Make the filename argument optional","title":"0.1.0 / 2014-09-18"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/HISTORY/#000-2014-09-18","text":"Initial release","title":"0.0.0 / 2014-09-18"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/","text":"content-type Create and parse HTTP Content-Type header according to RFC 7231 Installation $ npm install content-type API var contentType = require ( 'content-type' ) contentType.parse(string) var obj = contentType . parse ( 'image/svg+xml; charset=utf-8' ) Parse a Content-Type header. This will return an object with the following properties (examples are shown for the string 'image/svg+xml; charset=utf-8' ): type : The media type (the type and subtype, always lower case). Example: 'image/svg+xml' parameters : An object of the parameters in the media type (name of parameter always lower case). Example: {charset: 'utf-8'} Throws a TypeError if the string is missing or invalid. contentType.parse(req) var obj = contentType . parse ( req ) Parse the Content-Type header from the given req . Short-cut for contentType.parse(req.headers['content-type']) . Throws a TypeError if the Content-Type header is missing or invalid. contentType.parse(res) var obj = contentType . parse ( res ) Parse the Content-Type header set on the given res . Short-cut for contentType.parse(res.getHeader('content-type')) . Throws a TypeError if the Content-Type header is missing or invalid. contentType.format(obj) var str = contentType . format ({ type : 'image/svg+xml' , parameters : { charset : 'utf-8' } }) Format an object into a Content-Type header. This will return a string of the content type for the given object with the following properties (examples are shown that produce the string 'image/svg+xml; charset=utf-8' ): type : The media type (will be lower-cased). Example: 'image/svg+xml' parameters : An object of the parameters in the media type (name of the parameter will be lower-cased). Example: {charset: 'utf-8'} Throws a TypeError if the object contains an invalid type or parameter names. License MIT","title":"content-type"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/#content-type","text":"Create and parse HTTP Content-Type header according to RFC 7231","title":"content-type"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/#installation","text":"$ npm install content-type","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/#api","text":"var contentType = require ( 'content-type' )","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/#contenttypeparsestring","text":"var obj = contentType . parse ( 'image/svg+xml; charset=utf-8' ) Parse a Content-Type header. This will return an object with the following properties (examples are shown for the string 'image/svg+xml; charset=utf-8' ): type : The media type (the type and subtype, always lower case). Example: 'image/svg+xml' parameters : An object of the parameters in the media type (name of parameter always lower case). Example: {charset: 'utf-8'} Throws a TypeError if the string is missing or invalid.","title":"contentType.parse(string)"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/#contenttypeparsereq","text":"var obj = contentType . parse ( req ) Parse the Content-Type header from the given req . Short-cut for contentType.parse(req.headers['content-type']) . Throws a TypeError if the Content-Type header is missing or invalid.","title":"contentType.parse(req)"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/#contenttypeparseres","text":"var obj = contentType . parse ( res ) Parse the Content-Type header set on the given res . Short-cut for contentType.parse(res.getHeader('content-type')) . Throws a TypeError if the Content-Type header is missing or invalid.","title":"contentType.parse(res)"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/#contenttypeformatobj","text":"var str = contentType . format ({ type : 'image/svg+xml' , parameters : { charset : 'utf-8' } }) Format an object into a Content-Type header. This will return a string of the content type for the given object with the following properties (examples are shown that produce the string 'image/svg+xml; charset=utf-8' ): type : The media type (will be lower-cased). Example: 'image/svg+xml' parameters : An object of the parameters in the media type (name of the parameter will be lower-cased). Example: {charset: 'utf-8'} Throws a TypeError if the object contains an invalid type or parameter names.","title":"contentType.format(obj)"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/HISTORY/","text":"1.0.5 / 2023-01-29 perf: skip value escaping when unnecessary 1.0.4 / 2017-09-11 perf: skip parameter parsing when no parameters 1.0.3 / 2017-09-10 perf: remove argument reassignment 1.0.2 / 2016-05-09 perf: enable strict mode 1.0.1 / 2015-02-13 Improve missing Content-Type header error message 1.0.0 / 2015-02-01 Initial implementation, derived from media-typer@0.3.0","title":"1.0.5 / 2023-01-29"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/HISTORY/#105-2023-01-29","text":"perf: skip value escaping when unnecessary","title":"1.0.5 / 2023-01-29"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/HISTORY/#104-2017-09-11","text":"perf: skip parameter parsing when no parameters","title":"1.0.4 / 2017-09-11"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/HISTORY/#103-2017-09-10","text":"perf: remove argument reassignment","title":"1.0.3 / 2017-09-10"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/HISTORY/#102-2016-05-09","text":"perf: enable strict mode","title":"1.0.2 / 2016-05-09"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/HISTORY/#101-2015-02-13","text":"Improve missing Content-Type header error message","title":"1.0.1 / 2015-02-13"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/HISTORY/#100-2015-02-01","text":"Initial implementation, derived from media-typer@0.3.0","title":"1.0.0 / 2015-02-01"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/","text":"cookie Basic HTTP cookie parser and serializer for HTTP servers. Installation This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install cookie API var cookie = require ( 'cookie' ); cookie.parse(str, options) Parse an HTTP Cookie header string and returning an object of all cookie name-value pairs. The str argument is the string representing a Cookie header value and options is an optional object containing additional parsing options. var cookies = cookie . parse ( 'foo=bar; equation=E%3Dmc%5E2' ); // { foo: 'bar', equation: 'E=mc^2' } Options cookie.parse accepts these properties in the options object. decode Specifies a function that will be used to decode a cookie's value. Since the value of a cookie has a limited character set (and must be a simple string), this function can be used to decode a previously-encoded cookie value into a JavaScript string or other object. The default function is the global decodeURIComponent , which will decode any URL-encoded sequences into their byte representations. note if an error is thrown from this function, the original, non-decoded cookie value will be returned as the cookie's value. cookie.serialize(name, value, options) Serialize a cookie name-value pair into a Set-Cookie header string. The name argument is the name for the cookie, the value argument is the value to set the cookie to, and the options argument is an optional object containing additional serialization options. var setCookie = cookie . serialize ( 'foo' , 'bar' ); // foo=bar Options cookie.serialize accepts these properties in the options object. domain Specifies the value for the Domain Set-Cookie attribute . By default, no domain is set, and most clients will consider the cookie to apply to only the current domain. encode Specifies a function that will be used to encode a cookie's value. Since value of a cookie has a limited character set (and must be a simple string), this function can be used to encode a value into a string suited for a cookie's value. The default function is the global encodeURIComponent , which will encode a JavaScript string into UTF-8 byte sequences and then URL-encode any that fall outside of the cookie range. expires Specifies the Date object to be the value for the Expires Set-Cookie attribute . By default, no expiration is set, and most clients will consider this a \"non-persistent cookie\" and will delete it on a condition like exiting a web browser application. note the cookie storage model specification states that if both expires and maxAge are set, then maxAge takes precedence, but it is possible not all clients by obey this, so if both are set, they should point to the same date and time. httpOnly Specifies the boolean value for the HttpOnly Set-Cookie attribute . When truthy, the HttpOnly attribute is set, otherwise it is not. By default, the HttpOnly attribute is not set. note be careful when setting this to true , as compliant clients will not allow client-side JavaScript to see the cookie in document.cookie . maxAge Specifies the number (in seconds) to be the value for the Max-Age Set-Cookie attribute . The given number will be converted to an integer by rounding down. By default, no maximum age is set. note the cookie storage model specification states that if both expires and maxAge are set, then maxAge takes precedence, but it is possible not all clients by obey this, so if both are set, they should point to the same date and time. partitioned Specifies the boolean value for the Partitioned Set-Cookie attribute. When truthy, the Partitioned attribute is set, otherwise it is not. By default, the Partitioned attribute is not set. note This is an attribute that has not yet been fully standardized, and may change in the future. This also means many clients may ignore this attribute until they understand it. More information about can be found in the proposal . path Specifies the value for the Path Set-Cookie attribute . By default, the path is considered the \"default path\" . priority Specifies the string to be the value for the Priority Set-Cookie attribute . 'low' will set the Priority attribute to Low . 'medium' will set the Priority attribute to Medium , the default priority when not set. 'high' will set the Priority attribute to High . More information about the different priority levels can be found in the specification . note This is an attribute that has not yet been fully standardized, and may change in the future. This also means many clients may ignore this attribute until they understand it. sameSite Specifies the boolean or string to be the value for the SameSite Set-Cookie attribute . true will set the SameSite attribute to Strict for strict same site enforcement. false will not set the SameSite attribute. 'lax' will set the SameSite attribute to Lax for lax same site enforcement. 'none' will set the SameSite attribute to None for an explicit cross-site cookie. 'strict' will set the SameSite attribute to Strict for strict same site enforcement. More information about the different enforcement levels can be found in the specification . note This is an attribute that has not yet been fully standardized, and may change in the future. This also means many clients may ignore this attribute until they understand it. secure Specifies the boolean value for the Secure Set-Cookie attribute . When truthy, the Secure attribute is set, otherwise it is not. By default, the Secure attribute is not set. note be careful when setting this to true , as compliant clients will not send the cookie back to the server in the future if the browser does not have an HTTPS connection. Example The following example uses this module in conjunction with the Node.js core HTTP server to prompt a user for their name and display it back on future visits. var cookie = require ( 'cookie' ); var escapeHtml = require ( 'escape-html' ); var http = require ( 'http' ); var url = require ( 'url' ); function onRequest ( req , res ) { // Parse the query string var query = url . parse ( req . url , true , true ). query ; if ( query && query . name ) { // Set a new cookie with the name res . setHeader ( 'Set-Cookie' , cookie . serialize ( 'name' , String ( query . name ), { httpOnly : true , maxAge : 60 * 60 * 24 * 7 // 1 week })); // Redirect back after setting cookie res . statusCode = 302 ; res . setHeader ( 'Location' , req . headers . referer || '/' ); res . end (); return ; } // Parse the cookies on the request var cookies = cookie . parse ( req . headers . cookie || '' ); // Get the visitor name set in the cookie var name = cookies . name ; res . setHeader ( 'Content-Type' , 'text/html; charset=UTF-8' ); if ( name ) { res . write ( '<p>Welcome back, <b>' + escapeHtml ( name ) + '</b>!</p>' ); } else { res . write ( '<p>Hello, new visitor!</p>' ); } res . write ( '<form method=\"GET\">' ); res . write ( '<input placeholder=\"enter your name\" name=\"name\"> <input type=\"submit\" value=\"Set Name\">' ); res . end ( '</form>' ); } http . createServer ( onRequest ). listen ( 3000 ); Testing $ npm test Benchmark $ npm run bench > cookie@0.5.0 bench > node benchmark/index.js node@18.18.2 acorn@8.10.0 ada@2.6.0 ares@1.19.1 brotli@1.0.9 cldr@43.1 icu@73.2 llhttp@6.0.11 modules@108 napi@9 nghttp2@1.57.0 nghttp3@0.7.0 ngtcp2@0.8.1 openssl@3.0.10+quic simdutf@3.2.14 tz@2023c undici@5.26.3 unicode@15.0 uv@1.44.2 uvwasi@0.0.18 v8@10.2.154.26-node.26 zlib@1.2.13.1-motley > node benchmark/parse-top.js cookie.parse - top sites 14 tests completed. parse accounts.google.com x 2,588,913 ops/sec \u00b10.74% (186 runs sampled) parse apple.com x 2,370,002 ops/sec \u00b10.69% (186 runs sampled) parse cloudflare.com x 2,213,102 ops/sec \u00b10.88% (188 runs sampled) parse docs.google.com x 2,194,157 ops/sec \u00b11.03% (184 runs sampled) parse drive.google.com x 2,265,084 ops/sec \u00b10.79% (187 runs sampled) parse en.wikipedia.org x 457,099 ops/sec \u00b10.81% (186 runs sampled) parse linkedin.com x 504,407 ops/sec \u00b10.89% (186 runs sampled) parse maps.google.com x 1,230,959 ops/sec \u00b10.98% (186 runs sampled) parse microsoft.com x 926,294 ops/sec \u00b10.88% (184 runs sampled) parse play.google.com x 2,311,338 ops/sec \u00b10.83% (185 runs sampled) parse support.google.com x 1,508,850 ops/sec \u00b10.86% (186 runs sampled) parse www.google.com x 1,022,582 ops/sec \u00b11.32% (182 runs sampled) parse youtu.be x 332,136 ops/sec \u00b11.02% (185 runs sampled) parse youtube.com x 323,833 ops/sec \u00b10.77% (183 runs sampled) > node benchmark/parse.js cookie.parse - generic 6 tests completed. simple x 3,214,032 ops/sec \u00b11.61% (183 runs sampled) decode x 587,237 ops/sec \u00b11.16% (187 runs sampled) unquote x 2,954,618 ops/sec \u00b11.35% (183 runs sampled) duplicates x 857,008 ops/sec \u00b10.89% (187 runs sampled) 10 cookies x 292,133 ops/sec \u00b10.89% (187 runs sampled) 100 cookies x 22,610 ops/sec \u00b10.68% (187 runs sampled) References RFC 6265: HTTP State Management Mechanism Same-site Cookies License MIT","title":"cookie"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#cookie","text":"Basic HTTP cookie parser and serializer for HTTP servers.","title":"cookie"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#installation","text":"This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install cookie","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#api","text":"var cookie = require ( 'cookie' );","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#cookieparsestr-options","text":"Parse an HTTP Cookie header string and returning an object of all cookie name-value pairs. The str argument is the string representing a Cookie header value and options is an optional object containing additional parsing options. var cookies = cookie . parse ( 'foo=bar; equation=E%3Dmc%5E2' ); // { foo: 'bar', equation: 'E=mc^2' }","title":"cookie.parse(str, options)"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#options","text":"cookie.parse accepts these properties in the options object.","title":"Options"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#decode","text":"Specifies a function that will be used to decode a cookie's value. Since the value of a cookie has a limited character set (and must be a simple string), this function can be used to decode a previously-encoded cookie value into a JavaScript string or other object. The default function is the global decodeURIComponent , which will decode any URL-encoded sequences into their byte representations. note if an error is thrown from this function, the original, non-decoded cookie value will be returned as the cookie's value.","title":"decode"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#cookieserializename-value-options","text":"Serialize a cookie name-value pair into a Set-Cookie header string. The name argument is the name for the cookie, the value argument is the value to set the cookie to, and the options argument is an optional object containing additional serialization options. var setCookie = cookie . serialize ( 'foo' , 'bar' ); // foo=bar","title":"cookie.serialize(name, value, options)"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#options_1","text":"cookie.serialize accepts these properties in the options object.","title":"Options"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#domain","text":"Specifies the value for the Domain Set-Cookie attribute . By default, no domain is set, and most clients will consider the cookie to apply to only the current domain.","title":"domain"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#encode","text":"Specifies a function that will be used to encode a cookie's value. Since value of a cookie has a limited character set (and must be a simple string), this function can be used to encode a value into a string suited for a cookie's value. The default function is the global encodeURIComponent , which will encode a JavaScript string into UTF-8 byte sequences and then URL-encode any that fall outside of the cookie range.","title":"encode"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#expires","text":"Specifies the Date object to be the value for the Expires Set-Cookie attribute . By default, no expiration is set, and most clients will consider this a \"non-persistent cookie\" and will delete it on a condition like exiting a web browser application. note the cookie storage model specification states that if both expires and maxAge are set, then maxAge takes precedence, but it is possible not all clients by obey this, so if both are set, they should point to the same date and time.","title":"expires"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#httponly","text":"Specifies the boolean value for the HttpOnly Set-Cookie attribute . When truthy, the HttpOnly attribute is set, otherwise it is not. By default, the HttpOnly attribute is not set. note be careful when setting this to true , as compliant clients will not allow client-side JavaScript to see the cookie in document.cookie .","title":"httpOnly"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#maxage","text":"Specifies the number (in seconds) to be the value for the Max-Age Set-Cookie attribute . The given number will be converted to an integer by rounding down. By default, no maximum age is set. note the cookie storage model specification states that if both expires and maxAge are set, then maxAge takes precedence, but it is possible not all clients by obey this, so if both are set, they should point to the same date and time.","title":"maxAge"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#partitioned","text":"Specifies the boolean value for the Partitioned Set-Cookie attribute. When truthy, the Partitioned attribute is set, otherwise it is not. By default, the Partitioned attribute is not set. note This is an attribute that has not yet been fully standardized, and may change in the future. This also means many clients may ignore this attribute until they understand it. More information about can be found in the proposal .","title":"partitioned"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#path","text":"Specifies the value for the Path Set-Cookie attribute . By default, the path is considered the \"default path\" .","title":"path"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#priority","text":"Specifies the string to be the value for the Priority Set-Cookie attribute . 'low' will set the Priority attribute to Low . 'medium' will set the Priority attribute to Medium , the default priority when not set. 'high' will set the Priority attribute to High . More information about the different priority levels can be found in the specification . note This is an attribute that has not yet been fully standardized, and may change in the future. This also means many clients may ignore this attribute until they understand it.","title":"priority"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#samesite","text":"Specifies the boolean or string to be the value for the SameSite Set-Cookie attribute . true will set the SameSite attribute to Strict for strict same site enforcement. false will not set the SameSite attribute. 'lax' will set the SameSite attribute to Lax for lax same site enforcement. 'none' will set the SameSite attribute to None for an explicit cross-site cookie. 'strict' will set the SameSite attribute to Strict for strict same site enforcement. More information about the different enforcement levels can be found in the specification . note This is an attribute that has not yet been fully standardized, and may change in the future. This also means many clients may ignore this attribute until they understand it.","title":"sameSite"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#secure","text":"Specifies the boolean value for the Secure Set-Cookie attribute . When truthy, the Secure attribute is set, otherwise it is not. By default, the Secure attribute is not set. note be careful when setting this to true , as compliant clients will not send the cookie back to the server in the future if the browser does not have an HTTPS connection.","title":"secure"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#example","text":"The following example uses this module in conjunction with the Node.js core HTTP server to prompt a user for their name and display it back on future visits. var cookie = require ( 'cookie' ); var escapeHtml = require ( 'escape-html' ); var http = require ( 'http' ); var url = require ( 'url' ); function onRequest ( req , res ) { // Parse the query string var query = url . parse ( req . url , true , true ). query ; if ( query && query . name ) { // Set a new cookie with the name res . setHeader ( 'Set-Cookie' , cookie . serialize ( 'name' , String ( query . name ), { httpOnly : true , maxAge : 60 * 60 * 24 * 7 // 1 week })); // Redirect back after setting cookie res . statusCode = 302 ; res . setHeader ( 'Location' , req . headers . referer || '/' ); res . end (); return ; } // Parse the cookies on the request var cookies = cookie . parse ( req . headers . cookie || '' ); // Get the visitor name set in the cookie var name = cookies . name ; res . setHeader ( 'Content-Type' , 'text/html; charset=UTF-8' ); if ( name ) { res . write ( '<p>Welcome back, <b>' + escapeHtml ( name ) + '</b>!</p>' ); } else { res . write ( '<p>Hello, new visitor!</p>' ); } res . write ( '<form method=\"GET\">' ); res . write ( '<input placeholder=\"enter your name\" name=\"name\"> <input type=\"submit\" value=\"Set Name\">' ); res . end ( '</form>' ); } http . createServer ( onRequest ). listen ( 3000 );","title":"Example"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#testing","text":"$ npm test","title":"Testing"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#benchmark","text":"$ npm run bench > cookie@0.5.0 bench > node benchmark/index.js node@18.18.2 acorn@8.10.0 ada@2.6.0 ares@1.19.1 brotli@1.0.9 cldr@43.1 icu@73.2 llhttp@6.0.11 modules@108 napi@9 nghttp2@1.57.0 nghttp3@0.7.0 ngtcp2@0.8.1 openssl@3.0.10+quic simdutf@3.2.14 tz@2023c undici@5.26.3 unicode@15.0 uv@1.44.2 uvwasi@0.0.18 v8@10.2.154.26-node.26 zlib@1.2.13.1-motley > node benchmark/parse-top.js cookie.parse - top sites 14 tests completed. parse accounts.google.com x 2,588,913 ops/sec \u00b10.74% (186 runs sampled) parse apple.com x 2,370,002 ops/sec \u00b10.69% (186 runs sampled) parse cloudflare.com x 2,213,102 ops/sec \u00b10.88% (188 runs sampled) parse docs.google.com x 2,194,157 ops/sec \u00b11.03% (184 runs sampled) parse drive.google.com x 2,265,084 ops/sec \u00b10.79% (187 runs sampled) parse en.wikipedia.org x 457,099 ops/sec \u00b10.81% (186 runs sampled) parse linkedin.com x 504,407 ops/sec \u00b10.89% (186 runs sampled) parse maps.google.com x 1,230,959 ops/sec \u00b10.98% (186 runs sampled) parse microsoft.com x 926,294 ops/sec \u00b10.88% (184 runs sampled) parse play.google.com x 2,311,338 ops/sec \u00b10.83% (185 runs sampled) parse support.google.com x 1,508,850 ops/sec \u00b10.86% (186 runs sampled) parse www.google.com x 1,022,582 ops/sec \u00b11.32% (182 runs sampled) parse youtu.be x 332,136 ops/sec \u00b11.02% (185 runs sampled) parse youtube.com x 323,833 ops/sec \u00b10.77% (183 runs sampled) > node benchmark/parse.js cookie.parse - generic 6 tests completed. simple x 3,214,032 ops/sec \u00b11.61% (183 runs sampled) decode x 587,237 ops/sec \u00b11.16% (187 runs sampled) unquote x 2,954,618 ops/sec \u00b11.35% (183 runs sampled) duplicates x 857,008 ops/sec \u00b10.89% (187 runs sampled) 10 cookies x 292,133 ops/sec \u00b10.89% (187 runs sampled) 100 cookies x 22,610 ops/sec \u00b10.68% (187 runs sampled)","title":"Benchmark"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#references","text":"RFC 6265: HTTP State Management Mechanism Same-site Cookies","title":"References"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/SECURITY/","text":"Security Policies and Procedures Reporting a Bug The cookie team and community take all security bugs seriously. Thank you for improving the security of the project. We appreciate your efforts and responsible disclosure and will make every effort to acknowledge your contributions. Report security bugs by emailing the current owner(s) of cookie . This information can be found in the npm registry using the command npm owner ls cookie . If unsure or unable to get the information from the above, open an issue in the project issue tracker asking for the current contact information. To ensure the timely response to your report, please ensure that the entirety of the report is contained within the email body and not solely behind a web link or an attachment. At least one owner will acknowledge your email within 48 hours, and will send a more detailed response within 48 hours indicating the next steps in handling your report. After the initial reply to your report, the owners will endeavor to keep you informed of the progress towards a fix and full announcement, and may ask for additional information or guidance.","title":"Security Policies and Procedures"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/SECURITY/#security-policies-and-procedures","text":"","title":"Security Policies and Procedures"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/SECURITY/#reporting-a-bug","text":"The cookie team and community take all security bugs seriously. Thank you for improving the security of the project. We appreciate your efforts and responsible disclosure and will make every effort to acknowledge your contributions. Report security bugs by emailing the current owner(s) of cookie . This information can be found in the npm registry using the command npm owner ls cookie . If unsure or unable to get the information from the above, open an issue in the project issue tracker asking for the current contact information. To ensure the timely response to your report, please ensure that the entirety of the report is contained within the email body and not solely behind a web link or an attachment. At least one owner will acknowledge your email within 48 hours, and will send a more detailed response within 48 hours indicating the next steps in handling your report. After the initial reply to your report, the owners will endeavor to keep you informed of the progress towards a fix and full announcement, and may ask for additional information or guidance.","title":"Reporting a Bug"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/History/","text":"1.2.2 / 2024-10-29 various metadata/documentation tweaks (incl. #51) 1.2.1 / 2023-02-27 update annotations for allowed secret key types (#44, thanks @jyasskin!) 1.2.0 / 2022-02-17 allow buffer and other node-supported types as key (#33) be pickier about extra content after signed portion (#40) some internal code clarity/cleanup improvements (#26) 1.1.0 / 2018-01-18 switch to built-in crypto.timingSafeEqual for validation instead of previous double-hash method (thank you @jodevsa!) 1.0.7 / 2023-04-12 Later release for older node.js versions. See the v1.0.x branch notes . 1.0.6 / 2015-02-03 use npm test instead of make test to run tests clearer assertion messages when checking input 1.0.5 / 2014-09-05 add license to package.json 1.0.4 / 2014-06-25 corrected avoidance of timing attacks (thanks @tenbits!) 1.0.3 / 2014-01-28 [incorrect] fix for timing attacks 1.0.2 / 2014-01-28 fix missing repository warning fix typo in test 1.0.1 / 2013-04-15 Revert \"Changed underlying HMAC algo. to sha512.\" Revert \"Fix for timing attacks on MAC verification.\" 0.0.1 / 2010-01-03 Initial release","title":"1.2.2 / 2024-10-29"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/History/#122-2024-10-29","text":"various metadata/documentation tweaks (incl. #51)","title":"1.2.2 / 2024-10-29"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/History/#121-2023-02-27","text":"update annotations for allowed secret key types (#44, thanks @jyasskin!)","title":"1.2.1 / 2023-02-27"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/History/#120-2022-02-17","text":"allow buffer and other node-supported types as key (#33) be pickier about extra content after signed portion (#40) some internal code clarity/cleanup improvements (#26)","title":"1.2.0 / 2022-02-17"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/History/#110-2018-01-18","text":"switch to built-in crypto.timingSafeEqual for validation instead of previous double-hash method (thank you @jodevsa!)","title":"1.1.0 / 2018-01-18"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/History/#107-2023-04-12","text":"Later release for older node.js versions. See the v1.0.x branch notes .","title":"1.0.7 / 2023-04-12"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/History/#106-2015-02-03","text":"use npm test instead of make test to run tests clearer assertion messages when checking input","title":"1.0.6 / 2015-02-03"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/History/#105-2014-09-05","text":"add license to package.json","title":"1.0.5 / 2014-09-05"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/History/#104-2014-06-25","text":"corrected avoidance of timing attacks (thanks @tenbits!)","title":"1.0.4 / 2014-06-25"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/History/#103-2014-01-28","text":"[incorrect] fix for timing attacks","title":"1.0.3 / 2014-01-28"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/History/#102-2014-01-28","text":"fix missing repository warning fix typo in test","title":"1.0.2 / 2014-01-28"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/History/#101-2013-04-15","text":"Revert \"Changed underlying HMAC algo. to sha512.\" Revert \"Fix for timing attacks on MAC verification.\"","title":"1.0.1 / 2013-04-15"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/History/#001-2010-01-03","text":"Initial release","title":"0.0.1 / 2010-01-03"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/Readme/","text":"cookie-signature Sign and unsign cookies. Example var cookie = require ( 'cookie-signature' ); var val = cookie . sign ( 'hello' , 'tobiiscool' ); val . should . equal ( 'hello.DGDUkGlIkCzPz+C0B064FNgHdEjox7ch8tOBGslZ5QI' ); var val = cookie . sign ( 'hello' , 'tobiiscool' ); cookie . unsign ( val , 'tobiiscool' ). should . equal ( 'hello' ); cookie . unsign ( val , 'luna' ). should . be . false ; License MIT. See LICENSE file for details.","title":"cookie-signature"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/Readme/#cookie-signature","text":"Sign and unsign cookies.","title":"cookie-signature"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/Readme/#example","text":"var cookie = require ( 'cookie-signature' ); var val = cookie . sign ( 'hello' , 'tobiiscool' ); val . should . equal ( 'hello.DGDUkGlIkCzPz+C0B064FNgHdEjox7ch8tOBGslZ5QI' ); var val = cookie . sign ( 'hello' , 'tobiiscool' ); cookie . unsign ( val , 'tobiiscool' ). should . equal ( 'hello' ); cookie . unsign ( val , 'luna' ). should . be . false ;","title":"Example"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/Readme/#license","text":"MIT. See LICENSE file for details.","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/","text":"debug A tiny JavaScript debugging utility modelled after Node.js core's debugging technique. Works in Node.js and web browsers. Installation $ npm install debug Usage debug exposes a function; simply pass this function the name of your module, and it will return a decorated version of console.error for you to pass debug statements to. This will allow you to toggle the debug output for different parts of your module as well as the module as a whole. Example app.js : var debug = require ( 'debug' )( 'http' ) , http = require ( 'http' ) , name = 'My App' ; // fake app debug ( 'booting %o' , name ); http . createServer ( function ( req , res ){ debug ( req . method + ' ' + req . url ); res . end ( 'hello\\n' ); }). listen ( 3000 , function (){ debug ( 'listening' ); }); // fake worker of some kind require ( './worker' ); Example worker.js : var a = require ( 'debug' )( 'worker:a' ) , b = require ( 'debug' )( 'worker:b' ); function work () { a ( 'doing lots of uninteresting work' ); setTimeout ( work , Math . random () * 1000 ); } work (); function workb () { b ( 'doing some work' ); setTimeout ( workb , Math . random () * 2000 ); } workb (); The DEBUG environment variable is then used to enable these based on space or comma-delimited names. Here are some examples: Windows command prompt notes CMD On Windows the environment variable is set using the set command. set DEBUG=*,-not_this Example: set DEBUG=* & node app.js PowerShell (VS Code default) PowerShell uses different syntax to set environment variables. $env:DEBUG = \"*,-not_this\" Example: $env:DEBUG='app';node app.js Then, run the program to be debugged as usual. npm script example: \"windowsDebug\" : \"@powershell -Command $env:DEBUG='*';node app.js\" , Namespace Colors Every debug instance has a color generated for it based on its namespace name. This helps when visually parsing the debug output to identify which debug instance a debug line belongs to. Node.js In Node.js, colors are enabled when stderr is a TTY. You also should install the supports-color module alongside debug, otherwise debug will only use a small handful of basic colors. Web Browser Colors are also enabled on \"Web Inspectors\" that understand the %c formatting option. These are WebKit web inspectors, Firefox ( since version 31 ) and the Firebug plugin for Firefox (any version). Millisecond diff When actively developing an application it can be useful to see when the time spent between one debug() call and the next. Suppose for example you invoke debug() before requesting a resource, and after as well, the \"+NNNms\" will show you how much time was spent between calls. When stdout is not a TTY, Date#toISOString() is used, making it more useful for logging the debug information as shown below: Conventions If you're using this in one or more of your libraries, you should use the name of your library so that developers may toggle debugging as desired without guessing names. If you have more than one debuggers you should prefix them with your library name and use \":\" to separate features. For example \"bodyParser\" from Connect would then be \"connect:bodyParser\". If you append a \"*\" to the end of your name, it will always be enabled regardless of the setting of the DEBUG environment variable. You can then use it for normal output as well as debug output. Wildcards The * character may be used as a wildcard. Suppose for example your library has debuggers named \"connect:bodyParser\", \"connect:compress\", \"connect:session\", instead of listing all three with DEBUG=connect:bodyParser,connect:compress,connect:session , you may simply do DEBUG=connect:* , or to run everything using this module simply use DEBUG=* . You can also exclude specific debuggers by prefixing them with a \"-\" character. For example, DEBUG=*,-connect:* would include all debuggers except those starting with \"connect:\". Environment Variables When running through Node.js, you can set a few environment variables that will change the behavior of the debug logging: Name Purpose DEBUG Enables/disables specific debugging namespaces. DEBUG_HIDE_DATE Hide date from debug output (non-TTY). DEBUG_COLORS Whether or not to use colors in the debug output. DEBUG_DEPTH Object inspection depth. DEBUG_SHOW_HIDDEN Shows hidden properties on inspected objects. Note: The environment variables beginning with DEBUG_ end up being converted into an Options object that gets used with %o / %O formatters. See the Node.js documentation for util.inspect() for the complete list. Formatters Debug uses printf-style formatting. Below are the officially supported formatters: Formatter Representation %O Pretty-print an Object on multiple lines. %o Pretty-print an Object all on a single line. %s String. %d Number (both integer and float). %j JSON. Replaced with the string '[Circular]' if the argument contains circular references. %% Single percent sign ('%'). This does not consume an argument. Custom formatters You can add custom formatters by extending the debug.formatters object. For example, if you wanted to add support for rendering a Buffer as hex with %h , you could do something like: const createDebug = require ( 'debug' ) createDebug . formatters . h = ( v ) => { return v . toString ( 'hex' ) } // \u2026elsewhere const debug = createDebug ( 'foo' ) debug ( 'this is hex: %h' , new Buffer ( 'hello world' )) // foo this is hex: 68656c6c6f20776f726c6421 +0ms Browser Support You can build a browser-ready script using browserify , or just use the browserify-as-a-service build , if you don't want to build it yourself. Debug's enable state is currently persisted by localStorage . Consider the situation shown below where you have worker:a and worker:b , and wish to debug both. You can enable this using localStorage.debug : localStorage . debug = 'worker:*' And then refresh the page. a = debug ( 'worker:a' ); b = debug ( 'worker:b' ); setInterval ( function (){ a ( 'doing some work' ); }, 1000 ); setInterval ( function (){ b ( 'doing some work' ); }, 1200 ); In Chromium-based web browsers (e.g. Brave, Chrome, and Electron), the JavaScript console will\u2014by default\u2014only show messages logged by debug if the \"Verbose\" log level is enabled . Output streams By default debug will log to stderr, however this can be configured per-namespace by overriding the log method: Example stdout.js : var debug = require ( 'debug' ); var error = debug ( 'app:error' ); // by default stderr is used error ( 'goes to stderr!' ); var log = debug ( 'app:log' ); // set this namespace to log via console.log log . log = console . log . bind ( console ); // don't forget to bind to console! log ( 'goes to stdout' ); error ( 'still goes to stderr!' ); // set all output to go via console.info // overrides all per-namespace log settings debug . log = console . info . bind ( console ); error ( 'now goes to stdout via console.info' ); log ( 'still goes to stdout, but via console.info now' ); Extend You can simply extend debugger const log = require ( 'debug' )( 'auth' ); //creates new debug instance with extended namespace const logSign = log . extend ( 'sign' ); const logLogin = log . extend ( 'login' ); log ( 'hello' ); // auth hello logSign ( 'hello' ); //auth:sign hello logLogin ( 'hello' ); //auth:login hello Set dynamically You can also enable debug dynamically by calling the enable() method : let debug = require ( 'debug' ); console . log ( 1 , debug . enabled ( 'test' )); debug . enable ( 'test' ); console . log ( 2 , debug . enabled ( 'test' )); debug . disable (); console . log ( 3 , debug . enabled ( 'test' )); print : 1 false 2 true 3 false Usage : enable(namespaces) namespaces can include modes separated by a colon and wildcards. Note that calling enable() completely overrides previously set DEBUG variable : $ DEBUG=foo node -e 'var dbg = require(\"debug\"); dbg.enable(\"bar\"); console.log(dbg.enabled(\"foo\"))' => false disable() Will disable all namespaces. The functions returns the namespaces currently enabled (and skipped). This can be useful if you want to disable debugging temporarily without knowing what was enabled to begin with. For example: let debug = require ( 'debug' ); debug . enable ( 'foo:*,-foo:bar' ); let namespaces = debug . disable (); debug . enable ( namespaces ); Note: There is no guarantee that the string will be identical to the initial enable string, but semantically they will be identical. Checking whether a debug target is enabled After you've created a debug instance, you can determine whether or not it is enabled by checking the enabled property: const debug = require ( 'debug' )( 'http' ); if ( debug . enabled ) { // do stuff... } You can also manually toggle this property to force the debug instance to be enabled or disabled. Usage in child processes Due to the way debug detects if the output is a TTY or not, colors are not shown in child processes when stderr is piped. A solution is to pass the DEBUG_COLORS=1 environment variable to the child process. For example: worker = fork ( WORKER_WRAP_PATH , [ workerPath ], { stdio : [ /* stdin: */ 0 , /* stdout: */ 'pipe' , /* stderr: */ 'pipe' , 'ipc' , ], env : Object . assign ({}, process . env , { DEBUG_COLORS : 1 // without this settings, colors won't be shown }), }); worker . stderr . pipe ( process . stderr , { end : false }); Authors TJ Holowaychuk Nathan Rajlich Andrew Rhyne Josh Junon Backers Support us with a monthly donation and help us continue our activities. [ Become a backer ] Sponsors Become a sponsor and get your logo on our README on Github with a link to your site. [ Become a sponsor ] License (The MIT License) Copyright (c) 2014-2017 TJ Holowaychuk <tj@vision-media.ca> Copyright (c) 2018-2021 Josh Junon Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"debug"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#debug","text":"A tiny JavaScript debugging utility modelled after Node.js core's debugging technique. Works in Node.js and web browsers.","title":"debug"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#installation","text":"$ npm install debug","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#usage","text":"debug exposes a function; simply pass this function the name of your module, and it will return a decorated version of console.error for you to pass debug statements to. This will allow you to toggle the debug output for different parts of your module as well as the module as a whole. Example app.js : var debug = require ( 'debug' )( 'http' ) , http = require ( 'http' ) , name = 'My App' ; // fake app debug ( 'booting %o' , name ); http . createServer ( function ( req , res ){ debug ( req . method + ' ' + req . url ); res . end ( 'hello\\n' ); }). listen ( 3000 , function (){ debug ( 'listening' ); }); // fake worker of some kind require ( './worker' ); Example worker.js : var a = require ( 'debug' )( 'worker:a' ) , b = require ( 'debug' )( 'worker:b' ); function work () { a ( 'doing lots of uninteresting work' ); setTimeout ( work , Math . random () * 1000 ); } work (); function workb () { b ( 'doing some work' ); setTimeout ( workb , Math . random () * 2000 ); } workb (); The DEBUG environment variable is then used to enable these based on space or comma-delimited names. Here are some examples:","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#windows-command-prompt-notes","text":"","title":"Windows command prompt notes"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#cmd","text":"On Windows the environment variable is set using the set command. set DEBUG=*,-not_this Example: set DEBUG=* & node app.js","title":"CMD"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#powershell-vs-code-default","text":"PowerShell uses different syntax to set environment variables. $env:DEBUG = \"*,-not_this\" Example: $env:DEBUG='app';node app.js Then, run the program to be debugged as usual. npm script example: \"windowsDebug\" : \"@powershell -Command $env:DEBUG='*';node app.js\" ,","title":"PowerShell (VS Code default)"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#namespace-colors","text":"Every debug instance has a color generated for it based on its namespace name. This helps when visually parsing the debug output to identify which debug instance a debug line belongs to.","title":"Namespace Colors"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#nodejs","text":"In Node.js, colors are enabled when stderr is a TTY. You also should install the supports-color module alongside debug, otherwise debug will only use a small handful of basic colors.","title":"Node.js"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#web-browser","text":"Colors are also enabled on \"Web Inspectors\" that understand the %c formatting option. These are WebKit web inspectors, Firefox ( since version 31 ) and the Firebug plugin for Firefox (any version).","title":"Web Browser"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#millisecond-diff","text":"When actively developing an application it can be useful to see when the time spent between one debug() call and the next. Suppose for example you invoke debug() before requesting a resource, and after as well, the \"+NNNms\" will show you how much time was spent between calls. When stdout is not a TTY, Date#toISOString() is used, making it more useful for logging the debug information as shown below:","title":"Millisecond diff"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#conventions","text":"If you're using this in one or more of your libraries, you should use the name of your library so that developers may toggle debugging as desired without guessing names. If you have more than one debuggers you should prefix them with your library name and use \":\" to separate features. For example \"bodyParser\" from Connect would then be \"connect:bodyParser\". If you append a \"*\" to the end of your name, it will always be enabled regardless of the setting of the DEBUG environment variable. You can then use it for normal output as well as debug output.","title":"Conventions"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#wildcards","text":"The * character may be used as a wildcard. Suppose for example your library has debuggers named \"connect:bodyParser\", \"connect:compress\", \"connect:session\", instead of listing all three with DEBUG=connect:bodyParser,connect:compress,connect:session , you may simply do DEBUG=connect:* , or to run everything using this module simply use DEBUG=* . You can also exclude specific debuggers by prefixing them with a \"-\" character. For example, DEBUG=*,-connect:* would include all debuggers except those starting with \"connect:\".","title":"Wildcards"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#environment-variables","text":"When running through Node.js, you can set a few environment variables that will change the behavior of the debug logging: Name Purpose DEBUG Enables/disables specific debugging namespaces. DEBUG_HIDE_DATE Hide date from debug output (non-TTY). DEBUG_COLORS Whether or not to use colors in the debug output. DEBUG_DEPTH Object inspection depth. DEBUG_SHOW_HIDDEN Shows hidden properties on inspected objects. Note: The environment variables beginning with DEBUG_ end up being converted into an Options object that gets used with %o / %O formatters. See the Node.js documentation for util.inspect() for the complete list.","title":"Environment Variables"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#formatters","text":"Debug uses printf-style formatting. Below are the officially supported formatters: Formatter Representation %O Pretty-print an Object on multiple lines. %o Pretty-print an Object all on a single line. %s String. %d Number (both integer and float). %j JSON. Replaced with the string '[Circular]' if the argument contains circular references. %% Single percent sign ('%'). This does not consume an argument.","title":"Formatters"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#custom-formatters","text":"You can add custom formatters by extending the debug.formatters object. For example, if you wanted to add support for rendering a Buffer as hex with %h , you could do something like: const createDebug = require ( 'debug' ) createDebug . formatters . h = ( v ) => { return v . toString ( 'hex' ) } // \u2026elsewhere const debug = createDebug ( 'foo' ) debug ( 'this is hex: %h' , new Buffer ( 'hello world' )) // foo this is hex: 68656c6c6f20776f726c6421 +0ms","title":"Custom formatters"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#browser-support","text":"You can build a browser-ready script using browserify , or just use the browserify-as-a-service build , if you don't want to build it yourself. Debug's enable state is currently persisted by localStorage . Consider the situation shown below where you have worker:a and worker:b , and wish to debug both. You can enable this using localStorage.debug : localStorage . debug = 'worker:*' And then refresh the page. a = debug ( 'worker:a' ); b = debug ( 'worker:b' ); setInterval ( function (){ a ( 'doing some work' ); }, 1000 ); setInterval ( function (){ b ( 'doing some work' ); }, 1200 ); In Chromium-based web browsers (e.g. Brave, Chrome, and Electron), the JavaScript console will\u2014by default\u2014only show messages logged by debug if the \"Verbose\" log level is enabled .","title":"Browser Support"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#output-streams","text":"By default debug will log to stderr, however this can be configured per-namespace by overriding the log method: Example stdout.js : var debug = require ( 'debug' ); var error = debug ( 'app:error' ); // by default stderr is used error ( 'goes to stderr!' ); var log = debug ( 'app:log' ); // set this namespace to log via console.log log . log = console . log . bind ( console ); // don't forget to bind to console! log ( 'goes to stdout' ); error ( 'still goes to stderr!' ); // set all output to go via console.info // overrides all per-namespace log settings debug . log = console . info . bind ( console ); error ( 'now goes to stdout via console.info' ); log ( 'still goes to stdout, but via console.info now' );","title":"Output streams"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#extend","text":"You can simply extend debugger const log = require ( 'debug' )( 'auth' ); //creates new debug instance with extended namespace const logSign = log . extend ( 'sign' ); const logLogin = log . extend ( 'login' ); log ( 'hello' ); // auth hello logSign ( 'hello' ); //auth:sign hello logLogin ( 'hello' ); //auth:login hello","title":"Extend"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#set-dynamically","text":"You can also enable debug dynamically by calling the enable() method : let debug = require ( 'debug' ); console . log ( 1 , debug . enabled ( 'test' )); debug . enable ( 'test' ); console . log ( 2 , debug . enabled ( 'test' )); debug . disable (); console . log ( 3 , debug . enabled ( 'test' )); print : 1 false 2 true 3 false Usage : enable(namespaces) namespaces can include modes separated by a colon and wildcards. Note that calling enable() completely overrides previously set DEBUG variable : $ DEBUG=foo node -e 'var dbg = require(\"debug\"); dbg.enable(\"bar\"); console.log(dbg.enabled(\"foo\"))' => false disable() Will disable all namespaces. The functions returns the namespaces currently enabled (and skipped). This can be useful if you want to disable debugging temporarily without knowing what was enabled to begin with. For example: let debug = require ( 'debug' ); debug . enable ( 'foo:*,-foo:bar' ); let namespaces = debug . disable (); debug . enable ( namespaces ); Note: There is no guarantee that the string will be identical to the initial enable string, but semantically they will be identical.","title":"Set dynamically"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#checking-whether-a-debug-target-is-enabled","text":"After you've created a debug instance, you can determine whether or not it is enabled by checking the enabled property: const debug = require ( 'debug' )( 'http' ); if ( debug . enabled ) { // do stuff... } You can also manually toggle this property to force the debug instance to be enabled or disabled.","title":"Checking whether a debug target is enabled"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#usage-in-child-processes","text":"Due to the way debug detects if the output is a TTY or not, colors are not shown in child processes when stderr is piped. A solution is to pass the DEBUG_COLORS=1 environment variable to the child process. For example: worker = fork ( WORKER_WRAP_PATH , [ workerPath ], { stdio : [ /* stdin: */ 0 , /* stdout: */ 'pipe' , /* stderr: */ 'pipe' , 'ipc' , ], env : Object . assign ({}, process . env , { DEBUG_COLORS : 1 // without this settings, colors won't be shown }), }); worker . stderr . pipe ( process . stderr , { end : false });","title":"Usage in child processes"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#authors","text":"TJ Holowaychuk Nathan Rajlich Andrew Rhyne Josh Junon","title":"Authors"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#backers","text":"Support us with a monthly donation and help us continue our activities. [ Become a backer ]","title":"Backers"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#sponsors","text":"Become a sponsor and get your logo on our README on Github with a link to your site. [ Become a sponsor ]","title":"Sponsors"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#license","text":"(The MIT License) Copyright (c) 2014-2017 TJ Holowaychuk <tj@vision-media.ca> Copyright (c) 2018-2021 Josh Junon Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/","text":"2.0.0 / 2018-10-26 Drop support for Node.js 0.6 Replace internal eval usage with Function constructor Use instance methods on process to check for listeners 1.1.2 / 2018-01-11 perf: remove argument reassignment Support Node.js 0.6 to 9.x 1.1.1 / 2017-07-27 Remove unnecessary Buffer loading Support Node.js 0.6 to 8.x 1.1.0 / 2015-09-14 Enable strict mode in more places Support io.js 3.x Support io.js 2.x Support web browser loading Requires bundler like Browserify or webpack 1.0.1 / 2015-04-07 Fix TypeError s when under 'use strict' code Fix useless type name on auto-generated messages Support io.js 1.x Support Node.js 0.12 1.0.0 / 2014-09-17 No changes 0.4.5 / 2014-09-09 Improve call speed to functions using the function wrapper Support Node.js 0.6 0.4.4 / 2014-07-27 Work-around v8 generating empty stack traces 0.4.3 / 2014-07-26 Fix exception when global Error.stackTraceLimit is too low 0.4.2 / 2014-07-19 Correct call site for wrapped functions and properties 0.4.1 / 2014-07-19 Improve automatic message generation for function properties 0.4.0 / 2014-07-19 Add TRACE_DEPRECATION environment variable Remove non-standard grey color from color output Support --no-deprecation argument Support --trace-deprecation argument Support deprecate.property(fn, prop, message) 0.3.0 / 2014-06-16 Add NO_DEPRECATION environment variable 0.2.0 / 2014-06-15 Add deprecate.property(obj, prop, message) Remove supports-color dependency for node.js 0.8 0.1.0 / 2014-06-15 Add deprecate.function(fn, message) Add process.on('deprecation', fn) emitter Automatically generate message when omitted from deprecate() 0.0.1 / 2014-06-15 Fix warning for dynamic calls at singe call site 0.0.0 / 2014-06-15 Initial implementation","title":"2.0.0 / 2018-10-26"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#200-2018-10-26","text":"Drop support for Node.js 0.6 Replace internal eval usage with Function constructor Use instance methods on process to check for listeners","title":"2.0.0 / 2018-10-26"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#112-2018-01-11","text":"perf: remove argument reassignment Support Node.js 0.6 to 9.x","title":"1.1.2 / 2018-01-11"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#111-2017-07-27","text":"Remove unnecessary Buffer loading Support Node.js 0.6 to 8.x","title":"1.1.1 / 2017-07-27"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#110-2015-09-14","text":"Enable strict mode in more places Support io.js 3.x Support io.js 2.x Support web browser loading Requires bundler like Browserify or webpack","title":"1.1.0 / 2015-09-14"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#101-2015-04-07","text":"Fix TypeError s when under 'use strict' code Fix useless type name on auto-generated messages Support io.js 1.x Support Node.js 0.12","title":"1.0.1 / 2015-04-07"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#100-2014-09-17","text":"No changes","title":"1.0.0 / 2014-09-17"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#045-2014-09-09","text":"Improve call speed to functions using the function wrapper Support Node.js 0.6","title":"0.4.5 / 2014-09-09"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#044-2014-07-27","text":"Work-around v8 generating empty stack traces","title":"0.4.4 / 2014-07-27"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#043-2014-07-26","text":"Fix exception when global Error.stackTraceLimit is too low","title":"0.4.3 / 2014-07-26"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#042-2014-07-19","text":"Correct call site for wrapped functions and properties","title":"0.4.2 / 2014-07-19"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#041-2014-07-19","text":"Improve automatic message generation for function properties","title":"0.4.1 / 2014-07-19"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#040-2014-07-19","text":"Add TRACE_DEPRECATION environment variable Remove non-standard grey color from color output Support --no-deprecation argument Support --trace-deprecation argument Support deprecate.property(fn, prop, message)","title":"0.4.0 / 2014-07-19"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#030-2014-06-16","text":"Add NO_DEPRECATION environment variable","title":"0.3.0 / 2014-06-16"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#020-2014-06-15","text":"Add deprecate.property(obj, prop, message) Remove supports-color dependency for node.js 0.8","title":"0.2.0 / 2014-06-15"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#010-2014-06-15","text":"Add deprecate.function(fn, message) Add process.on('deprecation', fn) emitter Automatically generate message when omitted from deprecate()","title":"0.1.0 / 2014-06-15"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#001-2014-06-15","text":"Fix warning for dynamic calls at singe call site","title":"0.0.1 / 2014-06-15"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#000-2014-06-15","text":"Initial implementation","title":"0.0.0 / 2014-06-15"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/","text":"depd Deprecate all the things With great modules comes great responsibility; mark things deprecated! Install This module is installed directly using npm : $ npm install depd This module can also be bundled with systems like Browserify or webpack , though by default this module will alter it's API to no longer display or track deprecations. API var deprecate = require ( 'depd' )( 'my-module' ) This library allows you to display deprecation messages to your users. This library goes above and beyond with deprecation warnings by introspection of the call stack (but only the bits that it is interested in). Instead of just warning on the first invocation of a deprecated function and never again, this module will warn on the first invocation of a deprecated function per unique call site, making it ideal to alert users of all deprecated uses across the code base, rather than just whatever happens to execute first. The deprecation warnings from this module also include the file and line information for the call into the module that the deprecated function was in. NOTE this library has a similar interface to the debug module, and this module uses the calling file to get the boundary for the call stacks, so you should always create a new deprecate object in each file and not within some central file. depd(namespace) Create a new deprecate function that uses the given namespace name in the messages and will display the call site prior to the stack entering the file this function was called from. It is highly suggested you use the name of your module as the namespace. deprecate(message) Call this function from deprecated code to display a deprecation message. This message will appear once per unique caller site. Caller site is the first call site in the stack in a different file from the caller of this function. If the message is omitted, a message is generated for you based on the site of the deprecate() call and will display the name of the function called, similar to the name displayed in a stack trace. deprecate.function(fn, message) Call this function to wrap a given function in a deprecation message on any call to the function. An optional message can be supplied to provide a custom message. deprecate.property(obj, prop, message) Call this function to wrap a given property on object in a deprecation message on any accessing or setting of the property. An optional message can be supplied to provide a custom message. The method must be called on the object where the property belongs (not inherited from the prototype). If the property is a data descriptor, it will be converted to an accessor descriptor in order to display the deprecation message. process.on('deprecation', fn) This module will allow easy capturing of deprecation errors by emitting the errors as the type \"deprecation\" on the global process . If there are no listeners for this type, the errors are written to STDERR as normal, but if there are any listeners, nothing will be written to STDERR and instead only emitted. From there, you can write the errors in a different format or to a logging source. The error represents the deprecation and is emitted only once with the same rules as writing to STDERR. The error has the following properties: message - This is the message given by the library name - This is always 'DeprecationError' namespace - This is the namespace the deprecation came from stack - This is the stack of the call to the deprecated thing Example error.stack output: DeprecationError: my-cool-module deprecated oldfunction at Object.<anonymous> ([eval]-wrapper:6:22) at Module._compile (module.js:456:26) at evalScript (node.js:532:25) at startup (node.js:80:7) at node.js:902:3 process.env.NO_DEPRECATION As a user of modules that are deprecated, the environment variable NO_DEPRECATION is provided as a quick solution to silencing deprecation warnings from being output. The format of this is similar to that of DEBUG : $ NO_DEPRECATION = my-module,othermod node app.js This will suppress deprecations from being output for \"my-module\" and \"othermod\". The value is a list of comma-separated namespaces. To suppress every warning across all namespaces, use the value * for a namespace. Providing the argument --no-deprecation to the node executable will suppress all deprecations (only available in Node.js 0.8 or higher). NOTE This will not suppress the deperecations given to any \"deprecation\" event listeners, just the output to STDERR. process.env.TRACE_DEPRECATION As a user of modules that are deprecated, the environment variable TRACE_DEPRECATION is provided as a solution to getting more detailed location information in deprecation warnings by including the entire stack trace. The format of this is the same as NO_DEPRECATION : $ TRACE_DEPRECATION = my-module,othermod node app.js This will include stack traces for deprecations being output for \"my-module\" and \"othermod\". The value is a list of comma-separated namespaces. To trace every warning across all namespaces, use the value * for a namespace. Providing the argument --trace-deprecation to the node executable will trace all deprecations (only available in Node.js 0.8 or higher). NOTE This will not trace the deperecations silenced by NO_DEPRECATION . Display When a user calls a function in your library that you mark deprecated, they will see the following written to STDERR (in the given colors, similar colors and layout to the debug module): bright cyan bright yellow | | reset cyan | | | | \u25bc \u25bc \u25bc \u25bc my-cool-module deprecated oldfunction [eval]-wrapper:6:22 \u25b2 \u25b2 \u25b2 \u25b2 | | | | namespace | | location of mycoolmod.oldfunction() call | deprecation message the word \"deprecated\" If the user redirects their STDERR to a file or somewhere that does not support colors, they see (similar layout to the debug module): Sun, 15 Jun 2014 05:21:37 GMT my-cool-module deprecated oldfunction at [eval]-wrapper:6:22 \u25b2 \u25b2 \u25b2 \u25b2 \u25b2 | | | | | timestamp of message namespace | | location of mycoolmod.oldfunction() call | deprecation message the word \"deprecated\" Examples Deprecating all calls to a function This will display a deprecated message about \"oldfunction\" being deprecated from \"my-module\" on STDERR. var deprecate = require ( 'depd' )( 'my-cool-module' ) // message automatically derived from function name // Object.oldfunction exports . oldfunction = deprecate . function ( function oldfunction () { // all calls to function are deprecated }) // specific message exports . oldfunction = deprecate . function ( function () { // all calls to function are deprecated }, 'oldfunction' ) Conditionally deprecating a function call This will display a deprecated message about \"weirdfunction\" being deprecated from \"my-module\" on STDERR when called with less than 2 arguments. var deprecate = require ( 'depd' )( 'my-cool-module' ) exports . weirdfunction = function () { if ( arguments . length < 2 ) { // calls with 0 or 1 args are deprecated deprecate ( 'weirdfunction args < 2' ) } } When calling deprecate as a function, the warning is counted per call site within your own module, so you can display different deprecations depending on different situations and the users will still get all the warnings: var deprecate = require ( 'depd' )( 'my-cool-module' ) exports . weirdfunction = function () { if ( arguments . length < 2 ) { // calls with 0 or 1 args are deprecated deprecate ( 'weirdfunction args < 2' ) } else if ( typeof arguments [ 0 ] !== 'string' ) { // calls with non-string first argument are deprecated deprecate ( 'weirdfunction non-string first arg' ) } } Deprecating property access This will display a deprecated message about \"oldprop\" being deprecated from \"my-module\" on STDERR when accessed. A deprecation will be displayed when setting the value and when getting the value. var deprecate = require ( 'depd' )( 'my-cool-module' ) exports . oldprop = 'something' // message automatically derives from property name deprecate . property ( exports , 'oldprop' ) // explicit message deprecate . property ( exports , 'oldprop' , 'oldprop >= 0.10' ) License MIT","title":"depd"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#depd","text":"Deprecate all the things With great modules comes great responsibility; mark things deprecated!","title":"depd"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#install","text":"This module is installed directly using npm : $ npm install depd This module can also be bundled with systems like Browserify or webpack , though by default this module will alter it's API to no longer display or track deprecations.","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#api","text":"var deprecate = require ( 'depd' )( 'my-module' ) This library allows you to display deprecation messages to your users. This library goes above and beyond with deprecation warnings by introspection of the call stack (but only the bits that it is interested in). Instead of just warning on the first invocation of a deprecated function and never again, this module will warn on the first invocation of a deprecated function per unique call site, making it ideal to alert users of all deprecated uses across the code base, rather than just whatever happens to execute first. The deprecation warnings from this module also include the file and line information for the call into the module that the deprecated function was in. NOTE this library has a similar interface to the debug module, and this module uses the calling file to get the boundary for the call stacks, so you should always create a new deprecate object in each file and not within some central file.","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#depdnamespace","text":"Create a new deprecate function that uses the given namespace name in the messages and will display the call site prior to the stack entering the file this function was called from. It is highly suggested you use the name of your module as the namespace.","title":"depd(namespace)"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#deprecatemessage","text":"Call this function from deprecated code to display a deprecation message. This message will appear once per unique caller site. Caller site is the first call site in the stack in a different file from the caller of this function. If the message is omitted, a message is generated for you based on the site of the deprecate() call and will display the name of the function called, similar to the name displayed in a stack trace.","title":"deprecate(message)"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#deprecatefunctionfn-message","text":"Call this function to wrap a given function in a deprecation message on any call to the function. An optional message can be supplied to provide a custom message.","title":"deprecate.function(fn, message)"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#deprecatepropertyobj-prop-message","text":"Call this function to wrap a given property on object in a deprecation message on any accessing or setting of the property. An optional message can be supplied to provide a custom message. The method must be called on the object where the property belongs (not inherited from the prototype). If the property is a data descriptor, it will be converted to an accessor descriptor in order to display the deprecation message.","title":"deprecate.property(obj, prop, message)"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#processondeprecation-fn","text":"This module will allow easy capturing of deprecation errors by emitting the errors as the type \"deprecation\" on the global process . If there are no listeners for this type, the errors are written to STDERR as normal, but if there are any listeners, nothing will be written to STDERR and instead only emitted. From there, you can write the errors in a different format or to a logging source. The error represents the deprecation and is emitted only once with the same rules as writing to STDERR. The error has the following properties: message - This is the message given by the library name - This is always 'DeprecationError' namespace - This is the namespace the deprecation came from stack - This is the stack of the call to the deprecated thing Example error.stack output: DeprecationError: my-cool-module deprecated oldfunction at Object.<anonymous> ([eval]-wrapper:6:22) at Module._compile (module.js:456:26) at evalScript (node.js:532:25) at startup (node.js:80:7) at node.js:902:3","title":"process.on('deprecation', fn)"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#processenvno_deprecation","text":"As a user of modules that are deprecated, the environment variable NO_DEPRECATION is provided as a quick solution to silencing deprecation warnings from being output. The format of this is similar to that of DEBUG : $ NO_DEPRECATION = my-module,othermod node app.js This will suppress deprecations from being output for \"my-module\" and \"othermod\". The value is a list of comma-separated namespaces. To suppress every warning across all namespaces, use the value * for a namespace. Providing the argument --no-deprecation to the node executable will suppress all deprecations (only available in Node.js 0.8 or higher). NOTE This will not suppress the deperecations given to any \"deprecation\" event listeners, just the output to STDERR.","title":"process.env.NO_DEPRECATION"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#processenvtrace_deprecation","text":"As a user of modules that are deprecated, the environment variable TRACE_DEPRECATION is provided as a solution to getting more detailed location information in deprecation warnings by including the entire stack trace. The format of this is the same as NO_DEPRECATION : $ TRACE_DEPRECATION = my-module,othermod node app.js This will include stack traces for deprecations being output for \"my-module\" and \"othermod\". The value is a list of comma-separated namespaces. To trace every warning across all namespaces, use the value * for a namespace. Providing the argument --trace-deprecation to the node executable will trace all deprecations (only available in Node.js 0.8 or higher). NOTE This will not trace the deperecations silenced by NO_DEPRECATION .","title":"process.env.TRACE_DEPRECATION"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#display","text":"When a user calls a function in your library that you mark deprecated, they will see the following written to STDERR (in the given colors, similar colors and layout to the debug module): bright cyan bright yellow | | reset cyan | | | | \u25bc \u25bc \u25bc \u25bc my-cool-module deprecated oldfunction [eval]-wrapper:6:22 \u25b2 \u25b2 \u25b2 \u25b2 | | | | namespace | | location of mycoolmod.oldfunction() call | deprecation message the word \"deprecated\" If the user redirects their STDERR to a file or somewhere that does not support colors, they see (similar layout to the debug module): Sun, 15 Jun 2014 05:21:37 GMT my-cool-module deprecated oldfunction at [eval]-wrapper:6:22 \u25b2 \u25b2 \u25b2 \u25b2 \u25b2 | | | | | timestamp of message namespace | | location of mycoolmod.oldfunction() call | deprecation message the word \"deprecated\"","title":"Display"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#examples","text":"","title":"Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#deprecating-all-calls-to-a-function","text":"This will display a deprecated message about \"oldfunction\" being deprecated from \"my-module\" on STDERR. var deprecate = require ( 'depd' )( 'my-cool-module' ) // message automatically derived from function name // Object.oldfunction exports . oldfunction = deprecate . function ( function oldfunction () { // all calls to function are deprecated }) // specific message exports . oldfunction = deprecate . function ( function () { // all calls to function are deprecated }, 'oldfunction' )","title":"Deprecating all calls to a function"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#conditionally-deprecating-a-function-call","text":"This will display a deprecated message about \"weirdfunction\" being deprecated from \"my-module\" on STDERR when called with less than 2 arguments. var deprecate = require ( 'depd' )( 'my-cool-module' ) exports . weirdfunction = function () { if ( arguments . length < 2 ) { // calls with 0 or 1 args are deprecated deprecate ( 'weirdfunction args < 2' ) } } When calling deprecate as a function, the warning is counted per call site within your own module, so you can display different deprecations depending on different situations and the users will still get all the warnings: var deprecate = require ( 'depd' )( 'my-cool-module' ) exports . weirdfunction = function () { if ( arguments . length < 2 ) { // calls with 0 or 1 args are deprecated deprecate ( 'weirdfunction args < 2' ) } else if ( typeof arguments [ 0 ] !== 'string' ) { // calls with non-string first argument are deprecated deprecate ( 'weirdfunction non-string first arg' ) } }","title":"Conditionally deprecating a function call"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#deprecating-property-access","text":"This will display a deprecated message about \"oldprop\" being deprecated from \"my-module\" on STDERR when accessed. A deprecation will be displayed when setting the value and when getting the value. var deprecate = require ( 'depd' )( 'my-cool-module' ) exports . oldprop = 'something' // message automatically derives from property name deprecate . property ( exports , 'oldprop' ) // explicit message deprecate . property ( exports , 'oldprop' , 'oldprop >= 0.10' )","title":"Deprecating property access"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/","text":"\ud83c\udf89 announcing dotenvx . run anywhere, multi-environment, encrypted envs . **Special thanks to [our sponsors](https://github.com/sponsors/motdotla)** Warp is a blazingly fast, Rust-based terminal reimagined to work like a modern app. Get more done in the CLI with real text editing, block-based output, and AI command search. Graphite is the AI developer productivity platform helping teams on GitHub ship higher quality software, faster. dotenv Dotenv is a zero-dependency module that loads environment variables from a .env file into process.env . Storing configuration in the environment separate from code is based on The Twelve-Factor App methodology. \ud83c\udf31 Install \ud83c\udfd7\ufe0f Usage (.env) \ud83c\udf34 Multiple Environments \ud83c\udd95 \ud83d\ude80 Deploying (encryption) \ud83c\udd95 \ud83d\udcda Examples \ud83d\udcd6 Docs \u2753 FAQ \u23f1\ufe0f Changelog \ud83c\udf31 Install npm install dotenv --save You can also use an npm-compatible package manager like yarn or bun: yarn add dotenv # or bun add dotenv \ud83c\udfd7\ufe0f Usage Create a .env file in the root of your project (if using a monorepo structure like apps/backend/app.js , put it in the root of the folder where your app.js process runs): S3_BUCKET = \"YOURS3BUCKET\" SECRET_KEY = \"YOURSECRETKEYGOESHERE\" As early as possible in your application, import and configure dotenv: require ( 'dotenv' ). config () console . log ( process . env ) // remove this after you've confirmed it is working .. or using ES6? import 'dotenv/config' That's it. process.env now has the keys and values you defined in your .env file: require ( 'dotenv' ). config () // or import 'dotenv/config' if you're using ES6 ... s3 . getBucketCors ({ Bucket : process . env . S3_BUCKET }, function ( err , data ) {}) Multiline values If you need multiline variables, for example private keys, those are now supported ( >= v15.0.0 ) with line breaks: PRIVATE_KEY = \" -----BEGIN RSA PRIVATE KEY----- ... Kh9NV... ... -----END RSA PRIVATE KEY-----\" Alternatively, you can double quote strings and use the \\n character: PRIVATE_KEY = \"-----BEGIN RSA PRIVATE KEY-----\\nKh9NV...\\n-----END RSA PRIVATE KEY-----\\n\" Comments Comments may be added to your file on their own line or inline: # This is a comment SECRET_KEY = YOURSECRETKEYGOESHERE # comment SECRET_HASH = \"something-with-a-#-hash\" Comments begin where a # exists, so if your value contains a # please wrap it in quotes. This is a breaking change from >= v15.0.0 and on. Parsing The engine which parses the contents of your file containing environment variables is available to use. It accepts a String or Buffer and will return an Object with the parsed keys and values. const dotenv = require ( 'dotenv' ) const buf = Buffer . from ( 'BASIC=basic' ) const config = dotenv . parse ( buf ) // will return an object console . log ( typeof config , config ) // object { BASIC : 'basic' } Preload Note: Consider using dotenvx instead of preloading. I am now doing (and recommending) so. It serves the same purpose (you do not need to require and load dotenv), adds better debugging, and works with ANY language, framework, or platform. \u2013 motdotla You can use the --require ( -r ) command line option to preload dotenv. By doing this, you do not need to require and load dotenv in your application code. $ node -r dotenv/config your_script.js The configuration options below are supported as command line arguments in the format dotenv_config_<option>=value $ node -r dotenv/config your_script.js dotenv_config_path = /custom/path/to/.env dotenv_config_debug = true Additionally, you can use environment variables to set configuration options. Command line arguments will precede these. $ DOTENV_CONFIG_<OPTION> = value node -r dotenv/config your_script.js $ DOTENV_CONFIG_ENCODING = latin1 DOTENV_CONFIG_DEBUG = true node -r dotenv/config your_script.js dotenv_config_path = /custom/path/to/.env Variable Expansion You need to add the value of another variable in one of your variables? Use dotenv-expand . Command Substitution Use dotenvx to use command substitution. Add the output of a command to one of your variables in your .env file. # .env DATABASE_URL = \"postgres://$(whoami)@localhost/my_database\" // index.js console . log ( 'DATABASE_URL' , process . env . DATABASE_URL ) $ dotenvx run --debug -- node index.js [ dotenvx@0.14.1 ] injecting env ( 1 ) from .env DATABASE_URL postgres://yourusername@localhost/my_database Syncing You need to keep .env files in sync between machines, environments, or team members? Use dotenvx to encrypt your .env files and safely include them in source control. This still subscribes to the twelve-factor app rules by generating a decryption key separate from code. Multiple Environments Use dotenvx to generate .env.ci , .env.production files, and more. Deploying You need to deploy your secrets in a cloud-agnostic manner? Use dotenvx to generate a private decryption key that is set on your production server. \ud83c\udf34 Manage Multiple Environments Use dotenvx Run any environment locally. Create a .env.ENVIRONMENT file and use --env-file to load it. It's straightforward, yet flexible. $ echo \"HELLO=production\" > .env.production $ echo \"console.log('Hello ' + process.env.HELLO)\" > index.js $ dotenvx run --env-file = .env.production -- node index.js Hello production > ^^ or with multiple .env files $ echo \"HELLO=local\" > .env.local $ echo \"HELLO=World\" > .env $ echo \"console.log('Hello ' + process.env.HELLO)\" > index.js $ dotenvx run --env-file = .env.local --env-file = .env -- node index.js Hello local more environment examples \ud83d\ude80 Deploying Use dotenvx . Add encryption to your .env files with a single command. Pass the --encrypt flag. $ dotenvx set HELLO Production --encrypt -f .env.production $ echo \"console.log('Hello ' + process.env.HELLO)\" > index.js $ DOTENV_PRIVATE_KEY_PRODUCTION=\"<.env.production private key>\" dotenvx run -- node index.js [dotenvx] injecting env (2) from .env.production Hello Production learn more \ud83d\udcda Examples See examples of using dotenv with various frameworks, languages, and configurations. nodejs nodejs (debug on) nodejs (override on) nodejs (processEnv override) esm esm (preload) typescript typescript parse typescript config webpack webpack (plugin) react react (typescript) express nestjs fastify \ud83d\udcd6 Documentation Dotenv exposes four functions: config parse populate decrypt Config config will read your .env file, parse the contents, assign it to process.env , and return an Object with a parsed key containing the loaded content or an error key if it failed. const result = dotenv . config () if ( result . error ) { throw result . error } console . log ( result . parsed ) You can additionally, pass options to config . Options path Default: path.resolve(process.cwd(), '.env') Specify a custom path if your file containing environment variables is located elsewhere. require ( 'dotenv' ). config ({ path : '/custom/path/to/.env' }) By default, config will look for a file called .env in the current working directory. Pass in multiple files as an array, and they will be parsed in order and combined with process.env (or option.processEnv , if set). The first value set for a variable will win, unless the options.override flag is set, in which case the last value set will win. If a value already exists in process.env and the options.override flag is NOT set, no changes will be made to that value. require ( 'dotenv' ). config ({ path : [ '.env.local' , '.env' ] }) encoding Default: utf8 Specify the encoding of your file containing environment variables. require ( 'dotenv' ). config ({ encoding : 'latin1' }) debug Default: false Turn on logging to help debug why certain keys or values are not being set as you expect. require ( 'dotenv' ). config ({ debug : process . env . DEBUG }) override Default: false Override any environment variables that have already been set on your machine with values from your .env file(s). If multiple files have been provided in option.path the override will also be used as each file is combined with the next. Without override being set, the first value wins. With override set the last value wins. require ( 'dotenv' ). config ({ override : true }) processEnv Default: process.env Specify an object to write your environment variables to. Defaults to process.env environment variables. const myObject = {} require ( 'dotenv' ). config ({ processEnv : myObject }) console . log ( myObject ) // values from .env console . log ( process . env ) // this was not changed or written to Parse The engine which parses the contents of your file containing environment variables is available to use. It accepts a String or Buffer and will return an Object with the parsed keys and values. const dotenv = require ( 'dotenv' ) const buf = Buffer . from ( 'BASIC=basic' ) const config = dotenv . parse ( buf ) // will return an object console . log ( typeof config , config ) // object { BASIC : 'basic' } Options debug Default: false Turn on logging to help debug why certain keys or values are not being set as you expect. const dotenv = require ( 'dotenv' ) const buf = Buffer . from ( 'hello world' ) const opt = { debug : true } const config = dotenv . parse ( buf , opt ) // expect a debug message because the buffer is not in KEY=VAL form Populate The engine which populates the contents of your .env file to process.env is available for use. It accepts a target, a source, and options. This is useful for power users who want to supply their own objects. For example, customizing the source: const dotenv = require ( 'dotenv' ) const parsed = { HELLO : 'world' } dotenv . populate ( process . env , parsed ) console . log ( process . env . HELLO ) // world For example, customizing the source AND target: const dotenv = require ( 'dotenv' ) const parsed = { HELLO : 'universe' } const target = { HELLO : 'world' } // empty object dotenv . populate ( target , parsed , { override : true , debug : true }) console . log ( target ) // { HELLO: 'universe' } options Debug Default: false Turn on logging to help debug why certain keys or values are not being populated as you expect. override Default: false Override any environment variables that have already been set. \u2753 FAQ Why is the .env file not loading my environment variables successfully? Most likely your .env file is not in the correct place. See this stack overflow . Turn on debug mode and try again.. require ( 'dotenv' ). config ({ debug : true }) You will receive a helpful error outputted to your console. Should I commit my .env file? No. We strongly recommend against committing your .env file to version control. It should only include environment-specific values such as database passwords or API keys. Your production database should have a different password than your development database. Should I have multiple .env files? We recommend creating one .env file per environment. Use .env for local/development, .env.production for production and so on. This still follows the twelve factor principles as each is attributed individually to its own environment. Avoid custom set ups that work in inheritance somehow ( .env.production inherits values form .env for example). It is better to duplicate values if necessary across each .env.environment file. In a twelve-factor app, env vars are granular controls, each fully orthogonal to other env vars. They are never grouped together as \u201cenvironments\u201d, but instead are independently managed for each deploy. This is a model that scales up smoothly as the app naturally expands into more deploys over its lifetime. \u2013 The Twelve-Factor App What rules does the parsing engine follow? The parsing engine currently supports the following rules: BASIC=basic becomes {BASIC: 'basic'} empty lines are skipped lines beginning with # are treated as comments # marks the beginning of a comment (unless when the value is wrapped in quotes) empty values become empty strings ( EMPTY= becomes {EMPTY: ''} ) inner quotes are maintained (think JSON) ( JSON={\"foo\": \"bar\"} becomes {JSON:\"{\\\"foo\\\": \\\"bar\\\"}\" ) whitespace is removed from both ends of unquoted values (see more on trim ) ( FOO= some value becomes {FOO: 'some value'} ) single and double quoted values are escaped ( SINGLE_QUOTE='quoted' becomes {SINGLE_QUOTE: \"quoted\"} ) single and double quoted values maintain whitespace from both ends ( FOO=\" some value \" becomes {FOO: ' some value '} ) double quoted values expand new lines ( MULTILINE=\"new\\nline\" becomes {MULTILINE: 'new line'} backticks are supported ( BACKTICK_KEY=`This has 'single' and \"double\" quotes inside of it.` ) What happens to environment variables that were already set? By default, we will never modify any environment variables that have already been set. In particular, if there is a variable in your .env file which collides with one that already exists in your environment, then that variable will be skipped. If instead, you want to override process.env use the override option. require ( 'dotenv' ). config ({ override : true }) How come my environment variables are not showing up for React? Your React code is run in Webpack, where the fs module or even the process global itself are not accessible out-of-the-box. process.env can only be injected through Webpack configuration. If you are using react-scripts , which is distributed through create-react-app , it has dotenv built in but with a quirk. Preface your environment variables with REACT_APP_ . See this stack overflow for more details. If you are using other frameworks (e.g. Next.js, Gatsby...), you need to consult their documentation for how to inject environment variables into the client. Can I customize/write plugins for dotenv? Yes! dotenv.config() returns an object representing the parsed .env file. This gives you everything you need to continue setting values on process.env . For example: const dotenv = require ( 'dotenv' ) const variableExpansion = require ( 'dotenv-expand' ) const myEnv = dotenv . config () variableExpansion ( myEnv ) How do I use dotenv with import ? Simply.. // index.mjs (ESM) import 'dotenv/config' // see https://github.com/motdotla/dotenv#how-do-i-use-dotenv-with-import import express from 'express' A little background.. When you run a module containing an import declaration, the modules it imports are loaded first, then each module body is executed in a depth-first traversal of the dependency graph, avoiding cycles by skipping anything already executed. \u2013 ES6 In Depth: Modules What does this mean in plain language? It means you would think the following would work but it won't. errorReporter.mjs : class Client { constructor ( apiKey ) { console . log ( 'apiKey' , apiKey ) this . apiKey = apiKey } } export default new Client ( process . env . API_KEY ) index.mjs : // Note: this is INCORRECT and will not work import * as dotenv from 'dotenv' dotenv . config () import errorReporter from './errorReporter.mjs' // process.env.API_KEY will be blank! process.env.API_KEY will be blank. Instead, index.mjs should be written as.. import 'dotenv/config' import errorReporter from './errorReporter.mjs' Does that make sense? It's a bit unintuitive, but it is how importing of ES6 modules work. Here is a working example of this pitfall . There are two alternatives to this approach: Preload dotenv: node --require dotenv/config index.js ( Note: you do not need to import dotenv with this approach ) Create a separate file that will execute config first as outlined in this comment on #133 Why am I getting the error Module not found: Error: Can't resolve 'crypto|os|path' ? You are using dotenv on the front-end and have not included a polyfill. Webpack < 5 used to include these for you. Do the following: npm install node-polyfill-webpack-plugin Configure your webpack.config.js to something like the following. require ( 'dotenv' ). config () const path = require ( 'path' ); const webpack = require ( 'webpack' ) const NodePolyfillPlugin = require ( 'node-polyfill-webpack-plugin' ) module . exports = { mode : 'development' , entry : './src/index.ts' , output : { filename : 'bundle.js' , path : path . resolve ( __dirname , 'dist' ), }, plugins : [ new NodePolyfillPlugin (), new webpack . DefinePlugin ({ 'process.env' : { HELLO : JSON . stringify ( process . env . HELLO ) } }), ] }; Alternatively, just use dotenv-webpack which does this and more behind the scenes for you. What about variable expansion? Try dotenv-expand What about syncing and securing .env files? Use dotenvx What if I accidentally commit my .env file to code? Remove it, remove git history and then install the git pre-commit hook to prevent this from ever happening again. brew install dotenvx/brew/dotenvx dotenvx precommit --install How can I prevent committing my .env file to a Docker build? Use the docker prebuild hook . # Dockerfile ... RUN curl -fsS https://dotenvx.sh/ | sh ... RUN dotenvx prebuild CMD [ \"dotenvx\" , \"run\" , \"--\" , \"node\" , \"index.js\" ] Contributing Guide See CONTRIBUTING.md CHANGELOG See CHANGELOG.md Who's using dotenv? These npm modules depend on it. Projects that expand it often use the keyword \"dotenv\" on npm .","title":"Index"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#dotenv","text":"Dotenv is a zero-dependency module that loads environment variables from a .env file into process.env . Storing configuration in the environment separate from code is based on The Twelve-Factor App methodology. \ud83c\udf31 Install \ud83c\udfd7\ufe0f Usage (.env) \ud83c\udf34 Multiple Environments \ud83c\udd95 \ud83d\ude80 Deploying (encryption) \ud83c\udd95 \ud83d\udcda Examples \ud83d\udcd6 Docs \u2753 FAQ \u23f1\ufe0f Changelog","title":"dotenv"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#install","text":"npm install dotenv --save You can also use an npm-compatible package manager like yarn or bun: yarn add dotenv # or bun add dotenv","title":"\ud83c\udf31 Install"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#usage","text":"Create a .env file in the root of your project (if using a monorepo structure like apps/backend/app.js , put it in the root of the folder where your app.js process runs): S3_BUCKET = \"YOURS3BUCKET\" SECRET_KEY = \"YOURSECRETKEYGOESHERE\" As early as possible in your application, import and configure dotenv: require ( 'dotenv' ). config () console . log ( process . env ) // remove this after you've confirmed it is working .. or using ES6? import 'dotenv/config' That's it. process.env now has the keys and values you defined in your .env file: require ( 'dotenv' ). config () // or import 'dotenv/config' if you're using ES6 ... s3 . getBucketCors ({ Bucket : process . env . S3_BUCKET }, function ( err , data ) {})","title":"\ud83c\udfd7\ufe0f Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#multiline-values","text":"If you need multiline variables, for example private keys, those are now supported ( >= v15.0.0 ) with line breaks: PRIVATE_KEY = \" -----BEGIN RSA PRIVATE KEY----- ... Kh9NV... ... -----END RSA PRIVATE KEY-----\" Alternatively, you can double quote strings and use the \\n character: PRIVATE_KEY = \"-----BEGIN RSA PRIVATE KEY-----\\nKh9NV...\\n-----END RSA PRIVATE KEY-----\\n\"","title":"Multiline values"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#comments","text":"Comments may be added to your file on their own line or inline: # This is a comment SECRET_KEY = YOURSECRETKEYGOESHERE # comment SECRET_HASH = \"something-with-a-#-hash\" Comments begin where a # exists, so if your value contains a # please wrap it in quotes. This is a breaking change from >= v15.0.0 and on.","title":"Comments"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#parsing","text":"The engine which parses the contents of your file containing environment variables is available to use. It accepts a String or Buffer and will return an Object with the parsed keys and values. const dotenv = require ( 'dotenv' ) const buf = Buffer . from ( 'BASIC=basic' ) const config = dotenv . parse ( buf ) // will return an object console . log ( typeof config , config ) // object { BASIC : 'basic' }","title":"Parsing"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#preload","text":"Note: Consider using dotenvx instead of preloading. I am now doing (and recommending) so. It serves the same purpose (you do not need to require and load dotenv), adds better debugging, and works with ANY language, framework, or platform. \u2013 motdotla You can use the --require ( -r ) command line option to preload dotenv. By doing this, you do not need to require and load dotenv in your application code. $ node -r dotenv/config your_script.js The configuration options below are supported as command line arguments in the format dotenv_config_<option>=value $ node -r dotenv/config your_script.js dotenv_config_path = /custom/path/to/.env dotenv_config_debug = true Additionally, you can use environment variables to set configuration options. Command line arguments will precede these. $ DOTENV_CONFIG_<OPTION> = value node -r dotenv/config your_script.js $ DOTENV_CONFIG_ENCODING = latin1 DOTENV_CONFIG_DEBUG = true node -r dotenv/config your_script.js dotenv_config_path = /custom/path/to/.env","title":"Preload"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#variable-expansion","text":"You need to add the value of another variable in one of your variables? Use dotenv-expand .","title":"Variable Expansion"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#command-substitution","text":"Use dotenvx to use command substitution. Add the output of a command to one of your variables in your .env file. # .env DATABASE_URL = \"postgres://$(whoami)@localhost/my_database\" // index.js console . log ( 'DATABASE_URL' , process . env . DATABASE_URL ) $ dotenvx run --debug -- node index.js [ dotenvx@0.14.1 ] injecting env ( 1 ) from .env DATABASE_URL postgres://yourusername@localhost/my_database","title":"Command Substitution"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#syncing","text":"You need to keep .env files in sync between machines, environments, or team members? Use dotenvx to encrypt your .env files and safely include them in source control. This still subscribes to the twelve-factor app rules by generating a decryption key separate from code.","title":"Syncing"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#multiple-environments","text":"Use dotenvx to generate .env.ci , .env.production files, and more.","title":"Multiple Environments"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#deploying","text":"You need to deploy your secrets in a cloud-agnostic manner? Use dotenvx to generate a private decryption key that is set on your production server.","title":"Deploying"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#manage-multiple-environments","text":"Use dotenvx Run any environment locally. Create a .env.ENVIRONMENT file and use --env-file to load it. It's straightforward, yet flexible. $ echo \"HELLO=production\" > .env.production $ echo \"console.log('Hello ' + process.env.HELLO)\" > index.js $ dotenvx run --env-file = .env.production -- node index.js Hello production > ^^ or with multiple .env files $ echo \"HELLO=local\" > .env.local $ echo \"HELLO=World\" > .env $ echo \"console.log('Hello ' + process.env.HELLO)\" > index.js $ dotenvx run --env-file = .env.local --env-file = .env -- node index.js Hello local more environment examples","title":"\ud83c\udf34 Manage Multiple Environments"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#deploying_1","text":"Use dotenvx . Add encryption to your .env files with a single command. Pass the --encrypt flag. $ dotenvx set HELLO Production --encrypt -f .env.production $ echo \"console.log('Hello ' + process.env.HELLO)\" > index.js $ DOTENV_PRIVATE_KEY_PRODUCTION=\"<.env.production private key>\" dotenvx run -- node index.js [dotenvx] injecting env (2) from .env.production Hello Production learn more","title":"\ud83d\ude80 Deploying"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#examples","text":"See examples of using dotenv with various frameworks, languages, and configurations. nodejs nodejs (debug on) nodejs (override on) nodejs (processEnv override) esm esm (preload) typescript typescript parse typescript config webpack webpack (plugin) react react (typescript) express nestjs fastify","title":"\ud83d\udcda Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#documentation","text":"Dotenv exposes four functions: config parse populate decrypt","title":"\ud83d\udcd6 Documentation"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#config","text":"config will read your .env file, parse the contents, assign it to process.env , and return an Object with a parsed key containing the loaded content or an error key if it failed. const result = dotenv . config () if ( result . error ) { throw result . error } console . log ( result . parsed ) You can additionally, pass options to config .","title":"Config"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#options","text":"","title":"Options"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#path","text":"Default: path.resolve(process.cwd(), '.env') Specify a custom path if your file containing environment variables is located elsewhere. require ( 'dotenv' ). config ({ path : '/custom/path/to/.env' }) By default, config will look for a file called .env in the current working directory. Pass in multiple files as an array, and they will be parsed in order and combined with process.env (or option.processEnv , if set). The first value set for a variable will win, unless the options.override flag is set, in which case the last value set will win. If a value already exists in process.env and the options.override flag is NOT set, no changes will be made to that value. require ( 'dotenv' ). config ({ path : [ '.env.local' , '.env' ] })","title":"path"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#encoding","text":"Default: utf8 Specify the encoding of your file containing environment variables. require ( 'dotenv' ). config ({ encoding : 'latin1' })","title":"encoding"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#debug","text":"Default: false Turn on logging to help debug why certain keys or values are not being set as you expect. require ( 'dotenv' ). config ({ debug : process . env . DEBUG })","title":"debug"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#override","text":"Default: false Override any environment variables that have already been set on your machine with values from your .env file(s). If multiple files have been provided in option.path the override will also be used as each file is combined with the next. Without override being set, the first value wins. With override set the last value wins. require ( 'dotenv' ). config ({ override : true })","title":"override"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#processenv","text":"Default: process.env Specify an object to write your environment variables to. Defaults to process.env environment variables. const myObject = {} require ( 'dotenv' ). config ({ processEnv : myObject }) console . log ( myObject ) // values from .env console . log ( process . env ) // this was not changed or written to","title":"processEnv"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#parse","text":"The engine which parses the contents of your file containing environment variables is available to use. It accepts a String or Buffer and will return an Object with the parsed keys and values. const dotenv = require ( 'dotenv' ) const buf = Buffer . from ( 'BASIC=basic' ) const config = dotenv . parse ( buf ) // will return an object console . log ( typeof config , config ) // object { BASIC : 'basic' }","title":"Parse"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#options_1","text":"","title":"Options"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#debug_1","text":"Default: false Turn on logging to help debug why certain keys or values are not being set as you expect. const dotenv = require ( 'dotenv' ) const buf = Buffer . from ( 'hello world' ) const opt = { debug : true } const config = dotenv . parse ( buf , opt ) // expect a debug message because the buffer is not in KEY=VAL form","title":"debug"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#populate","text":"The engine which populates the contents of your .env file to process.env is available for use. It accepts a target, a source, and options. This is useful for power users who want to supply their own objects. For example, customizing the source: const dotenv = require ( 'dotenv' ) const parsed = { HELLO : 'world' } dotenv . populate ( process . env , parsed ) console . log ( process . env . HELLO ) // world For example, customizing the source AND target: const dotenv = require ( 'dotenv' ) const parsed = { HELLO : 'universe' } const target = { HELLO : 'world' } // empty object dotenv . populate ( target , parsed , { override : true , debug : true }) console . log ( target ) // { HELLO: 'universe' }","title":"Populate"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#options_2","text":"","title":"options"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#debug_2","text":"Default: false Turn on logging to help debug why certain keys or values are not being populated as you expect.","title":"Debug"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#override_1","text":"Default: false Override any environment variables that have already been set.","title":"override"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#faq","text":"","title":"\u2753 FAQ"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#why-is-the-env-file-not-loading-my-environment-variables-successfully","text":"Most likely your .env file is not in the correct place. See this stack overflow . Turn on debug mode and try again.. require ( 'dotenv' ). config ({ debug : true }) You will receive a helpful error outputted to your console.","title":"Why is the .env file not loading my environment variables successfully?"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#should-i-commit-my-env-file","text":"No. We strongly recommend against committing your .env file to version control. It should only include environment-specific values such as database passwords or API keys. Your production database should have a different password than your development database.","title":"Should I commit my .env file?"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#should-i-have-multiple-env-files","text":"We recommend creating one .env file per environment. Use .env for local/development, .env.production for production and so on. This still follows the twelve factor principles as each is attributed individually to its own environment. Avoid custom set ups that work in inheritance somehow ( .env.production inherits values form .env for example). It is better to duplicate values if necessary across each .env.environment file. In a twelve-factor app, env vars are granular controls, each fully orthogonal to other env vars. They are never grouped together as \u201cenvironments\u201d, but instead are independently managed for each deploy. This is a model that scales up smoothly as the app naturally expands into more deploys over its lifetime. \u2013 The Twelve-Factor App","title":"Should I have multiple .env files?"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#what-rules-does-the-parsing-engine-follow","text":"The parsing engine currently supports the following rules: BASIC=basic becomes {BASIC: 'basic'} empty lines are skipped lines beginning with # are treated as comments # marks the beginning of a comment (unless when the value is wrapped in quotes) empty values become empty strings ( EMPTY= becomes {EMPTY: ''} ) inner quotes are maintained (think JSON) ( JSON={\"foo\": \"bar\"} becomes {JSON:\"{\\\"foo\\\": \\\"bar\\\"}\" ) whitespace is removed from both ends of unquoted values (see more on trim ) ( FOO= some value becomes {FOO: 'some value'} ) single and double quoted values are escaped ( SINGLE_QUOTE='quoted' becomes {SINGLE_QUOTE: \"quoted\"} ) single and double quoted values maintain whitespace from both ends ( FOO=\" some value \" becomes {FOO: ' some value '} ) double quoted values expand new lines ( MULTILINE=\"new\\nline\" becomes {MULTILINE: 'new line'} backticks are supported ( BACKTICK_KEY=`This has 'single' and \"double\" quotes inside of it.` )","title":"What rules does the parsing engine follow?"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#what-happens-to-environment-variables-that-were-already-set","text":"By default, we will never modify any environment variables that have already been set. In particular, if there is a variable in your .env file which collides with one that already exists in your environment, then that variable will be skipped. If instead, you want to override process.env use the override option. require ( 'dotenv' ). config ({ override : true })","title":"What happens to environment variables that were already set?"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#how-come-my-environment-variables-are-not-showing-up-for-react","text":"Your React code is run in Webpack, where the fs module or even the process global itself are not accessible out-of-the-box. process.env can only be injected through Webpack configuration. If you are using react-scripts , which is distributed through create-react-app , it has dotenv built in but with a quirk. Preface your environment variables with REACT_APP_ . See this stack overflow for more details. If you are using other frameworks (e.g. Next.js, Gatsby...), you need to consult their documentation for how to inject environment variables into the client.","title":"How come my environment variables are not showing up for React?"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#can-i-customizewrite-plugins-for-dotenv","text":"Yes! dotenv.config() returns an object representing the parsed .env file. This gives you everything you need to continue setting values on process.env . For example: const dotenv = require ( 'dotenv' ) const variableExpansion = require ( 'dotenv-expand' ) const myEnv = dotenv . config () variableExpansion ( myEnv )","title":"Can I customize/write plugins for dotenv?"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#how-do-i-use-dotenv-with-import","text":"Simply.. // index.mjs (ESM) import 'dotenv/config' // see https://github.com/motdotla/dotenv#how-do-i-use-dotenv-with-import import express from 'express' A little background.. When you run a module containing an import declaration, the modules it imports are loaded first, then each module body is executed in a depth-first traversal of the dependency graph, avoiding cycles by skipping anything already executed. \u2013 ES6 In Depth: Modules What does this mean in plain language? It means you would think the following would work but it won't. errorReporter.mjs : class Client { constructor ( apiKey ) { console . log ( 'apiKey' , apiKey ) this . apiKey = apiKey } } export default new Client ( process . env . API_KEY ) index.mjs : // Note: this is INCORRECT and will not work import * as dotenv from 'dotenv' dotenv . config () import errorReporter from './errorReporter.mjs' // process.env.API_KEY will be blank! process.env.API_KEY will be blank. Instead, index.mjs should be written as.. import 'dotenv/config' import errorReporter from './errorReporter.mjs' Does that make sense? It's a bit unintuitive, but it is how importing of ES6 modules work. Here is a working example of this pitfall . There are two alternatives to this approach: Preload dotenv: node --require dotenv/config index.js ( Note: you do not need to import dotenv with this approach ) Create a separate file that will execute config first as outlined in this comment on #133","title":"How do I use dotenv with import?"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#why-am-i-getting-the-error-module-not-found-error-cant-resolve-cryptoospath","text":"You are using dotenv on the front-end and have not included a polyfill. Webpack < 5 used to include these for you. Do the following: npm install node-polyfill-webpack-plugin Configure your webpack.config.js to something like the following. require ( 'dotenv' ). config () const path = require ( 'path' ); const webpack = require ( 'webpack' ) const NodePolyfillPlugin = require ( 'node-polyfill-webpack-plugin' ) module . exports = { mode : 'development' , entry : './src/index.ts' , output : { filename : 'bundle.js' , path : path . resolve ( __dirname , 'dist' ), }, plugins : [ new NodePolyfillPlugin (), new webpack . DefinePlugin ({ 'process.env' : { HELLO : JSON . stringify ( process . env . HELLO ) } }), ] }; Alternatively, just use dotenv-webpack which does this and more behind the scenes for you.","title":"Why am I getting the error Module not found: Error: Can't resolve 'crypto|os|path'?"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#what-about-variable-expansion","text":"Try dotenv-expand","title":"What about variable expansion?"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#what-about-syncing-and-securing-env-files","text":"Use dotenvx","title":"What about syncing and securing .env files?"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#what-if-i-accidentally-commit-my-env-file-to-code","text":"Remove it, remove git history and then install the git pre-commit hook to prevent this from ever happening again. brew install dotenvx/brew/dotenvx dotenvx precommit --install","title":"What if I accidentally commit my .env file to code?"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#how-can-i-prevent-committing-my-env-file-to-a-docker-build","text":"Use the docker prebuild hook . # Dockerfile ... RUN curl -fsS https://dotenvx.sh/ | sh ... RUN dotenvx prebuild CMD [ \"dotenvx\" , \"run\" , \"--\" , \"node\" , \"index.js\" ]","title":"How can I prevent committing my .env file to a Docker build?"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#contributing-guide","text":"See CONTRIBUTING.md","title":"Contributing Guide"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#changelog","text":"See CHANGELOG.md","title":"CHANGELOG"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#whos-using-dotenv","text":"These npm modules depend on it. Projects that expand it often use the keyword \"dotenv\" on npm .","title":"Who's using dotenv?"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. See standard-version for commit guidelines. Unreleased 16.5.0 (2025-04-07) Added \ud83c\udf89 Added new sponsor Graphite - the AI developer productivity platform helping teams on GitHub ship higher quality software, faster . [!TIP] Become a sponsor The dotenvx README is viewed thousands of times DAILY on GitHub and NPM. Sponsoring dotenv is a great way to get in front of developers and give back to the developer community at the same time. Changed Remove _log method. Use _debug #862 16.4.7 (2024-12-03) Changed Ignore .tap folder when publishing. (oops, sorry about that everyone. - @motdotla) #848 16.4.6 (2024-12-02) Changed Clean up stale dev dependencies #847 Various README updates clarifying usage and alternative solutions using dotenvx 16.4.5 (2024-02-19) Changed \ud83d\udc1e Fix recent regression when using path option. return to historical behavior: do not attempt to auto find .env if path set. (regression was introduced in 16.4.3 ) #814 16.4.4 (2024-02-13) Changed \ud83d\udc1e Replaced chaining operator ?. with old school && (fixing node 12 failures) #812 16.4.3 (2024-02-12) Changed Fixed processing of multiple files in options.path #805 16.4.2 (2024-02-10) Changed Changed funding link in package.json to dotenvx.com 16.4.1 (2024-01-24) Patch support for array as path option #797 16.4.0 (2024-01-23) Add error.code to error messages around .env.vault decryption handling #795 Add ability to find .env.vault file when filename(s) passed as an array #784 16.3.2 (2024-01-18) Added Add debug message when no encoding set #735 Changed Fix output typing for populate #792 Use subarray instead of slice #793 16.3.1 (2023-06-17) Added Add missing type definitions for processEnv and DOTENV_KEY options. #756 16.3.0 (2023-06-16) Added Optionally pass DOTENV_KEY to options rather than relying on process.env.DOTENV_KEY . Defaults to process.env.DOTENV_KEY #754 16.2.0 (2023-06-15) Added Optionally write to your own target object rather than process.env . Defaults to process.env . #753 Add import type URL to types file #751 16.1.4 (2023-06-04) Added Added .github/ to .npmignore #747 16.1.3 (2023-05-31) Removed Removed browser keys for path , os , and crypto in package.json. These were set to false incorrectly as of 16.1. Instead, if using dotenv on the front-end make sure to include polyfills for path , os , and crypto . node-polyfill-webpack-plugin provides these. 16.1.2 (2023-05-31) Changed Exposed private function _configDotenv as configDotenv . #744 16.1.1 (2023-05-30) Added Added type definition for decrypt function Changed Fixed {crypto: false} in packageJson.browser 16.1.0 (2023-05-30) Added Add populate convenience method #733 Accept URL as path option #720 Add dotenv to npm fund command Spanish language README #698 Add .env.vault support. \ud83c\udf89 ( #730 ) \u2139\ufe0f .env.vault extends the .env file format standard with a localized encrypted vault file. Package it securely with your production code deploys. It's cloud agnostic so that you can deploy your secrets anywhere \u2013 without risky third-party integrations . read more Changed Fixed \"cannot resolve 'fs'\" error on tools like Replit #693 16.0.3 (2022-09-29) Changed Added library version to debug logs ( #682 ) 16.0.2 (2022-08-30) Added Export env-options.js and cli-options.js in package.json for use with downstream dotenv-expand module 16.0.1 (2022-05-10) Changed Minor README clarifications Development ONLY: updated devDependencies as recommended for development only security risks ( #658 ) 16.0.0 (2022-02-02) Added Breaking: Backtick support \ud83c\udf89 ( #615 ) If you had values containing the backtick character, please quote those values with either single or double quotes. 15.0.1 (2022-02-02) Changed Properly parse empty single or double quoted values \ud83d\udc1e ( #614 ) 15.0.0 (2022-01-31) v15.0.0 is a major new release with some important breaking changes. Added Breaking: Multiline parsing support (just works. no need for the flag.) Changed Breaking: # marks the beginning of a comment (UNLESS the value is wrapped in quotes. Please update your .env files to wrap in quotes any values containing # . For example: SECRET_HASH=\"something-with-a-#-hash\" ). ..Understandably, (as some teams have noted) this is tedious to do across the entire team. To make it less tedious, we recommend using dotenv cli going forward. It's an optional plugin that will keep your .env files in sync between machines, environments, or team members. Removed Breaking: Remove multiline option (just works out of the box now. no need for the flag.) 14.3.2 (2022-01-25) Changed Preserve backwards compatibility on values containing # \ud83d\udc1e ( #603 ) 14.3.1 (2022-01-25) Changed Preserve backwards compatibility on exports by re-introducing the prior in-place exports \ud83d\udc1e ( #606 ) 14.3.0 (2022-01-24) Added Add multiline option \ud83c\udf89 ( #486 ) 14.2.0 (2022-01-17) Added Add dotenv_config_override cli option Add DOTENV_CONFIG_OVERRIDE command line env option 14.1.1 (2022-01-17) Added Add React gotcha to FAQ on README 14.1.0 (2022-01-17) Added Add override option \ud83c\udf89 ( #595 ) 14.0.1 (2022-01-16) Added Log error on failure to load .env file ( #594 ) 14.0.0 (2022-01-16) Added Breaking: Support inline comments for the parser \ud83c\udf89 ( #568 ) 13.0.1 (2022-01-16) Changed Hide comments and newlines from debug output ( #404 ) 13.0.0 (2022-01-16) Added Breaking: Add type file for config.js ( #539 ) 12.0.4 (2022-01-16) Changed README updates Minor order adjustment to package json format 12.0.3 (2022-01-15) Changed Simplified jsdoc for consistency across editors 12.0.2 (2022-01-15) Changed Improve embedded jsdoc type documentation 12.0.1 (2022-01-15) Changed README updates and clarifications 12.0.0 (2022-01-15) Removed Breaking: drop support for Flow static type checker ( #584 ) Changed Move types/index.d.ts to lib/main.d.ts ( #585 ) Typescript cleanup ( #587 ) Explicit typescript inclusion in package.json ( #566 ) 11.0.0 (2022-01-11) Changed Breaking: drop support for Node v10 ( #558 ) Patch debug option ( #550 ) 10.0.0 (2021-05-20) Added Add generic support to parse function Allow for import \"dotenv/config.js\" Add support to resolve home directory in path via ~ 9.0.2 (2021-05-10) Changed Support windows newlines with debug mode 9.0.1 (2021-05-08) Changed Updates to README 9.0.0 (2021-05-05) Changed Breaking: drop support for Node v8 8.6.0 (2021-05-05) Added define package.json in exports 8.5.1 (2021-05-05) Changed updated dev dependencies via npm audit 8.5.0 (2021-05-05) Added allow for import \"dotenv/config\" 8.4.0 (2021-05-05) Changed point to exact types file to work with VS Code 8.3.0 (2021-05-05) Changed Breaking: drop support for Node v8 (mistake to be released as minor bump. later bumped to 9.0.0. see above.) 8.2.0 (2019-10-16) Added TypeScript types 8.1.0 (2019-08-18) Changed Breaking: drop support for Node v6 ( #392 ) 8.0.0 (2019-05-02) Changed Breaking: drop support for Node v6 ( #302 ) 7.0.0 - 2019-03-12 Fixed Fix removing unbalanced quotes ( #376 ) Removed Removed load alias for config for consistency throughout code and documentation. 6.2.0 - 2018-12-03 Added Support preload configuration via environment variables ( #351 ) 6.1.0 - 2018-10-08 Added debug option for config and parse methods will turn on logging 6.0.0 - 2018-06-02 Changed Breaking: drop support for Node v4 ( #304 ) 5.0.0 - 2018-01-29 Added Testing against Node v8 and v9 Documentation on trim behavior of values Documentation on how to use with import Changed Breaking : default path is now path.resolve(process.cwd(), '.env') Breaking : does not write over keys already in process.env if the key has a falsy value using const and let instead of var Removed Testing against Node v7 4.0.0 - 2016-12-23 Changed Return Object with parsed content or error instead of false ( #165 ). Removed verbose option removed in favor of returning result. 3.0.0 - 2016-12-20 Added verbose option will log any error messages. Off by default. parses email addresses correctly allow importing config method directly in ES6 Changed Suppress error messages by default ( #154 ) Ignoring more files for NPM to make package download smaller Fixed False positive test due to case-sensitive variable ( #124 ) Removed silent option removed in favor of verbose 2.0.0 - 2016-01-20 Added CHANGELOG to \"make it easier for users and contributors to see precisely what notable changes have been made between each release\" . Linked to from README LICENSE to be more explicit about what was defined in package.json . Linked to from README Testing nodejs v4 on travis-ci added examples of how to use dotenv in different ways return parsed object on success rather than boolean true Changed README has shorter description not referencing ruby gem since we don't have or want feature parity Removed Variable expansion and escaping so environment variables are encouraged to be fully orthogonal 1.2.0 - 2015-06-20 Added Preload hook to require dotenv without including it in your code Changed clarified license to be \"BSD-2-Clause\" in package.json Fixed retain spaces in string vars 1.1.0 - 2015-03-31 Added Silent option to silence console.log when .env missing 1.0.0 - 2015-03-13 Removed support for multiple .env files. should always use one .env file for the current environment","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. See standard-version for commit guidelines.","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#unreleased","text":"","title":"Unreleased"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1650-2025-04-07","text":"","title":"16.5.0 (2025-04-07)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added","text":"\ud83c\udf89 Added new sponsor Graphite - the AI developer productivity platform helping teams on GitHub ship higher quality software, faster . [!TIP] Become a sponsor The dotenvx README is viewed thousands of times DAILY on GitHub and NPM. Sponsoring dotenv is a great way to get in front of developers and give back to the developer community at the same time.","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed","text":"Remove _log method. Use _debug #862","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1647-2024-12-03","text":"","title":"16.4.7 (2024-12-03)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_1","text":"Ignore .tap folder when publishing. (oops, sorry about that everyone. - @motdotla) #848","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1646-2024-12-02","text":"","title":"16.4.6 (2024-12-02)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_2","text":"Clean up stale dev dependencies #847 Various README updates clarifying usage and alternative solutions using dotenvx","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1645-2024-02-19","text":"","title":"16.4.5 (2024-02-19)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_3","text":"\ud83d\udc1e Fix recent regression when using path option. return to historical behavior: do not attempt to auto find .env if path set. (regression was introduced in 16.4.3 ) #814","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1644-2024-02-13","text":"","title":"16.4.4 (2024-02-13)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_4","text":"\ud83d\udc1e Replaced chaining operator ?. with old school && (fixing node 12 failures) #812","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1643-2024-02-12","text":"","title":"16.4.3 (2024-02-12)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_5","text":"Fixed processing of multiple files in options.path #805","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1642-2024-02-10","text":"","title":"16.4.2 (2024-02-10)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_6","text":"Changed funding link in package.json to dotenvx.com","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1641-2024-01-24","text":"Patch support for array as path option #797","title":"16.4.1 (2024-01-24)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1640-2024-01-23","text":"Add error.code to error messages around .env.vault decryption handling #795 Add ability to find .env.vault file when filename(s) passed as an array #784","title":"16.4.0 (2024-01-23)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1632-2024-01-18","text":"","title":"16.3.2 (2024-01-18)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_1","text":"Add debug message when no encoding set #735","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_7","text":"Fix output typing for populate #792 Use subarray instead of slice #793","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1631-2023-06-17","text":"","title":"16.3.1 (2023-06-17)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_2","text":"Add missing type definitions for processEnv and DOTENV_KEY options. #756","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1630-2023-06-16","text":"","title":"16.3.0 (2023-06-16)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_3","text":"Optionally pass DOTENV_KEY to options rather than relying on process.env.DOTENV_KEY . Defaults to process.env.DOTENV_KEY #754","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1620-2023-06-15","text":"","title":"16.2.0 (2023-06-15)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_4","text":"Optionally write to your own target object rather than process.env . Defaults to process.env . #753 Add import type URL to types file #751","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1614-2023-06-04","text":"","title":"16.1.4 (2023-06-04)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_5","text":"Added .github/ to .npmignore #747","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1613-2023-05-31","text":"","title":"16.1.3 (2023-05-31)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#removed","text":"Removed browser keys for path , os , and crypto in package.json. These were set to false incorrectly as of 16.1. Instead, if using dotenv on the front-end make sure to include polyfills for path , os , and crypto . node-polyfill-webpack-plugin provides these.","title":"Removed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1612-2023-05-31","text":"","title":"16.1.2 (2023-05-31)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_8","text":"Exposed private function _configDotenv as configDotenv . #744","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1611-2023-05-30","text":"","title":"16.1.1 (2023-05-30)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_6","text":"Added type definition for decrypt function","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_9","text":"Fixed {crypto: false} in packageJson.browser","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1610-2023-05-30","text":"","title":"16.1.0 (2023-05-30)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_7","text":"Add populate convenience method #733 Accept URL as path option #720 Add dotenv to npm fund command Spanish language README #698 Add .env.vault support. \ud83c\udf89 ( #730 ) \u2139\ufe0f .env.vault extends the .env file format standard with a localized encrypted vault file. Package it securely with your production code deploys. It's cloud agnostic so that you can deploy your secrets anywhere \u2013 without risky third-party integrations . read more","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_10","text":"Fixed \"cannot resolve 'fs'\" error on tools like Replit #693","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1603-2022-09-29","text":"","title":"16.0.3 (2022-09-29)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_11","text":"Added library version to debug logs ( #682 )","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1602-2022-08-30","text":"","title":"16.0.2 (2022-08-30)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_8","text":"Export env-options.js and cli-options.js in package.json for use with downstream dotenv-expand module","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1601-2022-05-10","text":"","title":"16.0.1 (2022-05-10)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_12","text":"Minor README clarifications Development ONLY: updated devDependencies as recommended for development only security risks ( #658 )","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1600-2022-02-02","text":"","title":"16.0.0 (2022-02-02)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_9","text":"Breaking: Backtick support \ud83c\udf89 ( #615 ) If you had values containing the backtick character, please quote those values with either single or double quotes.","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1501-2022-02-02","text":"","title":"15.0.1 (2022-02-02)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_13","text":"Properly parse empty single or double quoted values \ud83d\udc1e ( #614 )","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1500-2022-01-31","text":"v15.0.0 is a major new release with some important breaking changes.","title":"15.0.0 (2022-01-31)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_10","text":"Breaking: Multiline parsing support (just works. no need for the flag.)","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_14","text":"Breaking: # marks the beginning of a comment (UNLESS the value is wrapped in quotes. Please update your .env files to wrap in quotes any values containing # . For example: SECRET_HASH=\"something-with-a-#-hash\" ). ..Understandably, (as some teams have noted) this is tedious to do across the entire team. To make it less tedious, we recommend using dotenv cli going forward. It's an optional plugin that will keep your .env files in sync between machines, environments, or team members.","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#removed_1","text":"Breaking: Remove multiline option (just works out of the box now. no need for the flag.)","title":"Removed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1432-2022-01-25","text":"","title":"14.3.2 (2022-01-25)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_15","text":"Preserve backwards compatibility on values containing # \ud83d\udc1e ( #603 )","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1431-2022-01-25","text":"","title":"14.3.1 (2022-01-25)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_16","text":"Preserve backwards compatibility on exports by re-introducing the prior in-place exports \ud83d\udc1e ( #606 )","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1430-2022-01-24","text":"","title":"14.3.0 (2022-01-24)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_11","text":"Add multiline option \ud83c\udf89 ( #486 )","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1420-2022-01-17","text":"","title":"14.2.0 (2022-01-17)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_12","text":"Add dotenv_config_override cli option Add DOTENV_CONFIG_OVERRIDE command line env option","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1411-2022-01-17","text":"","title":"14.1.1 (2022-01-17)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_13","text":"Add React gotcha to FAQ on README","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1410-2022-01-17","text":"","title":"14.1.0 (2022-01-17)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_14","text":"Add override option \ud83c\udf89 ( #595 )","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1401-2022-01-16","text":"","title":"14.0.1 (2022-01-16)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_15","text":"Log error on failure to load .env file ( #594 )","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1400-2022-01-16","text":"","title":"14.0.0 (2022-01-16)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_16","text":"Breaking: Support inline comments for the parser \ud83c\udf89 ( #568 )","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1301-2022-01-16","text":"","title":"13.0.1 (2022-01-16)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_17","text":"Hide comments and newlines from debug output ( #404 )","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1300-2022-01-16","text":"","title":"13.0.0 (2022-01-16)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_17","text":"Breaking: Add type file for config.js ( #539 )","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1204-2022-01-16","text":"","title":"12.0.4 (2022-01-16)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_18","text":"README updates Minor order adjustment to package json format","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1203-2022-01-15","text":"","title":"12.0.3 (2022-01-15)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_19","text":"Simplified jsdoc for consistency across editors","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1202-2022-01-15","text":"","title":"12.0.2 (2022-01-15)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_20","text":"Improve embedded jsdoc type documentation","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1201-2022-01-15","text":"","title":"12.0.1 (2022-01-15)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_21","text":"README updates and clarifications","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1200-2022-01-15","text":"","title":"12.0.0 (2022-01-15)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#removed_2","text":"Breaking: drop support for Flow static type checker ( #584 )","title":"Removed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_22","text":"Move types/index.d.ts to lib/main.d.ts ( #585 ) Typescript cleanup ( #587 ) Explicit typescript inclusion in package.json ( #566 )","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1100-2022-01-11","text":"","title":"11.0.0 (2022-01-11)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_23","text":"Breaking: drop support for Node v10 ( #558 ) Patch debug option ( #550 )","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1000-2021-05-20","text":"","title":"10.0.0 (2021-05-20)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_18","text":"Add generic support to parse function Allow for import \"dotenv/config.js\" Add support to resolve home directory in path via ~","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#902-2021-05-10","text":"","title":"9.0.2 (2021-05-10)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_24","text":"Support windows newlines with debug mode","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#901-2021-05-08","text":"","title":"9.0.1 (2021-05-08)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_25","text":"Updates to README","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#900-2021-05-05","text":"","title":"9.0.0 (2021-05-05)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_26","text":"Breaking: drop support for Node v8","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#860-2021-05-05","text":"","title":"8.6.0 (2021-05-05)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_19","text":"define package.json in exports","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#851-2021-05-05","text":"","title":"8.5.1 (2021-05-05)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_27","text":"updated dev dependencies via npm audit","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#850-2021-05-05","text":"","title":"8.5.0 (2021-05-05)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_20","text":"allow for import \"dotenv/config\"","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#840-2021-05-05","text":"","title":"8.4.0 (2021-05-05)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_28","text":"point to exact types file to work with VS Code","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#830-2021-05-05","text":"","title":"8.3.0 (2021-05-05)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_29","text":"Breaking: drop support for Node v8 (mistake to be released as minor bump. later bumped to 9.0.0. see above.)","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#820-2019-10-16","text":"","title":"8.2.0 (2019-10-16)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_21","text":"TypeScript types","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#810-2019-08-18","text":"","title":"8.1.0 (2019-08-18)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_30","text":"Breaking: drop support for Node v6 ( #392 )","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#800-2019-05-02","text":"","title":"8.0.0 (2019-05-02)"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_31","text":"Breaking: drop support for Node v6 ( #302 )","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#700-2019-03-12","text":"","title":"7.0.0 - 2019-03-12"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#fixed","text":"Fix removing unbalanced quotes ( #376 )","title":"Fixed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#removed_3","text":"Removed load alias for config for consistency throughout code and documentation.","title":"Removed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#620-2018-12-03","text":"","title":"6.2.0 - 2018-12-03"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_22","text":"Support preload configuration via environment variables ( #351 )","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#610-2018-10-08","text":"","title":"6.1.0 - 2018-10-08"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_23","text":"debug option for config and parse methods will turn on logging","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#600-2018-06-02","text":"","title":"6.0.0 - 2018-06-02"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_32","text":"Breaking: drop support for Node v4 ( #304 )","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#500-2018-01-29","text":"","title":"5.0.0 - 2018-01-29"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_24","text":"Testing against Node v8 and v9 Documentation on trim behavior of values Documentation on how to use with import","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_33","text":"Breaking : default path is now path.resolve(process.cwd(), '.env') Breaking : does not write over keys already in process.env if the key has a falsy value using const and let instead of var","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#removed_4","text":"Testing against Node v7","title":"Removed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#400-2016-12-23","text":"","title":"4.0.0 - 2016-12-23"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_34","text":"Return Object with parsed content or error instead of false ( #165 ).","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#removed_5","text":"verbose option removed in favor of returning result.","title":"Removed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#300-2016-12-20","text":"","title":"3.0.0 - 2016-12-20"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_25","text":"verbose option will log any error messages. Off by default. parses email addresses correctly allow importing config method directly in ES6","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_35","text":"Suppress error messages by default ( #154 ) Ignoring more files for NPM to make package download smaller","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#fixed_1","text":"False positive test due to case-sensitive variable ( #124 )","title":"Fixed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#removed_6","text":"silent option removed in favor of verbose","title":"Removed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#200-2016-01-20","text":"","title":"2.0.0 - 2016-01-20"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_26","text":"CHANGELOG to \"make it easier for users and contributors to see precisely what notable changes have been made between each release\" . Linked to from README LICENSE to be more explicit about what was defined in package.json . Linked to from README Testing nodejs v4 on travis-ci added examples of how to use dotenv in different ways return parsed object on success rather than boolean true","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_36","text":"README has shorter description not referencing ruby gem since we don't have or want feature parity","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#removed_7","text":"Variable expansion and escaping so environment variables are encouraged to be fully orthogonal","title":"Removed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#120-2015-06-20","text":"","title":"1.2.0 - 2015-06-20"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_27","text":"Preload hook to require dotenv without including it in your code","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_37","text":"clarified license to be \"BSD-2-Clause\" in package.json","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#fixed_2","text":"retain spaces in string vars","title":"Fixed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#110-2015-03-31","text":"","title":"1.1.0 - 2015-03-31"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_28","text":"Silent option to silence console.log when .env missing","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#100-2015-03-13","text":"","title":"1.0.0 - 2015-03-13"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#removed_8","text":"support for multiple .env files. should always use one .env file for the current environment","title":"Removed"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/","text":"\ud83c\udf89 announcing dotenvx . run anywhere, multi-environment, encrypted envs . Dotenv es apoyado por la comunidad. Gracias espaciales a: Warp is a blazingly fast, Rust-based terminal reimagined to work like a modern app. Get more done in the CLI with real text editing, block-based output, and AI command search. Graphite is the AI developer productivity platform helping teams on GitHub ship higher quality software, faster. dotenv Dotenv es un m\u00f3dulo de dependencia cero que carga las variables de entorno desde un archivo .env en process.env . El almacenamiento de la configuraci\u00f3n del entorno separado del c\u00f3digo est\u00e1 basado en la metodolog\u00eda The Twelve-Factor App . Instalaci\u00f3n # instalaci\u00f3n local (recomendado) npm install dotenv --save O installaci\u00f3n con yarn? yarn add dotenv Uso Cree un archivo .env en la ra\u00edz de su proyecto: S3_BUCKET = \"YOURS3BUCKET\" SECRET_KEY = \"YOURSECRETKEYGOESHERE\" Tan pr\u00f3nto como sea posible en su aplicaci\u00f3n, importe y configure dotenv: require ( 'dotenv' ). config () console . log ( process . env ) // elimine esto despu\u00e9s que haya confirmado que esta funcionando .. o usa ES6? import * as dotenv from 'dotenv' // vea en https://github.com/motdotla/dotenv#como-uso-dotenv-con-import // REVISAR LINK DE REFERENCIA DE IMPORTACI\u00d3N dotenv . config () import express from 'express' Eso es todo. process.env ahora tiene las claves y los valores que definiste en tu archivo .env : require ( 'dotenv' ). config () ... s3 . getBucketCors ({ Bucket : process . env . S3_BUCKET }, function ( err , data ) {}) Valores multil\u00ednea Si necesita variables de varias l\u00edneas, por ejemplo, claves privadas, ahora se admiten en la versi\u00f3n ( >= v15.0.0 ) con saltos de l\u00ednea: PRIVATE_KEY = \" -----BEGIN RSA PRIVATE KEY----- ... Kh9NV... ... -----END RSA PRIVATE KEY-----\" Alternativamente, puede usar comillas dobles y usar el car\u00e1cter \\n : PRIVATE_KEY = \"-----BEGIN RSA PRIVATE KEY-----\\nKh9NV...\\n-----END RSA PRIVATE KEY-----\\n\" Comentarios Los comentarios pueden ser agregados en tu archivo o en la misma l\u00ednea: # This is a comment SECRET_KEY = YOURSECRETKEYGOESHERE # comment SECRET_HASH = \"something-with-a-#-hash\" Los comentarios comienzan donde existe un # , entonces, si su valor contiene un # , enci\u00e9rrelo entre comillas. Este es un cambio importante desde la versi\u00f3n >= v15.0.0 en adelante. An\u00e1lisis El motor que analiza el contenido de su archivo que contiene variables de entorno est\u00e1 disponible para su uso. Este Acepta una Cadena o un B\u00fafer y devolver\u00e1 un Objeto con las claves y los valores analizados. const dotenv = require ( 'dotenv' ) const buf = Buffer . from ( 'BASICO=basico' ) const config = dotenv . parse ( buf ) // devolver\u00e1 un objeto console . log ( typeof config , config ) // objeto { BASICO : 'basico' } Precarga Puede usar el --require ( -r ) opci\u00f3n de l\u00ednea de comando para precargar dotenv. Al hacer esto, no necesita requerir ni cargar dotnev en el c\u00f3digo de su aplicaci\u00f3n. $ node -r dotenv/config tu_script.js Las opciones de configuraci\u00f3n a continuaci\u00f3n se admiten como argumentos de l\u00ednea de comandos en el formato dotenv_config_<option>=value $ node -r dotenv/config tu_script.js dotenv_config_path = /custom/path/to/.env dotenv_config_debug = true Adem\u00e1s, puede usar variables de entorno para establecer opciones de configuraci\u00f3n. Los argumentos de l\u00ednea de comandos preceder\u00e1n a estos. $ DOTENV_CONFIG_<OPTION> = value node -r dotenv/config tu_script.js $ DOTENV_CONFIG_ENCODING = latin1 DOTENV_CONFIG_DEBUG = true node -r dotenv/config tu_script.js dotenv_config_path = /custom/path/to/.env Expansi\u00f3n Variable Necesitaras agregar el valor de otro variable en una de sus variables? Usa dotenv-expand . Sincronizando Necesitas mentener sincronizados los archivos .env entre maquinas, entornos, o miembros del equipo? Usa dotenv-vault . Ejemplos Vea ejemplos sobre el uso de dotenv con varios frameworks, lenguajes y configuraciones. nodejs nodejs (depurar en) nodejs (anular en) esm esm (precarga) typescript typescript parse typescript config webpack webpack (plugin) react react (typescript) express nestjs Documentaci\u00f3n Dotenv expone dos funciones: configuraci\u00f3n analizar Configuraci\u00f3n Configuraci\u00f3n leer\u00e1 su archivo .env , analizar\u00e1 el contenido, lo asignar\u00e1 a process.env , y devolver\u00e1 un Objeto con una clave parsed que contiene el contenido cargado o una clave error si falla. const result = dotenv . config () if ( result . error ) { throw result . error } console . log ( result . parsed ) Adicionalmente, puede pasar opciones a configuracion . Opciones Ruta Por defecto: path.resolve(process.cwd(), '.env') Especifique una ruta personalizada si el archivo que contiene las variables de entorno se encuentra localizado en otro lugar. require ( 'dotenv' ). config ({ path : '/personalizado/ruta/a/.env' }) Codificaci\u00f3n Por defecto: utf8 Especifique la codificaci\u00f3n del archivo que contiene las variables de entorno. require ( 'dotenv' ). config ({ encoding : 'latin1' }) Depurar Por defecto: false Active el registro de ayuda para depurar por qu\u00e9 ciertas claves o valores no se inician como lo esperabas. require ( 'dotenv' ). config ({ debug : process . env . DEBUG }) Anular Por defecto: false Anule cualquier variable de entorno que ya se haya configurada en su maquina con los valores de su archivo .env. require ( 'dotenv' ). config ({ override : true }) Analizar El motor que analiza el contenido del archivo que contiene las variables de entorno est\u00e1 disponible para su uso. Acepta una Cadena o un B\u00fafer y retornar\u00e1 un objecto con los valores analizados. const dotenv = require ( 'dotenv' ) const buf = Buffer . from ( 'BASICO=basico' ) const config = dotenv . parse ( buf ) // devolver\u00e1 un objeto console . log ( typeof config , config ) // objeto { BASICO : 'basico' } Opciones Depurar Por defecto: false Active el registro de ayuda para depurar por qu\u00e9 ciertas claves o valores no se inician como lo esperabas. const dotenv = require ( 'dotenv' ) const buf = Buffer . from ( 'hola mundo' ) const opt = { debug : true } const config = dotenv . parse ( buf , opt ) // espere por un mensaje de depuraci\u00f3n porque el b\u00fafer no esta listo KEY=VAL FAQ \u00bfPor qu\u00e9 el archivo .env no carga mis variables de entorno correctamente? Lo m\u00e1s probable es que su archivo .env no est\u00e9 en el lugar correcto. Vea este stack overflow . Active el modo de depuraci\u00f3n y vuelva a intentarlo... require ( 'dotenv' ). config ({ debug : true }) Recibir\u00e1 un error apropiado en su consola. \u00bfDebo confirmar mi archivo .env ? No. Recomendamos enf\u00e1ticamente no enviar su archivo .env a la versi\u00f3n de control. Solo debe incluir los valores especificos del entorno, como la base de datos, contrase\u00f1as o claves API. \u00bfDeber\u00eda tener multiples archivos .env ? No. Recomendamos enf\u00e1ticamente no tener un archivo .env \"principal\" y un archivo .env de \"entorno\" como .env.test . Su configuraci\u00f3n debe variar entre implementaciones y no debe compartir valores entre entornos. En una Aplicaci\u00f3n de Doce Factores, las variables de entorno son controles diferenciados, cada uno totalmente independiente a otras variables de entorno. Nunca se agrupan como \"entornos\", sino que se gestionan de manera independiente para cada despliegue. Este es un modelo que se escala sin problemas a medida que la aplicaci\u00f3n se expande de forma natural en m\u00e1s despliegues a lo largo de su vida. \u2013 La Apliaci\u00f3n de los Doce Factores \u00bfQu\u00e9 reglas sigue el motor de an\u00e1lisis? El motor de an\u00e1lisis actualmente admite las siguientes reglas: BASICO=basico se convierte en {BASICO: 'basico'} las l\u00edneas vac\u00edas se saltan las l\u00edneas que comienzan con # se tratan como comentarios # marca el comienzo de un comentario (a menos que el valor est\u00e9 entre comillas) valores vac\u00edos se convierten en cadenas vac\u00edas ( VACIO= se convierte en {VACIO: ''} ) las comillas internas se mantienen (piensa en JSON) ( JSON={\"foo\": \"bar\"} se convierte en {JSON:\"{\\\"foo\\\": \\\"bar\\\"}\" ) los espacios en blanco se eliminan de ambos extremos de los valores no citanos (aprende m\u00e1s en trim ) ( FOO= algo se convierte en {FOO: 'algo'} ) los valores entre comillas simples y dobles se escapan ( CITA_SIMPLE='citado' se convierte en {CITA_SIMPLE: \"citado\"} ) los valores entre comillas simples y dobles mantienen los espacios en blanco en ambos extremos ( FOO=\" algo \" se convierte en {FOO: ' algo '} ) los valores entre comillas dobles expanden nuevas l\u00edneas ( MULTILINEA=\"nueva\\nl\u00ednea\" se convierte en {MULTILINEA: 'nueva l\u00ednea'} se admite la comilla simple invertida ( SIGNO_ACENTO=`Esto tiene comillas 'simples' y \"dobles\" en su interior.` ) \u00bfQu\u00e9 sucede con las variables de entorno que ya estaban configuradas? Por defecto, nunca modificaremos ninguna variable de entorno que ya haya sido establecida. En particular, si hay una variable en su archivo .env que colisiona con una que ya existe en su entorno, entonces esa variable se omitir\u00e1. Si por el contrario, quieres anular process.env utiliza la opci\u00f3n override . require ( 'dotenv' ). config ({ override : true }) \u00bfPor qu\u00e9 mis variables de entorno no aparecen para React? Su c\u00f3digo React se ejecuta en Webpack, donde el m\u00f3dulo fs o incluso el propio process global no son accesibles fuera-de-la-caja. El m\u00f3dulo process.env s\u00f3lo puede ser inyectado a trav\u00e9s de la configuraci\u00f3n de Webpack. Si est\u00e1s usando react-scripts , el cual se distribuye a trav\u00e9s de create-react-app , tiene dotenv incorporado pero con una singularidad. Escriba sus variables de entorno con REACT_APP_ . Vea este stack overflow para m\u00e1s detalles. Si est\u00e1s utilizando otros frameworks (por ejemplo, Next.js, Gatsby...), debes consultar su documentaci\u00f3n para saber c\u00f3mo injectar variables de entorno en el cliente. \u00bfPuedo personalizar/escribir plugins para dotenv? S\u00ed! dotenv.config() devuelve un objeto que representa el archivo .env analizado. Esto te da todo lo que necesitas para poder establecer valores en process.env . Por ejemplo: const dotenv = require ( 'dotenv' ) const variableExpansion = require ( 'dotenv-expand' ) const miEnv = dotenv . config () variableExpansion ( miEnv ) C\u00f3mo uso dotnev con import ? Simplemente.. // index.mjs (ESM) import * as dotenv from 'dotenv' // vea https://github.com/motdotla/dotenv#como-uso-dotenv-con-import dotenv . config () import express from 'express' Un poco de historia... Cuando se ejecuta un m\u00f3dulo que contiene una sentencia import , los m\u00f3dulos que importa ser\u00e1n cargados primero, y luego se ejecuta cada bloque del m\u00f3dulo en un recorrido en profundidad del gr\u00e1fico de dependencias, evitando los ciclos al saltarse todo lo que ya se ha ejecutado. \u2013 ES6 en Profundidad: M\u00f3dulos \u00bfQu\u00e9 significa esto en lenguaje sencillo? Significa que se podr\u00edas pensar que lo siguiente funcionar\u00eda pero no lo har\u00e1. // notificarError.mjs import { Cliente } from 'mejor-servicio-para-notificar-error' export default new Client ( process . env . CLAVE_API ) // index.mjs import dotenv from 'dotenv' dotenv . config () import notificarError from './notificarError.mjs' notificarError . report ( new Error ( 'ejemplo documentado' )) process.env.CLAVE_API ser\u00e1 vacio. En su lugar, el c\u00f3digo anterior debe ser escrito como... // notificarError.mjs import { Cliente } from 'mejor-servicio-para-notificar-errores' export default new Client ( process . env . CLAVE_API ) // index.mjs import * as dotenv from 'dotenv' dotenv . config () import notificarError from './notificarError.mjs' notificarError . report ( new Error ( 'ejemplo documentado' )) \u00bfEsto tiene algo de sentido? Esto es poco poco intuitivo, pero es como funciona la importaci\u00f3n de m\u00f3dulos en ES6. Aqu\u00ed hay un ejemplo ejemplo pr\u00e1ctico de esta trampa . Existen dos arternativas a este planteamiento: Precarga dotenv: node --require dotenv/config index.js ( Nota: no es necesario usar import dotenv con este m\u00e9todo ) Cree un archivo separado que ejecutar\u00e1 config primero como se describe en este comentario #133 \u00bfQu\u00e9 pasa con la expansi\u00f3n de variable? Prueba dotenv-expand \u00bfQu\u00e9 pasa con la sincronizaci\u00f3n y la seguridad de los archivos .env? Vea dotenv-vault Gu\u00eda de contribuci\u00f3n Vea CONTRIBUTING.md REGISTRO DE CAMBIOS Vea CHANGELOG.md \u00bfQui\u00e9nes utilizan dotenv? Estos m\u00f3dulos npm dependen de \u00e9l. Los proyectos que lo ampl\u00edan suelen utilizar la palabra clave \"dotenv\" en npm .","title":"README es"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#dotenv","text":"Dotenv es un m\u00f3dulo de dependencia cero que carga las variables de entorno desde un archivo .env en process.env . El almacenamiento de la configuraci\u00f3n del entorno separado del c\u00f3digo est\u00e1 basado en la metodolog\u00eda The Twelve-Factor App .","title":"dotenv"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#instalacion","text":"# instalaci\u00f3n local (recomendado) npm install dotenv --save O installaci\u00f3n con yarn? yarn add dotenv","title":"Instalaci\u00f3n"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#uso","text":"Cree un archivo .env en la ra\u00edz de su proyecto: S3_BUCKET = \"YOURS3BUCKET\" SECRET_KEY = \"YOURSECRETKEYGOESHERE\" Tan pr\u00f3nto como sea posible en su aplicaci\u00f3n, importe y configure dotenv: require ( 'dotenv' ). config () console . log ( process . env ) // elimine esto despu\u00e9s que haya confirmado que esta funcionando .. o usa ES6? import * as dotenv from 'dotenv' // vea en https://github.com/motdotla/dotenv#como-uso-dotenv-con-import // REVISAR LINK DE REFERENCIA DE IMPORTACI\u00d3N dotenv . config () import express from 'express' Eso es todo. process.env ahora tiene las claves y los valores que definiste en tu archivo .env : require ( 'dotenv' ). config () ... s3 . getBucketCors ({ Bucket : process . env . S3_BUCKET }, function ( err , data ) {})","title":"Uso"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#valores-multilinea","text":"Si necesita variables de varias l\u00edneas, por ejemplo, claves privadas, ahora se admiten en la versi\u00f3n ( >= v15.0.0 ) con saltos de l\u00ednea: PRIVATE_KEY = \" -----BEGIN RSA PRIVATE KEY----- ... Kh9NV... ... -----END RSA PRIVATE KEY-----\" Alternativamente, puede usar comillas dobles y usar el car\u00e1cter \\n : PRIVATE_KEY = \"-----BEGIN RSA PRIVATE KEY-----\\nKh9NV...\\n-----END RSA PRIVATE KEY-----\\n\"","title":"Valores multil\u00ednea"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#comentarios","text":"Los comentarios pueden ser agregados en tu archivo o en la misma l\u00ednea: # This is a comment SECRET_KEY = YOURSECRETKEYGOESHERE # comment SECRET_HASH = \"something-with-a-#-hash\" Los comentarios comienzan donde existe un # , entonces, si su valor contiene un # , enci\u00e9rrelo entre comillas. Este es un cambio importante desde la versi\u00f3n >= v15.0.0 en adelante.","title":"Comentarios"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#analisis","text":"El motor que analiza el contenido de su archivo que contiene variables de entorno est\u00e1 disponible para su uso. Este Acepta una Cadena o un B\u00fafer y devolver\u00e1 un Objeto con las claves y los valores analizados. const dotenv = require ( 'dotenv' ) const buf = Buffer . from ( 'BASICO=basico' ) const config = dotenv . parse ( buf ) // devolver\u00e1 un objeto console . log ( typeof config , config ) // objeto { BASICO : 'basico' }","title":"An\u00e1lisis"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#precarga","text":"Puede usar el --require ( -r ) opci\u00f3n de l\u00ednea de comando para precargar dotenv. Al hacer esto, no necesita requerir ni cargar dotnev en el c\u00f3digo de su aplicaci\u00f3n. $ node -r dotenv/config tu_script.js Las opciones de configuraci\u00f3n a continuaci\u00f3n se admiten como argumentos de l\u00ednea de comandos en el formato dotenv_config_<option>=value $ node -r dotenv/config tu_script.js dotenv_config_path = /custom/path/to/.env dotenv_config_debug = true Adem\u00e1s, puede usar variables de entorno para establecer opciones de configuraci\u00f3n. Los argumentos de l\u00ednea de comandos preceder\u00e1n a estos. $ DOTENV_CONFIG_<OPTION> = value node -r dotenv/config tu_script.js $ DOTENV_CONFIG_ENCODING = latin1 DOTENV_CONFIG_DEBUG = true node -r dotenv/config tu_script.js dotenv_config_path = /custom/path/to/.env","title":"Precarga"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#expansion-variable","text":"Necesitaras agregar el valor de otro variable en una de sus variables? Usa dotenv-expand .","title":"Expansi\u00f3n Variable"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#sincronizando","text":"Necesitas mentener sincronizados los archivos .env entre maquinas, entornos, o miembros del equipo? Usa dotenv-vault .","title":"Sincronizando"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#ejemplos","text":"Vea ejemplos sobre el uso de dotenv con varios frameworks, lenguajes y configuraciones. nodejs nodejs (depurar en) nodejs (anular en) esm esm (precarga) typescript typescript parse typescript config webpack webpack (plugin) react react (typescript) express nestjs","title":"Ejemplos"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#documentacion","text":"Dotenv expone dos funciones: configuraci\u00f3n analizar","title":"Documentaci\u00f3n"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#configuracion","text":"Configuraci\u00f3n leer\u00e1 su archivo .env , analizar\u00e1 el contenido, lo asignar\u00e1 a process.env , y devolver\u00e1 un Objeto con una clave parsed que contiene el contenido cargado o una clave error si falla. const result = dotenv . config () if ( result . error ) { throw result . error } console . log ( result . parsed ) Adicionalmente, puede pasar opciones a configuracion .","title":"Configuraci\u00f3n"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#opciones","text":"","title":"Opciones"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#ruta","text":"Por defecto: path.resolve(process.cwd(), '.env') Especifique una ruta personalizada si el archivo que contiene las variables de entorno se encuentra localizado en otro lugar. require ( 'dotenv' ). config ({ path : '/personalizado/ruta/a/.env' })","title":"Ruta"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#codificacion","text":"Por defecto: utf8 Especifique la codificaci\u00f3n del archivo que contiene las variables de entorno. require ( 'dotenv' ). config ({ encoding : 'latin1' })","title":"Codificaci\u00f3n"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#depurar","text":"Por defecto: false Active el registro de ayuda para depurar por qu\u00e9 ciertas claves o valores no se inician como lo esperabas. require ( 'dotenv' ). config ({ debug : process . env . DEBUG })","title":"Depurar"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#anular","text":"Por defecto: false Anule cualquier variable de entorno que ya se haya configurada en su maquina con los valores de su archivo .env. require ( 'dotenv' ). config ({ override : true })","title":"Anular"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#analizar","text":"El motor que analiza el contenido del archivo que contiene las variables de entorno est\u00e1 disponible para su uso. Acepta una Cadena o un B\u00fafer y retornar\u00e1 un objecto con los valores analizados. const dotenv = require ( 'dotenv' ) const buf = Buffer . from ( 'BASICO=basico' ) const config = dotenv . parse ( buf ) // devolver\u00e1 un objeto console . log ( typeof config , config ) // objeto { BASICO : 'basico' }","title":"Analizar"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#opciones_1","text":"","title":"Opciones"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#depurar_1","text":"Por defecto: false Active el registro de ayuda para depurar por qu\u00e9 ciertas claves o valores no se inician como lo esperabas. const dotenv = require ( 'dotenv' ) const buf = Buffer . from ( 'hola mundo' ) const opt = { debug : true } const config = dotenv . parse ( buf , opt ) // espere por un mensaje de depuraci\u00f3n porque el b\u00fafer no esta listo KEY=VAL","title":"Depurar"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#faq","text":"","title":"FAQ"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#por-que-el-archivo-env-no-carga-mis-variables-de-entorno-correctamente","text":"Lo m\u00e1s probable es que su archivo .env no est\u00e9 en el lugar correcto. Vea este stack overflow . Active el modo de depuraci\u00f3n y vuelva a intentarlo... require ( 'dotenv' ). config ({ debug : true }) Recibir\u00e1 un error apropiado en su consola.","title":"\u00bfPor qu\u00e9 el archivo .env no carga mis variables de entorno correctamente?"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#debo-confirmar-mi-archivo-env","text":"No. Recomendamos enf\u00e1ticamente no enviar su archivo .env a la versi\u00f3n de control. Solo debe incluir los valores especificos del entorno, como la base de datos, contrase\u00f1as o claves API.","title":"\u00bfDebo confirmar mi archivo .env?"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#deberia-tener-multiples-archivos-env","text":"No. Recomendamos enf\u00e1ticamente no tener un archivo .env \"principal\" y un archivo .env de \"entorno\" como .env.test . Su configuraci\u00f3n debe variar entre implementaciones y no debe compartir valores entre entornos. En una Aplicaci\u00f3n de Doce Factores, las variables de entorno son controles diferenciados, cada uno totalmente independiente a otras variables de entorno. Nunca se agrupan como \"entornos\", sino que se gestionan de manera independiente para cada despliegue. Este es un modelo que se escala sin problemas a medida que la aplicaci\u00f3n se expande de forma natural en m\u00e1s despliegues a lo largo de su vida. \u2013 La Apliaci\u00f3n de los Doce Factores","title":"\u00bfDeber\u00eda tener multiples archivos .env?"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#que-reglas-sigue-el-motor-de-analisis","text":"El motor de an\u00e1lisis actualmente admite las siguientes reglas: BASICO=basico se convierte en {BASICO: 'basico'} las l\u00edneas vac\u00edas se saltan las l\u00edneas que comienzan con # se tratan como comentarios # marca el comienzo de un comentario (a menos que el valor est\u00e9 entre comillas) valores vac\u00edos se convierten en cadenas vac\u00edas ( VACIO= se convierte en {VACIO: ''} ) las comillas internas se mantienen (piensa en JSON) ( JSON={\"foo\": \"bar\"} se convierte en {JSON:\"{\\\"foo\\\": \\\"bar\\\"}\" ) los espacios en blanco se eliminan de ambos extremos de los valores no citanos (aprende m\u00e1s en trim ) ( FOO= algo se convierte en {FOO: 'algo'} ) los valores entre comillas simples y dobles se escapan ( CITA_SIMPLE='citado' se convierte en {CITA_SIMPLE: \"citado\"} ) los valores entre comillas simples y dobles mantienen los espacios en blanco en ambos extremos ( FOO=\" algo \" se convierte en {FOO: ' algo '} ) los valores entre comillas dobles expanden nuevas l\u00edneas ( MULTILINEA=\"nueva\\nl\u00ednea\" se convierte en {MULTILINEA: 'nueva l\u00ednea'} se admite la comilla simple invertida ( SIGNO_ACENTO=`Esto tiene comillas 'simples' y \"dobles\" en su interior.` )","title":"\u00bfQu\u00e9 reglas sigue el motor de an\u00e1lisis?"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#que-sucede-con-las-variables-de-entorno-que-ya-estaban-configuradas","text":"Por defecto, nunca modificaremos ninguna variable de entorno que ya haya sido establecida. En particular, si hay una variable en su archivo .env que colisiona con una que ya existe en su entorno, entonces esa variable se omitir\u00e1. Si por el contrario, quieres anular process.env utiliza la opci\u00f3n override . require ( 'dotenv' ). config ({ override : true })","title":"\u00bfQu\u00e9 sucede con las variables de entorno que ya estaban configuradas?"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#por-que-mis-variables-de-entorno-no-aparecen-para-react","text":"Su c\u00f3digo React se ejecuta en Webpack, donde el m\u00f3dulo fs o incluso el propio process global no son accesibles fuera-de-la-caja. El m\u00f3dulo process.env s\u00f3lo puede ser inyectado a trav\u00e9s de la configuraci\u00f3n de Webpack. Si est\u00e1s usando react-scripts , el cual se distribuye a trav\u00e9s de create-react-app , tiene dotenv incorporado pero con una singularidad. Escriba sus variables de entorno con REACT_APP_ . Vea este stack overflow para m\u00e1s detalles. Si est\u00e1s utilizando otros frameworks (por ejemplo, Next.js, Gatsby...), debes consultar su documentaci\u00f3n para saber c\u00f3mo injectar variables de entorno en el cliente.","title":"\u00bfPor qu\u00e9 mis variables de entorno no aparecen para React?"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#puedo-personalizarescribir-plugins-para-dotenv","text":"S\u00ed! dotenv.config() devuelve un objeto que representa el archivo .env analizado. Esto te da todo lo que necesitas para poder establecer valores en process.env . Por ejemplo: const dotenv = require ( 'dotenv' ) const variableExpansion = require ( 'dotenv-expand' ) const miEnv = dotenv . config () variableExpansion ( miEnv )","title":"\u00bfPuedo personalizar/escribir plugins para dotenv?"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#como-uso-dotnev-con-import","text":"Simplemente.. // index.mjs (ESM) import * as dotenv from 'dotenv' // vea https://github.com/motdotla/dotenv#como-uso-dotenv-con-import dotenv . config () import express from 'express' Un poco de historia... Cuando se ejecuta un m\u00f3dulo que contiene una sentencia import , los m\u00f3dulos que importa ser\u00e1n cargados primero, y luego se ejecuta cada bloque del m\u00f3dulo en un recorrido en profundidad del gr\u00e1fico de dependencias, evitando los ciclos al saltarse todo lo que ya se ha ejecutado. \u2013 ES6 en Profundidad: M\u00f3dulos \u00bfQu\u00e9 significa esto en lenguaje sencillo? Significa que se podr\u00edas pensar que lo siguiente funcionar\u00eda pero no lo har\u00e1. // notificarError.mjs import { Cliente } from 'mejor-servicio-para-notificar-error' export default new Client ( process . env . CLAVE_API ) // index.mjs import dotenv from 'dotenv' dotenv . config () import notificarError from './notificarError.mjs' notificarError . report ( new Error ( 'ejemplo documentado' )) process.env.CLAVE_API ser\u00e1 vacio. En su lugar, el c\u00f3digo anterior debe ser escrito como... // notificarError.mjs import { Cliente } from 'mejor-servicio-para-notificar-errores' export default new Client ( process . env . CLAVE_API ) // index.mjs import * as dotenv from 'dotenv' dotenv . config () import notificarError from './notificarError.mjs' notificarError . report ( new Error ( 'ejemplo documentado' )) \u00bfEsto tiene algo de sentido? Esto es poco poco intuitivo, pero es como funciona la importaci\u00f3n de m\u00f3dulos en ES6. Aqu\u00ed hay un ejemplo ejemplo pr\u00e1ctico de esta trampa . Existen dos arternativas a este planteamiento: Precarga dotenv: node --require dotenv/config index.js ( Nota: no es necesario usar import dotenv con este m\u00e9todo ) Cree un archivo separado que ejecutar\u00e1 config primero como se describe en este comentario #133","title":"C\u00f3mo uso dotnev con import?"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#que-pasa-con-la-expansion-de-variable","text":"Prueba dotenv-expand","title":"\u00bfQu\u00e9 pasa con la expansi\u00f3n de variable?"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#que-pasa-con-la-sincronizacion-y-la-seguridad-de-los-archivos-env","text":"Vea dotenv-vault","title":"\u00bfQu\u00e9 pasa con la sincronizaci\u00f3n y la seguridad de los archivos .env?"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#guia-de-contribucion","text":"Vea CONTRIBUTING.md","title":"Gu\u00eda de contribuci\u00f3n"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#registro-de-cambios","text":"Vea CHANGELOG.md","title":"REGISTRO DE CAMBIOS"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#quienes-utilizan-dotenv","text":"Estos m\u00f3dulos npm dependen de \u00e9l. Los proyectos que lo ampl\u00edan suelen utilizar la palabra clave \"dotenv\" en npm .","title":"\u00bfQui\u00e9nes utilizan dotenv?"},{"location":"system-desing/crud-app/JS/server/node_modules/dunder-proto/","text":"dunder-proto If available, the Object.prototype.__proto__ accessor and mutator, call-bound. Getting started npm install --save dunder-proto Usage/Examples const assert = require ( 'assert' ); const getDunder = require ( 'dunder-proto/get' ); const setDunder = require ( 'dunder-proto/set' ); const obj = {}; assert . equal ( 'toString' in obj , true ); assert . equal ( getDunder ( obj ), Object . prototype ); setDunder ( obj , null ); assert . equal ( 'toString' in obj , false ); assert . equal ( getDunder ( obj ), null ); Tests Clone the repo, npm install , and run npm test","title":"dunder-proto Version Badge"},{"location":"system-desing/crud-app/JS/server/node_modules/dunder-proto/#dunder-proto","text":"If available, the Object.prototype.__proto__ accessor and mutator, call-bound.","title":"dunder-proto"},{"location":"system-desing/crud-app/JS/server/node_modules/dunder-proto/#getting-started","text":"npm install --save dunder-proto","title":"Getting started"},{"location":"system-desing/crud-app/JS/server/node_modules/dunder-proto/#usageexamples","text":"const assert = require ( 'assert' ); const getDunder = require ( 'dunder-proto/get' ); const setDunder = require ( 'dunder-proto/set' ); const obj = {}; assert . equal ( 'toString' in obj , true ); assert . equal ( getDunder ( obj ), Object . prototype ); setDunder ( obj , null ); assert . equal ( 'toString' in obj , false ); assert . equal ( getDunder ( obj ), null );","title":"Usage/Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/dunder-proto/#tests","text":"Clone the repo, npm install , and run npm test","title":"Tests"},{"location":"system-desing/crud-app/JS/server/node_modules/dunder-proto/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.1 - 2024-12-16 Commits [Fix] do not crash when --disable-proto=throw 6c367d9 [Tests] ensure noproto tests only use the current version of dunder-proto b02365b [Dev Deps] update @arethetypeswrong/cli , @types/tape e3c5c3b [Deps] update call-bind-apply-helpers 19f1da0 v1.0.0 - 2024-12-06 Commits Initial implementation, tests, readme, types a5b74b0 Initial commit 73fb5a3 npm init 80152dc Only apps should have lockfiles 03e6660","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/dunder-proto/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/dunder-proto/CHANGELOG/#v101-2024-12-16","text":"","title":"v1.0.1 - 2024-12-16"},{"location":"system-desing/crud-app/JS/server/node_modules/dunder-proto/CHANGELOG/#commits","text":"[Fix] do not crash when --disable-proto=throw 6c367d9 [Tests] ensure noproto tests only use the current version of dunder-proto b02365b [Dev Deps] update @arethetypeswrong/cli , @types/tape e3c5c3b [Deps] update call-bind-apply-helpers 19f1da0","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/dunder-proto/CHANGELOG/#v100-2024-12-06","text":"","title":"v1.0.0 - 2024-12-06"},{"location":"system-desing/crud-app/JS/server/node_modules/dunder-proto/CHANGELOG/#commits_1","text":"Initial implementation, tests, readme, types a5b74b0 Initial commit 73fb5a3 npm init 80152dc Only apps should have lockfiles 03e6660","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/ecdsa-sig-formatter/","text":"ecdsa-sig-formatter Translate between JOSE and ASN.1/DER encodings for ECDSA signatures Install npm install ecdsa-sig-formatter --save Usage var format = require ( 'ecdsa-sig-formatter' ); var derSignature = '..' ; // asn.1/DER encoded ecdsa signature var joseSignature = format . derToJose ( derSignature ); API .derToJose(Buffer|String signature, String alg) -> String Convert the ASN.1/DER encoded signature to a JOSE-style concatenated signature. Returns a base64 url encoded String . If signature is a String , it should be base64 encoded alg must be one of ES256 , ES384 or ES512 .joseToDer(Buffer|String signature, String alg) -> Buffer Convert the JOSE-style concatenated signature to an ASN.1/DER encoded signature. Returns a Buffer If signature is a String , it should be base64 url encoded alg must be one of ES256 , ES384 or ES512 Contributing Fork the repository. Committing directly against this repository is highly discouraged. Make your modifications in a branch, updating and writing new unit tests as necessary in the spec directory. Ensure that all tests pass with npm test rebase your changes against master. Do not merge . Submit a pull request to this repository. Wait for tests to run and someone to chime in. Code Style This repository is configured with EditorConfig and ESLint rules.","title":"ecdsa-sig-formatter"},{"location":"system-desing/crud-app/JS/server/node_modules/ecdsa-sig-formatter/#ecdsa-sig-formatter","text":"Translate between JOSE and ASN.1/DER encodings for ECDSA signatures","title":"ecdsa-sig-formatter"},{"location":"system-desing/crud-app/JS/server/node_modules/ecdsa-sig-formatter/#install","text":"npm install ecdsa-sig-formatter --save","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/ecdsa-sig-formatter/#usage","text":"var format = require ( 'ecdsa-sig-formatter' ); var derSignature = '..' ; // asn.1/DER encoded ecdsa signature var joseSignature = format . derToJose ( derSignature );","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/ecdsa-sig-formatter/#api","text":"","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/ecdsa-sig-formatter/#dertojosebufferstring-signature-string-alg-string","text":"Convert the ASN.1/DER encoded signature to a JOSE-style concatenated signature. Returns a base64 url encoded String . If signature is a String , it should be base64 encoded alg must be one of ES256 , ES384 or ES512","title":".derToJose(Buffer|String signature, String alg) -&gt; String"},{"location":"system-desing/crud-app/JS/server/node_modules/ecdsa-sig-formatter/#josetoderbufferstring-signature-string-alg-buffer","text":"Convert the JOSE-style concatenated signature to an ASN.1/DER encoded signature. Returns a Buffer If signature is a String , it should be base64 url encoded alg must be one of ES256 , ES384 or ES512","title":".joseToDer(Buffer|String signature, String alg) -&gt; Buffer"},{"location":"system-desing/crud-app/JS/server/node_modules/ecdsa-sig-formatter/#contributing","text":"Fork the repository. Committing directly against this repository is highly discouraged. Make your modifications in a branch, updating and writing new unit tests as necessary in the spec directory. Ensure that all tests pass with npm test rebase your changes against master. Do not merge . Submit a pull request to this repository. Wait for tests to run and someone to chime in.","title":"Contributing"},{"location":"system-desing/crud-app/JS/server/node_modules/ecdsa-sig-formatter/#code-style","text":"This repository is configured with EditorConfig and ESLint rules.","title":"Code Style"},{"location":"system-desing/crud-app/JS/server/node_modules/ee-first/","text":"EE First Get the first event in a set of event emitters and event pairs, then clean up after itself. Install $ npm install ee-first API var first = require ( 'ee-first' ) first(arr, listener) Invoke listener on the first event from the list specified in arr . arr is an array of arrays, with each array in the format [ee, ...event] . listener will be called only once, the first time any of the given events are emitted. If error is one of the listened events, then if that fires first, the listener will be given the err argument. The listener is invoked as listener(err, ee, event, args) , where err is the first argument emitted from an error event, if applicable; ee is the event emitter that fired; event is the string event name that fired; and args is an array of the arguments that were emitted on the event. var ee1 = new EventEmitter () var ee2 = new EventEmitter () first ([ [ ee1 , 'close' , 'end' , 'error' ], [ ee2 , 'error' ] ], function ( err , ee , event , args ) { // listener invoked }) .cancel() The group of listeners can be cancelled before being invoked and have all the event listeners removed from the underlying event emitters. var thunk = first ([ [ ee1 , 'close' , 'end' , 'error' ], [ ee2 , 'error' ] ], function ( err , ee , event , args ) { // listener invoked }) // cancel and clean up thunk . cancel ()","title":"EE First"},{"location":"system-desing/crud-app/JS/server/node_modules/ee-first/#ee-first","text":"Get the first event in a set of event emitters and event pairs, then clean up after itself.","title":"EE First"},{"location":"system-desing/crud-app/JS/server/node_modules/ee-first/#install","text":"$ npm install ee-first","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/ee-first/#api","text":"var first = require ( 'ee-first' )","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/ee-first/#firstarr-listener","text":"Invoke listener on the first event from the list specified in arr . arr is an array of arrays, with each array in the format [ee, ...event] . listener will be called only once, the first time any of the given events are emitted. If error is one of the listened events, then if that fires first, the listener will be given the err argument. The listener is invoked as listener(err, ee, event, args) , where err is the first argument emitted from an error event, if applicable; ee is the event emitter that fired; event is the string event name that fired; and args is an array of the arguments that were emitted on the event. var ee1 = new EventEmitter () var ee2 = new EventEmitter () first ([ [ ee1 , 'close' , 'end' , 'error' ], [ ee2 , 'error' ] ], function ( err , ee , event , args ) { // listener invoked })","title":"first(arr, listener)"},{"location":"system-desing/crud-app/JS/server/node_modules/ee-first/#cancel","text":"The group of listeners can be cancelled before being invoked and have all the event listeners removed from the underlying event emitters. var thunk = first ([ [ ee1 , 'close' , 'end' , 'error' ], [ ee2 , 'error' ] ], function ( err , ee , event , args ) { // listener invoked }) // cancel and clean up thunk . cancel ()","title":".cancel()"},{"location":"system-desing/crud-app/JS/server/node_modules/encodeurl/","text":"Encode URL Encode a URL to a percent-encoded form, excluding already-encoded sequences. Installation npm install encodeurl API var encodeUrl = require ( 'encodeurl' ) encodeUrl(url) Encode a URL to a percent-encoded form, excluding already-encoded sequences. This function accepts a URL and encodes all the non-URL code points (as UTF-8 byte sequences). It will not encode the \"%\" character unless it is not part of a valid sequence ( %20 will be left as-is, but %foo will be encoded as %25foo ). This encode is meant to be \"safe\" and does not throw errors. It will try as hard as it can to properly encode the given URL, including replacing any raw, unpaired surrogate pairs with the Unicode replacement character prior to encoding. Examples Encode a URL containing user-controlled data var encodeUrl = require ( 'encodeurl' ) var escapeHtml = require ( 'escape-html' ) http . createServer ( function onRequest ( req , res ) { // get encoded form of inbound url var url = encodeUrl ( req . url ) // create html message var body = '<p>Location ' + escapeHtml ( url ) + ' not found</p>' // send a 404 res . statusCode = 404 res . setHeader ( 'Content-Type' , 'text/html; charset=UTF-8' ) res . setHeader ( 'Content-Length' , String ( Buffer . byteLength ( body , 'utf-8' ))) res . end ( body , 'utf-8' ) }) Encode a URL for use in a header field var encodeUrl = require ( 'encodeurl' ) var escapeHtml = require ( 'escape-html' ) var url = require ( 'url' ) http . createServer ( function onRequest ( req , res ) { // parse inbound url var href = url . parse ( req ) // set new host for redirect href . host = 'localhost' href . protocol = 'https:' href . slashes = true // create location header var location = encodeUrl ( url . format ( href )) // create html message var body = '<p>Redirecting to new site: ' + escapeHtml ( location ) + '</p>' // send a 301 res . statusCode = 301 res . setHeader ( 'Content-Type' , 'text/html; charset=UTF-8' ) res . setHeader ( 'Content-Length' , String ( Buffer . byteLength ( body , 'utf-8' ))) res . setHeader ( 'Location' , location ) res . end ( body , 'utf-8' ) }) Similarities This function is similar to the intrinsic function encodeURI . However, it will not encode: The \\ , ^ , or | characters The % character when it's part of a valid sequence [ and ] (for IPv6 hostnames) Replaces raw, unpaired surrogate pairs with the Unicode replacement character As a result, the encoding aligns closely with the behavior in the WHATWG URL specification . However, this package only encodes strings and does not do any URL parsing or formatting. It is expected that any output from new URL(url) will not change when used with this package, as the output has already been encoded. Additionally, if we were to encode before new URL(url) , we do not expect the before and after encoded formats to be parsed any differently. Testing $ npm test $ npm run lint References RFC 3986: Uniform Resource Identifier (URI): Generic Syntax WHATWG URL Living Standard License MIT","title":"Encode URL"},{"location":"system-desing/crud-app/JS/server/node_modules/encodeurl/#encode-url","text":"Encode a URL to a percent-encoded form, excluding already-encoded sequences.","title":"Encode URL"},{"location":"system-desing/crud-app/JS/server/node_modules/encodeurl/#installation","text":"npm install encodeurl","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/encodeurl/#api","text":"var encodeUrl = require ( 'encodeurl' )","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/encodeurl/#encodeurlurl","text":"Encode a URL to a percent-encoded form, excluding already-encoded sequences. This function accepts a URL and encodes all the non-URL code points (as UTF-8 byte sequences). It will not encode the \"%\" character unless it is not part of a valid sequence ( %20 will be left as-is, but %foo will be encoded as %25foo ). This encode is meant to be \"safe\" and does not throw errors. It will try as hard as it can to properly encode the given URL, including replacing any raw, unpaired surrogate pairs with the Unicode replacement character prior to encoding.","title":"encodeUrl(url)"},{"location":"system-desing/crud-app/JS/server/node_modules/encodeurl/#examples","text":"","title":"Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/encodeurl/#encode-a-url-containing-user-controlled-data","text":"var encodeUrl = require ( 'encodeurl' ) var escapeHtml = require ( 'escape-html' ) http . createServer ( function onRequest ( req , res ) { // get encoded form of inbound url var url = encodeUrl ( req . url ) // create html message var body = '<p>Location ' + escapeHtml ( url ) + ' not found</p>' // send a 404 res . statusCode = 404 res . setHeader ( 'Content-Type' , 'text/html; charset=UTF-8' ) res . setHeader ( 'Content-Length' , String ( Buffer . byteLength ( body , 'utf-8' ))) res . end ( body , 'utf-8' ) })","title":"Encode a URL containing user-controlled data"},{"location":"system-desing/crud-app/JS/server/node_modules/encodeurl/#encode-a-url-for-use-in-a-header-field","text":"var encodeUrl = require ( 'encodeurl' ) var escapeHtml = require ( 'escape-html' ) var url = require ( 'url' ) http . createServer ( function onRequest ( req , res ) { // parse inbound url var href = url . parse ( req ) // set new host for redirect href . host = 'localhost' href . protocol = 'https:' href . slashes = true // create location header var location = encodeUrl ( url . format ( href )) // create html message var body = '<p>Redirecting to new site: ' + escapeHtml ( location ) + '</p>' // send a 301 res . statusCode = 301 res . setHeader ( 'Content-Type' , 'text/html; charset=UTF-8' ) res . setHeader ( 'Content-Length' , String ( Buffer . byteLength ( body , 'utf-8' ))) res . setHeader ( 'Location' , location ) res . end ( body , 'utf-8' ) })","title":"Encode a URL for use in a header field"},{"location":"system-desing/crud-app/JS/server/node_modules/encodeurl/#similarities","text":"This function is similar to the intrinsic function encodeURI . However, it will not encode: The \\ , ^ , or | characters The % character when it's part of a valid sequence [ and ] (for IPv6 hostnames) Replaces raw, unpaired surrogate pairs with the Unicode replacement character As a result, the encoding aligns closely with the behavior in the WHATWG URL specification . However, this package only encodes strings and does not do any URL parsing or formatting. It is expected that any output from new URL(url) will not change when used with this package, as the output has already been encoded. Additionally, if we were to encode before new URL(url) , we do not expect the before and after encoded formats to be parsed any differently.","title":"Similarities"},{"location":"system-desing/crud-app/JS/server/node_modules/encodeurl/#testing","text":"$ npm test $ npm run lint","title":"Testing"},{"location":"system-desing/crud-app/JS/server/node_modules/encodeurl/#references","text":"RFC 3986: Uniform Resource Identifier (URI): Generic Syntax WHATWG URL Living Standard","title":"References"},{"location":"system-desing/crud-app/JS/server/node_modules/encodeurl/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/es-define-property/","text":"es-define-property Object.defineProperty , but not IE 8's broken one. Example const assert = require ( 'assert' ); const $defineProperty = require ( 'es-define-property' ); if ( $defineProperty ) { assert . equal ( $defineProperty , Object . defineProperty ); } else if ( Object . defineProperty ) { assert . equal ( $defineProperty , false , 'this is IE 8' ); } else { assert . equal ( $defineProperty , false , 'this is an ES3 engine' ); } Tests Simply clone the repo, npm install , and run npm test Security Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.","title":"es-define-property Version Badge"},{"location":"system-desing/crud-app/JS/server/node_modules/es-define-property/#es-define-property","text":"Object.defineProperty , but not IE 8's broken one.","title":"es-define-property"},{"location":"system-desing/crud-app/JS/server/node_modules/es-define-property/#example","text":"const assert = require ( 'assert' ); const $defineProperty = require ( 'es-define-property' ); if ( $defineProperty ) { assert . equal ( $defineProperty , Object . defineProperty ); } else if ( Object . defineProperty ) { assert . equal ( $defineProperty , false , 'this is IE 8' ); } else { assert . equal ( $defineProperty , false , 'this is an ES3 engine' ); }","title":"Example"},{"location":"system-desing/crud-app/JS/server/node_modules/es-define-property/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"system-desing/crud-app/JS/server/node_modules/es-define-property/#security","text":"Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.","title":"Security"},{"location":"system-desing/crud-app/JS/server/node_modules/es-define-property/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.1 - 2024-12-06 Commits [types] use shared tsconfig 954a663 [actions] split out node 10-20, and 20+ 3a8e84b [Dev Deps] update @ljharb/eslint-config , @ljharb/tsconfig , @types/get-intrinsic , @types/tape , auto-changelog , gopd , tape 86ae27b [Refactor] avoid using get-intrinsic 02480c0 [Tests] replace aud with npm audit f6093ff [Tests] configure testling 7139e66 [Dev Deps] update tape b901b51 [Tests] fix types in tests 469d269 [Dev Deps] add missing peer dep 733acfb v1.0.0 - 2024-02-12 Commits Initial implementation, tests, readme, types 3e154e1 Initial commit 07d98de npm init c4eb634 Only apps should have lockfiles 7af86ec","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/es-define-property/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/es-define-property/CHANGELOG/#v101-2024-12-06","text":"","title":"v1.0.1 - 2024-12-06"},{"location":"system-desing/crud-app/JS/server/node_modules/es-define-property/CHANGELOG/#commits","text":"[types] use shared tsconfig 954a663 [actions] split out node 10-20, and 20+ 3a8e84b [Dev Deps] update @ljharb/eslint-config , @ljharb/tsconfig , @types/get-intrinsic , @types/tape , auto-changelog , gopd , tape 86ae27b [Refactor] avoid using get-intrinsic 02480c0 [Tests] replace aud with npm audit f6093ff [Tests] configure testling 7139e66 [Dev Deps] update tape b901b51 [Tests] fix types in tests 469d269 [Dev Deps] add missing peer dep 733acfb","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/es-define-property/CHANGELOG/#v100-2024-02-12","text":"","title":"v1.0.0 - 2024-02-12"},{"location":"system-desing/crud-app/JS/server/node_modules/es-define-property/CHANGELOG/#commits_1","text":"Initial implementation, tests, readme, types 3e154e1 Initial commit 07d98de npm init c4eb634 Only apps should have lockfiles 7af86ec","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/","text":"es-errors A simple cache for a few of the JS Error constructors. Example const assert = require ( 'assert' ); const Base = require ( 'es-errors' ); const Eval = require ( 'es-errors/eval' ); const Range = require ( 'es-errors/range' ); const Ref = require ( 'es-errors/ref' ); const Syntax = require ( 'es-errors/syntax' ); const Type = require ( 'es-errors/type' ); const URI = require ( 'es-errors/uri' ); assert . equal ( Base , Error ); assert . equal ( Eval , EvalError ); assert . equal ( Range , RangeError ); assert . equal ( Ref , ReferenceError ); assert . equal ( Syntax , SyntaxError ); assert . equal ( Type , TypeError ); assert . equal ( URI , URIError ); Tests Simply clone the repo, npm install , and run npm test Security Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.","title":"es-errors Version Badge"},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/#es-errors","text":"A simple cache for a few of the JS Error constructors.","title":"es-errors"},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/#example","text":"const assert = require ( 'assert' ); const Base = require ( 'es-errors' ); const Eval = require ( 'es-errors/eval' ); const Range = require ( 'es-errors/range' ); const Ref = require ( 'es-errors/ref' ); const Syntax = require ( 'es-errors/syntax' ); const Type = require ( 'es-errors/type' ); const URI = require ( 'es-errors/uri' ); assert . equal ( Base , Error ); assert . equal ( Eval , EvalError ); assert . equal ( Range , RangeError ); assert . equal ( Ref , ReferenceError ); assert . equal ( Syntax , SyntaxError ); assert . equal ( Type , TypeError ); assert . equal ( URI , URIError );","title":"Example"},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/#security","text":"Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.","title":"Security"},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.3.0 - 2024-02-05 Commits [New] add EvalError and URIError 1927627 v1.2.1 - 2024-02-04 Commits [Fix] add missing exports entry 5bb5f28 v1.2.0 - 2024-02-04 Commits [New] add ReferenceError 6d8cf5b v1.1.0 - 2024-02-04 Commits [New] add base Error 2983ab6 v1.0.0 - 2024-02-03 Commits Initial implementation, tests, readme, type 8f47631 Initial commit ea5d099 npm init 6f5ebf9 Only apps should have lockfiles e1a0aeb [meta] add sideEffects flag a9c7d46","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/CHANGELOG/#v130-2024-02-05","text":"","title":"v1.3.0 - 2024-02-05"},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/CHANGELOG/#commits","text":"[New] add EvalError and URIError 1927627","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/CHANGELOG/#v121-2024-02-04","text":"","title":"v1.2.1 - 2024-02-04"},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/CHANGELOG/#commits_1","text":"[Fix] add missing exports entry 5bb5f28","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/CHANGELOG/#v120-2024-02-04","text":"","title":"v1.2.0 - 2024-02-04"},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/CHANGELOG/#commits_2","text":"[New] add ReferenceError 6d8cf5b","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/CHANGELOG/#v110-2024-02-04","text":"","title":"v1.1.0 - 2024-02-04"},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/CHANGELOG/#commits_3","text":"[New] add base Error 2983ab6","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/CHANGELOG/#v100-2024-02-03","text":"","title":"v1.0.0 - 2024-02-03"},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/CHANGELOG/#commits_4","text":"Initial implementation, tests, readme, type 8f47631 Initial commit ea5d099 npm init 6f5ebf9 Only apps should have lockfiles e1a0aeb [meta] add sideEffects flag a9c7d46","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/es-object-atoms/","text":"es-object-atoms ES Object-related atoms: Object, ToObject, RequireObjectCoercible. Example const assert = require ( 'assert' ); const $Object = require ( 'es-object-atoms' ); const isObject = require ( 'es-object-atoms/isObject' ); const ToObject = require ( 'es-object-atoms/ToObject' ); const RequireObjectCoercible = require ( 'es-object-atoms/RequireObjectCoercible' ); assert . equal ( $Object , Object ); assert . throws (() => ToObject ( null ), TypeError ); assert . throws (() => ToObject ( undefined ), TypeError ); assert . throws (() => RequireObjectCoercible ( null ), TypeError ); assert . throws (() => RequireObjectCoercible ( undefined ), TypeError ); assert . equal ( isObject ( undefined ), false ); assert . equal ( isObject ( null ), false ); assert . equal ( isObject ({}), true ); assert . equal ( isObject ([]), true ); assert . equal ( isObject ( function () {}), true ); assert . deepEqual ( RequireObjectCoercible ( true ), true ); assert . deepEqual ( ToObject ( true ), Object ( true )); const obj = {}; assert . equal ( RequireObjectCoercible ( obj ), obj ); assert . equal ( ToObject ( obj ), obj ); Tests Simply clone the repo, npm install , and run npm test Security Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.","title":"es-object-atoms Version Badge"},{"location":"system-desing/crud-app/JS/server/node_modules/es-object-atoms/#es-object-atoms","text":"ES Object-related atoms: Object, ToObject, RequireObjectCoercible.","title":"es-object-atoms"},{"location":"system-desing/crud-app/JS/server/node_modules/es-object-atoms/#example","text":"const assert = require ( 'assert' ); const $Object = require ( 'es-object-atoms' ); const isObject = require ( 'es-object-atoms/isObject' ); const ToObject = require ( 'es-object-atoms/ToObject' ); const RequireObjectCoercible = require ( 'es-object-atoms/RequireObjectCoercible' ); assert . equal ( $Object , Object ); assert . throws (() => ToObject ( null ), TypeError ); assert . throws (() => ToObject ( undefined ), TypeError ); assert . throws (() => RequireObjectCoercible ( null ), TypeError ); assert . throws (() => RequireObjectCoercible ( undefined ), TypeError ); assert . equal ( isObject ( undefined ), false ); assert . equal ( isObject ( null ), false ); assert . equal ( isObject ({}), true ); assert . equal ( isObject ([]), true ); assert . equal ( isObject ( function () {}), true ); assert . deepEqual ( RequireObjectCoercible ( true ), true ); assert . deepEqual ( ToObject ( true ), Object ( true )); const obj = {}; assert . equal ( RequireObjectCoercible ( obj ), obj ); assert . equal ( ToObject ( obj ), obj );","title":"Example"},{"location":"system-desing/crud-app/JS/server/node_modules/es-object-atoms/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"system-desing/crud-app/JS/server/node_modules/es-object-atoms/#security","text":"Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.","title":"Security"},{"location":"system-desing/crud-app/JS/server/node_modules/es-object-atoms/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.1.1 - 2025-01-14 Commits [types] ToObject : improve types cfe8c8a v1.1.0 - 2025-01-14 Commits [New] add isObject 51e4042 v1.0.1 - 2025-01-13 Commits [Dev Deps] update @ljharb/eslint-config , @ljharb/tsconfig , @types/tape , auto-changelog , tape 38ab9eb [types] improve types 7d1beb8 [Tests] replace aud with npm audit 25863ba [Dev Deps] add missing peer dep c012309 v1.0.0 - 2024-03-16 Commits Initial implementation, tests, readme, types f1499db Initial commit 99eedc7 [meta] rename repo fc851fa npm init b909377 Only apps should have lockfiles 7249edd","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/es-object-atoms/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/es-object-atoms/CHANGELOG/#v111-2025-01-14","text":"","title":"v1.1.1 - 2025-01-14"},{"location":"system-desing/crud-app/JS/server/node_modules/es-object-atoms/CHANGELOG/#commits","text":"[types] ToObject : improve types cfe8c8a","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/es-object-atoms/CHANGELOG/#v110-2025-01-14","text":"","title":"v1.1.0 - 2025-01-14"},{"location":"system-desing/crud-app/JS/server/node_modules/es-object-atoms/CHANGELOG/#commits_1","text":"[New] add isObject 51e4042","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/es-object-atoms/CHANGELOG/#v101-2025-01-13","text":"","title":"v1.0.1 - 2025-01-13"},{"location":"system-desing/crud-app/JS/server/node_modules/es-object-atoms/CHANGELOG/#commits_2","text":"[Dev Deps] update @ljharb/eslint-config , @ljharb/tsconfig , @types/tape , auto-changelog , tape 38ab9eb [types] improve types 7d1beb8 [Tests] replace aud with npm audit 25863ba [Dev Deps] add missing peer dep c012309","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/es-object-atoms/CHANGELOG/#v100-2024-03-16","text":"","title":"v1.0.0 - 2024-03-16"},{"location":"system-desing/crud-app/JS/server/node_modules/es-object-atoms/CHANGELOG/#commits_3","text":"Initial implementation, tests, readme, types f1499db Initial commit 99eedc7 [meta] rename repo fc851fa npm init b909377 Only apps should have lockfiles 7249edd","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/escape-html/Readme/","text":"escape-html Escape string for use in HTML Example var escape = require ( 'escape-html' ); var html = escape ( 'foo & bar' ); // -> foo &amp; bar Benchmark $ npm run-script bench > escape-html@1.0.3 bench nodejs-escape-html > node benchmark/index.js http_parser@1.0 node@0.10.33 v8@3.14.5.9 ares@1.9.0-DEV uv@0.10.29 zlib@1.2.3 modules@11 openssl@1.0.1j 1 test completed. 2 tests completed. 3 tests completed. no special characters x 19,435,271 ops/sec \u00b10.85% (187 runs sampled) single special character x 6,132,421 ops/sec \u00b10.67% (194 runs sampled) many special characters x 3,175,826 ops/sec \u00b10.65% (193 runs sampled) License MIT","title":"escape-html"},{"location":"system-desing/crud-app/JS/server/node_modules/escape-html/Readme/#escape-html","text":"Escape string for use in HTML","title":"escape-html"},{"location":"system-desing/crud-app/JS/server/node_modules/escape-html/Readme/#example","text":"var escape = require ( 'escape-html' ); var html = escape ( 'foo & bar' ); // -> foo &amp; bar","title":"Example"},{"location":"system-desing/crud-app/JS/server/node_modules/escape-html/Readme/#benchmark","text":"$ npm run-script bench > escape-html@1.0.3 bench nodejs-escape-html > node benchmark/index.js http_parser@1.0 node@0.10.33 v8@3.14.5.9 ares@1.9.0-DEV uv@0.10.29 zlib@1.2.3 modules@11 openssl@1.0.1j 1 test completed. 2 tests completed. 3 tests completed. no special characters x 19,435,271 ops/sec \u00b10.85% (187 runs sampled) single special character x 6,132,421 ops/sec \u00b10.67% (194 runs sampled) many special characters x 3,175,826 ops/sec \u00b10.65% (193 runs sampled)","title":"Benchmark"},{"location":"system-desing/crud-app/JS/server/node_modules/escape-html/Readme/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/","text":"etag Create simple HTTP ETags This module generates HTTP ETags (as defined in RFC 7232) for use in HTTP responses. Installation This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install etag API var etag = require ( 'etag' ) etag(entity, [options]) Generate a strong ETag for the given entity. This should be the complete body of the entity. Strings, Buffer s, and fs.Stats are accepted. By default, a strong ETag is generated except for fs.Stats , which will generate a weak ETag (this can be overwritten by options.weak ). res . setHeader ( 'ETag' , etag ( body )) Options etag accepts these properties in the options object. weak Specifies if the generated ETag will include the weak validator mark (that is, the leading W/ ). The actual entity tag is the same. The default value is false , unless the entity is fs.Stats , in which case it is true . Testing $ npm test Benchmark $ npm run-script bench > etag@1.8.1 bench nodejs-etag > node benchmark/index.js http_parser@2.7.0 node@6.11.1 v8@5.1.281.103 uv@1.11.0 zlib@1.2.11 ares@1.10.1-DEV icu@58.2 modules@48 openssl@1.0.2k > node benchmark/body0-100b.js 100B body 4 tests completed. buffer - strong x 258 ,647 ops/sec \u00b11.07% ( 180 runs sampled ) buffer - weak x 263 ,812 ops/sec \u00b10.61% ( 184 runs sampled ) string - strong x 259 ,955 ops/sec \u00b11.19% ( 185 runs sampled ) string - weak x 264 ,356 ops/sec \u00b11.09% ( 184 runs sampled ) > node benchmark/body1-1kb.js 1KB body 4 tests completed. buffer - strong x 189 ,018 ops/sec \u00b11.12% ( 182 runs sampled ) buffer - weak x 190 ,586 ops/sec \u00b10.81% ( 186 runs sampled ) string - strong x 144 ,272 ops/sec \u00b10.96% ( 188 runs sampled ) string - weak x 145 ,380 ops/sec \u00b11.43% ( 187 runs sampled ) > node benchmark/body2-5kb.js 5KB body 4 tests completed. buffer - strong x 92 ,435 ops/sec \u00b10.42% ( 188 runs sampled ) buffer - weak x 92 ,373 ops/sec \u00b10.58% ( 189 runs sampled ) string - strong x 48 ,850 ops/sec \u00b10.56% ( 186 runs sampled ) string - weak x 49 ,380 ops/sec \u00b10.56% ( 190 runs sampled ) > node benchmark/body3-10kb.js 10KB body 4 tests completed. buffer - strong x 55 ,989 ops/sec \u00b10.93% ( 188 runs sampled ) buffer - weak x 56 ,148 ops/sec \u00b10.55% ( 190 runs sampled ) string - strong x 27 ,345 ops/sec \u00b10.43% ( 188 runs sampled ) string - weak x 27 ,496 ops/sec \u00b10.45% ( 190 runs sampled ) > node benchmark/body4-100kb.js 100KB body 4 tests completed. buffer - strong x 7 ,083 ops/sec \u00b10.22% ( 190 runs sampled ) buffer - weak x 7 ,115 ops/sec \u00b10.26% ( 191 runs sampled ) string - strong x 3 ,068 ops/sec \u00b10.34% ( 190 runs sampled ) string - weak x 3 ,096 ops/sec \u00b10.35% ( 190 runs sampled ) > node benchmark/stats.js stat 4 tests completed. real - strong x 871 ,642 ops/sec \u00b10.34% ( 189 runs sampled ) real - weak x 867 ,613 ops/sec \u00b10.39% ( 190 runs sampled ) fake - strong x 401 ,051 ops/sec \u00b10.40% ( 189 runs sampled ) fake - weak x 400 ,100 ops/sec \u00b10.47% ( 188 runs sampled ) License MIT","title":"etag"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/#etag","text":"Create simple HTTP ETags This module generates HTTP ETags (as defined in RFC 7232) for use in HTTP responses.","title":"etag"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/#installation","text":"This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install etag","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/#api","text":"var etag = require ( 'etag' )","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/#etagentity-options","text":"Generate a strong ETag for the given entity. This should be the complete body of the entity. Strings, Buffer s, and fs.Stats are accepted. By default, a strong ETag is generated except for fs.Stats , which will generate a weak ETag (this can be overwritten by options.weak ). res . setHeader ( 'ETag' , etag ( body ))","title":"etag(entity, [options])"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/#options","text":"etag accepts these properties in the options object.","title":"Options"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/#weak","text":"Specifies if the generated ETag will include the weak validator mark (that is, the leading W/ ). The actual entity tag is the same. The default value is false , unless the entity is fs.Stats , in which case it is true .","title":"weak"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/#testing","text":"$ npm test","title":"Testing"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/#benchmark","text":"$ npm run-script bench > etag@1.8.1 bench nodejs-etag > node benchmark/index.js http_parser@2.7.0 node@6.11.1 v8@5.1.281.103 uv@1.11.0 zlib@1.2.11 ares@1.10.1-DEV icu@58.2 modules@48 openssl@1.0.2k > node benchmark/body0-100b.js 100B body 4 tests completed. buffer - strong x 258 ,647 ops/sec \u00b11.07% ( 180 runs sampled ) buffer - weak x 263 ,812 ops/sec \u00b10.61% ( 184 runs sampled ) string - strong x 259 ,955 ops/sec \u00b11.19% ( 185 runs sampled ) string - weak x 264 ,356 ops/sec \u00b11.09% ( 184 runs sampled ) > node benchmark/body1-1kb.js 1KB body 4 tests completed. buffer - strong x 189 ,018 ops/sec \u00b11.12% ( 182 runs sampled ) buffer - weak x 190 ,586 ops/sec \u00b10.81% ( 186 runs sampled ) string - strong x 144 ,272 ops/sec \u00b10.96% ( 188 runs sampled ) string - weak x 145 ,380 ops/sec \u00b11.43% ( 187 runs sampled ) > node benchmark/body2-5kb.js 5KB body 4 tests completed. buffer - strong x 92 ,435 ops/sec \u00b10.42% ( 188 runs sampled ) buffer - weak x 92 ,373 ops/sec \u00b10.58% ( 189 runs sampled ) string - strong x 48 ,850 ops/sec \u00b10.56% ( 186 runs sampled ) string - weak x 49 ,380 ops/sec \u00b10.56% ( 190 runs sampled ) > node benchmark/body3-10kb.js 10KB body 4 tests completed. buffer - strong x 55 ,989 ops/sec \u00b10.93% ( 188 runs sampled ) buffer - weak x 56 ,148 ops/sec \u00b10.55% ( 190 runs sampled ) string - strong x 27 ,345 ops/sec \u00b10.43% ( 188 runs sampled ) string - weak x 27 ,496 ops/sec \u00b10.45% ( 190 runs sampled ) > node benchmark/body4-100kb.js 100KB body 4 tests completed. buffer - strong x 7 ,083 ops/sec \u00b10.22% ( 190 runs sampled ) buffer - weak x 7 ,115 ops/sec \u00b10.26% ( 191 runs sampled ) string - strong x 3 ,068 ops/sec \u00b10.34% ( 190 runs sampled ) string - weak x 3 ,096 ops/sec \u00b10.35% ( 190 runs sampled ) > node benchmark/stats.js stat 4 tests completed. real - strong x 871 ,642 ops/sec \u00b10.34% ( 189 runs sampled ) real - weak x 867 ,613 ops/sec \u00b10.39% ( 190 runs sampled ) fake - strong x 401 ,051 ops/sec \u00b10.40% ( 189 runs sampled ) fake - weak x 400 ,100 ops/sec \u00b10.47% ( 188 runs sampled )","title":"Benchmark"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/HISTORY/","text":"1.8.1 / 2017-09-12 perf: replace regular expression with substring 1.8.0 / 2017-02-18 Use SHA1 instead of MD5 for ETag hashing Improves performance for larger entities Works with FIPS 140-2 OpenSSL configuration 1.7.0 / 2015-06-08 Always include entity length in ETags for hash length extensions Generate non-Stats ETags using MD5 only (no longer CRC32) Improve stat performance by removing hashing Remove base64 padding in ETags to shorten Use MD5 instead of MD4 in weak ETags over 1KB 1.6.0 / 2015-05-10 Improve support for JXcore Remove requirement of atime in the stats object Support \"fake\" stats objects in environments without fs 1.5.1 / 2014-11-19 deps: crc@3.2.1 Minor fixes 1.5.0 / 2014-10-14 Improve string performance Slightly improve speed for weak ETags over 1KB 1.4.0 / 2014-09-21 Support \"fake\" stats objects Support Node.js 0.6 1.3.1 / 2014-09-14 Use the (new and improved) crc for crc32 1.3.0 / 2014-08-29 Default strings to strong ETags Improve speed for weak ETags over 1KB 1.2.1 / 2014-08-29 Use the (much faster) buffer-crc32 for crc32 1.2.0 / 2014-08-24 Add support for file stat objects 1.1.0 / 2014-08-24 Add fast-path for empty entity Add weak ETag generation Shrink size of generated ETags 1.0.1 / 2014-08-24 Fix behavior of string containing Unicode 1.0.0 / 2014-05-18 Initial release","title":"1.8.1 / 2017-09-12"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/HISTORY/#181-2017-09-12","text":"perf: replace regular expression with substring","title":"1.8.1 / 2017-09-12"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/HISTORY/#180-2017-02-18","text":"Use SHA1 instead of MD5 for ETag hashing Improves performance for larger entities Works with FIPS 140-2 OpenSSL configuration","title":"1.8.0 / 2017-02-18"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/HISTORY/#170-2015-06-08","text":"Always include entity length in ETags for hash length extensions Generate non-Stats ETags using MD5 only (no longer CRC32) Improve stat performance by removing hashing Remove base64 padding in ETags to shorten Use MD5 instead of MD4 in weak ETags over 1KB","title":"1.7.0 / 2015-06-08"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/HISTORY/#160-2015-05-10","text":"Improve support for JXcore Remove requirement of atime in the stats object Support \"fake\" stats objects in environments without fs","title":"1.6.0 / 2015-05-10"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/HISTORY/#151-2014-11-19","text":"deps: crc@3.2.1 Minor fixes","title":"1.5.1 / 2014-11-19"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/HISTORY/#150-2014-10-14","text":"Improve string performance Slightly improve speed for weak ETags over 1KB","title":"1.5.0 / 2014-10-14"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/HISTORY/#140-2014-09-21","text":"Support \"fake\" stats objects Support Node.js 0.6","title":"1.4.0 / 2014-09-21"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/HISTORY/#131-2014-09-14","text":"Use the (new and improved) crc for crc32","title":"1.3.1 / 2014-09-14"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/HISTORY/#130-2014-08-29","text":"Default strings to strong ETags Improve speed for weak ETags over 1KB","title":"1.3.0 / 2014-08-29"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/HISTORY/#121-2014-08-29","text":"Use the (much faster) buffer-crc32 for crc32","title":"1.2.1 / 2014-08-29"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/HISTORY/#120-2014-08-24","text":"Add support for file stat objects","title":"1.2.0 / 2014-08-24"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/HISTORY/#110-2014-08-24","text":"Add fast-path for empty entity Add weak ETag generation Shrink size of generated ETags","title":"1.1.0 / 2014-08-24"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/HISTORY/#101-2014-08-24","text":"Fix behavior of string containing Unicode","title":"1.0.1 / 2014-08-24"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/HISTORY/#100-2014-05-18","text":"Initial release","title":"1.0.0 / 2014-05-18"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/","text":"5.1.0 / 2025-03-31 Add support for Uint8Array in res.send() Add support for ETag option in res.sendFile() Add support for multiple links with the same rel in res.links() Add funding field to package.json perf: use loop for acceptParams refactor: prefix built-in node module imports deps: remove setprototypeof deps: remove safe-buffer deps: remove utils-merge deps: remove methods deps: remove depd deps: debug@^4.4.0 deps: body-parser@^2.2.0 deps: router@^2.2.0 deps: content-type@^1.0.5 deps: finalhandler@^2.1.0 deps: qs@^6.14.0 deps: server-static@2.2.0 deps: type-is@2.0.1 5.0.1 / 2024-10-08 Update cookie semver lock to address CVE-2024-47764 5.0.0 / 2024-09-10 remove: path-is-absolute dependency - use path.isAbsolute instead breaking: res.status() accepts only integers, and input must be greater than 99 and less than 1000 will throw a RangeError: Invalid status code: ${code}. Status code must be greater than 99 and less than 1000. for inputs outside this range will throw a TypeError: Invalid status code: ${code}. Status code must be an integer. for non integer inputs deps: send@1.0.0 res.redirect('back') and res.location('back') is no longer a supported magic string, explicitly use req.get('Referrer') || '/' . change: res.clearCookie will ignore user provided maxAge and expires options deps: cookie-signature@^1.2.1 deps: debug@4.3.6 deps: merge-descriptors@^2.0.0 deps: serve-static@^2.1.0 deps: qs@6.13.0 deps: accepts@^2.0.0 deps: mime-types@^3.0.0 application/javascript => text/javascript deps: type-is@^2.0.0 deps: content-disposition@^1.0.0 deps: finalhandler@^2.0.0 deps: fresh@^2.0.0 deps: body-parser@^2.0.1 deps: send@^1.1.0 5.0.0-beta.3 / 2024-03-25 This incorporates all changes after 4.19.1 up to 4.19.2. 5.0.0-beta.2 / 2024-03-20 This incorporates all changes after 4.17.2 up to 4.19.1. 5.0.0-beta.1 / 2022-02-14 This is the first Express 5.0 beta release, based off 4.17.2 and includes changes from 5.0.0-alpha.8. change: Default \"query parser\" setting to 'simple' Requires Node.js 4+ Use mime-types for file to content type mapping deps: array-flatten@3.0.0 deps: body-parser@2.0.0-beta.1 req.body is no longer always initialized to {} urlencoded parser now defaults extended to false Use on-finished to determine when body read deps: router@2.0.0-beta.1 Add new ? , * , and + parameter modifiers Internalize private router.process_params method Matching group expressions are only RegExp syntax Named matching groups no longer available by position in req.params Regular expressions can only be used in a matching group Remove debug dependency Special * path segment behavior removed deps: array-flatten@3.0.0 deps: parseurl@~1.3.3 deps: path-to-regexp@3.2.0 deps: setprototypeof@1.2.0 deps: send@1.0.0-beta.1 Change dotfiles option default to 'ignore' Remove hidden option; use dotfiles option instead Use mime-types for file to content type mapping deps: debug@3.1.0 deps: serve-static@2.0.0-beta.1 Change dotfiles option default to 'ignore' Remove hidden option; use dotfiles option instead Use mime-types for file to content type mapping Remove express.static.mime export; use mime-types package instead deps: send@1.0.0-beta.1 5.0.0-alpha.8 / 2020-03-25 This is the eighth Express 5.0 alpha release, based off 4.17.1 and includes changes from 5.0.0-alpha.7. 5.0.0-alpha.7 / 2018-10-26 This is the seventh Express 5.0 alpha release, based off 4.16.4 and includes changes from 5.0.0-alpha.6. The major change with this alpha is the basic support for returned, rejected Promises in the router. remove: path-to-regexp dependency deps: debug@3.1.0 Add DEBUG_HIDE_DATE environment variable Change timer to per-namespace instead of global Change non-TTY date format Remove DEBUG_FD environment variable support Support 256 namespace colors deps: router@2.0.0-alpha.1 Add basic support for returned, rejected Promises Fix JSDoc for Router constructor deps: debug@3.1.0 deps: parseurl@~1.3.2 deps: setprototypeof@1.1.0 deps: utils-merge@1.0.1 5.0.0-alpha.6 / 2017-09-24 This is the sixth Express 5.0 alpha release, based off 4.15.5 and includes changes from 5.0.0-alpha.5. remove: res.redirect(url, status) signature - use res.redirect(status, url) res.send(status, body) signature - use res.status(status).send(body) deps: router@~1.3.1 deps: debug@2.6.8 5.0.0-alpha.5 / 2017-03-06 This is the fifth Express 5.0 alpha release, based off 4.15.2 and includes changes from 5.0.0-alpha.4. 5.0.0-alpha.4 / 2017-03-01 This is the fourth Express 5.0 alpha release, based off 4.15.0 and includes changes from 5.0.0-alpha.3. remove: Remove Express 3.x middleware error stubs deps: router@~1.3.0 Add next(\"router\") to exit from router Fix case where router.use skipped requests routes did not Skip routing when req.url is not set Use %o in path debug to tell types apart deps: debug@2.6.1 deps: setprototypeof@1.0.3 perf: add fast match path for * route 5.0.0-alpha.3 / 2017-01-28 This is the third Express 5.0 alpha release, based off 4.14.1 and includes changes from 5.0.0-alpha.2. remove: res.json(status, obj) signature - use res.status(status).json(obj) res.jsonp(status, obj) signature - use res.status(status).jsonp(obj) res.vary() (no arguments) -- provide a field name as an argument deps: array-flatten@2.1.1 deps: path-is-absolute@1.0.1 deps: router@~1.1.5 deps: array-flatten@2.0.1 deps: methods@~1.1.2 deps: parseurl@~1.3.1 deps: setprototypeof@1.0.2 5.0.0-alpha.2 / 2015-07-06 This is the second Express 5.0 alpha release, based off 4.13.1 and includes changes from 5.0.0-alpha.1. remove: app.param(fn) req.param() -- use req.params , req.body , or req.query instead change: res.render callback is always async, even for sync view engines The leading : character in name for app.param(name, fn) is no longer removed Use router module for routing Use path-is-absolute module for absolute path detection 5.0.0-alpha.1 / 2014-11-06 This is the first Express 5.0 alpha release, based off 4.10.1. remove: app.del - use app.delete req.acceptsCharset - use req.acceptsCharsets req.acceptsEncoding - use req.acceptsEncodings req.acceptsLanguage - use req.acceptsLanguages res.json(obj, status) signature - use res.json(status, obj) res.jsonp(obj, status) signature - use res.jsonp(status, obj) res.send(body, status) signature - use res.send(status, body) res.send(status) signature - use res.sendStatus(status) res.sendfile - use res.sendFile instead express.query middleware change: req.host now returns host ( hostname:port ) - use req.hostname for only hostname req.query is now a getter instead of a plain property add: app.router is a reference to the base router 4.20.0 / 2024-09-10 deps: serve-static@0.16.0 Remove link renderization in html while redirecting deps: send@0.19.0 Remove link renderization in html while redirecting deps: body-parser@0.6.0 add depth option to customize the depth level in the parser IMPORTANT: The default depth level for parsing URL-encoded data is now 32 (previously was Infinity ) Remove link renderization in html while using res.redirect deps: path-to-regexp@0.1.10 Adds support for named matching groups in the routes using a regex Adds backtracking protection to parameters without regexes defined deps: encodeurl@~2.0.0 Removes encoding of \\ , | , and ^ to align better with URL spec Deprecate passing options.maxAge and options.expires to res.clearCookie Will be ignored in v5, clearCookie will set a cookie with an expires in the past to instruct clients to delete the cookie 4.19.2 / 2024-03-25 Improved fix for open redirect allow list bypass 4.19.1 / 2024-03-20 Allow passing non-strings to res.location with new encoding handling checks 4.19.0 / 2024-03-20 Prevent open redirect allow list bypass due to encodeurl deps: cookie@0.6.0 4.18.3 / 2024-02-29 Fix routing requests without method deps: body-parser@1.20.2 Fix strict json error message on Node.js 19+ deps: content-type@~1.0.5 deps: raw-body@2.5.2 deps: cookie@0.6.0 Add partitioned option 4.18.2 / 2022-10-08 Fix regression routing a large stack in a single route deps: body-parser@1.20.1 deps: qs@6.11.0 perf: remove unnecessary object clone deps: qs@6.11.0 4.18.1 / 2022-04-29 Fix hanging on large stack of sync routes 4.18.0 / 2022-04-25 Add \"root\" option to res.download Allow options without filename in res.download Deprecate string and non-integer arguments to res.status Fix behavior of null / undefined as maxAge in res.cookie Fix handling very large stacks of sync middleware Ignore Object.prototype values in settings through app.set / app.get Invoke default with same arguments as types in res.format Support proper 205 responses using res.send Use http-errors for res.format error deps: body-parser@1.20.0 Fix error message for json parse whitespace in strict Fix internal error when inflated body exceeds limit Prevent loss of async hooks context Prevent hanging when request already read deps: depd@2.0.0 deps: http-errors@2.0.0 deps: on-finished@2.4.1 deps: qs@6.10.3 deps: raw-body@2.5.1 deps: cookie@0.5.0 Add priority option Fix expires option to reject invalid dates deps: depd@2.0.0 Replace internal eval usage with Function constructor Use instance methods on process to check for listeners deps: finalhandler@1.2.0 Remove set content headers that break response deps: on-finished@2.4.1 deps: statuses@2.0.1 deps: on-finished@2.4.1 Prevent loss of async hooks context deps: qs@6.10.3 deps: send@0.18.0 Fix emitted 416 error missing headers property Limit the headers removed for 304 response deps: depd@2.0.0 deps: destroy@1.2.0 deps: http-errors@2.0.0 deps: on-finished@2.4.1 deps: statuses@2.0.1 deps: serve-static@1.15.0 deps: send@0.18.0 deps: statuses@2.0.1 Remove code 306 Rename 425 Unordered Collection to standard 425 Too Early 4.17.3 / 2022-02-16 deps: accepts@~1.3.8 deps: mime-types@~2.1.34 deps: negotiator@0.6.3 deps: body-parser@1.19.2 deps: bytes@3.1.2 deps: qs@6.9.7 deps: raw-body@2.4.3 deps: cookie@0.4.2 deps: qs@6.9.7 Fix handling of __proto__ keys pref: remove unnecessary regexp for trust proxy 4.17.2 / 2021-12-16 Fix handling of undefined in res.jsonp Fix handling of undefined when \"json escape\" is enabled Fix incorrect middleware execution with unanchored RegExp s Fix res.jsonp(obj, status) deprecation message Fix typo in res.is JSDoc deps: body-parser@1.19.1 deps: bytes@3.1.1 deps: http-errors@1.8.1 deps: qs@6.9.6 deps: raw-body@2.4.2 deps: safe-buffer@5.2.1 deps: type-is@~1.6.18 deps: content-disposition@0.5.4 deps: safe-buffer@5.2.1 deps: cookie@0.4.1 Fix maxAge option to reject invalid values deps: proxy-addr@~2.0.7 Use req.socket over deprecated req.connection deps: forwarded@0.2.0 deps: ipaddr.js@1.9.1 deps: qs@6.9.6 deps: safe-buffer@5.2.1 deps: send@0.17.2 deps: http-errors@1.8.1 deps: ms@2.1.3 pref: ignore empty http tokens deps: serve-static@1.14.2 deps: send@0.17.2 deps: setprototypeof@1.2.0 4.17.1 / 2019-05-25 Revert \"Improve error message for null / undefined to res.status \" 4.17.0 / 2019-05-16 Add express.raw to parse bodies into Buffer Add express.text to parse bodies into string Improve error message for non-strings to res.sendFile Improve error message for null / undefined to res.status Support multiple hosts in X-Forwarded-Host deps: accepts@~1.3.7 deps: body-parser@1.19.0 Add encoding MIK Add petabyte ( pb ) support Fix parsing array brackets after index deps: bytes@3.1.0 deps: http-errors@1.7.2 deps: iconv-lite@0.4.24 deps: qs@6.7.0 deps: raw-body@2.4.0 deps: type-is@~1.6.17 deps: content-disposition@0.5.3 deps: cookie@0.4.0 Add SameSite=None support deps: finalhandler@~1.1.2 Set stricter Content-Security-Policy header deps: parseurl@~1.3.3 deps: statuses@~1.5.0 deps: parseurl@~1.3.3 deps: proxy-addr@~2.0.5 deps: ipaddr.js@1.9.0 deps: qs@6.7.0 Fix parsing array brackets after index deps: range-parser@~1.2.1 deps: send@0.17.1 Set stricter CSP header in redirect & error responses deps: http-errors@~1.7.2 deps: mime@1.6.0 deps: ms@2.1.1 deps: range-parser@~1.2.1 deps: statuses@~1.5.0 perf: remove redundant path.normalize call deps: serve-static@1.14.1 Set stricter CSP header in redirect response deps: parseurl@~1.3.3 deps: send@0.17.1 deps: setprototypeof@1.1.1 deps: statuses@~1.5.0 Add 103 Early Hints deps: type-is@~1.6.18 deps: mime-types@~2.1.24 perf: prevent internal throw on invalid type 4.16.4 / 2018-10-10 Fix issue where \"Request aborted\" may be logged in res.sendfile Fix JSDoc for Router constructor deps: body-parser@1.18.3 Fix deprecation warnings on Node.js 10+ Fix stack trace for strict json parse error deps: depd@~1.1.2 deps: http-errors@~1.6.3 deps: iconv-lite@0.4.23 deps: qs@6.5.2 deps: raw-body@2.3.3 deps: type-is@~1.6.16 deps: proxy-addr@~2.0.4 deps: ipaddr.js@1.8.0 deps: qs@6.5.2 deps: safe-buffer@5.1.2 4.16.3 / 2018-03-12 deps: accepts@~1.3.5 deps: mime-types@~2.1.18 deps: depd@~1.1.2 perf: remove argument reassignment deps: encodeurl@~1.0.2 Fix encoding % as last character deps: finalhandler@1.1.1 Fix 404 output for bad / missing pathnames deps: encodeurl@~1.0.2 deps: statuses@~1.4.0 deps: proxy-addr@~2.0.3 deps: ipaddr.js@1.6.0 deps: send@0.16.2 Fix incorrect end tag in default error & redirects deps: depd@~1.1.2 deps: encodeurl@~1.0.2 deps: statuses@~1.4.0 deps: serve-static@1.13.2 Fix incorrect end tag in redirects deps: encodeurl@~1.0.2 deps: send@0.16.2 deps: statuses@~1.4.0 deps: type-is@~1.6.16 deps: mime-types@~2.1.18 4.16.2 / 2017-10-09 Fix TypeError in res.send when given Buffer and ETag header set perf: skip parsing of entire X-Forwarded-Proto header 4.16.1 / 2017-09-29 deps: send@0.16.1 deps: serve-static@1.13.1 Fix regression when root is incorrectly set to a file deps: send@0.16.1 4.16.0 / 2017-09-28 Add \"json escape\" setting for res.json and res.jsonp Add express.json and express.urlencoded to parse bodies Add options argument to res.download Improve error message when autoloading invalid view engine Improve error messages when non-function provided as middleware Skip Buffer encoding when not generating ETag for small response Use safe-buffer for improved Buffer API deps: accepts@~1.3.4 deps: mime-types@~2.1.16 deps: content-type@~1.0.4 perf: remove argument reassignment perf: skip parameter parsing when no parameters deps: etag@~1.8.1 perf: replace regular expression with substring deps: finalhandler@1.1.0 Use res.headersSent when available deps: parseurl@~1.3.2 perf: reduce overhead for full URLs perf: unroll the \"fast-path\" RegExp deps: proxy-addr@~2.0.2 Fix trimming leading / trailing OWS in X-Forwarded-For deps: forwarded@~0.1.2 deps: ipaddr.js@1.5.2 perf: reduce overhead when no X-Forwarded-For header deps: qs@6.5.1 Fix parsing & compacting very deep objects deps: send@0.16.0 Add 70 new types for file extensions Add immutable option Fix missing </html> in default error & redirects Set charset as \"UTF-8\" for .js and .json Use instance methods on steam to check for listeners deps: mime@1.4.1 perf: improve path validation speed deps: serve-static@1.13.0 Add 70 new types for file extensions Add immutable option Set charset as \"UTF-8\" for .js and .json deps: send@0.16.0 deps: setprototypeof@1.1.0 deps: utils-merge@1.0.1 deps: vary@~1.1.2 perf: improve header token parsing speed perf: re-use options object when generating ETags perf: remove dead .charset set in res.jsonp 4.15.5 / 2017-09-24 deps: debug@2.6.9 deps: finalhandler@~1.0.6 deps: debug@2.6.9 deps: parseurl@~1.3.2 deps: fresh@0.5.2 Fix handling of modified headers with invalid dates perf: improve ETag match loop perf: improve If-None-Match token parsing deps: send@0.15.6 Fix handling of modified headers with invalid dates deps: debug@2.6.9 deps: etag@~1.8.1 deps: fresh@0.5.2 perf: improve If-Match token parsing deps: serve-static@1.12.6 deps: parseurl@~1.3.2 deps: send@0.15.6 perf: improve slash collapsing 4.15.4 / 2017-08-06 deps: debug@2.6.8 deps: depd@~1.1.1 Remove unnecessary Buffer loading deps: finalhandler@~1.0.4 deps: debug@2.6.8 deps: proxy-addr@~1.1.5 Fix array argument being altered deps: ipaddr.js@1.4.0 deps: qs@6.5.0 deps: send@0.15.4 deps: debug@2.6.8 deps: depd@~1.1.1 deps: http-errors@~1.6.2 deps: serve-static@1.12.4 deps: send@0.15.4 4.15.3 / 2017-05-16 Fix error when res.set cannot add charset to Content-Type deps: debug@2.6.7 Fix DEBUG_MAX_ARRAY_LENGTH deps: ms@2.0.0 deps: finalhandler@~1.0.3 Fix missing </html> in HTML document deps: debug@2.6.7 deps: proxy-addr@~1.1.4 deps: ipaddr.js@1.3.0 deps: send@0.15.3 deps: debug@2.6.7 deps: ms@2.0.0 deps: serve-static@1.12.3 deps: send@0.15.3 deps: type-is@~1.6.15 deps: mime-types@~2.1.15 deps: vary@~1.1.1 perf: hoist regular expression 4.15.2 / 2017-03-06 deps: qs@6.4.0 Fix regression parsing keys starting with [ 4.15.1 / 2017-03-05 deps: send@0.15.1 Fix issue when Date.parse does not return NaN on invalid date Fix strict violation in broken environments deps: serve-static@1.12.1 Fix issue when Date.parse does not return NaN on invalid date deps: send@0.15.1 4.15.0 / 2017-03-01 Add debug message when loading view engine Add next(\"router\") to exit from router Fix case where router.use skipped requests routes did not Remove usage of res._headers private field Improves compatibility with Node.js 8 nightly Skip routing when req.url is not set Use %o in path debug to tell types apart Use Object.create to setup request & response prototypes Use setprototypeof module to replace __proto__ setting Use statuses instead of http module for status messages deps: debug@2.6.1 Allow colors in workers Deprecated DEBUG_FD environment variable set to 3 or higher Fix error when running under React Native Use same color for same namespace deps: ms@0.7.2 deps: etag@~1.8.0 Use SHA1 instead of MD5 for ETag hashing Works with FIPS 140-2 OpenSSL configuration deps: finalhandler@~1.0.0 Fix exception when err cannot be converted to a string Fully URL-encode the pathname in the 404 Only include the pathname in the 404 message Send complete HTML document Set Content-Security-Policy: default-src 'self' header deps: debug@2.6.1 deps: fresh@0.5.0 Fix false detection of no-cache request directive Fix incorrect result when If-None-Match has both * and ETags Fix weak ETag matching to match spec perf: delay reading header values until needed perf: enable strict mode perf: hoist regular expressions perf: remove duplicate conditional perf: remove unnecessary boolean coercions perf: skip checking modified time if ETag check failed perf: skip parsing If-None-Match when no ETag header perf: use Date.parse instead of new Date deps: qs@6.3.1 Fix array parsing from skipping empty values Fix compacting nested arrays deps: send@0.15.0 Fix false detection of no-cache request directive Fix incorrect result when If-None-Match has both * and ETags Fix weak ETag matching to match spec Remove usage of res._headers private field Support If-Match and If-Unmodified-Since headers Use res.getHeaderNames() when available Use res.headersSent when available deps: debug@2.6.1 deps: etag@~1.8.0 deps: fresh@0.5.0 deps: http-errors@~1.6.1 deps: serve-static@1.12.0 Fix false detection of no-cache request directive Fix incorrect result when If-None-Match has both * and ETags Fix weak ETag matching to match spec Remove usage of res._headers private field Send complete HTML document in redirect response Set default CSP header in redirect response Support If-Match and If-Unmodified-Since headers Use res.getHeaderNames() when available Use res.headersSent when available deps: send@0.15.0 perf: add fast match path for * route perf: improve req.ips performance 4.14.1 / 2017-01-28 deps: content-disposition@0.5.2 deps: finalhandler@0.5.1 Fix exception when err.headers is not an object deps: statuses@~1.3.1 perf: hoist regular expressions perf: remove duplicate validation path deps: proxy-addr@~1.1.3 deps: ipaddr.js@1.2.0 deps: send@0.14.2 deps: http-errors@~1.5.1 deps: ms@0.7.2 deps: statuses@~1.3.1 deps: serve-static@~1.11.2 deps: send@0.14.2 deps: type-is@~1.6.14 deps: mime-types@~2.1.13 4.14.0 / 2016-06-16 Add acceptRanges option to res.sendFile / res.sendfile Add cacheControl option to res.sendFile / res.sendfile Add options argument to req.range Includes the combine option Encode URL in res.location / res.redirect if not already encoded Fix some redirect handling in res.sendFile / res.sendfile Fix Windows absolute path check using forward slashes Improve error with invalid arguments to req.get() Improve performance for res.json / res.jsonp in most cases Improve Range header handling in res.sendFile / res.sendfile deps: accepts@~1.3.3 Fix including type extensions in parameters in Accept parsing Fix parsing Accept parameters with quoted equals Fix parsing Accept parameters with quoted semicolons Many performance improvements deps: mime-types@~2.1.11 deps: negotiator@0.6.1 deps: content-type@~1.0.2 perf: enable strict mode deps: cookie@0.3.1 Add sameSite option Fix cookie Max-Age to never be a floating point number Improve error message when encode is not a function Improve error message when expires is not a Date Throw better error for invalid argument to parse Throw on invalid values provided to serialize perf: enable strict mode perf: hoist regular expression perf: use for loop in parse perf: use string concatenation for serialization deps: finalhandler@0.5.0 Change invalid or non-numeric status code to 500 Overwrite status message to match set status code Prefer err.statusCode if err.status is invalid Set response headers from err.headers object Use statuses instead of http module for status messages deps: proxy-addr@~1.1.2 Fix accepting various invalid netmasks Fix IPv6-mapped IPv4 validation edge cases IPv4 netmasks must be contiguous IPv6 addresses cannot be used as a netmask deps: ipaddr.js@1.1.1 deps: qs@6.2.0 Add decoder option in parse function deps: range-parser@~1.2.0 Add combine option to combine overlapping ranges Fix incorrectly returning -1 when there is at least one valid range perf: remove internal function deps: send@0.14.1 Add acceptRanges option Add cacheControl option Attempt to combine multiple ranges into single range Correctly inherit from Stream class Fix Content-Range header in 416 responses when using start / end options Fix Content-Range header missing from default 416 responses Fix redirect error when path contains raw non-URL characters Fix redirect when path starts with multiple forward slashes Ignore non-byte Range headers deps: http-errors@~1.5.0 deps: range-parser@~1.2.0 deps: statuses@~1.3.0 perf: remove argument reassignment deps: serve-static@~1.11.1 Add acceptRanges option Add cacheControl option Attempt to combine multiple ranges into single range Fix redirect error when req.url contains raw non-URL characters Ignore non-byte Range headers Use status code 301 for redirects deps: send@0.14.1 deps: type-is@~1.6.13 Fix type error when given invalid type to match against deps: mime-types@~2.1.11 deps: vary@~1.1.0 Only accept valid field names in the field argument perf: use strict equality when possible 4.13.4 / 2016-01-21 deps: content-disposition@0.5.1 perf: enable strict mode deps: cookie@0.1.5 Throw on invalid values provided to serialize deps: depd@~1.1.0 Support web browser loading perf: enable strict mode deps: escape-html@~1.0.3 perf: enable strict mode perf: optimize string replacement perf: use faster string coercion deps: finalhandler@0.4.1 deps: escape-html@~1.0.3 deps: merge-descriptors@1.0.1 perf: enable strict mode deps: methods@~1.1.2 perf: enable strict mode deps: parseurl@~1.3.1 perf: enable strict mode deps: proxy-addr@~1.0.10 deps: ipaddr.js@1.0.5 perf: enable strict mode deps: range-parser@~1.0.3 perf: enable strict mode deps: send@0.13.1 deps: depd@~1.1.0 deps: destroy@~1.0.4 deps: escape-html@~1.0.3 deps: range-parser@~1.0.3 deps: serve-static@~1.10.2 deps: escape-html@~1.0.3 deps: parseurl@~1.3.0 deps: send@0.13.1 4.13.3 / 2015-08-02 Fix infinite loop condition using mergeParams: true Fix inner numeric indices incorrectly altering parent req.params 4.13.2 / 2015-07-31 deps: accepts@~1.2.12 deps: mime-types@~2.1.4 deps: array-flatten@1.1.1 perf: enable strict mode deps: path-to-regexp@0.1.7 Fix regression with escaped round brackets and matching groups deps: type-is@~1.6.6 deps: mime-types@~2.1.4 4.13.1 / 2015-07-05 deps: accepts@~1.2.10 deps: mime-types@~2.1.2 deps: qs@4.0.0 Fix dropping parameters like hasOwnProperty Fix various parsing edge cases deps: type-is@~1.6.4 deps: mime-types@~2.1.2 perf: enable strict mode perf: remove argument reassignment 4.13.0 / 2015-06-20 Add settings to debug output Fix res.format error when only default provided Fix issue where next('route') in app.param would incorrectly skip values Fix hiding platform issues with decodeURIComponent Only URIError s are a 400 Fix using * before params in routes Fix using capture groups before params in routes Simplify res.cookie to call res.append Use array-flatten module for flattening arrays deps: accepts@~1.2.9 deps: mime-types@~2.1.1 perf: avoid argument reassignment & argument slice perf: avoid negotiator recursive construction perf: enable strict mode perf: remove unnecessary bitwise operator deps: cookie@0.1.3 perf: deduce the scope of try-catch deopt perf: remove argument reassignments deps: escape-html@1.0.2 deps: etag@~1.7.0 Always include entity length in ETags for hash length extensions Generate non-Stats ETags using MD5 only (no longer CRC32) Improve stat performance by removing hashing Improve support for JXcore Remove base64 padding in ETags to shorten Support \"fake\" stats objects in environments without fs Use MD5 instead of MD4 in weak ETags over 1KB deps: finalhandler@0.4.0 Fix a false-positive when unpiping in Node.js 0.8 Support statusCode property on Error objects Use unpipe module for unpiping requests deps: escape-html@1.0.2 deps: on-finished@~2.3.0 perf: enable strict mode perf: remove argument reassignment deps: fresh@0.3.0 Add weak ETag matching support deps: on-finished@~2.3.0 Add defined behavior for HTTP CONNECT requests Add defined behavior for HTTP Upgrade requests deps: ee-first@1.1.1 deps: path-to-regexp@0.1.6 deps: send@0.13.0 Allow Node.js HTTP server to set Date response header Fix incorrectly removing Content-Location on 304 response Improve the default redirect response headers Send appropriate headers on default error response Use http-errors for standard emitted errors Use statuses instead of http module for status messages deps: escape-html@1.0.2 deps: etag@~1.7.0 deps: fresh@0.3.0 deps: on-finished@~2.3.0 perf: enable strict mode perf: remove unnecessary array allocations deps: serve-static@~1.10.0 Add fallthrough option Fix reading options from options prototype Improve the default redirect response headers Malformed URLs now next() instead of 400 deps: escape-html@1.0.2 deps: send@0.13.0 perf: enable strict mode perf: remove argument reassignment deps: type-is@~1.6.3 deps: mime-types@~2.1.1 perf: reduce try block size perf: remove bitwise operations perf: enable strict mode perf: isolate app.render try block perf: remove argument reassignments in application perf: remove argument reassignments in request prototype perf: remove argument reassignments in response prototype perf: remove argument reassignments in routing perf: remove argument reassignments in View perf: skip attempting to decode zero length string perf: use saved reference to http.STATUS_CODES 4.12.4 / 2015-05-17 deps: accepts@~1.2.7 deps: mime-types@~2.0.11 deps: negotiator@0.5.3 deps: debug@~2.2.0 deps: ms@0.7.1 deps: depd@~1.0.1 deps: etag@~1.6.0 Improve support for JXcore Support \"fake\" stats objects in environments without fs deps: finalhandler@0.3.6 deps: debug@~2.2.0 deps: on-finished@~2.2.1 deps: on-finished@~2.2.1 Fix isFinished(req) when data buffered deps: proxy-addr@~1.0.8 deps: ipaddr.js@1.0.1 deps: qs@2.4.2 Fix allowing parameters like constructor deps: send@0.12.3 deps: debug@~2.2.0 deps: depd@~1.0.1 deps: etag@~1.6.0 deps: ms@0.7.1 deps: on-finished@~2.2.1 deps: serve-static@~1.9.3 deps: send@0.12.3 deps: type-is@~1.6.2 deps: mime-types@~2.0.11 4.12.3 / 2015-03-17 deps: accepts@~1.2.5 deps: mime-types@~2.0.10 deps: debug@~2.1.3 Fix high intensity foreground color for bold deps: ms@0.7.0 deps: finalhandler@0.3.4 deps: debug@~2.1.3 deps: proxy-addr@~1.0.7 deps: ipaddr.js@0.1.9 deps: qs@2.4.1 Fix error when parameter hasOwnProperty is present deps: send@0.12.2 Throw errors early for invalid extensions or index options deps: debug@~2.1.3 deps: serve-static@~1.9.2 deps: send@0.12.2 deps: type-is@~1.6.1 deps: mime-types@~2.0.10 4.12.2 / 2015-03-02 Fix regression where \"Request aborted\" is logged using res.sendFile 4.12.1 / 2015-03-01 Fix constructing application with non-configurable prototype properties Fix ECONNRESET errors from res.sendFile usage Fix req.host when using \"trust proxy\" hops count Fix req.protocol / req.secure when using \"trust proxy\" hops count Fix wrong code on aborted connections from res.sendFile deps: merge-descriptors@1.0.0 4.12.0 / 2015-02-23 Fix \"trust proxy\" setting to inherit when app is mounted Generate ETag s for all request responses No longer restricted to only responses for GET and HEAD requests Use content-type to parse Content-Type headers deps: accepts@~1.2.4 Fix preference sorting to be stable for long acceptable lists deps: mime-types@~2.0.9 deps: negotiator@0.5.1 deps: cookie-signature@1.0.6 deps: send@0.12.1 Always read the stat size from the file Fix mutating passed-in options deps: mime@1.3.4 deps: serve-static@~1.9.1 deps: send@0.12.1 deps: type-is@~1.6.0 fix argument reassignment fix false-positives in hasBody Transfer-Encoding check support wildcard for both type and subtype ( */* ) deps: mime-types@~2.0.9 4.11.2 / 2015-02-01 Fix res.redirect double-calling res.end for HEAD requests deps: accepts@~1.2.3 deps: mime-types@~2.0.8 deps: proxy-addr@~1.0.6 deps: ipaddr.js@0.1.8 deps: type-is@~1.5.6 deps: mime-types@~2.0.8 4.11.1 / 2015-01-20 deps: send@0.11.1 Fix root path disclosure deps: serve-static@~1.8.1 Fix redirect loop in Node.js 0.11.14 Fix root path disclosure deps: send@0.11.1 4.11.0 / 2015-01-13 Add res.append(field, val) to append headers Deprecate leading : in name for app.param(name, fn) Deprecate req.param() -- use req.params , req.body , or req.query instead Deprecate app.param(fn) Fix OPTIONS responses to include the HEAD method properly Fix res.sendFile not always detecting aborted connection Match routes iteratively to prevent stack overflows deps: accepts@~1.2.2 deps: mime-types@~2.0.7 deps: negotiator@0.5.0 deps: send@0.11.0 deps: debug@~2.1.1 deps: etag@~1.5.1 deps: ms@0.7.0 deps: on-finished@~2.2.0 deps: serve-static@~1.8.0 deps: send@0.11.0 4.10.8 / 2015-01-13 Fix crash from error within OPTIONS response handler deps: proxy-addr@~1.0.5 deps: ipaddr.js@0.1.6 4.10.7 / 2015-01-04 Fix Allow header for OPTIONS to not contain duplicate methods Fix incorrect \"Request aborted\" for res.sendFile when HEAD or 304 deps: debug@~2.1.1 deps: finalhandler@0.3.3 deps: debug@~2.1.1 deps: on-finished@~2.2.0 deps: methods@~1.1.1 deps: on-finished@~2.2.0 deps: serve-static@~1.7.2 Fix potential open redirect when mounted at root deps: type-is@~1.5.5 deps: mime-types@~2.0.7 4.10.6 / 2014-12-12 Fix exception in req.fresh / req.stale without response headers 4.10.5 / 2014-12-10 Fix res.send double-calling res.end for HEAD requests deps: accepts@~1.1.4 deps: mime-types@~2.0.4 deps: type-is@~1.5.4 deps: mime-types@~2.0.4 4.10.4 / 2014-11-24 Fix res.sendfile logging standard write errors 4.10.3 / 2014-11-23 Fix res.sendFile logging standard write errors deps: etag@~1.5.1 deps: proxy-addr@~1.0.4 deps: ipaddr.js@0.1.5 deps: qs@2.3.3 Fix arrayLimit behavior 4.10.2 / 2014-11-09 Correctly invoke async router callback asynchronously deps: accepts@~1.1.3 deps: mime-types@~2.0.3 deps: type-is@~1.5.3 deps: mime-types@~2.0.3 4.10.1 / 2014-10-28 Fix handling of URLs containing :// in the path deps: qs@2.3.2 Fix parsing of mixed objects and values 4.10.0 / 2014-10-23 Add support for app.set('views', array) Views are looked up in sequence in array of directories Fix res.send(status) to mention res.sendStatus(status) Fix handling of invalid empty URLs Use content-disposition module for res.attachment / res.download Sends standards-compliant Content-Disposition header Full Unicode support Use path.resolve in view lookup deps: debug@~2.1.0 Implement DEBUG_FD env variable support deps: depd@~1.0.0 deps: etag@~1.5.0 Improve string performance Slightly improve speed for weak ETags over 1KB deps: finalhandler@0.3.2 Terminate in progress response only on error Use on-finished to determine request status deps: debug@~2.1.0 deps: on-finished@~2.1.1 deps: on-finished@~2.1.1 Fix handling of pipelined requests deps: qs@2.3.0 Fix parsing of mixed implicit and explicit arrays deps: send@0.10.1 deps: debug@~2.1.0 deps: depd@~1.0.0 deps: etag@~1.5.0 deps: on-finished@~2.1.1 deps: serve-static@~1.7.1 deps: send@0.10.1 4.9.8 / 2014-10-17 Fix res.redirect body when redirect status specified deps: accepts@~1.1.2 Fix error when media type has invalid parameter deps: negotiator@0.4.9 4.9.7 / 2014-10-10 Fix using same param name in array of paths 4.9.6 / 2014-10-08 deps: accepts@~1.1.1 deps: mime-types@~2.0.2 deps: negotiator@0.4.8 deps: serve-static@~1.6.4 Fix redirect loop when index file serving disabled deps: type-is@~1.5.2 deps: mime-types@~2.0.2 4.9.5 / 2014-09-24 deps: etag@~1.4.0 deps: proxy-addr@~1.0.3 Use forwarded npm module deps: send@0.9.3 deps: etag@~1.4.0 deps: serve-static@~1.6.3 deps: send@0.9.3 4.9.4 / 2014-09-19 deps: qs@2.2.4 Fix issue with object keys starting with numbers truncated 4.9.3 / 2014-09-18 deps: proxy-addr@~1.0.2 Fix a global leak when multiple subnets are trusted deps: ipaddr.js@0.1.3 4.9.2 / 2014-09-17 Fix regression for empty string path in app.use Fix router.use to accept array of middleware without path Improve error message for bad app.use arguments 4.9.1 / 2014-09-16 Fix app.use to accept array of middleware without path deps: depd@0.4.5 deps: etag@~1.3.1 deps: send@0.9.2 deps: depd@0.4.5 deps: etag@~1.3.1 deps: range-parser@~1.0.2 deps: serve-static@~1.6.2 deps: send@0.9.2 4.9.0 / 2014-09-08 Add res.sendStatus Invoke callback for sendfile when client aborts Applies to res.sendFile , res.sendfile , and res.download err will be populated with request aborted error Support IP address host in req.subdomains Use etag to generate ETag headers deps: accepts@~1.1.0 update mime-types deps: cookie-signature@1.0.5 deps: debug@~2.0.0 deps: finalhandler@0.2.0 Set X-Content-Type-Options: nosniff header deps: debug@~2.0.0 deps: fresh@0.2.4 deps: media-typer@0.3.0 Throw error when parameter format invalid on parse deps: qs@2.2.3 Fix issue where first empty value in array is discarded deps: range-parser@~1.0.2 deps: send@0.9.1 Add lastModified option Use etag to generate ETag header deps: debug@~2.0.0 deps: fresh@0.2.4 deps: serve-static@~1.6.1 Add lastModified option deps: send@0.9.1 deps: type-is@~1.5.1 fix hasbody to be true for content-length: 0 deps: media-typer@0.3.0 deps: mime-types@~2.0.1 deps: vary@~1.0.0 Accept valid Vary header string as field 4.8.8 / 2014-09-04 deps: send@0.8.5 Fix a path traversal issue when using root Fix malicious path detection for empty string path deps: serve-static@~1.5.4 deps: send@0.8.5 4.8.7 / 2014-08-29 deps: qs@2.2.2 Remove unnecessary cloning 4.8.6 / 2014-08-27 deps: qs@2.2.0 Array parsing fix Performance improvements 4.8.5 / 2014-08-18 deps: send@0.8.3 deps: destroy@1.0.3 deps: on-finished@2.1.0 deps: serve-static@~1.5.3 deps: send@0.8.3 4.8.4 / 2014-08-14 deps: qs@1.2.2 deps: send@0.8.2 Work around fd leak in Node.js 0.10 for fs.ReadStream deps: serve-static@~1.5.2 deps: send@0.8.2 4.8.3 / 2014-08-10 deps: parseurl@~1.3.0 deps: qs@1.2.1 deps: serve-static@~1.5.1 Fix parsing of weird req.originalUrl values deps: parseurl@~1.3.0 deps: utils-merge@1.0.0 4.8.2 / 2014-08-07 deps: qs@1.2.0 Fix parsing array of objects 4.8.1 / 2014-08-06 fix incorrect deprecation warnings on res.download deps: qs@1.1.0 Accept urlencoded square brackets Accept empty values in implicit array notation 4.8.0 / 2014-08-05 add res.sendFile accepts a file system path instead of a URL requires an absolute path or root option specified deprecate res.sendfile -- use res.sendFile instead support mounted app as any argument to app.use() deps: qs@1.0.2 Complete rewrite Limits array length to 20 Limits object depth to 5 Limits parameters to 1,000 deps: send@0.8.1 Add extensions option deps: serve-static@~1.5.0 Add extensions option deps: send@0.8.1 4.7.4 / 2014-08-04 fix res.sendfile regression for serving directory index files deps: send@0.7.4 Fix incorrect 403 on Windows and Node.js 0.11 Fix serving index files without root dir deps: serve-static@~1.4.4 deps: send@0.7.4 4.7.3 / 2014-08-04 deps: send@0.7.3 Fix incorrect 403 on Windows and Node.js 0.11 deps: serve-static@~1.4.3 Fix incorrect 403 on Windows and Node.js 0.11 deps: send@0.7.3 4.7.2 / 2014-07-27 deps: depd@0.4.4 Work-around v8 generating empty stack traces deps: send@0.7.2 deps: depd@0.4.4 deps: serve-static@~1.4.2 4.7.1 / 2014-07-26 deps: depd@0.4.3 Fix exception when global Error.stackTraceLimit is too low deps: send@0.7.1 deps: depd@0.4.3 deps: serve-static@~1.4.1 4.7.0 / 2014-07-25 fix req.protocol for proxy-direct connections configurable query parser with app.set('query parser', parser) app.set('query parser', 'extended') parse with \"qs\" module app.set('query parser', 'simple') parse with \"querystring\" core module app.set('query parser', false) disable query string parsing app.set('query parser', true) enable simple parsing deprecate res.json(status, obj) -- use res.status(status).json(obj) instead deprecate res.jsonp(status, obj) -- use res.status(status).jsonp(obj) instead deprecate res.send(status, body) -- use res.status(status).send(body) instead deps: debug@1.0.4 deps: depd@0.4.2 Add TRACE_DEPRECATION environment variable Remove non-standard grey color from color output Support --no-deprecation argument Support --trace-deprecation argument deps: finalhandler@0.1.0 Respond after request fully read deps: debug@1.0.4 deps: parseurl@~1.2.0 Cache URLs based on original value Remove no-longer-needed URL mis-parse work-around Simplify the \"fast-path\" RegExp deps: send@0.7.0 Add dotfiles option Cap maxAge value to 1 year deps: debug@1.0.4 deps: depd@0.4.2 deps: serve-static@~1.4.0 deps: parseurl@~1.2.0 deps: send@0.7.0 perf: prevent multiple Buffer creation in res.send 4.6.1 / 2014-07-12 fix subapp.mountpath regression for app.use(subapp) 4.6.0 / 2014-07-11 accept multiple callbacks to app.use() add explicit \"Rosetta Flash JSONP abuse\" protection previous versions are not vulnerable; this is just explicit protection catch errors in multiple req.param(name, fn) handlers deprecate res.redirect(url, status) -- use res.redirect(status, url) instead fix res.send(status, num) to send num as json (not error) remove unnecessary escaping when res.jsonp returns JSON response support non-string path in app.use(path, fn) supports array of paths supports RegExp router: fix optimization on router exit router: refactor location of try blocks router: speed up standard app.use(fn) deps: debug@1.0.3 Add support for multiple wildcards in namespaces deps: finalhandler@0.0.3 deps: debug@1.0.3 deps: methods@1.1.0 add CONNECT deps: parseurl@~1.1.3 faster parsing of href-only URLs deps: path-to-regexp@0.1.3 deps: send@0.6.0 deps: debug@1.0.3 deps: serve-static@~1.3.2 deps: parseurl@~1.1.3 deps: send@0.6.0 perf: fix arguments reassign deopt in some res methods 4.5.1 / 2014-07-06 fix routing regression when altering req.method 4.5.0 / 2014-07-04 add deprecation message to non-plural req.accepts* add deprecation message to res.send(body, status) add deprecation message to res.vary() add headers option to res.sendfile use to set headers on successful file transfer add mergeParams option to Router merges req.params from parent routes add req.hostname -- correct name for what req.host returns deprecate things with depd module deprecate req.host -- use req.hostname instead fix behavior when handling request without routes fix handling when route.all is only route invoke router.param() only when route matches restore req.params after invoking router use finalhandler for final response handling use media-typer to alter content-type charset deps: accepts@~1.0.7 deps: send@0.5.0 Accept string for maxage (converted by ms ) Include link in default redirect response deps: serve-static@~1.3.0 Accept string for maxAge (converted by ms ) Add setHeaders option Include HTML link in redirect response deps: send@0.5.0 deps: type-is@~1.3.2 4.4.5 / 2014-06-26 deps: cookie-signature@1.0.4 fix for timing attacks 4.4.4 / 2014-06-20 fix res.attachment Unicode filenames in Safari fix \"trim prefix\" debug message in express:router deps: accepts@~1.0.5 deps: buffer-crc32@0.2.3 4.4.3 / 2014-06-11 fix persistence of modified req.params[name] from app.param() deps: accepts@1.0.3 deps: negotiator@0.4.6 deps: debug@1.0.2 deps: send@0.4.3 Do not throw uncatchable error on file open race condition Use escape-html for HTML escaping deps: debug@1.0.2 deps: finished@1.2.2 deps: fresh@0.2.2 deps: serve-static@1.2.3 Do not throw uncatchable error on file open race condition deps: send@0.4.3 4.4.2 / 2014-06-09 fix catching errors from top-level handlers use vary module for res.vary deps: debug@1.0.1 deps: proxy-addr@1.0.1 deps: send@0.4.2 fix \"event emitter leak\" warnings deps: debug@1.0.1 deps: finished@1.2.1 deps: serve-static@1.2.2 fix \"event emitter leak\" warnings deps: send@0.4.2 deps: type-is@1.2.1 4.4.1 / 2014-06-02 deps: methods@1.0.1 deps: send@0.4.1 Send max-age in Cache-Control in correct format deps: serve-static@1.2.1 use escape-html for escaping deps: send@0.4.1 4.4.0 / 2014-05-30 custom etag control with app.set('etag', val) app.set('etag', function(body, encoding){ return '\"etag\"' }) custom etag generation app.set('etag', 'weak') weak tag app.set('etag', 'strong') strong etag app.set('etag', false) turn off app.set('etag', true) standard etag mark res.send ETag as weak and reduce collisions update accepts to 1.0.2 Fix interpretation when header not in request update send to 0.4.0 Calculate ETag with md5 for reduced collisions Ignore stream errors after request ends deps: debug@0.8.1 update serve-static to 1.2.0 Calculate ETag with md5 for reduced collisions Ignore stream errors after request ends deps: send@0.4.0 4.3.2 / 2014-05-28 fix handling of errors from router.param() callbacks 4.3.1 / 2014-05-23 revert \"fix behavior of multiple app.VERB for the same path\" this caused a regression in the order of route execution 4.3.0 / 2014-05-21 add req.baseUrl to access the path stripped from req.url in routes fix behavior of multiple app.VERB for the same path fix issue routing requests among sub routers invoke router.param() only when necessary instead of every match proper proxy trust with app.set('trust proxy', trust) app.set('trust proxy', 1) trust first hop app.set('trust proxy', 'loopback') trust loopback addresses app.set('trust proxy', '10.0.0.1') trust single IP app.set('trust proxy', '10.0.0.1/16') trust subnet app.set('trust proxy', '10.0.0.1, 10.0.0.2') trust list app.set('trust proxy', false) turn off app.set('trust proxy', true) trust everything set proper charset in Content-Type for res.send update type-is to 1.2.0 support suffix matching 4.2.0 / 2014-05-11 deprecate app.del() -- use app.delete() instead deprecate res.json(obj, status) -- use res.json(status, obj) instead the edge-case res.json(status, num) requires res.status(status).json(num) deprecate res.jsonp(obj, status) -- use res.jsonp(status, obj) instead the edge-case res.jsonp(status, num) requires res.status(status).jsonp(num) fix req.next when inside router instance include ETag header in HEAD requests keep previous Content-Type for res.jsonp support PURGE method add app.purge add router.purge include PURGE in app.all update debug to 0.8.0 add enable() method change from stderr to stdout update methods to 1.0.0 add PURGE 4.1.2 / 2014-05-08 fix req.host for IPv6 literals fix res.jsonp error if callback param is object 4.1.1 / 2014-04-27 fix package.json to reflect supported node version 4.1.0 / 2014-04-24 pass options from res.sendfile to send preserve casing of headers in res.header and res.set support unicode file names in res.attachment and res.download update accepts to 1.0.1 deps: negotiator@0.4.0 update cookie to 0.1.2 Fix for maxAge == 0 made compat with expires field update send to 0.3.0 Accept API options in options object Coerce option types Control whether to generate etags Default directory access to 403 when index disabled Fix sending files with dots without root set Include file path in etag Make \"Can't set headers after they are sent.\" catchable Send full entity-body for multi range requests Set etags to \"weak\" Support \"If-Range\" header Support multiple index paths deps: mime@1.2.11 update serve-static to 1.1.0 Accept options directly to send module Resolve relative paths at middleware setup Use parseurl to parse the URL from request deps: send@0.3.0 update type-is to 1.1.0 add non-array values support add multipart as a shorthand 4.0.0 / 2014-04-09 remove: node 0.8 support connect and connect's patches except for charset handling express(1) - moved to express-generator express.createServer() - it has been deprecated for a long time. Use express() app.configure - use logic in your own app code app.router - is removed req.auth - use basic-auth instead req.accepted* - use req.accepts*() instead res.location - relative URL resolution is removed res.charset - include the charset in the content type when using res.set() all bundled middleware except static change: app.route -> app.mountpath when mounting an express app in another express app json spaces no longer enabled by default in development req.accepts* -> req.accepts*s - i.e. req.acceptsEncoding -> req.acceptsEncodings req.params is now an object instead of an array res.locals is no longer a function. It is a plain js object. Treat it as such. res.headerSent -> res.headersSent to match node.js ServerResponse object refactor: req.accepts* with accepts req.is with type-is path-to-regexp add: app.router() - returns the app Router instance app.route() - Proxy to the app's Router#route() method to create a new route Router & Route - public API 3.21.2 / 2015-07-31 deps: connect@2.30.2 deps: body-parser@~1.13.3 deps: compression@~1.5.2 deps: errorhandler@~1.4.2 deps: method-override@~2.3.5 deps: serve-index@~1.7.2 deps: type-is@~1.6.6 deps: vhost@~3.0.1 deps: vary@~1.0.1 Fix setting empty header from empty field perf: enable strict mode perf: remove argument reassignments 3.21.1 / 2015-07-05 deps: basic-auth@~1.0.3 deps: connect@2.30.1 deps: body-parser@~1.13.2 deps: compression@~1.5.1 deps: errorhandler@~1.4.1 deps: morgan@~1.6.1 deps: pause@0.1.0 deps: qs@4.0.0 deps: serve-index@~1.7.1 deps: type-is@~1.6.4 3.21.0 / 2015-06-18 deps: basic-auth@1.0.2 perf: enable strict mode perf: hoist regular expression perf: parse with regular expressions perf: remove argument reassignment deps: connect@2.30.0 deps: body-parser@~1.13.1 deps: bytes@2.1.0 deps: compression@~1.5.0 deps: cookie@0.1.3 deps: cookie-parser@~1.3.5 deps: csurf@~1.8.3 deps: errorhandler@~1.4.0 deps: express-session@~1.11.3 deps: finalhandler@0.4.0 deps: fresh@0.3.0 deps: morgan@~1.6.0 deps: serve-favicon@~2.3.0 deps: serve-index@~1.7.0 deps: serve-static@~1.10.0 deps: type-is@~1.6.3 deps: cookie@0.1.3 perf: deduce the scope of try-catch deopt perf: remove argument reassignments deps: escape-html@1.0.2 deps: etag@~1.7.0 Always include entity length in ETags for hash length extensions Generate non-Stats ETags using MD5 only (no longer CRC32) Improve stat performance by removing hashing Improve support for JXcore Remove base64 padding in ETags to shorten Support \"fake\" stats objects in environments without fs Use MD5 instead of MD4 in weak ETags over 1KB deps: fresh@0.3.0 Add weak ETag matching support deps: mkdirp@0.5.1 Work in global strict mode deps: send@0.13.0 Allow Node.js HTTP server to set Date response header Fix incorrectly removing Content-Location on 304 response Improve the default redirect response headers Send appropriate headers on default error response Use http-errors for standard emitted errors Use statuses instead of http module for status messages deps: escape-html@1.0.2 deps: etag@~1.7.0 deps: fresh@0.3.0 deps: on-finished@~2.3.0 perf: enable strict mode perf: remove unnecessary array allocations 3.20.3 / 2015-05-17 deps: connect@2.29.2 deps: body-parser@~1.12.4 deps: compression@~1.4.4 deps: connect-timeout@~1.6.2 deps: debug@~2.2.0 deps: depd@~1.0.1 deps: errorhandler@~1.3.6 deps: finalhandler@0.3.6 deps: method-override@~2.3.3 deps: morgan@~1.5.3 deps: qs@2.4.2 deps: response-time@~2.3.1 deps: serve-favicon@~2.2.1 deps: serve-index@~1.6.4 deps: serve-static@~1.9.3 deps: type-is@~1.6.2 deps: debug@~2.2.0 deps: ms@0.7.1 deps: depd@~1.0.1 deps: proxy-addr@~1.0.8 deps: ipaddr.js@1.0.1 deps: send@0.12.3 deps: debug@~2.2.0 deps: depd@~1.0.1 deps: etag@~1.6.0 deps: ms@0.7.1 deps: on-finished@~2.2.1 3.20.2 / 2015-03-16 deps: connect@2.29.1 deps: body-parser@~1.12.2 deps: compression@~1.4.3 deps: connect-timeout@~1.6.1 deps: debug@~2.1.3 deps: errorhandler@~1.3.5 deps: express-session@~1.10.4 deps: finalhandler@0.3.4 deps: method-override@~2.3.2 deps: morgan@~1.5.2 deps: qs@2.4.1 deps: serve-index@~1.6.3 deps: serve-static@~1.9.2 deps: type-is@~1.6.1 deps: debug@~2.1.3 Fix high intensity foreground color for bold deps: ms@0.7.0 deps: merge-descriptors@1.0.0 deps: proxy-addr@~1.0.7 deps: ipaddr.js@0.1.9 deps: send@0.12.2 Throw errors early for invalid extensions or index options deps: debug@~2.1.3 3.20.1 / 2015-02-28 Fix req.host when using \"trust proxy\" hops count Fix req.protocol / req.secure when using \"trust proxy\" hops count 3.20.0 / 2015-02-18 Fix \"trust proxy\" setting to inherit when app is mounted Generate ETag s for all request responses No longer restricted to only responses for GET and HEAD requests Use content-type to parse Content-Type headers deps: connect@2.29.0 Use content-type to parse Content-Type headers deps: body-parser@~1.12.0 deps: compression@~1.4.1 deps: connect-timeout@~1.6.0 deps: cookie-parser@~1.3.4 deps: cookie-signature@1.0.6 deps: csurf@~1.7.0 deps: errorhandler@~1.3.4 deps: express-session@~1.10.3 deps: http-errors@~1.3.1 deps: response-time@~2.3.0 deps: serve-index@~1.6.2 deps: serve-static@~1.9.1 deps: type-is@~1.6.0 deps: cookie-signature@1.0.6 deps: send@0.12.1 Always read the stat size from the file Fix mutating passed-in options deps: mime@1.3.4 3.19.2 / 2015-02-01 deps: connect@2.28.3 deps: compression@~1.3.1 deps: csurf@~1.6.6 deps: errorhandler@~1.3.3 deps: express-session@~1.10.2 deps: serve-index@~1.6.1 deps: type-is@~1.5.6 deps: proxy-addr@~1.0.6 deps: ipaddr.js@0.1.8 3.19.1 / 2015-01-20 deps: connect@2.28.2 deps: body-parser@~1.10.2 deps: serve-static@~1.8.1 deps: send@0.11.1 Fix root path disclosure 3.19.0 / 2015-01-09 Fix OPTIONS responses to include the HEAD method property Use readline for prompt in express(1) deps: commander@2.6.0 deps: connect@2.28.1 deps: body-parser@~1.10.1 deps: compression@~1.3.0 deps: connect-timeout@~1.5.0 deps: csurf@~1.6.4 deps: debug@~2.1.1 deps: errorhandler@~1.3.2 deps: express-session@~1.10.1 deps: finalhandler@0.3.3 deps: method-override@~2.3.1 deps: morgan@~1.5.1 deps: serve-favicon@~2.2.0 deps: serve-index@~1.6.0 deps: serve-static@~1.8.0 deps: type-is@~1.5.5 deps: debug@~2.1.1 deps: methods@~1.1.1 deps: proxy-addr@~1.0.5 deps: ipaddr.js@0.1.6 deps: send@0.11.0 deps: debug@~2.1.1 deps: etag@~1.5.1 deps: ms@0.7.0 deps: on-finished@~2.2.0 3.18.6 / 2014-12-12 Fix exception in req.fresh / req.stale without response headers 3.18.5 / 2014-12-11 deps: connect@2.27.6 deps: compression@~1.2.2 deps: express-session@~1.9.3 deps: http-errors@~1.2.8 deps: serve-index@~1.5.3 deps: type-is@~1.5.4 3.18.4 / 2014-11-23 deps: connect@2.27.4 deps: body-parser@~1.9.3 deps: compression@~1.2.1 deps: errorhandler@~1.2.3 deps: express-session@~1.9.2 deps: qs@2.3.3 deps: serve-favicon@~2.1.7 deps: serve-static@~1.5.1 deps: type-is@~1.5.3 deps: etag@~1.5.1 deps: proxy-addr@~1.0.4 deps: ipaddr.js@0.1.5 3.18.3 / 2014-11-09 deps: connect@2.27.3 Correctly invoke async callback asynchronously deps: csurf@~1.6.3 3.18.2 / 2014-10-28 deps: connect@2.27.2 Fix handling of URLs containing :// in the path deps: body-parser@~1.9.2 deps: qs@2.3.2 3.18.1 / 2014-10-22 Fix internal utils.merge deprecation warnings deps: connect@2.27.1 deps: body-parser@~1.9.1 deps: express-session@~1.9.1 deps: finalhandler@0.3.2 deps: morgan@~1.4.1 deps: qs@2.3.0 deps: serve-static@~1.7.1 deps: send@0.10.1 deps: on-finished@~2.1.1 3.18.0 / 2014-10-17 Use content-disposition module for res.attachment / res.download Sends standards-compliant Content-Disposition header Full Unicode support Use etag module to generate ETag headers deps: connect@2.27.0 Use http-errors module for creating errors Use utils-merge module for merging objects deps: body-parser@~1.9.0 deps: compression@~1.2.0 deps: connect-timeout@~1.4.0 deps: debug@~2.1.0 deps: depd@~1.0.0 deps: express-session@~1.9.0 deps: finalhandler@0.3.1 deps: method-override@~2.3.0 deps: morgan@~1.4.0 deps: response-time@~2.2.0 deps: serve-favicon@~2.1.6 deps: serve-index@~1.5.0 deps: serve-static@~1.7.0 deps: debug@~2.1.0 Implement DEBUG_FD env variable support deps: depd@~1.0.0 deps: send@0.10.0 deps: debug@~2.1.0 deps: depd@~1.0.0 deps: etag@~1.5.0 3.17.8 / 2014-10-15 deps: connect@2.26.6 deps: compression@~1.1.2 deps: csurf@~1.6.2 deps: errorhandler@~1.2.2 3.17.7 / 2014-10-08 deps: connect@2.26.5 Fix accepting non-object arguments to logger deps: serve-static@~1.6.4 3.17.6 / 2014-10-02 deps: connect@2.26.4 deps: morgan@~1.3.2 deps: type-is@~1.5.2 3.17.5 / 2014-09-24 deps: connect@2.26.3 deps: body-parser@~1.8.4 deps: serve-favicon@~2.1.5 deps: serve-static@~1.6.3 deps: proxy-addr@~1.0.3 Use forwarded npm module deps: send@0.9.3 deps: etag@~1.4.0 3.17.4 / 2014-09-19 deps: connect@2.26.2 deps: body-parser@~1.8.3 deps: qs@2.2.4 3.17.3 / 2014-09-18 deps: proxy-addr@~1.0.2 Fix a global leak when multiple subnets are trusted deps: ipaddr.js@0.1.3 3.17.2 / 2014-09-15 Use crc instead of buffer-crc32 for speed deps: connect@2.26.1 deps: body-parser@~1.8.2 deps: depd@0.4.5 deps: express-session@~1.8.2 deps: morgan@~1.3.1 deps: serve-favicon@~2.1.3 deps: serve-static@~1.6.2 deps: depd@0.4.5 deps: send@0.9.2 deps: depd@0.4.5 deps: etag@~1.3.1 deps: range-parser@~1.0.2 3.17.1 / 2014-09-08 Fix error in req.subdomains on empty host 3.17.0 / 2014-09-08 Support X-Forwarded-Host in req.subdomains Support IP address host in req.subdomains deps: connect@2.26.0 deps: body-parser@~1.8.1 deps: compression@~1.1.0 deps: connect-timeout@~1.3.0 deps: cookie-parser@~1.3.3 deps: cookie-signature@1.0.5 deps: csurf@~1.6.1 deps: debug@~2.0.0 deps: errorhandler@~1.2.0 deps: express-session@~1.8.1 deps: finalhandler@0.2.0 deps: fresh@0.2.4 deps: media-typer@0.3.0 deps: method-override@~2.2.0 deps: morgan@~1.3.0 deps: qs@2.2.3 deps: serve-favicon@~2.1.3 deps: serve-index@~1.2.1 deps: serve-static@~1.6.1 deps: type-is@~1.5.1 deps: vhost@~3.0.0 deps: cookie-signature@1.0.5 deps: debug@~2.0.0 deps: fresh@0.2.4 deps: media-typer@0.3.0 Throw error when parameter format invalid on parse deps: range-parser@~1.0.2 deps: send@0.9.1 Add lastModified option Use etag to generate ETag header deps: debug@~2.0.0 deps: fresh@0.2.4 deps: vary@~1.0.0 Accept valid Vary header string as field 3.16.10 / 2014-09-04 deps: connect@2.25.10 deps: serve-static@~1.5.4 deps: send@0.8.5 Fix a path traversal issue when using root Fix malicious path detection for empty string path 3.16.9 / 2014-08-29 deps: connect@2.25.9 deps: body-parser@~1.6.7 deps: qs@2.2.2 3.16.8 / 2014-08-27 deps: connect@2.25.8 deps: body-parser@~1.6.6 deps: csurf@~1.4.1 deps: qs@2.2.0 3.16.7 / 2014-08-18 deps: connect@2.25.7 deps: body-parser@~1.6.5 deps: express-session@~1.7.6 deps: morgan@~1.2.3 deps: serve-static@~1.5.3 deps: send@0.8.3 deps: destroy@1.0.3 deps: on-finished@2.1.0 3.16.6 / 2014-08-14 deps: connect@2.25.6 deps: body-parser@~1.6.4 deps: qs@1.2.2 deps: serve-static@~1.5.2 deps: send@0.8.2 Work around fd leak in Node.js 0.10 for fs.ReadStream 3.16.5 / 2014-08-11 deps: connect@2.25.5 Fix backwards compatibility in logger 3.16.4 / 2014-08-10 Fix original URL parsing in res.location deps: connect@2.25.4 Fix query middleware breaking with argument deps: body-parser@~1.6.3 deps: compression@~1.0.11 deps: connect-timeout@~1.2.2 deps: express-session@~1.7.5 deps: method-override@~2.1.3 deps: on-headers@~1.0.0 deps: parseurl@~1.3.0 deps: qs@1.2.1 deps: response-time@~2.0.1 deps: serve-index@~1.1.6 deps: serve-static@~1.5.1 deps: parseurl@~1.3.0 3.16.3 / 2014-08-07 deps: connect@2.25.3 deps: multiparty@3.3.2 3.16.2 / 2014-08-07 deps: connect@2.25.2 deps: body-parser@~1.6.2 deps: qs@1.2.0 3.16.1 / 2014-08-06 deps: connect@2.25.1 deps: body-parser@~1.6.1 deps: qs@1.1.0 3.16.0 / 2014-08-05 deps: connect@2.25.0 deps: body-parser@~1.6.0 deps: compression@~1.0.10 deps: csurf@~1.4.0 deps: express-session@~1.7.4 deps: qs@1.0.2 deps: serve-static@~1.5.0 deps: send@0.8.1 Add extensions option 3.15.3 / 2014-08-04 fix res.sendfile regression for serving directory index files deps: connect@2.24.3 deps: serve-index@~1.1.5 deps: serve-static@~1.4.4 deps: send@0.7.4 Fix incorrect 403 on Windows and Node.js 0.11 Fix serving index files without root dir 3.15.2 / 2014-07-27 deps: connect@2.24.2 deps: body-parser@~1.5.2 deps: depd@0.4.4 deps: express-session@~1.7.2 deps: morgan@~1.2.2 deps: serve-static@~1.4.2 deps: depd@0.4.4 Work-around v8 generating empty stack traces deps: send@0.7.2 deps: depd@0.4.4 3.15.1 / 2014-07-26 deps: connect@2.24.1 deps: body-parser@~1.5.1 deps: depd@0.4.3 deps: express-session@~1.7.1 deps: morgan@~1.2.1 deps: serve-index@~1.1.4 deps: serve-static@~1.4.1 deps: depd@0.4.3 Fix exception when global Error.stackTraceLimit is too low deps: send@0.7.1 deps: depd@0.4.3 3.15.0 / 2014-07-22 Fix req.protocol for proxy-direct connections Pass options from res.sendfile to send deps: connect@2.24.0 deps: body-parser@~1.5.0 deps: compression@~1.0.9 deps: connect-timeout@~1.2.1 deps: debug@1.0.4 deps: depd@0.4.2 deps: express-session@~1.7.0 deps: finalhandler@0.1.0 deps: method-override@~2.1.2 deps: morgan@~1.2.0 deps: multiparty@3.3.1 deps: parseurl@~1.2.0 deps: serve-static@~1.4.0 deps: debug@1.0.4 deps: depd@0.4.2 Add TRACE_DEPRECATION environment variable Remove non-standard grey color from color output Support --no-deprecation argument Support --trace-deprecation argument deps: parseurl@~1.2.0 Cache URLs based on original value Remove no-longer-needed URL mis-parse work-around Simplify the \"fast-path\" RegExp deps: send@0.7.0 Add dotfiles option Cap maxAge value to 1 year deps: debug@1.0.4 deps: depd@0.4.2 3.14.0 / 2014-07-11 add explicit \"Rosetta Flash JSONP abuse\" protection previous versions are not vulnerable; this is just explicit protection deprecate res.redirect(url, status) -- use res.redirect(status, url) instead fix res.send(status, num) to send num as json (not error) remove unnecessary escaping when res.jsonp returns JSON response deps: basic-auth@1.0.0 support empty password support empty username deps: connect@2.23.0 deps: debug@1.0.3 deps: express-session@~1.6.4 deps: method-override@~2.1.0 deps: parseurl@~1.1.3 deps: serve-static@~1.3.1 deps: debug@1.0.3 Add support for multiple wildcards in namespaces deps: methods@1.1.0 add CONNECT deps: parseurl@~1.1.3 faster parsing of href-only URLs 3.13.0 / 2014-07-03 add deprecation message to app.configure add deprecation message to req.auth use basic-auth to parse Authorization header deps: connect@2.22.0 deps: csurf@~1.3.0 deps: express-session@~1.6.1 deps: multiparty@3.3.0 deps: serve-static@~1.3.0 deps: send@0.5.0 Accept string for maxage (converted by ms ) Include link in default redirect response 3.12.1 / 2014-06-26 deps: connect@2.21.1 deps: cookie-parser@1.3.2 deps: cookie-signature@1.0.4 deps: express-session@~1.5.2 deps: type-is@~1.3.2 deps: cookie-signature@1.0.4 fix for timing attacks 3.12.0 / 2014-06-21 use media-typer to alter content-type charset deps: connect@2.21.0 deprecate connect(middleware) -- use app.use(middleware) instead deprecate connect.createServer() -- use connect() instead fix res.setHeader() patch to work with get -> append -> set pattern deps: compression@~1.0.8 deps: errorhandler@~1.1.1 deps: express-session@~1.5.0 deps: serve-index@~1.1.3 3.11.0 / 2014-06-19 deprecate things with depd module deps: buffer-crc32@0.2.3 deps: connect@2.20.2 deprecate verify option to json -- use body-parser npm module instead deprecate verify option to urlencoded -- use body-parser npm module instead deprecate things with depd module use finalhandler for final response handling use media-typer to parse content-type for charset deps: body-parser@1.4.3 deps: connect-timeout@1.1.1 deps: cookie-parser@1.3.1 deps: csurf@1.2.2 deps: errorhandler@1.1.0 deps: express-session@1.4.0 deps: multiparty@3.2.9 deps: serve-index@1.1.2 deps: type-is@1.3.1 deps: vhost@2.0.0 3.10.5 / 2014-06-11 deps: connect@2.19.6 deps: body-parser@1.3.1 deps: compression@1.0.7 deps: debug@1.0.2 deps: serve-index@1.1.1 deps: serve-static@1.2.3 deps: debug@1.0.2 deps: send@0.4.3 Do not throw uncatchable error on file open race condition Use escape-html for HTML escaping deps: debug@1.0.2 deps: finished@1.2.2 deps: fresh@0.2.2 3.10.4 / 2014-06-09 deps: connect@2.19.5 fix \"event emitter leak\" warnings deps: csurf@1.2.1 deps: debug@1.0.1 deps: serve-static@1.2.2 deps: type-is@1.2.1 deps: debug@1.0.1 deps: send@0.4.2 fix \"event emitter leak\" warnings deps: finished@1.2.1 deps: debug@1.0.1 3.10.3 / 2014-06-05 use vary module for res.vary deps: connect@2.19.4 deps: errorhandler@1.0.2 deps: method-override@2.0.2 deps: serve-favicon@2.0.1 deps: debug@1.0.0 3.10.2 / 2014-06-03 deps: connect@2.19.3 deps: compression@1.0.6 3.10.1 / 2014-06-03 deps: connect@2.19.2 deps: compression@1.0.4 deps: proxy-addr@1.0.1 3.10.0 / 2014-06-02 deps: connect@2.19.1 deprecate methodOverride() -- use method-override npm module instead deps: body-parser@1.3.0 deps: method-override@2.0.1 deps: multiparty@3.2.8 deps: response-time@2.0.0 deps: serve-static@1.2.1 deps: methods@1.0.1 deps: send@0.4.1 Send max-age in Cache-Control in correct format 3.9.0 / 2014-05-30 custom etag control with app.set('etag', val) app.set('etag', function(body, encoding){ return '\"etag\"' }) custom etag generation app.set('etag', 'weak') weak tag app.set('etag', 'strong') strong etag app.set('etag', false) turn off app.set('etag', true) standard etag Include ETag in HEAD requests mark res.send ETag as weak and reduce collisions update connect to 2.18.0 deps: compression@1.0.3 deps: serve-index@1.1.0 deps: serve-static@1.2.0 update send to 0.4.0 Calculate ETag with md5 for reduced collisions Ignore stream errors after request ends deps: debug@0.8.1 3.8.1 / 2014-05-27 update connect to 2.17.3 deps: body-parser@1.2.2 deps: express-session@1.2.1 deps: method-override@1.0.2 3.8.0 / 2014-05-21 keep previous Content-Type for res.jsonp set proper charset in Content-Type for res.send update connect to 2.17.1 fix res.charset appending charset when content-type has one deps: express-session@1.2.0 deps: morgan@1.1.1 deps: serve-index@1.0.3 3.7.0 / 2014-05-18 proper proxy trust with app.set('trust proxy', trust) app.set('trust proxy', 1) trust first hop app.set('trust proxy', 'loopback') trust loopback addresses app.set('trust proxy', '10.0.0.1') trust single IP app.set('trust proxy', '10.0.0.1/16') trust subnet app.set('trust proxy', '10.0.0.1, 10.0.0.2') trust list app.set('trust proxy', false) turn off app.set('trust proxy', true) trust everything update connect to 2.16.2 deprecate res.headerSent -- use res.headersSent deprecate res.on(\"header\") -- use on-headers module instead fix edge-case in res.appendHeader that would append in wrong order json: use body-parser urlencoded: use body-parser dep: bytes@1.0.0 dep: cookie-parser@1.1.0 dep: csurf@1.2.0 dep: express-session@1.1.0 dep: method-override@1.0.1 3.6.0 / 2014-05-09 deprecate app.del() -- use app.delete() instead deprecate res.json(obj, status) -- use res.json(status, obj) instead the edge-case res.json(status, num) requires res.status(status).json(num) deprecate res.jsonp(obj, status) -- use res.jsonp(status, obj) instead the edge-case res.jsonp(status, num) requires res.status(status).jsonp(num) support PURGE method add app.purge add router.purge include PURGE in app.all update connect to 2.15.0 Add res.appendHeader Call error stack even when response has been sent Patch res.headerSent to return Boolean Patch res.headersSent for node.js 0.8 Prevent default 404 handler after response sent dep: compression@1.0.2 dep: connect-timeout@1.1.0 dep: debug@^0.8.0 dep: errorhandler@1.0.1 dep: express-session@1.0.4 dep: morgan@1.0.1 dep: serve-favicon@2.0.0 dep: serve-index@1.0.2 update debug to 0.8.0 add enable() method change from stderr to stdout update methods to 1.0.0 add PURGE update mkdirp to 0.5.0 3.5.3 / 2014-05-08 fix req.host for IPv6 literals fix res.jsonp error if callback param is object 3.5.2 / 2014-04-24 update connect to 2.14.5 update cookie to 0.1.2 update mkdirp to 0.4.0 update send to 0.3.0 3.5.1 / 2014-03-25 pin less-middleware in generated app 3.5.0 / 2014-03-06 bump deps 3.4.8 / 2014-01-13 prevent incorrect automatic OPTIONS responses #1868 @dpatti update binary and examples for jade 1.0 #1876 @yossi, #1877 @reqshark, #1892 @matheusazzi throw 400 in case of malformed paths @rlidwka 3.4.7 / 2013-12-10 update connect 3.4.6 / 2013-12-01 update connect (raw-body) 3.4.5 / 2013-11-27 update connect res.location: remove leading ./ #1802 @kapouer res.redirect: fix `res.redirect('toString') #1829 @michaelficarra res.send: always send ETag when content-length > 0 router: add Router.all() method 3.4.4 / 2013-10-29 update connect update supertest update methods express(1): replace bodyParser() with urlencoded() and json() #1795 @chirag04 3.4.3 / 2013-10-23 update connect 3.4.2 / 2013-10-18 update connect downgrade commander 3.4.1 / 2013-10-15 update connect update commander jsonp: check if callback is a function router: wrap encodeURIComponent in a try/catch #1735 (@lxe) res.format: now includes charset @1747 (@sorribas) res.links: allow multiple calls @1746 (@sorribas) 3.4.0 / 2013-09-07 add res.vary(). Closes #1682 update connect 3.3.8 / 2013-09-02 update connect 3.3.7 / 2013-08-28 update connect 3.3.6 / 2013-08-27 Revert \"remove charset from json responses. Closes #1631\" (causes issues in some clients) add: req.accepts take an argument list 3.3.4 / 2013-07-08 update send and connect 3.3.3 / 2013-07-04 update connect 3.3.2 / 2013-07-03 update connect update send remove .version export 3.3.1 / 2013-06-27 update connect 3.3.0 / 2013-06-26 update connect add support for multiple X-Forwarded-Proto values. Closes #1646 change: remove charset from json responses. Closes #1631 change: return actual booleans from req.accept* functions fix jsonp callback array throw 3.2.6 / 2013-06-02 update connect 3.2.5 / 2013-05-21 update connect update node-cookie add: throw a meaningful error when there is no default engine change generation of ETags with res.send() to GET requests only. Closes #1619 3.2.4 / 2013-05-09 fix req.subdomains when no Host is present fix req.host when no Host is present, return undefined 3.2.3 / 2013-05-07 update connect / qs 3.2.2 / 2013-05-03 update qs 3.2.1 / 2013-04-29 add app.VERB() paths array deprecation warning update connect update qs and remove all ~ semver crap fix: accept number as value of Signed Cookie 3.2.0 / 2013-04-15 add \"view\" constructor setting to override view behaviour add req.acceptsEncoding(name) add req.acceptedEncodings revert cookie signature change causing session race conditions fix sorting of Accept values of the same quality 3.1.2 / 2013-04-12 add support for custom Accept parameters update cookie-signature 3.1.1 / 2013-04-01 add X-Forwarded-Host support to req.host fix relative redirects update mkdirp update buffer-crc32 remove legacy app.configure() method from app template. 3.1.0 / 2013-01-25 add support for leading \".\" in \"view engine\" setting add array support to res.set() add node 0.8.x to travis.yml add \"subdomain offset\" setting for tweaking req.subdomains add res.location(url) implementing res.redirect() -like setting of Location use app.get() for x-powered-by setting for inheritance fix colons in passwords for req.auth 3.0.6 / 2013-01-04 add http verb methods to Router update connect fix mangling of the res.cookie() options object fix jsonp whitespace escape. Closes #1132 3.0.5 / 2012-12-19 add throwing when a non-function is passed to a route fix: explicitly remove Transfer-Encoding header from 204 and 304 responses revert \"add 'etag' option\" 3.0.4 / 2012-12-05 add 'etag' option to disable res.send() Etags add escaping of urls in text/plain in res.redirect() for old browsers interpreting as html change crc32 module for a more liberal license update connect 3.0.3 / 2012-11-13 update connect update cookie module fix cookie max-age 3.0.2 / 2012-11-08 add OPTIONS to cors example. Closes #1398 fix route chaining regression. Closes #1397 3.0.1 / 2012-11-01 update connect 3.0.0 / 2012-10-23 add make clean add \"Basic\" check to req.auth add req.auth test coverage add cb && cb(payload) to res.jsonp() . Closes #1374 add backwards compat for res.redirect() status. Closes #1336 add support for res.json() to retain previously defined Content-Types. Closes #1349 update connect change res.redirect() to utilize a pathname-relative Location again. Closes #1382 remove non-primitive string support for res.send() fix view-locals example. Closes #1370 fix route-separation example 3.0.0rc5 / 2012-09-18 update connect add redis search example add static-files example add \"x-powered-by\" setting ( app.disable('x-powered-by') ) add \"application/octet-stream\" redirect Accept test case. Closes #1317 3.0.0rc4 / 2012-08-30 add res.jsonp() . Closes #1307 add \"verbose errors\" option to error-pages example add another route example to express(1) so people are not so confused add redis online user activity tracking example update connect dep fix etag quoting. Closes #1310 fix error-pages 404 status fix jsonp callback char restrictions remove old OPTIONS default response 3.0.0rc3 / 2012-08-13 update connect dep fix signed cookies to work with connect.cookieParser() (\"s:\" prefix was missing) [tnydwrds] fix res.render() clobbering of \"locals\" 3.0.0rc2 / 2012-08-03 add CORS example update connect dep deprecate .createServer() & remove old stale examples fix: escape res.redirect() link fix vhost example 3.0.0rc1 / 2012-07-24 add more examples to view-locals add scheme-relative redirects ( res.redirect(\"//foo.com\") ) support update cookie dep update connect dep update send dep fix express(1) -h flag, use -H for hogan. Closes #1245 fix res.sendfile() socket error handling regression 3.0.0beta7 / 2012-07-16 update connect dep for send() root normalization regression 3.0.0beta6 / 2012-07-13 add err.view property for view errors. Closes #1226 add \"jsonp callback name\" setting add support for \"/foo/:bar*\" non-greedy matches change res.sendfile() to use send() module change res.send to use \"response-send\" module remove app.locals.use and res.locals.use , use regular middleware 3.0.0beta5 / 2012-07-03 add \"make check\" support add route-map example add res.json(obj, status) support back for BC add \"methods\" dep, remove internal methods module update connect dep update auth example to utilize cores pbkdf2 updated tests to use \"supertest\" 3.0.0beta4 / 2012-06-25 Added req.auth Added req.range(size) Added res.links(obj) Added res.send(body, status) support back for backwards compat Added .default() support to res.format() Added 2xx / 304 check to req.fresh Revert \"Added + support to the router\" Fixed res.send() freshness check, respect res.statusCode 3.0.0beta3 / 2012-06-15 Added hogan --hjs to express(1) [nullfirm] Added another example to content-negotiation Added fresh dep Changed: res.send() always checks freshness Fixed: expose connects mime module. Closes #1165 3.0.0beta2 / 2012-06-06 Added + support to the router Added req.host Changed req.param() to check route first Update connect dep 3.0.0beta1 / 2012-06-01 Added res.format() callback to override default 406 behaviour Fixed res.redirect() 406. Closes #1154 3.0.0alpha5 / 2012-05-30 Added req.ip Added { signed: true } option to res.cookie() Removed res.signedCookie() Changed: dont reverse req.ips Fixed \"trust proxy\" setting check for req.ips 3.0.0alpha4 / 2012-05-09 Added: allow [] in jsonp callback. Closes #1128 Added PORT env var support in generated template. Closes #1118 [benatkin] Updated: connect 2.2.2 3.0.0alpha3 / 2012-05-04 Added public app.routes . Closes #887 Added view-locals example Added mvc example Added res.locals.use() . Closes #1120 Added conditional-GET support to res.send() Added: coerce res.set() values to strings Changed: moved static() in generated apps below router Changed: res.send() only set ETag when not previously set Changed connect 2.2.1 dep Changed: make test now runs unit / acceptance tests Fixed req/res proto inheritance 3.0.0alpha2 / 2012-04-26 Added make benchmark back Added res.send() support for String objects Added client-side data exposing example Added res.header() and req.header() aliases for BC Added express.createServer() for BC Perf: memoize parsed urls Perf: connect 2.2.0 dep Changed: make expressInit() middleware self-aware Fixed: use app.get() for all core settings Fixed redis session example Fixed session example. Closes #1105 Fixed generated express dep. Closes #1078 3.0.0alpha1 / 2012-04-15 Added app.locals.use(callback) Added app.locals object Added app.locals(obj) Added res.locals object Added res.locals(obj) Added res.format() for content-negotiation Added app.engine() Added res.cookie() JSON cookie support Added \"trust proxy\" setting Added req.subdomains Added req.protocol Added req.secure Added req.path Added req.ips Added req.fresh Added req.stale Added comma-delimited / array support for req.accepts() Added debug instrumentation Added res.set(obj) Added res.set(field, value) Added res.get(field) Added app.get(setting) . Closes #842 Added req.acceptsLanguage() Added req.acceptsCharset() Added req.accepted Added req.acceptedLanguages Added req.acceptedCharsets Added \"json replacer\" setting Added \"json spaces\" setting Added X-Forwarded-Proto support to res.redirect() . Closes #92 Added --less support to express(1) Added express.response prototype Added express.request prototype Added express.application prototype Added app.path() Added app.render() Added res.type() to replace res.contentType() Changed: res.redirect() to add relative support Changed: enable \"jsonp callback\" by default Changed: renamed \"case sensitive routes\" to \"case sensitive routing\" Rewrite of all tests with mocha Removed \"root\" setting Removed res.redirect('home') support Removed req.notify() Removed app.register() Removed app.redirect() Removed app.is() Removed app.helpers() Removed app.dynamicHelpers() Fixed res.sendfile() with non-GET. Closes #723 Fixed express(1) public dir for windows. Closes #866 2.5.9/ 2012-04-02 Added support for PURGE request method [pbuyle] Fixed express(1) generated app app.address() before listening [mmalecki] 2.5.8 / 2012-02-08 Update mkdirp dep. Closes #991 2.5.7 / 2012-02-06 Fixed app.all duplicate DELETE requests [mscdex] 2.5.6 / 2012-01-13 Updated hamljs dev dep. Closes #953 2.5.5 / 2012-01-08 Fixed: set filename on cached templates [matthewleon] 2.5.4 / 2012-01-02 Fixed express(1) eol on 0.4.x. Closes #947 2.5.3 / 2011-12-30 Fixed req.is() when a charset is present 2.5.2 / 2011-12-10 Fixed: express(1) LF -> CRLF for windows 2.5.1 / 2011-11-17 Changed: updated connect to 1.8.x Removed sass.js support from express(1) 2.5.0 / 2011-10-24 Added ./routes dir for generated app by default Added npm install reminder to express(1) app gen Added 0.5.x support Removed make test-cov since it wont work with node 0.5.x Fixed express(1) public dir for windows. Closes #866 2.4.7 / 2011-10-05 Added mkdirp to express(1). Closes #795 Added simple json-config example Added shorthand for the parsed request's pathname via req.path Changed connect dep to 1.7.x to fix npm issue... Fixed res.redirect() HEAD support. [reported by xerox] Fixed req.flash() , only escape args Fixed absolute path checking on windows. Closes #829 [reported by andrewpmckenzie] 2.4.6 / 2011-08-22 Fixed multiple param callback regression. Closes #824 [reported by TroyGoode] 2.4.5 / 2011-08-19 Added support for routes to handle errors. Closes #809 Added app.routes.all() . Closes #803 Added \"basepath\" setting to work in conjunction with reverse proxies etc. Refactored Route to use a single array of callbacks Added support for multiple callbacks for app.param() . Closes #801 Closes #805 Changed: removed .call(self) for route callbacks Dependency: qs >= 0.3.1 Fixed res.redirect() on windows due to join() usage. Closes #808 2.4.4 / 2011-08-05 Fixed res.header() intention of a set, even when undefined Fixed * , value no longer required Fixed res.send(204) support. Closes #771 2.4.3 / 2011-07-14 Added docs for status option special-case. Closes #739 Fixed options.filename , exposing the view path to template engines 2.4.2. / 2011-07-06 Revert \"removed jsonp stripping\" for XSS 2.4.1 / 2011-07-06 Added res.json() JSONP support. Closes #737 Added extending-templates example. Closes #730 Added \"strict routing\" setting for trailing slashes Added support for multiple envs in app.configure() calls. Closes #735 Changed: res.send() using res.json() Changed: when cookie path === null don't default it Changed; default cookie path to \"home\" setting. Closes #731 Removed pids/logs creation from express(1) 2.4.0 / 2011-06-28 Added chainable res.status(code) Added res.json() , an explicit version of res.send(obj) Added simple web-service example 2.3.12 / 2011-06-22 #express is now on freenode! come join! Added req.get(field, param) Added links to Japanese documentation, thanks @hideyukisaito! Added; the express(1) generated app outputs the env Added content-negotiation example Dependency: connect >= 1.5.1 < 2.0.0 Fixed view layout bug. Closes #720 Fixed; ignore body on 304. Closes #701 2.3.11 / 2011-06-04 Added npm test Removed generation of dummy test file from express(1) Fixed; express(1) adds express as a dep Fixed; prune on prepublish 2.3.10 / 2011-05-27 Added req.route , exposing the current route Added package.json generation support to express(1) Fixed call to app.param() function for optional params. Closes #682 2.3.9 / 2011-05-25 Fixed bug-ish with ../' in res.partial()` calls 2.3.8 / 2011-05-24 Fixed app.options() 2.3.7 / 2011-05-23 Added route Collection , ex: app.get('/user/:id').remove(); Added support for app.param(fn) to define param logic Removed app.param() support for callback with return value Removed module.parent check from express(1) generated app. Closes #670 Refactored router. Closes #639 2.3.6 / 2011-05-20 Changed; using devDependencies instead of git submodules Fixed redis session example Fixed markdown example Fixed view caching, should not be enabled in development 2.3.5 / 2011-05-20 Added export .view as alias for .View 2.3.4 / 2011-05-08 Added ./examples/say Fixed res.sendfile() bug preventing the transfer of files with spaces 2.3.3 / 2011-05-03 Added \"case sensitive routes\" option. Changed; split methods supported per rfc [slaskis] Fixed route-specific middleware when using the same callback function several times 2.3.2 / 2011-04-27 Fixed view hints 2.3.1 / 2011-04-26 Added app.match() as app.match.all() Added app.lookup() as app.lookup.all() Added app.remove() for app.remove.all() Added app.remove.VERB() Fixed template caching collision issue. Closes #644 Moved router over from connect and started refactor 2.3.0 / 2011-04-25 Added options support to res.clearCookie() Added res.helpers() as alias of res.locals() Added; json defaults to UTF-8 with res.send() . Closes #632. [Daniel * Dependency connect >= 1.4.0 Changed; auto set Content-Type in res.attachement [Aaron Heckmann] Renamed \"cache views\" to \"view cache\". Closes #628 Fixed caching of views when using several apps. Closes #637 Fixed gotcha invoking app.param() callbacks once per route middleware. Closes #638 Fixed partial lookup precedence. Closes #631 Shaw] 2.2.2 / 2011-04-12 Added second callback support for res.download() connection errors Fixed filename option passing to template engine 2.2.1 / 2011-04-04 Added layout(path) helper to change the layout within a view. Closes #610 Fixed partial() collection object support. Previously only anything with .length would work. When .length is present one must still be aware of holes, however now { collection: {foo: 'bar'}} is valid, exposes keyInCollection and keysInCollection . Performance improved with better view caching Removed request and response locals Changed; errorHandler page title is now Express instead of Connect 2.2.0 / 2011-03-30 Added app.lookup.VERB() , ex app.lookup.put('/user/:id') . Closes #606 Added app.match.VERB() , ex app.match.put('/user/12') . Closes #606 Added app.VERB(path) as alias of app.lookup.VERB() . Dependency connect >= 1.2.0 2.1.1 / 2011-03-29 Added; expose err.view object when failing to locate a view Fixed res.partial() call next(err) when no callback is given [reported by aheckmann] Fixed; res.send(undefined) responds with 204 [aheckmann] 2.1.0 / 2011-03-24 Added <root>/_?<name> partial lookup support. Closes #447 Added request , response , and app local variables Added settings local variable, containing the app's settings Added req.flash() exception if req.session is not available Added res.send(bool) support (json response) Fixed stylus example for latest version Fixed; wrap try/catch around res.render() 2.0.0 / 2011-03-17 Fixed up index view path alternative. Changed; res.locals() without object returns the locals 2.0.0rc3 / 2011-03-17 Added res.locals(obj) to compliment res.local(key, val) Added res.partial() callback support Fixed recursive error reporting issue in res.render() 2.0.0rc2 / 2011-03-17 Changed; partial() \"locals\" are now optional Fixed SlowBuffer support. Closes #584 [reported by tyrda01] Fixed .filename view engine option [reported by drudge] Fixed blog example Fixed {req,res}.app reference when mounting [Ben Weaver] 2.0.0rc / 2011-03-14 Fixed; expose HTTPSServer constructor Fixed express(1) default test charset. Closes #579 [reported by secoif] Fixed; default charset to utf-8 instead of utf8 for lame IE [reported by NickP] 2.0.0beta3 / 2011-03-09 Added support for res.contentType() literal The original res.contentType('.json') , res.contentType('application/json') , and res.contentType('json') will work now. Added res.render() status option support back Added charset option for res.render() Added .charset support (via connect 1.0.4) Added view resolution hints when in development and a lookup fails Added layout lookup support relative to the page view. For example while rendering ./views/user/index.jade if you create ./views/user/layout.jade it will be used in favour of the root layout. Fixed res.redirect() . RFC states absolute url [reported by unlink] Fixed; default res.send() string charset to utf8 Removed Partial constructor (not currently used) 2.0.0beta2 / 2011-03-07 Added res.render() .locals support back to aid in migration process Fixed flash example 2.0.0beta / 2011-03-03 Added HTTPS support Added res.cookie() maxAge support Added req.header() Referrer / Referer special-case, either works Added mount support for res.redirect() , now respects the mount-point Added union() util, taking place of merge(clone()) combo Added stylus support to express(1) generated app Added secret to session middleware used in examples and generated app Added res.local(name, val) for progressive view locals Added default param support to req.param(name, default) Added app.disabled() and app.enabled() Added app.register() support for omitting leading \".\", either works Added res.partial() , using the same interface as partial() within a view. Closes #539 Added app.param() to map route params to async/sync logic Added; aliased app.helpers() as app.locals() . Closes #481 Added extname with no leading \".\" support to res.contentType() Added cache views setting, defaulting to enabled in \"production\" env Added index file partial resolution, eg: partial('user') may try views/user/index.jade . Added req.accepts() support for extensions Changed; res.download() and res.sendfile() now utilize Connect's static file server connect.static.send() . Changed; replaced connect.utils.mime() with npm mime module Changed; allow req.query to be pre-defined (via middleware or other parent Changed view partial resolution, now relative to parent view Changed view engine signature. no longer engine.render(str, options, callback) , now engine.compile(str, options) -> Function , the returned function accepts fn(locals) . Fixed req.param() bug returning Array.prototype methods. Closes #552 Fixed; using Stream#pipe() instead of sys.pump() in res.sendfile() Fixed; using qs module instead of querystring Fixed; strip unsafe chars from jsonp callbacks Removed \"stream threshold\" setting 1.0.8 / 2011-03-01 Allow req.query to be pre-defined (via middleware or other parent app) \"connect\": \">= 0.5.0 < 1.0.0\". Closes #547 Removed the long deprecated EXPRESS_ENV support 1.0.7 / 2011-02-07 Fixed render() setting inheritance. Mounted apps would not inherit \"view engine\" 1.0.6 / 2011-02-07 Fixed view engine setting bug when period is in dirname 1.0.5 / 2011-02-05 Added secret to generated app session() call 1.0.4 / 2011-02-05 Added qs dependency to package.json Fixed namespaced require() s for latest connect support 1.0.3 / 2011-01-13 Remove unsafe characters from JSONP callback names [Ryan Grove] 1.0.2 / 2011-01-10 Removed nested require, using connect.router 1.0.1 / 2010-12-29 Fixed for middleware stacked via createServer() previously the foo middleware passed to createServer(foo) would not have access to Express methods such as res.send() or props like req.query etc. 1.0.0 / 2010-11-16 Added; deduce partial object names from the last segment. For example by default partial('forum/post', postObject) will give you the post object, providing a meaningful default. Added http status code string representation to res.redirect() body Added; res.redirect() supporting text/plain and text/html via Accept . Added req.is() to aid in content negotiation Added partial local inheritance [suggested by masylum]. Closes #102 providing access to parent template locals. Added -s, --session[s] flag to express(1) to add session related middleware Added --template flag to express(1) to specify the template engine to use. Added --css flag to express(1) to specify the stylesheet engine to use (or just plain css by default). Added app.all() support [thanks aheckmann] Added partial direct object support. You may now partial('user', user) providing the \"user\" local, vs previously partial('user', { object: user }) . Added route-separation example since many people question ways to do this with CommonJS modules. Also view the blog example for an alternative. Performance; caching view path derived partial object names Fixed partial local inheritance precedence. [reported by Nick Poulden] Closes #454 Fixed jsonp support; text/javascript as per mailinglist discussion 1.0.0rc4 / 2010-10-14 Added NODE_ENV support, EXPRESS_ENV is deprecated and will be removed in 1.0.0 Added route-middleware support (very helpful, see the docs ) Added jsonp callback setting to enable/disable jsonp autowrapping [Dav Glass] Added callback query check on response.send to autowrap JSON objects for simple webservice implementations [Dav Glass] Added partial() support for array-like collections. Closes #434 Added support for swappable querystring parsers Added session usage docs. Closes #443 Added dynamic helper caching. Closes #439 [suggested by maritz] Added authentication example Added basic Range support to res.sendfile() (and res.download() etc) Changed; express(1) generated app using 2 spaces instead of 4 Default env to \"development\" again [aheckmann] Removed context option is no more, use \"scope\" Fixed; exposing ./support libs to examples so they can run without installs Fixed mvc example 1.0.0rc3 / 2010-09-20 Added confirmation for express(1) app generation. Closes #391 Added extending of flash formatters via app.flashFormatters Added flash formatter support. Closes #411 Added streaming support to res.sendfile() using sys.pump() when >= \"stream threshold\" Added stream threshold setting for res.sendfile() Added res.send() HEAD support Added res.clearCookie() Added res.cookie() Added res.render() headers option Added res.redirect() response bodies Added res.render() status option support. Closes #425 [thanks aheckmann] Fixed res.sendfile() responding with 403 on malicious path Fixed res.download() bug; when an error occurs remove Content-Disposition Fixed; mounted apps settings now inherit from parent app [aheckmann] Fixed; stripping Content-Length / Content-Type when 204 Fixed res.send() 204. Closes #419 Fixed multiple Set-Cookie headers via res.header() . Closes #402 Fixed bug messing with error handlers when listenFD() is called instead of listen() . [thanks guillermo] 1.0.0rc2 / 2010-08-17 Added app.register() for template engine mapping. Closes #390 Added res.render() callback support as second argument (no options) Added callback support to res.download() Added callback support for res.sendfile() Added support for middleware access via express.middlewareName() vs connect.middlewareName() Added \"partials\" setting to docs Added default expresso tests to express(1) generated app. Closes #384 Fixed res.sendfile() error handling, defer via next() Fixed res.render() callback when a layout is used [thanks guillermo] Fixed; make install creating ~/.node_libraries when not present Fixed issue preventing error handlers from being defined anywhere. Closes #387 1.0.0rc / 2010-07-28 Added mounted hook. Closes #369 Added connect dependency to package.json Removed \"reload views\" setting and support code development env never caches, production always caches. Removed param in route callbacks, signature is now simply (req, res, next), previously (req, res, params, next). Use req.params for path captures, req.query for GET params. Fixed \"home\" setting Fixed middleware/router precedence issue. Closes #366 Fixed; configure() callbacks called immediately. Closes #368 1.0.0beta2 / 2010-07-23 Added more examples Added; exporting Server constructor Added Server#helpers() for view locals Added Server#dynamicHelpers() for dynamic view locals. Closes #349 Added support for absolute view paths Added; home setting defaults to Server#route for mounted apps. Closes #363 Added Guillermo Rauch to the contributor list Added support for \"as\" for non-collection partials. Closes #341 Fixed install.sh , ensuring ~/.node_libraries exists. Closes #362 [thanks jf] Fixed res.render() exceptions, now passed to next() when no callback is given [thanks guillermo] Fixed instanceof Array checks, now Array.isArray() Fixed express(1) expansion of public dirs. Closes #348 Fixed middleware precedence. Closes #345 Fixed view watcher, now async [thanks aheckmann] 1.0.0beta / 2010-07-15 Re-write much faster much lighter Check ExpressJS.com for migration guide and updated docs 0.14.0 / 2010-06-15 Utilize relative requires Added Static bufferSize option [aheckmann] Fixed caching of view and partial subdirectories [aheckmann] Fixed mime.type() comments now that \".ext\" is not supported Updated haml submodule Updated class submodule Removed bin/express 0.13.0 / 2010-06-01 Added node v0.1.97 compatibility Added support for deleting cookies via Request#cookie('key', null) Updated haml submodule Fixed not-found page, now using charset utf-8 Fixed show-exceptions page, now using charset utf-8 Fixed view support due to fs.readFile Buffers Changed; mime.type() no longer accepts \".type\" due to node extname() changes 0.12.0 / 2010-05-22 Added node v0.1.96 compatibility Added view helpers export which act as additional local variables Updated haml submodule Changed ETag; removed inode, modified time only Fixed LF to CRLF for setting multiple cookies Fixed cookie compilation; values are now urlencoded Fixed cookies parsing; accepts quoted values and url escaped cookies 0.11.0 / 2010-05-06 Added support for layouts using different engines this.render('page.html.haml', { layout: 'super-cool-layout.html.ejs' }) this.render('page.html.haml', { layout: 'foo' }) // assumes 'foo.html.haml' this.render('page.html.haml', { layout: false }) // no layout Updated ext submodule Updated haml submodule Fixed EJS partial support by passing along the context. Issue #307 0.10.1 / 2010-05-03 Fixed binary uploads. 0.10.0 / 2010-04-30 Added charset support via Request#charset (automatically assigned to 'UTF-8' when respond()'s encoding is set to 'utf8' or 'utf-8'). Added \"encoding\" option to Request#render(). Closes #299 Added \"dump exceptions\" setting, which is enabled by default. Added simple ejs template engine support Added error response support for text/plain, application/json. Closes #297 Added callback function param to Request#error() Added Request#sendHead() Added Request#stream() Added support for Request#respond(304, null) for empty response bodies Added ETag support to Request#sendfile() Added options to Request#sendfile(), passed to fs.createReadStream() Added filename arg to Request#download() Performance enhanced due to pre-reversing plugins so that plugins.reverse() is not called on each request Performance enhanced by preventing several calls to toLowerCase() in Router#match() Changed; Request#sendfile() now streams Changed; Renamed Request#halt() to Request#respond(). Closes #289 Changed; Using sys.inspect() instead of JSON.encode() for error output Changed; run() returns the http.Server instance. Closes #298 Changed; Defaulting Server#host to null (INADDR_ANY) Changed; Logger \"common\" format scale of 0.4f Removed Logger \"request\" format Fixed; Catching ENOENT in view caching, preventing error when \"views/partials\" is not found Fixed several issues with http client Fixed Logger Content-Length output Fixed bug preventing Opera from retaining the generated session id. Closes #292 0.9.0 / 2010-04-14 Added DSL level error() route support Added DSL level notFound() route support Added Request#error() Added Request#notFound() Added Request#render() callback function. Closes #258 Added \"max upload size\" setting Added \"magic\" variables to collection partials (__index__, __length__, __isFirst__, __isLast__). Closes #254 Added haml.js submodule; removed haml-js Added callback function support to Request#halt() as 3rd/4th arg Added preprocessing of route param wildcards using param(). Closes #251 Added view partial support (with collections etc.) Fixed bug preventing falsey params (such as ?page=0). Closes #286 Fixed setting of multiple cookies. Closes #199 Changed; view naming convention is now NAME.TYPE.ENGINE (for example page.html.haml) Changed; session cookie is now httpOnly Changed; Request is no longer global Changed; Event is no longer global Changed; \"sys\" module is no longer global Changed; moved Request#download to Static plugin where it belongs Changed; Request instance created before body parsing. Closes #262 Changed; Pre-caching views in memory when \"cache view contents\" is enabled. Closes #253 Changed; Pre-caching view partials in memory when \"cache view partials\" is enabled Updated support to node --version 0.1.90 Updated dependencies Removed set(\"session cookie\") in favour of use(Session, { cookie: { ... }}) Removed utils.mixin(); use Object#mergeDeep() 0.8.0 / 2010-03-19 Added coffeescript example app. Closes #242 Changed; cache api now async friendly. Closes #240 Removed deprecated 'express/static' support. Use 'express/plugins/static' 0.7.6 / 2010-03-19 Added Request#isXHR. Closes #229 Added make install (for the executable) Added express executable for setting up simple app templates Added \"GET /public/*\" to Static plugin, defaulting to /public Added Static plugin Fixed; Request#render() only calls cache.get() once Fixed; Namespacing View caches with \"view:\" Fixed; Namespacing Static caches with \"static:\" Fixed; Both example apps now use the Static plugin Fixed set(\"views\"). Closes #239 Fixed missing space for combined log format Deprecated Request#sendfile() and 'express/static' Removed Server#running 0.7.5 / 2010-03-16 Added Request#flash() support without args, now returns all flashes Updated ext submodule 0.7.4 / 2010-03-16 Fixed session reaper Changed; class.js replacing js-oo Class implementation (quite a bit faster, no browser cruft) 0.7.3 / 2010-03-16 Added package.json Fixed requiring of haml / sass due to kiwi removal 0.7.2 / 2010-03-16 Fixed GIT submodules (HAH!) 0.7.1 / 2010-03-16 Changed; Express now using submodules again until a PM is adopted Changed; chat example using millisecond conversions from ext 0.7.0 / 2010-03-15 Added Request#pass() support (finds the next matching route, or the given path) Added Logger plugin (default \"common\" format replaces CommonLogger) Removed Profiler plugin Removed CommonLogger plugin 0.6.0 / 2010-03-11 Added seed.yml for kiwi package management support Added HTTP client query string support when method is GET. Closes #205 Added support for arbitrary view engines. For example \"foo.engine.html\" will now require('engine'), the exports from this module are cached after the first require(). Added async plugin support Removed usage of RESTful route funcs as http client get() etc, use http.get() and friends Removed custom exceptions 0.5.0 / 2010-03-10 Added ext dependency (library of js extensions) Removed extname() / basename() utils. Use path module Removed toArray() util. Use arguments.values Removed escapeRegexp() util. Use RegExp.escape() Removed process.mixin() dependency. Use utils.mixin() Removed Collection Removed ElementCollection Shameless self promotion of ebook \"Advanced JavaScript\" (http://dev-mag.com) ;) 0.4.0 / 2010-02-11 Added flash() example to sample upload app Added high level restful http client module (express/http) Changed; RESTful route functions double as HTTP clients. Closes #69 Changed; throwing error when routes are added at runtime Changed; defaulting render() context to the current Request. Closes #197 Updated haml submodule 0.3.0 / 2010-02-11 Updated haml / sass submodules. Closes #200 Added flash message support. Closes #64 Added accepts() now allows multiple args. fixes #117 Added support for plugins to halt. Closes #189 Added alternate layout support. Closes #119 Removed Route#run(). Closes #188 Fixed broken specs due to use(Cookie) missing 0.2.1 / 2010-02-05 Added \"plot\" format option for Profiler (for gnuplot processing) Added request number to Profiler plugin Fixed binary encoding for multipart file uploads, was previously defaulting to UTF8 Fixed issue with routes not firing when not files are present. Closes #184 Fixed process.Promise -> events.Promise 0.2.0 / 2010-02-03 Added parseParam() support for name[] etc. (allows for file inputs with \"multiple\" attr) Closes #180 Added Both Cache and Session option \"reapInterval\" may be \"reapEvery\". Closes #174 Added expiration support to cache api with reaper. Closes #133 Added cache Store.Memory#reap() Added Cache; cache api now uses first class Cache instances Added abstract session Store. Closes #172 Changed; cache Memory.Store#get() utilizing Collection Renamed MemoryStore -> Store.Memory Fixed use() of the same plugin several time will always use latest options. Closes #176 0.1.0 / 2010-02-03 Changed; Hooks (before / after) pass request as arg as well as evaluated in their context Updated node support to 0.1.27 Closes #169 Updated dirname(__filename) -> __dirname Updated libxmljs support to v0.2.0 Added session support with memory store / reaping Added quick uid() helper Added multi-part upload support Added Sass.js support / submodule Added production env caching view contents and static files Added static file caching. Closes #136 Added cache plugin with memory stores Added support to StaticFile so that it works with non-textual files. Removed dirname() helper Removed several globals (now their modules must be required) 0.0.2 / 2010-01-10 Added view benchmarks; currently haml vs ejs Added Request#attachment() specs. Closes #116 Added use of node's parseQuery() util. Closes #123 Added make init for submodules Updated Haml Updated sample chat app to show messages on load Updated libxmljs parseString -> parseHtmlString Fixed make init to work with older versions of git Fixed specs can now run independent specs for those who can't build deps. Closes #127 Fixed issues introduced by the node url module changes. Closes 126. Fixed two assertions failing due to Collection#keys() returning strings Fixed faulty Collection#toArray() spec due to keys() returning strings Fixed make test now builds libxmljs.node before testing 0.0.1 / 2010-01-03 Initial release","title":"5.1.0 / 2025-03-31"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#510-2025-03-31","text":"Add support for Uint8Array in res.send() Add support for ETag option in res.sendFile() Add support for multiple links with the same rel in res.links() Add funding field to package.json perf: use loop for acceptParams refactor: prefix built-in node module imports deps: remove setprototypeof deps: remove safe-buffer deps: remove utils-merge deps: remove methods deps: remove depd deps: debug@^4.4.0 deps: body-parser@^2.2.0 deps: router@^2.2.0 deps: content-type@^1.0.5 deps: finalhandler@^2.1.0 deps: qs@^6.14.0 deps: server-static@2.2.0 deps: type-is@2.0.1","title":"5.1.0 / 2025-03-31"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#501-2024-10-08","text":"Update cookie semver lock to address CVE-2024-47764","title":"5.0.1 / 2024-10-08"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#500-2024-09-10","text":"remove: path-is-absolute dependency - use path.isAbsolute instead breaking: res.status() accepts only integers, and input must be greater than 99 and less than 1000 will throw a RangeError: Invalid status code: ${code}. Status code must be greater than 99 and less than 1000. for inputs outside this range will throw a TypeError: Invalid status code: ${code}. Status code must be an integer. for non integer inputs deps: send@1.0.0 res.redirect('back') and res.location('back') is no longer a supported magic string, explicitly use req.get('Referrer') || '/' . change: res.clearCookie will ignore user provided maxAge and expires options deps: cookie-signature@^1.2.1 deps: debug@4.3.6 deps: merge-descriptors@^2.0.0 deps: serve-static@^2.1.0 deps: qs@6.13.0 deps: accepts@^2.0.0 deps: mime-types@^3.0.0 application/javascript => text/javascript deps: type-is@^2.0.0 deps: content-disposition@^1.0.0 deps: finalhandler@^2.0.0 deps: fresh@^2.0.0 deps: body-parser@^2.0.1 deps: send@^1.1.0","title":"5.0.0 / 2024-09-10"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#500-beta3-2024-03-25","text":"This incorporates all changes after 4.19.1 up to 4.19.2.","title":"5.0.0-beta.3 / 2024-03-25"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#500-beta2-2024-03-20","text":"This incorporates all changes after 4.17.2 up to 4.19.1.","title":"5.0.0-beta.2 / 2024-03-20"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#500-beta1-2022-02-14","text":"This is the first Express 5.0 beta release, based off 4.17.2 and includes changes from 5.0.0-alpha.8. change: Default \"query parser\" setting to 'simple' Requires Node.js 4+ Use mime-types for file to content type mapping deps: array-flatten@3.0.0 deps: body-parser@2.0.0-beta.1 req.body is no longer always initialized to {} urlencoded parser now defaults extended to false Use on-finished to determine when body read deps: router@2.0.0-beta.1 Add new ? , * , and + parameter modifiers Internalize private router.process_params method Matching group expressions are only RegExp syntax Named matching groups no longer available by position in req.params Regular expressions can only be used in a matching group Remove debug dependency Special * path segment behavior removed deps: array-flatten@3.0.0 deps: parseurl@~1.3.3 deps: path-to-regexp@3.2.0 deps: setprototypeof@1.2.0 deps: send@1.0.0-beta.1 Change dotfiles option default to 'ignore' Remove hidden option; use dotfiles option instead Use mime-types for file to content type mapping deps: debug@3.1.0 deps: serve-static@2.0.0-beta.1 Change dotfiles option default to 'ignore' Remove hidden option; use dotfiles option instead Use mime-types for file to content type mapping Remove express.static.mime export; use mime-types package instead deps: send@1.0.0-beta.1","title":"5.0.0-beta.1 / 2022-02-14"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#500-alpha8-2020-03-25","text":"This is the eighth Express 5.0 alpha release, based off 4.17.1 and includes changes from 5.0.0-alpha.7.","title":"5.0.0-alpha.8 / 2020-03-25"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#500-alpha7-2018-10-26","text":"This is the seventh Express 5.0 alpha release, based off 4.16.4 and includes changes from 5.0.0-alpha.6. The major change with this alpha is the basic support for returned, rejected Promises in the router. remove: path-to-regexp dependency deps: debug@3.1.0 Add DEBUG_HIDE_DATE environment variable Change timer to per-namespace instead of global Change non-TTY date format Remove DEBUG_FD environment variable support Support 256 namespace colors deps: router@2.0.0-alpha.1 Add basic support for returned, rejected Promises Fix JSDoc for Router constructor deps: debug@3.1.0 deps: parseurl@~1.3.2 deps: setprototypeof@1.1.0 deps: utils-merge@1.0.1","title":"5.0.0-alpha.7 / 2018-10-26"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#500-alpha6-2017-09-24","text":"This is the sixth Express 5.0 alpha release, based off 4.15.5 and includes changes from 5.0.0-alpha.5. remove: res.redirect(url, status) signature - use res.redirect(status, url) res.send(status, body) signature - use res.status(status).send(body) deps: router@~1.3.1 deps: debug@2.6.8","title":"5.0.0-alpha.6 / 2017-09-24"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#500-alpha5-2017-03-06","text":"This is the fifth Express 5.0 alpha release, based off 4.15.2 and includes changes from 5.0.0-alpha.4.","title":"5.0.0-alpha.5 / 2017-03-06"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#500-alpha4-2017-03-01","text":"This is the fourth Express 5.0 alpha release, based off 4.15.0 and includes changes from 5.0.0-alpha.3. remove: Remove Express 3.x middleware error stubs deps: router@~1.3.0 Add next(\"router\") to exit from router Fix case where router.use skipped requests routes did not Skip routing when req.url is not set Use %o in path debug to tell types apart deps: debug@2.6.1 deps: setprototypeof@1.0.3 perf: add fast match path for * route","title":"5.0.0-alpha.4 / 2017-03-01"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#500-alpha3-2017-01-28","text":"This is the third Express 5.0 alpha release, based off 4.14.1 and includes changes from 5.0.0-alpha.2. remove: res.json(status, obj) signature - use res.status(status).json(obj) res.jsonp(status, obj) signature - use res.status(status).jsonp(obj) res.vary() (no arguments) -- provide a field name as an argument deps: array-flatten@2.1.1 deps: path-is-absolute@1.0.1 deps: router@~1.1.5 deps: array-flatten@2.0.1 deps: methods@~1.1.2 deps: parseurl@~1.3.1 deps: setprototypeof@1.0.2","title":"5.0.0-alpha.3 / 2017-01-28"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#500-alpha2-2015-07-06","text":"This is the second Express 5.0 alpha release, based off 4.13.1 and includes changes from 5.0.0-alpha.1. remove: app.param(fn) req.param() -- use req.params , req.body , or req.query instead change: res.render callback is always async, even for sync view engines The leading : character in name for app.param(name, fn) is no longer removed Use router module for routing Use path-is-absolute module for absolute path detection","title":"5.0.0-alpha.2 / 2015-07-06"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#500-alpha1-2014-11-06","text":"This is the first Express 5.0 alpha release, based off 4.10.1. remove: app.del - use app.delete req.acceptsCharset - use req.acceptsCharsets req.acceptsEncoding - use req.acceptsEncodings req.acceptsLanguage - use req.acceptsLanguages res.json(obj, status) signature - use res.json(status, obj) res.jsonp(obj, status) signature - use res.jsonp(status, obj) res.send(body, status) signature - use res.send(status, body) res.send(status) signature - use res.sendStatus(status) res.sendfile - use res.sendFile instead express.query middleware change: req.host now returns host ( hostname:port ) - use req.hostname for only hostname req.query is now a getter instead of a plain property add: app.router is a reference to the base router","title":"5.0.0-alpha.1 / 2014-11-06"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4200-2024-09-10","text":"deps: serve-static@0.16.0 Remove link renderization in html while redirecting deps: send@0.19.0 Remove link renderization in html while redirecting deps: body-parser@0.6.0 add depth option to customize the depth level in the parser IMPORTANT: The default depth level for parsing URL-encoded data is now 32 (previously was Infinity ) Remove link renderization in html while using res.redirect deps: path-to-regexp@0.1.10 Adds support for named matching groups in the routes using a regex Adds backtracking protection to parameters without regexes defined deps: encodeurl@~2.0.0 Removes encoding of \\ , | , and ^ to align better with URL spec Deprecate passing options.maxAge and options.expires to res.clearCookie Will be ignored in v5, clearCookie will set a cookie with an expires in the past to instruct clients to delete the cookie","title":"4.20.0 / 2024-09-10"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4192-2024-03-25","text":"Improved fix for open redirect allow list bypass","title":"4.19.2 / 2024-03-25"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4191-2024-03-20","text":"Allow passing non-strings to res.location with new encoding handling checks","title":"4.19.1 / 2024-03-20"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4190-2024-03-20","text":"Prevent open redirect allow list bypass due to encodeurl deps: cookie@0.6.0","title":"4.19.0 / 2024-03-20"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4183-2024-02-29","text":"Fix routing requests without method deps: body-parser@1.20.2 Fix strict json error message on Node.js 19+ deps: content-type@~1.0.5 deps: raw-body@2.5.2 deps: cookie@0.6.0 Add partitioned option","title":"4.18.3 / 2024-02-29"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4182-2022-10-08","text":"Fix regression routing a large stack in a single route deps: body-parser@1.20.1 deps: qs@6.11.0 perf: remove unnecessary object clone deps: qs@6.11.0","title":"4.18.2 / 2022-10-08"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4181-2022-04-29","text":"Fix hanging on large stack of sync routes","title":"4.18.1 / 2022-04-29"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4180-2022-04-25","text":"Add \"root\" option to res.download Allow options without filename in res.download Deprecate string and non-integer arguments to res.status Fix behavior of null / undefined as maxAge in res.cookie Fix handling very large stacks of sync middleware Ignore Object.prototype values in settings through app.set / app.get Invoke default with same arguments as types in res.format Support proper 205 responses using res.send Use http-errors for res.format error deps: body-parser@1.20.0 Fix error message for json parse whitespace in strict Fix internal error when inflated body exceeds limit Prevent loss of async hooks context Prevent hanging when request already read deps: depd@2.0.0 deps: http-errors@2.0.0 deps: on-finished@2.4.1 deps: qs@6.10.3 deps: raw-body@2.5.1 deps: cookie@0.5.0 Add priority option Fix expires option to reject invalid dates deps: depd@2.0.0 Replace internal eval usage with Function constructor Use instance methods on process to check for listeners deps: finalhandler@1.2.0 Remove set content headers that break response deps: on-finished@2.4.1 deps: statuses@2.0.1 deps: on-finished@2.4.1 Prevent loss of async hooks context deps: qs@6.10.3 deps: send@0.18.0 Fix emitted 416 error missing headers property Limit the headers removed for 304 response deps: depd@2.0.0 deps: destroy@1.2.0 deps: http-errors@2.0.0 deps: on-finished@2.4.1 deps: statuses@2.0.1 deps: serve-static@1.15.0 deps: send@0.18.0 deps: statuses@2.0.1 Remove code 306 Rename 425 Unordered Collection to standard 425 Too Early","title":"4.18.0 / 2022-04-25"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4173-2022-02-16","text":"deps: accepts@~1.3.8 deps: mime-types@~2.1.34 deps: negotiator@0.6.3 deps: body-parser@1.19.2 deps: bytes@3.1.2 deps: qs@6.9.7 deps: raw-body@2.4.3 deps: cookie@0.4.2 deps: qs@6.9.7 Fix handling of __proto__ keys pref: remove unnecessary regexp for trust proxy","title":"4.17.3 / 2022-02-16"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4172-2021-12-16","text":"Fix handling of undefined in res.jsonp Fix handling of undefined when \"json escape\" is enabled Fix incorrect middleware execution with unanchored RegExp s Fix res.jsonp(obj, status) deprecation message Fix typo in res.is JSDoc deps: body-parser@1.19.1 deps: bytes@3.1.1 deps: http-errors@1.8.1 deps: qs@6.9.6 deps: raw-body@2.4.2 deps: safe-buffer@5.2.1 deps: type-is@~1.6.18 deps: content-disposition@0.5.4 deps: safe-buffer@5.2.1 deps: cookie@0.4.1 Fix maxAge option to reject invalid values deps: proxy-addr@~2.0.7 Use req.socket over deprecated req.connection deps: forwarded@0.2.0 deps: ipaddr.js@1.9.1 deps: qs@6.9.6 deps: safe-buffer@5.2.1 deps: send@0.17.2 deps: http-errors@1.8.1 deps: ms@2.1.3 pref: ignore empty http tokens deps: serve-static@1.14.2 deps: send@0.17.2 deps: setprototypeof@1.2.0","title":"4.17.2 / 2021-12-16"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4171-2019-05-25","text":"Revert \"Improve error message for null / undefined to res.status \"","title":"4.17.1 / 2019-05-25"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4170-2019-05-16","text":"Add express.raw to parse bodies into Buffer Add express.text to parse bodies into string Improve error message for non-strings to res.sendFile Improve error message for null / undefined to res.status Support multiple hosts in X-Forwarded-Host deps: accepts@~1.3.7 deps: body-parser@1.19.0 Add encoding MIK Add petabyte ( pb ) support Fix parsing array brackets after index deps: bytes@3.1.0 deps: http-errors@1.7.2 deps: iconv-lite@0.4.24 deps: qs@6.7.0 deps: raw-body@2.4.0 deps: type-is@~1.6.17 deps: content-disposition@0.5.3 deps: cookie@0.4.0 Add SameSite=None support deps: finalhandler@~1.1.2 Set stricter Content-Security-Policy header deps: parseurl@~1.3.3 deps: statuses@~1.5.0 deps: parseurl@~1.3.3 deps: proxy-addr@~2.0.5 deps: ipaddr.js@1.9.0 deps: qs@6.7.0 Fix parsing array brackets after index deps: range-parser@~1.2.1 deps: send@0.17.1 Set stricter CSP header in redirect & error responses deps: http-errors@~1.7.2 deps: mime@1.6.0 deps: ms@2.1.1 deps: range-parser@~1.2.1 deps: statuses@~1.5.0 perf: remove redundant path.normalize call deps: serve-static@1.14.1 Set stricter CSP header in redirect response deps: parseurl@~1.3.3 deps: send@0.17.1 deps: setprototypeof@1.1.1 deps: statuses@~1.5.0 Add 103 Early Hints deps: type-is@~1.6.18 deps: mime-types@~2.1.24 perf: prevent internal throw on invalid type","title":"4.17.0 / 2019-05-16"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4164-2018-10-10","text":"Fix issue where \"Request aborted\" may be logged in res.sendfile Fix JSDoc for Router constructor deps: body-parser@1.18.3 Fix deprecation warnings on Node.js 10+ Fix stack trace for strict json parse error deps: depd@~1.1.2 deps: http-errors@~1.6.3 deps: iconv-lite@0.4.23 deps: qs@6.5.2 deps: raw-body@2.3.3 deps: type-is@~1.6.16 deps: proxy-addr@~2.0.4 deps: ipaddr.js@1.8.0 deps: qs@6.5.2 deps: safe-buffer@5.1.2","title":"4.16.4 / 2018-10-10"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4163-2018-03-12","text":"deps: accepts@~1.3.5 deps: mime-types@~2.1.18 deps: depd@~1.1.2 perf: remove argument reassignment deps: encodeurl@~1.0.2 Fix encoding % as last character deps: finalhandler@1.1.1 Fix 404 output for bad / missing pathnames deps: encodeurl@~1.0.2 deps: statuses@~1.4.0 deps: proxy-addr@~2.0.3 deps: ipaddr.js@1.6.0 deps: send@0.16.2 Fix incorrect end tag in default error & redirects deps: depd@~1.1.2 deps: encodeurl@~1.0.2 deps: statuses@~1.4.0 deps: serve-static@1.13.2 Fix incorrect end tag in redirects deps: encodeurl@~1.0.2 deps: send@0.16.2 deps: statuses@~1.4.0 deps: type-is@~1.6.16 deps: mime-types@~2.1.18","title":"4.16.3 / 2018-03-12"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4162-2017-10-09","text":"Fix TypeError in res.send when given Buffer and ETag header set perf: skip parsing of entire X-Forwarded-Proto header","title":"4.16.2 / 2017-10-09"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4161-2017-09-29","text":"deps: send@0.16.1 deps: serve-static@1.13.1 Fix regression when root is incorrectly set to a file deps: send@0.16.1","title":"4.16.1 / 2017-09-29"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4160-2017-09-28","text":"Add \"json escape\" setting for res.json and res.jsonp Add express.json and express.urlencoded to parse bodies Add options argument to res.download Improve error message when autoloading invalid view engine Improve error messages when non-function provided as middleware Skip Buffer encoding when not generating ETag for small response Use safe-buffer for improved Buffer API deps: accepts@~1.3.4 deps: mime-types@~2.1.16 deps: content-type@~1.0.4 perf: remove argument reassignment perf: skip parameter parsing when no parameters deps: etag@~1.8.1 perf: replace regular expression with substring deps: finalhandler@1.1.0 Use res.headersSent when available deps: parseurl@~1.3.2 perf: reduce overhead for full URLs perf: unroll the \"fast-path\" RegExp deps: proxy-addr@~2.0.2 Fix trimming leading / trailing OWS in X-Forwarded-For deps: forwarded@~0.1.2 deps: ipaddr.js@1.5.2 perf: reduce overhead when no X-Forwarded-For header deps: qs@6.5.1 Fix parsing & compacting very deep objects deps: send@0.16.0 Add 70 new types for file extensions Add immutable option Fix missing </html> in default error & redirects Set charset as \"UTF-8\" for .js and .json Use instance methods on steam to check for listeners deps: mime@1.4.1 perf: improve path validation speed deps: serve-static@1.13.0 Add 70 new types for file extensions Add immutable option Set charset as \"UTF-8\" for .js and .json deps: send@0.16.0 deps: setprototypeof@1.1.0 deps: utils-merge@1.0.1 deps: vary@~1.1.2 perf: improve header token parsing speed perf: re-use options object when generating ETags perf: remove dead .charset set in res.jsonp","title":"4.16.0 / 2017-09-28"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4155-2017-09-24","text":"deps: debug@2.6.9 deps: finalhandler@~1.0.6 deps: debug@2.6.9 deps: parseurl@~1.3.2 deps: fresh@0.5.2 Fix handling of modified headers with invalid dates perf: improve ETag match loop perf: improve If-None-Match token parsing deps: send@0.15.6 Fix handling of modified headers with invalid dates deps: debug@2.6.9 deps: etag@~1.8.1 deps: fresh@0.5.2 perf: improve If-Match token parsing deps: serve-static@1.12.6 deps: parseurl@~1.3.2 deps: send@0.15.6 perf: improve slash collapsing","title":"4.15.5 / 2017-09-24"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4154-2017-08-06","text":"deps: debug@2.6.8 deps: depd@~1.1.1 Remove unnecessary Buffer loading deps: finalhandler@~1.0.4 deps: debug@2.6.8 deps: proxy-addr@~1.1.5 Fix array argument being altered deps: ipaddr.js@1.4.0 deps: qs@6.5.0 deps: send@0.15.4 deps: debug@2.6.8 deps: depd@~1.1.1 deps: http-errors@~1.6.2 deps: serve-static@1.12.4 deps: send@0.15.4","title":"4.15.4 / 2017-08-06"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4153-2017-05-16","text":"Fix error when res.set cannot add charset to Content-Type deps: debug@2.6.7 Fix DEBUG_MAX_ARRAY_LENGTH deps: ms@2.0.0 deps: finalhandler@~1.0.3 Fix missing </html> in HTML document deps: debug@2.6.7 deps: proxy-addr@~1.1.4 deps: ipaddr.js@1.3.0 deps: send@0.15.3 deps: debug@2.6.7 deps: ms@2.0.0 deps: serve-static@1.12.3 deps: send@0.15.3 deps: type-is@~1.6.15 deps: mime-types@~2.1.15 deps: vary@~1.1.1 perf: hoist regular expression","title":"4.15.3 / 2017-05-16"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4152-2017-03-06","text":"deps: qs@6.4.0 Fix regression parsing keys starting with [","title":"4.15.2 / 2017-03-06"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4151-2017-03-05","text":"deps: send@0.15.1 Fix issue when Date.parse does not return NaN on invalid date Fix strict violation in broken environments deps: serve-static@1.12.1 Fix issue when Date.parse does not return NaN on invalid date deps: send@0.15.1","title":"4.15.1 / 2017-03-05"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4150-2017-03-01","text":"Add debug message when loading view engine Add next(\"router\") to exit from router Fix case where router.use skipped requests routes did not Remove usage of res._headers private field Improves compatibility with Node.js 8 nightly Skip routing when req.url is not set Use %o in path debug to tell types apart Use Object.create to setup request & response prototypes Use setprototypeof module to replace __proto__ setting Use statuses instead of http module for status messages deps: debug@2.6.1 Allow colors in workers Deprecated DEBUG_FD environment variable set to 3 or higher Fix error when running under React Native Use same color for same namespace deps: ms@0.7.2 deps: etag@~1.8.0 Use SHA1 instead of MD5 for ETag hashing Works with FIPS 140-2 OpenSSL configuration deps: finalhandler@~1.0.0 Fix exception when err cannot be converted to a string Fully URL-encode the pathname in the 404 Only include the pathname in the 404 message Send complete HTML document Set Content-Security-Policy: default-src 'self' header deps: debug@2.6.1 deps: fresh@0.5.0 Fix false detection of no-cache request directive Fix incorrect result when If-None-Match has both * and ETags Fix weak ETag matching to match spec perf: delay reading header values until needed perf: enable strict mode perf: hoist regular expressions perf: remove duplicate conditional perf: remove unnecessary boolean coercions perf: skip checking modified time if ETag check failed perf: skip parsing If-None-Match when no ETag header perf: use Date.parse instead of new Date deps: qs@6.3.1 Fix array parsing from skipping empty values Fix compacting nested arrays deps: send@0.15.0 Fix false detection of no-cache request directive Fix incorrect result when If-None-Match has both * and ETags Fix weak ETag matching to match spec Remove usage of res._headers private field Support If-Match and If-Unmodified-Since headers Use res.getHeaderNames() when available Use res.headersSent when available deps: debug@2.6.1 deps: etag@~1.8.0 deps: fresh@0.5.0 deps: http-errors@~1.6.1 deps: serve-static@1.12.0 Fix false detection of no-cache request directive Fix incorrect result when If-None-Match has both * and ETags Fix weak ETag matching to match spec Remove usage of res._headers private field Send complete HTML document in redirect response Set default CSP header in redirect response Support If-Match and If-Unmodified-Since headers Use res.getHeaderNames() when available Use res.headersSent when available deps: send@0.15.0 perf: add fast match path for * route perf: improve req.ips performance","title":"4.15.0 / 2017-03-01"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4141-2017-01-28","text":"deps: content-disposition@0.5.2 deps: finalhandler@0.5.1 Fix exception when err.headers is not an object deps: statuses@~1.3.1 perf: hoist regular expressions perf: remove duplicate validation path deps: proxy-addr@~1.1.3 deps: ipaddr.js@1.2.0 deps: send@0.14.2 deps: http-errors@~1.5.1 deps: ms@0.7.2 deps: statuses@~1.3.1 deps: serve-static@~1.11.2 deps: send@0.14.2 deps: type-is@~1.6.14 deps: mime-types@~2.1.13","title":"4.14.1 / 2017-01-28"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4140-2016-06-16","text":"Add acceptRanges option to res.sendFile / res.sendfile Add cacheControl option to res.sendFile / res.sendfile Add options argument to req.range Includes the combine option Encode URL in res.location / res.redirect if not already encoded Fix some redirect handling in res.sendFile / res.sendfile Fix Windows absolute path check using forward slashes Improve error with invalid arguments to req.get() Improve performance for res.json / res.jsonp in most cases Improve Range header handling in res.sendFile / res.sendfile deps: accepts@~1.3.3 Fix including type extensions in parameters in Accept parsing Fix parsing Accept parameters with quoted equals Fix parsing Accept parameters with quoted semicolons Many performance improvements deps: mime-types@~2.1.11 deps: negotiator@0.6.1 deps: content-type@~1.0.2 perf: enable strict mode deps: cookie@0.3.1 Add sameSite option Fix cookie Max-Age to never be a floating point number Improve error message when encode is not a function Improve error message when expires is not a Date Throw better error for invalid argument to parse Throw on invalid values provided to serialize perf: enable strict mode perf: hoist regular expression perf: use for loop in parse perf: use string concatenation for serialization deps: finalhandler@0.5.0 Change invalid or non-numeric status code to 500 Overwrite status message to match set status code Prefer err.statusCode if err.status is invalid Set response headers from err.headers object Use statuses instead of http module for status messages deps: proxy-addr@~1.1.2 Fix accepting various invalid netmasks Fix IPv6-mapped IPv4 validation edge cases IPv4 netmasks must be contiguous IPv6 addresses cannot be used as a netmask deps: ipaddr.js@1.1.1 deps: qs@6.2.0 Add decoder option in parse function deps: range-parser@~1.2.0 Add combine option to combine overlapping ranges Fix incorrectly returning -1 when there is at least one valid range perf: remove internal function deps: send@0.14.1 Add acceptRanges option Add cacheControl option Attempt to combine multiple ranges into single range Correctly inherit from Stream class Fix Content-Range header in 416 responses when using start / end options Fix Content-Range header missing from default 416 responses Fix redirect error when path contains raw non-URL characters Fix redirect when path starts with multiple forward slashes Ignore non-byte Range headers deps: http-errors@~1.5.0 deps: range-parser@~1.2.0 deps: statuses@~1.3.0 perf: remove argument reassignment deps: serve-static@~1.11.1 Add acceptRanges option Add cacheControl option Attempt to combine multiple ranges into single range Fix redirect error when req.url contains raw non-URL characters Ignore non-byte Range headers Use status code 301 for redirects deps: send@0.14.1 deps: type-is@~1.6.13 Fix type error when given invalid type to match against deps: mime-types@~2.1.11 deps: vary@~1.1.0 Only accept valid field names in the field argument perf: use strict equality when possible","title":"4.14.0 / 2016-06-16"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4134-2016-01-21","text":"deps: content-disposition@0.5.1 perf: enable strict mode deps: cookie@0.1.5 Throw on invalid values provided to serialize deps: depd@~1.1.0 Support web browser loading perf: enable strict mode deps: escape-html@~1.0.3 perf: enable strict mode perf: optimize string replacement perf: use faster string coercion deps: finalhandler@0.4.1 deps: escape-html@~1.0.3 deps: merge-descriptors@1.0.1 perf: enable strict mode deps: methods@~1.1.2 perf: enable strict mode deps: parseurl@~1.3.1 perf: enable strict mode deps: proxy-addr@~1.0.10 deps: ipaddr.js@1.0.5 perf: enable strict mode deps: range-parser@~1.0.3 perf: enable strict mode deps: send@0.13.1 deps: depd@~1.1.0 deps: destroy@~1.0.4 deps: escape-html@~1.0.3 deps: range-parser@~1.0.3 deps: serve-static@~1.10.2 deps: escape-html@~1.0.3 deps: parseurl@~1.3.0 deps: send@0.13.1","title":"4.13.4 / 2016-01-21"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4133-2015-08-02","text":"Fix infinite loop condition using mergeParams: true Fix inner numeric indices incorrectly altering parent req.params","title":"4.13.3 / 2015-08-02"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4132-2015-07-31","text":"deps: accepts@~1.2.12 deps: mime-types@~2.1.4 deps: array-flatten@1.1.1 perf: enable strict mode deps: path-to-regexp@0.1.7 Fix regression with escaped round brackets and matching groups deps: type-is@~1.6.6 deps: mime-types@~2.1.4","title":"4.13.2 / 2015-07-31"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4131-2015-07-05","text":"deps: accepts@~1.2.10 deps: mime-types@~2.1.2 deps: qs@4.0.0 Fix dropping parameters like hasOwnProperty Fix various parsing edge cases deps: type-is@~1.6.4 deps: mime-types@~2.1.2 perf: enable strict mode perf: remove argument reassignment","title":"4.13.1 / 2015-07-05"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4130-2015-06-20","text":"Add settings to debug output Fix res.format error when only default provided Fix issue where next('route') in app.param would incorrectly skip values Fix hiding platform issues with decodeURIComponent Only URIError s are a 400 Fix using * before params in routes Fix using capture groups before params in routes Simplify res.cookie to call res.append Use array-flatten module for flattening arrays deps: accepts@~1.2.9 deps: mime-types@~2.1.1 perf: avoid argument reassignment & argument slice perf: avoid negotiator recursive construction perf: enable strict mode perf: remove unnecessary bitwise operator deps: cookie@0.1.3 perf: deduce the scope of try-catch deopt perf: remove argument reassignments deps: escape-html@1.0.2 deps: etag@~1.7.0 Always include entity length in ETags for hash length extensions Generate non-Stats ETags using MD5 only (no longer CRC32) Improve stat performance by removing hashing Improve support for JXcore Remove base64 padding in ETags to shorten Support \"fake\" stats objects in environments without fs Use MD5 instead of MD4 in weak ETags over 1KB deps: finalhandler@0.4.0 Fix a false-positive when unpiping in Node.js 0.8 Support statusCode property on Error objects Use unpipe module for unpiping requests deps: escape-html@1.0.2 deps: on-finished@~2.3.0 perf: enable strict mode perf: remove argument reassignment deps: fresh@0.3.0 Add weak ETag matching support deps: on-finished@~2.3.0 Add defined behavior for HTTP CONNECT requests Add defined behavior for HTTP Upgrade requests deps: ee-first@1.1.1 deps: path-to-regexp@0.1.6 deps: send@0.13.0 Allow Node.js HTTP server to set Date response header Fix incorrectly removing Content-Location on 304 response Improve the default redirect response headers Send appropriate headers on default error response Use http-errors for standard emitted errors Use statuses instead of http module for status messages deps: escape-html@1.0.2 deps: etag@~1.7.0 deps: fresh@0.3.0 deps: on-finished@~2.3.0 perf: enable strict mode perf: remove unnecessary array allocations deps: serve-static@~1.10.0 Add fallthrough option Fix reading options from options prototype Improve the default redirect response headers Malformed URLs now next() instead of 400 deps: escape-html@1.0.2 deps: send@0.13.0 perf: enable strict mode perf: remove argument reassignment deps: type-is@~1.6.3 deps: mime-types@~2.1.1 perf: reduce try block size perf: remove bitwise operations perf: enable strict mode perf: isolate app.render try block perf: remove argument reassignments in application perf: remove argument reassignments in request prototype perf: remove argument reassignments in response prototype perf: remove argument reassignments in routing perf: remove argument reassignments in View perf: skip attempting to decode zero length string perf: use saved reference to http.STATUS_CODES","title":"4.13.0 / 2015-06-20"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4124-2015-05-17","text":"deps: accepts@~1.2.7 deps: mime-types@~2.0.11 deps: negotiator@0.5.3 deps: debug@~2.2.0 deps: ms@0.7.1 deps: depd@~1.0.1 deps: etag@~1.6.0 Improve support for JXcore Support \"fake\" stats objects in environments without fs deps: finalhandler@0.3.6 deps: debug@~2.2.0 deps: on-finished@~2.2.1 deps: on-finished@~2.2.1 Fix isFinished(req) when data buffered deps: proxy-addr@~1.0.8 deps: ipaddr.js@1.0.1 deps: qs@2.4.2 Fix allowing parameters like constructor deps: send@0.12.3 deps: debug@~2.2.0 deps: depd@~1.0.1 deps: etag@~1.6.0 deps: ms@0.7.1 deps: on-finished@~2.2.1 deps: serve-static@~1.9.3 deps: send@0.12.3 deps: type-is@~1.6.2 deps: mime-types@~2.0.11","title":"4.12.4 / 2015-05-17"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4123-2015-03-17","text":"deps: accepts@~1.2.5 deps: mime-types@~2.0.10 deps: debug@~2.1.3 Fix high intensity foreground color for bold deps: ms@0.7.0 deps: finalhandler@0.3.4 deps: debug@~2.1.3 deps: proxy-addr@~1.0.7 deps: ipaddr.js@0.1.9 deps: qs@2.4.1 Fix error when parameter hasOwnProperty is present deps: send@0.12.2 Throw errors early for invalid extensions or index options deps: debug@~2.1.3 deps: serve-static@~1.9.2 deps: send@0.12.2 deps: type-is@~1.6.1 deps: mime-types@~2.0.10","title":"4.12.3 / 2015-03-17"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4122-2015-03-02","text":"Fix regression where \"Request aborted\" is logged using res.sendFile","title":"4.12.2 / 2015-03-02"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4121-2015-03-01","text":"Fix constructing application with non-configurable prototype properties Fix ECONNRESET errors from res.sendFile usage Fix req.host when using \"trust proxy\" hops count Fix req.protocol / req.secure when using \"trust proxy\" hops count Fix wrong code on aborted connections from res.sendFile deps: merge-descriptors@1.0.0","title":"4.12.1 / 2015-03-01"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4120-2015-02-23","text":"Fix \"trust proxy\" setting to inherit when app is mounted Generate ETag s for all request responses No longer restricted to only responses for GET and HEAD requests Use content-type to parse Content-Type headers deps: accepts@~1.2.4 Fix preference sorting to be stable for long acceptable lists deps: mime-types@~2.0.9 deps: negotiator@0.5.1 deps: cookie-signature@1.0.6 deps: send@0.12.1 Always read the stat size from the file Fix mutating passed-in options deps: mime@1.3.4 deps: serve-static@~1.9.1 deps: send@0.12.1 deps: type-is@~1.6.0 fix argument reassignment fix false-positives in hasBody Transfer-Encoding check support wildcard for both type and subtype ( */* ) deps: mime-types@~2.0.9","title":"4.12.0 / 2015-02-23"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4112-2015-02-01","text":"Fix res.redirect double-calling res.end for HEAD requests deps: accepts@~1.2.3 deps: mime-types@~2.0.8 deps: proxy-addr@~1.0.6 deps: ipaddr.js@0.1.8 deps: type-is@~1.5.6 deps: mime-types@~2.0.8","title":"4.11.2 / 2015-02-01"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4111-2015-01-20","text":"deps: send@0.11.1 Fix root path disclosure deps: serve-static@~1.8.1 Fix redirect loop in Node.js 0.11.14 Fix root path disclosure deps: send@0.11.1","title":"4.11.1 / 2015-01-20"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4110-2015-01-13","text":"Add res.append(field, val) to append headers Deprecate leading : in name for app.param(name, fn) Deprecate req.param() -- use req.params , req.body , or req.query instead Deprecate app.param(fn) Fix OPTIONS responses to include the HEAD method properly Fix res.sendFile not always detecting aborted connection Match routes iteratively to prevent stack overflows deps: accepts@~1.2.2 deps: mime-types@~2.0.7 deps: negotiator@0.5.0 deps: send@0.11.0 deps: debug@~2.1.1 deps: etag@~1.5.1 deps: ms@0.7.0 deps: on-finished@~2.2.0 deps: serve-static@~1.8.0 deps: send@0.11.0","title":"4.11.0 / 2015-01-13"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4108-2015-01-13","text":"Fix crash from error within OPTIONS response handler deps: proxy-addr@~1.0.5 deps: ipaddr.js@0.1.6","title":"4.10.8 / 2015-01-13"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4107-2015-01-04","text":"Fix Allow header for OPTIONS to not contain duplicate methods Fix incorrect \"Request aborted\" for res.sendFile when HEAD or 304 deps: debug@~2.1.1 deps: finalhandler@0.3.3 deps: debug@~2.1.1 deps: on-finished@~2.2.0 deps: methods@~1.1.1 deps: on-finished@~2.2.0 deps: serve-static@~1.7.2 Fix potential open redirect when mounted at root deps: type-is@~1.5.5 deps: mime-types@~2.0.7","title":"4.10.7 / 2015-01-04"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4106-2014-12-12","text":"Fix exception in req.fresh / req.stale without response headers","title":"4.10.6 / 2014-12-12"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4105-2014-12-10","text":"Fix res.send double-calling res.end for HEAD requests deps: accepts@~1.1.4 deps: mime-types@~2.0.4 deps: type-is@~1.5.4 deps: mime-types@~2.0.4","title":"4.10.5 / 2014-12-10"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4104-2014-11-24","text":"Fix res.sendfile logging standard write errors","title":"4.10.4 / 2014-11-24"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4103-2014-11-23","text":"Fix res.sendFile logging standard write errors deps: etag@~1.5.1 deps: proxy-addr@~1.0.4 deps: ipaddr.js@0.1.5 deps: qs@2.3.3 Fix arrayLimit behavior","title":"4.10.3 / 2014-11-23"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4102-2014-11-09","text":"Correctly invoke async router callback asynchronously deps: accepts@~1.1.3 deps: mime-types@~2.0.3 deps: type-is@~1.5.3 deps: mime-types@~2.0.3","title":"4.10.2 / 2014-11-09"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4101-2014-10-28","text":"Fix handling of URLs containing :// in the path deps: qs@2.3.2 Fix parsing of mixed objects and values","title":"4.10.1 / 2014-10-28"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4100-2014-10-23","text":"Add support for app.set('views', array) Views are looked up in sequence in array of directories Fix res.send(status) to mention res.sendStatus(status) Fix handling of invalid empty URLs Use content-disposition module for res.attachment / res.download Sends standards-compliant Content-Disposition header Full Unicode support Use path.resolve in view lookup deps: debug@~2.1.0 Implement DEBUG_FD env variable support deps: depd@~1.0.0 deps: etag@~1.5.0 Improve string performance Slightly improve speed for weak ETags over 1KB deps: finalhandler@0.3.2 Terminate in progress response only on error Use on-finished to determine request status deps: debug@~2.1.0 deps: on-finished@~2.1.1 deps: on-finished@~2.1.1 Fix handling of pipelined requests deps: qs@2.3.0 Fix parsing of mixed implicit and explicit arrays deps: send@0.10.1 deps: debug@~2.1.0 deps: depd@~1.0.0 deps: etag@~1.5.0 deps: on-finished@~2.1.1 deps: serve-static@~1.7.1 deps: send@0.10.1","title":"4.10.0 / 2014-10-23"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#498-2014-10-17","text":"Fix res.redirect body when redirect status specified deps: accepts@~1.1.2 Fix error when media type has invalid parameter deps: negotiator@0.4.9","title":"4.9.8 / 2014-10-17"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#497-2014-10-10","text":"Fix using same param name in array of paths","title":"4.9.7 / 2014-10-10"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#496-2014-10-08","text":"deps: accepts@~1.1.1 deps: mime-types@~2.0.2 deps: negotiator@0.4.8 deps: serve-static@~1.6.4 Fix redirect loop when index file serving disabled deps: type-is@~1.5.2 deps: mime-types@~2.0.2","title":"4.9.6 / 2014-10-08"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#495-2014-09-24","text":"deps: etag@~1.4.0 deps: proxy-addr@~1.0.3 Use forwarded npm module deps: send@0.9.3 deps: etag@~1.4.0 deps: serve-static@~1.6.3 deps: send@0.9.3","title":"4.9.5 / 2014-09-24"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#494-2014-09-19","text":"deps: qs@2.2.4 Fix issue with object keys starting with numbers truncated","title":"4.9.4 / 2014-09-19"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#493-2014-09-18","text":"deps: proxy-addr@~1.0.2 Fix a global leak when multiple subnets are trusted deps: ipaddr.js@0.1.3","title":"4.9.3 / 2014-09-18"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#492-2014-09-17","text":"Fix regression for empty string path in app.use Fix router.use to accept array of middleware without path Improve error message for bad app.use arguments","title":"4.9.2 / 2014-09-17"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#491-2014-09-16","text":"Fix app.use to accept array of middleware without path deps: depd@0.4.5 deps: etag@~1.3.1 deps: send@0.9.2 deps: depd@0.4.5 deps: etag@~1.3.1 deps: range-parser@~1.0.2 deps: serve-static@~1.6.2 deps: send@0.9.2","title":"4.9.1 / 2014-09-16"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#490-2014-09-08","text":"Add res.sendStatus Invoke callback for sendfile when client aborts Applies to res.sendFile , res.sendfile , and res.download err will be populated with request aborted error Support IP address host in req.subdomains Use etag to generate ETag headers deps: accepts@~1.1.0 update mime-types deps: cookie-signature@1.0.5 deps: debug@~2.0.0 deps: finalhandler@0.2.0 Set X-Content-Type-Options: nosniff header deps: debug@~2.0.0 deps: fresh@0.2.4 deps: media-typer@0.3.0 Throw error when parameter format invalid on parse deps: qs@2.2.3 Fix issue where first empty value in array is discarded deps: range-parser@~1.0.2 deps: send@0.9.1 Add lastModified option Use etag to generate ETag header deps: debug@~2.0.0 deps: fresh@0.2.4 deps: serve-static@~1.6.1 Add lastModified option deps: send@0.9.1 deps: type-is@~1.5.1 fix hasbody to be true for content-length: 0 deps: media-typer@0.3.0 deps: mime-types@~2.0.1 deps: vary@~1.0.0 Accept valid Vary header string as field","title":"4.9.0 / 2014-09-08"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#488-2014-09-04","text":"deps: send@0.8.5 Fix a path traversal issue when using root Fix malicious path detection for empty string path deps: serve-static@~1.5.4 deps: send@0.8.5","title":"4.8.8 / 2014-09-04"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#487-2014-08-29","text":"deps: qs@2.2.2 Remove unnecessary cloning","title":"4.8.7 / 2014-08-29"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#486-2014-08-27","text":"deps: qs@2.2.0 Array parsing fix Performance improvements","title":"4.8.6 / 2014-08-27"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#485-2014-08-18","text":"deps: send@0.8.3 deps: destroy@1.0.3 deps: on-finished@2.1.0 deps: serve-static@~1.5.3 deps: send@0.8.3","title":"4.8.5 / 2014-08-18"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#484-2014-08-14","text":"deps: qs@1.2.2 deps: send@0.8.2 Work around fd leak in Node.js 0.10 for fs.ReadStream deps: serve-static@~1.5.2 deps: send@0.8.2","title":"4.8.4 / 2014-08-14"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#483-2014-08-10","text":"deps: parseurl@~1.3.0 deps: qs@1.2.1 deps: serve-static@~1.5.1 Fix parsing of weird req.originalUrl values deps: parseurl@~1.3.0 deps: utils-merge@1.0.0","title":"4.8.3 / 2014-08-10"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#482-2014-08-07","text":"deps: qs@1.2.0 Fix parsing array of objects","title":"4.8.2 / 2014-08-07"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#481-2014-08-06","text":"fix incorrect deprecation warnings on res.download deps: qs@1.1.0 Accept urlencoded square brackets Accept empty values in implicit array notation","title":"4.8.1 / 2014-08-06"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#480-2014-08-05","text":"add res.sendFile accepts a file system path instead of a URL requires an absolute path or root option specified deprecate res.sendfile -- use res.sendFile instead support mounted app as any argument to app.use() deps: qs@1.0.2 Complete rewrite Limits array length to 20 Limits object depth to 5 Limits parameters to 1,000 deps: send@0.8.1 Add extensions option deps: serve-static@~1.5.0 Add extensions option deps: send@0.8.1","title":"4.8.0 / 2014-08-05"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#474-2014-08-04","text":"fix res.sendfile regression for serving directory index files deps: send@0.7.4 Fix incorrect 403 on Windows and Node.js 0.11 Fix serving index files without root dir deps: serve-static@~1.4.4 deps: send@0.7.4","title":"4.7.4 / 2014-08-04"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#473-2014-08-04","text":"deps: send@0.7.3 Fix incorrect 403 on Windows and Node.js 0.11 deps: serve-static@~1.4.3 Fix incorrect 403 on Windows and Node.js 0.11 deps: send@0.7.3","title":"4.7.3 / 2014-08-04"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#472-2014-07-27","text":"deps: depd@0.4.4 Work-around v8 generating empty stack traces deps: send@0.7.2 deps: depd@0.4.4 deps: serve-static@~1.4.2","title":"4.7.2 / 2014-07-27"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#471-2014-07-26","text":"deps: depd@0.4.3 Fix exception when global Error.stackTraceLimit is too low deps: send@0.7.1 deps: depd@0.4.3 deps: serve-static@~1.4.1","title":"4.7.1 / 2014-07-26"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#470-2014-07-25","text":"fix req.protocol for proxy-direct connections configurable query parser with app.set('query parser', parser) app.set('query parser', 'extended') parse with \"qs\" module app.set('query parser', 'simple') parse with \"querystring\" core module app.set('query parser', false) disable query string parsing app.set('query parser', true) enable simple parsing deprecate res.json(status, obj) -- use res.status(status).json(obj) instead deprecate res.jsonp(status, obj) -- use res.status(status).jsonp(obj) instead deprecate res.send(status, body) -- use res.status(status).send(body) instead deps: debug@1.0.4 deps: depd@0.4.2 Add TRACE_DEPRECATION environment variable Remove non-standard grey color from color output Support --no-deprecation argument Support --trace-deprecation argument deps: finalhandler@0.1.0 Respond after request fully read deps: debug@1.0.4 deps: parseurl@~1.2.0 Cache URLs based on original value Remove no-longer-needed URL mis-parse work-around Simplify the \"fast-path\" RegExp deps: send@0.7.0 Add dotfiles option Cap maxAge value to 1 year deps: debug@1.0.4 deps: depd@0.4.2 deps: serve-static@~1.4.0 deps: parseurl@~1.2.0 deps: send@0.7.0 perf: prevent multiple Buffer creation in res.send","title":"4.7.0 / 2014-07-25"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#461-2014-07-12","text":"fix subapp.mountpath regression for app.use(subapp)","title":"4.6.1 / 2014-07-12"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#460-2014-07-11","text":"accept multiple callbacks to app.use() add explicit \"Rosetta Flash JSONP abuse\" protection previous versions are not vulnerable; this is just explicit protection catch errors in multiple req.param(name, fn) handlers deprecate res.redirect(url, status) -- use res.redirect(status, url) instead fix res.send(status, num) to send num as json (not error) remove unnecessary escaping when res.jsonp returns JSON response support non-string path in app.use(path, fn) supports array of paths supports RegExp router: fix optimization on router exit router: refactor location of try blocks router: speed up standard app.use(fn) deps: debug@1.0.3 Add support for multiple wildcards in namespaces deps: finalhandler@0.0.3 deps: debug@1.0.3 deps: methods@1.1.0 add CONNECT deps: parseurl@~1.1.3 faster parsing of href-only URLs deps: path-to-regexp@0.1.3 deps: send@0.6.0 deps: debug@1.0.3 deps: serve-static@~1.3.2 deps: parseurl@~1.1.3 deps: send@0.6.0 perf: fix arguments reassign deopt in some res methods","title":"4.6.0 / 2014-07-11"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#451-2014-07-06","text":"fix routing regression when altering req.method","title":"4.5.1 / 2014-07-06"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#450-2014-07-04","text":"add deprecation message to non-plural req.accepts* add deprecation message to res.send(body, status) add deprecation message to res.vary() add headers option to res.sendfile use to set headers on successful file transfer add mergeParams option to Router merges req.params from parent routes add req.hostname -- correct name for what req.host returns deprecate things with depd module deprecate req.host -- use req.hostname instead fix behavior when handling request without routes fix handling when route.all is only route invoke router.param() only when route matches restore req.params after invoking router use finalhandler for final response handling use media-typer to alter content-type charset deps: accepts@~1.0.7 deps: send@0.5.0 Accept string for maxage (converted by ms ) Include link in default redirect response deps: serve-static@~1.3.0 Accept string for maxAge (converted by ms ) Add setHeaders option Include HTML link in redirect response deps: send@0.5.0 deps: type-is@~1.3.2","title":"4.5.0 / 2014-07-04"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#445-2014-06-26","text":"deps: cookie-signature@1.0.4 fix for timing attacks","title":"4.4.5 / 2014-06-26"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#444-2014-06-20","text":"fix res.attachment Unicode filenames in Safari fix \"trim prefix\" debug message in express:router deps: accepts@~1.0.5 deps: buffer-crc32@0.2.3","title":"4.4.4 / 2014-06-20"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#443-2014-06-11","text":"fix persistence of modified req.params[name] from app.param() deps: accepts@1.0.3 deps: negotiator@0.4.6 deps: debug@1.0.2 deps: send@0.4.3 Do not throw uncatchable error on file open race condition Use escape-html for HTML escaping deps: debug@1.0.2 deps: finished@1.2.2 deps: fresh@0.2.2 deps: serve-static@1.2.3 Do not throw uncatchable error on file open race condition deps: send@0.4.3","title":"4.4.3 / 2014-06-11"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#442-2014-06-09","text":"fix catching errors from top-level handlers use vary module for res.vary deps: debug@1.0.1 deps: proxy-addr@1.0.1 deps: send@0.4.2 fix \"event emitter leak\" warnings deps: debug@1.0.1 deps: finished@1.2.1 deps: serve-static@1.2.2 fix \"event emitter leak\" warnings deps: send@0.4.2 deps: type-is@1.2.1","title":"4.4.2 / 2014-06-09"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#441-2014-06-02","text":"deps: methods@1.0.1 deps: send@0.4.1 Send max-age in Cache-Control in correct format deps: serve-static@1.2.1 use escape-html for escaping deps: send@0.4.1","title":"4.4.1 / 2014-06-02"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#440-2014-05-30","text":"custom etag control with app.set('etag', val) app.set('etag', function(body, encoding){ return '\"etag\"' }) custom etag generation app.set('etag', 'weak') weak tag app.set('etag', 'strong') strong etag app.set('etag', false) turn off app.set('etag', true) standard etag mark res.send ETag as weak and reduce collisions update accepts to 1.0.2 Fix interpretation when header not in request update send to 0.4.0 Calculate ETag with md5 for reduced collisions Ignore stream errors after request ends deps: debug@0.8.1 update serve-static to 1.2.0 Calculate ETag with md5 for reduced collisions Ignore stream errors after request ends deps: send@0.4.0","title":"4.4.0 / 2014-05-30"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#432-2014-05-28","text":"fix handling of errors from router.param() callbacks","title":"4.3.2 / 2014-05-28"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#431-2014-05-23","text":"revert \"fix behavior of multiple app.VERB for the same path\" this caused a regression in the order of route execution","title":"4.3.1 / 2014-05-23"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#430-2014-05-21","text":"add req.baseUrl to access the path stripped from req.url in routes fix behavior of multiple app.VERB for the same path fix issue routing requests among sub routers invoke router.param() only when necessary instead of every match proper proxy trust with app.set('trust proxy', trust) app.set('trust proxy', 1) trust first hop app.set('trust proxy', 'loopback') trust loopback addresses app.set('trust proxy', '10.0.0.1') trust single IP app.set('trust proxy', '10.0.0.1/16') trust subnet app.set('trust proxy', '10.0.0.1, 10.0.0.2') trust list app.set('trust proxy', false) turn off app.set('trust proxy', true) trust everything set proper charset in Content-Type for res.send update type-is to 1.2.0 support suffix matching","title":"4.3.0 / 2014-05-21"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#420-2014-05-11","text":"deprecate app.del() -- use app.delete() instead deprecate res.json(obj, status) -- use res.json(status, obj) instead the edge-case res.json(status, num) requires res.status(status).json(num) deprecate res.jsonp(obj, status) -- use res.jsonp(status, obj) instead the edge-case res.jsonp(status, num) requires res.status(status).jsonp(num) fix req.next when inside router instance include ETag header in HEAD requests keep previous Content-Type for res.jsonp support PURGE method add app.purge add router.purge include PURGE in app.all update debug to 0.8.0 add enable() method change from stderr to stdout update methods to 1.0.0 add PURGE","title":"4.2.0 / 2014-05-11"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#412-2014-05-08","text":"fix req.host for IPv6 literals fix res.jsonp error if callback param is object","title":"4.1.2 / 2014-05-08"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#411-2014-04-27","text":"fix package.json to reflect supported node version","title":"4.1.1 / 2014-04-27"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#410-2014-04-24","text":"pass options from res.sendfile to send preserve casing of headers in res.header and res.set support unicode file names in res.attachment and res.download update accepts to 1.0.1 deps: negotiator@0.4.0 update cookie to 0.1.2 Fix for maxAge == 0 made compat with expires field update send to 0.3.0 Accept API options in options object Coerce option types Control whether to generate etags Default directory access to 403 when index disabled Fix sending files with dots without root set Include file path in etag Make \"Can't set headers after they are sent.\" catchable Send full entity-body for multi range requests Set etags to \"weak\" Support \"If-Range\" header Support multiple index paths deps: mime@1.2.11 update serve-static to 1.1.0 Accept options directly to send module Resolve relative paths at middleware setup Use parseurl to parse the URL from request deps: send@0.3.0 update type-is to 1.1.0 add non-array values support add multipart as a shorthand","title":"4.1.0 / 2014-04-24"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#400-2014-04-09","text":"remove: node 0.8 support connect and connect's patches except for charset handling express(1) - moved to express-generator express.createServer() - it has been deprecated for a long time. Use express() app.configure - use logic in your own app code app.router - is removed req.auth - use basic-auth instead req.accepted* - use req.accepts*() instead res.location - relative URL resolution is removed res.charset - include the charset in the content type when using res.set() all bundled middleware except static change: app.route -> app.mountpath when mounting an express app in another express app json spaces no longer enabled by default in development req.accepts* -> req.accepts*s - i.e. req.acceptsEncoding -> req.acceptsEncodings req.params is now an object instead of an array res.locals is no longer a function. It is a plain js object. Treat it as such. res.headerSent -> res.headersSent to match node.js ServerResponse object refactor: req.accepts* with accepts req.is with type-is path-to-regexp add: app.router() - returns the app Router instance app.route() - Proxy to the app's Router#route() method to create a new route Router & Route - public API","title":"4.0.0 / 2014-04-09"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3212-2015-07-31","text":"deps: connect@2.30.2 deps: body-parser@~1.13.3 deps: compression@~1.5.2 deps: errorhandler@~1.4.2 deps: method-override@~2.3.5 deps: serve-index@~1.7.2 deps: type-is@~1.6.6 deps: vhost@~3.0.1 deps: vary@~1.0.1 Fix setting empty header from empty field perf: enable strict mode perf: remove argument reassignments","title":"3.21.2 / 2015-07-31"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3211-2015-07-05","text":"deps: basic-auth@~1.0.3 deps: connect@2.30.1 deps: body-parser@~1.13.2 deps: compression@~1.5.1 deps: errorhandler@~1.4.1 deps: morgan@~1.6.1 deps: pause@0.1.0 deps: qs@4.0.0 deps: serve-index@~1.7.1 deps: type-is@~1.6.4","title":"3.21.1 / 2015-07-05"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3210-2015-06-18","text":"deps: basic-auth@1.0.2 perf: enable strict mode perf: hoist regular expression perf: parse with regular expressions perf: remove argument reassignment deps: connect@2.30.0 deps: body-parser@~1.13.1 deps: bytes@2.1.0 deps: compression@~1.5.0 deps: cookie@0.1.3 deps: cookie-parser@~1.3.5 deps: csurf@~1.8.3 deps: errorhandler@~1.4.0 deps: express-session@~1.11.3 deps: finalhandler@0.4.0 deps: fresh@0.3.0 deps: morgan@~1.6.0 deps: serve-favicon@~2.3.0 deps: serve-index@~1.7.0 deps: serve-static@~1.10.0 deps: type-is@~1.6.3 deps: cookie@0.1.3 perf: deduce the scope of try-catch deopt perf: remove argument reassignments deps: escape-html@1.0.2 deps: etag@~1.7.0 Always include entity length in ETags for hash length extensions Generate non-Stats ETags using MD5 only (no longer CRC32) Improve stat performance by removing hashing Improve support for JXcore Remove base64 padding in ETags to shorten Support \"fake\" stats objects in environments without fs Use MD5 instead of MD4 in weak ETags over 1KB deps: fresh@0.3.0 Add weak ETag matching support deps: mkdirp@0.5.1 Work in global strict mode deps: send@0.13.0 Allow Node.js HTTP server to set Date response header Fix incorrectly removing Content-Location on 304 response Improve the default redirect response headers Send appropriate headers on default error response Use http-errors for standard emitted errors Use statuses instead of http module for status messages deps: escape-html@1.0.2 deps: etag@~1.7.0 deps: fresh@0.3.0 deps: on-finished@~2.3.0 perf: enable strict mode perf: remove unnecessary array allocations","title":"3.21.0 / 2015-06-18"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3203-2015-05-17","text":"deps: connect@2.29.2 deps: body-parser@~1.12.4 deps: compression@~1.4.4 deps: connect-timeout@~1.6.2 deps: debug@~2.2.0 deps: depd@~1.0.1 deps: errorhandler@~1.3.6 deps: finalhandler@0.3.6 deps: method-override@~2.3.3 deps: morgan@~1.5.3 deps: qs@2.4.2 deps: response-time@~2.3.1 deps: serve-favicon@~2.2.1 deps: serve-index@~1.6.4 deps: serve-static@~1.9.3 deps: type-is@~1.6.2 deps: debug@~2.2.0 deps: ms@0.7.1 deps: depd@~1.0.1 deps: proxy-addr@~1.0.8 deps: ipaddr.js@1.0.1 deps: send@0.12.3 deps: debug@~2.2.0 deps: depd@~1.0.1 deps: etag@~1.6.0 deps: ms@0.7.1 deps: on-finished@~2.2.1","title":"3.20.3 / 2015-05-17"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3202-2015-03-16","text":"deps: connect@2.29.1 deps: body-parser@~1.12.2 deps: compression@~1.4.3 deps: connect-timeout@~1.6.1 deps: debug@~2.1.3 deps: errorhandler@~1.3.5 deps: express-session@~1.10.4 deps: finalhandler@0.3.4 deps: method-override@~2.3.2 deps: morgan@~1.5.2 deps: qs@2.4.1 deps: serve-index@~1.6.3 deps: serve-static@~1.9.2 deps: type-is@~1.6.1 deps: debug@~2.1.3 Fix high intensity foreground color for bold deps: ms@0.7.0 deps: merge-descriptors@1.0.0 deps: proxy-addr@~1.0.7 deps: ipaddr.js@0.1.9 deps: send@0.12.2 Throw errors early for invalid extensions or index options deps: debug@~2.1.3","title":"3.20.2 / 2015-03-16"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3201-2015-02-28","text":"Fix req.host when using \"trust proxy\" hops count Fix req.protocol / req.secure when using \"trust proxy\" hops count","title":"3.20.1 / 2015-02-28"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3200-2015-02-18","text":"Fix \"trust proxy\" setting to inherit when app is mounted Generate ETag s for all request responses No longer restricted to only responses for GET and HEAD requests Use content-type to parse Content-Type headers deps: connect@2.29.0 Use content-type to parse Content-Type headers deps: body-parser@~1.12.0 deps: compression@~1.4.1 deps: connect-timeout@~1.6.0 deps: cookie-parser@~1.3.4 deps: cookie-signature@1.0.6 deps: csurf@~1.7.0 deps: errorhandler@~1.3.4 deps: express-session@~1.10.3 deps: http-errors@~1.3.1 deps: response-time@~2.3.0 deps: serve-index@~1.6.2 deps: serve-static@~1.9.1 deps: type-is@~1.6.0 deps: cookie-signature@1.0.6 deps: send@0.12.1 Always read the stat size from the file Fix mutating passed-in options deps: mime@1.3.4","title":"3.20.0 / 2015-02-18"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3192-2015-02-01","text":"deps: connect@2.28.3 deps: compression@~1.3.1 deps: csurf@~1.6.6 deps: errorhandler@~1.3.3 deps: express-session@~1.10.2 deps: serve-index@~1.6.1 deps: type-is@~1.5.6 deps: proxy-addr@~1.0.6 deps: ipaddr.js@0.1.8","title":"3.19.2 / 2015-02-01"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3191-2015-01-20","text":"deps: connect@2.28.2 deps: body-parser@~1.10.2 deps: serve-static@~1.8.1 deps: send@0.11.1 Fix root path disclosure","title":"3.19.1 / 2015-01-20"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3190-2015-01-09","text":"Fix OPTIONS responses to include the HEAD method property Use readline for prompt in express(1) deps: commander@2.6.0 deps: connect@2.28.1 deps: body-parser@~1.10.1 deps: compression@~1.3.0 deps: connect-timeout@~1.5.0 deps: csurf@~1.6.4 deps: debug@~2.1.1 deps: errorhandler@~1.3.2 deps: express-session@~1.10.1 deps: finalhandler@0.3.3 deps: method-override@~2.3.1 deps: morgan@~1.5.1 deps: serve-favicon@~2.2.0 deps: serve-index@~1.6.0 deps: serve-static@~1.8.0 deps: type-is@~1.5.5 deps: debug@~2.1.1 deps: methods@~1.1.1 deps: proxy-addr@~1.0.5 deps: ipaddr.js@0.1.6 deps: send@0.11.0 deps: debug@~2.1.1 deps: etag@~1.5.1 deps: ms@0.7.0 deps: on-finished@~2.2.0","title":"3.19.0 / 2015-01-09"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3186-2014-12-12","text":"Fix exception in req.fresh / req.stale without response headers","title":"3.18.6 / 2014-12-12"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3185-2014-12-11","text":"deps: connect@2.27.6 deps: compression@~1.2.2 deps: express-session@~1.9.3 deps: http-errors@~1.2.8 deps: serve-index@~1.5.3 deps: type-is@~1.5.4","title":"3.18.5 / 2014-12-11"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3184-2014-11-23","text":"deps: connect@2.27.4 deps: body-parser@~1.9.3 deps: compression@~1.2.1 deps: errorhandler@~1.2.3 deps: express-session@~1.9.2 deps: qs@2.3.3 deps: serve-favicon@~2.1.7 deps: serve-static@~1.5.1 deps: type-is@~1.5.3 deps: etag@~1.5.1 deps: proxy-addr@~1.0.4 deps: ipaddr.js@0.1.5","title":"3.18.4 / 2014-11-23"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3183-2014-11-09","text":"deps: connect@2.27.3 Correctly invoke async callback asynchronously deps: csurf@~1.6.3","title":"3.18.3 / 2014-11-09"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3182-2014-10-28","text":"deps: connect@2.27.2 Fix handling of URLs containing :// in the path deps: body-parser@~1.9.2 deps: qs@2.3.2","title":"3.18.2 / 2014-10-28"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3181-2014-10-22","text":"Fix internal utils.merge deprecation warnings deps: connect@2.27.1 deps: body-parser@~1.9.1 deps: express-session@~1.9.1 deps: finalhandler@0.3.2 deps: morgan@~1.4.1 deps: qs@2.3.0 deps: serve-static@~1.7.1 deps: send@0.10.1 deps: on-finished@~2.1.1","title":"3.18.1 / 2014-10-22"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3180-2014-10-17","text":"Use content-disposition module for res.attachment / res.download Sends standards-compliant Content-Disposition header Full Unicode support Use etag module to generate ETag headers deps: connect@2.27.0 Use http-errors module for creating errors Use utils-merge module for merging objects deps: body-parser@~1.9.0 deps: compression@~1.2.0 deps: connect-timeout@~1.4.0 deps: debug@~2.1.0 deps: depd@~1.0.0 deps: express-session@~1.9.0 deps: finalhandler@0.3.1 deps: method-override@~2.3.0 deps: morgan@~1.4.0 deps: response-time@~2.2.0 deps: serve-favicon@~2.1.6 deps: serve-index@~1.5.0 deps: serve-static@~1.7.0 deps: debug@~2.1.0 Implement DEBUG_FD env variable support deps: depd@~1.0.0 deps: send@0.10.0 deps: debug@~2.1.0 deps: depd@~1.0.0 deps: etag@~1.5.0","title":"3.18.0 / 2014-10-17"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3178-2014-10-15","text":"deps: connect@2.26.6 deps: compression@~1.1.2 deps: csurf@~1.6.2 deps: errorhandler@~1.2.2","title":"3.17.8 / 2014-10-15"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3177-2014-10-08","text":"deps: connect@2.26.5 Fix accepting non-object arguments to logger deps: serve-static@~1.6.4","title":"3.17.7 / 2014-10-08"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3176-2014-10-02","text":"deps: connect@2.26.4 deps: morgan@~1.3.2 deps: type-is@~1.5.2","title":"3.17.6 / 2014-10-02"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3175-2014-09-24","text":"deps: connect@2.26.3 deps: body-parser@~1.8.4 deps: serve-favicon@~2.1.5 deps: serve-static@~1.6.3 deps: proxy-addr@~1.0.3 Use forwarded npm module deps: send@0.9.3 deps: etag@~1.4.0","title":"3.17.5 / 2014-09-24"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3174-2014-09-19","text":"deps: connect@2.26.2 deps: body-parser@~1.8.3 deps: qs@2.2.4","title":"3.17.4 / 2014-09-19"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3173-2014-09-18","text":"deps: proxy-addr@~1.0.2 Fix a global leak when multiple subnets are trusted deps: ipaddr.js@0.1.3","title":"3.17.3 / 2014-09-18"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3172-2014-09-15","text":"Use crc instead of buffer-crc32 for speed deps: connect@2.26.1 deps: body-parser@~1.8.2 deps: depd@0.4.5 deps: express-session@~1.8.2 deps: morgan@~1.3.1 deps: serve-favicon@~2.1.3 deps: serve-static@~1.6.2 deps: depd@0.4.5 deps: send@0.9.2 deps: depd@0.4.5 deps: etag@~1.3.1 deps: range-parser@~1.0.2","title":"3.17.2 / 2014-09-15"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3171-2014-09-08","text":"Fix error in req.subdomains on empty host","title":"3.17.1 / 2014-09-08"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3170-2014-09-08","text":"Support X-Forwarded-Host in req.subdomains Support IP address host in req.subdomains deps: connect@2.26.0 deps: body-parser@~1.8.1 deps: compression@~1.1.0 deps: connect-timeout@~1.3.0 deps: cookie-parser@~1.3.3 deps: cookie-signature@1.0.5 deps: csurf@~1.6.1 deps: debug@~2.0.0 deps: errorhandler@~1.2.0 deps: express-session@~1.8.1 deps: finalhandler@0.2.0 deps: fresh@0.2.4 deps: media-typer@0.3.0 deps: method-override@~2.2.0 deps: morgan@~1.3.0 deps: qs@2.2.3 deps: serve-favicon@~2.1.3 deps: serve-index@~1.2.1 deps: serve-static@~1.6.1 deps: type-is@~1.5.1 deps: vhost@~3.0.0 deps: cookie-signature@1.0.5 deps: debug@~2.0.0 deps: fresh@0.2.4 deps: media-typer@0.3.0 Throw error when parameter format invalid on parse deps: range-parser@~1.0.2 deps: send@0.9.1 Add lastModified option Use etag to generate ETag header deps: debug@~2.0.0 deps: fresh@0.2.4 deps: vary@~1.0.0 Accept valid Vary header string as field","title":"3.17.0 / 2014-09-08"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#31610-2014-09-04","text":"deps: connect@2.25.10 deps: serve-static@~1.5.4 deps: send@0.8.5 Fix a path traversal issue when using root Fix malicious path detection for empty string path","title":"3.16.10 / 2014-09-04"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3169-2014-08-29","text":"deps: connect@2.25.9 deps: body-parser@~1.6.7 deps: qs@2.2.2","title":"3.16.9 / 2014-08-29"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3168-2014-08-27","text":"deps: connect@2.25.8 deps: body-parser@~1.6.6 deps: csurf@~1.4.1 deps: qs@2.2.0","title":"3.16.8 / 2014-08-27"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3167-2014-08-18","text":"deps: connect@2.25.7 deps: body-parser@~1.6.5 deps: express-session@~1.7.6 deps: morgan@~1.2.3 deps: serve-static@~1.5.3 deps: send@0.8.3 deps: destroy@1.0.3 deps: on-finished@2.1.0","title":"3.16.7 / 2014-08-18"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3166-2014-08-14","text":"deps: connect@2.25.6 deps: body-parser@~1.6.4 deps: qs@1.2.2 deps: serve-static@~1.5.2 deps: send@0.8.2 Work around fd leak in Node.js 0.10 for fs.ReadStream","title":"3.16.6 / 2014-08-14"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3165-2014-08-11","text":"deps: connect@2.25.5 Fix backwards compatibility in logger","title":"3.16.5 / 2014-08-11"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3164-2014-08-10","text":"Fix original URL parsing in res.location deps: connect@2.25.4 Fix query middleware breaking with argument deps: body-parser@~1.6.3 deps: compression@~1.0.11 deps: connect-timeout@~1.2.2 deps: express-session@~1.7.5 deps: method-override@~2.1.3 deps: on-headers@~1.0.0 deps: parseurl@~1.3.0 deps: qs@1.2.1 deps: response-time@~2.0.1 deps: serve-index@~1.1.6 deps: serve-static@~1.5.1 deps: parseurl@~1.3.0","title":"3.16.4 / 2014-08-10"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3163-2014-08-07","text":"deps: connect@2.25.3 deps: multiparty@3.3.2","title":"3.16.3 / 2014-08-07"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3162-2014-08-07","text":"deps: connect@2.25.2 deps: body-parser@~1.6.2 deps: qs@1.2.0","title":"3.16.2 / 2014-08-07"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3161-2014-08-06","text":"deps: connect@2.25.1 deps: body-parser@~1.6.1 deps: qs@1.1.0","title":"3.16.1 / 2014-08-06"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3160-2014-08-05","text":"deps: connect@2.25.0 deps: body-parser@~1.6.0 deps: compression@~1.0.10 deps: csurf@~1.4.0 deps: express-session@~1.7.4 deps: qs@1.0.2 deps: serve-static@~1.5.0 deps: send@0.8.1 Add extensions option","title":"3.16.0 / 2014-08-05"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3153-2014-08-04","text":"fix res.sendfile regression for serving directory index files deps: connect@2.24.3 deps: serve-index@~1.1.5 deps: serve-static@~1.4.4 deps: send@0.7.4 Fix incorrect 403 on Windows and Node.js 0.11 Fix serving index files without root dir","title":"3.15.3 / 2014-08-04"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3152-2014-07-27","text":"deps: connect@2.24.2 deps: body-parser@~1.5.2 deps: depd@0.4.4 deps: express-session@~1.7.2 deps: morgan@~1.2.2 deps: serve-static@~1.4.2 deps: depd@0.4.4 Work-around v8 generating empty stack traces deps: send@0.7.2 deps: depd@0.4.4","title":"3.15.2 / 2014-07-27"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3151-2014-07-26","text":"deps: connect@2.24.1 deps: body-parser@~1.5.1 deps: depd@0.4.3 deps: express-session@~1.7.1 deps: morgan@~1.2.1 deps: serve-index@~1.1.4 deps: serve-static@~1.4.1 deps: depd@0.4.3 Fix exception when global Error.stackTraceLimit is too low deps: send@0.7.1 deps: depd@0.4.3","title":"3.15.1 / 2014-07-26"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3150-2014-07-22","text":"Fix req.protocol for proxy-direct connections Pass options from res.sendfile to send deps: connect@2.24.0 deps: body-parser@~1.5.0 deps: compression@~1.0.9 deps: connect-timeout@~1.2.1 deps: debug@1.0.4 deps: depd@0.4.2 deps: express-session@~1.7.0 deps: finalhandler@0.1.0 deps: method-override@~2.1.2 deps: morgan@~1.2.0 deps: multiparty@3.3.1 deps: parseurl@~1.2.0 deps: serve-static@~1.4.0 deps: debug@1.0.4 deps: depd@0.4.2 Add TRACE_DEPRECATION environment variable Remove non-standard grey color from color output Support --no-deprecation argument Support --trace-deprecation argument deps: parseurl@~1.2.0 Cache URLs based on original value Remove no-longer-needed URL mis-parse work-around Simplify the \"fast-path\" RegExp deps: send@0.7.0 Add dotfiles option Cap maxAge value to 1 year deps: debug@1.0.4 deps: depd@0.4.2","title":"3.15.0 / 2014-07-22"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3140-2014-07-11","text":"add explicit \"Rosetta Flash JSONP abuse\" protection previous versions are not vulnerable; this is just explicit protection deprecate res.redirect(url, status) -- use res.redirect(status, url) instead fix res.send(status, num) to send num as json (not error) remove unnecessary escaping when res.jsonp returns JSON response deps: basic-auth@1.0.0 support empty password support empty username deps: connect@2.23.0 deps: debug@1.0.3 deps: express-session@~1.6.4 deps: method-override@~2.1.0 deps: parseurl@~1.1.3 deps: serve-static@~1.3.1 deps: debug@1.0.3 Add support for multiple wildcards in namespaces deps: methods@1.1.0 add CONNECT deps: parseurl@~1.1.3 faster parsing of href-only URLs","title":"3.14.0 / 2014-07-11"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3130-2014-07-03","text":"add deprecation message to app.configure add deprecation message to req.auth use basic-auth to parse Authorization header deps: connect@2.22.0 deps: csurf@~1.3.0 deps: express-session@~1.6.1 deps: multiparty@3.3.0 deps: serve-static@~1.3.0 deps: send@0.5.0 Accept string for maxage (converted by ms ) Include link in default redirect response","title":"3.13.0 / 2014-07-03"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3121-2014-06-26","text":"deps: connect@2.21.1 deps: cookie-parser@1.3.2 deps: cookie-signature@1.0.4 deps: express-session@~1.5.2 deps: type-is@~1.3.2 deps: cookie-signature@1.0.4 fix for timing attacks","title":"3.12.1 / 2014-06-26"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3120-2014-06-21","text":"use media-typer to alter content-type charset deps: connect@2.21.0 deprecate connect(middleware) -- use app.use(middleware) instead deprecate connect.createServer() -- use connect() instead fix res.setHeader() patch to work with get -> append -> set pattern deps: compression@~1.0.8 deps: errorhandler@~1.1.1 deps: express-session@~1.5.0 deps: serve-index@~1.1.3","title":"3.12.0 / 2014-06-21"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3110-2014-06-19","text":"deprecate things with depd module deps: buffer-crc32@0.2.3 deps: connect@2.20.2 deprecate verify option to json -- use body-parser npm module instead deprecate verify option to urlencoded -- use body-parser npm module instead deprecate things with depd module use finalhandler for final response handling use media-typer to parse content-type for charset deps: body-parser@1.4.3 deps: connect-timeout@1.1.1 deps: cookie-parser@1.3.1 deps: csurf@1.2.2 deps: errorhandler@1.1.0 deps: express-session@1.4.0 deps: multiparty@3.2.9 deps: serve-index@1.1.2 deps: type-is@1.3.1 deps: vhost@2.0.0","title":"3.11.0 / 2014-06-19"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3105-2014-06-11","text":"deps: connect@2.19.6 deps: body-parser@1.3.1 deps: compression@1.0.7 deps: debug@1.0.2 deps: serve-index@1.1.1 deps: serve-static@1.2.3 deps: debug@1.0.2 deps: send@0.4.3 Do not throw uncatchable error on file open race condition Use escape-html for HTML escaping deps: debug@1.0.2 deps: finished@1.2.2 deps: fresh@0.2.2","title":"3.10.5 / 2014-06-11"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3104-2014-06-09","text":"deps: connect@2.19.5 fix \"event emitter leak\" warnings deps: csurf@1.2.1 deps: debug@1.0.1 deps: serve-static@1.2.2 deps: type-is@1.2.1 deps: debug@1.0.1 deps: send@0.4.2 fix \"event emitter leak\" warnings deps: finished@1.2.1 deps: debug@1.0.1","title":"3.10.4 / 2014-06-09"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3103-2014-06-05","text":"use vary module for res.vary deps: connect@2.19.4 deps: errorhandler@1.0.2 deps: method-override@2.0.2 deps: serve-favicon@2.0.1 deps: debug@1.0.0","title":"3.10.3 / 2014-06-05"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3102-2014-06-03","text":"deps: connect@2.19.3 deps: compression@1.0.6","title":"3.10.2 / 2014-06-03"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3101-2014-06-03","text":"deps: connect@2.19.2 deps: compression@1.0.4 deps: proxy-addr@1.0.1","title":"3.10.1 / 2014-06-03"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3100-2014-06-02","text":"deps: connect@2.19.1 deprecate methodOverride() -- use method-override npm module instead deps: body-parser@1.3.0 deps: method-override@2.0.1 deps: multiparty@3.2.8 deps: response-time@2.0.0 deps: serve-static@1.2.1 deps: methods@1.0.1 deps: send@0.4.1 Send max-age in Cache-Control in correct format","title":"3.10.0 / 2014-06-02"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#390-2014-05-30","text":"custom etag control with app.set('etag', val) app.set('etag', function(body, encoding){ return '\"etag\"' }) custom etag generation app.set('etag', 'weak') weak tag app.set('etag', 'strong') strong etag app.set('etag', false) turn off app.set('etag', true) standard etag Include ETag in HEAD requests mark res.send ETag as weak and reduce collisions update connect to 2.18.0 deps: compression@1.0.3 deps: serve-index@1.1.0 deps: serve-static@1.2.0 update send to 0.4.0 Calculate ETag with md5 for reduced collisions Ignore stream errors after request ends deps: debug@0.8.1","title":"3.9.0 / 2014-05-30"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#381-2014-05-27","text":"update connect to 2.17.3 deps: body-parser@1.2.2 deps: express-session@1.2.1 deps: method-override@1.0.2","title":"3.8.1 / 2014-05-27"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#380-2014-05-21","text":"keep previous Content-Type for res.jsonp set proper charset in Content-Type for res.send update connect to 2.17.1 fix res.charset appending charset when content-type has one deps: express-session@1.2.0 deps: morgan@1.1.1 deps: serve-index@1.0.3","title":"3.8.0 / 2014-05-21"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#370-2014-05-18","text":"proper proxy trust with app.set('trust proxy', trust) app.set('trust proxy', 1) trust first hop app.set('trust proxy', 'loopback') trust loopback addresses app.set('trust proxy', '10.0.0.1') trust single IP app.set('trust proxy', '10.0.0.1/16') trust subnet app.set('trust proxy', '10.0.0.1, 10.0.0.2') trust list app.set('trust proxy', false) turn off app.set('trust proxy', true) trust everything update connect to 2.16.2 deprecate res.headerSent -- use res.headersSent deprecate res.on(\"header\") -- use on-headers module instead fix edge-case in res.appendHeader that would append in wrong order json: use body-parser urlencoded: use body-parser dep: bytes@1.0.0 dep: cookie-parser@1.1.0 dep: csurf@1.2.0 dep: express-session@1.1.0 dep: method-override@1.0.1","title":"3.7.0 / 2014-05-18"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#360-2014-05-09","text":"deprecate app.del() -- use app.delete() instead deprecate res.json(obj, status) -- use res.json(status, obj) instead the edge-case res.json(status, num) requires res.status(status).json(num) deprecate res.jsonp(obj, status) -- use res.jsonp(status, obj) instead the edge-case res.jsonp(status, num) requires res.status(status).jsonp(num) support PURGE method add app.purge add router.purge include PURGE in app.all update connect to 2.15.0 Add res.appendHeader Call error stack even when response has been sent Patch res.headerSent to return Boolean Patch res.headersSent for node.js 0.8 Prevent default 404 handler after response sent dep: compression@1.0.2 dep: connect-timeout@1.1.0 dep: debug@^0.8.0 dep: errorhandler@1.0.1 dep: express-session@1.0.4 dep: morgan@1.0.1 dep: serve-favicon@2.0.0 dep: serve-index@1.0.2 update debug to 0.8.0 add enable() method change from stderr to stdout update methods to 1.0.0 add PURGE update mkdirp to 0.5.0","title":"3.6.0 / 2014-05-09"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#353-2014-05-08","text":"fix req.host for IPv6 literals fix res.jsonp error if callback param is object","title":"3.5.3 / 2014-05-08"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#352-2014-04-24","text":"update connect to 2.14.5 update cookie to 0.1.2 update mkdirp to 0.4.0 update send to 0.3.0","title":"3.5.2 / 2014-04-24"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#351-2014-03-25","text":"pin less-middleware in generated app","title":"3.5.1 / 2014-03-25"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#350-2014-03-06","text":"bump deps","title":"3.5.0 / 2014-03-06"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#348-2014-01-13","text":"prevent incorrect automatic OPTIONS responses #1868 @dpatti update binary and examples for jade 1.0 #1876 @yossi, #1877 @reqshark, #1892 @matheusazzi throw 400 in case of malformed paths @rlidwka","title":"3.4.8 / 2014-01-13"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#347-2013-12-10","text":"update connect","title":"3.4.7 / 2013-12-10"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#346-2013-12-01","text":"update connect (raw-body)","title":"3.4.6 / 2013-12-01"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#345-2013-11-27","text":"update connect res.location: remove leading ./ #1802 @kapouer res.redirect: fix `res.redirect('toString') #1829 @michaelficarra res.send: always send ETag when content-length > 0 router: add Router.all() method","title":"3.4.5 / 2013-11-27"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#344-2013-10-29","text":"update connect update supertest update methods express(1): replace bodyParser() with urlencoded() and json() #1795 @chirag04","title":"3.4.4 / 2013-10-29"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#343-2013-10-23","text":"update connect","title":"3.4.3 / 2013-10-23"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#342-2013-10-18","text":"update connect downgrade commander","title":"3.4.2 / 2013-10-18"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#341-2013-10-15","text":"update connect update commander jsonp: check if callback is a function router: wrap encodeURIComponent in a try/catch #1735 (@lxe) res.format: now includes charset @1747 (@sorribas) res.links: allow multiple calls @1746 (@sorribas)","title":"3.4.1 / 2013-10-15"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#340-2013-09-07","text":"add res.vary(). Closes #1682 update connect","title":"3.4.0 / 2013-09-07"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#338-2013-09-02","text":"update connect","title":"3.3.8 / 2013-09-02"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#337-2013-08-28","text":"update connect","title":"3.3.7 / 2013-08-28"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#336-2013-08-27","text":"Revert \"remove charset from json responses. Closes #1631\" (causes issues in some clients) add: req.accepts take an argument list","title":"3.3.6 / 2013-08-27"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#334-2013-07-08","text":"update send and connect","title":"3.3.4 / 2013-07-08"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#333-2013-07-04","text":"update connect","title":"3.3.3 / 2013-07-04"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#332-2013-07-03","text":"update connect update send remove .version export","title":"3.3.2 / 2013-07-03"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#331-2013-06-27","text":"update connect","title":"3.3.1 / 2013-06-27"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#330-2013-06-26","text":"update connect add support for multiple X-Forwarded-Proto values. Closes #1646 change: remove charset from json responses. Closes #1631 change: return actual booleans from req.accept* functions fix jsonp callback array throw","title":"3.3.0 / 2013-06-26"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#326-2013-06-02","text":"update connect","title":"3.2.6 / 2013-06-02"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#325-2013-05-21","text":"update connect update node-cookie add: throw a meaningful error when there is no default engine change generation of ETags with res.send() to GET requests only. Closes #1619","title":"3.2.5 / 2013-05-21"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#324-2013-05-09","text":"fix req.subdomains when no Host is present fix req.host when no Host is present, return undefined","title":"3.2.4 / 2013-05-09"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#323-2013-05-07","text":"update connect / qs","title":"3.2.3 / 2013-05-07"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#322-2013-05-03","text":"update qs","title":"3.2.2 / 2013-05-03"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#321-2013-04-29","text":"add app.VERB() paths array deprecation warning update connect update qs and remove all ~ semver crap fix: accept number as value of Signed Cookie","title":"3.2.1 / 2013-04-29"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#320-2013-04-15","text":"add \"view\" constructor setting to override view behaviour add req.acceptsEncoding(name) add req.acceptedEncodings revert cookie signature change causing session race conditions fix sorting of Accept values of the same quality","title":"3.2.0 / 2013-04-15"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#312-2013-04-12","text":"add support for custom Accept parameters update cookie-signature","title":"3.1.2 / 2013-04-12"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#311-2013-04-01","text":"add X-Forwarded-Host support to req.host fix relative redirects update mkdirp update buffer-crc32 remove legacy app.configure() method from app template.","title":"3.1.1 / 2013-04-01"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#310-2013-01-25","text":"add support for leading \".\" in \"view engine\" setting add array support to res.set() add node 0.8.x to travis.yml add \"subdomain offset\" setting for tweaking req.subdomains add res.location(url) implementing res.redirect() -like setting of Location use app.get() for x-powered-by setting for inheritance fix colons in passwords for req.auth","title":"3.1.0 / 2013-01-25"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#306-2013-01-04","text":"add http verb methods to Router update connect fix mangling of the res.cookie() options object fix jsonp whitespace escape. Closes #1132","title":"3.0.6 / 2013-01-04"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#305-2012-12-19","text":"add throwing when a non-function is passed to a route fix: explicitly remove Transfer-Encoding header from 204 and 304 responses revert \"add 'etag' option\"","title":"3.0.5 / 2012-12-19"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#304-2012-12-05","text":"add 'etag' option to disable res.send() Etags add escaping of urls in text/plain in res.redirect() for old browsers interpreting as html change crc32 module for a more liberal license update connect","title":"3.0.4 / 2012-12-05"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#303-2012-11-13","text":"update connect update cookie module fix cookie max-age","title":"3.0.3 / 2012-11-13"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#302-2012-11-08","text":"add OPTIONS to cors example. Closes #1398 fix route chaining regression. Closes #1397","title":"3.0.2 / 2012-11-08"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#301-2012-11-01","text":"update connect","title":"3.0.1 / 2012-11-01"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300-2012-10-23","text":"add make clean add \"Basic\" check to req.auth add req.auth test coverage add cb && cb(payload) to res.jsonp() . Closes #1374 add backwards compat for res.redirect() status. Closes #1336 add support for res.json() to retain previously defined Content-Types. Closes #1349 update connect change res.redirect() to utilize a pathname-relative Location again. Closes #1382 remove non-primitive string support for res.send() fix view-locals example. Closes #1370 fix route-separation example","title":"3.0.0 / 2012-10-23"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300rc5-2012-09-18","text":"update connect add redis search example add static-files example add \"x-powered-by\" setting ( app.disable('x-powered-by') ) add \"application/octet-stream\" redirect Accept test case. Closes #1317","title":"3.0.0rc5 / 2012-09-18"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300rc4-2012-08-30","text":"add res.jsonp() . Closes #1307 add \"verbose errors\" option to error-pages example add another route example to express(1) so people are not so confused add redis online user activity tracking example update connect dep fix etag quoting. Closes #1310 fix error-pages 404 status fix jsonp callback char restrictions remove old OPTIONS default response","title":"3.0.0rc4 / 2012-08-30"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300rc3-2012-08-13","text":"update connect dep fix signed cookies to work with connect.cookieParser() (\"s:\" prefix was missing) [tnydwrds] fix res.render() clobbering of \"locals\"","title":"3.0.0rc3 / 2012-08-13"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300rc2-2012-08-03","text":"add CORS example update connect dep deprecate .createServer() & remove old stale examples fix: escape res.redirect() link fix vhost example","title":"3.0.0rc2 / 2012-08-03"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300rc1-2012-07-24","text":"add more examples to view-locals add scheme-relative redirects ( res.redirect(\"//foo.com\") ) support update cookie dep update connect dep update send dep fix express(1) -h flag, use -H for hogan. Closes #1245 fix res.sendfile() socket error handling regression","title":"3.0.0rc1 / 2012-07-24"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300beta7-2012-07-16","text":"update connect dep for send() root normalization regression","title":"3.0.0beta7 / 2012-07-16"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300beta6-2012-07-13","text":"add err.view property for view errors. Closes #1226 add \"jsonp callback name\" setting add support for \"/foo/:bar*\" non-greedy matches change res.sendfile() to use send() module change res.send to use \"response-send\" module remove app.locals.use and res.locals.use , use regular middleware","title":"3.0.0beta6 / 2012-07-13"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300beta5-2012-07-03","text":"add \"make check\" support add route-map example add res.json(obj, status) support back for BC add \"methods\" dep, remove internal methods module update connect dep update auth example to utilize cores pbkdf2 updated tests to use \"supertest\"","title":"3.0.0beta5 / 2012-07-03"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300beta4-2012-06-25","text":"Added req.auth Added req.range(size) Added res.links(obj) Added res.send(body, status) support back for backwards compat Added .default() support to res.format() Added 2xx / 304 check to req.fresh Revert \"Added + support to the router\" Fixed res.send() freshness check, respect res.statusCode","title":"3.0.0beta4 / 2012-06-25"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300beta3-2012-06-15","text":"Added hogan --hjs to express(1) [nullfirm] Added another example to content-negotiation Added fresh dep Changed: res.send() always checks freshness Fixed: expose connects mime module. Closes #1165","title":"3.0.0beta3 / 2012-06-15"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300beta2-2012-06-06","text":"Added + support to the router Added req.host Changed req.param() to check route first Update connect dep","title":"3.0.0beta2 / 2012-06-06"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300beta1-2012-06-01","text":"Added res.format() callback to override default 406 behaviour Fixed res.redirect() 406. Closes #1154","title":"3.0.0beta1 / 2012-06-01"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300alpha5-2012-05-30","text":"Added req.ip Added { signed: true } option to res.cookie() Removed res.signedCookie() Changed: dont reverse req.ips Fixed \"trust proxy\" setting check for req.ips","title":"3.0.0alpha5 / 2012-05-30"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300alpha4-2012-05-09","text":"Added: allow [] in jsonp callback. Closes #1128 Added PORT env var support in generated template. Closes #1118 [benatkin] Updated: connect 2.2.2","title":"3.0.0alpha4 / 2012-05-09"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300alpha3-2012-05-04","text":"Added public app.routes . Closes #887 Added view-locals example Added mvc example Added res.locals.use() . Closes #1120 Added conditional-GET support to res.send() Added: coerce res.set() values to strings Changed: moved static() in generated apps below router Changed: res.send() only set ETag when not previously set Changed connect 2.2.1 dep Changed: make test now runs unit / acceptance tests Fixed req/res proto inheritance","title":"3.0.0alpha3 / 2012-05-04"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300alpha2-2012-04-26","text":"Added make benchmark back Added res.send() support for String objects Added client-side data exposing example Added res.header() and req.header() aliases for BC Added express.createServer() for BC Perf: memoize parsed urls Perf: connect 2.2.0 dep Changed: make expressInit() middleware self-aware Fixed: use app.get() for all core settings Fixed redis session example Fixed session example. Closes #1105 Fixed generated express dep. Closes #1078","title":"3.0.0alpha2 / 2012-04-26"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300alpha1-2012-04-15","text":"Added app.locals.use(callback) Added app.locals object Added app.locals(obj) Added res.locals object Added res.locals(obj) Added res.format() for content-negotiation Added app.engine() Added res.cookie() JSON cookie support Added \"trust proxy\" setting Added req.subdomains Added req.protocol Added req.secure Added req.path Added req.ips Added req.fresh Added req.stale Added comma-delimited / array support for req.accepts() Added debug instrumentation Added res.set(obj) Added res.set(field, value) Added res.get(field) Added app.get(setting) . Closes #842 Added req.acceptsLanguage() Added req.acceptsCharset() Added req.accepted Added req.acceptedLanguages Added req.acceptedCharsets Added \"json replacer\" setting Added \"json spaces\" setting Added X-Forwarded-Proto support to res.redirect() . Closes #92 Added --less support to express(1) Added express.response prototype Added express.request prototype Added express.application prototype Added app.path() Added app.render() Added res.type() to replace res.contentType() Changed: res.redirect() to add relative support Changed: enable \"jsonp callback\" by default Changed: renamed \"case sensitive routes\" to \"case sensitive routing\" Rewrite of all tests with mocha Removed \"root\" setting Removed res.redirect('home') support Removed req.notify() Removed app.register() Removed app.redirect() Removed app.is() Removed app.helpers() Removed app.dynamicHelpers() Fixed res.sendfile() with non-GET. Closes #723 Fixed express(1) public dir for windows. Closes #866","title":"3.0.0alpha1 / 2012-04-15"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#259-2012-04-02","text":"Added support for PURGE request method [pbuyle] Fixed express(1) generated app app.address() before listening [mmalecki]","title":"2.5.9/ 2012-04-02"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#258-2012-02-08","text":"Update mkdirp dep. Closes #991","title":"2.5.8 / 2012-02-08"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#257-2012-02-06","text":"Fixed app.all duplicate DELETE requests [mscdex]","title":"2.5.7 / 2012-02-06"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#256-2012-01-13","text":"Updated hamljs dev dep. Closes #953","title":"2.5.6 / 2012-01-13"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#255-2012-01-08","text":"Fixed: set filename on cached templates [matthewleon]","title":"2.5.5 / 2012-01-08"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#254-2012-01-02","text":"Fixed express(1) eol on 0.4.x. Closes #947","title":"2.5.4 / 2012-01-02"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#253-2011-12-30","text":"Fixed req.is() when a charset is present","title":"2.5.3 / 2011-12-30"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#252-2011-12-10","text":"Fixed: express(1) LF -> CRLF for windows","title":"2.5.2 / 2011-12-10"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#251-2011-11-17","text":"Changed: updated connect to 1.8.x Removed sass.js support from express(1)","title":"2.5.1 / 2011-11-17"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#250-2011-10-24","text":"Added ./routes dir for generated app by default Added npm install reminder to express(1) app gen Added 0.5.x support Removed make test-cov since it wont work with node 0.5.x Fixed express(1) public dir for windows. Closes #866","title":"2.5.0 / 2011-10-24"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#247-2011-10-05","text":"Added mkdirp to express(1). Closes #795 Added simple json-config example Added shorthand for the parsed request's pathname via req.path Changed connect dep to 1.7.x to fix npm issue... Fixed res.redirect() HEAD support. [reported by xerox] Fixed req.flash() , only escape args Fixed absolute path checking on windows. Closes #829 [reported by andrewpmckenzie]","title":"2.4.7 / 2011-10-05"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#246-2011-08-22","text":"Fixed multiple param callback regression. Closes #824 [reported by TroyGoode]","title":"2.4.6 / 2011-08-22"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#245-2011-08-19","text":"Added support for routes to handle errors. Closes #809 Added app.routes.all() . Closes #803 Added \"basepath\" setting to work in conjunction with reverse proxies etc. Refactored Route to use a single array of callbacks Added support for multiple callbacks for app.param() . Closes #801 Closes #805 Changed: removed .call(self) for route callbacks Dependency: qs >= 0.3.1 Fixed res.redirect() on windows due to join() usage. Closes #808","title":"2.4.5 / 2011-08-19"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#244-2011-08-05","text":"Fixed res.header() intention of a set, even when undefined Fixed * , value no longer required Fixed res.send(204) support. Closes #771","title":"2.4.4 / 2011-08-05"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#243-2011-07-14","text":"Added docs for status option special-case. Closes #739 Fixed options.filename , exposing the view path to template engines","title":"2.4.3 / 2011-07-14"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#242-2011-07-06","text":"Revert \"removed jsonp stripping\" for XSS","title":"2.4.2. / 2011-07-06"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#241-2011-07-06","text":"Added res.json() JSONP support. Closes #737 Added extending-templates example. Closes #730 Added \"strict routing\" setting for trailing slashes Added support for multiple envs in app.configure() calls. Closes #735 Changed: res.send() using res.json() Changed: when cookie path === null don't default it Changed; default cookie path to \"home\" setting. Closes #731 Removed pids/logs creation from express(1)","title":"2.4.1 / 2011-07-06"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#240-2011-06-28","text":"Added chainable res.status(code) Added res.json() , an explicit version of res.send(obj) Added simple web-service example","title":"2.4.0 / 2011-06-28"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#2312-2011-06-22","text":"#express is now on freenode! come join! Added req.get(field, param) Added links to Japanese documentation, thanks @hideyukisaito! Added; the express(1) generated app outputs the env Added content-negotiation example Dependency: connect >= 1.5.1 < 2.0.0 Fixed view layout bug. Closes #720 Fixed; ignore body on 304. Closes #701","title":"2.3.12 / 2011-06-22"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#2311-2011-06-04","text":"Added npm test Removed generation of dummy test file from express(1) Fixed; express(1) adds express as a dep Fixed; prune on prepublish","title":"2.3.11 / 2011-06-04"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#2310-2011-05-27","text":"Added req.route , exposing the current route Added package.json generation support to express(1) Fixed call to app.param() function for optional params. Closes #682","title":"2.3.10 / 2011-05-27"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#239-2011-05-25","text":"Fixed bug-ish with ../' in res.partial()` calls","title":"2.3.9 / 2011-05-25"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#238-2011-05-24","text":"Fixed app.options()","title":"2.3.8 / 2011-05-24"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#237-2011-05-23","text":"Added route Collection , ex: app.get('/user/:id').remove(); Added support for app.param(fn) to define param logic Removed app.param() support for callback with return value Removed module.parent check from express(1) generated app. Closes #670 Refactored router. Closes #639","title":"2.3.7 / 2011-05-23"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#236-2011-05-20","text":"Changed; using devDependencies instead of git submodules Fixed redis session example Fixed markdown example Fixed view caching, should not be enabled in development","title":"2.3.6 / 2011-05-20"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#235-2011-05-20","text":"Added export .view as alias for .View","title":"2.3.5 / 2011-05-20"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#234-2011-05-08","text":"Added ./examples/say Fixed res.sendfile() bug preventing the transfer of files with spaces","title":"2.3.4 / 2011-05-08"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#233-2011-05-03","text":"Added \"case sensitive routes\" option. Changed; split methods supported per rfc [slaskis] Fixed route-specific middleware when using the same callback function several times","title":"2.3.3 / 2011-05-03"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#232-2011-04-27","text":"Fixed view hints","title":"2.3.2 / 2011-04-27"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#231-2011-04-26","text":"Added app.match() as app.match.all() Added app.lookup() as app.lookup.all() Added app.remove() for app.remove.all() Added app.remove.VERB() Fixed template caching collision issue. Closes #644 Moved router over from connect and started refactor","title":"2.3.1 / 2011-04-26"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#230-2011-04-25","text":"Added options support to res.clearCookie() Added res.helpers() as alias of res.locals() Added; json defaults to UTF-8 with res.send() . Closes #632. [Daniel * Dependency connect >= 1.4.0 Changed; auto set Content-Type in res.attachement [Aaron Heckmann] Renamed \"cache views\" to \"view cache\". Closes #628 Fixed caching of views when using several apps. Closes #637 Fixed gotcha invoking app.param() callbacks once per route middleware. Closes #638 Fixed partial lookup precedence. Closes #631 Shaw]","title":"2.3.0 / 2011-04-25"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#222-2011-04-12","text":"Added second callback support for res.download() connection errors Fixed filename option passing to template engine","title":"2.2.2 / 2011-04-12"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#221-2011-04-04","text":"Added layout(path) helper to change the layout within a view. Closes #610 Fixed partial() collection object support. Previously only anything with .length would work. When .length is present one must still be aware of holes, however now { collection: {foo: 'bar'}} is valid, exposes keyInCollection and keysInCollection . Performance improved with better view caching Removed request and response locals Changed; errorHandler page title is now Express instead of Connect","title":"2.2.1 / 2011-04-04"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#220-2011-03-30","text":"Added app.lookup.VERB() , ex app.lookup.put('/user/:id') . Closes #606 Added app.match.VERB() , ex app.match.put('/user/12') . Closes #606 Added app.VERB(path) as alias of app.lookup.VERB() . Dependency connect >= 1.2.0","title":"2.2.0 / 2011-03-30"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#211-2011-03-29","text":"Added; expose err.view object when failing to locate a view Fixed res.partial() call next(err) when no callback is given [reported by aheckmann] Fixed; res.send(undefined) responds with 204 [aheckmann]","title":"2.1.1 / 2011-03-29"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#210-2011-03-24","text":"Added <root>/_?<name> partial lookup support. Closes #447 Added request , response , and app local variables Added settings local variable, containing the app's settings Added req.flash() exception if req.session is not available Added res.send(bool) support (json response) Fixed stylus example for latest version Fixed; wrap try/catch around res.render()","title":"2.1.0 / 2011-03-24"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#200-2011-03-17","text":"Fixed up index view path alternative. Changed; res.locals() without object returns the locals","title":"2.0.0 / 2011-03-17"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#200rc3-2011-03-17","text":"Added res.locals(obj) to compliment res.local(key, val) Added res.partial() callback support Fixed recursive error reporting issue in res.render()","title":"2.0.0rc3 / 2011-03-17"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#200rc2-2011-03-17","text":"Changed; partial() \"locals\" are now optional Fixed SlowBuffer support. Closes #584 [reported by tyrda01] Fixed .filename view engine option [reported by drudge] Fixed blog example Fixed {req,res}.app reference when mounting [Ben Weaver]","title":"2.0.0rc2 / 2011-03-17"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#200rc-2011-03-14","text":"Fixed; expose HTTPSServer constructor Fixed express(1) default test charset. Closes #579 [reported by secoif] Fixed; default charset to utf-8 instead of utf8 for lame IE [reported by NickP]","title":"2.0.0rc / 2011-03-14"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#200beta3-2011-03-09","text":"Added support for res.contentType() literal The original res.contentType('.json') , res.contentType('application/json') , and res.contentType('json') will work now. Added res.render() status option support back Added charset option for res.render() Added .charset support (via connect 1.0.4) Added view resolution hints when in development and a lookup fails Added layout lookup support relative to the page view. For example while rendering ./views/user/index.jade if you create ./views/user/layout.jade it will be used in favour of the root layout. Fixed res.redirect() . RFC states absolute url [reported by unlink] Fixed; default res.send() string charset to utf8 Removed Partial constructor (not currently used)","title":"2.0.0beta3 / 2011-03-09"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#200beta2-2011-03-07","text":"Added res.render() .locals support back to aid in migration process Fixed flash example","title":"2.0.0beta2 / 2011-03-07"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#200beta-2011-03-03","text":"Added HTTPS support Added res.cookie() maxAge support Added req.header() Referrer / Referer special-case, either works Added mount support for res.redirect() , now respects the mount-point Added union() util, taking place of merge(clone()) combo Added stylus support to express(1) generated app Added secret to session middleware used in examples and generated app Added res.local(name, val) for progressive view locals Added default param support to req.param(name, default) Added app.disabled() and app.enabled() Added app.register() support for omitting leading \".\", either works Added res.partial() , using the same interface as partial() within a view. Closes #539 Added app.param() to map route params to async/sync logic Added; aliased app.helpers() as app.locals() . Closes #481 Added extname with no leading \".\" support to res.contentType() Added cache views setting, defaulting to enabled in \"production\" env Added index file partial resolution, eg: partial('user') may try views/user/index.jade . Added req.accepts() support for extensions Changed; res.download() and res.sendfile() now utilize Connect's static file server connect.static.send() . Changed; replaced connect.utils.mime() with npm mime module Changed; allow req.query to be pre-defined (via middleware or other parent Changed view partial resolution, now relative to parent view Changed view engine signature. no longer engine.render(str, options, callback) , now engine.compile(str, options) -> Function , the returned function accepts fn(locals) . Fixed req.param() bug returning Array.prototype methods. Closes #552 Fixed; using Stream#pipe() instead of sys.pump() in res.sendfile() Fixed; using qs module instead of querystring Fixed; strip unsafe chars from jsonp callbacks Removed \"stream threshold\" setting","title":"2.0.0beta / 2011-03-03"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#108-2011-03-01","text":"Allow req.query to be pre-defined (via middleware or other parent app) \"connect\": \">= 0.5.0 < 1.0.0\". Closes #547 Removed the long deprecated EXPRESS_ENV support","title":"1.0.8 / 2011-03-01"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#107-2011-02-07","text":"Fixed render() setting inheritance. Mounted apps would not inherit \"view engine\"","title":"1.0.7 / 2011-02-07"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#106-2011-02-07","text":"Fixed view engine setting bug when period is in dirname","title":"1.0.6 / 2011-02-07"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#105-2011-02-05","text":"Added secret to generated app session() call","title":"1.0.5 / 2011-02-05"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#104-2011-02-05","text":"Added qs dependency to package.json Fixed namespaced require() s for latest connect support","title":"1.0.4 / 2011-02-05"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#103-2011-01-13","text":"Remove unsafe characters from JSONP callback names [Ryan Grove]","title":"1.0.3 / 2011-01-13"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#102-2011-01-10","text":"Removed nested require, using connect.router","title":"1.0.2 / 2011-01-10"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#101-2010-12-29","text":"Fixed for middleware stacked via createServer() previously the foo middleware passed to createServer(foo) would not have access to Express methods such as res.send() or props like req.query etc.","title":"1.0.1 / 2010-12-29"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#100-2010-11-16","text":"Added; deduce partial object names from the last segment. For example by default partial('forum/post', postObject) will give you the post object, providing a meaningful default. Added http status code string representation to res.redirect() body Added; res.redirect() supporting text/plain and text/html via Accept . Added req.is() to aid in content negotiation Added partial local inheritance [suggested by masylum]. Closes #102 providing access to parent template locals. Added -s, --session[s] flag to express(1) to add session related middleware Added --template flag to express(1) to specify the template engine to use. Added --css flag to express(1) to specify the stylesheet engine to use (or just plain css by default). Added app.all() support [thanks aheckmann] Added partial direct object support. You may now partial('user', user) providing the \"user\" local, vs previously partial('user', { object: user }) . Added route-separation example since many people question ways to do this with CommonJS modules. Also view the blog example for an alternative. Performance; caching view path derived partial object names Fixed partial local inheritance precedence. [reported by Nick Poulden] Closes #454 Fixed jsonp support; text/javascript as per mailinglist discussion","title":"1.0.0 / 2010-11-16"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#100rc4-2010-10-14","text":"Added NODE_ENV support, EXPRESS_ENV is deprecated and will be removed in 1.0.0 Added route-middleware support (very helpful, see the docs ) Added jsonp callback setting to enable/disable jsonp autowrapping [Dav Glass] Added callback query check on response.send to autowrap JSON objects for simple webservice implementations [Dav Glass] Added partial() support for array-like collections. Closes #434 Added support for swappable querystring parsers Added session usage docs. Closes #443 Added dynamic helper caching. Closes #439 [suggested by maritz] Added authentication example Added basic Range support to res.sendfile() (and res.download() etc) Changed; express(1) generated app using 2 spaces instead of 4 Default env to \"development\" again [aheckmann] Removed context option is no more, use \"scope\" Fixed; exposing ./support libs to examples so they can run without installs Fixed mvc example","title":"1.0.0rc4 / 2010-10-14"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#100rc3-2010-09-20","text":"Added confirmation for express(1) app generation. Closes #391 Added extending of flash formatters via app.flashFormatters Added flash formatter support. Closes #411 Added streaming support to res.sendfile() using sys.pump() when >= \"stream threshold\" Added stream threshold setting for res.sendfile() Added res.send() HEAD support Added res.clearCookie() Added res.cookie() Added res.render() headers option Added res.redirect() response bodies Added res.render() status option support. Closes #425 [thanks aheckmann] Fixed res.sendfile() responding with 403 on malicious path Fixed res.download() bug; when an error occurs remove Content-Disposition Fixed; mounted apps settings now inherit from parent app [aheckmann] Fixed; stripping Content-Length / Content-Type when 204 Fixed res.send() 204. Closes #419 Fixed multiple Set-Cookie headers via res.header() . Closes #402 Fixed bug messing with error handlers when listenFD() is called instead of listen() . [thanks guillermo]","title":"1.0.0rc3 / 2010-09-20"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#100rc2-2010-08-17","text":"Added app.register() for template engine mapping. Closes #390 Added res.render() callback support as second argument (no options) Added callback support to res.download() Added callback support for res.sendfile() Added support for middleware access via express.middlewareName() vs connect.middlewareName() Added \"partials\" setting to docs Added default expresso tests to express(1) generated app. Closes #384 Fixed res.sendfile() error handling, defer via next() Fixed res.render() callback when a layout is used [thanks guillermo] Fixed; make install creating ~/.node_libraries when not present Fixed issue preventing error handlers from being defined anywhere. Closes #387","title":"1.0.0rc2 / 2010-08-17"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#100rc-2010-07-28","text":"Added mounted hook. Closes #369 Added connect dependency to package.json Removed \"reload views\" setting and support code development env never caches, production always caches. Removed param in route callbacks, signature is now simply (req, res, next), previously (req, res, params, next). Use req.params for path captures, req.query for GET params. Fixed \"home\" setting Fixed middleware/router precedence issue. Closes #366 Fixed; configure() callbacks called immediately. Closes #368","title":"1.0.0rc / 2010-07-28"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#100beta2-2010-07-23","text":"Added more examples Added; exporting Server constructor Added Server#helpers() for view locals Added Server#dynamicHelpers() for dynamic view locals. Closes #349 Added support for absolute view paths Added; home setting defaults to Server#route for mounted apps. Closes #363 Added Guillermo Rauch to the contributor list Added support for \"as\" for non-collection partials. Closes #341 Fixed install.sh , ensuring ~/.node_libraries exists. Closes #362 [thanks jf] Fixed res.render() exceptions, now passed to next() when no callback is given [thanks guillermo] Fixed instanceof Array checks, now Array.isArray() Fixed express(1) expansion of public dirs. Closes #348 Fixed middleware precedence. Closes #345 Fixed view watcher, now async [thanks aheckmann]","title":"1.0.0beta2 / 2010-07-23"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#100beta-2010-07-15","text":"Re-write much faster much lighter Check ExpressJS.com for migration guide and updated docs","title":"1.0.0beta / 2010-07-15"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#0140-2010-06-15","text":"Utilize relative requires Added Static bufferSize option [aheckmann] Fixed caching of view and partial subdirectories [aheckmann] Fixed mime.type() comments now that \".ext\" is not supported Updated haml submodule Updated class submodule Removed bin/express","title":"0.14.0 / 2010-06-15"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#0130-2010-06-01","text":"Added node v0.1.97 compatibility Added support for deleting cookies via Request#cookie('key', null) Updated haml submodule Fixed not-found page, now using charset utf-8 Fixed show-exceptions page, now using charset utf-8 Fixed view support due to fs.readFile Buffers Changed; mime.type() no longer accepts \".type\" due to node extname() changes","title":"0.13.0 / 2010-06-01"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#0120-2010-05-22","text":"Added node v0.1.96 compatibility Added view helpers export which act as additional local variables Updated haml submodule Changed ETag; removed inode, modified time only Fixed LF to CRLF for setting multiple cookies Fixed cookie compilation; values are now urlencoded Fixed cookies parsing; accepts quoted values and url escaped cookies","title":"0.12.0 / 2010-05-22"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#0110-2010-05-06","text":"Added support for layouts using different engines this.render('page.html.haml', { layout: 'super-cool-layout.html.ejs' }) this.render('page.html.haml', { layout: 'foo' }) // assumes 'foo.html.haml' this.render('page.html.haml', { layout: false }) // no layout Updated ext submodule Updated haml submodule Fixed EJS partial support by passing along the context. Issue #307","title":"0.11.0 / 2010-05-06"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#0101-2010-05-03","text":"Fixed binary uploads.","title":"0.10.1 / 2010-05-03"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#0100-2010-04-30","text":"Added charset support via Request#charset (automatically assigned to 'UTF-8' when respond()'s encoding is set to 'utf8' or 'utf-8'). Added \"encoding\" option to Request#render(). Closes #299 Added \"dump exceptions\" setting, which is enabled by default. Added simple ejs template engine support Added error response support for text/plain, application/json. Closes #297 Added callback function param to Request#error() Added Request#sendHead() Added Request#stream() Added support for Request#respond(304, null) for empty response bodies Added ETag support to Request#sendfile() Added options to Request#sendfile(), passed to fs.createReadStream() Added filename arg to Request#download() Performance enhanced due to pre-reversing plugins so that plugins.reverse() is not called on each request Performance enhanced by preventing several calls to toLowerCase() in Router#match() Changed; Request#sendfile() now streams Changed; Renamed Request#halt() to Request#respond(). Closes #289 Changed; Using sys.inspect() instead of JSON.encode() for error output Changed; run() returns the http.Server instance. Closes #298 Changed; Defaulting Server#host to null (INADDR_ANY) Changed; Logger \"common\" format scale of 0.4f Removed Logger \"request\" format Fixed; Catching ENOENT in view caching, preventing error when \"views/partials\" is not found Fixed several issues with http client Fixed Logger Content-Length output Fixed bug preventing Opera from retaining the generated session id. Closes #292","title":"0.10.0 / 2010-04-30"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#090-2010-04-14","text":"Added DSL level error() route support Added DSL level notFound() route support Added Request#error() Added Request#notFound() Added Request#render() callback function. Closes #258 Added \"max upload size\" setting Added \"magic\" variables to collection partials (__index__, __length__, __isFirst__, __isLast__). Closes #254 Added haml.js submodule; removed haml-js Added callback function support to Request#halt() as 3rd/4th arg Added preprocessing of route param wildcards using param(). Closes #251 Added view partial support (with collections etc.) Fixed bug preventing falsey params (such as ?page=0). Closes #286 Fixed setting of multiple cookies. Closes #199 Changed; view naming convention is now NAME.TYPE.ENGINE (for example page.html.haml) Changed; session cookie is now httpOnly Changed; Request is no longer global Changed; Event is no longer global Changed; \"sys\" module is no longer global Changed; moved Request#download to Static plugin where it belongs Changed; Request instance created before body parsing. Closes #262 Changed; Pre-caching views in memory when \"cache view contents\" is enabled. Closes #253 Changed; Pre-caching view partials in memory when \"cache view partials\" is enabled Updated support to node --version 0.1.90 Updated dependencies Removed set(\"session cookie\") in favour of use(Session, { cookie: { ... }}) Removed utils.mixin(); use Object#mergeDeep()","title":"0.9.0 / 2010-04-14"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#080-2010-03-19","text":"Added coffeescript example app. Closes #242 Changed; cache api now async friendly. Closes #240 Removed deprecated 'express/static' support. Use 'express/plugins/static'","title":"0.8.0 / 2010-03-19"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#076-2010-03-19","text":"Added Request#isXHR. Closes #229 Added make install (for the executable) Added express executable for setting up simple app templates Added \"GET /public/*\" to Static plugin, defaulting to /public Added Static plugin Fixed; Request#render() only calls cache.get() once Fixed; Namespacing View caches with \"view:\" Fixed; Namespacing Static caches with \"static:\" Fixed; Both example apps now use the Static plugin Fixed set(\"views\"). Closes #239 Fixed missing space for combined log format Deprecated Request#sendfile() and 'express/static' Removed Server#running","title":"0.7.6 / 2010-03-19"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#075-2010-03-16","text":"Added Request#flash() support without args, now returns all flashes Updated ext submodule","title":"0.7.5 / 2010-03-16"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#074-2010-03-16","text":"Fixed session reaper Changed; class.js replacing js-oo Class implementation (quite a bit faster, no browser cruft)","title":"0.7.4 / 2010-03-16"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#073-2010-03-16","text":"Added package.json Fixed requiring of haml / sass due to kiwi removal","title":"0.7.3 / 2010-03-16"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#072-2010-03-16","text":"Fixed GIT submodules (HAH!)","title":"0.7.2 / 2010-03-16"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#071-2010-03-16","text":"Changed; Express now using submodules again until a PM is adopted Changed; chat example using millisecond conversions from ext","title":"0.7.1 / 2010-03-16"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#070-2010-03-15","text":"Added Request#pass() support (finds the next matching route, or the given path) Added Logger plugin (default \"common\" format replaces CommonLogger) Removed Profiler plugin Removed CommonLogger plugin","title":"0.7.0 / 2010-03-15"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#060-2010-03-11","text":"Added seed.yml for kiwi package management support Added HTTP client query string support when method is GET. Closes #205 Added support for arbitrary view engines. For example \"foo.engine.html\" will now require('engine'), the exports from this module are cached after the first require(). Added async plugin support Removed usage of RESTful route funcs as http client get() etc, use http.get() and friends Removed custom exceptions","title":"0.6.0 / 2010-03-11"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#050-2010-03-10","text":"Added ext dependency (library of js extensions) Removed extname() / basename() utils. Use path module Removed toArray() util. Use arguments.values Removed escapeRegexp() util. Use RegExp.escape() Removed process.mixin() dependency. Use utils.mixin() Removed Collection Removed ElementCollection Shameless self promotion of ebook \"Advanced JavaScript\" (http://dev-mag.com) ;)","title":"0.5.0 / 2010-03-10"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#040-2010-02-11","text":"Added flash() example to sample upload app Added high level restful http client module (express/http) Changed; RESTful route functions double as HTTP clients. Closes #69 Changed; throwing error when routes are added at runtime Changed; defaulting render() context to the current Request. Closes #197 Updated haml submodule","title":"0.4.0 / 2010-02-11"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#030-2010-02-11","text":"Updated haml / sass submodules. Closes #200 Added flash message support. Closes #64 Added accepts() now allows multiple args. fixes #117 Added support for plugins to halt. Closes #189 Added alternate layout support. Closes #119 Removed Route#run(). Closes #188 Fixed broken specs due to use(Cookie) missing","title":"0.3.0 / 2010-02-11"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#021-2010-02-05","text":"Added \"plot\" format option for Profiler (for gnuplot processing) Added request number to Profiler plugin Fixed binary encoding for multipart file uploads, was previously defaulting to UTF8 Fixed issue with routes not firing when not files are present. Closes #184 Fixed process.Promise -> events.Promise","title":"0.2.1 / 2010-02-05"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#020-2010-02-03","text":"Added parseParam() support for name[] etc. (allows for file inputs with \"multiple\" attr) Closes #180 Added Both Cache and Session option \"reapInterval\" may be \"reapEvery\". Closes #174 Added expiration support to cache api with reaper. Closes #133 Added cache Store.Memory#reap() Added Cache; cache api now uses first class Cache instances Added abstract session Store. Closes #172 Changed; cache Memory.Store#get() utilizing Collection Renamed MemoryStore -> Store.Memory Fixed use() of the same plugin several time will always use latest options. Closes #176","title":"0.2.0 / 2010-02-03"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#010-2010-02-03","text":"Changed; Hooks (before / after) pass request as arg as well as evaluated in their context Updated node support to 0.1.27 Closes #169 Updated dirname(__filename) -> __dirname Updated libxmljs support to v0.2.0 Added session support with memory store / reaping Added quick uid() helper Added multi-part upload support Added Sass.js support / submodule Added production env caching view contents and static files Added static file caching. Closes #136 Added cache plugin with memory stores Added support to StaticFile so that it works with non-textual files. Removed dirname() helper Removed several globals (now their modules must be required)","title":"0.1.0 / 2010-02-03"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#002-2010-01-10","text":"Added view benchmarks; currently haml vs ejs Added Request#attachment() specs. Closes #116 Added use of node's parseQuery() util. Closes #123 Added make init for submodules Updated Haml Updated sample chat app to show messages on load Updated libxmljs parseString -> parseHtmlString Fixed make init to work with older versions of git Fixed specs can now run independent specs for those who can't build deps. Closes #127 Fixed issues introduced by the node url module changes. Closes 126. Fixed two assertions failing due to Collection#keys() returning strings Fixed faulty Collection#toArray() spec due to keys() returning strings Fixed make test now builds libxmljs.node before testing","title":"0.0.2 / 2010-01-10"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#001-2010-01-03","text":"Initial release","title":"0.0.1 / 2010-01-03"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/","text":"Fast, unopinionated, minimalist web framework for Node.js . This project has a Code of Conduct . Table of contents Installation Features Docs & Community Quick Start Running Tests Philosophy Examples Contributing to Express TC (Technical Committee) Triagers License import express from 'express' const app = express () app . get ( '/' , ( req , res ) => { res . send ( 'Hello World' ) }) app . listen ( 3000 ) Installation This is a Node.js module available through the npm registry . Before installing, download and install Node.js . Node.js 18 or higher is required. If this is a brand new project, make sure to create a package.json first with the npm init command . Installation is done using the npm install command : npm install express Follow our installing guide for more information. Features Robust routing Focus on high performance Super-high test coverage HTTP helpers (redirection, caching, etc) View system supporting 14+ template engines Content negotiation Executable for generating applications quickly Docs & Community Website and Documentation - [ website repo ] GitHub Organization for Official Middleware & Modules Github Discussions for discussion on the development and usage of Express PROTIP Be sure to read the migration guide to v5 Quick Start The quickest way to get started with express is to utilize the executable express(1) to generate an application as shown below: Install the executable. The executable's major version will match Express's: npm install -g express-generator@4 Create the app: express /tmp/foo && cd /tmp/foo Install dependencies: npm install Start the server: npm start View the website at: http://localhost:3000 Philosophy The Express philosophy is to provide small, robust tooling for HTTP servers, making it a great solution for single page applications, websites, hybrids, or public HTTP APIs. Express does not force you to use any specific ORM or template engine. With support for over 14 template engines via @ladjs/consolidate , you can quickly craft your perfect framework. Examples To view the examples, clone the Express repository: git clone https://github.com/expressjs/express.git --depth 1 && cd express Then install the dependencies: npm install Then run whichever example you want: node examples/content-negotiation Contributing The Express.js project welcomes all constructive contributions. Contributions take many forms, from code for bug fixes and enhancements, to additions and fixes to documentation, additional tests, triaging incoming pull requests and issues, and more! See the Contributing Guide for more technical details on contributing. Security Issues If you discover a security vulnerability in Express, please see Security Policies and Procedures . Running Tests To run the test suite, first install the dependencies: npm install Then run npm test : npm test People The original author of Express is TJ Holowaychuk List of all contributors TC (Technical Committee) UlisesGascon - Ulises Gasc\u00f3n (he/him) jonchurch - Jon Church wesleytodd - Wes Todd LinusU - Linus Unneb\u00e4ck blakeembrey - Blake Embrey sheplu - Jean Burellier crandmck - Rand McKinney ctcpip - Chris de Almeida TC emeriti members #### TC emeriti members * [dougwilson](https://github.com/dougwilson) - **Douglas Wilson** * [hacksparrow](https://github.com/hacksparrow) - **Hage Yaapa** * [jonathanong](https://github.com/jonathanong) - **jongleberry** * [niftylettuce](https://github.com/niftylettuce) - **niftylettuce** * [troygoode](https://github.com/troygoode) - **Troy Goode** Triagers aravindvnair99 - Aravind Nair bjohansebas - Sebastian Beltran carpasse - Carlos Serrano CBID2 - Christine Belzie dpopp07 - Dustin Popp UlisesGascon - Ulises Gasc\u00f3n (he/him) 3imed-jaberi - Imed Jaberi IamLizu - S M Mahmudul Hasan (he/him) Phillip9587 - Phillip Barta Sushmeet - Sushmeet Sunger rxmarbles Rick Markins (He/him) Triagers emeriti members #### Emeritus Triagers * [AuggieH](https://github.com/AuggieH) - **Auggie Hudak** * [G-Rath](https://github.com/G-Rath) - **Gareth Jones** * [MohammadXroid](https://github.com/MohammadXroid) - **Mohammad Ayashi** * [NawafSwe](https://github.com/NawafSwe) - **Nawaf Alsharqi** * [NotMoni](https://github.com/NotMoni) - **Moni** * [VigneshMurugan](https://github.com/VigneshMurugan) - **Vignesh Murugan** * [davidmashe](https://github.com/davidmashe) - **David Ashe** * [digitaIfabric](https://github.com/digitaIfabric) - **David** * [e-l-i-s-e](https://github.com/e-l-i-s-e) - **Elise Bonner** * [fed135](https://github.com/fed135) - **Frederic Charette** * [firmanJS](https://github.com/firmanJS) - **Firman Abdul Hakim** * [getspooky](https://github.com/getspooky) - **Yasser Ameur** * [ghinks](https://github.com/ghinks) - **Glenn** * [ghousemohamed](https://github.com/ghousemohamed) - **Ghouse Mohamed** * [gireeshpunathil](https://github.com/gireeshpunathil) - **Gireesh Punathil** * [jake32321](https://github.com/jake32321) - **Jake Reed** * [jonchurch](https://github.com/jonchurch) - **Jon Church** * [lekanikotun](https://github.com/lekanikotun) - **Troy Goode** * [marsonya](https://github.com/marsonya) - **Lekan Ikotun** * [mastermatt](https://github.com/mastermatt) - **Matt R. Wilson** * [maxakuru](https://github.com/maxakuru) - **Max Edell** * [mlrawlings](https://github.com/mlrawlings) - **Michael Rawlings** * [rodion-arr](https://github.com/rodion-arr) - **Rodion Abdurakhimov** * [sheplu](https://github.com/sheplu) - **Jean Burellier** * [tarunyadav1](https://github.com/tarunyadav1) - **Tarun yadav** * [tunniclm](https://github.com/tunniclm) - **Mike Tunnicliffe** * [enyoghasim](https://github.com/enyoghasim) - **David Enyoghasim** * [0ss](https://github.com/0ss) - **Salah** * [import-brain](https://github.com/import-brain) - **Eric Cheng** (he/him) * [dakshkhetan](https://github.com/dakshkhetan) - **Daksh Khetan** (he/him) * [lucasraziel](https://github.com/lucasraziel) - **Lucas Soares Do Rego** * [mertcanaltin](https://github.com/mertcanaltin) - **Mert Can Altin** License MIT","title":"Readme"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/#table-of-contents","text":"Installation Features Docs & Community Quick Start Running Tests Philosophy Examples Contributing to Express TC (Technical Committee) Triagers License import express from 'express' const app = express () app . get ( '/' , ( req , res ) => { res . send ( 'Hello World' ) }) app . listen ( 3000 )","title":"Table of contents"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/#installation","text":"This is a Node.js module available through the npm registry . Before installing, download and install Node.js . Node.js 18 or higher is required. If this is a brand new project, make sure to create a package.json first with the npm init command . Installation is done using the npm install command : npm install express Follow our installing guide for more information.","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/#features","text":"Robust routing Focus on high performance Super-high test coverage HTTP helpers (redirection, caching, etc) View system supporting 14+ template engines Content negotiation Executable for generating applications quickly","title":"Features"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/#docs-community","text":"Website and Documentation - [ website repo ] GitHub Organization for Official Middleware & Modules Github Discussions for discussion on the development and usage of Express PROTIP Be sure to read the migration guide to v5","title":"Docs &amp; Community"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/#quick-start","text":"The quickest way to get started with express is to utilize the executable express(1) to generate an application as shown below: Install the executable. The executable's major version will match Express's: npm install -g express-generator@4 Create the app: express /tmp/foo && cd /tmp/foo Install dependencies: npm install Start the server: npm start View the website at: http://localhost:3000","title":"Quick Start"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/#philosophy","text":"The Express philosophy is to provide small, robust tooling for HTTP servers, making it a great solution for single page applications, websites, hybrids, or public HTTP APIs. Express does not force you to use any specific ORM or template engine. With support for over 14 template engines via @ladjs/consolidate , you can quickly craft your perfect framework.","title":"Philosophy"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/#examples","text":"To view the examples, clone the Express repository: git clone https://github.com/expressjs/express.git --depth 1 && cd express Then install the dependencies: npm install Then run whichever example you want: node examples/content-negotiation","title":"Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/#contributing","text":"The Express.js project welcomes all constructive contributions. Contributions take many forms, from code for bug fixes and enhancements, to additions and fixes to documentation, additional tests, triaging incoming pull requests and issues, and more! See the Contributing Guide for more technical details on contributing.","title":"Contributing"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/#security-issues","text":"If you discover a security vulnerability in Express, please see Security Policies and Procedures .","title":"Security Issues"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/#running-tests","text":"To run the test suite, first install the dependencies: npm install Then run npm test : npm test","title":"Running Tests"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/#people","text":"The original author of Express is TJ Holowaychuk List of all contributors","title":"People"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/#tc-technical-committee","text":"UlisesGascon - Ulises Gasc\u00f3n (he/him) jonchurch - Jon Church wesleytodd - Wes Todd LinusU - Linus Unneb\u00e4ck blakeembrey - Blake Embrey sheplu - Jean Burellier crandmck - Rand McKinney ctcpip - Chris de Almeida TC emeriti members #### TC emeriti members * [dougwilson](https://github.com/dougwilson) - **Douglas Wilson** * [hacksparrow](https://github.com/hacksparrow) - **Hage Yaapa** * [jonathanong](https://github.com/jonathanong) - **jongleberry** * [niftylettuce](https://github.com/niftylettuce) - **niftylettuce** * [troygoode](https://github.com/troygoode) - **Troy Goode**","title":"TC (Technical Committee)"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/#triagers","text":"aravindvnair99 - Aravind Nair bjohansebas - Sebastian Beltran carpasse - Carlos Serrano CBID2 - Christine Belzie dpopp07 - Dustin Popp UlisesGascon - Ulises Gasc\u00f3n (he/him) 3imed-jaberi - Imed Jaberi IamLizu - S M Mahmudul Hasan (he/him) Phillip9587 - Phillip Barta Sushmeet - Sushmeet Sunger rxmarbles Rick Markins (He/him) Triagers emeriti members #### Emeritus Triagers * [AuggieH](https://github.com/AuggieH) - **Auggie Hudak** * [G-Rath](https://github.com/G-Rath) - **Gareth Jones** * [MohammadXroid](https://github.com/MohammadXroid) - **Mohammad Ayashi** * [NawafSwe](https://github.com/NawafSwe) - **Nawaf Alsharqi** * [NotMoni](https://github.com/NotMoni) - **Moni** * [VigneshMurugan](https://github.com/VigneshMurugan) - **Vignesh Murugan** * [davidmashe](https://github.com/davidmashe) - **David Ashe** * [digitaIfabric](https://github.com/digitaIfabric) - **David** * [e-l-i-s-e](https://github.com/e-l-i-s-e) - **Elise Bonner** * [fed135](https://github.com/fed135) - **Frederic Charette** * [firmanJS](https://github.com/firmanJS) - **Firman Abdul Hakim** * [getspooky](https://github.com/getspooky) - **Yasser Ameur** * [ghinks](https://github.com/ghinks) - **Glenn** * [ghousemohamed](https://github.com/ghousemohamed) - **Ghouse Mohamed** * [gireeshpunathil](https://github.com/gireeshpunathil) - **Gireesh Punathil** * [jake32321](https://github.com/jake32321) - **Jake Reed** * [jonchurch](https://github.com/jonchurch) - **Jon Church** * [lekanikotun](https://github.com/lekanikotun) - **Troy Goode** * [marsonya](https://github.com/marsonya) - **Lekan Ikotun** * [mastermatt](https://github.com/mastermatt) - **Matt R. Wilson** * [maxakuru](https://github.com/maxakuru) - **Max Edell** * [mlrawlings](https://github.com/mlrawlings) - **Michael Rawlings** * [rodion-arr](https://github.com/rodion-arr) - **Rodion Abdurakhimov** * [sheplu](https://github.com/sheplu) - **Jean Burellier** * [tarunyadav1](https://github.com/tarunyadav1) - **Tarun yadav** * [tunniclm](https://github.com/tunniclm) - **Mike Tunnicliffe** * [enyoghasim](https://github.com/enyoghasim) - **David Enyoghasim** * [0ss](https://github.com/0ss) - **Salah** * [import-brain](https://github.com/import-brain) - **Eric Cheng** (he/him) * [dakshkhetan](https://github.com/dakshkhetan) - **Daksh Khetan** (he/him) * [lucasraziel](https://github.com/lucasraziel) - **Lucas Soares Do Rego** * [mertcanaltin](https://github.com/mertcanaltin) - **Mert Can Altin**","title":"Triagers"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/express-rate-limit/license/","text":"MIT License Copyright 2023 Nathan Friedly, Vedant K Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"MIT License"},{"location":"system-desing/crud-app/JS/server/node_modules/express-rate-limit/license/#mit-license","text":"Copyright 2023 Nathan Friedly, Vedant K Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"MIT License"},{"location":"system-desing/crud-app/JS/server/node_modules/express-rate-limit/readme/","text":"express-rate-limit [![tests](https://img.shields.io/github/actions/workflow/status/express-rate-limit/express-rate-limit/ci.yaml)](https://github.com/express-rate-limit/express-rate-limit/actions/workflows/ci.yaml) [![npm version](https://img.shields.io/npm/v/express-rate-limit.svg)](https://npmjs.org/package/express-rate-limit 'View this project on NPM') [![npm downloads](https://img.shields.io/npm/dm/express-rate-limit)](https://www.npmjs.com/package/express-rate-limit) [![license](https://img.shields.io/npm/l/express-rate-limit)](license.md) Basic rate-limiting middleware for Express . Use to limit repeated requests to public APIs and/or endpoints such as password reset. Plays nice with express-slow-down and ratelimit-header-parser . Usage The full documentation is available on-line. import { rateLimit } from 'express-rate-limit' const limiter = rateLimit ({ windowMs : 15 * 60 * 1000 , // 15 minutes limit : 100 , // Limit each IP to 100 requests per `window` (here, per 15 minutes). standardHeaders : 'draft-8' , // draft-6: `RateLimit-*` headers; draft-7 & draft-8: combined `RateLimit` header legacyHeaders : false , // Disable the `X-RateLimit-*` headers. // store: ... , // Redis, Memcached, etc. See below. }) // Apply the rate limiting middleware to all requests. app . use ( limiter ) Data Stores The rate limiter comes with a built-in memory store, and supports a variety of external data stores . Configuration All function options may be async. Click the name for additional info and default values. Option Type Remarks [ windowMs ] number How long to remember requests for, in milliseconds. [ limit ] number | function How many requests to allow. [ message ] string | json | function Response to return after limit is reached. [ statusCode ] number HTTP status code after limit is reached (default is 429). [ handler ] function Function to run after limit is reached (overrides message and statusCode settings, if set). [ legacyHeaders ] boolean Enable the X-Rate-Limit header. [ standardHeaders ] 'draft-6' | 'draft-7' | 'draft-8' Enable the Ratelimit header. [ identifier ] string | function Name associated with the quota policy enforced by this rate limiter. [ store ] Store Use a custom store to share hit counts across multiple nodes. [ passOnStoreError ] boolean Allow ( true ) or block ( false , default) traffic if the store becomes unavailable. [ keyGenerator ] function Identify users (defaults to IP address). [ requestPropertyName ] string Add rate limit info to the req object. [ skip ] function Return true to bypass the limiter for the given request. [ skipSuccessfulRequests ] boolean Uncount 1xx/2xx/3xx responses. [ skipFailedRequests ] boolean Uncount 4xx/5xx responses. [ requestWasSuccessful ] function Used by skipSuccessfulRequests and skipFailedRequests . [ validate ] boolean | object Enable or disable built-in validation checks. Thank You Sponsored by Zuplo a fully-managed API Gateway for developers. Add dynamic rate-limiting , authentication and more to any API in minutes. Learn more at zuplo.com Thanks to Mintlify for hosting the documentation at express-rate-limit.mintlify.app Finally, thank you to everyone who's contributed to this project in any way! \ud83e\udef6 Issues and Contributing If you encounter a bug or want to see something added/changed, please go ahead and open an issue ! If you need help with something, feel free to start a discussion ! If you wish to contribute to the library, thanks! First, please read the contributing guide . Then you can pick up any issue and fix/implement it! License MIT \u00a9 Nathan Friedly , Vedant K","title":"Readme"},{"location":"system-desing/crud-app/JS/server/node_modules/express-rate-limit/readme/#usage","text":"The full documentation is available on-line. import { rateLimit } from 'express-rate-limit' const limiter = rateLimit ({ windowMs : 15 * 60 * 1000 , // 15 minutes limit : 100 , // Limit each IP to 100 requests per `window` (here, per 15 minutes). standardHeaders : 'draft-8' , // draft-6: `RateLimit-*` headers; draft-7 & draft-8: combined `RateLimit` header legacyHeaders : false , // Disable the `X-RateLimit-*` headers. // store: ... , // Redis, Memcached, etc. See below. }) // Apply the rate limiting middleware to all requests. app . use ( limiter )","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/express-rate-limit/readme/#data-stores","text":"The rate limiter comes with a built-in memory store, and supports a variety of external data stores .","title":"Data Stores"},{"location":"system-desing/crud-app/JS/server/node_modules/express-rate-limit/readme/#configuration","text":"All function options may be async. Click the name for additional info and default values. Option Type Remarks [ windowMs ] number How long to remember requests for, in milliseconds. [ limit ] number | function How many requests to allow. [ message ] string | json | function Response to return after limit is reached. [ statusCode ] number HTTP status code after limit is reached (default is 429). [ handler ] function Function to run after limit is reached (overrides message and statusCode settings, if set). [ legacyHeaders ] boolean Enable the X-Rate-Limit header. [ standardHeaders ] 'draft-6' | 'draft-7' | 'draft-8' Enable the Ratelimit header. [ identifier ] string | function Name associated with the quota policy enforced by this rate limiter. [ store ] Store Use a custom store to share hit counts across multiple nodes. [ passOnStoreError ] boolean Allow ( true ) or block ( false , default) traffic if the store becomes unavailable. [ keyGenerator ] function Identify users (defaults to IP address). [ requestPropertyName ] string Add rate limit info to the req object. [ skip ] function Return true to bypass the limiter for the given request. [ skipSuccessfulRequests ] boolean Uncount 1xx/2xx/3xx responses. [ skipFailedRequests ] boolean Uncount 4xx/5xx responses. [ requestWasSuccessful ] function Used by skipSuccessfulRequests and skipFailedRequests . [ validate ] boolean | object Enable or disable built-in validation checks.","title":"Configuration"},{"location":"system-desing/crud-app/JS/server/node_modules/express-rate-limit/readme/#thank-you","text":"Sponsored by Zuplo a fully-managed API Gateway for developers. Add dynamic rate-limiting , authentication and more to any API in minutes. Learn more at zuplo.com Thanks to Mintlify for hosting the documentation at express-rate-limit.mintlify.app Finally, thank you to everyone who's contributed to this project in any way! \ud83e\udef6","title":"Thank You"},{"location":"system-desing/crud-app/JS/server/node_modules/express-rate-limit/readme/#issues-and-contributing","text":"If you encounter a bug or want to see something added/changed, please go ahead and open an issue ! If you need help with something, feel free to start a discussion ! If you wish to contribute to the library, thanks! First, please read the contributing guide . Then you can pick up any issue and fix/implement it!","title":"Issues and Contributing"},{"location":"system-desing/crud-app/JS/server/node_modules/express-rate-limit/readme/#license","text":"MIT \u00a9 Nathan Friedly , Vedant K","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/fill-range/","text":"fill-range Fill in a range of numbers or letters, optionally passing an increment or step to use, or create a regex-compatible range with options.toRegex Please consider following this project's author, Jon Schlinkert , and consider starring the project to show your and support. Install Install with npm : $ npm install --save fill-range Usage Expands numbers and letters, optionally using a step as the last argument. (Numbers may be defined as JavaScript numbers or strings) . const fill = require ( 'fill-range' ); // fill(from, to[, step, options]); console . log ( fill ( '1' , '10' )); //=> ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'] console . log ( fill ( '1' , '10' , { toRegex : true })); //=> [1-9]|10 Params from : {String|Number} the number or letter to start with to : {String|Number} the number or letter to end with step : {String|Number|Object|Function} Optionally pass a step to use. options : {Object|Function} : See all available options Examples By default, an array of values is returned. Alphabetical ranges console . log ( fill ( 'a' , 'e' )); //=> ['a', 'b', 'c', 'd', 'e'] console . log ( fill ( 'A' , 'E' )); //=> [ 'A', 'B', 'C', 'D', 'E' ] Numerical ranges Numbers can be defined as actual numbers or strings. console . log ( fill ( 1 , 5 )); //=> [ 1, 2, 3, 4, 5 ] console . log ( fill ( '1' , '5' )); //=> [ 1, 2, 3, 4, 5 ] Negative ranges Numbers can be defined as actual numbers or strings. console . log ( fill ( '-5' , '-1' )); //=> [ '-5', '-4', '-3', '-2', '-1' ] console . log ( fill ( '-5' , '5' )); //=> [ '-5', '-4', '-3', '-2', '-1', '0', '1', '2', '3', '4', '5' ] Steps (increments) // numerical ranges with increments console . log ( fill ( '0' , '25' , 4 )); //=> [ '0', '4', '8', '12', '16', '20', '24' ] console . log ( fill ( '0' , '25' , 5 )); //=> [ '0', '5', '10', '15', '20', '25' ] console . log ( fill ( '0' , '25' , 6 )); //=> [ '0', '6', '12', '18', '24' ] // alphabetical ranges with increments console . log ( fill ( 'a' , 'z' , 4 )); //=> [ 'a', 'e', 'i', 'm', 'q', 'u', 'y' ] console . log ( fill ( 'a' , 'z' , 5 )); //=> [ 'a', 'f', 'k', 'p', 'u', 'z' ] console . log ( fill ( 'a' , 'z' , 6 )); //=> [ 'a', 'g', 'm', 's', 'y' ] Options options.step Type : number (formatted as a string or number) Default : undefined Description : The increment to use for the range. Can be used with letters or numbers. Example(s) // numbers console . log ( fill ( '1' , '10' , 2 )); //=> [ '1', '3', '5', '7', '9' ] console . log ( fill ( '1' , '10' , 3 )); //=> [ '1', '4', '7', '10' ] console . log ( fill ( '1' , '10' , 4 )); //=> [ '1', '5', '9' ] // letters console . log ( fill ( 'a' , 'z' , 5 )); //=> [ 'a', 'f', 'k', 'p', 'u', 'z' ] console . log ( fill ( 'a' , 'z' , 7 )); //=> [ 'a', 'h', 'o', 'v' ] console . log ( fill ( 'a' , 'z' , 9 )); //=> [ 'a', 'j', 's' ] options.strictRanges Type : boolean Default : false Description : By default, null is returned when an invalid range is passed. Enable this option to throw a RangeError on invalid ranges. Example(s) The following are all invalid: fill ( '1.1' , '2' ); // decimals not supported in ranges fill ( 'a' , '2' ); // incompatible range values fill ( 1 , 10 , 'foo' ); // invalid \"step\" argument options.stringify Type : boolean Default : undefined Description : Cast all returned values to strings. By default, integers are returned as numbers. Example(s) console . log ( fill ( 1 , 5 )); //=> [ 1, 2, 3, 4, 5 ] console . log ( fill ( 1 , 5 , { stringify : true })); //=> [ '1', '2', '3', '4', '5' ] options.toRegex Type : boolean Default : undefined Description : Create a regex-compatible source string, instead of expanding values to an array. Example(s) // alphabetical range console . log ( fill ( 'a' , 'e' , { toRegex : true })); //=> '[a-e]' // alphabetical with step console . log ( fill ( 'a' , 'z' , 3 , { toRegex : true })); //=> 'a|d|g|j|m|p|s|v|y' // numerical range console . log ( fill ( '1' , '100' , { toRegex : true })); //=> '[1-9]|[1-9][0-9]|100' // numerical range with zero padding console . log ( fill ( '000001' , '100000' , { toRegex : true })); //=> '0{5}[1-9]|0{4}[1-9][0-9]|0{3}[1-9][0-9]{2}|0{2}[1-9][0-9]{3}|0[1-9][0-9]{4}|100000' options.transform Type : function Default : undefined Description : Customize each value in the returned array (or string ). (you can also pass this function as the last argument to fill() ) . Example(s) // add zero padding console . log ( fill ( 1 , 5 , value => String ( value ). padStart ( 4 , '0' ))); //=> ['0001', '0002', '0003', '0004', '0005'] About Contributing Pull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new). Running Tests Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command: $ npm install && npm test Building docs _(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_ To generate the readme, run the following command: $ npm install -g verbose/verb#dev verb-generate-readme && verb Contributors Commits Contributor 116 jonschlinkert 4 paulmillr 2 realityking 2 bluelovers 1 edorivai 1 wtgtybhertgeghgtwtg Author Jon Schlinkert GitHub Profile Twitter Profile LinkedIn Profile Please consider supporting me on Patreon, or start your own Patreon page ! License Copyright \u00a9 2019, Jon Schlinkert . Released under the MIT License . This file was generated by verb-generate-readme , v0.8.0, on April 08, 2019.","title":"fill-range Donate NPM version NPM monthly downloads NPM total downloads Linux Build Status"},{"location":"system-desing/crud-app/JS/server/node_modules/fill-range/#fill-range","text":"Fill in a range of numbers or letters, optionally passing an increment or step to use, or create a regex-compatible range with options.toRegex Please consider following this project's author, Jon Schlinkert , and consider starring the project to show your and support.","title":"fill-range"},{"location":"system-desing/crud-app/JS/server/node_modules/fill-range/#install","text":"Install with npm : $ npm install --save fill-range","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/fill-range/#usage","text":"Expands numbers and letters, optionally using a step as the last argument. (Numbers may be defined as JavaScript numbers or strings) . const fill = require ( 'fill-range' ); // fill(from, to[, step, options]); console . log ( fill ( '1' , '10' )); //=> ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'] console . log ( fill ( '1' , '10' , { toRegex : true })); //=> [1-9]|10 Params from : {String|Number} the number or letter to start with to : {String|Number} the number or letter to end with step : {String|Number|Object|Function} Optionally pass a step to use. options : {Object|Function} : See all available options","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/fill-range/#examples","text":"By default, an array of values is returned. Alphabetical ranges console . log ( fill ( 'a' , 'e' )); //=> ['a', 'b', 'c', 'd', 'e'] console . log ( fill ( 'A' , 'E' )); //=> [ 'A', 'B', 'C', 'D', 'E' ] Numerical ranges Numbers can be defined as actual numbers or strings. console . log ( fill ( 1 , 5 )); //=> [ 1, 2, 3, 4, 5 ] console . log ( fill ( '1' , '5' )); //=> [ 1, 2, 3, 4, 5 ] Negative ranges Numbers can be defined as actual numbers or strings. console . log ( fill ( '-5' , '-1' )); //=> [ '-5', '-4', '-3', '-2', '-1' ] console . log ( fill ( '-5' , '5' )); //=> [ '-5', '-4', '-3', '-2', '-1', '0', '1', '2', '3', '4', '5' ] Steps (increments) // numerical ranges with increments console . log ( fill ( '0' , '25' , 4 )); //=> [ '0', '4', '8', '12', '16', '20', '24' ] console . log ( fill ( '0' , '25' , 5 )); //=> [ '0', '5', '10', '15', '20', '25' ] console . log ( fill ( '0' , '25' , 6 )); //=> [ '0', '6', '12', '18', '24' ] // alphabetical ranges with increments console . log ( fill ( 'a' , 'z' , 4 )); //=> [ 'a', 'e', 'i', 'm', 'q', 'u', 'y' ] console . log ( fill ( 'a' , 'z' , 5 )); //=> [ 'a', 'f', 'k', 'p', 'u', 'z' ] console . log ( fill ( 'a' , 'z' , 6 )); //=> [ 'a', 'g', 'm', 's', 'y' ]","title":"Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/fill-range/#options","text":"","title":"Options"},{"location":"system-desing/crud-app/JS/server/node_modules/fill-range/#optionsstep","text":"Type : number (formatted as a string or number) Default : undefined Description : The increment to use for the range. Can be used with letters or numbers. Example(s) // numbers console . log ( fill ( '1' , '10' , 2 )); //=> [ '1', '3', '5', '7', '9' ] console . log ( fill ( '1' , '10' , 3 )); //=> [ '1', '4', '7', '10' ] console . log ( fill ( '1' , '10' , 4 )); //=> [ '1', '5', '9' ] // letters console . log ( fill ( 'a' , 'z' , 5 )); //=> [ 'a', 'f', 'k', 'p', 'u', 'z' ] console . log ( fill ( 'a' , 'z' , 7 )); //=> [ 'a', 'h', 'o', 'v' ] console . log ( fill ( 'a' , 'z' , 9 )); //=> [ 'a', 'j', 's' ]","title":"options.step"},{"location":"system-desing/crud-app/JS/server/node_modules/fill-range/#optionsstrictranges","text":"Type : boolean Default : false Description : By default, null is returned when an invalid range is passed. Enable this option to throw a RangeError on invalid ranges. Example(s) The following are all invalid: fill ( '1.1' , '2' ); // decimals not supported in ranges fill ( 'a' , '2' ); // incompatible range values fill ( 1 , 10 , 'foo' ); // invalid \"step\" argument","title":"options.strictRanges"},{"location":"system-desing/crud-app/JS/server/node_modules/fill-range/#optionsstringify","text":"Type : boolean Default : undefined Description : Cast all returned values to strings. By default, integers are returned as numbers. Example(s) console . log ( fill ( 1 , 5 )); //=> [ 1, 2, 3, 4, 5 ] console . log ( fill ( 1 , 5 , { stringify : true })); //=> [ '1', '2', '3', '4', '5' ]","title":"options.stringify"},{"location":"system-desing/crud-app/JS/server/node_modules/fill-range/#optionstoregex","text":"Type : boolean Default : undefined Description : Create a regex-compatible source string, instead of expanding values to an array. Example(s) // alphabetical range console . log ( fill ( 'a' , 'e' , { toRegex : true })); //=> '[a-e]' // alphabetical with step console . log ( fill ( 'a' , 'z' , 3 , { toRegex : true })); //=> 'a|d|g|j|m|p|s|v|y' // numerical range console . log ( fill ( '1' , '100' , { toRegex : true })); //=> '[1-9]|[1-9][0-9]|100' // numerical range with zero padding console . log ( fill ( '000001' , '100000' , { toRegex : true })); //=> '0{5}[1-9]|0{4}[1-9][0-9]|0{3}[1-9][0-9]{2}|0{2}[1-9][0-9]{3}|0[1-9][0-9]{4}|100000'","title":"options.toRegex"},{"location":"system-desing/crud-app/JS/server/node_modules/fill-range/#optionstransform","text":"Type : function Default : undefined Description : Customize each value in the returned array (or string ). (you can also pass this function as the last argument to fill() ) . Example(s) // add zero padding console . log ( fill ( 1 , 5 , value => String ( value ). padStart ( 4 , '0' ))); //=> ['0001', '0002', '0003', '0004', '0005']","title":"options.transform"},{"location":"system-desing/crud-app/JS/server/node_modules/fill-range/#about","text":"Contributing Pull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new). Running Tests Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command: $ npm install && npm test Building docs _(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_ To generate the readme, run the following command: $ npm install -g verbose/verb#dev verb-generate-readme && verb","title":"About"},{"location":"system-desing/crud-app/JS/server/node_modules/fill-range/#contributors","text":"Commits Contributor 116 jonschlinkert 4 paulmillr 2 realityking 2 bluelovers 1 edorivai 1 wtgtybhertgeghgtwtg","title":"Contributors"},{"location":"system-desing/crud-app/JS/server/node_modules/fill-range/#author","text":"Jon Schlinkert GitHub Profile Twitter Profile LinkedIn Profile Please consider supporting me on Patreon, or start your own Patreon page !","title":"Author"},{"location":"system-desing/crud-app/JS/server/node_modules/fill-range/#license","text":"Copyright \u00a9 2019, Jon Schlinkert . Released under the MIT License . This file was generated by verb-generate-readme , v0.8.0, on April 08, 2019.","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/","text":"finalhandler Node.js function to invoke as the final step to respond to HTTP request. Installation This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install finalhandler API var finalhandler = require ( 'finalhandler' ) finalhandler(req, res, [options]) Returns function to be invoked as the final step for the given req and res . This function is to be invoked as fn(err) . If err is falsy, the handler will write out a 404 response to the res . If it is truthy, an error response will be written out to the res or res will be terminated if a response has already started. When an error is written, the following information is added to the response: The res.statusCode is set from err.status (or err.statusCode ). If this value is outside the 4xx or 5xx range, it will be set to 500. The res.statusMessage is set according to the status code. The body will be the HTML of the status code message if env is 'production' , otherwise will be err.stack . Any headers specified in an err.headers object. The final handler will also unpipe anything from req when it is invoked. options.env By default, the environment is determined by NODE_ENV variable, but it can be overridden by this option. options.onerror Provide a function to be called with the err when it exists. Can be used for writing errors to a central location without excessive function generation. Called as onerror(err, req, res) . Examples always 404 var finalhandler = require ( 'finalhandler' ) var http = require ( 'http' ) var server = http . createServer ( function ( req , res ) { var done = finalhandler ( req , res ) done () }) server . listen ( 3000 ) perform simple action var finalhandler = require ( 'finalhandler' ) var fs = require ( 'fs' ) var http = require ( 'http' ) var server = http . createServer ( function ( req , res ) { var done = finalhandler ( req , res ) fs . readFile ( 'index.html' , function ( err , buf ) { if ( err ) return done ( err ) res . setHeader ( 'Content-Type' , 'text/html' ) res . end ( buf ) }) }) server . listen ( 3000 ) use with middleware-style functions var finalhandler = require ( 'finalhandler' ) var http = require ( 'http' ) var serveStatic = require ( 'serve-static' ) var serve = serveStatic ( 'public' ) var server = http . createServer ( function ( req , res ) { var done = finalhandler ( req , res ) serve ( req , res , done ) }) server . listen ( 3000 ) keep log of all errors var finalhandler = require ( 'finalhandler' ) var fs = require ( 'fs' ) var http = require ( 'http' ) var server = http . createServer ( function ( req , res ) { var done = finalhandler ( req , res , { onerror : logerror }) fs . readFile ( 'index.html' , function ( err , buf ) { if ( err ) return done ( err ) res . setHeader ( 'Content-Type' , 'text/html' ) res . end ( buf ) }) }) server . listen ( 3000 ) function logerror ( err ) { console . error ( err . stack || err . toString ()) } License MIT","title":"finalhandler"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/#finalhandler","text":"Node.js function to invoke as the final step to respond to HTTP request.","title":"finalhandler"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/#installation","text":"This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install finalhandler","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/#api","text":"var finalhandler = require ( 'finalhandler' )","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/#finalhandlerreq-res-options","text":"Returns function to be invoked as the final step for the given req and res . This function is to be invoked as fn(err) . If err is falsy, the handler will write out a 404 response to the res . If it is truthy, an error response will be written out to the res or res will be terminated if a response has already started. When an error is written, the following information is added to the response: The res.statusCode is set from err.status (or err.statusCode ). If this value is outside the 4xx or 5xx range, it will be set to 500. The res.statusMessage is set according to the status code. The body will be the HTML of the status code message if env is 'production' , otherwise will be err.stack . Any headers specified in an err.headers object. The final handler will also unpipe anything from req when it is invoked.","title":"finalhandler(req, res, [options])"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/#optionsenv","text":"By default, the environment is determined by NODE_ENV variable, but it can be overridden by this option.","title":"options.env"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/#optionsonerror","text":"Provide a function to be called with the err when it exists. Can be used for writing errors to a central location without excessive function generation. Called as onerror(err, req, res) .","title":"options.onerror"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/#examples","text":"","title":"Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/#always-404","text":"var finalhandler = require ( 'finalhandler' ) var http = require ( 'http' ) var server = http . createServer ( function ( req , res ) { var done = finalhandler ( req , res ) done () }) server . listen ( 3000 )","title":"always 404"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/#perform-simple-action","text":"var finalhandler = require ( 'finalhandler' ) var fs = require ( 'fs' ) var http = require ( 'http' ) var server = http . createServer ( function ( req , res ) { var done = finalhandler ( req , res ) fs . readFile ( 'index.html' , function ( err , buf ) { if ( err ) return done ( err ) res . setHeader ( 'Content-Type' , 'text/html' ) res . end ( buf ) }) }) server . listen ( 3000 )","title":"perform simple action"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/#use-with-middleware-style-functions","text":"var finalhandler = require ( 'finalhandler' ) var http = require ( 'http' ) var serveStatic = require ( 'serve-static' ) var serve = serveStatic ( 'public' ) var server = http . createServer ( function ( req , res ) { var done = finalhandler ( req , res ) serve ( req , res , done ) }) server . listen ( 3000 )","title":"use with middleware-style functions"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/#keep-log-of-all-errors","text":"var finalhandler = require ( 'finalhandler' ) var fs = require ( 'fs' ) var http = require ( 'http' ) var server = http . createServer ( function ( req , res ) { var done = finalhandler ( req , res , { onerror : logerror }) fs . readFile ( 'index.html' , function ( err , buf ) { if ( err ) return done ( err ) res . setHeader ( 'Content-Type' , 'text/html' ) res . end ( buf ) }) }) server . listen ( 3000 ) function logerror ( err ) { console . error ( err . stack || err . toString ()) }","title":"keep log of all errors"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/","text":"v2.1.0 / 2025-03-05 deps: use caret notation for dependency versions encodeurl@^2.0.0 debug@^4.4.0 remove ServerResponse.headersSent support check remove setImmediate support check update test dependencies remove unnecessary devDependency safe-buffer remove unpipe package and use native unpipe() method remove unnecessary devDependency readable-stream refactor: use object spread to copy error headers refactor: use replaceAll instead of replace with a regex refactor: replace setHeaders function with optimized inline header setting v2.0.0 / 2024-09-02 drop support for node <18 ignore status message for HTTP/2 (#53) v1.3.1 / 2024-09-11 deps: encodeurl@~2.0.0 v1.3.0 / 2024-09-03 ignore status message for HTTP/2 (#53) v1.2.1 / 2024-09-02 Gracefully handle when handling an error and socket is null 1.2.0 / 2022-03-22 Remove set content headers that break response deps: on-finished@2.4.1 deps: statuses@2.0.1 Rename 425 Unordered Collection to standard 425 Too Early 1.1.2 / 2019-05-09 Set stricter Content-Security-Policy header deps: parseurl@~1.3.3 deps: statuses@~1.5.0 1.1.1 / 2018-03-06 Fix 404 output for bad / missing pathnames deps: encodeurl@~1.0.2 Fix encoding % as last character deps: statuses@~1.4.0 1.1.0 / 2017-09-24 Use res.headersSent when available 1.0.6 / 2017-09-22 deps: debug@2.6.9 1.0.5 / 2017-09-15 deps: parseurl@~1.3.2 perf: reduce overhead for full URLs perf: unroll the \"fast-path\" RegExp 1.0.4 / 2017-08-03 deps: debug@2.6.8 1.0.3 / 2017-05-16 deps: debug@2.6.7 deps: ms@2.0.0 1.0.2 / 2017-04-22 deps: debug@2.6.4 deps: ms@0.7.3 1.0.1 / 2017-03-21 Fix missing </html> in HTML document deps: debug@2.6.3 Fix: DEBUG_MAX_ARRAY_LENGTH 1.0.0 / 2017-02-15 Fix exception when err cannot be converted to a string Fully URL-encode the pathname in the 404 message Only include the pathname in the 404 message Send complete HTML document Set Content-Security-Policy: default-src 'self' header deps: debug@2.6.1 Allow colors in workers Deprecated DEBUG_FD environment variable set to 3 or higher Fix error when running under React Native Use same color for same namespace deps: ms@0.7.2 0.5.1 / 2016-11-12 Fix exception when err.headers is not an object deps: statuses@~1.3.1 perf: hoist regular expressions perf: remove duplicate validation path 0.5.0 / 2016-06-15 Change invalid or non-numeric status code to 500 Overwrite status message to match set status code Prefer err.statusCode if err.status is invalid Set response headers from err.headers object Use statuses instead of http module for status messages Includes all defined status messages 0.4.1 / 2015-12-02 deps: escape-html@~1.0.3 perf: enable strict mode perf: optimize string replacement perf: use faster string coercion 0.4.0 / 2015-06-14 Fix a false-positive when unpiping in Node.js 0.8 Support statusCode property on Error objects Use unpipe module for unpiping requests deps: escape-html@1.0.2 deps: on-finished@~2.3.0 Add defined behavior for HTTP CONNECT requests Add defined behavior for HTTP Upgrade requests deps: ee-first@1.1.1 perf: enable strict mode perf: remove argument reassignment 0.3.6 / 2015-05-11 deps: debug@~2.2.0 deps: ms@0.7.1 0.3.5 / 2015-04-22 deps: on-finished@~2.2.1 Fix isFinished(req) when data buffered 0.3.4 / 2015-03-15 deps: debug@~2.1.3 Fix high intensity foreground color for bold deps: ms@0.7.0 0.3.3 / 2015-01-01 deps: debug@~2.1.1 deps: on-finished@~2.2.0 0.3.2 / 2014-10-22 deps: on-finished@~2.1.1 Fix handling of pipelined requests 0.3.1 / 2014-10-16 deps: debug@~2.1.0 Implement DEBUG_FD env variable support 0.3.0 / 2014-09-17 Terminate in progress response only on error Use on-finished to determine request status 0.2.0 / 2014-09-03 Set X-Content-Type-Options: nosniff header deps: debug@~2.0.0 0.1.0 / 2014-07-16 Respond after request fully read prevents hung responses and socket hang ups deps: debug@1.0.4 0.0.3 / 2014-07-11 deps: debug@1.0.3 Add support for multiple wildcards in namespaces 0.0.2 / 2014-06-19 Handle invalid status codes 0.0.1 / 2014-06-05 deps: debug@1.0.2 0.0.0 / 2014-06-05 Extracted from connect/express","title":"v2.1.0 / 2025-03-05"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#v210-2025-03-05","text":"deps: use caret notation for dependency versions encodeurl@^2.0.0 debug@^4.4.0 remove ServerResponse.headersSent support check remove setImmediate support check update test dependencies remove unnecessary devDependency safe-buffer remove unpipe package and use native unpipe() method remove unnecessary devDependency readable-stream refactor: use object spread to copy error headers refactor: use replaceAll instead of replace with a regex refactor: replace setHeaders function with optimized inline header setting","title":"v2.1.0 / 2025-03-05"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#v200-2024-09-02","text":"drop support for node <18 ignore status message for HTTP/2 (#53)","title":"v2.0.0 / 2024-09-02"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#v131-2024-09-11","text":"deps: encodeurl@~2.0.0","title":"v1.3.1 / 2024-09-11"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#v130-2024-09-03","text":"ignore status message for HTTP/2 (#53)","title":"v1.3.0 / 2024-09-03"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#v121-2024-09-02","text":"Gracefully handle when handling an error and socket is null","title":"v1.2.1 / 2024-09-02"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#120-2022-03-22","text":"Remove set content headers that break response deps: on-finished@2.4.1 deps: statuses@2.0.1 Rename 425 Unordered Collection to standard 425 Too Early","title":"1.2.0 / 2022-03-22"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#112-2019-05-09","text":"Set stricter Content-Security-Policy header deps: parseurl@~1.3.3 deps: statuses@~1.5.0","title":"1.1.2 / 2019-05-09"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#111-2018-03-06","text":"Fix 404 output for bad / missing pathnames deps: encodeurl@~1.0.2 Fix encoding % as last character deps: statuses@~1.4.0","title":"1.1.1 / 2018-03-06"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#110-2017-09-24","text":"Use res.headersSent when available","title":"1.1.0 / 2017-09-24"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#106-2017-09-22","text":"deps: debug@2.6.9","title":"1.0.6 / 2017-09-22"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#105-2017-09-15","text":"deps: parseurl@~1.3.2 perf: reduce overhead for full URLs perf: unroll the \"fast-path\" RegExp","title":"1.0.5 / 2017-09-15"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#104-2017-08-03","text":"deps: debug@2.6.8","title":"1.0.4 / 2017-08-03"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#103-2017-05-16","text":"deps: debug@2.6.7 deps: ms@2.0.0","title":"1.0.3 / 2017-05-16"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#102-2017-04-22","text":"deps: debug@2.6.4 deps: ms@0.7.3","title":"1.0.2 / 2017-04-22"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#101-2017-03-21","text":"Fix missing </html> in HTML document deps: debug@2.6.3 Fix: DEBUG_MAX_ARRAY_LENGTH","title":"1.0.1 / 2017-03-21"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#100-2017-02-15","text":"Fix exception when err cannot be converted to a string Fully URL-encode the pathname in the 404 message Only include the pathname in the 404 message Send complete HTML document Set Content-Security-Policy: default-src 'self' header deps: debug@2.6.1 Allow colors in workers Deprecated DEBUG_FD environment variable set to 3 or higher Fix error when running under React Native Use same color for same namespace deps: ms@0.7.2","title":"1.0.0 / 2017-02-15"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#051-2016-11-12","text":"Fix exception when err.headers is not an object deps: statuses@~1.3.1 perf: hoist regular expressions perf: remove duplicate validation path","title":"0.5.1 / 2016-11-12"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#050-2016-06-15","text":"Change invalid or non-numeric status code to 500 Overwrite status message to match set status code Prefer err.statusCode if err.status is invalid Set response headers from err.headers object Use statuses instead of http module for status messages Includes all defined status messages","title":"0.5.0 / 2016-06-15"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#041-2015-12-02","text":"deps: escape-html@~1.0.3 perf: enable strict mode perf: optimize string replacement perf: use faster string coercion","title":"0.4.1 / 2015-12-02"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#040-2015-06-14","text":"Fix a false-positive when unpiping in Node.js 0.8 Support statusCode property on Error objects Use unpipe module for unpiping requests deps: escape-html@1.0.2 deps: on-finished@~2.3.0 Add defined behavior for HTTP CONNECT requests Add defined behavior for HTTP Upgrade requests deps: ee-first@1.1.1 perf: enable strict mode perf: remove argument reassignment","title":"0.4.0 / 2015-06-14"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#036-2015-05-11","text":"deps: debug@~2.2.0 deps: ms@0.7.1","title":"0.3.6 / 2015-05-11"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#035-2015-04-22","text":"deps: on-finished@~2.2.1 Fix isFinished(req) when data buffered","title":"0.3.5 / 2015-04-22"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#034-2015-03-15","text":"deps: debug@~2.1.3 Fix high intensity foreground color for bold deps: ms@0.7.0","title":"0.3.4 / 2015-03-15"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#033-2015-01-01","text":"deps: debug@~2.1.1 deps: on-finished@~2.2.0","title":"0.3.3 / 2015-01-01"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#032-2014-10-22","text":"deps: on-finished@~2.1.1 Fix handling of pipelined requests","title":"0.3.2 / 2014-10-22"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#031-2014-10-16","text":"deps: debug@~2.1.0 Implement DEBUG_FD env variable support","title":"0.3.1 / 2014-10-16"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#030-2014-09-17","text":"Terminate in progress response only on error Use on-finished to determine request status","title":"0.3.0 / 2014-09-17"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#020-2014-09-03","text":"Set X-Content-Type-Options: nosniff header deps: debug@~2.0.0","title":"0.2.0 / 2014-09-03"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#010-2014-07-16","text":"Respond after request fully read prevents hung responses and socket hang ups deps: debug@1.0.4","title":"0.1.0 / 2014-07-16"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#003-2014-07-11","text":"deps: debug@1.0.3 Add support for multiple wildcards in namespaces","title":"0.0.3 / 2014-07-11"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#002-2014-06-19","text":"Handle invalid status codes","title":"0.0.2 / 2014-06-19"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#001-2014-06-05","text":"deps: debug@1.0.2","title":"0.0.1 / 2014-06-05"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#000-2014-06-05","text":"Extracted from connect/express","title":"0.0.0 / 2014-06-05"},{"location":"system-desing/crud-app/JS/server/node_modules/forwarded/","text":"forwarded Parse HTTP X-Forwarded-For header Installation This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install forwarded API var forwarded = require ( 'forwarded' ) forwarded(req) var addresses = forwarded ( req ) Parse the X-Forwarded-For header from the request. Returns an array of the addresses, including the socket address for the req , in reverse order (i.e. index 0 is the socket address and the last index is the furthest address, typically the end-user). Testing $ npm test License MIT","title":"forwarded"},{"location":"system-desing/crud-app/JS/server/node_modules/forwarded/#forwarded","text":"Parse HTTP X-Forwarded-For header","title":"forwarded"},{"location":"system-desing/crud-app/JS/server/node_modules/forwarded/#installation","text":"This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install forwarded","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/forwarded/#api","text":"var forwarded = require ( 'forwarded' )","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/forwarded/#forwardedreq","text":"var addresses = forwarded ( req ) Parse the X-Forwarded-For header from the request. Returns an array of the addresses, including the socket address for the req , in reverse order (i.e. index 0 is the socket address and the last index is the furthest address, typically the end-user).","title":"forwarded(req)"},{"location":"system-desing/crud-app/JS/server/node_modules/forwarded/#testing","text":"$ npm test","title":"Testing"},{"location":"system-desing/crud-app/JS/server/node_modules/forwarded/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/forwarded/HISTORY/","text":"0.2.0 / 2021-05-31 Use req.socket over deprecated req.connection 0.1.2 / 2017-09-14 perf: improve header parsing perf: reduce overhead when no X-Forwarded-For header 0.1.1 / 2017-09-10 Fix trimming leading / trailing OWS perf: hoist regular expression 0.1.0 / 2014-09-21 Initial release","title":"0.2.0 / 2021-05-31"},{"location":"system-desing/crud-app/JS/server/node_modules/forwarded/HISTORY/#020-2021-05-31","text":"Use req.socket over deprecated req.connection","title":"0.2.0 / 2021-05-31"},{"location":"system-desing/crud-app/JS/server/node_modules/forwarded/HISTORY/#012-2017-09-14","text":"perf: improve header parsing perf: reduce overhead when no X-Forwarded-For header","title":"0.1.2 / 2017-09-14"},{"location":"system-desing/crud-app/JS/server/node_modules/forwarded/HISTORY/#011-2017-09-10","text":"Fix trimming leading / trailing OWS perf: hoist regular expression","title":"0.1.1 / 2017-09-10"},{"location":"system-desing/crud-app/JS/server/node_modules/forwarded/HISTORY/#010-2014-09-21","text":"Initial release","title":"0.1.0 / 2014-09-21"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/","text":"fresh HTTP response freshness testing Installation This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install fresh API var fresh = require ( 'fresh' ) fresh(reqHeaders, resHeaders) Check freshness of the response using request and response headers. When the response is still \"fresh\" in the client's cache true is returned, otherwise false is returned to indicate that the client cache is now stale and the full response should be sent. When a client sends the Cache-Control: no-cache request header to indicate an end-to-end reload request, this module will return false to make handling these requests transparent. Known Issues This module is designed to only follow the HTTP specifications, not to work-around all kinda of client bugs (especially since this module typically does not receive enough information to understand what the client actually is). There is a known issue that in certain versions of Safari, Safari will incorrectly make a request that allows this module to validate freshness of the resource even when Safari does not have a representation of the resource in the cache. The module jumanji can be used in an Express application to work-around this issue and also provides links to further reading on this Safari bug. Example API usage var reqHeaders = { 'if-none-match' : '\"foo\"' } var resHeaders = { etag : '\"bar\"' } fresh ( reqHeaders , resHeaders ) // => false var reqHeaders = { 'if-none-match' : '\"foo\"' } var resHeaders = { etag : '\"foo\"' } fresh ( reqHeaders , resHeaders ) // => true Using with Node.js http server var fresh = require ( 'fresh' ) var http = require ( 'http' ) var server = http . createServer ( function ( req , res ) { // perform server logic // ... including adding ETag / Last-Modified response headers if ( isFresh ( req , res )) { // client has a fresh copy of resource res . statusCode = 304 res . end () return } // send the resource res . statusCode = 200 res . end ( 'hello, world!' ) }) function isFresh ( req , res ) { return fresh ( req . headers , { etag : res . getHeader ( 'ETag' ), 'last-modified' : res . getHeader ( 'Last-Modified' ) }) } server . listen ( 3000 ) License MIT","title":"fresh"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/#fresh","text":"HTTP response freshness testing","title":"fresh"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/#installation","text":"This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install fresh","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/#api","text":"var fresh = require ( 'fresh' )","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/#freshreqheaders-resheaders","text":"Check freshness of the response using request and response headers. When the response is still \"fresh\" in the client's cache true is returned, otherwise false is returned to indicate that the client cache is now stale and the full response should be sent. When a client sends the Cache-Control: no-cache request header to indicate an end-to-end reload request, this module will return false to make handling these requests transparent.","title":"fresh(reqHeaders, resHeaders)"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/#known-issues","text":"This module is designed to only follow the HTTP specifications, not to work-around all kinda of client bugs (especially since this module typically does not receive enough information to understand what the client actually is). There is a known issue that in certain versions of Safari, Safari will incorrectly make a request that allows this module to validate freshness of the resource even when Safari does not have a representation of the resource in the cache. The module jumanji can be used in an Express application to work-around this issue and also provides links to further reading on this Safari bug.","title":"Known Issues"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/#example","text":"","title":"Example"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/#api-usage","text":"var reqHeaders = { 'if-none-match' : '\"foo\"' } var resHeaders = { etag : '\"bar\"' } fresh ( reqHeaders , resHeaders ) // => false var reqHeaders = { 'if-none-match' : '\"foo\"' } var resHeaders = { etag : '\"foo\"' } fresh ( reqHeaders , resHeaders ) // => true","title":"API usage"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/#using-with-nodejs-http-server","text":"var fresh = require ( 'fresh' ) var http = require ( 'http' ) var server = http . createServer ( function ( req , res ) { // perform server logic // ... including adding ETag / Last-Modified response headers if ( isFresh ( req , res )) { // client has a fresh copy of resource res . statusCode = 304 res . end () return } // send the resource res . statusCode = 200 res . end ( 'hello, world!' ) }) function isFresh ( req , res ) { return fresh ( req . headers , { etag : res . getHeader ( 'ETag' ), 'last-modified' : res . getHeader ( 'Last-Modified' ) }) } server . listen ( 3000 )","title":"Using with Node.js http server"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/HISTORY/","text":"2.0.0 - 2024-09-04 Drop support for Node.js <18 1.0.0 - 2024-09-04 Drop support for Node.js below 0.8 Fix: Ignore If-Modified-Since in the presence of If-None-Match , according to spec . Fixes #35 0.5.2 / 2017-09-13 Fix regression matching multiple ETags in If-None-Match perf: improve If-None-Match token parsing 0.5.1 / 2017-09-11 Fix handling of modified headers with invalid dates perf: improve ETag match loop 0.5.0 / 2017-02-21 Fix incorrect result when If-None-Match has both * and ETags Fix weak ETag matching to match spec perf: delay reading header values until needed perf: skip checking modified time if ETag check failed perf: skip parsing If-None-Match when no ETag header perf: use Date.parse instead of new Date 0.4.0 / 2017-02-05 Fix false detection of no-cache request directive perf: enable strict mode perf: hoist regular expressions perf: remove duplicate conditional perf: remove unnecessary boolean coercions 0.3.0 / 2015-05-12 Add weak ETag matching support 0.2.4 / 2014-09-07 Support Node.js 0.6 0.2.3 / 2014-09-07 Move repository to jshttp 0.2.2 / 2014-02-19 Revert \"Fix for blank page on Safari reload\" 0.2.1 / 2014-01-29 Fix for blank page on Safari reload 0.2.0 / 2013-08-11 Return stale for Cache-Control: no-cache 0.1.0 / 2012-06-15 Add If-None-Match: * support 0.0.1 / 2012-06-10 Initial release","title":"2.0.0 - 2024-09-04"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/HISTORY/#200-2024-09-04","text":"Drop support for Node.js <18","title":"2.0.0 - 2024-09-04"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/HISTORY/#100-2024-09-04","text":"Drop support for Node.js below 0.8 Fix: Ignore If-Modified-Since in the presence of If-None-Match , according to spec . Fixes #35","title":"1.0.0 - 2024-09-04"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/HISTORY/#052-2017-09-13","text":"Fix regression matching multiple ETags in If-None-Match perf: improve If-None-Match token parsing","title":"0.5.2 / 2017-09-13"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/HISTORY/#051-2017-09-11","text":"Fix handling of modified headers with invalid dates perf: improve ETag match loop","title":"0.5.1 / 2017-09-11"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/HISTORY/#050-2017-02-21","text":"Fix incorrect result when If-None-Match has both * and ETags Fix weak ETag matching to match spec perf: delay reading header values until needed perf: skip checking modified time if ETag check failed perf: skip parsing If-None-Match when no ETag header perf: use Date.parse instead of new Date","title":"0.5.0 / 2017-02-21"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/HISTORY/#040-2017-02-05","text":"Fix false detection of no-cache request directive perf: enable strict mode perf: hoist regular expressions perf: remove duplicate conditional perf: remove unnecessary boolean coercions","title":"0.4.0 / 2017-02-05"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/HISTORY/#030-2015-05-12","text":"Add weak ETag matching support","title":"0.3.0 / 2015-05-12"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/HISTORY/#024-2014-09-07","text":"Support Node.js 0.6","title":"0.2.4 / 2014-09-07"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/HISTORY/#023-2014-09-07","text":"Move repository to jshttp","title":"0.2.3 / 2014-09-07"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/HISTORY/#022-2014-02-19","text":"Revert \"Fix for blank page on Safari reload\"","title":"0.2.2 / 2014-02-19"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/HISTORY/#021-2014-01-29","text":"Fix for blank page on Safari reload","title":"0.2.1 / 2014-01-29"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/HISTORY/#020-2013-08-11","text":"Return stale for Cache-Control: no-cache","title":"0.2.0 / 2013-08-11"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/HISTORY/#010-2012-06-15","text":"Add If-None-Match: * support","title":"0.1.0 / 2012-06-15"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/HISTORY/#001-2012-06-10","text":"Initial release","title":"0.0.1 / 2012-06-10"},{"location":"system-desing/crud-app/JS/server/node_modules/fsevents/","text":"fsevents Native access to MacOS FSEvents in Node.js The FSEvents API in MacOS allows applications to register for notifications of changes to a given directory tree. It is a very fast and lightweight alternative to kqueue. This is a low-level library. For a cross-platform file watching module that uses fsevents, check out Chokidar . Usage npm install fsevents Supports only Node.js v8.16 and higher . const fsevents = require ( 'fsevents' ); // To start observation const stop = fsevents . watch ( __dirname , ( path , flags , id ) => { const info = fsevents . getInfo ( path , flags ); }); // To end observation stop (); Important note: The API behaviour is slightly different from typical JS APIs. The stop function must be retrieved and stored somewhere, even if you don't plan to stop the watcher. If you forget it, the garbage collector will eventually kick in, the watcher will be unregistered, and your callbacks won't be called anymore. The callback passed as the second parameter to .watch get's called whenever the operating system detects a a change in the file system. It takes three arguments: fsevents.watch(dirname: string, (path: string, flags: number, id: string) => void): () => Promise<undefined> path: string - the item in the filesystem that have been changed flags: number - a numeric value describing what the change was id: string - an unique-id identifying this specific event Returns closer callback which when called returns a Promise resolving when the watcher process has been shut down. fsevents.getInfo(path: string, flags: number, id: string): FsEventInfo The getInfo function takes the path , flags and id arguments and converts those parameters into a structure that is easier to digest to determine what the change was. The FsEventsInfo has the following shape: /** * @typedef {'created'|'modified'|'deleted'|'moved'|'root-changed'|'cloned'|'unknown'} FsEventsEvent * @typedef {'file'|'directory'|'symlink'} FsEventsType */ { \"event\" : \"created\" , // {FsEventsEvent} \"path\" : \"file.txt\" , \"type\" : \"file\" , // {FsEventsType} \"changes\" : { \"inode\" : true , // Had iNode Meta-Information changed \"finder\" : false , // Had Finder Meta-Data changed \"access\" : false , // Had access permissions changed \"xattrs\" : false // Had xAttributes changed }, \"flags\" : 0x100000000 } Changelog v2.3 supports Apple Silicon ARM CPUs v2 supports node 8.16+ and reduces package size massively v1.2.8 supports node 6+ v1.2.7 supports node 4+ Troubleshooting I'm getting EBADPLATFORM Unsupported platform for fsevents error. It's fine, nothing is broken. fsevents is macos-only. Other platforms are skipped. If you want to hide this warning, report a bug to NPM bugtracker asking them to hide ebadplatform warnings by default. License The MIT License Copyright (C) 2010-2020 by Philipp Dunkel, Ben Noordhuis, Elan Shankar, Paul Miller \u2014 see LICENSE file. Visit our GitHub page and NPM Page","title":"fsevents"},{"location":"system-desing/crud-app/JS/server/node_modules/fsevents/#fsevents","text":"Native access to MacOS FSEvents in Node.js The FSEvents API in MacOS allows applications to register for notifications of changes to a given directory tree. It is a very fast and lightweight alternative to kqueue. This is a low-level library. For a cross-platform file watching module that uses fsevents, check out Chokidar .","title":"fsevents"},{"location":"system-desing/crud-app/JS/server/node_modules/fsevents/#usage","text":"npm install fsevents Supports only Node.js v8.16 and higher . const fsevents = require ( 'fsevents' ); // To start observation const stop = fsevents . watch ( __dirname , ( path , flags , id ) => { const info = fsevents . getInfo ( path , flags ); }); // To end observation stop (); Important note: The API behaviour is slightly different from typical JS APIs. The stop function must be retrieved and stored somewhere, even if you don't plan to stop the watcher. If you forget it, the garbage collector will eventually kick in, the watcher will be unregistered, and your callbacks won't be called anymore. The callback passed as the second parameter to .watch get's called whenever the operating system detects a a change in the file system. It takes three arguments:","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/fsevents/#fseventswatchdirname-string-path-string-flags-number-id-string-void-promiseundefined","text":"path: string - the item in the filesystem that have been changed flags: number - a numeric value describing what the change was id: string - an unique-id identifying this specific event Returns closer callback which when called returns a Promise resolving when the watcher process has been shut down.","title":"fsevents.watch(dirname: string, (path: string, flags: number, id: string) =&gt; void): () =&gt; Promise&lt;undefined&gt;"},{"location":"system-desing/crud-app/JS/server/node_modules/fsevents/#fseventsgetinfopath-string-flags-number-id-string-fseventinfo","text":"The getInfo function takes the path , flags and id arguments and converts those parameters into a structure that is easier to digest to determine what the change was. The FsEventsInfo has the following shape: /** * @typedef {'created'|'modified'|'deleted'|'moved'|'root-changed'|'cloned'|'unknown'} FsEventsEvent * @typedef {'file'|'directory'|'symlink'} FsEventsType */ { \"event\" : \"created\" , // {FsEventsEvent} \"path\" : \"file.txt\" , \"type\" : \"file\" , // {FsEventsType} \"changes\" : { \"inode\" : true , // Had iNode Meta-Information changed \"finder\" : false , // Had Finder Meta-Data changed \"access\" : false , // Had access permissions changed \"xattrs\" : false // Had xAttributes changed }, \"flags\" : 0x100000000 }","title":"fsevents.getInfo(path: string, flags: number, id: string): FsEventInfo"},{"location":"system-desing/crud-app/JS/server/node_modules/fsevents/#changelog","text":"v2.3 supports Apple Silicon ARM CPUs v2 supports node 8.16+ and reduces package size massively v1.2.8 supports node 6+ v1.2.7 supports node 4+","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/fsevents/#troubleshooting","text":"I'm getting EBADPLATFORM Unsupported platform for fsevents error. It's fine, nothing is broken. fsevents is macos-only. Other platforms are skipped. If you want to hide this warning, report a bug to NPM bugtracker asking them to hide ebadplatform warnings by default.","title":"Troubleshooting"},{"location":"system-desing/crud-app/JS/server/node_modules/fsevents/#license","text":"The MIT License Copyright (C) 2010-2020 by Philipp Dunkel, Ben Noordhuis, Elan Shankar, Paul Miller \u2014 see LICENSE file. Visit our GitHub page and NPM Page","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/","text":"function-bind Implementation of function.prototype.bind Old versions of phantomjs, Internet Explorer < 9, and node < 0.6 don't support Function.prototype.bind . Example Function . prototype . bind = require ( \"function-bind\" ) Installation npm install function-bind Contributors Raynos MIT Licenced","title":"function-bind Version Badge"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/#function-bind","text":"Implementation of function.prototype.bind Old versions of phantomjs, Internet Explorer < 9, and node < 0.6 don't support Function.prototype.bind .","title":"function-bind"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/#example","text":"Function . prototype . bind = require ( \"function-bind\" )","title":"Example"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/#installation","text":"npm install function-bind","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/#contributors","text":"Raynos","title":"Contributors"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/#mit-licenced","text":"","title":"MIT Licenced"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.1.2 - 2023-10-12 Merged Point to the correct file #16 Commits [Tests] migrate tests to Github Actions 4f8b57c [Tests] remove jscs 90eb2ed [meta] update .gitignore 53fcdc3 [Tests] up to node v11.10 , v10.15 , v9.11 , v8.15 , v6.16 , v4.9 ; use nvm install-latest-npm ; run audit script in tests 1fe8f6e [meta] add auto-changelog 1921fcb [Robustness] remove runtime dependency on all builtins except .apply f743e61 Docs: enable badges; update wording 503cb12 [readme] update badges 290c5db [Tests] switch to nyc for coverage ea360ba [Dev Deps] update eslint , @ljharb/eslint-config , tape cae5e9e [meta] add funding field; create FUNDING.yml c9f4274 [Tests] fix eslint errors from #15 f69aaa2 [actions] fix permissions 99a0cd9 [meta] use npmignore to autogenerate an npmignore file f03b524 [Dev Deps] update @ljharb/eslint\u2011config , eslint , tape 7af9300 [Dev Deps] update eslint , @ljharb/eslint-config , covert , tape 64a9127 [Tests] use aud instead of npm audit e75069c [Dev Deps] update @ljharb/eslint-config , aud , tape d03555c [meta] add safe-publish-latest 9c8f809 [Dev Deps] update @ljharb/eslint-config , tape baf6893 [meta] create SECURITY.md 4db1779 [Tests] add npm run audit c8b38ec Revert \"Point to the correct file\" 05cdf0f v1.1.1 - 2017-08-28 Commits [Tests] up to node v8 ; newer npm breaks on older node; fix scripts 817f7d2 [Dev Deps] update eslint , jscs , tape , @ljharb/eslint-config 854288b [Dev Deps] update tape , jscs , eslint , @ljharb/eslint-config 83e639f Only apps should have lockfiles 5ed97f5 Use a SPDX-compliant \u201clicense\u201d field. 5feefea v1.1.0 - 2016-02-14 Commits Update eslint , tape ; use my personal shared eslint config 9c9062a Add npm run eslint dd96c56 [New] return the native bind when available. 82186e0 [Dev Deps] update tape , jscs , eslint , @ljharb/eslint-config a3dd767 Update eslint 3dae2f7 Update tape , covert , jscs a181eee [Tests] up to node v5.6 , v4.3 964929a Test up to io.js v2.1 2be7310 Update tape , jscs , eslint , @ljharb/eslint-config 45f3d68 [Dev Deps] update tape , jscs 6e1340d [Tests] up to io.js v3.3 , node v4.1 d9bad2b Update eslint 935590c [Dev Deps] update jscs , eslint , @ljharb/eslint-config 8c9a1ef Test on io.js v2.2 9a3a38c Run travis-ci tests on iojs and node v0.12; speed up builds; allow 0.8 failures. 69afc26 [Dev Deps] Update tape , eslint 36c1be0 Update tape , jscs 98d8303 Update jscs 9633a4e Update tape , jscs c80ef0f Test up to io.js v3.0 7e2c853 Test on io.js v2.4 5a199a2 Test on io.js v2.3 a511b88 Fixing a typo from 822b4e1938db02dc9584aa434fd3a45cb20caf43 732d6b6 Update jscs da52a48 Lock covert to v1.0.0. d6150fd v1.0.2 - 2014-10-04 v1.0.1 - 2014-10-03 Merged make CI build faster #3 Commits Using my standard jscs.json d8ee94c Adding npm run lint 7571ab7 Using consistent indentation e91a1b1 Updating jscs 7e17892 Using consistent quotes c50b57f Adding keywords cb94631 Directly export a function expression instead of using a declaration, and relying on hoisting. 5a33c5f Naming npm URL and badge in README; use SVG 2aef8fc Naming deps URLs in README 04228d7 Naming travis-ci URLs in README; using SVG 62c810c Make sure functions are invoked correctly (also passing coverage tests) 2b289b4 Removing the strict mode pragmas; they make tests fail. 1aa701d Adding myself as a contributor 85fd57b Adding strict mode pragmas 915b08e Adding devDeps URLs to README 4ccc731 Fixing the description. a7a472c Using a function expression instead of a function declaration. b5d3e4e Updating tape f086be6 Updating jscs 5f9bdb3 Updating jscs 9b409ba Run coverage as part of tests. 8e1b6d4 Run linter as part of tests c1ca83f Updating covert 701e837 v1.0.0 - 2014-08-09 Commits Make sure old and unstable nodes don't fail Travis 27adca3 Fixing an issue when the bound function is called as a constructor in ES3. e20122d Adding npm run coverage a2e29c4 Updating tape b741168 Upgrading tape 63631a0 Updating tape 363cb46 v0.2.0 - 2014-03-23 Commits Updating test coverage to match es5-shim. aa94d44 initial 942ee07 Setting the bound function's length properly. 079f46a Ensuring that some older browsers will throw when given a regex. 36ac55b Removing npm scripts that don't have dependencies 9d2be60 Updating tape 297a4ac Skipping length tests for now. d9891ea don't take my tea dccd930","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#v112-2023-10-12","text":"","title":"v1.1.2 - 2023-10-12"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#merged","text":"Point to the correct file #16","title":"Merged"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#commits","text":"[Tests] migrate tests to Github Actions 4f8b57c [Tests] remove jscs 90eb2ed [meta] update .gitignore 53fcdc3 [Tests] up to node v11.10 , v10.15 , v9.11 , v8.15 , v6.16 , v4.9 ; use nvm install-latest-npm ; run audit script in tests 1fe8f6e [meta] add auto-changelog 1921fcb [Robustness] remove runtime dependency on all builtins except .apply f743e61 Docs: enable badges; update wording 503cb12 [readme] update badges 290c5db [Tests] switch to nyc for coverage ea360ba [Dev Deps] update eslint , @ljharb/eslint-config , tape cae5e9e [meta] add funding field; create FUNDING.yml c9f4274 [Tests] fix eslint errors from #15 f69aaa2 [actions] fix permissions 99a0cd9 [meta] use npmignore to autogenerate an npmignore file f03b524 [Dev Deps] update @ljharb/eslint\u2011config , eslint , tape 7af9300 [Dev Deps] update eslint , @ljharb/eslint-config , covert , tape 64a9127 [Tests] use aud instead of npm audit e75069c [Dev Deps] update @ljharb/eslint-config , aud , tape d03555c [meta] add safe-publish-latest 9c8f809 [Dev Deps] update @ljharb/eslint-config , tape baf6893 [meta] create SECURITY.md 4db1779 [Tests] add npm run audit c8b38ec Revert \"Point to the correct file\" 05cdf0f","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#v111-2017-08-28","text":"","title":"v1.1.1 - 2017-08-28"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#commits_1","text":"[Tests] up to node v8 ; newer npm breaks on older node; fix scripts 817f7d2 [Dev Deps] update eslint , jscs , tape , @ljharb/eslint-config 854288b [Dev Deps] update tape , jscs , eslint , @ljharb/eslint-config 83e639f Only apps should have lockfiles 5ed97f5 Use a SPDX-compliant \u201clicense\u201d field. 5feefea","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#v110-2016-02-14","text":"","title":"v1.1.0 - 2016-02-14"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#commits_2","text":"Update eslint , tape ; use my personal shared eslint config 9c9062a Add npm run eslint dd96c56 [New] return the native bind when available. 82186e0 [Dev Deps] update tape , jscs , eslint , @ljharb/eslint-config a3dd767 Update eslint 3dae2f7 Update tape , covert , jscs a181eee [Tests] up to node v5.6 , v4.3 964929a Test up to io.js v2.1 2be7310 Update tape , jscs , eslint , @ljharb/eslint-config 45f3d68 [Dev Deps] update tape , jscs 6e1340d [Tests] up to io.js v3.3 , node v4.1 d9bad2b Update eslint 935590c [Dev Deps] update jscs , eslint , @ljharb/eslint-config 8c9a1ef Test on io.js v2.2 9a3a38c Run travis-ci tests on iojs and node v0.12; speed up builds; allow 0.8 failures. 69afc26 [Dev Deps] Update tape , eslint 36c1be0 Update tape , jscs 98d8303 Update jscs 9633a4e Update tape , jscs c80ef0f Test up to io.js v3.0 7e2c853 Test on io.js v2.4 5a199a2 Test on io.js v2.3 a511b88 Fixing a typo from 822b4e1938db02dc9584aa434fd3a45cb20caf43 732d6b6 Update jscs da52a48 Lock covert to v1.0.0. d6150fd","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#v102-2014-10-04","text":"","title":"v1.0.2 - 2014-10-04"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#v101-2014-10-03","text":"","title":"v1.0.1 - 2014-10-03"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#merged_1","text":"make CI build faster #3","title":"Merged"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#commits_3","text":"Using my standard jscs.json d8ee94c Adding npm run lint 7571ab7 Using consistent indentation e91a1b1 Updating jscs 7e17892 Using consistent quotes c50b57f Adding keywords cb94631 Directly export a function expression instead of using a declaration, and relying on hoisting. 5a33c5f Naming npm URL and badge in README; use SVG 2aef8fc Naming deps URLs in README 04228d7 Naming travis-ci URLs in README; using SVG 62c810c Make sure functions are invoked correctly (also passing coverage tests) 2b289b4 Removing the strict mode pragmas; they make tests fail. 1aa701d Adding myself as a contributor 85fd57b Adding strict mode pragmas 915b08e Adding devDeps URLs to README 4ccc731 Fixing the description. a7a472c Using a function expression instead of a function declaration. b5d3e4e Updating tape f086be6 Updating jscs 5f9bdb3 Updating jscs 9b409ba Run coverage as part of tests. 8e1b6d4 Run linter as part of tests c1ca83f Updating covert 701e837","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#v100-2014-08-09","text":"","title":"v1.0.0 - 2014-08-09"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#commits_4","text":"Make sure old and unstable nodes don't fail Travis 27adca3 Fixing an issue when the bound function is called as a constructor in ES3. e20122d Adding npm run coverage a2e29c4 Updating tape b741168 Upgrading tape 63631a0 Updating tape 363cb46","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#v020-2014-03-23","text":"","title":"v0.2.0 - 2014-03-23"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#commits_5","text":"Updating test coverage to match es5-shim. aa94d44 initial 942ee07 Setting the bound function's length properly. 079f46a Ensuring that some older browsers will throw when given a regex. 36ac55b Removing npm scripts that don't have dependencies 9d2be60 Updating tape 297a4ac Skipping length tests for now. d9891ea don't take my tea dccd930","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/","text":"get-intrinsic Get and robustly cache all JS language-level intrinsics at first require time. See the syntax described in the JS spec for reference. Example var GetIntrinsic = require ( 'get-intrinsic' ); var assert = require ( 'assert' ); // static methods assert . equal ( GetIntrinsic ( '%Math.pow%' ), Math . pow ); assert . equal ( Math . pow ( 2 , 3 ), 8 ); assert . equal ( GetIntrinsic ( '%Math.pow%' )( 2 , 3 ), 8 ); delete Math . pow ; assert . equal ( GetIntrinsic ( '%Math.pow%' )( 2 , 3 ), 8 ); // instance methods var arr = [ 1 ]; assert . equal ( GetIntrinsic ( '%Array.prototype.push%' ), Array . prototype . push ); assert . deepEqual ( arr , [ 1 ]); arr . push ( 2 ); assert . deepEqual ( arr , [ 1 , 2 ]); GetIntrinsic ( '%Array.prototype.push%' ). call ( arr , 3 ); assert . deepEqual ( arr , [ 1 , 2 , 3 ]); delete Array . prototype . push ; GetIntrinsic ( '%Array.prototype.push%' ). call ( arr , 4 ); assert . deepEqual ( arr , [ 1 , 2 , 3 , 4 ]); // missing features delete JSON . parse ; // to simulate a real intrinsic that is missing in the environment assert . throws (() => GetIntrinsic ( '%JSON.parse%' )); assert . equal ( undefined , GetIntrinsic ( '%JSON.parse%' , true )); Tests Simply clone the repo, npm install , and run npm test Security Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.","title":"get-intrinsic Version Badge"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/#get-intrinsic","text":"Get and robustly cache all JS language-level intrinsics at first require time. See the syntax described in the JS spec for reference.","title":"get-intrinsic"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/#example","text":"var GetIntrinsic = require ( 'get-intrinsic' ); var assert = require ( 'assert' ); // static methods assert . equal ( GetIntrinsic ( '%Math.pow%' ), Math . pow ); assert . equal ( Math . pow ( 2 , 3 ), 8 ); assert . equal ( GetIntrinsic ( '%Math.pow%' )( 2 , 3 ), 8 ); delete Math . pow ; assert . equal ( GetIntrinsic ( '%Math.pow%' )( 2 , 3 ), 8 ); // instance methods var arr = [ 1 ]; assert . equal ( GetIntrinsic ( '%Array.prototype.push%' ), Array . prototype . push ); assert . deepEqual ( arr , [ 1 ]); arr . push ( 2 ); assert . deepEqual ( arr , [ 1 , 2 ]); GetIntrinsic ( '%Array.prototype.push%' ). call ( arr , 3 ); assert . deepEqual ( arr , [ 1 , 2 , 3 ]); delete Array . prototype . push ; GetIntrinsic ( '%Array.prototype.push%' ). call ( arr , 4 ); assert . deepEqual ( arr , [ 1 , 2 , 3 , 4 ]); // missing features delete JSON . parse ; // to simulate a real intrinsic that is missing in the environment assert . throws (() => GetIntrinsic ( '%JSON.parse%' )); assert . equal ( undefined , GetIntrinsic ( '%JSON.parse%' , true ));","title":"Example"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/#security","text":"Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.","title":"Security"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.3.0 - 2025-02-22 Commits [Dev Deps] update es-abstract , es-value-fixtures , for-each , object-inspect 9b61553 [Deps] update call-bind-apply-helpers , es-object-atoms , get-proto a341fee [New] add Float16Array de22116 v1.2.7 - 2025-01-02 Commits [Refactor] use get-proto directly 00ab955 [Deps] update math-intrinsics c716cdd [Dev Deps] update call-bound , es-abstract dc648a6 v1.2.6 - 2024-12-11 Commits [Refactor] use math-intrinsics 841be86 [Refactor] use es-object-atoms 42057df [Deps] update call-bind-apply-helpers 45afa24 [Dev Deps] update call-bound 9cba9c6 v1.2.5 - 2024-12-06 Commits [actions] split out node 10-20, and 20+ 6e2b9dd [Refactor] use dunder-proto and call-bind-apply-helpers instead of has-proto c095d17 [Refactor] use gopd 9841d5b [Dev Deps] update @ljharb/eslint-config , auto-changelog , es-abstract , es-value-fixtures , gopd , mock-property , object-inspect , tape 2d07e01 [Deps] update gopd , has-proto , has-symbols , hasown 974d8bf [Dev Deps] update call-bind , es-abstract , tape df9dde1 [Refactor] cache es-define-property as well 43ef543 [Deps] update has-proto , has-symbols , hasown ad4949d [Tests] use call-bound directly ad5c406 [Deps] update has-proto , hasown 45414ca [Tests] replace aud with npm audit 18d3509 [Deps] update es-define-property aadaa3b [Dev Deps] add missing peer dep c296a16 v1.2.4 - 2024-02-05 Commits [Refactor] use all 7 <+ ES6 Errors from es-errors bcac811 v1.2.3 - 2024-02-03 Commits [Refactor] use es-errors , so things that only need those do not need get-intrinsic f11db9c [Dev Deps] update aud , es-abstract , mock-property , npmignore b7ac7d1 [meta] simplify exports faa0cc6 [meta] add missing engines.node 774dd0b [Dev Deps] update tape 5828e8e [Robustness] use null objects for lookups eb9a11f [meta] add sideEffects flag 89bcc7a v1.2.2 - 2023-10-20 Commits [Dev Deps] update @ljharb/eslint-config , aud , call-bind , es-abstract , mock-property , object-inspect , tape f51bcf2 [Refactor] use hasown instead of has 18d14b7 [Deps] update function-bind 6e109c8 v1.2.1 - 2023-05-13 Commits [Fix] avoid a crash in envs without __proto__ 7bad8d0 [Dev Deps] update es-abstract c60e6b7 v1.2.0 - 2023-01-19 Commits [actions] update checkout action ca6b12f [Dev Deps] update @ljharb/eslint-config , es-abstract , object-inspect , tape 41a3727 [Fix] ensure Error.prototype is undeniable c511e97 [Dev Deps] update aud , es-abstract , tape 1bef8a8 [Dev Deps] update aud , es-abstract 0d41f16 [New] add BigInt64Array and BigUint64Array a6cca25 [Tests] use gopd ecf7722 v1.1.3 - 2022-09-12 Commits [Dev Deps] update es-abstract , es-value-fixtures , tape 07ff291 [Fix] properly check for % signs 50ac176 v1.1.2 - 2022-06-08 Fixed [Fix] properly validate against extra % signs #16 Commits [actions] reuse common workflows 0972547 [meta] use npmignore to autogenerate an npmignore file 5ba0b51 [actions] use node/install instead of node/run ; use codecov action c364492 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , es-abstract , object-inspect , tape dc04dad [Dev Deps] update eslint , @ljharb/eslint-config , es-abstract , object-inspect , safe-publish-latest , tape 1c14059 [Tests] use mock-property b396ef0 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape c2c758d [Dev Deps] update eslint , @ljharb/eslint-config , aud , es-abstract , es-value-fixtures , object-inspect , tape 29e3c09 [actions] update codecov uploader 8cbc141 [Dev Deps] update @ljharb/eslint-config , es-abstract , es-value-fixtures , object-inspect , tape 10b6f5c [readme] add github actions/codecov badges 4e25400 [Tests] use for-each instead of foreach c05b957 [Dev Deps] update es-abstract 29b05ae [meta] use prepublishOnly script for npm 7+ 95c285d [Deps] update has-symbols 593cb4f [readme] fix repo URLs 1c8305b [Deps] update has-symbols c7138b6 [Dev Deps] remove unused has-bigints bd63aff v1.1.1 - 2021-02-03 Fixed [meta] export ./package.json #9 Commits [readme] flesh out the readme; use evalmd d12f12c [eslint] set up proper globals config 5a8c098 [Dev Deps] update eslint 7b9a5c0 v1.1.0 - 2021-01-25 Fixed [Refactor] delay Function eval until syntax-derived values are requested #3 Commits [Tests] migrate tests to Github Actions 2ab762b [meta] do not publish github action workflow files 5e7108e [Tests] add some coverage 01ac7a8 [Dev Deps] update eslint , @ljharb/eslint-config , call-bind , es-abstract , tape ; add call-bind 911b672 [Refactor] rearrange evalled constructors a bit 7e7e4bf [meta] add Automatic Rebase and Require Allow Edits workflows 0199968 v1.0.2 - 2020-12-17 Commits [Fix] Throw for non\u2011existent intrinsics 68f873b [Fix] Throw for non\u2011existent segments in the intrinsic path 8325dee [Dev Deps] update eslint , @ljharb/eslint-config , aud , has-bigints , object-inspect 0c227a7 [meta] do not lint coverage output 70d2419 v1.0.1 - 2020-10-30 Commits [Tests] gather coverage data on every job d1d280d [Fix] add missing dependencies 5031771 [Tests] use es-value-fixtures af48765 v1.0.0 - 2020-10-29 Commits Implementation bbce57c Tests 17b4f0d Initial commit 3153294 npm init fb326c4 [meta] add Automatic Rebase and Require Allow Edits workflows 48862fb [meta] add auto-changelog 5f28ad0 [meta] add \"funding\"; create FUNDING.yml c2bbdde [Tests] add npm run lint 0a84b98 Only apps should have lockfiles 9586c75","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v130-2025-02-22","text":"","title":"v1.3.0 - 2025-02-22"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits","text":"[Dev Deps] update es-abstract , es-value-fixtures , for-each , object-inspect 9b61553 [Deps] update call-bind-apply-helpers , es-object-atoms , get-proto a341fee [New] add Float16Array de22116","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v127-2025-01-02","text":"","title":"v1.2.7 - 2025-01-02"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_1","text":"[Refactor] use get-proto directly 00ab955 [Deps] update math-intrinsics c716cdd [Dev Deps] update call-bound , es-abstract dc648a6","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v126-2024-12-11","text":"","title":"v1.2.6 - 2024-12-11"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_2","text":"[Refactor] use math-intrinsics 841be86 [Refactor] use es-object-atoms 42057df [Deps] update call-bind-apply-helpers 45afa24 [Dev Deps] update call-bound 9cba9c6","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v125-2024-12-06","text":"","title":"v1.2.5 - 2024-12-06"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_3","text":"[actions] split out node 10-20, and 20+ 6e2b9dd [Refactor] use dunder-proto and call-bind-apply-helpers instead of has-proto c095d17 [Refactor] use gopd 9841d5b [Dev Deps] update @ljharb/eslint-config , auto-changelog , es-abstract , es-value-fixtures , gopd , mock-property , object-inspect , tape 2d07e01 [Deps] update gopd , has-proto , has-symbols , hasown 974d8bf [Dev Deps] update call-bind , es-abstract , tape df9dde1 [Refactor] cache es-define-property as well 43ef543 [Deps] update has-proto , has-symbols , hasown ad4949d [Tests] use call-bound directly ad5c406 [Deps] update has-proto , hasown 45414ca [Tests] replace aud with npm audit 18d3509 [Deps] update es-define-property aadaa3b [Dev Deps] add missing peer dep c296a16","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v124-2024-02-05","text":"","title":"v1.2.4 - 2024-02-05"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_4","text":"[Refactor] use all 7 <+ ES6 Errors from es-errors bcac811","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v123-2024-02-03","text":"","title":"v1.2.3 - 2024-02-03"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_5","text":"[Refactor] use es-errors , so things that only need those do not need get-intrinsic f11db9c [Dev Deps] update aud , es-abstract , mock-property , npmignore b7ac7d1 [meta] simplify exports faa0cc6 [meta] add missing engines.node 774dd0b [Dev Deps] update tape 5828e8e [Robustness] use null objects for lookups eb9a11f [meta] add sideEffects flag 89bcc7a","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v122-2023-10-20","text":"","title":"v1.2.2 - 2023-10-20"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_6","text":"[Dev Deps] update @ljharb/eslint-config , aud , call-bind , es-abstract , mock-property , object-inspect , tape f51bcf2 [Refactor] use hasown instead of has 18d14b7 [Deps] update function-bind 6e109c8","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v121-2023-05-13","text":"","title":"v1.2.1 - 2023-05-13"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_7","text":"[Fix] avoid a crash in envs without __proto__ 7bad8d0 [Dev Deps] update es-abstract c60e6b7","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v120-2023-01-19","text":"","title":"v1.2.0 - 2023-01-19"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_8","text":"[actions] update checkout action ca6b12f [Dev Deps] update @ljharb/eslint-config , es-abstract , object-inspect , tape 41a3727 [Fix] ensure Error.prototype is undeniable c511e97 [Dev Deps] update aud , es-abstract , tape 1bef8a8 [Dev Deps] update aud , es-abstract 0d41f16 [New] add BigInt64Array and BigUint64Array a6cca25 [Tests] use gopd ecf7722","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v113-2022-09-12","text":"","title":"v1.1.3 - 2022-09-12"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_9","text":"[Dev Deps] update es-abstract , es-value-fixtures , tape 07ff291 [Fix] properly check for % signs 50ac176","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v112-2022-06-08","text":"","title":"v1.1.2 - 2022-06-08"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#fixed","text":"[Fix] properly validate against extra % signs #16","title":"Fixed"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_10","text":"[actions] reuse common workflows 0972547 [meta] use npmignore to autogenerate an npmignore file 5ba0b51 [actions] use node/install instead of node/run ; use codecov action c364492 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , es-abstract , object-inspect , tape dc04dad [Dev Deps] update eslint , @ljharb/eslint-config , es-abstract , object-inspect , safe-publish-latest , tape 1c14059 [Tests] use mock-property b396ef0 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape c2c758d [Dev Deps] update eslint , @ljharb/eslint-config , aud , es-abstract , es-value-fixtures , object-inspect , tape 29e3c09 [actions] update codecov uploader 8cbc141 [Dev Deps] update @ljharb/eslint-config , es-abstract , es-value-fixtures , object-inspect , tape 10b6f5c [readme] add github actions/codecov badges 4e25400 [Tests] use for-each instead of foreach c05b957 [Dev Deps] update es-abstract 29b05ae [meta] use prepublishOnly script for npm 7+ 95c285d [Deps] update has-symbols 593cb4f [readme] fix repo URLs 1c8305b [Deps] update has-symbols c7138b6 [Dev Deps] remove unused has-bigints bd63aff","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v111-2021-02-03","text":"","title":"v1.1.1 - 2021-02-03"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#fixed_1","text":"[meta] export ./package.json #9","title":"Fixed"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_11","text":"[readme] flesh out the readme; use evalmd d12f12c [eslint] set up proper globals config 5a8c098 [Dev Deps] update eslint 7b9a5c0","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v110-2021-01-25","text":"","title":"v1.1.0 - 2021-01-25"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#fixed_2","text":"[Refactor] delay Function eval until syntax-derived values are requested #3","title":"Fixed"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_12","text":"[Tests] migrate tests to Github Actions 2ab762b [meta] do not publish github action workflow files 5e7108e [Tests] add some coverage 01ac7a8 [Dev Deps] update eslint , @ljharb/eslint-config , call-bind , es-abstract , tape ; add call-bind 911b672 [Refactor] rearrange evalled constructors a bit 7e7e4bf [meta] add Automatic Rebase and Require Allow Edits workflows 0199968","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v102-2020-12-17","text":"","title":"v1.0.2 - 2020-12-17"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_13","text":"[Fix] Throw for non\u2011existent intrinsics 68f873b [Fix] Throw for non\u2011existent segments in the intrinsic path 8325dee [Dev Deps] update eslint , @ljharb/eslint-config , aud , has-bigints , object-inspect 0c227a7 [meta] do not lint coverage output 70d2419","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v101-2020-10-30","text":"","title":"v1.0.1 - 2020-10-30"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_14","text":"[Tests] gather coverage data on every job d1d280d [Fix] add missing dependencies 5031771 [Tests] use es-value-fixtures af48765","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v100-2020-10-29","text":"","title":"v1.0.0 - 2020-10-29"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_15","text":"Implementation bbce57c Tests 17b4f0d Initial commit 3153294 npm init fb326c4 [meta] add Automatic Rebase and Require Allow Edits workflows 48862fb [meta] add auto-changelog 5f28ad0 [meta] add \"funding\"; create FUNDING.yml c2bbdde [Tests] add npm run lint 0a84b98 Only apps should have lockfiles 9586c75","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/get-proto/","text":"get-proto Robustly get the [[Prototype]] of an object. Uses the best available method. Getting started npm install --save get-proto Usage/Examples const assert = require ( 'assert' ); const getProto = require ( 'get-proto' ); const a = { a : 1 , b : 2 , [ Symbol . toStringTag ] : 'foo' }; const b = { c : 3 , __proto__ : a }; assert . equal ( getProto ( b ), a ); assert . equal ( getProto ( a ), Object . prototype ); assert . equal ( getProto ({ __proto__ : null }), null ); Tests Clone the repo, npm install , and run npm test","title":"get-proto Version Badge"},{"location":"system-desing/crud-app/JS/server/node_modules/get-proto/#get-proto","text":"Robustly get the [[Prototype]] of an object. Uses the best available method.","title":"get-proto"},{"location":"system-desing/crud-app/JS/server/node_modules/get-proto/#getting-started","text":"npm install --save get-proto","title":"Getting started"},{"location":"system-desing/crud-app/JS/server/node_modules/get-proto/#usageexamples","text":"const assert = require ( 'assert' ); const getProto = require ( 'get-proto' ); const a = { a : 1 , b : 2 , [ Symbol . toStringTag ] : 'foo' }; const b = { c : 3 , __proto__ : a }; assert . equal ( getProto ( b ), a ); assert . equal ( getProto ( a ), Object . prototype ); assert . equal ( getProto ({ __proto__ : null }), null );","title":"Usage/Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/get-proto/#tests","text":"Clone the repo, npm install , and run npm test","title":"Tests"},{"location":"system-desing/crud-app/JS/server/node_modules/get-proto/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.1 - 2025-01-02 Commits [Fix] for the Object.getPrototypeOf window, throw for non-objects 7fe6508 v1.0.0 - 2025-01-01 Commits Initial implementation, tests, readme, types 5c70775 Initial commit 7c65c2a npm init 0b8cf82 Only apps should have lockfiles a6d1bff","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/get-proto/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/get-proto/CHANGELOG/#v101-2025-01-02","text":"","title":"v1.0.1 - 2025-01-02"},{"location":"system-desing/crud-app/JS/server/node_modules/get-proto/CHANGELOG/#commits","text":"[Fix] for the Object.getPrototypeOf window, throw for non-objects 7fe6508","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/get-proto/CHANGELOG/#v100-2025-01-01","text":"","title":"v1.0.0 - 2025-01-01"},{"location":"system-desing/crud-app/JS/server/node_modules/get-proto/CHANGELOG/#commits_1","text":"Initial implementation, tests, readme, types 5c70775 Initial commit 7c65c2a npm init 0b8cf82 Only apps should have lockfiles a6d1bff","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/","text":"glob-parent Extract the non-magic parent path from a glob string. Usage var globParent = require ( 'glob-parent' ); globParent ( 'path/to/*.js' ); // 'path/to' globParent ( '/root/path/to/*.js' ); // '/root/path/to' globParent ( '/*.js' ); // '/' globParent ( '*.js' ); // '.' globParent ( '**/*.js' ); // '.' globParent ( 'path/{to,from}' ); // 'path' globParent ( 'path/!(to|from)' ); // 'path' globParent ( 'path/?(to|from)' ); // 'path' globParent ( 'path/+(to|from)' ); // 'path' globParent ( 'path/*(to|from)' ); // 'path' globParent ( 'path/@(to|from)' ); // 'path' globParent ( 'path/**/*' ); // 'path' // if provided a non-glob path, returns the nearest dir globParent ( 'path/foo/bar.js' ); // 'path/foo' globParent ( 'path/foo/' ); // 'path/foo' globParent ( 'path/foo' ); // 'path' (see issue #3 for details) API globParent(maybeGlobString, [options]) Takes a string and returns the part of the path before the glob begins. Be aware of Escaping rules and Limitations below. options { // Disables the automatic conversion of slashes for Windows flipBackslashes : true } Escaping The following characters have special significance in glob patterns and must be escaped if you want them to be treated as regular path characters: ? (question mark) unless used as a path segment alone * (asterisk) | (pipe) ( (opening parenthesis) ) (closing parenthesis) { (opening curly brace) } (closing curly brace) [ (opening bracket) ] (closing bracket) Example globParent ( 'foo/[bar]/' ) // 'foo' globParent ( 'foo/\\\\[bar]/' ) // 'foo/[bar]' Limitations Braces & Brackets This library attempts a quick and imperfect method of determining which path parts have glob magic without fully parsing/lexing the pattern. There are some advanced use cases that can trip it up, such as nested braces where the outer pair is escaped and the inner one contains a path separator. If you find yourself in the unlikely circumstance of being affected by this or need to ensure higher-fidelity glob handling in your library, it is recommended that you pre-process your input with expand-braces and/or expand-brackets . Windows Backslashes are not valid path separators for globs. If a path with backslashes is provided anyway, for simple cases, glob-parent will replace the path separator for you and return the non-glob parent path (now with forward-slashes, which are still valid as Windows path separators). This cannot be used in conjunction with escape characters. // BAD globParent ( 'C:\\\\Program Files \\\\(x86\\\\)\\\\*.ext' ) // 'C:/Program Files /(x86/)' // GOOD globParent ( 'C:/Program Files\\\\(x86\\\\)/*.ext' ) // 'C:/Program Files (x86)' If you are using escape characters for a pattern without path parts (i.e. relative to cwd ), prefix with ./ to avoid confusing glob-parent. // BAD globParent ( 'foo \\\\[bar]' ) // 'foo ' globParent ( 'foo \\\\[bar]*' ) // 'foo ' // GOOD globParent ( './foo \\\\[bar]' ) // 'foo [bar]' globParent ( './foo \\\\[bar]*' ) // '.' License ISC","title":"Index"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/#glob-parent","text":"Extract the non-magic parent path from a glob string.","title":"glob-parent"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/#usage","text":"var globParent = require ( 'glob-parent' ); globParent ( 'path/to/*.js' ); // 'path/to' globParent ( '/root/path/to/*.js' ); // '/root/path/to' globParent ( '/*.js' ); // '/' globParent ( '*.js' ); // '.' globParent ( '**/*.js' ); // '.' globParent ( 'path/{to,from}' ); // 'path' globParent ( 'path/!(to|from)' ); // 'path' globParent ( 'path/?(to|from)' ); // 'path' globParent ( 'path/+(to|from)' ); // 'path' globParent ( 'path/*(to|from)' ); // 'path' globParent ( 'path/@(to|from)' ); // 'path' globParent ( 'path/**/*' ); // 'path' // if provided a non-glob path, returns the nearest dir globParent ( 'path/foo/bar.js' ); // 'path/foo' globParent ( 'path/foo/' ); // 'path/foo' globParent ( 'path/foo' ); // 'path' (see issue #3 for details)","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/#api","text":"","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/#globparentmaybeglobstring-options","text":"Takes a string and returns the part of the path before the glob begins. Be aware of Escaping rules and Limitations below.","title":"globParent(maybeGlobString, [options])"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/#options","text":"{ // Disables the automatic conversion of slashes for Windows flipBackslashes : true }","title":"options"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/#escaping","text":"The following characters have special significance in glob patterns and must be escaped if you want them to be treated as regular path characters: ? (question mark) unless used as a path segment alone * (asterisk) | (pipe) ( (opening parenthesis) ) (closing parenthesis) { (opening curly brace) } (closing curly brace) [ (opening bracket) ] (closing bracket) Example globParent ( 'foo/[bar]/' ) // 'foo' globParent ( 'foo/\\\\[bar]/' ) // 'foo/[bar]'","title":"Escaping"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/#limitations","text":"","title":"Limitations"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/#braces-brackets","text":"This library attempts a quick and imperfect method of determining which path parts have glob magic without fully parsing/lexing the pattern. There are some advanced use cases that can trip it up, such as nested braces where the outer pair is escaped and the inner one contains a path separator. If you find yourself in the unlikely circumstance of being affected by this or need to ensure higher-fidelity glob handling in your library, it is recommended that you pre-process your input with expand-braces and/or expand-brackets .","title":"Braces &amp; Brackets"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/#windows","text":"Backslashes are not valid path separators for globs. If a path with backslashes is provided anyway, for simple cases, glob-parent will replace the path separator for you and return the non-glob parent path (now with forward-slashes, which are still valid as Windows path separators). This cannot be used in conjunction with escape characters. // BAD globParent ( 'C:\\\\Program Files \\\\(x86\\\\)\\\\*.ext' ) // 'C:/Program Files /(x86/)' // GOOD globParent ( 'C:/Program Files\\\\(x86\\\\)/*.ext' ) // 'C:/Program Files (x86)' If you are using escape characters for a pattern without path parts (i.e. relative to cwd ), prefix with ./ to avoid confusing glob-parent. // BAD globParent ( 'foo \\\\[bar]' ) // 'foo ' globParent ( 'foo \\\\[bar]*' ) // 'foo ' // GOOD globParent ( './foo \\\\[bar]' ) // 'foo [bar]' globParent ( './foo \\\\[bar]*' ) // '.'","title":"Windows"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/#license","text":"ISC","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/","text":"5.1.2 (2021-03-06) Bug Fixes eliminate ReDoS ( #36 ) ( f923116 ) 5.1.1 (2021-01-27) Bug Fixes unescape exclamation mark ( #26 ) ( a98874f ) 5.1.0 (2021-01-27) Features add flipBackslashes option to disable auto conversion of slashes (closes #24 ) ( #25 ) ( eecf91d ) 5.0.0 (2021-01-27) \u26a0 BREAKING CHANGES Drop support for node <6 & bump dependencies Miscellaneous Chores Drop support for node <6 & bump dependencies ( 896c0c0 ) 4.0.0 (2021-01-27) \u26a0 BREAKING CHANGES question marks are valid path characters on Windows so avoid flagging as a glob when alone Update is-glob dependency Features hoist regexps and strings for performance gains ( 4a80667 ) question marks are valid path characters on Windows so avoid flagging as a glob when alone ( 2a551dd ) Update is-glob dependency ( e41fcd8 ) 3.1.0 (2021-01-27) Features allow basic win32 backslash use ( 272afa5 ) handle extglobs (parentheses) containing separators ( 7db1bdb ) new approach to braces/brackets handling ( 8269bd8 ) pre-process braces/brackets sections ( 9ef8a87 ) preserve escaped brace/bracket at end of string ( 8cfb0ba ) Bug Fixes trailing escaped square brackets ( 99ec9fe ) 3.0.1 (2021-01-27) Features use path-dirname ponyfill ( cdbea5f ) Bug Fixes unescape glob-escaped dirnames on output ( 598c533 ) 3.0.0 (2021-01-27) \u26a0 BREAKING CHANGES update is-glob dependency Features update is-glob dependency ( 5c5f8ef ) 2.0.0 (2021-01-27) Features move up to dirname regardless of glob characters ( f97fb83 ) 1.3.0 (2021-01-27) 1.2.0 (2021-01-27) Reverts feat: make regex test strings smaller ( dc80fa9 ) 1.1.0 (2021-01-27) Features make regex test strings smaller ( cd83220 ) 1.0.0 (2021-01-27)","title":"CHANGELOG"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#512-2021-03-06","text":"","title":"5.1.2 (2021-03-06)"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#bug-fixes","text":"eliminate ReDoS ( #36 ) ( f923116 )","title":"Bug Fixes"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#511-2021-01-27","text":"","title":"5.1.1 (2021-01-27)"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#bug-fixes_1","text":"unescape exclamation mark ( #26 ) ( a98874f )","title":"Bug Fixes"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#510-2021-01-27","text":"","title":"5.1.0 (2021-01-27)"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#features","text":"add flipBackslashes option to disable auto conversion of slashes (closes #24 ) ( #25 ) ( eecf91d )","title":"Features"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#500-2021-01-27","text":"","title":"5.0.0 (2021-01-27)"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#breaking-changes","text":"Drop support for node <6 & bump dependencies","title":"\u26a0 BREAKING CHANGES"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#miscellaneous-chores","text":"Drop support for node <6 & bump dependencies ( 896c0c0 )","title":"Miscellaneous Chores"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#400-2021-01-27","text":"","title":"4.0.0 (2021-01-27)"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#breaking-changes_1","text":"question marks are valid path characters on Windows so avoid flagging as a glob when alone Update is-glob dependency","title":"\u26a0 BREAKING CHANGES"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#features_1","text":"hoist regexps and strings for performance gains ( 4a80667 ) question marks are valid path characters on Windows so avoid flagging as a glob when alone ( 2a551dd ) Update is-glob dependency ( e41fcd8 )","title":"Features"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#310-2021-01-27","text":"","title":"3.1.0 (2021-01-27)"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#features_2","text":"allow basic win32 backslash use ( 272afa5 ) handle extglobs (parentheses) containing separators ( 7db1bdb ) new approach to braces/brackets handling ( 8269bd8 ) pre-process braces/brackets sections ( 9ef8a87 ) preserve escaped brace/bracket at end of string ( 8cfb0ba )","title":"Features"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#bug-fixes_2","text":"trailing escaped square brackets ( 99ec9fe )","title":"Bug Fixes"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#301-2021-01-27","text":"","title":"3.0.1 (2021-01-27)"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#features_3","text":"use path-dirname ponyfill ( cdbea5f )","title":"Features"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#bug-fixes_3","text":"unescape glob-escaped dirnames on output ( 598c533 )","title":"Bug Fixes"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#300-2021-01-27","text":"","title":"3.0.0 (2021-01-27)"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#breaking-changes_2","text":"update is-glob dependency","title":"\u26a0 BREAKING CHANGES"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#features_4","text":"update is-glob dependency ( 5c5f8ef )","title":"Features"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#200-2021-01-27","text":"","title":"2.0.0 (2021-01-27)"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#features_5","text":"move up to dirname regardless of glob characters ( f97fb83 )","title":"Features"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#130-2021-01-27","text":"","title":"1.3.0 (2021-01-27)"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#120-2021-01-27","text":"","title":"1.2.0 (2021-01-27)"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#reverts","text":"feat: make regex test strings smaller ( dc80fa9 )","title":"Reverts"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#110-2021-01-27","text":"","title":"1.1.0 (2021-01-27)"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#features_6","text":"make regex test strings smaller ( cd83220 )","title":"Features"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#100-2021-01-27","text":"","title":"1.0.0 (2021-01-27)"},{"location":"system-desing/crud-app/JS/server/node_modules/gopd/","text":"gopd Object.getOwnPropertyDescriptor , but accounts for IE's broken implementation. Usage var gOPD = require ( 'gopd' ); var assert = require ( 'assert' ); if ( gOPD ) { assert . equal ( typeof gOPD , 'function' , 'descriptors supported' ); // use gOPD like Object.getOwnPropertyDescriptor here } else { assert . ok ( ! gOPD , 'descriptors not supported' ); }","title":"gopd Version Badge"},{"location":"system-desing/crud-app/JS/server/node_modules/gopd/#gopd","text":"Object.getOwnPropertyDescriptor , but accounts for IE's broken implementation.","title":"gopd"},{"location":"system-desing/crud-app/JS/server/node_modules/gopd/#usage","text":"var gOPD = require ( 'gopd' ); var assert = require ( 'assert' ); if ( gOPD ) { assert . equal ( typeof gOPD , 'function' , 'descriptors supported' ); // use gOPD like Object.getOwnPropertyDescriptor here } else { assert . ok ( ! gOPD , 'descriptors not supported' ); }","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/gopd/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.2.0 - 2024-12-03 Commits [New] add gOPD entry point; remove get-intrinsic 5b61232 v1.1.0 - 2024-11-29 Commits [New] add types f585e39 [Dev Deps] update @ljharb/eslint-config , auto-changelog , tape 0b8e4fd [Dev Deps] update aud , npmignore , tape 48378b2 [Dev Deps] update @ljharb/eslint-config , aud , tape 78099ee [Tests] replace aud with npm audit 4e0d0ac [meta] add missing engines.node 1443316 [Deps] update get-intrinsic eee5f51 [Deps] update get-intrinsic 550c378 [Dev Deps] add missing peer dep 8c2ecf8 v1.0.1 - 2022-11-01 Commits [Fix] actually export gOPD instead of dP 4b624bf v1.0.0 - 2022-11-01 Commits Initial implementation, tests, readme 0911e01 Initial commit b84e33f [actions] add reusable workflows 12ae28a npm init 280118b [meta] add auto-changelog bb78de5 [meta] create FUNDING.yml; add funding in package.json 11c22e6 [meta] use npmignore to autogenerate an npmignore file 4f4537a Only apps should have lockfiles c567022","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/gopd/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/gopd/CHANGELOG/#v120-2024-12-03","text":"","title":"v1.2.0 - 2024-12-03"},{"location":"system-desing/crud-app/JS/server/node_modules/gopd/CHANGELOG/#commits","text":"[New] add gOPD entry point; remove get-intrinsic 5b61232","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/gopd/CHANGELOG/#v110-2024-11-29","text":"","title":"v1.1.0 - 2024-11-29"},{"location":"system-desing/crud-app/JS/server/node_modules/gopd/CHANGELOG/#commits_1","text":"[New] add types f585e39 [Dev Deps] update @ljharb/eslint-config , auto-changelog , tape 0b8e4fd [Dev Deps] update aud , npmignore , tape 48378b2 [Dev Deps] update @ljharb/eslint-config , aud , tape 78099ee [Tests] replace aud with npm audit 4e0d0ac [meta] add missing engines.node 1443316 [Deps] update get-intrinsic eee5f51 [Deps] update get-intrinsic 550c378 [Dev Deps] add missing peer dep 8c2ecf8","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/gopd/CHANGELOG/#v101-2022-11-01","text":"","title":"v1.0.1 - 2022-11-01"},{"location":"system-desing/crud-app/JS/server/node_modules/gopd/CHANGELOG/#commits_2","text":"[Fix] actually export gOPD instead of dP 4b624bf","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/gopd/CHANGELOG/#v100-2022-11-01","text":"","title":"v1.0.0 - 2022-11-01"},{"location":"system-desing/crud-app/JS/server/node_modules/gopd/CHANGELOG/#commits_3","text":"Initial implementation, tests, readme 0911e01 Initial commit b84e33f [actions] add reusable workflows 12ae28a npm init 280118b [meta] add auto-changelog bb78de5 [meta] create FUNDING.yml; add funding in package.json 11c22e6 [meta] use npmignore to autogenerate an npmignore file 4f4537a Only apps should have lockfiles c567022","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/has-flag/readme/","text":"has-flag Check if argv has a specific flag Correctly stops looking after an -- argument terminator. Install $ npm install has-flag Usage // foo.js const hasFlag = require ( 'has-flag' ); hasFlag ( 'unicorn' ); //=> true hasFlag ( '--unicorn' ); //=> true hasFlag ( 'f' ); //=> true hasFlag ( '-f' ); //=> true hasFlag ( 'foo=bar' ); //=> true hasFlag ( 'foo' ); //=> false hasFlag ( 'rainbow' ); //=> false $ node foo.js -f --unicorn --foo=bar -- --rainbow API hasFlag(flag, [argv]) Returns a boolean for whether the flag exists. flag Type: string CLI flag to look for. The -- prefix is optional. argv Type: string[] Default: process.argv CLI arguments. License MIT \u00a9 Sindre Sorhus","title":"has-flag Build Status"},{"location":"system-desing/crud-app/JS/server/node_modules/has-flag/readme/#has-flag","text":"Check if argv has a specific flag Correctly stops looking after an -- argument terminator.","title":"has-flag"},{"location":"system-desing/crud-app/JS/server/node_modules/has-flag/readme/#install","text":"$ npm install has-flag","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/has-flag/readme/#usage","text":"// foo.js const hasFlag = require ( 'has-flag' ); hasFlag ( 'unicorn' ); //=> true hasFlag ( '--unicorn' ); //=> true hasFlag ( 'f' ); //=> true hasFlag ( '-f' ); //=> true hasFlag ( 'foo=bar' ); //=> true hasFlag ( 'foo' ); //=> false hasFlag ( 'rainbow' ); //=> false $ node foo.js -f --unicorn --foo=bar -- --rainbow","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/has-flag/readme/#api","text":"","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/has-flag/readme/#hasflagflag-argv","text":"Returns a boolean for whether the flag exists.","title":"hasFlag(flag, [argv])"},{"location":"system-desing/crud-app/JS/server/node_modules/has-flag/readme/#flag","text":"Type: string CLI flag to look for. The -- prefix is optional.","title":"flag"},{"location":"system-desing/crud-app/JS/server/node_modules/has-flag/readme/#argv","text":"Type: string[] Default: process.argv CLI arguments.","title":"argv"},{"location":"system-desing/crud-app/JS/server/node_modules/has-flag/readme/#license","text":"MIT \u00a9 Sindre Sorhus","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/","text":"has-symbols Determine if the JS environment has Symbol support. Supports spec, or shams. Example var hasSymbols = require ( 'has-symbols' ); hasSymbols () === true ; // if the environment has native Symbol support. Not polyfillable, not forgeable. var hasSymbolsKinda = require ( 'has-symbols/shams' ); hasSymbolsKinda () === true ; // if the environment has a Symbol sham that mostly follows the spec. Supported Symbol shams get-own-property-symbols npm | github core-js npm | github Tests Simply clone the repo, npm install , and run npm test","title":"has-symbols Version Badge"},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/#has-symbols","text":"Determine if the JS environment has Symbol support. Supports spec, or shams.","title":"has-symbols"},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/#example","text":"var hasSymbols = require ( 'has-symbols' ); hasSymbols () === true ; // if the environment has native Symbol support. Not polyfillable, not forgeable. var hasSymbolsKinda = require ( 'has-symbols/shams' ); hasSymbolsKinda () === true ; // if the environment has a Symbol sham that mostly follows the spec.","title":"Example"},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/#supported-symbol-shams","text":"get-own-property-symbols npm | github core-js npm | github","title":"Supported Symbol shams"},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.1.0 - 2024-12-02 Commits [actions] update workflows 548c0bf [actions] further shard; update action deps bec56bb [meta] use npmignore to autogenerate an npmignore file ac81032 [New] add types 6469cbf [actions] update rebase action to use reusable workflow 9c9d4d0 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape adb5887 [Dev Deps] update @ljharb/eslint-config , aud , tape 13ec198 [Dev Deps] update auto-changelog , core-js , tape 941be52 [Tests] replace aud with npm audit 74f49e9 [Dev Deps] update npmignore 9c0ac04 [Dev Deps] add missing peer dep 52337a5 v1.0.3 - 2022-03-01 Commits [actions] use node/install instead of node/run ; use codecov action 518b28f [meta] add bugs and homepage fields; reorder package.json c480b13 [actions] reuse common workflows 01d0ee0 [actions] update codecov uploader 6424ebe [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape dfa7e7f [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , tape 0c8d436 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 9026554 [readme] add actions and codecov badges eaa9682 [Dev Deps] update eslint , tape bc7a3ba [Dev Deps] update eslint , auto-changelog 0ace00a [meta] use prepublishOnly script for npm 7+ 093f72b [Tests] test on all 16 minors 9b80d3d v1.0.2 - 2021-02-27 Fixed [Fix] use a universal way to get the original Symbol #11 Commits [Tests] migrate tests to Github Actions 90ae798 [meta] do not publish github action workflow files 29e60a1 [Tests] run nyc on all tests 8476b91 [readme] fix repo URLs, remove defunct badges 126288e [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , core-js , get-own-property-symbols d84bdfa [Tests] fix linting errors 0df3070 [actions] add \"Allow Edits\" workflow 1e6bc29 [Dev Deps] update eslint , @ljharb/eslint-config , tape 36cea2a [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 1278338 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 1493254 [Dev Deps] update eslint , @ljharb/eslint-config , core-js b090bf2 [actions] switch Automatic Rebase workflow to pull_request_target event 4addb7a [Dev Deps] update auto-changelog , tape 81d0baf [Dev Deps] update auto-changelog ; add aud 1a4e561 [readme] remove unused testling URLs 3000941 [Tests] only audit prod deps 692e974 [Dev Deps] update @ljharb/eslint-config 51c946c v1.0.1 - 2019-11-16 Commits [Tests] use shared travis-ci configs ce396c9 [Tests] up to node v12.4 , v11.15 , v10.15 , v9.11 , v8.15 , v7.10 , v6.17 , v4.9 ; use nvm install-latest-npm 0690732 [meta] add auto-changelog 2163d0b [Dev Deps] update eslint , @ljharb/eslint-config , core-js , safe-publish-latest , tape 8e0951f [actions] add automatic rebasing / merge commit blocking b09cdb7 [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , core-js , get-own-property-symbols , tape 1dd42cd [meta] create FUNDING.yml aa57a17 Only apps should have lockfiles a2d8bea [Tests] use npx aud instead of nsp or npm audit with hoops 9e96cb7 [meta] add funding field a0b32cf [Dev Deps] update safe-publish-latest cb9f0a5 v1.0.0 - 2016-09-19 Commits Tests. ecb6eb9 package.json 88a337c Initial commit 42e1e55 Initial implementation. 33f5cc6 read me 01f1170","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/CHANGELOG/#v110-2024-12-02","text":"","title":"v1.1.0 - 2024-12-02"},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/CHANGELOG/#commits","text":"[actions] update workflows 548c0bf [actions] further shard; update action deps bec56bb [meta] use npmignore to autogenerate an npmignore file ac81032 [New] add types 6469cbf [actions] update rebase action to use reusable workflow 9c9d4d0 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape adb5887 [Dev Deps] update @ljharb/eslint-config , aud , tape 13ec198 [Dev Deps] update auto-changelog , core-js , tape 941be52 [Tests] replace aud with npm audit 74f49e9 [Dev Deps] update npmignore 9c0ac04 [Dev Deps] add missing peer dep 52337a5","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/CHANGELOG/#v103-2022-03-01","text":"","title":"v1.0.3 - 2022-03-01"},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/CHANGELOG/#commits_1","text":"[actions] use node/install instead of node/run ; use codecov action 518b28f [meta] add bugs and homepage fields; reorder package.json c480b13 [actions] reuse common workflows 01d0ee0 [actions] update codecov uploader 6424ebe [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape dfa7e7f [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , tape 0c8d436 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 9026554 [readme] add actions and codecov badges eaa9682 [Dev Deps] update eslint , tape bc7a3ba [Dev Deps] update eslint , auto-changelog 0ace00a [meta] use prepublishOnly script for npm 7+ 093f72b [Tests] test on all 16 minors 9b80d3d","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/CHANGELOG/#v102-2021-02-27","text":"","title":"v1.0.2 - 2021-02-27"},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/CHANGELOG/#fixed","text":"[Fix] use a universal way to get the original Symbol #11","title":"Fixed"},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/CHANGELOG/#commits_2","text":"[Tests] migrate tests to Github Actions 90ae798 [meta] do not publish github action workflow files 29e60a1 [Tests] run nyc on all tests 8476b91 [readme] fix repo URLs, remove defunct badges 126288e [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , core-js , get-own-property-symbols d84bdfa [Tests] fix linting errors 0df3070 [actions] add \"Allow Edits\" workflow 1e6bc29 [Dev Deps] update eslint , @ljharb/eslint-config , tape 36cea2a [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 1278338 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 1493254 [Dev Deps] update eslint , @ljharb/eslint-config , core-js b090bf2 [actions] switch Automatic Rebase workflow to pull_request_target event 4addb7a [Dev Deps] update auto-changelog , tape 81d0baf [Dev Deps] update auto-changelog ; add aud 1a4e561 [readme] remove unused testling URLs 3000941 [Tests] only audit prod deps 692e974 [Dev Deps] update @ljharb/eslint-config 51c946c","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/CHANGELOG/#v101-2019-11-16","text":"","title":"v1.0.1 - 2019-11-16"},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/CHANGELOG/#commits_3","text":"[Tests] use shared travis-ci configs ce396c9 [Tests] up to node v12.4 , v11.15 , v10.15 , v9.11 , v8.15 , v7.10 , v6.17 , v4.9 ; use nvm install-latest-npm 0690732 [meta] add auto-changelog 2163d0b [Dev Deps] update eslint , @ljharb/eslint-config , core-js , safe-publish-latest , tape 8e0951f [actions] add automatic rebasing / merge commit blocking b09cdb7 [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , core-js , get-own-property-symbols , tape 1dd42cd [meta] create FUNDING.yml aa57a17 Only apps should have lockfiles a2d8bea [Tests] use npx aud instead of nsp or npm audit with hoops 9e96cb7 [meta] add funding field a0b32cf [Dev Deps] update safe-publish-latest cb9f0a5","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/CHANGELOG/#v100-2016-09-19","text":"","title":"v1.0.0 - 2016-09-19"},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/CHANGELOG/#commits_4","text":"Tests. ecb6eb9 package.json 88a337c Initial commit 42e1e55 Initial implementation. 33f5cc6 read me 01f1170","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/hasown/","text":"hasown A robust, ES3 compatible, \"has own property\" predicate. Example const assert = require ( 'assert' ); const hasOwn = require ( 'hasown' ); assert . equal ( hasOwn ({}, 'toString' ), false ); assert . equal ( hasOwn ([], 'length' ), true ); assert . equal ( hasOwn ({ a : 42 }, 'a' ), true ); Tests Simply clone the repo, npm install , and run npm test","title":"hasown Version Badge"},{"location":"system-desing/crud-app/JS/server/node_modules/hasown/#hasown","text":"A robust, ES3 compatible, \"has own property\" predicate.","title":"hasown"},{"location":"system-desing/crud-app/JS/server/node_modules/hasown/#example","text":"const assert = require ( 'assert' ); const hasOwn = require ( 'hasown' ); assert . equal ( hasOwn ({}, 'toString' ), false ); assert . equal ( hasOwn ([], 'length' ), true ); assert . equal ( hasOwn ({ a : 42 }, 'a' ), true );","title":"Example"},{"location":"system-desing/crud-app/JS/server/node_modules/hasown/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"system-desing/crud-app/JS/server/node_modules/hasown/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v2.0.2 - 2024-03-10 Commits [types] use shared config 68e9d4d [actions] remove redundant finisher; use reusable workflow 241a68e [Tests] increase coverage 4125c0d [Tests] skip npm ls in old node due to TS 01b9282 [types] improve predicate type d340f85 [Dev Deps] update tape 70089fc [Tests] use @arethetypeswrong/cli 50b272c v2.0.1 - 2024-02-10 Commits [types] use a handwritten d.ts file; fix exported type 012b989 [Dev Deps] update @types/function-bind , @types/mock-property , @types/tape , aud , mock-property , npmignore , tape , typescript 977a56f [meta] add sideEffects flag 3a60b7b v2.0.0 - 2023-10-19 Commits revamped implementation, tests, readme 72bf8b3 [meta] revamp package.json 079775f Only apps should have lockfiles 6640e23 v1.0.1 - 2023-10-10 Commits Initial commit 8dbfde6","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/hasown/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/hasown/CHANGELOG/#v202-2024-03-10","text":"","title":"v2.0.2 - 2024-03-10"},{"location":"system-desing/crud-app/JS/server/node_modules/hasown/CHANGELOG/#commits","text":"[types] use shared config 68e9d4d [actions] remove redundant finisher; use reusable workflow 241a68e [Tests] increase coverage 4125c0d [Tests] skip npm ls in old node due to TS 01b9282 [types] improve predicate type d340f85 [Dev Deps] update tape 70089fc [Tests] use @arethetypeswrong/cli 50b272c","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/hasown/CHANGELOG/#v201-2024-02-10","text":"","title":"v2.0.1 - 2024-02-10"},{"location":"system-desing/crud-app/JS/server/node_modules/hasown/CHANGELOG/#commits_1","text":"[types] use a handwritten d.ts file; fix exported type 012b989 [Dev Deps] update @types/function-bind , @types/mock-property , @types/tape , aud , mock-property , npmignore , tape , typescript 977a56f [meta] add sideEffects flag 3a60b7b","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/hasown/CHANGELOG/#v200-2023-10-19","text":"","title":"v2.0.0 - 2023-10-19"},{"location":"system-desing/crud-app/JS/server/node_modules/hasown/CHANGELOG/#commits_2","text":"revamped implementation, tests, readme 72bf8b3 [meta] revamp package.json 079775f Only apps should have lockfiles 6640e23","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/hasown/CHANGELOG/#v101-2023-10-10","text":"","title":"v1.0.1 - 2023-10-10"},{"location":"system-desing/crud-app/JS/server/node_modules/hasown/CHANGELOG/#commits_3","text":"Initial commit 8dbfde6","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/","text":"http-errors Create HTTP errors for Express, Koa, Connect, etc. with ease. Install This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install http-errors Example var createError = require ( 'http-errors' ) var express = require ( 'express' ) var app = express () app . use ( function ( req , res , next ) { if ( ! req . user ) return next ( createError ( 401 , 'Please login to view this page.' )) next () }) API This is the current API, currently extracted from Koa and subject to change. Error Properties expose - can be used to signal if message should be sent to the client, defaulting to false when status >= 500 headers - can be an object of header names to values to be sent to the client, defaulting to undefined . When defined, the key names should all be lower-cased message - the traditional error message, which should be kept short and all single line status - the status code of the error, mirroring statusCode for general compatibility statusCode - the status code of the error, defaulting to 500 createError([status], [message], [properties]) Create a new error object with the given message msg . The error object inherits from createError.HttpError . var err = createError ( 404 , 'This video does not exist!' ) status: 500 - the status code as a number message - the message of the error, defaulting to node's text for that status code. properties - custom properties to attach to the object createError([status], [error], [properties]) Extend the given error object with createError.HttpError properties. This will not alter the inheritance of the given error object, and the modified error object is the return value. fs . readFile ( 'foo.txt' , function ( err , buf ) { if ( err ) { if ( err . code === 'ENOENT' ) { var httpError = createError ( 404 , err , { expose : false }) } else { var httpError = createError ( 500 , err ) } } }) status - the status code as a number error - the error object to extend properties - custom properties to attach to the object createError.isHttpError(val) Determine if the provided val is an HttpError . This will return true if the error inherits from the HttpError constructor of this module or matches the \"duck type\" for an error this module creates. All outputs from the createError factory will return true for this function, including if an non- HttpError was passed into the factory. new createError[code || name]([msg])) Create a new error object with the given message msg . The error object inherits from createError.HttpError . var err = new createError . NotFound () code - the status code as a number name - the name of the error as a \"bumpy case\", i.e. NotFound or InternalServerError . List of all constructors Status Code Constructor Name 400 BadRequest 401 Unauthorized 402 PaymentRequired 403 Forbidden 404 NotFound 405 MethodNotAllowed 406 NotAcceptable 407 ProxyAuthenticationRequired 408 RequestTimeout 409 Conflict 410 Gone 411 LengthRequired 412 PreconditionFailed 413 PayloadTooLarge 414 URITooLong 415 UnsupportedMediaType 416 RangeNotSatisfiable 417 ExpectationFailed 418 ImATeapot 421 MisdirectedRequest 422 UnprocessableEntity 423 Locked 424 FailedDependency 425 TooEarly 426 UpgradeRequired 428 PreconditionRequired 429 TooManyRequests 431 RequestHeaderFieldsTooLarge 451 UnavailableForLegalReasons 500 InternalServerError 501 NotImplemented 502 BadGateway 503 ServiceUnavailable 504 GatewayTimeout 505 HTTPVersionNotSupported 506 VariantAlsoNegotiates 507 InsufficientStorage 508 LoopDetected 509 BandwidthLimitExceeded 510 NotExtended 511 NetworkAuthenticationRequired License MIT","title":"http-errors"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/#http-errors","text":"Create HTTP errors for Express, Koa, Connect, etc. with ease.","title":"http-errors"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/#install","text":"This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install http-errors","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/#example","text":"var createError = require ( 'http-errors' ) var express = require ( 'express' ) var app = express () app . use ( function ( req , res , next ) { if ( ! req . user ) return next ( createError ( 401 , 'Please login to view this page.' )) next () })","title":"Example"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/#api","text":"This is the current API, currently extracted from Koa and subject to change.","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/#error-properties","text":"expose - can be used to signal if message should be sent to the client, defaulting to false when status >= 500 headers - can be an object of header names to values to be sent to the client, defaulting to undefined . When defined, the key names should all be lower-cased message - the traditional error message, which should be kept short and all single line status - the status code of the error, mirroring statusCode for general compatibility statusCode - the status code of the error, defaulting to 500","title":"Error Properties"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/#createerrorstatus-message-properties","text":"Create a new error object with the given message msg . The error object inherits from createError.HttpError . var err = createError ( 404 , 'This video does not exist!' ) status: 500 - the status code as a number message - the message of the error, defaulting to node's text for that status code. properties - custom properties to attach to the object","title":"createError([status], [message], [properties])"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/#createerrorstatus-error-properties","text":"Extend the given error object with createError.HttpError properties. This will not alter the inheritance of the given error object, and the modified error object is the return value. fs . readFile ( 'foo.txt' , function ( err , buf ) { if ( err ) { if ( err . code === 'ENOENT' ) { var httpError = createError ( 404 , err , { expose : false }) } else { var httpError = createError ( 500 , err ) } } }) status - the status code as a number error - the error object to extend properties - custom properties to attach to the object","title":"createError([status], [error], [properties])"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/#createerrorishttperrorval","text":"Determine if the provided val is an HttpError . This will return true if the error inherits from the HttpError constructor of this module or matches the \"duck type\" for an error this module creates. All outputs from the createError factory will return true for this function, including if an non- HttpError was passed into the factory.","title":"createError.isHttpError(val)"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/#new-createerrorcode-namemsg","text":"Create a new error object with the given message msg . The error object inherits from createError.HttpError . var err = new createError . NotFound () code - the status code as a number name - the name of the error as a \"bumpy case\", i.e. NotFound or InternalServerError .","title":"new createError[code || name]([msg]))"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/#list-of-all-constructors","text":"Status Code Constructor Name 400 BadRequest 401 Unauthorized 402 PaymentRequired 403 Forbidden 404 NotFound 405 MethodNotAllowed 406 NotAcceptable 407 ProxyAuthenticationRequired 408 RequestTimeout 409 Conflict 410 Gone 411 LengthRequired 412 PreconditionFailed 413 PayloadTooLarge 414 URITooLong 415 UnsupportedMediaType 416 RangeNotSatisfiable 417 ExpectationFailed 418 ImATeapot 421 MisdirectedRequest 422 UnprocessableEntity 423 Locked 424 FailedDependency 425 TooEarly 426 UpgradeRequired 428 PreconditionRequired 429 TooManyRequests 431 RequestHeaderFieldsTooLarge 451 UnavailableForLegalReasons 500 InternalServerError 501 NotImplemented 502 BadGateway 503 ServiceUnavailable 504 GatewayTimeout 505 HTTPVersionNotSupported 506 VariantAlsoNegotiates 507 InsufficientStorage 508 LoopDetected 509 BandwidthLimitExceeded 510 NotExtended 511 NetworkAuthenticationRequired","title":"List of all constructors"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/","text":"2.0.0 / 2021-12-17 Drop support for Node.js 0.6 Remove I'mateapot export; use ImATeapot instead Remove support for status being non-first argument Rename UnorderedCollection constructor to TooEarly deps: depd@2.0.0 Replace internal eval usage with Function constructor Use instance methods on process to check for listeners deps: statuses@2.0.1 Fix messaging casing of 418 I'm a Teapot Remove code 306 Rename 425 Unordered Collection to standard 425 Too Early 2021-11-14 / 1.8.1 deps: toidentifier@1.0.1 2020-06-29 / 1.8.0 Add isHttpError export to determine if value is an HTTP error deps: setprototypeof@1.2.0 2019-06-24 / 1.7.3 deps: inherits@2.0.4 2019-02-18 / 1.7.2 deps: setprototypeof@1.1.1 2018-09-08 / 1.7.1 Fix error creating objects in some environments 2018-07-30 / 1.7.0 Set constructor name when possible Use toidentifier module to make class names deps: statuses@'>= 1.5.0 < 2' 2018-03-29 / 1.6.3 deps: depd@~1.1.2 perf: remove argument reassignment deps: setprototypeof@1.1.0 deps: statuses@'>= 1.4.0 < 2' 2017-08-04 / 1.6.2 deps: depd@1.1.1 Remove unnecessary Buffer loading 2017-02-20 / 1.6.1 deps: setprototypeof@1.0.3 Fix shim for old browsers 2017-02-14 / 1.6.0 Accept custom 4xx and 5xx status codes in factory Add deprecation message to \"I'mateapot\" export Deprecate passing status code as anything except first argument in factory Deprecate using non-error status codes Make message property enumerable for HttpError s 2016-11-16 / 1.5.1 deps: inherits@2.0.3 Fix issue loading in browser deps: setprototypeof@1.0.2 deps: statuses@'>= 1.3.1 < 2' 2016-05-18 / 1.5.0 Support new code 421 Misdirected Request Use setprototypeof module to replace __proto__ setting deps: statuses@'>= 1.3.0 < 2' Add 421 Misdirected Request perf: enable strict mode perf: enable strict mode 2016-01-28 / 1.4.0 Add HttpError export, for err instanceof createError.HttpError deps: inherits@2.0.1 deps: statuses@'>= 1.2.1 < 2' Fix message for status 451 Remove incorrect nginx status code 2015-02-02 / 1.3.1 Fix regression where status can be overwritten in createError props 2015-02-01 / 1.3.0 Construct errors using defined constructors from createError Fix error names that are not identifiers createError[\"I'mateapot\"] is now createError.ImATeapot Set a meaningful name property on constructed errors 2014-12-09 / 1.2.8 Fix stack trace from exported function Remove arguments.callee usage 2014-10-14 / 1.2.7 Remove duplicate line 2014-10-02 / 1.2.6 Fix expose to be true for ClientError constructor 2014-09-28 / 1.2.5 deps: statuses@1 2014-09-21 / 1.2.4 Fix dependency version to work with old npm s 2014-09-21 / 1.2.3 deps: statuses@~1.1.0 2014-09-21 / 1.2.2 Fix publish error 2014-09-21 / 1.2.1 Support Node.js 0.6 Use inherits instead of util 2014-09-09 / 1.2.0 Fix the way inheriting functions Support expose being provided in properties argument 2014-09-08 / 1.1.0 Default status to 500 Support provided error to extend 2014-09-08 / 1.0.1 Fix accepting string message 2014-09-08 / 1.0.0 Initial release","title":"2.0.0 / 2021-12-17"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#200-2021-12-17","text":"Drop support for Node.js 0.6 Remove I'mateapot export; use ImATeapot instead Remove support for status being non-first argument Rename UnorderedCollection constructor to TooEarly deps: depd@2.0.0 Replace internal eval usage with Function constructor Use instance methods on process to check for listeners deps: statuses@2.0.1 Fix messaging casing of 418 I'm a Teapot Remove code 306 Rename 425 Unordered Collection to standard 425 Too Early","title":"2.0.0 / 2021-12-17"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2021-11-14-181","text":"deps: toidentifier@1.0.1","title":"2021-11-14 / 1.8.1"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2020-06-29-180","text":"Add isHttpError export to determine if value is an HTTP error deps: setprototypeof@1.2.0","title":"2020-06-29 / 1.8.0"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2019-06-24-173","text":"deps: inherits@2.0.4","title":"2019-06-24 / 1.7.3"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2019-02-18-172","text":"deps: setprototypeof@1.1.1","title":"2019-02-18 / 1.7.2"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2018-09-08-171","text":"Fix error creating objects in some environments","title":"2018-09-08 / 1.7.1"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2018-07-30-170","text":"Set constructor name when possible Use toidentifier module to make class names deps: statuses@'>= 1.5.0 < 2'","title":"2018-07-30 / 1.7.0"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2018-03-29-163","text":"deps: depd@~1.1.2 perf: remove argument reassignment deps: setprototypeof@1.1.0 deps: statuses@'>= 1.4.0 < 2'","title":"2018-03-29 / 1.6.3"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2017-08-04-162","text":"deps: depd@1.1.1 Remove unnecessary Buffer loading","title":"2017-08-04 / 1.6.2"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2017-02-20-161","text":"deps: setprototypeof@1.0.3 Fix shim for old browsers","title":"2017-02-20 / 1.6.1"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2017-02-14-160","text":"Accept custom 4xx and 5xx status codes in factory Add deprecation message to \"I'mateapot\" export Deprecate passing status code as anything except first argument in factory Deprecate using non-error status codes Make message property enumerable for HttpError s","title":"2017-02-14 / 1.6.0"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2016-11-16-151","text":"deps: inherits@2.0.3 Fix issue loading in browser deps: setprototypeof@1.0.2 deps: statuses@'>= 1.3.1 < 2'","title":"2016-11-16 / 1.5.1"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2016-05-18-150","text":"Support new code 421 Misdirected Request Use setprototypeof module to replace __proto__ setting deps: statuses@'>= 1.3.0 < 2' Add 421 Misdirected Request perf: enable strict mode perf: enable strict mode","title":"2016-05-18 / 1.5.0"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2016-01-28-140","text":"Add HttpError export, for err instanceof createError.HttpError deps: inherits@2.0.1 deps: statuses@'>= 1.2.1 < 2' Fix message for status 451 Remove incorrect nginx status code","title":"2016-01-28 / 1.4.0"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2015-02-02-131","text":"Fix regression where status can be overwritten in createError props","title":"2015-02-02 / 1.3.1"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2015-02-01-130","text":"Construct errors using defined constructors from createError Fix error names that are not identifiers createError[\"I'mateapot\"] is now createError.ImATeapot Set a meaningful name property on constructed errors","title":"2015-02-01 / 1.3.0"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2014-12-09-128","text":"Fix stack trace from exported function Remove arguments.callee usage","title":"2014-12-09 / 1.2.8"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2014-10-14-127","text":"Remove duplicate line","title":"2014-10-14 / 1.2.7"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2014-10-02-126","text":"Fix expose to be true for ClientError constructor","title":"2014-10-02 / 1.2.6"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2014-09-28-125","text":"deps: statuses@1","title":"2014-09-28 / 1.2.5"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2014-09-21-124","text":"Fix dependency version to work with old npm s","title":"2014-09-21 / 1.2.4"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2014-09-21-123","text":"deps: statuses@~1.1.0","title":"2014-09-21 / 1.2.3"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2014-09-21-122","text":"Fix publish error","title":"2014-09-21 / 1.2.2"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2014-09-21-121","text":"Support Node.js 0.6 Use inherits instead of util","title":"2014-09-21 / 1.2.1"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2014-09-09-120","text":"Fix the way inheriting functions Support expose being provided in properties argument","title":"2014-09-09 / 1.2.0"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2014-09-08-110","text":"Default status to 500 Support provided error to extend","title":"2014-09-08 / 1.1.0"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2014-09-08-101","text":"Fix accepting string message","title":"2014-09-08 / 1.0.1"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2014-09-08-100","text":"Initial release","title":"2014-09-08 / 1.0.0"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/","text":"iconv-lite: Pure JS character encoding conversion No need for native code compilation. Quick to install, works on Windows and in sandboxed environments like Cloud9 . Used in popular projects like Express.js (body_parser) , Grunt , Nodemailer , Yeoman and others. Faster than node-iconv (see below for performance comparison). Intuitive encode/decode API, including Streaming support. In-browser usage via browserify or webpack (~180kb gzip compressed with Buffer shim included). Typescript type definition file included. React Native is supported (need to install stream module to enable Streaming API). License: MIT. Usage Basic API var iconv = require ( 'iconv-lite' ); // Convert from an encoded buffer to a js string. str = iconv . decode ( Buffer . from ([ 0x68 , 0x65 , 0x6c , 0x6c , 0x6f ]), 'win1251' ); // Convert from a js string to an encoded buffer. buf = iconv . encode ( \"Sample input string\" , 'win1251' ); // Check if encoding is supported iconv . encodingExists ( \"us-ascii\" ) Streaming API // Decode stream (from binary data stream to js strings) http . createServer ( function ( req , res ) { var converterStream = iconv . decodeStream ( 'win1251' ); req . pipe ( converterStream ); converterStream . on ( 'data' , function ( str ) { console . log ( str ); // Do something with decoded strings, chunk-by-chunk. }); }); // Convert encoding streaming example fs . createReadStream ( 'file-in-win1251.txt' ) . pipe ( iconv . decodeStream ( 'win1251' )) . pipe ( iconv . encodeStream ( 'ucs2' )) . pipe ( fs . createWriteStream ( 'file-in-ucs2.txt' )); // Sugar: all encode/decode streams have .collect(cb) method to accumulate data. http . createServer ( function ( req , res ) { req . pipe ( iconv . decodeStream ( 'win1251' )). collect ( function ( err , body ) { assert ( typeof body == 'string' ); console . log ( body ); // full request body string }); }); Supported encodings All node.js native encodings: utf8, ucs2 / utf16-le, ascii, binary, base64, hex. Additional unicode encodings: utf16, utf16-be, utf-7, utf-7-imap, utf32, utf32-le, and utf32-be. All widespread singlebyte encodings: Windows 125x family, ISO-8859 family, IBM/DOS codepages, Macintosh family, KOI8 family, all others supported by iconv library. Aliases like 'latin1', 'us-ascii' also supported. All widespread multibyte encodings: CP932, CP936, CP949, CP950, GB2312, GBK, GB18030, Big5, Shift_JIS, EUC-JP. See all supported encodings on wiki . Most singlebyte encodings are generated automatically from node-iconv . Thank you Ben Noordhuis and libiconv authors! Multibyte encodings are generated from Unicode.org mappings and WHATWG Encoding Standard mappings . Thank you, respective authors! Encoding/decoding speed Comparison with node-iconv module (1000x256kb, on MacBook Pro, Core i5/2.6 GHz, Node v0.12.0). Note: your results may vary, so please always check on your hardware. operation iconv@2.1.4 iconv-lite@0.4.7 ---------------------------------------------------------- encode('win1251') ~96 Mb/s ~320 Mb/s decode('win1251') ~95 Mb/s ~246 Mb/s BOM handling Decoding: BOM is stripped by default, unless overridden by passing stripBOM: false in options (f.ex. iconv.decode(buf, enc, {stripBOM: false}) ). A callback might also be given as a stripBOM parameter - it'll be called if BOM character was actually found. If you want to detect UTF-8 BOM when decoding other encodings, use node-autodetect-decoder-stream module. Encoding: No BOM added, unless overridden by addBOM: true option. UTF-16 Encodings This library supports UTF-16LE, UTF-16BE and UTF-16 encodings. First two are straightforward, but UTF-16 is trying to be smart about endianness in the following ways: * Decoding: uses BOM and 'spaces heuristic' to determine input endianness. Default is UTF-16LE, but can be overridden with defaultEncoding: 'utf-16be' option. Strips BOM unless stripBOM: false . * Encoding: uses UTF-16LE and writes BOM by default. Use addBOM: false to override. UTF-32 Encodings This library supports UTF-32LE, UTF-32BE and UTF-32 encodings. Like the UTF-16 encoding above, UTF-32 defaults to UTF-32LE, but uses BOM and 'spaces heuristics' to determine input endianness. * The default of UTF-32LE can be overridden with the defaultEncoding: 'utf-32be' option. Strips BOM unless stripBOM: false . * Encoding: uses UTF-32LE and writes BOM by default. Use addBOM: false to override. ( defaultEncoding: 'utf-32be' can also be used here to change encoding.) Other notes When decoding, be sure to supply a Buffer to decode() method, otherwise bad things usually happen . Untranslatable characters are set to \ufffd or ?. No transliteration is currently supported. Node versions 0.10.31 and 0.11.13 are buggy, don't use them (see #65, #77). Testing $ git clone git@github.com:ashtuchkin/iconv-lite.git $ cd iconv-lite $ npm install $ npm test $ # To view performance: $ node test/performance.js $ # To view test coverage: $ npm run coverage $ open coverage/lcov-report/index.html","title":"Index"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/#iconv-lite-pure-js-character-encoding-conversion","text":"No need for native code compilation. Quick to install, works on Windows and in sandboxed environments like Cloud9 . Used in popular projects like Express.js (body_parser) , Grunt , Nodemailer , Yeoman and others. Faster than node-iconv (see below for performance comparison). Intuitive encode/decode API, including Streaming support. In-browser usage via browserify or webpack (~180kb gzip compressed with Buffer shim included). Typescript type definition file included. React Native is supported (need to install stream module to enable Streaming API). License: MIT.","title":"iconv-lite: Pure JS character encoding conversion"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/#usage","text":"","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/#basic-api","text":"var iconv = require ( 'iconv-lite' ); // Convert from an encoded buffer to a js string. str = iconv . decode ( Buffer . from ([ 0x68 , 0x65 , 0x6c , 0x6c , 0x6f ]), 'win1251' ); // Convert from a js string to an encoded buffer. buf = iconv . encode ( \"Sample input string\" , 'win1251' ); // Check if encoding is supported iconv . encodingExists ( \"us-ascii\" )","title":"Basic API"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/#streaming-api","text":"// Decode stream (from binary data stream to js strings) http . createServer ( function ( req , res ) { var converterStream = iconv . decodeStream ( 'win1251' ); req . pipe ( converterStream ); converterStream . on ( 'data' , function ( str ) { console . log ( str ); // Do something with decoded strings, chunk-by-chunk. }); }); // Convert encoding streaming example fs . createReadStream ( 'file-in-win1251.txt' ) . pipe ( iconv . decodeStream ( 'win1251' )) . pipe ( iconv . encodeStream ( 'ucs2' )) . pipe ( fs . createWriteStream ( 'file-in-ucs2.txt' )); // Sugar: all encode/decode streams have .collect(cb) method to accumulate data. http . createServer ( function ( req , res ) { req . pipe ( iconv . decodeStream ( 'win1251' )). collect ( function ( err , body ) { assert ( typeof body == 'string' ); console . log ( body ); // full request body string }); });","title":"Streaming API"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/#supported-encodings","text":"All node.js native encodings: utf8, ucs2 / utf16-le, ascii, binary, base64, hex. Additional unicode encodings: utf16, utf16-be, utf-7, utf-7-imap, utf32, utf32-le, and utf32-be. All widespread singlebyte encodings: Windows 125x family, ISO-8859 family, IBM/DOS codepages, Macintosh family, KOI8 family, all others supported by iconv library. Aliases like 'latin1', 'us-ascii' also supported. All widespread multibyte encodings: CP932, CP936, CP949, CP950, GB2312, GBK, GB18030, Big5, Shift_JIS, EUC-JP. See all supported encodings on wiki . Most singlebyte encodings are generated automatically from node-iconv . Thank you Ben Noordhuis and libiconv authors! Multibyte encodings are generated from Unicode.org mappings and WHATWG Encoding Standard mappings . Thank you, respective authors!","title":"Supported encodings"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/#encodingdecoding-speed","text":"Comparison with node-iconv module (1000x256kb, on MacBook Pro, Core i5/2.6 GHz, Node v0.12.0). Note: your results may vary, so please always check on your hardware. operation iconv@2.1.4 iconv-lite@0.4.7 ---------------------------------------------------------- encode('win1251') ~96 Mb/s ~320 Mb/s decode('win1251') ~95 Mb/s ~246 Mb/s","title":"Encoding/decoding speed"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/#bom-handling","text":"Decoding: BOM is stripped by default, unless overridden by passing stripBOM: false in options (f.ex. iconv.decode(buf, enc, {stripBOM: false}) ). A callback might also be given as a stripBOM parameter - it'll be called if BOM character was actually found. If you want to detect UTF-8 BOM when decoding other encodings, use node-autodetect-decoder-stream module. Encoding: No BOM added, unless overridden by addBOM: true option.","title":"BOM handling"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/#utf-16-encodings","text":"This library supports UTF-16LE, UTF-16BE and UTF-16 encodings. First two are straightforward, but UTF-16 is trying to be smart about endianness in the following ways: * Decoding: uses BOM and 'spaces heuristic' to determine input endianness. Default is UTF-16LE, but can be overridden with defaultEncoding: 'utf-16be' option. Strips BOM unless stripBOM: false . * Encoding: uses UTF-16LE and writes BOM by default. Use addBOM: false to override.","title":"UTF-16 Encodings"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/#utf-32-encodings","text":"This library supports UTF-32LE, UTF-32BE and UTF-32 encodings. Like the UTF-16 encoding above, UTF-32 defaults to UTF-32LE, but uses BOM and 'spaces heuristics' to determine input endianness. * The default of UTF-32LE can be overridden with the defaultEncoding: 'utf-32be' option. Strips BOM unless stripBOM: false . * Encoding: uses UTF-32LE and writes BOM by default. Use addBOM: false to override. ( defaultEncoding: 'utf-32be' can also be used here to change encoding.)","title":"UTF-32 Encodings"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/#other-notes","text":"When decoding, be sure to supply a Buffer to decode() method, otherwise bad things usually happen . Untranslatable characters are set to \ufffd or ?. No transliteration is currently supported. Node versions 0.10.31 and 0.11.13 are buggy, don't use them (see #65, #77).","title":"Other notes"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/#testing","text":"$ git clone git@github.com:ashtuchkin/iconv-lite.git $ cd iconv-lite $ npm install $ npm test $ # To view performance: $ node test/performance.js $ # To view test coverage: $ npm run coverage $ open coverage/lcov-report/index.html","title":"Testing"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/","text":"0.6.3 / 2021-05-23 Fix HKSCS encoding to prefer Big5 codes if both Big5 and HKSCS codes are possible (#264) 0.6.2 / 2020-07-08 Support Uint8Array-s decoding without conversion to Buffers, plus fix an edge case. 0.6.1 / 2020-06-28 Support Uint8Array-s directly when decoding (#246, by @gyzerok) Unify package.json version ranges to be strictly semver-compatible (#241) Fix minor issue in UTF-32 decoder's endianness detection code. 0.6.0 / 2020-06-08 Updated 'gb18030' encoding to :2005 edition (see https://github.com/whatwg/encoding/issues/22). Removed iconv.extendNodeEncodings() mechanism. It was deprecated 5 years ago and didn't work in recent Node versions. Reworked Streaming API behavior in browser environments to fix #204. Streaming API will be excluded by default in browser packs, saving ~100Kb bundle size, unless enabled explicitly using iconv.enableStreamingAPI(require('stream')) . Updates to development environment & tests: Added ./test/webpack private package to test complex new use cases that need custom environment. It's tested as a separate job in Travis CI. Updated generation code for the new EUC-KR index file format from Encoding Standard. Removed Buffer() constructor in tests (#197 by @gabrielschulhof). 0.5.2 / 2020-06-08 Added iconv.getEncoder() and iconv.getDecoder() methods to typescript definitions (#229). Fixed semver version to 6.1.2 to support Node 8.x (by @tanandara). Capped iconv version to 2.x as 3.x has dropped support for older Node versions. Switched from instanbul to c8 for code coverage. 0.5.1 / 2020-01-18 Added cp720 encoding (#221, by @kr-deps) (minor) Changed Changelog.md formatting to use h2. 0.5.0 / 2019-06-26 Added UTF-32 encoding, both little-endian and big-endian variants (UTF-32LE, UTF32-BE). If endianness is not provided for decoding, it's deduced automatically from the stream using a heuristic similar to what we use in UTF-16. (great work in #216 by @kshetline) Several minor updates to README (#217 by @oldj, plus some more) Added Node versions 10 and 12 to Travis test harness. 0.4.24 / 2018-08-22 Added MIK encoding (#196, by @Ivan-Kalatchev) 0.4.23 / 2018-05-07 Fix deprecation warning in Node v10 due to the last usage of new Buffer (#185, by @felixbuenemann) Switched from NodeBuffer to Buffer in typings (#155 by @felixfbecker, #186 by @larssn) 0.4.22 / 2018-05-05 Use older semver style for dependencies to be compatible with Node version 0.10 (#182, by @dougwilson) Fix tests to accomodate fixes in Node v10 (#182, by @dougwilson) 0.4.21 / 2018-04-06 Fix encoding canonicalization (#156) Fix the paths in the \"browser\" field in package.json (#174 by @LMLB) Removed \"contributors\" section in package.json - see Git history instead. 0.4.20 / 2018-04-06 Updated new Buffer() usages with recommended replacements as it's being deprecated in Node v10 (#176, #178 by @ChALkeR) 0.4.19 / 2017-09-09 Fixed iso8859-1 codec regression in handling untranslatable characters (#162, caused by #147) Re-generated windows1255 codec, because it was updated in iconv project Fixed grammar in error message when iconv-lite is loaded with encoding other than utf8 0.4.18 / 2017-06-13 Fixed CESU-8 regression in Node v8. 0.4.17 / 2017-04-22 Updated typescript definition file to support Angular 2 AoT mode (#153 by @larssn) 0.4.16 / 2017-04-22 Added support for React Native (#150) Changed iso8859-1 encoding to usine internal 'binary' encoding, as it's the same thing (#147 by @mscdex) Fixed typo in Readme (#138 by @jiangzhuo) Fixed build for Node v6.10+ by making correct version comparison Added a warning if iconv-lite is loaded not as utf-8 (see #142) 0.4.15 / 2016-11-21 Fixed typescript type definition (#137) 0.4.14 / 2016-11-20 Preparation for v1.0 Added Node v6 and latest Node versions to Travis CI test rig Deprecated Node v0.8 support Typescript typings (@larssn) Fix encoding of Euro character in GB 18030 (inspired by @lygstate) Add ms prefix to dbcs windows encodings (@rokoroku) 0.4.13 / 2015-10-01 Fix silly mistake in deprecation notice. 0.4.12 / 2015-09-26 Node v4 support: Added CESU-8 decoding (#106) Added deprecation notice for extendNodeEncodings Added Travis tests for Node v4 and io.js latest (#105 by @Mithgol) 0.4.11 / 2015-07-03 Added CESU-8 encoding. 0.4.10 / 2015-05-26 Changed UTF-16 endianness heuristic to take into account any ASCII chars, not just spaces. This should minimize the importance of \"default\" endianness. 0.4.9 / 2015-05-24 Streamlined BOM handling: strip BOM by default, add BOM when encoding if addBOM: true. Added docs to Readme. UTF16 now uses UTF16-LE by default. Fixed minor issue with big5 encoding. Added io.js testing on Travis; updated node-iconv version to test against. Now we just skip testing SBCS encodings that node-iconv doesn't support. (internal refactoring) Updated codec interface to use classes. Use strict mode in all files. 0.4.8 / 2015-04-14 added alias UNICODE-1-1-UTF-7 for UTF-7 encoding (#94) 0.4.7 / 2015-02-05 stop official support of Node.js v0.8. Should still work, but no guarantees. reason: Packages needed for testing are hard to get on Travis CI. work in environment where Object.prototype is monkey patched with enumerable props (#89). 0.4.6 / 2015-01-12 fix rare aliases of single-byte encodings (thanks @mscdex) double the timeout for dbcs tests to make them less flaky on travis 0.4.5 / 2014-11-20 fix windows-31j and x-sjis encoding support (@nleush) minor fix: undefined variable reference when internal error happens 0.4.4 / 2014-07-16 added encodings UTF-7 (RFC2152) and UTF-7-IMAP (RFC3501 Section 5.1.3) fixed streaming base64 encoding 0.4.3 / 2014-06-14 added encodings UTF-16BE and UTF-16 with BOM 0.4.2 / 2014-06-12 don't throw exception if extendNodeEncodings() is called more than once 0.4.1 / 2014-06-11 codepage 808 added 0.4.0 / 2014-06-10 code is rewritten from scratch all widespread encodings are supported streaming interface added browserify compatibility added (optional) extend core primitive encodings to make usage even simpler moved from vows to mocha as the testing framework","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#063-2021-05-23","text":"Fix HKSCS encoding to prefer Big5 codes if both Big5 and HKSCS codes are possible (#264)","title":"0.6.3 / 2021-05-23"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#062-2020-07-08","text":"Support Uint8Array-s decoding without conversion to Buffers, plus fix an edge case.","title":"0.6.2 / 2020-07-08"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#061-2020-06-28","text":"Support Uint8Array-s directly when decoding (#246, by @gyzerok) Unify package.json version ranges to be strictly semver-compatible (#241) Fix minor issue in UTF-32 decoder's endianness detection code.","title":"0.6.1 / 2020-06-28"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#060-2020-06-08","text":"Updated 'gb18030' encoding to :2005 edition (see https://github.com/whatwg/encoding/issues/22). Removed iconv.extendNodeEncodings() mechanism. It was deprecated 5 years ago and didn't work in recent Node versions. Reworked Streaming API behavior in browser environments to fix #204. Streaming API will be excluded by default in browser packs, saving ~100Kb bundle size, unless enabled explicitly using iconv.enableStreamingAPI(require('stream')) . Updates to development environment & tests: Added ./test/webpack private package to test complex new use cases that need custom environment. It's tested as a separate job in Travis CI. Updated generation code for the new EUC-KR index file format from Encoding Standard. Removed Buffer() constructor in tests (#197 by @gabrielschulhof).","title":"0.6.0 / 2020-06-08"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#052-2020-06-08","text":"Added iconv.getEncoder() and iconv.getDecoder() methods to typescript definitions (#229). Fixed semver version to 6.1.2 to support Node 8.x (by @tanandara). Capped iconv version to 2.x as 3.x has dropped support for older Node versions. Switched from instanbul to c8 for code coverage.","title":"0.5.2 / 2020-06-08"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#051-2020-01-18","text":"Added cp720 encoding (#221, by @kr-deps) (minor) Changed Changelog.md formatting to use h2.","title":"0.5.1 / 2020-01-18"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#050-2019-06-26","text":"Added UTF-32 encoding, both little-endian and big-endian variants (UTF-32LE, UTF32-BE). If endianness is not provided for decoding, it's deduced automatically from the stream using a heuristic similar to what we use in UTF-16. (great work in #216 by @kshetline) Several minor updates to README (#217 by @oldj, plus some more) Added Node versions 10 and 12 to Travis test harness.","title":"0.5.0 / 2019-06-26"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0424-2018-08-22","text":"Added MIK encoding (#196, by @Ivan-Kalatchev)","title":"0.4.24 / 2018-08-22"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0423-2018-05-07","text":"Fix deprecation warning in Node v10 due to the last usage of new Buffer (#185, by @felixbuenemann) Switched from NodeBuffer to Buffer in typings (#155 by @felixfbecker, #186 by @larssn)","title":"0.4.23 / 2018-05-07"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0422-2018-05-05","text":"Use older semver style for dependencies to be compatible with Node version 0.10 (#182, by @dougwilson) Fix tests to accomodate fixes in Node v10 (#182, by @dougwilson)","title":"0.4.22 / 2018-05-05"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0421-2018-04-06","text":"Fix encoding canonicalization (#156) Fix the paths in the \"browser\" field in package.json (#174 by @LMLB) Removed \"contributors\" section in package.json - see Git history instead.","title":"0.4.21 / 2018-04-06"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0420-2018-04-06","text":"Updated new Buffer() usages with recommended replacements as it's being deprecated in Node v10 (#176, #178 by @ChALkeR)","title":"0.4.20 / 2018-04-06"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0419-2017-09-09","text":"Fixed iso8859-1 codec regression in handling untranslatable characters (#162, caused by #147) Re-generated windows1255 codec, because it was updated in iconv project Fixed grammar in error message when iconv-lite is loaded with encoding other than utf8","title":"0.4.19 / 2017-09-09"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0418-2017-06-13","text":"Fixed CESU-8 regression in Node v8.","title":"0.4.18 / 2017-06-13"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0417-2017-04-22","text":"Updated typescript definition file to support Angular 2 AoT mode (#153 by @larssn)","title":"0.4.17 / 2017-04-22"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0416-2017-04-22","text":"Added support for React Native (#150) Changed iso8859-1 encoding to usine internal 'binary' encoding, as it's the same thing (#147 by @mscdex) Fixed typo in Readme (#138 by @jiangzhuo) Fixed build for Node v6.10+ by making correct version comparison Added a warning if iconv-lite is loaded not as utf-8 (see #142)","title":"0.4.16 / 2017-04-22"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0415-2016-11-21","text":"Fixed typescript type definition (#137)","title":"0.4.15 / 2016-11-21"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0414-2016-11-20","text":"Preparation for v1.0 Added Node v6 and latest Node versions to Travis CI test rig Deprecated Node v0.8 support Typescript typings (@larssn) Fix encoding of Euro character in GB 18030 (inspired by @lygstate) Add ms prefix to dbcs windows encodings (@rokoroku)","title":"0.4.14 / 2016-11-20"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0413-2015-10-01","text":"Fix silly mistake in deprecation notice.","title":"0.4.13 / 2015-10-01"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0412-2015-09-26","text":"Node v4 support: Added CESU-8 decoding (#106) Added deprecation notice for extendNodeEncodings Added Travis tests for Node v4 and io.js latest (#105 by @Mithgol)","title":"0.4.12 / 2015-09-26"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0411-2015-07-03","text":"Added CESU-8 encoding.","title":"0.4.11 / 2015-07-03"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0410-2015-05-26","text":"Changed UTF-16 endianness heuristic to take into account any ASCII chars, not just spaces. This should minimize the importance of \"default\" endianness.","title":"0.4.10 / 2015-05-26"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#049-2015-05-24","text":"Streamlined BOM handling: strip BOM by default, add BOM when encoding if addBOM: true. Added docs to Readme. UTF16 now uses UTF16-LE by default. Fixed minor issue with big5 encoding. Added io.js testing on Travis; updated node-iconv version to test against. Now we just skip testing SBCS encodings that node-iconv doesn't support. (internal refactoring) Updated codec interface to use classes. Use strict mode in all files.","title":"0.4.9 / 2015-05-24"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#048-2015-04-14","text":"added alias UNICODE-1-1-UTF-7 for UTF-7 encoding (#94)","title":"0.4.8 / 2015-04-14"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#047-2015-02-05","text":"stop official support of Node.js v0.8. Should still work, but no guarantees. reason: Packages needed for testing are hard to get on Travis CI. work in environment where Object.prototype is monkey patched with enumerable props (#89).","title":"0.4.7 / 2015-02-05"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#046-2015-01-12","text":"fix rare aliases of single-byte encodings (thanks @mscdex) double the timeout for dbcs tests to make them less flaky on travis","title":"0.4.6 / 2015-01-12"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#045-2014-11-20","text":"fix windows-31j and x-sjis encoding support (@nleush) minor fix: undefined variable reference when internal error happens","title":"0.4.5 / 2014-11-20"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#044-2014-07-16","text":"added encodings UTF-7 (RFC2152) and UTF-7-IMAP (RFC3501 Section 5.1.3) fixed streaming base64 encoding","title":"0.4.4 / 2014-07-16"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#043-2014-06-14","text":"added encodings UTF-16BE and UTF-16 with BOM","title":"0.4.3 / 2014-06-14"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#042-2014-06-12","text":"don't throw exception if extendNodeEncodings() is called more than once","title":"0.4.2 / 2014-06-12"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#041-2014-06-11","text":"codepage 808 added","title":"0.4.1 / 2014-06-11"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#040-2014-06-10","text":"code is rewritten from scratch all widespread encodings are supported streaming interface added browserify compatibility added (optional) extend core primitive encodings to make usage even simpler moved from vows to mocha as the testing framework","title":"0.4.0 / 2014-06-10"},{"location":"system-desing/crud-app/JS/server/node_modules/ignore-by-default/","text":"ignore-by-default This is a package aimed at Node.js development tools. It provides a list of directories that should probably be ignored by such tools, e.g. when watching for file changes. It's used by AVA and nodemon . Please contribute! Installation npm install --save ignore-by-default Usage The ignore-by-default module exports a directories() function, which will return an array of directory names. These are the ones you should ignore. // ['.git', '.sass_cache', \u2026] var ignoredDirectories = require ( 'ignore-by-default' ). directories ()","title":"ignore-by-default"},{"location":"system-desing/crud-app/JS/server/node_modules/ignore-by-default/#ignore-by-default","text":"This is a package aimed at Node.js development tools. It provides a list of directories that should probably be ignored by such tools, e.g. when watching for file changes. It's used by AVA and nodemon . Please contribute!","title":"ignore-by-default"},{"location":"system-desing/crud-app/JS/server/node_modules/ignore-by-default/#installation","text":"npm install --save ignore-by-default","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/ignore-by-default/#usage","text":"The ignore-by-default module exports a directories() function, which will return an array of directory names. These are the ones you should ignore. // ['.git', '.sass_cache', \u2026] var ignoredDirectories = require ( 'ignore-by-default' ). directories ()","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/inherits/","text":"Browser-friendly inheritance fully compatible with standard node.js inherits . This package exports standard inherits from node.js util module in node environment, but also provides alternative browser-friendly implementation through browser field . Alternative implementation is a literal copy of standard one located in standalone module to avoid requiring of util . It also has a shim for old browsers with no Object.create support. While keeping you sure you are using standard inherits implementation in node.js environment, it allows bundlers such as browserify to not include full util package to your client code if all you need is just inherits function. It worth, because browser shim for util package is large and inherits is often the single function you need from it. It's recommended to use this package instead of require('util').inherits for any code that has chances to be used not only in node.js but in browser too. usage var inherits = require ( 'inherits' ); // then use exactly as the standard one note on version ~1.0 Version ~1.0 had completely different motivation and is not compatible neither with 2.0 nor with standard node.js inherits . If you are using version ~1.0 and planning to switch to ~2.0, be careful: new version uses super_ instead of super for referencing superclass new version overwrites current prototype while old one preserves any existing fields on it","title":"Index"},{"location":"system-desing/crud-app/JS/server/node_modules/inherits/#usage","text":"var inherits = require ( 'inherits' ); // then use exactly as the standard one","title":"usage"},{"location":"system-desing/crud-app/JS/server/node_modules/inherits/#note-on-version-10","text":"Version ~1.0 had completely different motivation and is not compatible neither with 2.0 nor with standard node.js inherits . If you are using version ~1.0 and planning to switch to ~2.0, be careful: new version uses super_ instead of super for referencing superclass new version overwrites current prototype while old one preserves any existing fields on it","title":"note on version ~1.0"},{"location":"system-desing/crud-app/JS/server/node_modules/ipaddr.js/","text":"ipaddr.js \u2014 an IPv6 and IPv4 address manipulation library ipaddr.js is a small (1.9K minified and gzipped) library for manipulating IP addresses in JavaScript environments. It runs on both CommonJS runtimes (e.g. nodejs ) and in a web browser. ipaddr.js allows you to verify and parse string representation of an IP address, match it against a CIDR range or range list, determine if it falls into some reserved ranges (examples include loopback and private ranges), and convert between IPv4 and IPv4-mapped IPv6 addresses. Installation npm install ipaddr.js or bower install ipaddr.js API ipaddr.js defines one object in the global scope: ipaddr . In CommonJS, it is exported from the module: var ipaddr = require ( 'ipaddr.js' ); The API consists of several global methods and two classes: ipaddr.IPv6 and ipaddr.IPv4. Global methods There are three global methods defined: ipaddr.isValid , ipaddr.parse and ipaddr.process . All of them receive a string as a single parameter. The ipaddr.isValid method returns true if the address is a valid IPv4 or IPv6 address, and false otherwise. It does not throw any exceptions. The ipaddr.parse method returns an object representing the IP address, or throws an Error if the passed string is not a valid representation of an IP address. The ipaddr.process method works just like the ipaddr.parse one, but it automatically converts IPv4-mapped IPv6 addresses to their IPv4 counterparts before returning. It is useful when you have a Node.js instance listening on an IPv6 socket, and the net.ivp6.bindv6only sysctl parameter (or its equivalent on non-Linux OS) is set to 0. In this case, you can accept IPv4 connections on your IPv6-only socket, but the remote address will be mangled. Use ipaddr.process method to automatically demangle it. Object representation Parsing methods return an object which descends from ipaddr.IPv6 or ipaddr.IPv4 . These objects share some properties, but most of them differ. Shared properties One can determine the type of address by calling addr.kind() . It will return either \"ipv6\" or \"ipv4\" . An address can be converted back to its string representation with addr.toString() . Note that this method: * does not return the original string used to create the object (in fact, there is no way of getting that string) * returns a compact representation (when it is applicable) A match(range, bits) method can be used to check if the address falls into a certain CIDR range. Note that an address can be (obviously) matched only against an address of the same type. For example: var addr = ipaddr . parse ( \"2001:db8:1234::1\" ); var range = ipaddr . parse ( \"2001:db8::\" ); addr . match ( range , 32 ); // => true Alternatively, match can also be called as match([range, bits]) . In this way, it can be used together with the parseCIDR(string) method, which parses an IP address together with a CIDR range. For example: var addr = ipaddr . parse ( \"2001:db8:1234::1\" ); addr . match ( ipaddr . parseCIDR ( \"2001:db8::/32\" )); // => true A range() method returns one of predefined names for several special ranges defined by IP protocols. The exact names (and their respective CIDR ranges) can be looked up in the source: IPv6 ranges and IPv4 ranges . Some common ones include \"unicast\" (the default one) and \"reserved\" . You can match against your own range list by using ipaddr.subnetMatch(address, rangeList, defaultName) method. It can work with a mix of IPv6 or IPv4 addresses, and accepts a name-to-subnet map as the range list. For example: var rangeList = { documentationOnly : [ ipaddr . parse ( '2001:db8::' ), 32 ], tunnelProviders : [ [ ipaddr . parse ( '2001:470::' ), 32 ], // he.net [ ipaddr . parse ( '2001:5c0::' ), 32 ] // freenet6 ] }; ipaddr . subnetMatch ( ipaddr . parse ( '2001:470:8:66::1' ), rangeList , 'unknown' ); // => \"tunnelProviders\" The addresses can be converted to their byte representation with toByteArray() . (Actually, JavaScript mostly does not know about byte buffers. They are emulated with arrays of numbers, each in range of 0..255.) var bytes = ipaddr . parse ( '2a00:1450:8007::68' ). toByteArray (); // ipv6.google.com bytes // => [42, 0x00, 0x14, 0x50, 0x80, 0x07, 0x00, <zeroes...>, 0x00, 0x68 ] The ipaddr.IPv4 and ipaddr.IPv6 objects have some methods defined, too. All of them have the same interface for both protocols, and are similar to global methods. ipaddr.IPvX.isValid(string) can be used to check if the string is a valid address for particular protocol, and ipaddr.IPvX.parse(string) is the error-throwing parser. ipaddr.IPvX.isValid(string) uses the same format for parsing as the POSIX inet_ntoa function, which accepts unusual formats like 0xc0.168.1.1 or 0x10000000 . The function ipaddr.IPv4.isValidFourPartDecimal(string) validates the IPv4 address and also ensures that it is written in four-part decimal format. IPv6 properties Sometimes you will want to convert IPv6 not to a compact string representation (with the :: substitution); the toNormalizedString() method will return an address where all zeroes are explicit. For example: var addr = ipaddr . parse ( \"2001:0db8::0001\" ); addr . toString (); // => \"2001:db8::1\" addr . toNormalizedString (); // => \"2001:db8:0:0:0:0:0:1\" The isIPv4MappedAddress() method will return true if this address is an IPv4-mapped one, and toIPv4Address() will return an IPv4 object address. To access the underlying binary representation of the address, use addr.parts . var addr = ipaddr . parse ( \"2001:db8:10::1234:DEAD\" ); addr . parts // => [0x2001, 0xdb8, 0x10, 0, 0, 0, 0x1234, 0xdead] A IPv6 zone index can be accessed via addr.zoneId : var addr = ipaddr . parse ( \"2001:db8::%eth0\" ); addr . zoneId // => 'eth0' IPv4 properties toIPv4MappedAddress() will return a corresponding IPv4-mapped IPv6 address. To access the underlying representation of the address, use addr.octets . var addr = ipaddr . parse ( \"192.168.1.1\" ); addr . octets // => [192, 168, 1, 1] prefixLengthFromSubnetMask() will return a CIDR prefix length for a valid IPv4 netmask or null if the netmask is not valid. ipaddr . IPv4 . parse ( '255.255.255.240' ). prefixLengthFromSubnetMask () == 28 ipaddr . IPv4 . parse ( '255.192.164.0' ). prefixLengthFromSubnetMask () == null subnetMaskFromPrefixLength() will return an IPv4 netmask for a valid CIDR prefix length. ipaddr . IPv4 . subnetMaskFromPrefixLength ( 24 ) == \"255.255.255.0\" ipaddr . IPv4 . subnetMaskFromPrefixLength ( 29 ) == \"255.255.255.248\" broadcastAddressFromCIDR() will return the broadcast address for a given IPv4 interface and netmask in CIDR notation. ipaddr . IPv4 . broadcastAddressFromCIDR ( \"172.0.0.1/24\" ) == \"172.0.0.255\" networkAddressFromCIDR() will return the network address for a given IPv4 interface and netmask in CIDR notation. ipaddr . IPv4 . networkAddressFromCIDR ( \"172.0.0.1/24\" ) == \"172.0.0.0\" Conversion IPv4 and IPv6 can be converted bidirectionally to and from network byte order (MSB) byte arrays. The fromByteArray() method will take an array and create an appropriate IPv4 or IPv6 object if the input satisfies the requirements. For IPv4 it has to be an array of four 8-bit values, while for IPv6 it has to be an array of sixteen 8-bit values. For example: var addr = ipaddr . fromByteArray ([ 0x7f , 0 , 0 , 1 ]); addr . toString (); // => \"127.0.0.1\" or var addr = ipaddr . fromByteArray ([ 0x20 , 1 , 0xd , 0xb8 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 ]) addr . toString (); // => \"2001:db8::1\" Both objects also offer a toByteArray() method, which returns an array in network byte order (MSB). For example: var addr = ipaddr . parse ( \"127.0.0.1\" ); addr . toByteArray (); // => [0x7f, 0, 0, 1] or var addr = ipaddr . parse ( \"2001:db8::1\" ); addr . toByteArray (); // => [0x20, 1, 0xd, 0xb8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]","title":"ipaddr.js \u2014 an IPv6 and IPv4 address manipulation library Build Status"},{"location":"system-desing/crud-app/JS/server/node_modules/ipaddr.js/#ipaddrjs-an-ipv6-and-ipv4-address-manipulation-library","text":"ipaddr.js is a small (1.9K minified and gzipped) library for manipulating IP addresses in JavaScript environments. It runs on both CommonJS runtimes (e.g. nodejs ) and in a web browser. ipaddr.js allows you to verify and parse string representation of an IP address, match it against a CIDR range or range list, determine if it falls into some reserved ranges (examples include loopback and private ranges), and convert between IPv4 and IPv4-mapped IPv6 addresses.","title":"ipaddr.js \u2014 an IPv6 and IPv4 address manipulation library"},{"location":"system-desing/crud-app/JS/server/node_modules/ipaddr.js/#installation","text":"npm install ipaddr.js or bower install ipaddr.js","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/ipaddr.js/#api","text":"ipaddr.js defines one object in the global scope: ipaddr . In CommonJS, it is exported from the module: var ipaddr = require ( 'ipaddr.js' ); The API consists of several global methods and two classes: ipaddr.IPv6 and ipaddr.IPv4.","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/ipaddr.js/#global-methods","text":"There are three global methods defined: ipaddr.isValid , ipaddr.parse and ipaddr.process . All of them receive a string as a single parameter. The ipaddr.isValid method returns true if the address is a valid IPv4 or IPv6 address, and false otherwise. It does not throw any exceptions. The ipaddr.parse method returns an object representing the IP address, or throws an Error if the passed string is not a valid representation of an IP address. The ipaddr.process method works just like the ipaddr.parse one, but it automatically converts IPv4-mapped IPv6 addresses to their IPv4 counterparts before returning. It is useful when you have a Node.js instance listening on an IPv6 socket, and the net.ivp6.bindv6only sysctl parameter (or its equivalent on non-Linux OS) is set to 0. In this case, you can accept IPv4 connections on your IPv6-only socket, but the remote address will be mangled. Use ipaddr.process method to automatically demangle it.","title":"Global methods"},{"location":"system-desing/crud-app/JS/server/node_modules/ipaddr.js/#object-representation","text":"Parsing methods return an object which descends from ipaddr.IPv6 or ipaddr.IPv4 . These objects share some properties, but most of them differ.","title":"Object representation"},{"location":"system-desing/crud-app/JS/server/node_modules/ipaddr.js/#shared-properties","text":"One can determine the type of address by calling addr.kind() . It will return either \"ipv6\" or \"ipv4\" . An address can be converted back to its string representation with addr.toString() . Note that this method: * does not return the original string used to create the object (in fact, there is no way of getting that string) * returns a compact representation (when it is applicable) A match(range, bits) method can be used to check if the address falls into a certain CIDR range. Note that an address can be (obviously) matched only against an address of the same type. For example: var addr = ipaddr . parse ( \"2001:db8:1234::1\" ); var range = ipaddr . parse ( \"2001:db8::\" ); addr . match ( range , 32 ); // => true Alternatively, match can also be called as match([range, bits]) . In this way, it can be used together with the parseCIDR(string) method, which parses an IP address together with a CIDR range. For example: var addr = ipaddr . parse ( \"2001:db8:1234::1\" ); addr . match ( ipaddr . parseCIDR ( \"2001:db8::/32\" )); // => true A range() method returns one of predefined names for several special ranges defined by IP protocols. The exact names (and their respective CIDR ranges) can be looked up in the source: IPv6 ranges and IPv4 ranges . Some common ones include \"unicast\" (the default one) and \"reserved\" . You can match against your own range list by using ipaddr.subnetMatch(address, rangeList, defaultName) method. It can work with a mix of IPv6 or IPv4 addresses, and accepts a name-to-subnet map as the range list. For example: var rangeList = { documentationOnly : [ ipaddr . parse ( '2001:db8::' ), 32 ], tunnelProviders : [ [ ipaddr . parse ( '2001:470::' ), 32 ], // he.net [ ipaddr . parse ( '2001:5c0::' ), 32 ] // freenet6 ] }; ipaddr . subnetMatch ( ipaddr . parse ( '2001:470:8:66::1' ), rangeList , 'unknown' ); // => \"tunnelProviders\" The addresses can be converted to their byte representation with toByteArray() . (Actually, JavaScript mostly does not know about byte buffers. They are emulated with arrays of numbers, each in range of 0..255.) var bytes = ipaddr . parse ( '2a00:1450:8007::68' ). toByteArray (); // ipv6.google.com bytes // => [42, 0x00, 0x14, 0x50, 0x80, 0x07, 0x00, <zeroes...>, 0x00, 0x68 ] The ipaddr.IPv4 and ipaddr.IPv6 objects have some methods defined, too. All of them have the same interface for both protocols, and are similar to global methods. ipaddr.IPvX.isValid(string) can be used to check if the string is a valid address for particular protocol, and ipaddr.IPvX.parse(string) is the error-throwing parser. ipaddr.IPvX.isValid(string) uses the same format for parsing as the POSIX inet_ntoa function, which accepts unusual formats like 0xc0.168.1.1 or 0x10000000 . The function ipaddr.IPv4.isValidFourPartDecimal(string) validates the IPv4 address and also ensures that it is written in four-part decimal format.","title":"Shared properties"},{"location":"system-desing/crud-app/JS/server/node_modules/ipaddr.js/#ipv6-properties","text":"Sometimes you will want to convert IPv6 not to a compact string representation (with the :: substitution); the toNormalizedString() method will return an address where all zeroes are explicit. For example: var addr = ipaddr . parse ( \"2001:0db8::0001\" ); addr . toString (); // => \"2001:db8::1\" addr . toNormalizedString (); // => \"2001:db8:0:0:0:0:0:1\" The isIPv4MappedAddress() method will return true if this address is an IPv4-mapped one, and toIPv4Address() will return an IPv4 object address. To access the underlying binary representation of the address, use addr.parts . var addr = ipaddr . parse ( \"2001:db8:10::1234:DEAD\" ); addr . parts // => [0x2001, 0xdb8, 0x10, 0, 0, 0, 0x1234, 0xdead] A IPv6 zone index can be accessed via addr.zoneId : var addr = ipaddr . parse ( \"2001:db8::%eth0\" ); addr . zoneId // => 'eth0'","title":"IPv6 properties"},{"location":"system-desing/crud-app/JS/server/node_modules/ipaddr.js/#ipv4-properties","text":"toIPv4MappedAddress() will return a corresponding IPv4-mapped IPv6 address. To access the underlying representation of the address, use addr.octets . var addr = ipaddr . parse ( \"192.168.1.1\" ); addr . octets // => [192, 168, 1, 1] prefixLengthFromSubnetMask() will return a CIDR prefix length for a valid IPv4 netmask or null if the netmask is not valid. ipaddr . IPv4 . parse ( '255.255.255.240' ). prefixLengthFromSubnetMask () == 28 ipaddr . IPv4 . parse ( '255.192.164.0' ). prefixLengthFromSubnetMask () == null subnetMaskFromPrefixLength() will return an IPv4 netmask for a valid CIDR prefix length. ipaddr . IPv4 . subnetMaskFromPrefixLength ( 24 ) == \"255.255.255.0\" ipaddr . IPv4 . subnetMaskFromPrefixLength ( 29 ) == \"255.255.255.248\" broadcastAddressFromCIDR() will return the broadcast address for a given IPv4 interface and netmask in CIDR notation. ipaddr . IPv4 . broadcastAddressFromCIDR ( \"172.0.0.1/24\" ) == \"172.0.0.255\" networkAddressFromCIDR() will return the network address for a given IPv4 interface and netmask in CIDR notation. ipaddr . IPv4 . networkAddressFromCIDR ( \"172.0.0.1/24\" ) == \"172.0.0.0\"","title":"IPv4 properties"},{"location":"system-desing/crud-app/JS/server/node_modules/ipaddr.js/#conversion","text":"IPv4 and IPv6 can be converted bidirectionally to and from network byte order (MSB) byte arrays. The fromByteArray() method will take an array and create an appropriate IPv4 or IPv6 object if the input satisfies the requirements. For IPv4 it has to be an array of four 8-bit values, while for IPv6 it has to be an array of sixteen 8-bit values. For example: var addr = ipaddr . fromByteArray ([ 0x7f , 0 , 0 , 1 ]); addr . toString (); // => \"127.0.0.1\" or var addr = ipaddr . fromByteArray ([ 0x20 , 1 , 0xd , 0xb8 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 ]) addr . toString (); // => \"2001:db8::1\" Both objects also offer a toByteArray() method, which returns an array in network byte order (MSB). For example: var addr = ipaddr . parse ( \"127.0.0.1\" ); addr . toByteArray (); // => [0x7f, 0, 0, 1] or var addr = ipaddr . parse ( \"2001:db8::1\" ); addr . toByteArray (); // => [0x20, 1, 0xd, 0xb8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]","title":"Conversion"},{"location":"system-desing/crud-app/JS/server/node_modules/is-binary-path/readme/","text":"is-binary-path Check if a file path is a binary file Install $ npm install is-binary-path Usage const isBinaryPath = require ( 'is-binary-path' ); isBinaryPath ( 'source/unicorn.png' ); //=> true isBinaryPath ( 'source/unicorn.txt' ); //=> false Related binary-extensions - List of binary file extensions is-text-path - Check if a filepath is a text file License MIT \u00a9 Sindre Sorhus , Paul Miller","title":"is-binary-path Build Status"},{"location":"system-desing/crud-app/JS/server/node_modules/is-binary-path/readme/#is-binary-path","text":"Check if a file path is a binary file","title":"is-binary-path"},{"location":"system-desing/crud-app/JS/server/node_modules/is-binary-path/readme/#install","text":"$ npm install is-binary-path","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/is-binary-path/readme/#usage","text":"const isBinaryPath = require ( 'is-binary-path' ); isBinaryPath ( 'source/unicorn.png' ); //=> true isBinaryPath ( 'source/unicorn.txt' ); //=> false","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/is-binary-path/readme/#related","text":"binary-extensions - List of binary file extensions is-text-path - Check if a filepath is a text file","title":"Related"},{"location":"system-desing/crud-app/JS/server/node_modules/is-binary-path/readme/#license","text":"MIT \u00a9 Sindre Sorhus , Paul Miller","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/is-extglob/","text":"is-extglob Returns true if a string has an extglob. Install Install with npm : $ npm install --save is-extglob Usage var isExtglob = require ( 'is-extglob' ); True isExtglob ( '?(abc)' ); isExtglob ( '@(abc)' ); isExtglob ( '!(abc)' ); isExtglob ( '*(abc)' ); isExtglob ( '+(abc)' ); False Escaped extglobs: isExtglob ( '\\\\?(abc)' ); isExtglob ( '\\\\@(abc)' ); isExtglob ( '\\\\!(abc)' ); isExtglob ( '\\\\*(abc)' ); isExtglob ( '\\\\+(abc)' ); Everything else... isExtglob ( 'foo.js' ); isExtglob ( '!foo.js' ); isExtglob ( '*.js' ); isExtglob ( '**/abc.js' ); isExtglob ( 'abc/*.js' ); isExtglob ( 'abc/(aaa|bbb).js' ); isExtglob ( 'abc/[a-z].js' ); isExtglob ( 'abc/{a,b}.js' ); isExtglob ( 'abc/?.js' ); isExtglob ( 'abc.js' ); isExtglob ( 'abc/def/ghi.js' ); History v2.0 Adds support for escaping. Escaped exglobs no longer return true. About Related projects has-glob : Returns true if an array has a glob pattern. | homepage is-glob : Returns true if the given string looks like a glob pattern or an extglob pattern\u2026 more | homepage micromatch : Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch. | homepage Contributing Pull requests and stars are always welcome. For bugs and feature requests, please create an issue . Building docs (This document was generated by verb-generate-readme (a verb generator), please don't edit the readme directly. Any changes to the readme must be made in .verb.md .) To generate the readme and API documentation with verb : $ npm install -g verb verb-generate-readme && verb Running tests Install dev dependencies: $ npm install -d && npm test Author Jon Schlinkert github/jonschlinkert twitter/jonschlinkert License Copyright \u00a9 2016, Jon Schlinkert . Released under the MIT license . This file was generated by verb-generate-readme , v0.1.31, on October 12, 2016.","title":"is-extglob NPM version NPM downloads Build Status"},{"location":"system-desing/crud-app/JS/server/node_modules/is-extglob/#is-extglob","text":"Returns true if a string has an extglob.","title":"is-extglob"},{"location":"system-desing/crud-app/JS/server/node_modules/is-extglob/#install","text":"Install with npm : $ npm install --save is-extglob","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/is-extglob/#usage","text":"var isExtglob = require ( 'is-extglob' ); True isExtglob ( '?(abc)' ); isExtglob ( '@(abc)' ); isExtglob ( '!(abc)' ); isExtglob ( '*(abc)' ); isExtglob ( '+(abc)' ); False Escaped extglobs: isExtglob ( '\\\\?(abc)' ); isExtglob ( '\\\\@(abc)' ); isExtglob ( '\\\\!(abc)' ); isExtglob ( '\\\\*(abc)' ); isExtglob ( '\\\\+(abc)' ); Everything else... isExtglob ( 'foo.js' ); isExtglob ( '!foo.js' ); isExtglob ( '*.js' ); isExtglob ( '**/abc.js' ); isExtglob ( 'abc/*.js' ); isExtglob ( 'abc/(aaa|bbb).js' ); isExtglob ( 'abc/[a-z].js' ); isExtglob ( 'abc/{a,b}.js' ); isExtglob ( 'abc/?.js' ); isExtglob ( 'abc.js' ); isExtglob ( 'abc/def/ghi.js' );","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/is-extglob/#history","text":"v2.0 Adds support for escaping. Escaped exglobs no longer return true.","title":"History"},{"location":"system-desing/crud-app/JS/server/node_modules/is-extglob/#about","text":"","title":"About"},{"location":"system-desing/crud-app/JS/server/node_modules/is-extglob/#related-projects","text":"has-glob : Returns true if an array has a glob pattern. | homepage is-glob : Returns true if the given string looks like a glob pattern or an extglob pattern\u2026 more | homepage micromatch : Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch. | homepage","title":"Related projects"},{"location":"system-desing/crud-app/JS/server/node_modules/is-extglob/#contributing","text":"Pull requests and stars are always welcome. For bugs and feature requests, please create an issue .","title":"Contributing"},{"location":"system-desing/crud-app/JS/server/node_modules/is-extglob/#building-docs","text":"(This document was generated by verb-generate-readme (a verb generator), please don't edit the readme directly. Any changes to the readme must be made in .verb.md .) To generate the readme and API documentation with verb : $ npm install -g verb verb-generate-readme && verb","title":"Building docs"},{"location":"system-desing/crud-app/JS/server/node_modules/is-extglob/#running-tests","text":"Install dev dependencies: $ npm install -d && npm test","title":"Running tests"},{"location":"system-desing/crud-app/JS/server/node_modules/is-extglob/#author","text":"Jon Schlinkert github/jonschlinkert twitter/jonschlinkert","title":"Author"},{"location":"system-desing/crud-app/JS/server/node_modules/is-extglob/#license","text":"Copyright \u00a9 2016, Jon Schlinkert . Released under the MIT license . This file was generated by verb-generate-readme , v0.1.31, on October 12, 2016.","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/is-glob/","text":"is-glob Returns true if the given string looks like a glob pattern or an extglob pattern. This makes it easy to create code that only uses external modules like node-glob when necessary, resulting in much faster code execution and initialization time, and a better user experience. Please consider following this project's author, Jon Schlinkert , and consider starring the project to show your and support. Install Install with npm : $ npm install --save is-glob You might also be interested in is-valid-glob and has-glob . Usage var isGlob = require ( 'is-glob' ); Default behavior True Patterns that have glob characters or regex patterns will return true : isGlob ( '!foo.js' ); isGlob ( '*.js' ); isGlob ( '**/abc.js' ); isGlob ( 'abc/*.js' ); isGlob ( 'abc/(aaa|bbb).js' ); isGlob ( 'abc/[a-z].js' ); isGlob ( 'abc/{a,b}.js' ); //=> true Extglobs isGlob ( 'abc/@(a).js' ); isGlob ( 'abc/!(a).js' ); isGlob ( 'abc/+(a).js' ); isGlob ( 'abc/*(a).js' ); isGlob ( 'abc/?(a).js' ); //=> true False Escaped globs or extglobs return false : isGlob ( 'abc/\\\\@(a).js' ); isGlob ( 'abc/\\\\!(a).js' ); isGlob ( 'abc/\\\\+(a).js' ); isGlob ( 'abc/\\\\*(a).js' ); isGlob ( 'abc/\\\\?(a).js' ); isGlob ( '\\\\!foo.js' ); isGlob ( '\\\\*.js' ); isGlob ( '\\\\*\\\\*/abc.js' ); isGlob ( 'abc/\\\\*.js' ); isGlob ( 'abc/\\\\(aaa|bbb).js' ); isGlob ( 'abc/\\\\[a-z].js' ); isGlob ( 'abc/\\\\{a,b}.js' ); //=> false Patterns that do not have glob patterns return false : isGlob ( 'abc.js' ); isGlob ( 'abc/def/ghi.js' ); isGlob ( 'foo.js' ); isGlob ( 'abc/@.js' ); isGlob ( 'abc/+.js' ); isGlob ( 'abc/?.js' ); isGlob (); isGlob ( null ); //=> false Arrays are also false (If you want to check if an array has a glob pattern, use has-glob ): isGlob ([ '**/*.js' ]); isGlob ([ 'foo.js' ]); //=> false Option strict When options.strict === false the behavior is less strict in determining if a pattern is a glob. Meaning that some patterns that would return false may return true . This is done so that matching libraries like micromatch have a chance at determining if the pattern is a glob or not. True Patterns that have glob characters or regex patterns will return true : isGlob ( '!foo.js' , { strict : false }); isGlob ( '*.js' , { strict : false }); isGlob ( '**/abc.js' , { strict : false }); isGlob ( 'abc/*.js' , { strict : false }); isGlob ( 'abc/(aaa|bbb).js' , { strict : false }); isGlob ( 'abc/[a-z].js' , { strict : false }); isGlob ( 'abc/{a,b}.js' , { strict : false }); //=> true Extglobs isGlob ( 'abc/@(a).js' , { strict : false }); isGlob ( 'abc/!(a).js' , { strict : false }); isGlob ( 'abc/+(a).js' , { strict : false }); isGlob ( 'abc/*(a).js' , { strict : false }); isGlob ( 'abc/?(a).js' , { strict : false }); //=> true False Escaped globs or extglobs return false : isGlob ( '\\\\!foo.js' , { strict : false }); isGlob ( '\\\\*.js' , { strict : false }); isGlob ( '\\\\*\\\\*/abc.js' , { strict : false }); isGlob ( 'abc/\\\\*.js' , { strict : false }); isGlob ( 'abc/\\\\(aaa|bbb).js' , { strict : false }); isGlob ( 'abc/\\\\[a-z].js' , { strict : false }); isGlob ( 'abc/\\\\{a,b}.js' , { strict : false }); //=> false About Contributing Pull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new). Running Tests Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command: $ npm install && npm test Building docs _(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_ To generate the readme, run the following command: $ npm install -g verbose/verb#dev verb-generate-readme && verb Related projects You might also be interested in these projects: assemble : Get the rocks out of your socks! Assemble makes you fast at creating web projects\u2026 more | homepage base : Framework for rapidly creating high quality, server-side node.js applications, using plugins like building blocks | homepage update : Be scalable! Update is a new, open source developer framework and CLI for automating updates\u2026 more | homepage verb : Documentation generator for GitHub projects. Verb is extremely powerful, easy to use, and is used\u2026 more | homepage Contributors Commits Contributor 47 jonschlinkert 5 doowb 1 phated 1 danhper 1 paulmillr Author Jon Schlinkert GitHub Profile Twitter Profile LinkedIn Profile License Copyright \u00a9 2019, Jon Schlinkert . Released under the MIT License . This file was generated by verb-generate-readme , v0.8.0, on March 27, 2019.","title":"is-glob NPM version NPM monthly downloads NPM total downloads Build Status"},{"location":"system-desing/crud-app/JS/server/node_modules/is-glob/#is-glob","text":"Returns true if the given string looks like a glob pattern or an extglob pattern. This makes it easy to create code that only uses external modules like node-glob when necessary, resulting in much faster code execution and initialization time, and a better user experience. Please consider following this project's author, Jon Schlinkert , and consider starring the project to show your and support.","title":"is-glob"},{"location":"system-desing/crud-app/JS/server/node_modules/is-glob/#install","text":"Install with npm : $ npm install --save is-glob You might also be interested in is-valid-glob and has-glob .","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/is-glob/#usage","text":"var isGlob = require ( 'is-glob' );","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/is-glob/#default-behavior","text":"True Patterns that have glob characters or regex patterns will return true : isGlob ( '!foo.js' ); isGlob ( '*.js' ); isGlob ( '**/abc.js' ); isGlob ( 'abc/*.js' ); isGlob ( 'abc/(aaa|bbb).js' ); isGlob ( 'abc/[a-z].js' ); isGlob ( 'abc/{a,b}.js' ); //=> true Extglobs isGlob ( 'abc/@(a).js' ); isGlob ( 'abc/!(a).js' ); isGlob ( 'abc/+(a).js' ); isGlob ( 'abc/*(a).js' ); isGlob ( 'abc/?(a).js' ); //=> true False Escaped globs or extglobs return false : isGlob ( 'abc/\\\\@(a).js' ); isGlob ( 'abc/\\\\!(a).js' ); isGlob ( 'abc/\\\\+(a).js' ); isGlob ( 'abc/\\\\*(a).js' ); isGlob ( 'abc/\\\\?(a).js' ); isGlob ( '\\\\!foo.js' ); isGlob ( '\\\\*.js' ); isGlob ( '\\\\*\\\\*/abc.js' ); isGlob ( 'abc/\\\\*.js' ); isGlob ( 'abc/\\\\(aaa|bbb).js' ); isGlob ( 'abc/\\\\[a-z].js' ); isGlob ( 'abc/\\\\{a,b}.js' ); //=> false Patterns that do not have glob patterns return false : isGlob ( 'abc.js' ); isGlob ( 'abc/def/ghi.js' ); isGlob ( 'foo.js' ); isGlob ( 'abc/@.js' ); isGlob ( 'abc/+.js' ); isGlob ( 'abc/?.js' ); isGlob (); isGlob ( null ); //=> false Arrays are also false (If you want to check if an array has a glob pattern, use has-glob ): isGlob ([ '**/*.js' ]); isGlob ([ 'foo.js' ]); //=> false","title":"Default behavior"},{"location":"system-desing/crud-app/JS/server/node_modules/is-glob/#option-strict","text":"When options.strict === false the behavior is less strict in determining if a pattern is a glob. Meaning that some patterns that would return false may return true . This is done so that matching libraries like micromatch have a chance at determining if the pattern is a glob or not. True Patterns that have glob characters or regex patterns will return true : isGlob ( '!foo.js' , { strict : false }); isGlob ( '*.js' , { strict : false }); isGlob ( '**/abc.js' , { strict : false }); isGlob ( 'abc/*.js' , { strict : false }); isGlob ( 'abc/(aaa|bbb).js' , { strict : false }); isGlob ( 'abc/[a-z].js' , { strict : false }); isGlob ( 'abc/{a,b}.js' , { strict : false }); //=> true Extglobs isGlob ( 'abc/@(a).js' , { strict : false }); isGlob ( 'abc/!(a).js' , { strict : false }); isGlob ( 'abc/+(a).js' , { strict : false }); isGlob ( 'abc/*(a).js' , { strict : false }); isGlob ( 'abc/?(a).js' , { strict : false }); //=> true False Escaped globs or extglobs return false : isGlob ( '\\\\!foo.js' , { strict : false }); isGlob ( '\\\\*.js' , { strict : false }); isGlob ( '\\\\*\\\\*/abc.js' , { strict : false }); isGlob ( 'abc/\\\\*.js' , { strict : false }); isGlob ( 'abc/\\\\(aaa|bbb).js' , { strict : false }); isGlob ( 'abc/\\\\[a-z].js' , { strict : false }); isGlob ( 'abc/\\\\{a,b}.js' , { strict : false }); //=> false","title":"Option strict"},{"location":"system-desing/crud-app/JS/server/node_modules/is-glob/#about","text":"Contributing Pull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new). Running Tests Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command: $ npm install && npm test Building docs _(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_ To generate the readme, run the following command: $ npm install -g verbose/verb#dev verb-generate-readme && verb","title":"About"},{"location":"system-desing/crud-app/JS/server/node_modules/is-glob/#related-projects","text":"You might also be interested in these projects: assemble : Get the rocks out of your socks! Assemble makes you fast at creating web projects\u2026 more | homepage base : Framework for rapidly creating high quality, server-side node.js applications, using plugins like building blocks | homepage update : Be scalable! Update is a new, open source developer framework and CLI for automating updates\u2026 more | homepage verb : Documentation generator for GitHub projects. Verb is extremely powerful, easy to use, and is used\u2026 more | homepage","title":"Related projects"},{"location":"system-desing/crud-app/JS/server/node_modules/is-glob/#contributors","text":"Commits Contributor 47 jonschlinkert 5 doowb 1 phated 1 danhper 1 paulmillr","title":"Contributors"},{"location":"system-desing/crud-app/JS/server/node_modules/is-glob/#author","text":"Jon Schlinkert GitHub Profile Twitter Profile LinkedIn Profile","title":"Author"},{"location":"system-desing/crud-app/JS/server/node_modules/is-glob/#license","text":"Copyright \u00a9 2019, Jon Schlinkert . Released under the MIT License . This file was generated by verb-generate-readme , v0.8.0, on March 27, 2019.","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/","text":"is-number Returns true if the value is a finite number. Please consider following this project's author, Jon Schlinkert , and consider starring the project to show your and support. Install Install with npm : $ npm install --save is-number Why is this needed? In JavaScript, it's not always as straightforward as it should be to reliably check if a value is a number. It's common for devs to use + , - , or Number() to cast a string value to a number (for example, when values are returned from user input, regex matches, parsers, etc). But there are many non-intuitive edge cases that yield unexpected results: console . log ( + []); //=> 0 console . log ( + '' ); //=> 0 console . log ( + ' ' ); //=> 0 console . log ( typeof NaN ); //=> 'number' This library offers a performant way to smooth out edge cases like these. Usage const isNumber = require ( 'is-number' ); See the tests for more examples. true isNumber ( 5e3 ); // true isNumber ( 0xff ); // true isNumber ( - 1.1 ); // true isNumber ( 0 ); // true isNumber ( 1 ); // true isNumber ( 1.1 ); // true isNumber ( 10 ); // true isNumber ( 10.10 ); // true isNumber ( 100 ); // true isNumber ( '-1.1' ); // true isNumber ( '0' ); // true isNumber ( '012' ); // true isNumber ( '0xff' ); // true isNumber ( '1' ); // true isNumber ( '1.1' ); // true isNumber ( '10' ); // true isNumber ( '10.10' ); // true isNumber ( '100' ); // true isNumber ( '5e3' ); // true isNumber ( parseInt ( '012' )); // true isNumber ( parseFloat ( '012' )); // true False Everything else is false, as you would expect: isNumber ( Infinity ); // false isNumber ( NaN ); // false isNumber ( null ); // false isNumber ( undefined ); // false isNumber ( '' ); // false isNumber ( ' ' ); // false isNumber ( 'foo' ); // false isNumber ([ 1 ]); // false isNumber ([]); // false isNumber ( function () {}); // false isNumber ({}); // false Release history 7.0.0 Refactor. Now uses .isFinite if it exists. Performance is about the same as v6.0 when the value is a string or number. But it's now 3x-4x faster when the value is not a string or number. 6.0.0 Optimizations, thanks to @benaadams. 5.0.0 Breaking changes removed support for instanceof Number and instanceof String Benchmarks As with all benchmarks, take these with a grain of salt. See the benchmarks for more detail. # all v7.0 x 413,222 ops/sec \u00b12.02% (86 runs sampled) v6.0 x 111,061 ops/sec \u00b11.29% (85 runs sampled) parseFloat x 317,596 ops/sec \u00b11.36% (86 runs sampled) fastest is 'v7.0' # string v7.0 x 3,054,496 ops/sec \u00b11.05% (89 runs sampled) v6.0 x 2,957,781 ops/sec \u00b10.98% (88 runs sampled) parseFloat x 3,071,060 ops/sec \u00b11.13% (88 runs sampled) fastest is 'parseFloat,v7.0' # number v7.0 x 3,146,895 ops/sec \u00b10.89% (89 runs sampled) v6.0 x 3,214,038 ops/sec \u00b11.07% (89 runs sampled) parseFloat x 3,077,588 ops/sec \u00b11.07% (87 runs sampled) fastest is 'v6.0' About Contributing Pull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new). Running Tests Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command: $ npm install && npm test Building docs _(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_ To generate the readme, run the following command: $ npm install -g verbose/verb#dev verb-generate-readme && verb Related projects You might also be interested in these projects: is-plain-object : Returns true if an object was created by the Object constructor. | homepage is-primitive : Returns true if the value is a primitive. | homepage isobject : Returns true if the value is an object and not an array or null. | homepage kind-of : Get the native type of a value. | homepage Contributors Commits Contributor 49 jonschlinkert 5 charlike-old 1 benaadams 1 realityking Author Jon Schlinkert LinkedIn Profile GitHub Profile Twitter Profile License Copyright \u00a9 2018, Jon Schlinkert . Released under the MIT License . This file was generated by verb-generate-readme , v0.6.0, on June 15, 2018.","title":"is-number NPM version NPM monthly downloads NPM total downloads Linux Build Status"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#is-number","text":"Returns true if the value is a finite number. Please consider following this project's author, Jon Schlinkert , and consider starring the project to show your and support.","title":"is-number"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#install","text":"Install with npm : $ npm install --save is-number","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#why-is-this-needed","text":"In JavaScript, it's not always as straightforward as it should be to reliably check if a value is a number. It's common for devs to use + , - , or Number() to cast a string value to a number (for example, when values are returned from user input, regex matches, parsers, etc). But there are many non-intuitive edge cases that yield unexpected results: console . log ( + []); //=> 0 console . log ( + '' ); //=> 0 console . log ( + ' ' ); //=> 0 console . log ( typeof NaN ); //=> 'number' This library offers a performant way to smooth out edge cases like these.","title":"Why is this needed?"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#usage","text":"const isNumber = require ( 'is-number' ); See the tests for more examples.","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#true","text":"isNumber ( 5e3 ); // true isNumber ( 0xff ); // true isNumber ( - 1.1 ); // true isNumber ( 0 ); // true isNumber ( 1 ); // true isNumber ( 1.1 ); // true isNumber ( 10 ); // true isNumber ( 10.10 ); // true isNumber ( 100 ); // true isNumber ( '-1.1' ); // true isNumber ( '0' ); // true isNumber ( '012' ); // true isNumber ( '0xff' ); // true isNumber ( '1' ); // true isNumber ( '1.1' ); // true isNumber ( '10' ); // true isNumber ( '10.10' ); // true isNumber ( '100' ); // true isNumber ( '5e3' ); // true isNumber ( parseInt ( '012' )); // true isNumber ( parseFloat ( '012' )); // true","title":"true"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#false","text":"Everything else is false, as you would expect: isNumber ( Infinity ); // false isNumber ( NaN ); // false isNumber ( null ); // false isNumber ( undefined ); // false isNumber ( '' ); // false isNumber ( ' ' ); // false isNumber ( 'foo' ); // false isNumber ([ 1 ]); // false isNumber ([]); // false isNumber ( function () {}); // false isNumber ({}); // false","title":"False"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#release-history","text":"","title":"Release history"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#700","text":"Refactor. Now uses .isFinite if it exists. Performance is about the same as v6.0 when the value is a string or number. But it's now 3x-4x faster when the value is not a string or number.","title":"7.0.0"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#600","text":"Optimizations, thanks to @benaadams.","title":"6.0.0"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#500","text":"Breaking changes removed support for instanceof Number and instanceof String","title":"5.0.0"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#benchmarks","text":"As with all benchmarks, take these with a grain of salt. See the benchmarks for more detail. # all v7.0 x 413,222 ops/sec \u00b12.02% (86 runs sampled) v6.0 x 111,061 ops/sec \u00b11.29% (85 runs sampled) parseFloat x 317,596 ops/sec \u00b11.36% (86 runs sampled) fastest is 'v7.0' # string v7.0 x 3,054,496 ops/sec \u00b11.05% (89 runs sampled) v6.0 x 2,957,781 ops/sec \u00b10.98% (88 runs sampled) parseFloat x 3,071,060 ops/sec \u00b11.13% (88 runs sampled) fastest is 'parseFloat,v7.0' # number v7.0 x 3,146,895 ops/sec \u00b10.89% (89 runs sampled) v6.0 x 3,214,038 ops/sec \u00b11.07% (89 runs sampled) parseFloat x 3,077,588 ops/sec \u00b11.07% (87 runs sampled) fastest is 'v6.0'","title":"Benchmarks"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#about","text":"Contributing Pull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new). Running Tests Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command: $ npm install && npm test Building docs _(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_ To generate the readme, run the following command: $ npm install -g verbose/verb#dev verb-generate-readme && verb","title":"About"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#related-projects","text":"You might also be interested in these projects: is-plain-object : Returns true if an object was created by the Object constructor. | homepage is-primitive : Returns true if the value is a primitive. | homepage isobject : Returns true if the value is an object and not an array or null. | homepage kind-of : Get the native type of a value. | homepage","title":"Related projects"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#contributors","text":"Commits Contributor 49 jonschlinkert 5 charlike-old 1 benaadams 1 realityking","title":"Contributors"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#author","text":"Jon Schlinkert LinkedIn Profile GitHub Profile Twitter Profile","title":"Author"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#license","text":"Copyright \u00a9 2018, Jon Schlinkert . Released under the MIT License . This file was generated by verb-generate-readme , v0.6.0, on June 15, 2018.","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/is-promise/readme/","text":"is-promise Test whether an object looks like a promises-a+ promise Installation $ npm install is-promise You can also use it client side via npm. API import isPromise from 'is-promise' ; isPromise ( Promise . resolve ()); //=>true isPromise ({ then : function () {...}}); //=>true isPromise ( null ); //=>false isPromise ({}); //=>false isPromise ({ then : true }) //=>false License MIT","title":"Readme"},{"location":"system-desing/crud-app/JS/server/node_modules/is-promise/readme/#is-promise","text":"Test whether an object looks like a promises-a+ promise","title":"is-promise"},{"location":"system-desing/crud-app/JS/server/node_modules/is-promise/readme/#installation","text":"$ npm install is-promise You can also use it client side via npm.","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/is-promise/readme/#api","text":"import isPromise from 'is-promise' ; isPromise ( Promise . resolve ()); //=>true isPromise ({ then : function () {...}}); //=>true isPromise ( null ); //=>false isPromise ({}); //=>false isPromise ({ then : true }) //=>false","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/is-promise/readme/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/","text":"jsonwebtoken Build Dependency An implementation of JSON Web Tokens . This was developed against draft-ietf-oauth-json-web-token-08 . It makes use of node-jws Install $ npm install jsonwebtoken Migration notes From v8 to v9 From v7 to v8 Usage jwt.sign(payload, secretOrPrivateKey, [options, callback]) (Asynchronous) If a callback is supplied, the callback is called with the err or the JWT. (Synchronous) Returns the JsonWebToken as string payload could be an object literal, buffer or string representing valid JSON. Please note that exp or any other claim is only set if the payload is an object literal. Buffer or string payloads are not checked for JSON validity. If payload is not a buffer or a string, it will be coerced into a string using JSON.stringify . secretOrPrivateKey is a string (utf-8 encoded), buffer, object, or KeyObject containing either the secret for HMAC algorithms or the PEM encoded private key for RSA and ECDSA. In case of a private key with passphrase an object { key, passphrase } can be used (based on crypto documentation ), in this case be sure you pass the algorithm option. When signing with RSA algorithms the minimum modulus length is 2048 except when the allowInsecureKeySizes option is set to true. Private keys below this size will be rejected with an error. options : algorithm (default: HS256 ) expiresIn : expressed in seconds or a string describing a time span vercel/ms . Eg: 60 , \"2 days\" , \"10h\" , \"7d\" . A numeric value is interpreted as a seconds count. If you use a string be sure you provide the time units (days, hours, etc), otherwise milliseconds unit is used by default ( \"120\" is equal to \"120ms\" ). notBefore : expressed in seconds or a string describing a time span vercel/ms . Eg: 60 , \"2 days\" , \"10h\" , \"7d\" . A numeric value is interpreted as a seconds count. If you use a string be sure you provide the time units (days, hours, etc), otherwise milliseconds unit is used by default ( \"120\" is equal to \"120ms\" ). audience issuer jwtid subject noTimestamp header keyid mutatePayload : if true, the sign function will modify the payload object directly. This is useful if you need a raw reference to the payload after claims have been applied to it but before it has been encoded into a token. allowInsecureKeySizes : if true allows private keys with a modulus below 2048 to be used for RSA allowInvalidAsymmetricKeyTypes : if true, allows asymmetric keys which do not match the specified algorithm. This option is intended only for backwards compatability and should be avoided. There are no default values for expiresIn , notBefore , audience , subject , issuer . These claims can also be provided in the payload directly with exp , nbf , aud , sub and iss respectively, but you can't include in both places. Remember that exp , nbf and iat are NumericDate , see related Token Expiration (exp claim) The header can be customized via the options.header object. Generated jwts will include an iat (issued at) claim by default unless noTimestamp is specified. If iat is inserted in the payload, it will be used instead of the real timestamp for calculating other things like exp given a timespan in options.expiresIn . Synchronous Sign with default (HMAC SHA256) var jwt = require ( 'jsonwebtoken' ); var token = jwt . sign ({ foo : 'bar' }, 'shhhhh' ); Synchronous Sign with RSA SHA256 // sign with RSA SHA256 var privateKey = fs . readFileSync ( 'private.key' ); var token = jwt . sign ({ foo : 'bar' }, privateKey , { algorithm : 'RS256' }); Sign asynchronously jwt . sign ({ foo : 'bar' }, privateKey , { algorithm : 'RS256' }, function ( err , token ) { console . log ( token ); }); Backdate a jwt 30 seconds var older_token = jwt . sign ({ foo : 'bar' , iat : Math . floor ( Date . now () / 1000 ) - 30 }, 'shhhhh' ); Token Expiration (exp claim) The standard for JWT defines an exp claim for expiration. The expiration is represented as a NumericDate : A JSON numeric value representing the number of seconds from 1970-01-01T00:00:00Z UTC until the specified UTC date/time, ignoring leap seconds. This is equivalent to the IEEE Std 1003.1, 2013 Edition [POSIX.1] definition \"Seconds Since the Epoch\", in which each day is accounted for by exactly 86400 seconds, other than that non-integer values can be represented. See RFC 3339 [RFC3339] for details regarding date/times in general and UTC in particular. This means that the exp field should contain the number of seconds since the epoch. Signing a token with 1 hour of expiration: jwt . sign ({ exp : Math . floor ( Date . now () / 1000 ) + ( 60 * 60 ), data : 'foobar' }, 'secret' ); Another way to generate a token like this with this library is: jwt . sign ({ data : 'foobar' }, 'secret' , { expiresIn : 60 * 60 }); //or even better: jwt . sign ({ data : 'foobar' }, 'secret' , { expiresIn : '1h' }); jwt.verify(token, secretOrPublicKey, [options, callback]) (Asynchronous) If a callback is supplied, function acts asynchronously. The callback is called with the decoded payload if the signature is valid and optional expiration, audience, or issuer are valid. If not, it will be called with the error. (Synchronous) If a callback is not supplied, function acts synchronously. Returns the payload decoded if the signature is valid and optional expiration, audience, or issuer are valid. If not, it will throw the error. Warning: When the token comes from an untrusted source (e.g. user input or external requests), the returned decoded payload should be treated like any other user input; please make sure to sanitize and only work with properties that are expected token is the JsonWebToken string secretOrPublicKey is a string (utf-8 encoded), buffer, or KeyObject containing either the secret for HMAC algorithms, or the PEM encoded public key for RSA and ECDSA. If jwt.verify is called asynchronous, secretOrPublicKey can be a function that should fetch the secret or public key. See below for a detailed example As mentioned in this comment , there are other libraries that expect base64 encoded secrets (random bytes encoded using base64), if that is your case you can pass Buffer.from(secret, 'base64') , by doing this the secret will be decoded using base64 and the token verification will use the original random bytes. options algorithms : List of strings with the names of the allowed algorithms. For instance, [\"HS256\", \"HS384\"] . If not specified a defaults will be used based on the type of key provided * secret - ['HS256', 'HS384', 'HS512'] * rsa - ['RS256', 'RS384', 'RS512'] * ec - ['ES256', 'ES384', 'ES512'] * default - ['RS256', 'RS384', 'RS512'] audience : if you want to check audience ( aud ), provide a value here. The audience can be checked against a string, a regular expression or a list of strings and/or regular expressions. Eg: \"urn:foo\" , /urn:f[o]{2}/ , [/urn:f[o]{2}/, \"urn:bar\"] complete : return an object with the decoded { payload, header, signature } instead of only the usual content of the payload. issuer (optional): string or array of strings of valid values for the iss field. jwtid (optional): if you want to check JWT ID ( jti ), provide a string value here. ignoreExpiration : if true do not validate the expiration of the token. ignoreNotBefore ... subject : if you want to check subject ( sub ), provide a value here clockTolerance : number of seconds to tolerate when checking the nbf and exp claims, to deal with small clock differences among different servers maxAge : the maximum allowed age for tokens to still be valid. It is expressed in seconds or a string describing a time span vercel/ms . Eg: 1000 , \"2 days\" , \"10h\" , \"7d\" . A numeric value is interpreted as a seconds count. If you use a string be sure you provide the time units (days, hours, etc), otherwise milliseconds unit is used by default ( \"120\" is equal to \"120ms\" ). clockTimestamp : the time in seconds that should be used as the current time for all necessary comparisons. nonce : if you want to check nonce claim, provide a string value here. It is used on Open ID for the ID Tokens. ( Open ID implementation notes ) allowInvalidAsymmetricKeyTypes : if true, allows asymmetric keys which do not match the specified algorithm. This option is intended only for backwards compatability and should be avoided. // verify a token symmetric - synchronous var decoded = jwt . verify ( token , 'shhhhh' ); console . log ( decoded . foo ) // bar // verify a token symmetric jwt . verify ( token , 'shhhhh' , function ( err , decoded ) { console . log ( decoded . foo ) // bar }); // invalid token - synchronous try { var decoded = jwt . verify ( token , 'wrong-secret' ); } catch ( err ) { // err } // invalid token jwt . verify ( token , 'wrong-secret' , function ( err , decoded ) { // err // decoded undefined }); // verify a token asymmetric var cert = fs . readFileSync ( 'public.pem' ); // get public key jwt . verify ( token , cert , function ( err , decoded ) { console . log ( decoded . foo ) // bar }); // verify audience var cert = fs . readFileSync ( 'public.pem' ); // get public key jwt . verify ( token , cert , { audience : 'urn:foo' }, function ( err , decoded ) { // if audience mismatch, err == invalid audience }); // verify issuer var cert = fs . readFileSync ( 'public.pem' ); // get public key jwt . verify ( token , cert , { audience : 'urn:foo' , issuer : 'urn:issuer' }, function ( err , decoded ) { // if issuer mismatch, err == invalid issuer }); // verify jwt id var cert = fs . readFileSync ( 'public.pem' ); // get public key jwt . verify ( token , cert , { audience : 'urn:foo' , issuer : 'urn:issuer' , jwtid : 'jwtid' }, function ( err , decoded ) { // if jwt id mismatch, err == invalid jwt id }); // verify subject var cert = fs . readFileSync ( 'public.pem' ); // get public key jwt . verify ( token , cert , { audience : 'urn:foo' , issuer : 'urn:issuer' , jwtid : 'jwtid' , subject : 'subject' }, function ( err , decoded ) { // if subject mismatch, err == invalid subject }); // alg mismatch var cert = fs . readFileSync ( 'public.pem' ); // get public key jwt . verify ( token , cert , { algorithms : [ 'RS256' ] }, function ( err , payload ) { // if token alg != RS256, err == invalid signature }); // Verify using getKey callback // Example uses https://github.com/auth0/node-jwks-rsa as a way to fetch the keys. var jwksClient = require ( 'jwks-rsa' ); var client = jwksClient ({ jwksUri : 'https://sandrino.auth0.com/.well-known/jwks.json' }); function getKey ( header , callback ){ client . getSigningKey ( header . kid , function ( err , key ) { var signingKey = key . publicKey || key . rsaPublicKey ; callback ( null , signingKey ); }); } jwt . verify ( token , getKey , options , function ( err , decoded ) { console . log ( decoded . foo ) // bar }); Need to peek into a JWT without verifying it? (Click to expand) ### jwt.decode(token [, options]) (Synchronous) Returns the decoded payload without verifying if the signature is valid. > __Warning:__ This will __not__ verify whether the signature is valid. You should __not__ use this for untrusted messages. You most likely want to use `jwt.verify` instead. > __Warning:__ When the token comes from an untrusted source (e.g. user input or external request), the returned decoded payload should be treated like any other user input; please make sure to sanitize and only work with properties that are expected `token` is the JsonWebToken string `options`: * `json`: force JSON.parse on the payload even if the header doesn't contain `\"typ\":\"JWT\"`. * `complete`: return an object with the decoded payload and header. Example // get the decoded payload ignoring signature, no secretOrPrivateKey needed var decoded = jwt . decode ( token ); // get the decoded payload and header var decoded = jwt . decode ( token , { complete : true }); console . log ( decoded . header ); console . log ( decoded . payload ) Errors & Codes Possible thrown errors during verification. Error is the first argument of the verification callback. TokenExpiredError Thrown error if the token is expired. Error object: name: 'TokenExpiredError' message: 'jwt expired' expiredAt: [ExpDate] jwt . verify ( token , 'shhhhh' , function ( err , decoded ) { if ( err ) { /* err = { name: 'TokenExpiredError', message: 'jwt expired', expiredAt: 1408621000 } */ } }); JsonWebTokenError Error object: name: 'JsonWebTokenError' message: 'invalid token' - the header or payload could not be parsed 'jwt malformed' - the token does not have three components (delimited by a . ) 'jwt signature is required' 'invalid signature' 'jwt audience invalid. expected: [OPTIONS AUDIENCE]' 'jwt issuer invalid. expected: [OPTIONS ISSUER]' 'jwt id invalid. expected: [OPTIONS JWT ID]' 'jwt subject invalid. expected: [OPTIONS SUBJECT]' jwt . verify ( token , 'shhhhh' , function ( err , decoded ) { if ( err ) { /* err = { name: 'JsonWebTokenError', message: 'jwt malformed' } */ } }); NotBeforeError Thrown if current time is before the nbf claim. Error object: name: 'NotBeforeError' message: 'jwt not active' date: 2018-10-04T16:10:44.000Z jwt . verify ( token , 'shhhhh' , function ( err , decoded ) { if ( err ) { /* err = { name: 'NotBeforeError', message: 'jwt not active', date: 2018-10-04T16:10:44.000Z } */ } }); Algorithms supported Array of supported algorithms. The following algorithms are currently supported. alg Parameter Value Digital Signature or MAC Algorithm HS256 HMAC using SHA-256 hash algorithm HS384 HMAC using SHA-384 hash algorithm HS512 HMAC using SHA-512 hash algorithm RS256 RSASSA-PKCS1-v1_5 using SHA-256 hash algorithm RS384 RSASSA-PKCS1-v1_5 using SHA-384 hash algorithm RS512 RSASSA-PKCS1-v1_5 using SHA-512 hash algorithm PS256 RSASSA-PSS using SHA-256 hash algorithm (only node ^6.12.0 OR >=8.0.0) PS384 RSASSA-PSS using SHA-384 hash algorithm (only node ^6.12.0 OR >=8.0.0) PS512 RSASSA-PSS using SHA-512 hash algorithm (only node ^6.12.0 OR >=8.0.0) ES256 ECDSA using P-256 curve and SHA-256 hash algorithm ES384 ECDSA using P-384 curve and SHA-384 hash algorithm ES512 ECDSA using P-521 curve and SHA-512 hash algorithm none No digital signature or MAC value included Refreshing JWTs First of all, we recommend you to think carefully if auto-refreshing a JWT will not introduce any vulnerability in your system. We are not comfortable including this as part of the library, however, you can take a look at this example to show how this could be accomplished. Apart from that example there are an issue and a pull request to get more knowledge about this topic. TODO X.509 certificate chain is not checked Issue Reporting If you have found a bug or if you have a feature request, please report them at this repository issues section. Please do not report security vulnerabilities on the public GitHub issue tracker. The Responsible Disclosure Program details the procedure for disclosing security issues. Author Auth0 License This project is licensed under the MIT license. See the LICENSE file for more info.","title":"jsonwebtoken"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#jsonwebtoken","text":"Build Dependency An implementation of JSON Web Tokens . This was developed against draft-ietf-oauth-json-web-token-08 . It makes use of node-jws","title":"jsonwebtoken"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#install","text":"$ npm install jsonwebtoken","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#migration-notes","text":"From v8 to v9 From v7 to v8","title":"Migration notes"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#usage","text":"","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#jwtsignpayload-secretorprivatekey-options-callback","text":"(Asynchronous) If a callback is supplied, the callback is called with the err or the JWT. (Synchronous) Returns the JsonWebToken as string payload could be an object literal, buffer or string representing valid JSON. Please note that exp or any other claim is only set if the payload is an object literal. Buffer or string payloads are not checked for JSON validity. If payload is not a buffer or a string, it will be coerced into a string using JSON.stringify . secretOrPrivateKey is a string (utf-8 encoded), buffer, object, or KeyObject containing either the secret for HMAC algorithms or the PEM encoded private key for RSA and ECDSA. In case of a private key with passphrase an object { key, passphrase } can be used (based on crypto documentation ), in this case be sure you pass the algorithm option. When signing with RSA algorithms the minimum modulus length is 2048 except when the allowInsecureKeySizes option is set to true. Private keys below this size will be rejected with an error. options : algorithm (default: HS256 ) expiresIn : expressed in seconds or a string describing a time span vercel/ms . Eg: 60 , \"2 days\" , \"10h\" , \"7d\" . A numeric value is interpreted as a seconds count. If you use a string be sure you provide the time units (days, hours, etc), otherwise milliseconds unit is used by default ( \"120\" is equal to \"120ms\" ). notBefore : expressed in seconds or a string describing a time span vercel/ms . Eg: 60 , \"2 days\" , \"10h\" , \"7d\" . A numeric value is interpreted as a seconds count. If you use a string be sure you provide the time units (days, hours, etc), otherwise milliseconds unit is used by default ( \"120\" is equal to \"120ms\" ). audience issuer jwtid subject noTimestamp header keyid mutatePayload : if true, the sign function will modify the payload object directly. This is useful if you need a raw reference to the payload after claims have been applied to it but before it has been encoded into a token. allowInsecureKeySizes : if true allows private keys with a modulus below 2048 to be used for RSA allowInvalidAsymmetricKeyTypes : if true, allows asymmetric keys which do not match the specified algorithm. This option is intended only for backwards compatability and should be avoided. There are no default values for expiresIn , notBefore , audience , subject , issuer . These claims can also be provided in the payload directly with exp , nbf , aud , sub and iss respectively, but you can't include in both places. Remember that exp , nbf and iat are NumericDate , see related Token Expiration (exp claim) The header can be customized via the options.header object. Generated jwts will include an iat (issued at) claim by default unless noTimestamp is specified. If iat is inserted in the payload, it will be used instead of the real timestamp for calculating other things like exp given a timespan in options.expiresIn . Synchronous Sign with default (HMAC SHA256) var jwt = require ( 'jsonwebtoken' ); var token = jwt . sign ({ foo : 'bar' }, 'shhhhh' ); Synchronous Sign with RSA SHA256 // sign with RSA SHA256 var privateKey = fs . readFileSync ( 'private.key' ); var token = jwt . sign ({ foo : 'bar' }, privateKey , { algorithm : 'RS256' }); Sign asynchronously jwt . sign ({ foo : 'bar' }, privateKey , { algorithm : 'RS256' }, function ( err , token ) { console . log ( token ); }); Backdate a jwt 30 seconds var older_token = jwt . sign ({ foo : 'bar' , iat : Math . floor ( Date . now () / 1000 ) - 30 }, 'shhhhh' );","title":"jwt.sign(payload, secretOrPrivateKey, [options, callback])"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#token-expiration-exp-claim","text":"The standard for JWT defines an exp claim for expiration. The expiration is represented as a NumericDate : A JSON numeric value representing the number of seconds from 1970-01-01T00:00:00Z UTC until the specified UTC date/time, ignoring leap seconds. This is equivalent to the IEEE Std 1003.1, 2013 Edition [POSIX.1] definition \"Seconds Since the Epoch\", in which each day is accounted for by exactly 86400 seconds, other than that non-integer values can be represented. See RFC 3339 [RFC3339] for details regarding date/times in general and UTC in particular. This means that the exp field should contain the number of seconds since the epoch. Signing a token with 1 hour of expiration: jwt . sign ({ exp : Math . floor ( Date . now () / 1000 ) + ( 60 * 60 ), data : 'foobar' }, 'secret' ); Another way to generate a token like this with this library is: jwt . sign ({ data : 'foobar' }, 'secret' , { expiresIn : 60 * 60 }); //or even better: jwt . sign ({ data : 'foobar' }, 'secret' , { expiresIn : '1h' });","title":"Token Expiration (exp claim)"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#jwtverifytoken-secretorpublickey-options-callback","text":"(Asynchronous) If a callback is supplied, function acts asynchronously. The callback is called with the decoded payload if the signature is valid and optional expiration, audience, or issuer are valid. If not, it will be called with the error. (Synchronous) If a callback is not supplied, function acts synchronously. Returns the payload decoded if the signature is valid and optional expiration, audience, or issuer are valid. If not, it will throw the error. Warning: When the token comes from an untrusted source (e.g. user input or external requests), the returned decoded payload should be treated like any other user input; please make sure to sanitize and only work with properties that are expected token is the JsonWebToken string secretOrPublicKey is a string (utf-8 encoded), buffer, or KeyObject containing either the secret for HMAC algorithms, or the PEM encoded public key for RSA and ECDSA. If jwt.verify is called asynchronous, secretOrPublicKey can be a function that should fetch the secret or public key. See below for a detailed example As mentioned in this comment , there are other libraries that expect base64 encoded secrets (random bytes encoded using base64), if that is your case you can pass Buffer.from(secret, 'base64') , by doing this the secret will be decoded using base64 and the token verification will use the original random bytes. options algorithms : List of strings with the names of the allowed algorithms. For instance, [\"HS256\", \"HS384\"] . If not specified a defaults will be used based on the type of key provided * secret - ['HS256', 'HS384', 'HS512'] * rsa - ['RS256', 'RS384', 'RS512'] * ec - ['ES256', 'ES384', 'ES512'] * default - ['RS256', 'RS384', 'RS512'] audience : if you want to check audience ( aud ), provide a value here. The audience can be checked against a string, a regular expression or a list of strings and/or regular expressions. Eg: \"urn:foo\" , /urn:f[o]{2}/ , [/urn:f[o]{2}/, \"urn:bar\"] complete : return an object with the decoded { payload, header, signature } instead of only the usual content of the payload. issuer (optional): string or array of strings of valid values for the iss field. jwtid (optional): if you want to check JWT ID ( jti ), provide a string value here. ignoreExpiration : if true do not validate the expiration of the token. ignoreNotBefore ... subject : if you want to check subject ( sub ), provide a value here clockTolerance : number of seconds to tolerate when checking the nbf and exp claims, to deal with small clock differences among different servers maxAge : the maximum allowed age for tokens to still be valid. It is expressed in seconds or a string describing a time span vercel/ms . Eg: 1000 , \"2 days\" , \"10h\" , \"7d\" . A numeric value is interpreted as a seconds count. If you use a string be sure you provide the time units (days, hours, etc), otherwise milliseconds unit is used by default ( \"120\" is equal to \"120ms\" ). clockTimestamp : the time in seconds that should be used as the current time for all necessary comparisons. nonce : if you want to check nonce claim, provide a string value here. It is used on Open ID for the ID Tokens. ( Open ID implementation notes ) allowInvalidAsymmetricKeyTypes : if true, allows asymmetric keys which do not match the specified algorithm. This option is intended only for backwards compatability and should be avoided. // verify a token symmetric - synchronous var decoded = jwt . verify ( token , 'shhhhh' ); console . log ( decoded . foo ) // bar // verify a token symmetric jwt . verify ( token , 'shhhhh' , function ( err , decoded ) { console . log ( decoded . foo ) // bar }); // invalid token - synchronous try { var decoded = jwt . verify ( token , 'wrong-secret' ); } catch ( err ) { // err } // invalid token jwt . verify ( token , 'wrong-secret' , function ( err , decoded ) { // err // decoded undefined }); // verify a token asymmetric var cert = fs . readFileSync ( 'public.pem' ); // get public key jwt . verify ( token , cert , function ( err , decoded ) { console . log ( decoded . foo ) // bar }); // verify audience var cert = fs . readFileSync ( 'public.pem' ); // get public key jwt . verify ( token , cert , { audience : 'urn:foo' }, function ( err , decoded ) { // if audience mismatch, err == invalid audience }); // verify issuer var cert = fs . readFileSync ( 'public.pem' ); // get public key jwt . verify ( token , cert , { audience : 'urn:foo' , issuer : 'urn:issuer' }, function ( err , decoded ) { // if issuer mismatch, err == invalid issuer }); // verify jwt id var cert = fs . readFileSync ( 'public.pem' ); // get public key jwt . verify ( token , cert , { audience : 'urn:foo' , issuer : 'urn:issuer' , jwtid : 'jwtid' }, function ( err , decoded ) { // if jwt id mismatch, err == invalid jwt id }); // verify subject var cert = fs . readFileSync ( 'public.pem' ); // get public key jwt . verify ( token , cert , { audience : 'urn:foo' , issuer : 'urn:issuer' , jwtid : 'jwtid' , subject : 'subject' }, function ( err , decoded ) { // if subject mismatch, err == invalid subject }); // alg mismatch var cert = fs . readFileSync ( 'public.pem' ); // get public key jwt . verify ( token , cert , { algorithms : [ 'RS256' ] }, function ( err , payload ) { // if token alg != RS256, err == invalid signature }); // Verify using getKey callback // Example uses https://github.com/auth0/node-jwks-rsa as a way to fetch the keys. var jwksClient = require ( 'jwks-rsa' ); var client = jwksClient ({ jwksUri : 'https://sandrino.auth0.com/.well-known/jwks.json' }); function getKey ( header , callback ){ client . getSigningKey ( header . kid , function ( err , key ) { var signingKey = key . publicKey || key . rsaPublicKey ; callback ( null , signingKey ); }); } jwt . verify ( token , getKey , options , function ( err , decoded ) { console . log ( decoded . foo ) // bar }); Need to peek into a JWT without verifying it? (Click to expand) ### jwt.decode(token [, options]) (Synchronous) Returns the decoded payload without verifying if the signature is valid. > __Warning:__ This will __not__ verify whether the signature is valid. You should __not__ use this for untrusted messages. You most likely want to use `jwt.verify` instead. > __Warning:__ When the token comes from an untrusted source (e.g. user input or external request), the returned decoded payload should be treated like any other user input; please make sure to sanitize and only work with properties that are expected `token` is the JsonWebToken string `options`: * `json`: force JSON.parse on the payload even if the header doesn't contain `\"typ\":\"JWT\"`. * `complete`: return an object with the decoded payload and header. Example // get the decoded payload ignoring signature, no secretOrPrivateKey needed var decoded = jwt . decode ( token ); // get the decoded payload and header var decoded = jwt . decode ( token , { complete : true }); console . log ( decoded . header ); console . log ( decoded . payload )","title":"jwt.verify(token, secretOrPublicKey, [options, callback])"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#errors-codes","text":"Possible thrown errors during verification. Error is the first argument of the verification callback.","title":"Errors &amp; Codes"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#tokenexpirederror","text":"Thrown error if the token is expired. Error object: name: 'TokenExpiredError' message: 'jwt expired' expiredAt: [ExpDate] jwt . verify ( token , 'shhhhh' , function ( err , decoded ) { if ( err ) { /* err = { name: 'TokenExpiredError', message: 'jwt expired', expiredAt: 1408621000 } */ } });","title":"TokenExpiredError"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#jsonwebtokenerror","text":"Error object: name: 'JsonWebTokenError' message: 'invalid token' - the header or payload could not be parsed 'jwt malformed' - the token does not have three components (delimited by a . ) 'jwt signature is required' 'invalid signature' 'jwt audience invalid. expected: [OPTIONS AUDIENCE]' 'jwt issuer invalid. expected: [OPTIONS ISSUER]' 'jwt id invalid. expected: [OPTIONS JWT ID]' 'jwt subject invalid. expected: [OPTIONS SUBJECT]' jwt . verify ( token , 'shhhhh' , function ( err , decoded ) { if ( err ) { /* err = { name: 'JsonWebTokenError', message: 'jwt malformed' } */ } });","title":"JsonWebTokenError"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#notbeforeerror","text":"Thrown if current time is before the nbf claim. Error object: name: 'NotBeforeError' message: 'jwt not active' date: 2018-10-04T16:10:44.000Z jwt . verify ( token , 'shhhhh' , function ( err , decoded ) { if ( err ) { /* err = { name: 'NotBeforeError', message: 'jwt not active', date: 2018-10-04T16:10:44.000Z } */ } });","title":"NotBeforeError"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#algorithms-supported","text":"Array of supported algorithms. The following algorithms are currently supported. alg Parameter Value Digital Signature or MAC Algorithm HS256 HMAC using SHA-256 hash algorithm HS384 HMAC using SHA-384 hash algorithm HS512 HMAC using SHA-512 hash algorithm RS256 RSASSA-PKCS1-v1_5 using SHA-256 hash algorithm RS384 RSASSA-PKCS1-v1_5 using SHA-384 hash algorithm RS512 RSASSA-PKCS1-v1_5 using SHA-512 hash algorithm PS256 RSASSA-PSS using SHA-256 hash algorithm (only node ^6.12.0 OR >=8.0.0) PS384 RSASSA-PSS using SHA-384 hash algorithm (only node ^6.12.0 OR >=8.0.0) PS512 RSASSA-PSS using SHA-512 hash algorithm (only node ^6.12.0 OR >=8.0.0) ES256 ECDSA using P-256 curve and SHA-256 hash algorithm ES384 ECDSA using P-384 curve and SHA-384 hash algorithm ES512 ECDSA using P-521 curve and SHA-512 hash algorithm none No digital signature or MAC value included","title":"Algorithms supported"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#refreshing-jwts","text":"First of all, we recommend you to think carefully if auto-refreshing a JWT will not introduce any vulnerability in your system. We are not comfortable including this as part of the library, however, you can take a look at this example to show how this could be accomplished. Apart from that example there are an issue and a pull request to get more knowledge about this topic.","title":"Refreshing JWTs"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#todo","text":"X.509 certificate chain is not checked","title":"TODO"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#issue-reporting","text":"If you have found a bug or if you have a feature request, please report them at this repository issues section. Please do not report security vulnerabilities on the public GitHub issue tracker. The Responsible Disclosure Program details the procedure for disclosing security issues.","title":"Issue Reporting"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#author","text":"Auth0","title":"Author"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#license","text":"This project is licensed under the MIT license. See the LICENSE file for more info.","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/jwa/","text":"node-jwa A JSON Web Algorithms implementation focusing (exclusively, at this point) on the algorithms necessary for JSON Web Signatures . This library supports all of the required, recommended and optional cryptographic algorithms for JWS: alg Parameter Value Digital Signature or MAC Algorithm HS256 HMAC using SHA-256 hash algorithm HS384 HMAC using SHA-384 hash algorithm HS512 HMAC using SHA-512 hash algorithm RS256 RSASSA using SHA-256 hash algorithm RS384 RSASSA using SHA-384 hash algorithm RS512 RSASSA using SHA-512 hash algorithm PS256 RSASSA-PSS using SHA-256 hash algorithm PS384 RSASSA-PSS using SHA-384 hash algorithm PS512 RSASSA-PSS using SHA-512 hash algorithm ES256 ECDSA using P-256 curve and SHA-256 hash algorithm ES384 ECDSA using P-384 curve and SHA-384 hash algorithm ES512 ECDSA using P-521 curve and SHA-512 hash algorithm none No digital signature or MAC value included Please note that PS* only works on Node 6.12+ (excluding 7.x). Requirements In order to run the tests, a recent version of OpenSSL is required. The version that comes with OS X (OpenSSL 0.9.8r 8 Feb 2011) is not recent enough , as it does not fully support ECDSA keys. You'll need to use a version > 1.0.0; I tested with OpenSSL 1.0.1c 10 May 2012. Testing To run the tests, do $ npm test This will generate a bunch of keypairs to use in testing. If you want to generate new keypairs, do make clean before running npm test again. Methodology I spawn openssl dgst -sign to test OpenSSL sign \u2192 JS verify and openssl dgst -verify to test JS sign \u2192 OpenSSL verify for each of the RSA and ECDSA algorithms. Usage jwa(algorithm) Creates a new jwa object with sign and verify methods for the algorithm. Valid values for algorithm can be found in the table above ( 'HS256' , 'HS384' , etc) and are case-insensitive. Passing an invalid algorithm value will throw a TypeError . jwa#sign(input, secretOrPrivateKey) Sign some input with either a secret for HMAC algorithms, or a private key for RSA and ECDSA algorithms. If input is not already a string or buffer, JSON.stringify will be called on it to attempt to coerce it. For the HMAC algorithm, secretOrPrivateKey should be a string or a buffer. For ECDSA and RSA, the value should be a string representing a PEM encoded private key. Output base64url formatted. This is for convenience as JWS expects the signature in this format. If your application needs the output in a different format, please open an issue . In the meantime, you can use brianloveswords/base64url to decode the signature. As of nodejs v0.11.8 , SPKAC support was introduce. If your nodeJs version satisfies, then you can pass an object { key: '..', passphrase: '...' } jwa#verify(input, signature, secretOrPublicKey) Verify a signature. Returns true or false . signature should be a base64url encoded string. For the HMAC algorithm, secretOrPublicKey should be a string or a buffer. For ECDSA and RSA, the value should be a string represented a PEM encoded public key. Example HMAC const jwa = require ( 'jwa' ); const hmac = jwa ( 'HS256' ); const input = 'super important stuff' ; const secret = 'shhhhhh' ; const signature = hmac . sign ( input , secret ); hmac . verify ( input , signature , secret ) // === true hmac . verify ( input , signature , 'trickery!' ) // === false With keys const fs = require ( 'fs' ); const jwa = require ( 'jwa' ); const privateKey = fs . readFileSync ( __dirname + '/ecdsa-p521-private.pem' ); const publicKey = fs . readFileSync ( __dirname + '/ecdsa-p521-public.pem' ); const ecdsa = jwa ( 'ES512' ); const input = 'very important stuff' ; const signature = ecdsa . sign ( input , privateKey ); ecdsa . verify ( input , signature , publicKey ) // === true License MIT Copyright (c) 2013 Brian J. Brennan Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"node-jwa Build Status"},{"location":"system-desing/crud-app/JS/server/node_modules/jwa/#node-jwa","text":"A JSON Web Algorithms implementation focusing (exclusively, at this point) on the algorithms necessary for JSON Web Signatures . This library supports all of the required, recommended and optional cryptographic algorithms for JWS: alg Parameter Value Digital Signature or MAC Algorithm HS256 HMAC using SHA-256 hash algorithm HS384 HMAC using SHA-384 hash algorithm HS512 HMAC using SHA-512 hash algorithm RS256 RSASSA using SHA-256 hash algorithm RS384 RSASSA using SHA-384 hash algorithm RS512 RSASSA using SHA-512 hash algorithm PS256 RSASSA-PSS using SHA-256 hash algorithm PS384 RSASSA-PSS using SHA-384 hash algorithm PS512 RSASSA-PSS using SHA-512 hash algorithm ES256 ECDSA using P-256 curve and SHA-256 hash algorithm ES384 ECDSA using P-384 curve and SHA-384 hash algorithm ES512 ECDSA using P-521 curve and SHA-512 hash algorithm none No digital signature or MAC value included Please note that PS* only works on Node 6.12+ (excluding 7.x).","title":"node-jwa"},{"location":"system-desing/crud-app/JS/server/node_modules/jwa/#requirements","text":"In order to run the tests, a recent version of OpenSSL is required. The version that comes with OS X (OpenSSL 0.9.8r 8 Feb 2011) is not recent enough , as it does not fully support ECDSA keys. You'll need to use a version > 1.0.0; I tested with OpenSSL 1.0.1c 10 May 2012.","title":"Requirements"},{"location":"system-desing/crud-app/JS/server/node_modules/jwa/#testing","text":"To run the tests, do $ npm test This will generate a bunch of keypairs to use in testing. If you want to generate new keypairs, do make clean before running npm test again.","title":"Testing"},{"location":"system-desing/crud-app/JS/server/node_modules/jwa/#methodology","text":"I spawn openssl dgst -sign to test OpenSSL sign \u2192 JS verify and openssl dgst -verify to test JS sign \u2192 OpenSSL verify for each of the RSA and ECDSA algorithms.","title":"Methodology"},{"location":"system-desing/crud-app/JS/server/node_modules/jwa/#usage","text":"","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/jwa/#jwaalgorithm","text":"Creates a new jwa object with sign and verify methods for the algorithm. Valid values for algorithm can be found in the table above ( 'HS256' , 'HS384' , etc) and are case-insensitive. Passing an invalid algorithm value will throw a TypeError .","title":"jwa(algorithm)"},{"location":"system-desing/crud-app/JS/server/node_modules/jwa/#jwasigninput-secretorprivatekey","text":"Sign some input with either a secret for HMAC algorithms, or a private key for RSA and ECDSA algorithms. If input is not already a string or buffer, JSON.stringify will be called on it to attempt to coerce it. For the HMAC algorithm, secretOrPrivateKey should be a string or a buffer. For ECDSA and RSA, the value should be a string representing a PEM encoded private key. Output base64url formatted. This is for convenience as JWS expects the signature in this format. If your application needs the output in a different format, please open an issue . In the meantime, you can use brianloveswords/base64url to decode the signature. As of nodejs v0.11.8 , SPKAC support was introduce. If your nodeJs version satisfies, then you can pass an object { key: '..', passphrase: '...' }","title":"jwa#sign(input, secretOrPrivateKey)"},{"location":"system-desing/crud-app/JS/server/node_modules/jwa/#jwaverifyinput-signature-secretorpublickey","text":"Verify a signature. Returns true or false . signature should be a base64url encoded string. For the HMAC algorithm, secretOrPublicKey should be a string or a buffer. For ECDSA and RSA, the value should be a string represented a PEM encoded public key.","title":"jwa#verify(input, signature, secretOrPublicKey)"},{"location":"system-desing/crud-app/JS/server/node_modules/jwa/#example","text":"HMAC const jwa = require ( 'jwa' ); const hmac = jwa ( 'HS256' ); const input = 'super important stuff' ; const secret = 'shhhhhh' ; const signature = hmac . sign ( input , secret ); hmac . verify ( input , signature , secret ) // === true hmac . verify ( input , signature , 'trickery!' ) // === false With keys const fs = require ( 'fs' ); const jwa = require ( 'jwa' ); const privateKey = fs . readFileSync ( __dirname + '/ecdsa-p521-private.pem' ); const publicKey = fs . readFileSync ( __dirname + '/ecdsa-p521-public.pem' ); const ecdsa = jwa ( 'ES512' ); const input = 'very important stuff' ; const signature = ecdsa . sign ( input , privateKey ); ecdsa . verify ( input , signature , publicKey ) // === true","title":"Example"},{"location":"system-desing/crud-app/JS/server/node_modules/jwa/#license","text":"MIT Copyright (c) 2013 Brian J. Brennan Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/CHANGELOG/","text":"Change Log All notable changes to this project will be documented in this file. [3.0.0] Changed BREAKING : jwt.verify now requires an algorithm parameter, and jws.createVerify requires an algorithm option. The \"alg\" field signature headers is ignored. This mitigates a critical security flaw in the library which would allow an attacker to generate signatures with arbitrary contents that would be accepted by jwt.verify . See https://auth0.com/blog/2015/03/31/critical-vulnerabilities-in-json-web-token-libraries/ for details. 2.0.0 - 2015-01-30 Changed BREAKING : Default payload encoding changed from binary to utf8 . utf8 is a is a more sensible default than binary because many payloads, as far as I can tell, will contain user-facing strings that could be in any language. ( 6b6de48 ) Code reorganization, thanks @fearphage ! ( 7880050 ) Added Option in all relevant methods for encoding . For those few users that might be depending on a binary encoding of the messages, this is for them. ( 6b6de48 )","title":"Change Log"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/CHANGELOG/#change-log","text":"All notable changes to this project will be documented in this file.","title":"Change Log"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/CHANGELOG/#300","text":"","title":"[3.0.0]"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/CHANGELOG/#changed","text":"BREAKING : jwt.verify now requires an algorithm parameter, and jws.createVerify requires an algorithm option. The \"alg\" field signature headers is ignored. This mitigates a critical security flaw in the library which would allow an attacker to generate signatures with arbitrary contents that would be accepted by jwt.verify . See https://auth0.com/blog/2015/03/31/critical-vulnerabilities-in-json-web-token-libraries/ for details.","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/CHANGELOG/#200-2015-01-30","text":"","title":"2.0.0 - 2015-01-30"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/CHANGELOG/#changed_1","text":"BREAKING : Default payload encoding changed from binary to utf8 . utf8 is a is a more sensible default than binary because many payloads, as far as I can tell, will contain user-facing strings that could be in any language. ( 6b6de48 ) Code reorganization, thanks @fearphage ! ( 7880050 )","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/CHANGELOG/#added","text":"Option in all relevant methods for encoding . For those few users that might be depending on a binary encoding of the messages, this is for them. ( 6b6de48 )","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/","text":"node-jws An implementation of JSON Web Signatures . This was developed against draft-ietf-jose-json-web-signature-08 and implements the entire spec except X.509 Certificate Chain signing/verifying (patches welcome). There are both synchronous ( jws.sign , jws.verify ) and streaming ( jws.createSign , jws.createVerify ) APIs. Install $ npm install jws Usage jws.ALGORITHMS Array of supported algorithms. The following algorithms are currently supported. alg Parameter Value Digital Signature or MAC Algorithm HS256 HMAC using SHA-256 hash algorithm HS384 HMAC using SHA-384 hash algorithm HS512 HMAC using SHA-512 hash algorithm RS256 RSASSA using SHA-256 hash algorithm RS384 RSASSA using SHA-384 hash algorithm RS512 RSASSA using SHA-512 hash algorithm PS256 RSASSA-PSS using SHA-256 hash algorithm PS384 RSASSA-PSS using SHA-384 hash algorithm PS512 RSASSA-PSS using SHA-512 hash algorithm ES256 ECDSA using P-256 curve and SHA-256 hash algorithm ES384 ECDSA using P-384 curve and SHA-384 hash algorithm ES512 ECDSA using P-521 curve and SHA-512 hash algorithm none No digital signature or MAC value included jws.sign(options) (Synchronous) Return a JSON Web Signature for a header and a payload. Options: header payload secret or privateKey encoding (Optional, defaults to 'utf8') header must be an object with an alg property. header.alg must be one a value found in jws.ALGORITHMS . See above for a table of supported algorithms. If payload is not a buffer or a string, it will be coerced into a string using JSON.stringify . Example const signature = jws . sign ({ header : { alg : 'HS256' }, payload : 'h. jon benjamin' , secret : 'has a van' , }); jws.verify(signature, algorithm, secretOrKey) (Synchronous) Returns true or false for whether a signature matches a secret or key. signature is a JWS Signature. header.alg must be a value found in jws.ALGORITHMS . See above for a table of supported algorithms. secretOrKey is a string or buffer containing either the secret for HMAC algorithms, or the PEM encoded public key for RSA and ECDSA. Note that the \"alg\" value from the signature header is ignored. jws.decode(signature) (Synchronous) Returns the decoded header, decoded payload, and signature parts of the JWS Signature. Returns an object with three properties, e.g. { header : { alg : 'HS256' }, payload : 'h. jon benjamin' , signature : 'YOWPewyGHKu4Y_0M_vtlEnNlqmFOclqp4Hy6hVHfFT4' } jws.createSign(options) Returns a new SignStream object. Options: header (required) payload key || privateKey || secret encoding (Optional, defaults to 'utf8') Other than header , all options expect a string or a buffer when the value is known ahead of time, or a stream for convenience. key / privateKey / secret may also be an object when using an encrypted private key, see the crypto documentation . Example: // This... jws . createSign ({ header : { alg : 'RS256' }, privateKey : privateKeyStream , payload : payloadStream , }). on ( 'done' , function ( signature ) { // ... }); // is equivalent to this: const signer = jws . createSign ({ header : { alg : 'RS256' }, }); privateKeyStream . pipe ( signer . privateKey ); payloadStream . pipe ( signer . payload ); signer . on ( 'done' , function ( signature ) { // ... }); jws.createVerify(options) Returns a new VerifyStream object. Options: signature algorithm key || publicKey || secret encoding (Optional, defaults to 'utf8') All options expect a string or a buffer when the value is known ahead of time, or a stream for convenience. Example: // This... jws . createVerify ({ publicKey : pubKeyStream , signature : sigStream , }). on ( 'done' , function ( verified , obj ) { // ... }); // is equivilant to this: const verifier = jws . createVerify (); pubKeyStream . pipe ( verifier . publicKey ); sigStream . pipe ( verifier . signature ); verifier . on ( 'done' , function ( verified , obj ) { // ... }); Class: SignStream A Readable Stream that emits a single data event (the calculated signature) when done. Event: 'done' function (signature) { } signer.payload A Writable Stream that expects the JWS payload. Do not use if you passed a payload option to the constructor. Example: payloadStream . pipe ( signer . payload ); signer.secret signer.key signer.privateKey A Writable Stream . Expects the JWS secret for HMAC, or the privateKey for ECDSA and RSA. Do not use if you passed a secret or key option to the constructor. Example: privateKeyStream . pipe ( signer . privateKey ); Class: VerifyStream This is a Readable Stream that emits a single data event, the result of whether or not that signature was valid. Event: 'done' function (valid, obj) { } valid is a boolean for whether or not the signature is valid. verifier.signature A Writable Stream that expects a JWS Signature. Do not use if you passed a signature option to the constructor. verifier.secret verifier.key verifier.publicKey A Writable Stream that expects a public key or secret. Do not use if you passed a key or secret option to the constructor. TODO It feels like there should be some convenience options/APIs for defining the algorithm rather than having to define a header object with { alg: 'ES512' } or whatever every time. X.509 support, ugh License MIT Copyright (c) 2013-2015 Brian J. Brennan Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"node-jws Build Status"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#node-jws","text":"An implementation of JSON Web Signatures . This was developed against draft-ietf-jose-json-web-signature-08 and implements the entire spec except X.509 Certificate Chain signing/verifying (patches welcome). There are both synchronous ( jws.sign , jws.verify ) and streaming ( jws.createSign , jws.createVerify ) APIs.","title":"node-jws"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#install","text":"$ npm install jws","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#usage","text":"","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#jwsalgorithms","text":"Array of supported algorithms. The following algorithms are currently supported. alg Parameter Value Digital Signature or MAC Algorithm HS256 HMAC using SHA-256 hash algorithm HS384 HMAC using SHA-384 hash algorithm HS512 HMAC using SHA-512 hash algorithm RS256 RSASSA using SHA-256 hash algorithm RS384 RSASSA using SHA-384 hash algorithm RS512 RSASSA using SHA-512 hash algorithm PS256 RSASSA-PSS using SHA-256 hash algorithm PS384 RSASSA-PSS using SHA-384 hash algorithm PS512 RSASSA-PSS using SHA-512 hash algorithm ES256 ECDSA using P-256 curve and SHA-256 hash algorithm ES384 ECDSA using P-384 curve and SHA-384 hash algorithm ES512 ECDSA using P-521 curve and SHA-512 hash algorithm none No digital signature or MAC value included","title":"jws.ALGORITHMS"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#jwssignoptions","text":"(Synchronous) Return a JSON Web Signature for a header and a payload. Options: header payload secret or privateKey encoding (Optional, defaults to 'utf8') header must be an object with an alg property. header.alg must be one a value found in jws.ALGORITHMS . See above for a table of supported algorithms. If payload is not a buffer or a string, it will be coerced into a string using JSON.stringify . Example const signature = jws . sign ({ header : { alg : 'HS256' }, payload : 'h. jon benjamin' , secret : 'has a van' , });","title":"jws.sign(options)"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#jwsverifysignature-algorithm-secretorkey","text":"(Synchronous) Returns true or false for whether a signature matches a secret or key. signature is a JWS Signature. header.alg must be a value found in jws.ALGORITHMS . See above for a table of supported algorithms. secretOrKey is a string or buffer containing either the secret for HMAC algorithms, or the PEM encoded public key for RSA and ECDSA. Note that the \"alg\" value from the signature header is ignored.","title":"jws.verify(signature, algorithm, secretOrKey)"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#jwsdecodesignature","text":"(Synchronous) Returns the decoded header, decoded payload, and signature parts of the JWS Signature. Returns an object with three properties, e.g. { header : { alg : 'HS256' }, payload : 'h. jon benjamin' , signature : 'YOWPewyGHKu4Y_0M_vtlEnNlqmFOclqp4Hy6hVHfFT4' }","title":"jws.decode(signature)"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#jwscreatesignoptions","text":"Returns a new SignStream object. Options: header (required) payload key || privateKey || secret encoding (Optional, defaults to 'utf8') Other than header , all options expect a string or a buffer when the value is known ahead of time, or a stream for convenience. key / privateKey / secret may also be an object when using an encrypted private key, see the crypto documentation . Example: // This... jws . createSign ({ header : { alg : 'RS256' }, privateKey : privateKeyStream , payload : payloadStream , }). on ( 'done' , function ( signature ) { // ... }); // is equivalent to this: const signer = jws . createSign ({ header : { alg : 'RS256' }, }); privateKeyStream . pipe ( signer . privateKey ); payloadStream . pipe ( signer . payload ); signer . on ( 'done' , function ( signature ) { // ... });","title":"jws.createSign(options)"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#jwscreateverifyoptions","text":"Returns a new VerifyStream object. Options: signature algorithm key || publicKey || secret encoding (Optional, defaults to 'utf8') All options expect a string or a buffer when the value is known ahead of time, or a stream for convenience. Example: // This... jws . createVerify ({ publicKey : pubKeyStream , signature : sigStream , }). on ( 'done' , function ( verified , obj ) { // ... }); // is equivilant to this: const verifier = jws . createVerify (); pubKeyStream . pipe ( verifier . publicKey ); sigStream . pipe ( verifier . signature ); verifier . on ( 'done' , function ( verified , obj ) { // ... });","title":"jws.createVerify(options)"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#class-signstream","text":"A Readable Stream that emits a single data event (the calculated signature) when done.","title":"Class: SignStream"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#event-done","text":"function (signature) { }","title":"Event: 'done'"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#signerpayload","text":"A Writable Stream that expects the JWS payload. Do not use if you passed a payload option to the constructor. Example: payloadStream . pipe ( signer . payload );","title":"signer.payload"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#signersecretsignerkeysignerprivatekey","text":"A Writable Stream . Expects the JWS secret for HMAC, or the privateKey for ECDSA and RSA. Do not use if you passed a secret or key option to the constructor. Example: privateKeyStream . pipe ( signer . privateKey );","title":"signer.secretsigner.keysigner.privateKey"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#class-verifystream","text":"This is a Readable Stream that emits a single data event, the result of whether or not that signature was valid.","title":"Class: VerifyStream"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#event-done_1","text":"function (valid, obj) { } valid is a boolean for whether or not the signature is valid.","title":"Event: 'done'"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#verifiersignature","text":"A Writable Stream that expects a JWS Signature. Do not use if you passed a signature option to the constructor.","title":"verifier.signature"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#verifiersecretverifierkeyverifierpublickey","text":"A Writable Stream that expects a public key or secret. Do not use if you passed a key or secret option to the constructor.","title":"verifier.secretverifier.keyverifier.publicKey"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#todo","text":"It feels like there should be some convenience options/APIs for defining the algorithm rather than having to define a header object with { alg: 'ES512' } or whatever every time. X.509 support, ugh","title":"TODO"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#license","text":"MIT Copyright (c) 2013-2015 Brian J. Brennan Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/","text":"kareem Re-imagined take on the hooks module, meant to offer additional flexibility in allowing you to execute hooks whenever necessary, as opposed to simply wrapping a single function. Named for the NBA's all-time leading scorer Kareem Abdul-Jabbar, known for his mastery of the hook shot API pre hooks Much like hooks , kareem lets you define pre and post hooks: pre hooks are called before a given function executes. Unlike hooks, kareem stores hooks and other internal state in a separate object, rather than relying on inheritance. Furthermore, kareem exposes an execPre() function that allows you to execute your pre hooks when appropriate, giving you more fine-grained control over your function hooks. It runs without any hooks specified hooks . execPre ( 'cook' , null , function () { // ... }); It runs basic serial pre hooks pre hook functions take one parameter, a \"done\" function that you execute when your pre hook is finished. var count = 0 ; hooks . pre ( 'cook' , function ( done ) { ++ count ; done (); }); hooks . execPre ( 'cook' , null , function () { assert . equal ( 1 , count ); }); It can run multipe pre hooks var count1 = 0 ; var count2 = 0 ; hooks . pre ( 'cook' , function ( done ) { ++ count1 ; done (); }); hooks . pre ( 'cook' , function ( done ) { ++ count2 ; done (); }); hooks . execPre ( 'cook' , null , function () { assert . equal ( 1 , count1 ); assert . equal ( 1 , count2 ); }); It can run fully synchronous pre hooks If your pre hook function takes no parameters, its assumed to be fully synchronous. var count1 = 0 ; var count2 = 0 ; hooks . pre ( 'cook' , function () { ++ count1 ; }); hooks . pre ( 'cook' , function () { ++ count2 ; }); hooks . execPre ( 'cook' , null , function ( error ) { assert . equal ( null , error ); assert . equal ( 1 , count1 ); assert . equal ( 1 , count2 ); }); It properly attaches context to pre hooks Pre save hook functions are bound to the second parameter to execPre() hooks . pre ( 'cook' , function ( done ) { this . bacon = 3 ; done (); }); hooks . pre ( 'cook' , function ( done ) { this . eggs = 4 ; done (); }); var obj = { bacon : 0 , eggs : 0 }; // In the pre hooks, `this` will refer to `obj` hooks . execPre ( 'cook' , obj , function ( error ) { assert . equal ( null , error ); assert . equal ( 3 , obj . bacon ); assert . equal ( 4 , obj . eggs ); }); It can execute parallel (async) pre hooks Like the hooks module, you can declare \"async\" pre hooks - these take two parameters, the functions next() and done() . next() passes control to the next pre hook, but the underlying function won't be called until all async pre hooks have called done() . hooks . pre ( 'cook' , true , function ( next , done ) { this . bacon = 3 ; next (); setTimeout ( function () { done (); }, 5 ); }); hooks . pre ( 'cook' , true , function ( next , done ) { next (); var _this = this ; setTimeout ( function () { _this . eggs = 4 ; done (); }, 10 ); }); hooks . pre ( 'cook' , function ( next ) { this . waffles = false ; next (); }); var obj = { bacon : 0 , eggs : 0 }; hooks . execPre ( 'cook' , obj , function () { assert . equal ( 3 , obj . bacon ); assert . equal ( 4 , obj . eggs ); assert . equal ( false , obj . waffles ); }); It supports returning a promise You can also return a promise from your pre hooks instead of calling next() . When the returned promise resolves, kareem will kick off the next middleware. hooks . pre ( 'cook' , function () { return new Promise ( resolve => { setTimeout (() => { this . bacon = 3 ; resolve (); }, 100 ); }); }); var obj = { bacon : 0 }; hooks . execPre ( 'cook' , obj , function () { assert . equal ( 3 , obj . bacon ); }); post hooks acquit:ignore:end It runs without any hooks specified hooks . execPost ( 'cook' , null , [ 1 ], function ( error , eggs ) { assert . ifError ( error ); assert . equal ( 1 , eggs ); done (); }); It executes with parameters passed in hooks . post ( 'cook' , function ( eggs , bacon , callback ) { assert . equal ( 1 , eggs ); assert . equal ( 2 , bacon ); callback (); }); hooks . execPost ( 'cook' , null , [ 1 , 2 ], function ( error , eggs , bacon ) { assert . ifError ( error ); assert . equal ( 1 , eggs ); assert . equal ( 2 , bacon ); }); It can use synchronous post hooks var execed = {}; hooks . post ( 'cook' , function ( eggs , bacon ) { execed . first = true ; assert . equal ( 1 , eggs ); assert . equal ( 2 , bacon ); }); hooks . post ( 'cook' , function ( eggs , bacon , callback ) { execed . second = true ; assert . equal ( 1 , eggs ); assert . equal ( 2 , bacon ); callback (); }); hooks . execPost ( 'cook' , null , [ 1 , 2 ], function ( error , eggs , bacon ) { assert . ifError ( error ); assert . equal ( 2 , Object . keys ( execed ). length ); assert . ok ( execed . first ); assert . ok ( execed . second ); assert . equal ( 1 , eggs ); assert . equal ( 2 , bacon ); }); It supports returning a promise You can also return a promise from your post hooks instead of calling next() . When the returned promise resolves, kareem will kick off the next middleware. hooks . post ( 'cook' , function ( bacon ) { return new Promise ( resolve => { setTimeout (() => { this . bacon = 3 ; resolve (); }, 100 ); }); }); var obj = { bacon : 0 }; hooks . execPost ( 'cook' , obj , obj , function () { assert . equal ( obj . bacon , 3 ); }); wrap() acquit:ignore:end It wraps pre and post calls into one call hooks . pre ( 'cook' , true , function ( next , done ) { this . bacon = 3 ; next (); setTimeout ( function () { done (); }, 5 ); }); hooks . pre ( 'cook' , true , function ( next , done ) { next (); var _this = this ; setTimeout ( function () { _this . eggs = 4 ; done (); }, 10 ); }); hooks . pre ( 'cook' , function ( next ) { this . waffles = false ; next (); }); hooks . post ( 'cook' , function ( obj ) { obj . tofu = 'no' ; }); var obj = { bacon : 0 , eggs : 0 }; var args = [ obj ]; args . push ( function ( error , result ) { assert . ifError ( error ); assert . equal ( null , error ); assert . equal ( 3 , obj . bacon ); assert . equal ( 4 , obj . eggs ); assert . equal ( false , obj . waffles ); assert . equal ( 'no' , obj . tofu ); assert . equal ( obj , result ); }); hooks . wrap ( 'cook' , function ( o , callback ) { assert . equal ( 3 , obj . bacon ); assert . equal ( 4 , obj . eggs ); assert . equal ( false , obj . waffles ); assert . equal ( undefined , obj . tofu ); callback ( null , o ); }, obj , args ); createWrapper() It wraps wrap() into a callable function hooks . pre ( 'cook' , true , function ( next , done ) { this . bacon = 3 ; next (); setTimeout ( function () { done (); }, 5 ); }); hooks . pre ( 'cook' , true , function ( next , done ) { next (); var _this = this ; setTimeout ( function () { _this . eggs = 4 ; done (); }, 10 ); }); hooks . pre ( 'cook' , function ( next ) { this . waffles = false ; next (); }); hooks . post ( 'cook' , function ( obj ) { obj . tofu = 'no' ; }); var obj = { bacon : 0 , eggs : 0 }; var cook = hooks . createWrapper ( 'cook' , function ( o , callback ) { assert . equal ( 3 , obj . bacon ); assert . equal ( 4 , obj . eggs ); assert . equal ( false , obj . waffles ); assert . equal ( undefined , obj . tofu ); callback ( null , o ); }, obj ); cook ( obj , function ( error , result ) { assert . ifError ( error ); assert . equal ( 3 , obj . bacon ); assert . equal ( 4 , obj . eggs ); assert . equal ( false , obj . waffles ); assert . equal ( 'no' , obj . tofu ); assert . equal ( obj , result ); }); clone() acquit:ignore:end It clones a Kareem object var k1 = new Kareem (); k1 . pre ( 'cook' , function () {}); k1 . post ( 'cook' , function () {}); var k2 = k1 . clone (); assert . deepEqual ( Array . from ( k2 . _pres . keys ()), [ 'cook' ]); assert . deepEqual ( Array . from ( k2 . _posts . keys ()), [ 'cook' ]); merge() It pulls hooks from another Kareem object var k1 = new Kareem (); var test1 = function () {}; k1 . pre ( 'cook' , test1 ); k1 . post ( 'cook' , function () {}); var k2 = new Kareem (); var test2 = function () {}; k2 . pre ( 'cook' , test2 ); var k3 = k2 . merge ( k1 ); assert . equal ( k3 . _pres . get ( 'cook' ). length , 2 ); assert . equal ( k3 . _pres . get ( 'cook' )[ 0 ]. fn , test2 ); assert . equal ( k3 . _pres . get ( 'cook' )[ 1 ]. fn , test1 ); assert . equal ( k3 . _posts . get ( 'cook' ). length , 1 );","title":"kareem"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#kareem","text":"Re-imagined take on the hooks module, meant to offer additional flexibility in allowing you to execute hooks whenever necessary, as opposed to simply wrapping a single function. Named for the NBA's all-time leading scorer Kareem Abdul-Jabbar, known for his mastery of the hook shot","title":"kareem"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#api","text":"","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#pre-hooks","text":"Much like hooks , kareem lets you define pre and post hooks: pre hooks are called before a given function executes. Unlike hooks, kareem stores hooks and other internal state in a separate object, rather than relying on inheritance. Furthermore, kareem exposes an execPre() function that allows you to execute your pre hooks when appropriate, giving you more fine-grained control over your function hooks.","title":"pre hooks"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-runs-without-any-hooks-specified","text":"hooks . execPre ( 'cook' , null , function () { // ... });","title":"It runs without any hooks specified"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-runs-basic-serial-pre-hooks","text":"pre hook functions take one parameter, a \"done\" function that you execute when your pre hook is finished. var count = 0 ; hooks . pre ( 'cook' , function ( done ) { ++ count ; done (); }); hooks . execPre ( 'cook' , null , function () { assert . equal ( 1 , count ); });","title":"It runs basic serial pre hooks"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-can-run-multipe-pre-hooks","text":"var count1 = 0 ; var count2 = 0 ; hooks . pre ( 'cook' , function ( done ) { ++ count1 ; done (); }); hooks . pre ( 'cook' , function ( done ) { ++ count2 ; done (); }); hooks . execPre ( 'cook' , null , function () { assert . equal ( 1 , count1 ); assert . equal ( 1 , count2 ); });","title":"It can run multipe pre hooks"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-can-run-fully-synchronous-pre-hooks","text":"If your pre hook function takes no parameters, its assumed to be fully synchronous. var count1 = 0 ; var count2 = 0 ; hooks . pre ( 'cook' , function () { ++ count1 ; }); hooks . pre ( 'cook' , function () { ++ count2 ; }); hooks . execPre ( 'cook' , null , function ( error ) { assert . equal ( null , error ); assert . equal ( 1 , count1 ); assert . equal ( 1 , count2 ); });","title":"It can run fully synchronous pre hooks"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-properly-attaches-context-to-pre-hooks","text":"Pre save hook functions are bound to the second parameter to execPre() hooks . pre ( 'cook' , function ( done ) { this . bacon = 3 ; done (); }); hooks . pre ( 'cook' , function ( done ) { this . eggs = 4 ; done (); }); var obj = { bacon : 0 , eggs : 0 }; // In the pre hooks, `this` will refer to `obj` hooks . execPre ( 'cook' , obj , function ( error ) { assert . equal ( null , error ); assert . equal ( 3 , obj . bacon ); assert . equal ( 4 , obj . eggs ); });","title":"It properly attaches context to pre hooks"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-can-execute-parallel-async-pre-hooks","text":"Like the hooks module, you can declare \"async\" pre hooks - these take two parameters, the functions next() and done() . next() passes control to the next pre hook, but the underlying function won't be called until all async pre hooks have called done() . hooks . pre ( 'cook' , true , function ( next , done ) { this . bacon = 3 ; next (); setTimeout ( function () { done (); }, 5 ); }); hooks . pre ( 'cook' , true , function ( next , done ) { next (); var _this = this ; setTimeout ( function () { _this . eggs = 4 ; done (); }, 10 ); }); hooks . pre ( 'cook' , function ( next ) { this . waffles = false ; next (); }); var obj = { bacon : 0 , eggs : 0 }; hooks . execPre ( 'cook' , obj , function () { assert . equal ( 3 , obj . bacon ); assert . equal ( 4 , obj . eggs ); assert . equal ( false , obj . waffles ); });","title":"It can execute parallel (async) pre hooks"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-supports-returning-a-promise","text":"You can also return a promise from your pre hooks instead of calling next() . When the returned promise resolves, kareem will kick off the next middleware. hooks . pre ( 'cook' , function () { return new Promise ( resolve => { setTimeout (() => { this . bacon = 3 ; resolve (); }, 100 ); }); }); var obj = { bacon : 0 }; hooks . execPre ( 'cook' , obj , function () { assert . equal ( 3 , obj . bacon ); });","title":"It supports returning a promise"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#post-hooks","text":"acquit:ignore:end","title":"post hooks"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-runs-without-any-hooks-specified_1","text":"hooks . execPost ( 'cook' , null , [ 1 ], function ( error , eggs ) { assert . ifError ( error ); assert . equal ( 1 , eggs ); done (); });","title":"It runs without any hooks specified"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-executes-with-parameters-passed-in","text":"hooks . post ( 'cook' , function ( eggs , bacon , callback ) { assert . equal ( 1 , eggs ); assert . equal ( 2 , bacon ); callback (); }); hooks . execPost ( 'cook' , null , [ 1 , 2 ], function ( error , eggs , bacon ) { assert . ifError ( error ); assert . equal ( 1 , eggs ); assert . equal ( 2 , bacon ); });","title":"It executes with parameters passed in"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-can-use-synchronous-post-hooks","text":"var execed = {}; hooks . post ( 'cook' , function ( eggs , bacon ) { execed . first = true ; assert . equal ( 1 , eggs ); assert . equal ( 2 , bacon ); }); hooks . post ( 'cook' , function ( eggs , bacon , callback ) { execed . second = true ; assert . equal ( 1 , eggs ); assert . equal ( 2 , bacon ); callback (); }); hooks . execPost ( 'cook' , null , [ 1 , 2 ], function ( error , eggs , bacon ) { assert . ifError ( error ); assert . equal ( 2 , Object . keys ( execed ). length ); assert . ok ( execed . first ); assert . ok ( execed . second ); assert . equal ( 1 , eggs ); assert . equal ( 2 , bacon ); });","title":"It can use synchronous post hooks"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-supports-returning-a-promise_1","text":"You can also return a promise from your post hooks instead of calling next() . When the returned promise resolves, kareem will kick off the next middleware. hooks . post ( 'cook' , function ( bacon ) { return new Promise ( resolve => { setTimeout (() => { this . bacon = 3 ; resolve (); }, 100 ); }); }); var obj = { bacon : 0 }; hooks . execPost ( 'cook' , obj , obj , function () { assert . equal ( obj . bacon , 3 ); });","title":"It supports returning a promise"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#wrap","text":"acquit:ignore:end","title":"wrap()"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-wraps-pre-and-post-calls-into-one-call","text":"hooks . pre ( 'cook' , true , function ( next , done ) { this . bacon = 3 ; next (); setTimeout ( function () { done (); }, 5 ); }); hooks . pre ( 'cook' , true , function ( next , done ) { next (); var _this = this ; setTimeout ( function () { _this . eggs = 4 ; done (); }, 10 ); }); hooks . pre ( 'cook' , function ( next ) { this . waffles = false ; next (); }); hooks . post ( 'cook' , function ( obj ) { obj . tofu = 'no' ; }); var obj = { bacon : 0 , eggs : 0 }; var args = [ obj ]; args . push ( function ( error , result ) { assert . ifError ( error ); assert . equal ( null , error ); assert . equal ( 3 , obj . bacon ); assert . equal ( 4 , obj . eggs ); assert . equal ( false , obj . waffles ); assert . equal ( 'no' , obj . tofu ); assert . equal ( obj , result ); }); hooks . wrap ( 'cook' , function ( o , callback ) { assert . equal ( 3 , obj . bacon ); assert . equal ( 4 , obj . eggs ); assert . equal ( false , obj . waffles ); assert . equal ( undefined , obj . tofu ); callback ( null , o ); }, obj , args );","title":"It wraps pre and post calls into one call"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#createwrapper","text":"","title":"createWrapper()"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-wraps-wrap-into-a-callable-function","text":"hooks . pre ( 'cook' , true , function ( next , done ) { this . bacon = 3 ; next (); setTimeout ( function () { done (); }, 5 ); }); hooks . pre ( 'cook' , true , function ( next , done ) { next (); var _this = this ; setTimeout ( function () { _this . eggs = 4 ; done (); }, 10 ); }); hooks . pre ( 'cook' , function ( next ) { this . waffles = false ; next (); }); hooks . post ( 'cook' , function ( obj ) { obj . tofu = 'no' ; }); var obj = { bacon : 0 , eggs : 0 }; var cook = hooks . createWrapper ( 'cook' , function ( o , callback ) { assert . equal ( 3 , obj . bacon ); assert . equal ( 4 , obj . eggs ); assert . equal ( false , obj . waffles ); assert . equal ( undefined , obj . tofu ); callback ( null , o ); }, obj ); cook ( obj , function ( error , result ) { assert . ifError ( error ); assert . equal ( 3 , obj . bacon ); assert . equal ( 4 , obj . eggs ); assert . equal ( false , obj . waffles ); assert . equal ( 'no' , obj . tofu ); assert . equal ( obj , result ); });","title":"It wraps wrap() into a callable function"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#clone","text":"acquit:ignore:end","title":"clone()"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-clones-a-kareem-object","text":"var k1 = new Kareem (); k1 . pre ( 'cook' , function () {}); k1 . post ( 'cook' , function () {}); var k2 = k1 . clone (); assert . deepEqual ( Array . from ( k2 . _pres . keys ()), [ 'cook' ]); assert . deepEqual ( Array . from ( k2 . _posts . keys ()), [ 'cook' ]);","title":"It clones a Kareem object"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#merge","text":"","title":"merge()"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-pulls-hooks-from-another-kareem-object","text":"var k1 = new Kareem (); var test1 = function () {}; k1 . pre ( 'cook' , test1 ); k1 . post ( 'cook' , function () {}); var k2 = new Kareem (); var test2 = function () {}; k2 . pre ( 'cook' , test2 ); var k3 = k2 . merge ( k1 ); assert . equal ( k3 . _pres . get ( 'cook' ). length , 2 ); assert . equal ( k3 . _pres . get ( 'cook' )[ 0 ]. fn , test2 ); assert . equal ( k3 . _pres . get ( 'cook' )[ 1 ]. fn , test1 ); assert . equal ( k3 . _posts . get ( 'cook' ). length , 1 );","title":"It pulls hooks from another Kareem object"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/","text":"Changelog 2.6.0 (2024-03-04) feat: add TypeScript types 2.5.1 (2023-01-06) fix: avoid passing final callback to pre hook, because calling the callback can mess up hook execution #36 Automattic/mongoose#12836 2.5.0 (2022-12-01) feat: add errorHandler option to post() #34 2.4.0 (2022-06-13) feat: add overwriteResult() and skipWrappedFunction() for more advanced control flow 2.3.4 (2022-02-10) perf: various performance improvements #27 #24 #23 #22 #21 #20 2.3.3 (2021-12-26) fix: handle sync errors in wrap() 2.3.2 (2020-12-08) fix: handle sync errors in pre hooks if there are multiple hooks 2.3.0 (2018-09-24) chore(release): 2.2.3 ( c8f2695 ) chore(release): 2.2.4 ( a377a4f ) chore(release): 2.2.5 ( 5a495e3 ) fix(filter): copy async pres correctly with filter() ( 1b1ed8a ), closes Automattic/mongoose#3054 feat: add filter() function ( 1f641f4 ) feat: support storing options on pre and post hooks ( 59220b9 ) 2.2.3 (2018-09-10) chore: release 2.2.3 ( af653a3 ) 2.2.2 (2018-09-10) chore: release 2.2.2 ( 3f0144d ) fix: allow merge() to not clone ( e628d65 ) 2.2.1 (2018-06-05) chore: release 2.2.1 ( 4625a64 ) chore: remove lockfile from git ( 7f3e4e6 ) fix: handle numAsync correctly when merging ( fef8e7e ) test: repro issue with not copying numAsync ( 952d9db ) 2.2.0 (2018-06-05) chore: release 2.2.0 ( ff9ad03 ) fix: use maps instead of objects for _pres and _posts so toString() doesn't get reported as having ( 55df303 ), closes Automattic/mongoose#6538 2.1.0 (2018-05-16) chore: release 2.1.0 ( ba5f1bc ) feat: add option to check wrapped function return value for promises ( c9d7dd1 ) refactor: use const in wrap() ( 0fc21f9 ) 2.0.7 (2018-04-28) chore: release 2.0.7 ( 0bf91e6 ) feat: add hasHooks() ( 225f18d ), closes Automattic/mongoose#6385 2.0.6 (2018-03-22) chore: release 2.0.6 ( f3d406b ) fix(wrap): ensure fast path still wraps function in nextTick() for chaining ( 7000494 ), closes Automattic/mongoose#6250 dsanel/mongoose-delete#36 2.0.5 (2018-02-22) chore: release 2.0.5 ( 3286612 ) perf(createWrapper): don't create wrapper if there are no hooks ( 5afc5b9 ), closes Automattic/mongoose#6126 2.0.4 (2018-02-08) chore: release 2.0.4 ( 2ab0293 ) 2.0.3 (2018-02-01) chore: release 2.0.3 ( 3c1abe5 ) fix: use process.nextTick() re: Automattic/mongoose#6074 ( e5bfe33 ), closes Automattic/mongoose#6074 2.0.2 (2018-01-24) chore: fix license ( a9d755c ), closes #10 chore: release 2.0.2 ( fe87ab6 ) 2.0.1 (2018-01-09) chore: release 2.0.1 with lockfile bump ( 09c44fb ) 2.0.0 (2018-01-09) chore: bump marked re: security ( cc564a9 ) chore: release 2.0.0 ( f511d1c ) 2.0.0-rc5 (2017-12-23) chore: fix build on node 4+5 ( 6dac5a4 ) chore: fix built on node 4 + 5 again ( 434ef0a ) chore: release 2.0.0-rc5 ( 25a32ee ) 2.0.0-rc4 (2017-12-22) chore: release 2.0.0-rc4 ( 49fc083 ) BREAKING CHANGE: deduplicate when merging hooks re: Automattic/mongoose#2945 ( d458573 ), closes Automattic/mongoose#2945 2.0.0-rc3 (2017-12-22) chore: release 2.0.0-rc3 ( adaaa00 ) feat: support returning promises from middleware functions ( 05b4480 ), closes Automattic/mongoose#3779 2.0.0-rc2 (2017-12-21) chore: release 2.0.0-rc2 ( 76325fa ) fix: ensure next() and done() run in next tick ( 6c20684 ) 2.0.0-rc1 (2017-12-21) chore: improve test coverage re: Automattic/mongoose#3232 ( 7b45cf0 ), closes Automattic/mongoose#3232 chore: release 2.0.0-rc1 ( 9b83f52 ) BREAKING CHANGE: report sync exceptions as errors, only allow calling next() and done() once ( 674adcc ), closes Automattic/mongoose#3483 2.0.0-rc0 (2017-12-17) chore: release 2.0.0-rc0 ( 16b44b5 ) BREAKING CHANGE: drop support for node < 4 ( 9cbb8c7 ) BREAKING CHANGE: remove useLegacyPost and add several new features ( 6dd8531 ), closes Automattic/mongoose#3232 1.5.0 (2017-07-20) chore: release 1.5.0 ( 9c491a0 ) fix: improve post error handlers results ( 9928dd5 ), closes Automattic/mongoose#5466 1.4.2 (2017-07-06) chore: release 1.4.2 ( 8d14ac5 ) fix: correct args re: Automattic/mongoose#5405 ( 3f28ae6 ), closes Automattic/mongoose#5405 1.4.1 (2017-04-25) chore: release 1.4.1 ( 5ecf0c2 ) fix: handle numAsyncPres with clone() ( c72e857 ), closes #8 test: repro #8 ( 9b4d6b2 ), closes #8 1.4.0 (2017-04-19) chore: release 1.4.0 ( 101c5f5 ) feat: add merge() function ( 285325e ) 1.3.0 (2017-03-26) chore: release 1.3.0 ( f3a9e50 ) feat: pass function args to execPre ( 4dd466d ) 1.2.1 (2017-02-03) chore: release 1.2.1 ( d97081f ) fix: filter out _kareemIgnored args for error handlers re: Automattic/mongoose#4925 ( ddc7aeb ), closes Automattic/mongoose#4925 fix: make error handlers handle errors in pre hooks ( af38033 ), closes Automattic/mongoose#4927 1.2.0 (2017-01-02) chore: release 1.2.0 ( 033225c ) chore: upgrade deps ( f9e9a09 ) feat: add _kareemIgnore re: Automattic/mongoose#4836 ( 7957771 ), closes Automattic/mongoose#4836 1.1.5 (2016-12-13) chore: release 1.1.5 ( 1a9f684 ) fix: correct field name ( 04a0e9d ) 1.1.4 (2016-12-09) chore: release 1.1.4 ( ece401c ) chore: run tests on node 6 ( e0cb1cb ) fix: only copy own properties in clone() ( dfe28ce ), closes #7 1.1.3 (2016-06-27) chore: release 1.1.3 ( 87171c8 ) fix: couple more issues with arg processing ( c65f523 ) 1.1.2 (2016-06-27) chore: release 1.1.2 ( 8e102b6 ) fix: add early return ( 4feda4e ) 1.1.1 (2016-06-27) chore: release 1.1.1 ( 8bb3050 ) fix: skip error handlers if no error ( 0eb3a44 ) 1.1.0 (2016-05-11) chore: release 1.1.0 ( 85332d9 ) chore: test on node 4 and node 5 ( 1faefa1 ) 100% coverage again ( c9aee4e ) add support for error post hooks ( d378113 ) basic setup for sync hooks #4 ( 55aa081 ), closes #4 proof of concept for error handlers ( e4a07d9 ) refactor out handleWrapError helper ( b19af38 ) 1.0.1 (2015-05-10) Fix #1 ( de60dc6 ), closes #1 release 1.0.1 ( 6971088 ) Run tests on iojs in travis ( adcd201 ) support legacy post hook behavior in wrap() ( 23fa74c ) Use node 0.12 in travis ( 834689d ) 1.0.0 (2015-01-28) Tag 1.0.0 ( 4c5a35a ) 0.0.8 (2015-01-27) Add clone function ( 688bba7 ) Add jscs for style checking ( 5c93149 ) Bump 0.0.8 ( 03c0d2f ) Fix jscs config, add gulp rules ( 9989abf ) fix Makefile typo ( 1f7e61a ) 0.0.7 (2015-01-04) Bump 0.0.7 ( 98ef173 ) fix LearnBoost/mongoose#2553 - use null instead of undefined for err ( 9157b48 ), closes LearnBoost/mongoose#2553 Regenerate docs ( 2331cdf ) 0.0.6 (2015-01-01) Update docs and bump 0.0.6 ( 92c12a7 ) 0.0.5 (2015-01-01) Add coverage rule to Makefile ( 825a91c ) Add coveralls to README ( fb52369 ) Add coveralls to travis ( 93f6f15 ) Add createWrapper() function ( ea77741 ) Add istanbul code coverage ( 6eceeef ) Add some more comments for examples ( c5b0c6f ) Add travis ( e6dcb06 ) Add travis badge to docs ( ad8c9b3 ) Add wrap() tests, 100% coverage ( 6945be4 ) Better test coverage for execPost ( d9ad539 ) Bump 0.0.5 ( 69875b1 ) Docs fix ( 15b7098 ) Fix silly mistake in docs generation ( 50373eb ) Fix typo in readme ( fec4925 ) Linkify travis badge ( 92b25fe ) Make travis run coverage ( 747157b ) Move travis status badge ( d52e89b ) Quick fix for coverage ( 50bbddb ) Typo fix ( adea794 ) 0.0.4 (2014-12-13) Bump 0.0.4, run docs generation ( 51a15fe ) Use correct post parameters in wrap() ( 9bb5da3 ) 0.0.3 (2014-12-12) Add npm test script, fix small bug with args not getting passed through post ( 49e3e68 ) Bump 0.0.3 ( 65621d8 ) Update readme ( 901388b ) 0.0.2 (2014-12-12) Add github repo and bump 0.0.2 ( 59db8be ) 0.0.1 (2014-12-12) Add basic docs ( ad29ea4 ) Add pre hooks ( 2ffc356 ) Add wrap function ( 68c540c ) Bump to version 0.0.1 ( a4bfd68 ) Initial commit ( 4002458 ) Initial deposit ( 98fc489 ) Post hooks ( 395b67c ) Some basic setup work ( 82df75e ) Support sync pre hooks ( 1cc1b9f ) Update package.json description ( 978da18 ) 2.2.5 (2018-09-24) 2.2.4 (2018-09-24) 2.2.3 (2018-09-24) fix(filter): copy async pres correctly with filter() ( 1b1ed8a ), closes Automattic/mongoose#3054 feat: add filter() function ( 1f641f4 ) feat: support storing options on pre and post hooks ( 59220b9 ) 2.2.3 (2018-09-10) chore: release 2.2.3 ( af653a3 ) 2.2.2 (2018-09-10) chore: release 2.2.2 ( 3f0144d ) fix: allow merge() to not clone ( e628d65 ) 2.2.1 (2018-06-05) chore: release 2.2.1 ( 4625a64 ) chore: remove lockfile from git ( 7f3e4e6 ) fix: handle numAsync correctly when merging ( fef8e7e ) test: repro issue with not copying numAsync ( 952d9db ) 2.2.0 (2018-06-05) chore: release 2.2.0 ( ff9ad03 ) fix: use maps instead of objects for _pres and _posts so toString() doesn't get reported as having ( 55df303 ), closes Automattic/mongoose#6538 2.1.0 (2018-05-16) chore: release 2.1.0 ( ba5f1bc ) feat: add option to check wrapped function return value for promises ( c9d7dd1 ) refactor: use const in wrap() ( 0fc21f9 ) 2.0.7 (2018-04-28) chore: release 2.0.7 ( 0bf91e6 ) feat: add hasHooks() ( 225f18d ), closes Automattic/mongoose#6385 2.0.6 (2018-03-22) chore: release 2.0.6 ( f3d406b ) fix(wrap): ensure fast path still wraps function in nextTick() for chaining ( 7000494 ), closes Automattic/mongoose#6250 dsanel/mongoose-delete#36 2.0.5 (2018-02-22) chore: release 2.0.5 ( 3286612 ) perf(createWrapper): don't create wrapper if there are no hooks ( 5afc5b9 ), closes Automattic/mongoose#6126 2.0.4 (2018-02-08) chore: release 2.0.4 ( 2ab0293 ) 2.0.3 (2018-02-01) chore: release 2.0.3 ( 3c1abe5 ) fix: use process.nextTick() re: Automattic/mongoose#6074 ( e5bfe33 ), closes Automattic/mongoose#6074 2.0.2 (2018-01-24) chore: fix license ( a9d755c ), closes #10 chore: release 2.0.2 ( fe87ab6 ) 2.0.1 (2018-01-09) chore: release 2.0.1 with lockfile bump ( 09c44fb ) 2.0.0 (2018-01-09) chore: bump marked re: security ( cc564a9 ) chore: release 2.0.0 ( f511d1c ) 2.0.0-rc5 (2017-12-23) chore: fix build on node 4+5 ( 6dac5a4 ) chore: fix built on node 4 + 5 again ( 434ef0a ) chore: release 2.0.0-rc5 ( 25a32ee ) 2.0.0-rc4 (2017-12-22) chore: release 2.0.0-rc4 ( 49fc083 ) BREAKING CHANGE: deduplicate when merging hooks re: Automattic/mongoose#2945 ( d458573 ), closes Automattic/mongoose#2945 2.0.0-rc3 (2017-12-22) chore: release 2.0.0-rc3 ( adaaa00 ) feat: support returning promises from middleware functions ( 05b4480 ), closes Automattic/mongoose#3779 2.0.0-rc2 (2017-12-21) chore: release 2.0.0-rc2 ( 76325fa ) fix: ensure next() and done() run in next tick ( 6c20684 ) 2.0.0-rc1 (2017-12-21) chore: improve test coverage re: Automattic/mongoose#3232 ( 7b45cf0 ), closes Automattic/mongoose#3232 chore: release 2.0.0-rc1 ( 9b83f52 ) BREAKING CHANGE: report sync exceptions as errors, only allow calling next() and done() once ( 674adcc ), closes Automattic/mongoose#3483 2.0.0-rc0 (2017-12-17) chore: release 2.0.0-rc0 ( 16b44b5 ) BREAKING CHANGE: drop support for node < 4 ( 9cbb8c7 ) BREAKING CHANGE: remove useLegacyPost and add several new features ( 6dd8531 ), closes Automattic/mongoose#3232 1.5.0 (2017-07-20) chore: release 1.5.0 ( 9c491a0 ) fix: improve post error handlers results ( 9928dd5 ), closes Automattic/mongoose#5466 1.4.2 (2017-07-06) chore: release 1.4.2 ( 8d14ac5 ) fix: correct args re: Automattic/mongoose#5405 ( 3f28ae6 ), closes Automattic/mongoose#5405 1.4.1 (2017-04-25) chore: release 1.4.1 ( 5ecf0c2 ) fix: handle numAsyncPres with clone() ( c72e857 ), closes #8 test: repro #8 ( 9b4d6b2 ), closes #8 1.4.0 (2017-04-19) chore: release 1.4.0 ( 101c5f5 ) feat: add merge() function ( 285325e ) 1.3.0 (2017-03-26) chore: release 1.3.0 ( f3a9e50 ) feat: pass function args to execPre ( 4dd466d ) 1.2.1 (2017-02-03) chore: release 1.2.1 ( d97081f ) fix: filter out _kareemIgnored args for error handlers re: Automattic/mongoose#4925 ( ddc7aeb ), closes Automattic/mongoose#4925 fix: make error handlers handle errors in pre hooks ( af38033 ), closes Automattic/mongoose#4927 1.2.0 (2017-01-02) chore: release 1.2.0 ( 033225c ) chore: upgrade deps ( f9e9a09 ) feat: add _kareemIgnore re: Automattic/mongoose#4836 ( 7957771 ), closes Automattic/mongoose#4836 1.1.5 (2016-12-13) chore: release 1.1.5 ( 1a9f684 ) fix: correct field name ( 04a0e9d ) 1.1.4 (2016-12-09) chore: release 1.1.4 ( ece401c ) chore: run tests on node 6 ( e0cb1cb ) fix: only copy own properties in clone() ( dfe28ce ), closes #7 1.1.3 (2016-06-27) chore: release 1.1.3 ( 87171c8 ) fix: couple more issues with arg processing ( c65f523 ) 1.1.2 (2016-06-27) chore: release 1.1.2 ( 8e102b6 ) fix: add early return ( 4feda4e ) 1.1.1 (2016-06-27) chore: release 1.1.1 ( 8bb3050 ) fix: skip error handlers if no error ( 0eb3a44 ) 1.1.0 (2016-05-11) chore: release 1.1.0 ( 85332d9 ) chore: test on node 4 and node 5 ( 1faefa1 ) 100% coverage again ( c9aee4e ) add support for error post hooks ( d378113 ) basic setup for sync hooks #4 ( 55aa081 ), closes #4 proof of concept for error handlers ( e4a07d9 ) refactor out handleWrapError helper ( b19af38 ) 1.0.1 (2015-05-10) Fix #1 ( de60dc6 ), closes #1 release 1.0.1 ( 6971088 ) Run tests on iojs in travis ( adcd201 ) support legacy post hook behavior in wrap() ( 23fa74c ) Use node 0.12 in travis ( 834689d ) 1.0.0 (2015-01-28) Tag 1.0.0 ( 4c5a35a ) 0.0.8 (2015-01-27) Add clone function ( 688bba7 ) Add jscs for style checking ( 5c93149 ) Bump 0.0.8 ( 03c0d2f ) Fix jscs config, add gulp rules ( 9989abf ) fix Makefile typo ( 1f7e61a ) 0.0.7 (2015-01-04) Bump 0.0.7 ( 98ef173 ) fix LearnBoost/mongoose#2553 - use null instead of undefined for err ( 9157b48 ), closes LearnBoost/mongoose#2553 Regenerate docs ( 2331cdf ) 0.0.6 (2015-01-01) Update docs and bump 0.0.6 ( 92c12a7 ) 0.0.5 (2015-01-01) Add coverage rule to Makefile ( 825a91c ) Add coveralls to README ( fb52369 ) Add coveralls to travis ( 93f6f15 ) Add createWrapper() function ( ea77741 ) Add istanbul code coverage ( 6eceeef ) Add some more comments for examples ( c5b0c6f ) Add travis ( e6dcb06 ) Add travis badge to docs ( ad8c9b3 ) Add wrap() tests, 100% coverage ( 6945be4 ) Better test coverage for execPost ( d9ad539 ) Bump 0.0.5 ( 69875b1 ) Docs fix ( 15b7098 ) Fix silly mistake in docs generation ( 50373eb ) Fix typo in readme ( fec4925 ) Linkify travis badge ( 92b25fe ) Make travis run coverage ( 747157b ) Move travis status badge ( d52e89b ) Quick fix for coverage ( 50bbddb ) Typo fix ( adea794 ) 0.0.4 (2014-12-13) Bump 0.0.4, run docs generation ( 51a15fe ) Use correct post parameters in wrap() ( 9bb5da3 ) 0.0.3 (2014-12-12) Add npm test script, fix small bug with args not getting passed through post ( 49e3e68 ) Bump 0.0.3 ( 65621d8 ) Update readme ( 901388b ) 0.0.2 (2014-12-12) Add github repo and bump 0.0.2 ( 59db8be ) 0.0.1 (2014-12-12) Add basic docs ( ad29ea4 ) Add pre hooks ( 2ffc356 ) Add wrap function ( 68c540c ) Bump to version 0.0.1 ( a4bfd68 ) Initial commit ( 4002458 ) Initial deposit ( 98fc489 ) Post hooks ( 395b67c ) Some basic setup work ( 82df75e ) Support sync pre hooks ( 1cc1b9f ) Update package.json description ( 978da18 )","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#changelog","text":"","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#260-2024-03-04","text":"feat: add TypeScript types","title":"2.6.0 (2024-03-04)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#251-2023-01-06","text":"fix: avoid passing final callback to pre hook, because calling the callback can mess up hook execution #36 Automattic/mongoose#12836","title":"2.5.1 (2023-01-06)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#250-2022-12-01","text":"feat: add errorHandler option to post() #34","title":"2.5.0 (2022-12-01)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#240-2022-06-13","text":"feat: add overwriteResult() and skipWrappedFunction() for more advanced control flow","title":"2.4.0 (2022-06-13)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#234-2022-02-10","text":"perf: various performance improvements #27 #24 #23 #22 #21 #20","title":"2.3.4 (2022-02-10)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#233-2021-12-26","text":"fix: handle sync errors in wrap()","title":"2.3.3 (2021-12-26)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#232-2020-12-08","text":"fix: handle sync errors in pre hooks if there are multiple hooks","title":"2.3.2 (2020-12-08)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#230-2018-09-24","text":"chore(release): 2.2.3 ( c8f2695 ) chore(release): 2.2.4 ( a377a4f ) chore(release): 2.2.5 ( 5a495e3 ) fix(filter): copy async pres correctly with filter() ( 1b1ed8a ), closes Automattic/mongoose#3054 feat: add filter() function ( 1f641f4 ) feat: support storing options on pre and post hooks ( 59220b9 )","title":"2.3.0 (2018-09-24)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#223-2018-09-10","text":"chore: release 2.2.3 ( af653a3 )","title":"2.2.3 (2018-09-10)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#222-2018-09-10","text":"chore: release 2.2.2 ( 3f0144d ) fix: allow merge() to not clone ( e628d65 )","title":"2.2.2 (2018-09-10)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#221-2018-06-05","text":"chore: release 2.2.1 ( 4625a64 ) chore: remove lockfile from git ( 7f3e4e6 ) fix: handle numAsync correctly when merging ( fef8e7e ) test: repro issue with not copying numAsync ( 952d9db )","title":"2.2.1 (2018-06-05)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#220-2018-06-05","text":"chore: release 2.2.0 ( ff9ad03 ) fix: use maps instead of objects for _pres and _posts so toString() doesn't get reported as having ( 55df303 ), closes Automattic/mongoose#6538","title":"2.2.0 (2018-06-05)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#210-2018-05-16","text":"chore: release 2.1.0 ( ba5f1bc ) feat: add option to check wrapped function return value for promises ( c9d7dd1 ) refactor: use const in wrap() ( 0fc21f9 )","title":"2.1.0 (2018-05-16)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#207-2018-04-28","text":"chore: release 2.0.7 ( 0bf91e6 ) feat: add hasHooks() ( 225f18d ), closes Automattic/mongoose#6385","title":"2.0.7 (2018-04-28)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#206-2018-03-22","text":"chore: release 2.0.6 ( f3d406b ) fix(wrap): ensure fast path still wraps function in nextTick() for chaining ( 7000494 ), closes Automattic/mongoose#6250 dsanel/mongoose-delete#36","title":"2.0.6 (2018-03-22)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#205-2018-02-22","text":"chore: release 2.0.5 ( 3286612 ) perf(createWrapper): don't create wrapper if there are no hooks ( 5afc5b9 ), closes Automattic/mongoose#6126","title":"2.0.5 (2018-02-22)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#204-2018-02-08","text":"chore: release 2.0.4 ( 2ab0293 )","title":"2.0.4 (2018-02-08)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#203-2018-02-01","text":"chore: release 2.0.3 ( 3c1abe5 ) fix: use process.nextTick() re: Automattic/mongoose#6074 ( e5bfe33 ), closes Automattic/mongoose#6074","title":"2.0.3 (2018-02-01)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#202-2018-01-24","text":"chore: fix license ( a9d755c ), closes #10 chore: release 2.0.2 ( fe87ab6 )","title":"2.0.2 (2018-01-24)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#201-2018-01-09","text":"chore: release 2.0.1 with lockfile bump ( 09c44fb )","title":"2.0.1 (2018-01-09)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#200-2018-01-09","text":"chore: bump marked re: security ( cc564a9 ) chore: release 2.0.0 ( f511d1c )","title":"2.0.0 (2018-01-09)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#200-rc5-2017-12-23","text":"chore: fix build on node 4+5 ( 6dac5a4 ) chore: fix built on node 4 + 5 again ( 434ef0a ) chore: release 2.0.0-rc5 ( 25a32ee )","title":"2.0.0-rc5 (2017-12-23)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#200-rc4-2017-12-22","text":"chore: release 2.0.0-rc4 ( 49fc083 ) BREAKING CHANGE: deduplicate when merging hooks re: Automattic/mongoose#2945 ( d458573 ), closes Automattic/mongoose#2945","title":"2.0.0-rc4 (2017-12-22)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#200-rc3-2017-12-22","text":"chore: release 2.0.0-rc3 ( adaaa00 ) feat: support returning promises from middleware functions ( 05b4480 ), closes Automattic/mongoose#3779","title":"2.0.0-rc3 (2017-12-22)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#200-rc2-2017-12-21","text":"chore: release 2.0.0-rc2 ( 76325fa ) fix: ensure next() and done() run in next tick ( 6c20684 )","title":"2.0.0-rc2 (2017-12-21)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#200-rc1-2017-12-21","text":"chore: improve test coverage re: Automattic/mongoose#3232 ( 7b45cf0 ), closes Automattic/mongoose#3232 chore: release 2.0.0-rc1 ( 9b83f52 ) BREAKING CHANGE: report sync exceptions as errors, only allow calling next() and done() once ( 674adcc ), closes Automattic/mongoose#3483","title":"2.0.0-rc1 (2017-12-21)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#200-rc0-2017-12-17","text":"chore: release 2.0.0-rc0 ( 16b44b5 ) BREAKING CHANGE: drop support for node < 4 ( 9cbb8c7 ) BREAKING CHANGE: remove useLegacyPost and add several new features ( 6dd8531 ), closes Automattic/mongoose#3232","title":"2.0.0-rc0 (2017-12-17)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#150-2017-07-20","text":"chore: release 1.5.0 ( 9c491a0 ) fix: improve post error handlers results ( 9928dd5 ), closes Automattic/mongoose#5466","title":"1.5.0 (2017-07-20)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#142-2017-07-06","text":"chore: release 1.4.2 ( 8d14ac5 ) fix: correct args re: Automattic/mongoose#5405 ( 3f28ae6 ), closes Automattic/mongoose#5405","title":"1.4.2 (2017-07-06)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#141-2017-04-25","text":"chore: release 1.4.1 ( 5ecf0c2 ) fix: handle numAsyncPres with clone() ( c72e857 ), closes #8 test: repro #8 ( 9b4d6b2 ), closes #8","title":"1.4.1 (2017-04-25)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#140-2017-04-19","text":"chore: release 1.4.0 ( 101c5f5 ) feat: add merge() function ( 285325e )","title":"1.4.0 (2017-04-19)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#130-2017-03-26","text":"chore: release 1.3.0 ( f3a9e50 ) feat: pass function args to execPre ( 4dd466d )","title":"1.3.0 (2017-03-26)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#121-2017-02-03","text":"chore: release 1.2.1 ( d97081f ) fix: filter out _kareemIgnored args for error handlers re: Automattic/mongoose#4925 ( ddc7aeb ), closes Automattic/mongoose#4925 fix: make error handlers handle errors in pre hooks ( af38033 ), closes Automattic/mongoose#4927","title":"1.2.1 (2017-02-03)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#120-2017-01-02","text":"chore: release 1.2.0 ( 033225c ) chore: upgrade deps ( f9e9a09 ) feat: add _kareemIgnore re: Automattic/mongoose#4836 ( 7957771 ), closes Automattic/mongoose#4836","title":"1.2.0 (2017-01-02)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#115-2016-12-13","text":"chore: release 1.1.5 ( 1a9f684 ) fix: correct field name ( 04a0e9d )","title":"1.1.5 (2016-12-13)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#114-2016-12-09","text":"chore: release 1.1.4 ( ece401c ) chore: run tests on node 6 ( e0cb1cb ) fix: only copy own properties in clone() ( dfe28ce ), closes #7","title":"1.1.4 (2016-12-09)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#113-2016-06-27","text":"chore: release 1.1.3 ( 87171c8 ) fix: couple more issues with arg processing ( c65f523 )","title":"1.1.3 (2016-06-27)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#112-2016-06-27","text":"chore: release 1.1.2 ( 8e102b6 ) fix: add early return ( 4feda4e )","title":"1.1.2 (2016-06-27)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#111-2016-06-27","text":"chore: release 1.1.1 ( 8bb3050 ) fix: skip error handlers if no error ( 0eb3a44 )","title":"1.1.1 (2016-06-27)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#110-2016-05-11","text":"chore: release 1.1.0 ( 85332d9 ) chore: test on node 4 and node 5 ( 1faefa1 ) 100% coverage again ( c9aee4e ) add support for error post hooks ( d378113 ) basic setup for sync hooks #4 ( 55aa081 ), closes #4 proof of concept for error handlers ( e4a07d9 ) refactor out handleWrapError helper ( b19af38 )","title":"1.1.0 (2016-05-11)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#101-2015-05-10","text":"Fix #1 ( de60dc6 ), closes #1 release 1.0.1 ( 6971088 ) Run tests on iojs in travis ( adcd201 ) support legacy post hook behavior in wrap() ( 23fa74c ) Use node 0.12 in travis ( 834689d )","title":"1.0.1 (2015-05-10)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#100-2015-01-28","text":"Tag 1.0.0 ( 4c5a35a )","title":"1.0.0 (2015-01-28)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#008-2015-01-27","text":"Add clone function ( 688bba7 ) Add jscs for style checking ( 5c93149 ) Bump 0.0.8 ( 03c0d2f ) Fix jscs config, add gulp rules ( 9989abf ) fix Makefile typo ( 1f7e61a )","title":"0.0.8 (2015-01-27)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#007-2015-01-04","text":"Bump 0.0.7 ( 98ef173 ) fix LearnBoost/mongoose#2553 - use null instead of undefined for err ( 9157b48 ), closes LearnBoost/mongoose#2553 Regenerate docs ( 2331cdf )","title":"0.0.7 (2015-01-04)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#006-2015-01-01","text":"Update docs and bump 0.0.6 ( 92c12a7 )","title":"0.0.6 (2015-01-01)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#005-2015-01-01","text":"Add coverage rule to Makefile ( 825a91c ) Add coveralls to README ( fb52369 ) Add coveralls to travis ( 93f6f15 ) Add createWrapper() function ( ea77741 ) Add istanbul code coverage ( 6eceeef ) Add some more comments for examples ( c5b0c6f ) Add travis ( e6dcb06 ) Add travis badge to docs ( ad8c9b3 ) Add wrap() tests, 100% coverage ( 6945be4 ) Better test coverage for execPost ( d9ad539 ) Bump 0.0.5 ( 69875b1 ) Docs fix ( 15b7098 ) Fix silly mistake in docs generation ( 50373eb ) Fix typo in readme ( fec4925 ) Linkify travis badge ( 92b25fe ) Make travis run coverage ( 747157b ) Move travis status badge ( d52e89b ) Quick fix for coverage ( 50bbddb ) Typo fix ( adea794 )","title":"0.0.5 (2015-01-01)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#004-2014-12-13","text":"Bump 0.0.4, run docs generation ( 51a15fe ) Use correct post parameters in wrap() ( 9bb5da3 )","title":"0.0.4 (2014-12-13)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#003-2014-12-12","text":"Add npm test script, fix small bug with args not getting passed through post ( 49e3e68 ) Bump 0.0.3 ( 65621d8 ) Update readme ( 901388b )","title":"0.0.3 (2014-12-12)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#002-2014-12-12","text":"Add github repo and bump 0.0.2 ( 59db8be )","title":"0.0.2 (2014-12-12)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#001-2014-12-12","text":"Add basic docs ( ad29ea4 ) Add pre hooks ( 2ffc356 ) Add wrap function ( 68c540c ) Bump to version 0.0.1 ( a4bfd68 ) Initial commit ( 4002458 ) Initial deposit ( 98fc489 ) Post hooks ( 395b67c ) Some basic setup work ( 82df75e ) Support sync pre hooks ( 1cc1b9f ) Update package.json description ( 978da18 )","title":"0.0.1 (2014-12-12)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#225-2018-09-24","text":"","title":"2.2.5 (2018-09-24)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#224-2018-09-24","text":"","title":"2.2.4 (2018-09-24)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#223-2018-09-24","text":"fix(filter): copy async pres correctly with filter() ( 1b1ed8a ), closes Automattic/mongoose#3054 feat: add filter() function ( 1f641f4 ) feat: support storing options on pre and post hooks ( 59220b9 )","title":"2.2.3 (2018-09-24)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#223-2018-09-10_1","text":"chore: release 2.2.3 ( af653a3 )","title":"2.2.3 (2018-09-10)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#222-2018-09-10_1","text":"chore: release 2.2.2 ( 3f0144d ) fix: allow merge() to not clone ( e628d65 )","title":"2.2.2 (2018-09-10)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#221-2018-06-05_1","text":"chore: release 2.2.1 ( 4625a64 ) chore: remove lockfile from git ( 7f3e4e6 ) fix: handle numAsync correctly when merging ( fef8e7e ) test: repro issue with not copying numAsync ( 952d9db )","title":"2.2.1 (2018-06-05)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#220-2018-06-05_1","text":"chore: release 2.2.0 ( ff9ad03 ) fix: use maps instead of objects for _pres and _posts so toString() doesn't get reported as having ( 55df303 ), closes Automattic/mongoose#6538","title":"2.2.0 (2018-06-05)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#210-2018-05-16_1","text":"chore: release 2.1.0 ( ba5f1bc ) feat: add option to check wrapped function return value for promises ( c9d7dd1 ) refactor: use const in wrap() ( 0fc21f9 )","title":"2.1.0 (2018-05-16)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#207-2018-04-28_1","text":"chore: release 2.0.7 ( 0bf91e6 ) feat: add hasHooks() ( 225f18d ), closes Automattic/mongoose#6385","title":"2.0.7 (2018-04-28)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#206-2018-03-22_1","text":"chore: release 2.0.6 ( f3d406b ) fix(wrap): ensure fast path still wraps function in nextTick() for chaining ( 7000494 ), closes Automattic/mongoose#6250 dsanel/mongoose-delete#36","title":"2.0.6 (2018-03-22)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#205-2018-02-22_1","text":"chore: release 2.0.5 ( 3286612 ) perf(createWrapper): don't create wrapper if there are no hooks ( 5afc5b9 ), closes Automattic/mongoose#6126","title":"2.0.5 (2018-02-22)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#204-2018-02-08_1","text":"chore: release 2.0.4 ( 2ab0293 )","title":"2.0.4 (2018-02-08)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#203-2018-02-01_1","text":"chore: release 2.0.3 ( 3c1abe5 ) fix: use process.nextTick() re: Automattic/mongoose#6074 ( e5bfe33 ), closes Automattic/mongoose#6074","title":"2.0.3 (2018-02-01)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#202-2018-01-24_1","text":"chore: fix license ( a9d755c ), closes #10 chore: release 2.0.2 ( fe87ab6 )","title":"2.0.2 (2018-01-24)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#201-2018-01-09_1","text":"chore: release 2.0.1 with lockfile bump ( 09c44fb )","title":"2.0.1 (2018-01-09)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#200-2018-01-09_1","text":"chore: bump marked re: security ( cc564a9 ) chore: release 2.0.0 ( f511d1c )","title":"2.0.0 (2018-01-09)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#200-rc5-2017-12-23_1","text":"chore: fix build on node 4+5 ( 6dac5a4 ) chore: fix built on node 4 + 5 again ( 434ef0a ) chore: release 2.0.0-rc5 ( 25a32ee )","title":"2.0.0-rc5 (2017-12-23)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#200-rc4-2017-12-22_1","text":"chore: release 2.0.0-rc4 ( 49fc083 ) BREAKING CHANGE: deduplicate when merging hooks re: Automattic/mongoose#2945 ( d458573 ), closes Automattic/mongoose#2945","title":"2.0.0-rc4 (2017-12-22)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#200-rc3-2017-12-22_1","text":"chore: release 2.0.0-rc3 ( adaaa00 ) feat: support returning promises from middleware functions ( 05b4480 ), closes Automattic/mongoose#3779","title":"2.0.0-rc3 (2017-12-22)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#200-rc2-2017-12-21_1","text":"chore: release 2.0.0-rc2 ( 76325fa ) fix: ensure next() and done() run in next tick ( 6c20684 )","title":"2.0.0-rc2 (2017-12-21)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#200-rc1-2017-12-21_1","text":"chore: improve test coverage re: Automattic/mongoose#3232 ( 7b45cf0 ), closes Automattic/mongoose#3232 chore: release 2.0.0-rc1 ( 9b83f52 ) BREAKING CHANGE: report sync exceptions as errors, only allow calling next() and done() once ( 674adcc ), closes Automattic/mongoose#3483","title":"2.0.0-rc1 (2017-12-21)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#200-rc0-2017-12-17_1","text":"chore: release 2.0.0-rc0 ( 16b44b5 ) BREAKING CHANGE: drop support for node < 4 ( 9cbb8c7 ) BREAKING CHANGE: remove useLegacyPost and add several new features ( 6dd8531 ), closes Automattic/mongoose#3232","title":"2.0.0-rc0 (2017-12-17)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#150-2017-07-20_1","text":"chore: release 1.5.0 ( 9c491a0 ) fix: improve post error handlers results ( 9928dd5 ), closes Automattic/mongoose#5466","title":"1.5.0 (2017-07-20)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#142-2017-07-06_1","text":"chore: release 1.4.2 ( 8d14ac5 ) fix: correct args re: Automattic/mongoose#5405 ( 3f28ae6 ), closes Automattic/mongoose#5405","title":"1.4.2 (2017-07-06)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#141-2017-04-25_1","text":"chore: release 1.4.1 ( 5ecf0c2 ) fix: handle numAsyncPres with clone() ( c72e857 ), closes #8 test: repro #8 ( 9b4d6b2 ), closes #8","title":"1.4.1 (2017-04-25)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#140-2017-04-19_1","text":"chore: release 1.4.0 ( 101c5f5 ) feat: add merge() function ( 285325e )","title":"1.4.0 (2017-04-19)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#130-2017-03-26_1","text":"chore: release 1.3.0 ( f3a9e50 ) feat: pass function args to execPre ( 4dd466d )","title":"1.3.0 (2017-03-26)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#121-2017-02-03_1","text":"chore: release 1.2.1 ( d97081f ) fix: filter out _kareemIgnored args for error handlers re: Automattic/mongoose#4925 ( ddc7aeb ), closes Automattic/mongoose#4925 fix: make error handlers handle errors in pre hooks ( af38033 ), closes Automattic/mongoose#4927","title":"1.2.1 (2017-02-03)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#120-2017-01-02_1","text":"chore: release 1.2.0 ( 033225c ) chore: upgrade deps ( f9e9a09 ) feat: add _kareemIgnore re: Automattic/mongoose#4836 ( 7957771 ), closes Automattic/mongoose#4836","title":"1.2.0 (2017-01-02)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#115-2016-12-13_1","text":"chore: release 1.1.5 ( 1a9f684 ) fix: correct field name ( 04a0e9d )","title":"1.1.5 (2016-12-13)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#114-2016-12-09_1","text":"chore: release 1.1.4 ( ece401c ) chore: run tests on node 6 ( e0cb1cb ) fix: only copy own properties in clone() ( dfe28ce ), closes #7","title":"1.1.4 (2016-12-09)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#113-2016-06-27_1","text":"chore: release 1.1.3 ( 87171c8 ) fix: couple more issues with arg processing ( c65f523 )","title":"1.1.3 (2016-06-27)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#112-2016-06-27_1","text":"chore: release 1.1.2 ( 8e102b6 ) fix: add early return ( 4feda4e )","title":"1.1.2 (2016-06-27)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#111-2016-06-27_1","text":"chore: release 1.1.1 ( 8bb3050 ) fix: skip error handlers if no error ( 0eb3a44 )","title":"1.1.1 (2016-06-27)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#110-2016-05-11_1","text":"chore: release 1.1.0 ( 85332d9 ) chore: test on node 4 and node 5 ( 1faefa1 ) 100% coverage again ( c9aee4e ) add support for error post hooks ( d378113 ) basic setup for sync hooks #4 ( 55aa081 ), closes #4 proof of concept for error handlers ( e4a07d9 ) refactor out handleWrapError helper ( b19af38 )","title":"1.1.0 (2016-05-11)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#101-2015-05-10_1","text":"Fix #1 ( de60dc6 ), closes #1 release 1.0.1 ( 6971088 ) Run tests on iojs in travis ( adcd201 ) support legacy post hook behavior in wrap() ( 23fa74c ) Use node 0.12 in travis ( 834689d )","title":"1.0.1 (2015-05-10)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#100-2015-01-28_1","text":"Tag 1.0.0 ( 4c5a35a )","title":"1.0.0 (2015-01-28)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#008-2015-01-27_1","text":"Add clone function ( 688bba7 ) Add jscs for style checking ( 5c93149 ) Bump 0.0.8 ( 03c0d2f ) Fix jscs config, add gulp rules ( 9989abf ) fix Makefile typo ( 1f7e61a )","title":"0.0.8 (2015-01-27)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#007-2015-01-04_1","text":"Bump 0.0.7 ( 98ef173 ) fix LearnBoost/mongoose#2553 - use null instead of undefined for err ( 9157b48 ), closes LearnBoost/mongoose#2553 Regenerate docs ( 2331cdf )","title":"0.0.7 (2015-01-04)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#006-2015-01-01_1","text":"Update docs and bump 0.0.6 ( 92c12a7 )","title":"0.0.6 (2015-01-01)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#005-2015-01-01_1","text":"Add coverage rule to Makefile ( 825a91c ) Add coveralls to README ( fb52369 ) Add coveralls to travis ( 93f6f15 ) Add createWrapper() function ( ea77741 ) Add istanbul code coverage ( 6eceeef ) Add some more comments for examples ( c5b0c6f ) Add travis ( e6dcb06 ) Add travis badge to docs ( ad8c9b3 ) Add wrap() tests, 100% coverage ( 6945be4 ) Better test coverage for execPost ( d9ad539 ) Bump 0.0.5 ( 69875b1 ) Docs fix ( 15b7098 ) Fix silly mistake in docs generation ( 50373eb ) Fix typo in readme ( fec4925 ) Linkify travis badge ( 92b25fe ) Make travis run coverage ( 747157b ) Move travis status badge ( d52e89b ) Quick fix for coverage ( 50bbddb ) Typo fix ( adea794 )","title":"0.0.5 (2015-01-01)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#004-2014-12-13_1","text":"Bump 0.0.4, run docs generation ( 51a15fe ) Use correct post parameters in wrap() ( 9bb5da3 )","title":"0.0.4 (2014-12-13)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#003-2014-12-12_1","text":"Add npm test script, fix small bug with args not getting passed through post ( 49e3e68 ) Bump 0.0.3 ( 65621d8 ) Update readme ( 901388b )","title":"0.0.3 (2014-12-12)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#002-2014-12-12_1","text":"Add github repo and bump 0.0.2 ( 59db8be )","title":"0.0.2 (2014-12-12)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#001-2014-12-12_1","text":"Add basic docs ( ad29ea4 ) Add pre hooks ( 2ffc356 ) Add wrap function ( 68c540c ) Bump to version 0.0.1 ( a4bfd68 ) Initial commit ( 4002458 ) Initial deposit ( 98fc489 ) Post hooks ( 395b67c ) Some basic setup work ( 82df75e ) Support sync pre hooks ( 1cc1b9f ) Update package.json description ( 978da18 )","title":"0.0.1 (2014-12-12)"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/SECURITY/","text":"Security contact information To report a security vulnerability, please use the Tidelift security contact . Tidelift will coordinate the fix and disclosure.","title":"SECURITY"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/SECURITY/#security-contact-information","text":"To report a security vulnerability, please use the Tidelift security contact . Tidelift will coordinate the fix and disclosure.","title":"Security contact information"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.includes/","text":"lodash.includes v4.3.0 The lodash method _.includes exported as a Node.js module. Installation Using npm: $ { sudo -H } npm i -g npm $ npm i --save lodash.includes In Node.js: var includes = require ( 'lodash.includes' ); See the documentation or package source for more details.","title":"lodash.includes v4.3.0"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.includes/#lodashincludes-v430","text":"The lodash method _.includes exported as a Node.js module.","title":"lodash.includes v4.3.0"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.includes/#installation","text":"Using npm: $ { sudo -H } npm i -g npm $ npm i --save lodash.includes In Node.js: var includes = require ( 'lodash.includes' ); See the documentation or package source for more details.","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.isboolean/","text":"lodash.isboolean v3.0.3 The lodash method _.isBoolean exported as a Node.js module. Installation Using npm: $ { sudo -H } npm i -g npm $ npm i --save lodash.isboolean In Node.js: var isBoolean = require ( 'lodash.isboolean' ); See the documentation or package source for more details.","title":"lodash.isboolean v3.0.3"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.isboolean/#lodashisboolean-v303","text":"The lodash method _.isBoolean exported as a Node.js module.","title":"lodash.isboolean v3.0.3"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.isboolean/#installation","text":"Using npm: $ { sudo -H } npm i -g npm $ npm i --save lodash.isboolean In Node.js: var isBoolean = require ( 'lodash.isboolean' ); See the documentation or package source for more details.","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.isinteger/","text":"lodash.isinteger v4.0.4 The lodash method _.isInteger exported as a Node.js module. Installation Using npm: $ { sudo -H } npm i -g npm $ npm i --save lodash.isinteger In Node.js: var isInteger = require ( 'lodash.isinteger' ); See the documentation or package source for more details.","title":"lodash.isinteger v4.0.4"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.isinteger/#lodashisinteger-v404","text":"The lodash method _.isInteger exported as a Node.js module.","title":"lodash.isinteger v4.0.4"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.isinteger/#installation","text":"Using npm: $ { sudo -H } npm i -g npm $ npm i --save lodash.isinteger In Node.js: var isInteger = require ( 'lodash.isinteger' ); See the documentation or package source for more details.","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.isnumber/","text":"lodash.isnumber v3.0.3 The lodash method _.isNumber exported as a Node.js module. Installation Using npm: $ { sudo -H } npm i -g npm $ npm i --save lodash.isnumber In Node.js: var isNumber = require ( 'lodash.isnumber' ); See the documentation or package source for more details.","title":"lodash.isnumber v3.0.3"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.isnumber/#lodashisnumber-v303","text":"The lodash method _.isNumber exported as a Node.js module.","title":"lodash.isnumber v3.0.3"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.isnumber/#installation","text":"Using npm: $ { sudo -H } npm i -g npm $ npm i --save lodash.isnumber In Node.js: var isNumber = require ( 'lodash.isnumber' ); See the documentation or package source for more details.","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.isplainobject/","text":"lodash.isplainobject v4.0.6 The lodash method _.isPlainObject exported as a Node.js module. Installation Using npm: $ { sudo -H } npm i -g npm $ npm i --save lodash.isplainobject In Node.js: var isPlainObject = require ( 'lodash.isplainobject' ); See the documentation or package source for more details.","title":"lodash.isplainobject v4.0.6"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.isplainobject/#lodashisplainobject-v406","text":"The lodash method _.isPlainObject exported as a Node.js module.","title":"lodash.isplainobject v4.0.6"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.isplainobject/#installation","text":"Using npm: $ { sudo -H } npm i -g npm $ npm i --save lodash.isplainobject In Node.js: var isPlainObject = require ( 'lodash.isplainobject' ); See the documentation or package source for more details.","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.isstring/","text":"lodash.isstring v4.0.1 The lodash method _.isString exported as a Node.js module. Installation Using npm: $ { sudo -H } npm i -g npm $ npm i --save lodash.isstring In Node.js: var isString = require ( 'lodash.isstring' ); See the documentation or package source for more details.","title":"lodash.isstring v4.0.1"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.isstring/#lodashisstring-v401","text":"The lodash method _.isString exported as a Node.js module.","title":"lodash.isstring v4.0.1"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.isstring/#installation","text":"Using npm: $ { sudo -H } npm i -g npm $ npm i --save lodash.isstring In Node.js: var isString = require ( 'lodash.isstring' ); See the documentation or package source for more details.","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.once/","text":"lodash.once v4.1.1 The lodash method _.once exported as a Node.js module. Installation Using npm: $ { sudo -H } npm i -g npm $ npm i --save lodash.once In Node.js: var once = require ( 'lodash.once' ); See the documentation or package source for more details.","title":"lodash.once v4.1.1"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.once/#lodashonce-v411","text":"The lodash method _.once exported as a Node.js module.","title":"lodash.once v4.1.1"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.once/#installation","text":"Using npm: $ { sudo -H } npm i -g npm $ npm i --save lodash.once In Node.js: var once = require ( 'lodash.once' ); See the documentation or package source for more details.","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/math-intrinsics/","text":"math-intrinsics ES Math-related intrinsics and helpers, robustly cached. abs floor isFinite isInteger isNaN isNegativeZero max min mod pow round sign constants/maxArrayLength constants/maxSafeInteger constants/maxValue Tests Simply clone the repo, npm install , and run npm test Security Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.","title":"math-intrinsics Version Badge"},{"location":"system-desing/crud-app/JS/server/node_modules/math-intrinsics/#math-intrinsics","text":"ES Math-related intrinsics and helpers, robustly cached. abs floor isFinite isInteger isNaN isNegativeZero max min mod pow round sign constants/maxArrayLength constants/maxSafeInteger constants/maxValue","title":"math-intrinsics"},{"location":"system-desing/crud-app/JS/server/node_modules/math-intrinsics/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"system-desing/crud-app/JS/server/node_modules/math-intrinsics/#security","text":"Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.","title":"Security"},{"location":"system-desing/crud-app/JS/server/node_modules/math-intrinsics/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.1.0 - 2024-12-18 Commits [New] add round 7cfb044 [Tests] add attw e96be8f [Dev Deps] update @types/tape 30d0023 v1.0.0 - 2024-12-11 Commits Initial implementation, tests, readme, types b898caa Initial commit 02745b0 [New] add constants/maxArrayLength , mod b978178 npm init a39fc57 Only apps should have lockfiles 9451580","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/math-intrinsics/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/math-intrinsics/CHANGELOG/#v110-2024-12-18","text":"","title":"v1.1.0 - 2024-12-18"},{"location":"system-desing/crud-app/JS/server/node_modules/math-intrinsics/CHANGELOG/#commits","text":"[New] add round 7cfb044 [Tests] add attw e96be8f [Dev Deps] update @types/tape 30d0023","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/math-intrinsics/CHANGELOG/#v100-2024-12-11","text":"","title":"v1.0.0 - 2024-12-11"},{"location":"system-desing/crud-app/JS/server/node_modules/math-intrinsics/CHANGELOG/#commits_1","text":"Initial implementation, tests, readme, types b898caa Initial commit 02745b0 [New] add constants/maxArrayLength , mod b978178 npm init a39fc57 Only apps should have lockfiles 9451580","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/","text":"media-typer Simple RFC 6838 media type parser. This module will parse a given media type into it's component parts, like type, subtype, and suffix. A formatter is also provided to put them back together and the two can be combined to normalize media types into a canonical form. If you are looking to parse the string that represents a media type and it's parameters in HTTP (for example, the Content-Type header), use the content-type module . Installation This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install media-typer API var typer = require ( 'media-typer' ) typer.parse(string) var obj = typer . parse ( 'image/svg+xml' ) Parse a media type string. This will return an object with the following properties (examples are shown for the string 'image/svg+xml; charset=utf-8' ): type : The type of the media type (always lower case). Example: 'image' subtype : The subtype of the media type (always lower case). Example: 'svg' suffix : The suffix of the media type (always lower case). Example: 'xml' If the given type string is invalid, then a TypeError is thrown. typer.format(obj) var obj = typer . format ({ type : 'image' , subtype : 'svg' , suffix : 'xml' }) Format an object into a media type string. This will return a string of the mime type for the given object. For the properties of the object, see the documentation for typer.parse(string) . If any of the given object values are invalid, then a TypeError is thrown. typer.test(string) var valid = typer . test ( 'image/svg+xml' ) Validate a media type string. This will return true is the string is a well- formatted media type, or false otherwise. License MIT","title":"media-typer"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/#media-typer","text":"Simple RFC 6838 media type parser. This module will parse a given media type into it's component parts, like type, subtype, and suffix. A formatter is also provided to put them back together and the two can be combined to normalize media types into a canonical form. If you are looking to parse the string that represents a media type and it's parameters in HTTP (for example, the Content-Type header), use the content-type module .","title":"media-typer"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/#installation","text":"This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install media-typer","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/#api","text":"var typer = require ( 'media-typer' )","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/#typerparsestring","text":"var obj = typer . parse ( 'image/svg+xml' ) Parse a media type string. This will return an object with the following properties (examples are shown for the string 'image/svg+xml; charset=utf-8' ): type : The type of the media type (always lower case). Example: 'image' subtype : The subtype of the media type (always lower case). Example: 'svg' suffix : The suffix of the media type (always lower case). Example: 'xml' If the given type string is invalid, then a TypeError is thrown.","title":"typer.parse(string)"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/#typerformatobj","text":"var obj = typer . format ({ type : 'image' , subtype : 'svg' , suffix : 'xml' }) Format an object into a media type string. This will return a string of the mime type for the given object. For the properties of the object, see the documentation for typer.parse(string) . If any of the given object values are invalid, then a TypeError is thrown.","title":"typer.format(obj)"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/#typerteststring","text":"var valid = typer . test ( 'image/svg+xml' ) Validate a media type string. This will return true is the string is a well- formatted media type, or false otherwise.","title":"typer.test(string)"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/HISTORY/","text":"1.1.0 / 2019-04-24 Add test(string) function 1.0.2 / 2019-04-19 Fix JSDoc comment for parse function 1.0.1 / 2018-10-20 Remove left over parameters property from class 1.0.0 / 2018-10-20 This major release brings the module back to it's RFC 6838 roots. If you want a module to parse the Content-Type or similar HTTP headers, use the content-type module instead. Drop support for Node.js below 0.8 Remove parameter handling, which is outside RFC 6838 scope Remove parse(req) and parse(res) signatures perf: enable strict mode perf: use a class for object creation 0.3.0 / 2014-09-07 Support Node.js 0.6 Throw error when parameter format invalid on parse 0.2.0 / 2014-06-18 Add typer.format() to format media types 0.1.0 / 2014-06-17 Accept req as argument to parse Accept res as argument to parse Parse media type with extra LWS between type and first parameter 0.0.0 / 2014-06-13 Initial implementation","title":"1.1.0 / 2019-04-24"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/HISTORY/#110-2019-04-24","text":"Add test(string) function","title":"1.1.0 / 2019-04-24"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/HISTORY/#102-2019-04-19","text":"Fix JSDoc comment for parse function","title":"1.0.2 / 2019-04-19"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/HISTORY/#101-2018-10-20","text":"Remove left over parameters property from class","title":"1.0.1 / 2018-10-20"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/HISTORY/#100-2018-10-20","text":"This major release brings the module back to it's RFC 6838 roots. If you want a module to parse the Content-Type or similar HTTP headers, use the content-type module instead. Drop support for Node.js below 0.8 Remove parameter handling, which is outside RFC 6838 scope Remove parse(req) and parse(res) signatures perf: enable strict mode perf: use a class for object creation","title":"1.0.0 / 2018-10-20"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/HISTORY/#030-2014-09-07","text":"Support Node.js 0.6 Throw error when parameter format invalid on parse","title":"0.3.0 / 2014-09-07"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/HISTORY/#020-2014-06-18","text":"Add typer.format() to format media types","title":"0.2.0 / 2014-06-18"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/HISTORY/#010-2014-06-17","text":"Accept req as argument to parse Accept res as argument to parse Parse media type with extra LWS between type and first parameter","title":"0.1.0 / 2014-06-17"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/HISTORY/#000-2014-06-13","text":"Initial implementation","title":"0.0.0 / 2014-06-13"},{"location":"system-desing/crud-app/JS/server/node_modules/memory-pager/","text":"memory-pager Access memory using small fixed sized buffers instead of allocating a huge buffer. Useful if you are implementing sparse data structures (such as large bitfield). npm install memory-pager Usage var pager = require ( 'paged-memory' ) var pages = pager ( 1024 ) // use 1kb per page var page = pages . get ( 10 ) // get page #10 console . log ( page . offset ) // 10240 console . log ( page . buffer ) // a blank 1kb buffer API var pages = pager(pageSize) Create a new pager. pageSize defaults to 1024 . var page = pages.get(pageNumber, [noAllocate]) Get a page. The page will be allocated at first access. Optionally you can set the noAllocate flag which will make the method return undefined if no page has been allocated already A page looks like this { offset : byteOffset , buffer : bufferWithPageSize } pages.set(pageNumber, buffer) Explicitly set the buffer for a page. pages.updated(page) Mark a page as updated. pages.lastUpdate() Get the last page that was updated. var buf = pages.toBuffer() Concat all pages allocated pages into a single buffer License MIT","title":"memory-pager"},{"location":"system-desing/crud-app/JS/server/node_modules/memory-pager/#memory-pager","text":"Access memory using small fixed sized buffers instead of allocating a huge buffer. Useful if you are implementing sparse data structures (such as large bitfield). npm install memory-pager","title":"memory-pager"},{"location":"system-desing/crud-app/JS/server/node_modules/memory-pager/#usage","text":"var pager = require ( 'paged-memory' ) var pages = pager ( 1024 ) // use 1kb per page var page = pages . get ( 10 ) // get page #10 console . log ( page . offset ) // 10240 console . log ( page . buffer ) // a blank 1kb buffer","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/memory-pager/#api","text":"","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/memory-pager/#var-pages-pagerpagesize","text":"Create a new pager. pageSize defaults to 1024 .","title":"var pages = pager(pageSize)"},{"location":"system-desing/crud-app/JS/server/node_modules/memory-pager/#var-page-pagesgetpagenumber-noallocate","text":"Get a page. The page will be allocated at first access. Optionally you can set the noAllocate flag which will make the method return undefined if no page has been allocated already A page looks like this { offset : byteOffset , buffer : bufferWithPageSize }","title":"var page = pages.get(pageNumber, [noAllocate])"},{"location":"system-desing/crud-app/JS/server/node_modules/memory-pager/#pagessetpagenumber-buffer","text":"Explicitly set the buffer for a page.","title":"pages.set(pageNumber, buffer)"},{"location":"system-desing/crud-app/JS/server/node_modules/memory-pager/#pagesupdatedpage","text":"Mark a page as updated.","title":"pages.updated(page)"},{"location":"system-desing/crud-app/JS/server/node_modules/memory-pager/#pageslastupdate","text":"Get the last page that was updated.","title":"pages.lastUpdate()"},{"location":"system-desing/crud-app/JS/server/node_modules/memory-pager/#var-buf-pagestobuffer","text":"Concat all pages allocated pages into a single buffer","title":"var buf = pages.toBuffer()"},{"location":"system-desing/crud-app/JS/server/node_modules/memory-pager/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/merge-descriptors/readme/","text":"merge-descriptors Merge objects using their property descriptors Install npm install merge-descriptors Usage import mergeDescriptors from 'merge-descriptors' ; const thing = { get name () { return 'John' } } const animal = {}; mergeDescriptors ( animal , thing ); console . log ( animal . name ); //=> 'John' API merge(destination, source, overwrite?) Merges \"own\" properties from a source to a destination object, including non-enumerable and accessor-defined properties. It retains original values and descriptors, ensuring the destination receives a complete and accurate copy of the source's properties. Returns the modified destination object. destination Type: object The object to receive properties. source Type: object The object providing properties. overwrite Type: boolean \\ Default: true A boolean to control overwriting of existing properties.","title":"merge-descriptors"},{"location":"system-desing/crud-app/JS/server/node_modules/merge-descriptors/readme/#merge-descriptors","text":"Merge objects using their property descriptors","title":"merge-descriptors"},{"location":"system-desing/crud-app/JS/server/node_modules/merge-descriptors/readme/#install","text":"npm install merge-descriptors","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/merge-descriptors/readme/#usage","text":"import mergeDescriptors from 'merge-descriptors' ; const thing = { get name () { return 'John' } } const animal = {}; mergeDescriptors ( animal , thing ); console . log ( animal . name ); //=> 'John'","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/merge-descriptors/readme/#api","text":"","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/merge-descriptors/readme/#mergedestination-source-overwrite","text":"Merges \"own\" properties from a source to a destination object, including non-enumerable and accessor-defined properties. It retains original values and descriptors, ensuring the destination receives a complete and accurate copy of the source's properties. Returns the modified destination object.","title":"merge(destination, source, overwrite?)"},{"location":"system-desing/crud-app/JS/server/node_modules/merge-descriptors/readme/#destination","text":"Type: object The object to receive properties.","title":"destination"},{"location":"system-desing/crud-app/JS/server/node_modules/merge-descriptors/readme/#source","text":"Type: object The object providing properties.","title":"source"},{"location":"system-desing/crud-app/JS/server/node_modules/merge-descriptors/readme/#overwrite","text":"Type: boolean \\ Default: true A boolean to control overwriting of existing properties.","title":"overwrite"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/","text":"mime-db This is a large database of mime types and information about them. It consists of a single, public JSON file and does not include any logic, allowing it to remain as un-opinionated as possible with an API. It aggregates data from the following sources: https://www.iana.org/assignments/media-types/media-types.xhtml https://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types https://hg.nginx.org/nginx/raw-file/default/conf/mime.types Installation npm install mime-db Database Download If you intend to use this in a web browser, you can conveniently access the JSON file via jsDelivr , a popular CDN (Content Delivery Network). To ensure stability and compatibility, it is advisable to specify a release tag instead of using the 'master' branch. This is because the JSON file's format might change in future updates, and relying on a specific release tag will prevent potential issues arising from these changes. https://cdn.jsdelivr.net/gh/jshttp/mime-db@master/db.json Usage var db = require ( 'mime-db' ) // grab data on .js files var data = db [ 'application/javascript' ] Data Structure The JSON file is a map lookup for lowercased mime types. Each mime type has the following properties: .source - where the mime type is defined. If not set, it's probably a custom media type. apache - Apache common media types iana - IANA-defined media types nginx - nginx media types .extensions[] - known extensions associated with this mime type. .compressible - whether a file of this type can be gzipped. .charset - the default charset associated with this type, if any. If unknown, every property could be undefined . Note on MIME Type Data and Semver This package considers the programmatic api as the semver compatibility. This means the MIME type resolution is not considered in the semver bumps. This means that if you want to pin your mime-db data you will need to do it in your application. While this expectation was not set in docs until now, it is how the pacakge operated, so we do not feel this is a breaking change. Contributing The primary way to contribute to this database is by updating the data in one of the upstream sources. The database is updated from the upstreams periodically and will pull in any changes. Registering Media Types The best way to get new media types included in this library is to register them with the IANA. The community registration procedure is outlined in RFC 6838 section 5 . Types registered with the IANA are automatically pulled into this library. Direct Inclusion If that is not possible / feasible, they can be added directly here as a \"custom\" type. To do this, it is required to have a primary source that definitively lists the media type. If an extension is going to be listed as associated with this media type, the source must definitively link the media type and extension as well. To edit the database, only make PRs against src/custom-types.json or src/custom-suffix.json . The src/custom-types.json file is a JSON object with the MIME type as the keys and the values being an object with the following keys: compressible - leave out if you don't know, otherwise true / false to indicate whether the data represented by the type is typically compressible. extensions - include an array of file extensions that are associated with the type. notes - human-readable notes about the type, typically what the type is. sources - include an array of URLs of where the MIME type and the associated extensions are sourced from. This needs to be a primary source ; links to type aggregating sites and Wikipedia are not acceptable . To update the build, run npm run build .","title":"mime-db"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/#mime-db","text":"This is a large database of mime types and information about them. It consists of a single, public JSON file and does not include any logic, allowing it to remain as un-opinionated as possible with an API. It aggregates data from the following sources: https://www.iana.org/assignments/media-types/media-types.xhtml https://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types https://hg.nginx.org/nginx/raw-file/default/conf/mime.types","title":"mime-db"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/#installation","text":"npm install mime-db","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/#database-download","text":"If you intend to use this in a web browser, you can conveniently access the JSON file via jsDelivr , a popular CDN (Content Delivery Network). To ensure stability and compatibility, it is advisable to specify a release tag instead of using the 'master' branch. This is because the JSON file's format might change in future updates, and relying on a specific release tag will prevent potential issues arising from these changes. https://cdn.jsdelivr.net/gh/jshttp/mime-db@master/db.json","title":"Database Download"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/#usage","text":"var db = require ( 'mime-db' ) // grab data on .js files var data = db [ 'application/javascript' ]","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/#data-structure","text":"The JSON file is a map lookup for lowercased mime types. Each mime type has the following properties: .source - where the mime type is defined. If not set, it's probably a custom media type. apache - Apache common media types iana - IANA-defined media types nginx - nginx media types .extensions[] - known extensions associated with this mime type. .compressible - whether a file of this type can be gzipped. .charset - the default charset associated with this type, if any. If unknown, every property could be undefined .","title":"Data Structure"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/#note-on-mime-type-data-and-semver","text":"This package considers the programmatic api as the semver compatibility. This means the MIME type resolution is not considered in the semver bumps. This means that if you want to pin your mime-db data you will need to do it in your application. While this expectation was not set in docs until now, it is how the pacakge operated, so we do not feel this is a breaking change.","title":"Note on MIME Type Data and Semver"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/#contributing","text":"The primary way to contribute to this database is by updating the data in one of the upstream sources. The database is updated from the upstreams periodically and will pull in any changes.","title":"Contributing"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/#registering-media-types","text":"The best way to get new media types included in this library is to register them with the IANA. The community registration procedure is outlined in RFC 6838 section 5 . Types registered with the IANA are automatically pulled into this library.","title":"Registering Media Types"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/#direct-inclusion","text":"If that is not possible / feasible, they can be added directly here as a \"custom\" type. To do this, it is required to have a primary source that definitively lists the media type. If an extension is going to be listed as associated with this media type, the source must definitively link the media type and extension as well. To edit the database, only make PRs against src/custom-types.json or src/custom-suffix.json . The src/custom-types.json file is a JSON object with the MIME type as the keys and the values being an object with the following keys: compressible - leave out if you don't know, otherwise true / false to indicate whether the data represented by the type is typically compressible. extensions - include an array of file extensions that are associated with the type. notes - human-readable notes about the type, typically what the type is. sources - include an array of URLs of where the MIME type and the associated extensions are sourced from. This needs to be a primary source ; links to type aggregating sites and Wikipedia are not acceptable . To update the build, run npm run build .","title":"Direct Inclusion"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/","text":"1.54.0 / 2025-03-17 Update mime type for DCM format (#362) mark application/octet-stream as compressible (#163) Fix typo in application/x-zip-compressed mimetype (#359) Add mime-type for Jupyter notebooks (#282) Add Google Drive MIME types (#311) Add .blend file type (#338) Add support for the FBX file extension (#342) Add Adobe DNG file (#340) Add Procreate Brush and Brush Set file Types (#339) Add support for Procreate Dreams (#341) replace got with undici (#352) Added extensions list for model/step (#293) Add m4b as a type of audio/mp4 (#357) windows 11 application/x-zip-compressed (#346) add dotLottie mime type (#351) Add some MS-related extensions and types (#336) 1.53.0 / 2024-07-12 Add extension .sql to application/sql Add extensions .aac and .adts to audio/aac Add extensions .js and .mjs to text/javascript Add extensions for application/mp4 from IANA Add extensions from IANA for more MIME types Add Microsoft app installer types and extensions Add new upstream MIME types Fix extensions for text/markdown to match IANA Remove extension .mjs from application/javascript Remove obsolete MIME types from IANA data 1.52.0 / 2022-02-21 Add extensions from IANA for more image/* types Add extension .asc to application/pgp-keys Add extensions to various XML types Add new upstream MIME types 1.51.0 / 2021-11-08 Add new upstream MIME types Mark image/vnd.microsoft.icon as compressible Mark image/vnd.ms-dds as compressible 1.50.0 / 2021-09-15 Add deprecated iWorks mime types and extensions Add new upstream MIME types 1.49.0 / 2021-07-26 Add extension .trig to application/trig Add new upstream MIME types 1.48.0 / 2021-05-30 Add extension .mvt to application/vnd.mapbox-vector-tile Add new upstream MIME types Mark text/yaml as compressible 1.47.0 / 2021-04-01 Add new upstream MIME types Remove ambiguous extensions from IANA for application/*+xml types Update primary extension to .es for application/ecmascript 1.46.0 / 2021-02-13 Add extension .amr to audio/amr Add extension .m4s to video/iso.segment Add extension .opus to audio/ogg Add new upstream MIME types 1.45.0 / 2020-09-22 Add application/ubjson with extension .ubj Add image/avif with extension .avif Add image/ktx2 with extension .ktx2 Add extension .dbf to application/vnd.dbf Add extension .rar to application/vnd.rar Add extension .td to application/urc-targetdesc+xml Add new upstream MIME types Fix extension of application/vnd.apple.keynote to be .key 1.44.0 / 2020-04-22 Add charsets from IANA Add extension .cjs to application/node Add new upstream MIME types 1.43.0 / 2020-01-05 Add application/x-keepass2 with extension .kdbx Add extension .mxmf to audio/mobile-xmf Add extensions from IANA for application/*+xml types Add new upstream MIME types 1.42.0 / 2019-09-25 Add image/vnd.ms-dds with extension .dds Add new upstream MIME types Remove compressible from multipart/mixed 1.41.0 / 2019-08-30 Add new upstream MIME types Add application/toml with extension .toml Mark font/ttf as compressible 1.40.0 / 2019-04-20 Add extensions from IANA for model/* types Add text/mdx with extension .mdx 1.39.0 / 2019-04-04 Add extensions .siv and .sieve to application/sieve Add new upstream MIME types 1.38.0 / 2019-02-04 Add extension .nq to application/n-quads Add extension .nt to application/n-triples Add new upstream MIME types Mark text/less as compressible 1.37.0 / 2018-10-19 Add extensions to HEIC image types Add new upstream MIME types 1.36.0 / 2018-08-20 Add Apple file extensions from IANA Add extensions from IANA for image/* types Add new upstream MIME types 1.35.0 / 2018-07-15 Add extension .owl to application/rdf+xml Add new upstream MIME types Removes extension .woff from application/font-woff 1.34.0 / 2018-06-03 Add extension .csl to application/vnd.citationstyles.style+xml Add extension .es to application/ecmascript Add new upstream MIME types Add UTF-8 as default charset for text/turtle Mark all XML-derived types as compressible 1.33.0 / 2018-02-15 Add extensions from IANA for message/* types Add new upstream MIME types Fix some incorrect OOXML types Remove application/font-woff2 1.32.0 / 2017-11-29 Add new upstream MIME types Update text/hjson to registered application/hjson Add text/shex with extension .shex 1.31.0 / 2017-10-25 Add application/raml+yaml with extension .raml Add application/wasm with extension .wasm Add new font type from IANA Add new upstream font extensions Add new upstream MIME types Add extensions for JPEG-2000 images 1.30.0 / 2017-08-27 Add application/vnd.ms-outlook Add application/x-arj Add extension .mjs to application/javascript Add glTF types and extensions Add new upstream MIME types Add text/x-org Add VirtualBox MIME types Fix source records for video/* types that are IANA Update font/opentype to registered font/otf 1.29.0 / 2017-07-10 Add application/fido.trusted-apps+json Add extension .wadl to application/vnd.sun.wadl+xml Add new upstream MIME types Add UTF-8 as default charset for text/css 1.28.0 / 2017-05-14 Add new upstream MIME types Add extension .gz to application/gzip Update extensions .md and .markdown to be text/markdown 1.27.0 / 2017-03-16 Add new upstream MIME types Add image/apng with extension .apng 1.26.0 / 2017-01-14 Add new upstream MIME types Add extension .geojson to application/geo+json 1.25.0 / 2016-11-11 Add new upstream MIME types 1.24.0 / 2016-09-18 Add audio/mp3 Add new upstream MIME types 1.23.0 / 2016-05-01 Add new upstream MIME types Add extension .3gpp to audio/3gpp 1.22.0 / 2016-02-15 Add text/slim Add extension .rng to application/xml Add new upstream MIME types Fix extension of application/dash+xml to be .mpd Update primary extension to .m4a for audio/mp4 1.21.0 / 2016-01-06 Add Google document types Add new upstream MIME types 1.20.0 / 2015-11-10 Add text/x-suse-ymp Add new upstream MIME types 1.19.0 / 2015-09-17 Add application/vnd.apple.pkpass Add new upstream MIME types 1.18.0 / 2015-09-03 Add new upstream MIME types 1.17.0 / 2015-08-13 Add application/x-msdos-program Add audio/g711-0 Add image/vnd.mozilla.apng Add extension .exe to application/x-msdos-program 1.16.0 / 2015-07-29 Add application/vnd.uri-map 1.15.0 / 2015-07-13 Add application/x-httpd-php 1.14.0 / 2015-06-25 Add application/scim+json Add application/vnd.3gpp.ussd+xml Add application/vnd.biopax.rdf+xml Add text/x-processing 1.13.0 / 2015-06-07 Add nginx as a source Add application/x-cocoa Add application/x-java-archive-diff Add application/x-makeself Add application/x-perl Add application/x-pilot Add application/x-redhat-package-manager Add application/x-sea Add audio/x-m4a Add audio/x-realaudio Add image/x-jng Add text/mathml 1.12.0 / 2015-06-05 Add application/bdoc Add application/vnd.hyperdrive+json Add application/x-bdoc Add extension .rtf to text/rtf 1.11.0 / 2015-05-31 Add audio/wav Add audio/wave Add extension .litcoffee to text/coffeescript Add extension .sfd-hdstx to application/vnd.hydrostatix.sof-data Add extension .n-gage to application/vnd.nokia.n-gage.symbian.install 1.10.0 / 2015-05-19 Add application/vnd.balsamiq.bmpr Add application/vnd.microsoft.portable-executable Add application/x-ns-proxy-autoconfig 1.9.1 / 2015-04-19 Remove .json extension from application/manifest+json This is causing bugs downstream 1.9.0 / 2015-04-19 Add application/manifest+json Add application/vnd.micro+json Add image/vnd.zbrush.pcx Add image/x-ms-bmp 1.8.0 / 2015-03-13 Add application/vnd.citationstyles.style+xml Add application/vnd.fastcopy-disk-image Add application/vnd.gov.sk.xmldatacontainer+xml Add extension .jsonld to application/ld+json 1.7.0 / 2015-02-08 Add application/vnd.gerber Add application/vnd.msa-disk-image 1.6.1 / 2015-02-05 Community extensions ownership transferred from node-mime 1.6.0 / 2015-01-29 Add application/jose Add application/jose+json Add application/json-seq Add application/jwk+json Add application/jwk-set+json Add application/jwt Add application/rdap+json Add application/vnd.gov.sk.e-form+xml Add application/vnd.ims.imsccv1p3 1.5.0 / 2014-12-30 Add application/vnd.oracle.resource+json Fix various invalid MIME type entries application/mbox+xml application/oscp-response application/vwg-multiplexed audio/g721 1.4.0 / 2014-12-21 Add application/vnd.ims.imsccv1p2 Fix various invalid MIME type entries application/vnd-acucobol application/vnd-curl application/vnd-dart application/vnd-dxr application/vnd-fdf application/vnd-mif application/vnd-sema application/vnd-wap-wmlc application/vnd.adobe.flash-movie application/vnd.dece-zip application/vnd.dvb_service application/vnd.micrografx-igx application/vnd.sealed-doc application/vnd.sealed-eml application/vnd.sealed-mht application/vnd.sealed-ppt application/vnd.sealed-tiff application/vnd.sealed-xls application/vnd.sealedmedia.softseal-html application/vnd.sealedmedia.softseal-pdf application/vnd.wap-slc application/vnd.wap-wbxml audio/vnd.sealedmedia.softseal-mpeg image/vnd-djvu image/vnd-svf image/vnd-wap-wbmp image/vnd.sealed-png image/vnd.sealedmedia.softseal-gif image/vnd.sealedmedia.softseal-jpg model/vnd-dwf model/vnd.parasolid.transmit-binary model/vnd.parasolid.transmit-text text/vnd-a text/vnd-curl text/vnd.wap-wml Remove example template MIME types application/example audio/example image/example message/example model/example multipart/example text/example video/example 1.3.1 / 2014-12-16 Fix missing extensions application/json5 text/hjson 1.3.0 / 2014-12-07 Add application/a2l Add application/aml Add application/atfx Add application/atxml Add application/cdfx+xml Add application/dii Add application/json5 Add application/lxf Add application/mf4 Add application/vnd.apache.thrift.compact Add application/vnd.apache.thrift.json Add application/vnd.coffeescript Add application/vnd.enphase.envoy Add application/vnd.ims.imsccv1p1 Add text/csv-schema Add text/hjson Add text/markdown Add text/yaml 1.2.0 / 2014-11-09 Add application/cea Add application/dit Add application/vnd.gov.sk.e-form+zip Add application/vnd.tmd.mediaflex.api+xml Type application/epub+zip is now IANA-registered 1.1.2 / 2014-10-23 Rebuild database for application/x-www-form-urlencoded change 1.1.1 / 2014-10-20 Mark application/x-www-form-urlencoded as compressible. 1.1.0 / 2014-09-28 Add application/font-woff2 1.0.3 / 2014-09-25 Fix engine requirement in package 1.0.2 / 2014-09-25 Add application/coap-group+json Add application/dcd Add application/vnd.apache.thrift.binary Add image/vnd.tencent.tap Mark all JSON-derived types as compressible Update text/vtt data 1.0.1 / 2014-08-30 Fix extension ordering 1.0.0 / 2014-08-30 Add application/atf Add application/merge-patch+json Add multipart/x-mixed-replace Add source: 'apache' metadata Add source: 'iana' metadata Remove badly-assumed charset data","title":"1.54.0 / 2025-03-17"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1540-2025-03-17","text":"Update mime type for DCM format (#362) mark application/octet-stream as compressible (#163) Fix typo in application/x-zip-compressed mimetype (#359) Add mime-type for Jupyter notebooks (#282) Add Google Drive MIME types (#311) Add .blend file type (#338) Add support for the FBX file extension (#342) Add Adobe DNG file (#340) Add Procreate Brush and Brush Set file Types (#339) Add support for Procreate Dreams (#341) replace got with undici (#352) Added extensions list for model/step (#293) Add m4b as a type of audio/mp4 (#357) windows 11 application/x-zip-compressed (#346) add dotLottie mime type (#351) Add some MS-related extensions and types (#336)","title":"1.54.0 / 2025-03-17"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1530-2024-07-12","text":"Add extension .sql to application/sql Add extensions .aac and .adts to audio/aac Add extensions .js and .mjs to text/javascript Add extensions for application/mp4 from IANA Add extensions from IANA for more MIME types Add Microsoft app installer types and extensions Add new upstream MIME types Fix extensions for text/markdown to match IANA Remove extension .mjs from application/javascript Remove obsolete MIME types from IANA data","title":"1.53.0 / 2024-07-12"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1520-2022-02-21","text":"Add extensions from IANA for more image/* types Add extension .asc to application/pgp-keys Add extensions to various XML types Add new upstream MIME types","title":"1.52.0 / 2022-02-21"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1510-2021-11-08","text":"Add new upstream MIME types Mark image/vnd.microsoft.icon as compressible Mark image/vnd.ms-dds as compressible","title":"1.51.0 / 2021-11-08"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1500-2021-09-15","text":"Add deprecated iWorks mime types and extensions Add new upstream MIME types","title":"1.50.0 / 2021-09-15"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1490-2021-07-26","text":"Add extension .trig to application/trig Add new upstream MIME types","title":"1.49.0 / 2021-07-26"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1480-2021-05-30","text":"Add extension .mvt to application/vnd.mapbox-vector-tile Add new upstream MIME types Mark text/yaml as compressible","title":"1.48.0 / 2021-05-30"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1470-2021-04-01","text":"Add new upstream MIME types Remove ambiguous extensions from IANA for application/*+xml types Update primary extension to .es for application/ecmascript","title":"1.47.0 / 2021-04-01"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1460-2021-02-13","text":"Add extension .amr to audio/amr Add extension .m4s to video/iso.segment Add extension .opus to audio/ogg Add new upstream MIME types","title":"1.46.0 / 2021-02-13"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1450-2020-09-22","text":"Add application/ubjson with extension .ubj Add image/avif with extension .avif Add image/ktx2 with extension .ktx2 Add extension .dbf to application/vnd.dbf Add extension .rar to application/vnd.rar Add extension .td to application/urc-targetdesc+xml Add new upstream MIME types Fix extension of application/vnd.apple.keynote to be .key","title":"1.45.0 / 2020-09-22"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1440-2020-04-22","text":"Add charsets from IANA Add extension .cjs to application/node Add new upstream MIME types","title":"1.44.0 / 2020-04-22"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1430-2020-01-05","text":"Add application/x-keepass2 with extension .kdbx Add extension .mxmf to audio/mobile-xmf Add extensions from IANA for application/*+xml types Add new upstream MIME types","title":"1.43.0 / 2020-01-05"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1420-2019-09-25","text":"Add image/vnd.ms-dds with extension .dds Add new upstream MIME types Remove compressible from multipart/mixed","title":"1.42.0 / 2019-09-25"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1410-2019-08-30","text":"Add new upstream MIME types Add application/toml with extension .toml Mark font/ttf as compressible","title":"1.41.0 / 2019-08-30"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1400-2019-04-20","text":"Add extensions from IANA for model/* types Add text/mdx with extension .mdx","title":"1.40.0 / 2019-04-20"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1390-2019-04-04","text":"Add extensions .siv and .sieve to application/sieve Add new upstream MIME types","title":"1.39.0 / 2019-04-04"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1380-2019-02-04","text":"Add extension .nq to application/n-quads Add extension .nt to application/n-triples Add new upstream MIME types Mark text/less as compressible","title":"1.38.0 / 2019-02-04"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1370-2018-10-19","text":"Add extensions to HEIC image types Add new upstream MIME types","title":"1.37.0 / 2018-10-19"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1360-2018-08-20","text":"Add Apple file extensions from IANA Add extensions from IANA for image/* types Add new upstream MIME types","title":"1.36.0 / 2018-08-20"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1350-2018-07-15","text":"Add extension .owl to application/rdf+xml Add new upstream MIME types Removes extension .woff from application/font-woff","title":"1.35.0 / 2018-07-15"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1340-2018-06-03","text":"Add extension .csl to application/vnd.citationstyles.style+xml Add extension .es to application/ecmascript Add new upstream MIME types Add UTF-8 as default charset for text/turtle Mark all XML-derived types as compressible","title":"1.34.0 / 2018-06-03"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1330-2018-02-15","text":"Add extensions from IANA for message/* types Add new upstream MIME types Fix some incorrect OOXML types Remove application/font-woff2","title":"1.33.0 / 2018-02-15"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1320-2017-11-29","text":"Add new upstream MIME types Update text/hjson to registered application/hjson Add text/shex with extension .shex","title":"1.32.0 / 2017-11-29"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1310-2017-10-25","text":"Add application/raml+yaml with extension .raml Add application/wasm with extension .wasm Add new font type from IANA Add new upstream font extensions Add new upstream MIME types Add extensions for JPEG-2000 images","title":"1.31.0 / 2017-10-25"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1300-2017-08-27","text":"Add application/vnd.ms-outlook Add application/x-arj Add extension .mjs to application/javascript Add glTF types and extensions Add new upstream MIME types Add text/x-org Add VirtualBox MIME types Fix source records for video/* types that are IANA Update font/opentype to registered font/otf","title":"1.30.0 / 2017-08-27"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1290-2017-07-10","text":"Add application/fido.trusted-apps+json Add extension .wadl to application/vnd.sun.wadl+xml Add new upstream MIME types Add UTF-8 as default charset for text/css","title":"1.29.0 / 2017-07-10"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1280-2017-05-14","text":"Add new upstream MIME types Add extension .gz to application/gzip Update extensions .md and .markdown to be text/markdown","title":"1.28.0 / 2017-05-14"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1270-2017-03-16","text":"Add new upstream MIME types Add image/apng with extension .apng","title":"1.27.0 / 2017-03-16"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1260-2017-01-14","text":"Add new upstream MIME types Add extension .geojson to application/geo+json","title":"1.26.0 / 2017-01-14"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1250-2016-11-11","text":"Add new upstream MIME types","title":"1.25.0 / 2016-11-11"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1240-2016-09-18","text":"Add audio/mp3 Add new upstream MIME types","title":"1.24.0 / 2016-09-18"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1230-2016-05-01","text":"Add new upstream MIME types Add extension .3gpp to audio/3gpp","title":"1.23.0 / 2016-05-01"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1220-2016-02-15","text":"Add text/slim Add extension .rng to application/xml Add new upstream MIME types Fix extension of application/dash+xml to be .mpd Update primary extension to .m4a for audio/mp4","title":"1.22.0 / 2016-02-15"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1210-2016-01-06","text":"Add Google document types Add new upstream MIME types","title":"1.21.0 / 2016-01-06"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1200-2015-11-10","text":"Add text/x-suse-ymp Add new upstream MIME types","title":"1.20.0 / 2015-11-10"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1190-2015-09-17","text":"Add application/vnd.apple.pkpass Add new upstream MIME types","title":"1.19.0 / 2015-09-17"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1180-2015-09-03","text":"Add new upstream MIME types","title":"1.18.0 / 2015-09-03"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1170-2015-08-13","text":"Add application/x-msdos-program Add audio/g711-0 Add image/vnd.mozilla.apng Add extension .exe to application/x-msdos-program","title":"1.17.0 / 2015-08-13"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1160-2015-07-29","text":"Add application/vnd.uri-map","title":"1.16.0 / 2015-07-29"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1150-2015-07-13","text":"Add application/x-httpd-php","title":"1.15.0 / 2015-07-13"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1140-2015-06-25","text":"Add application/scim+json Add application/vnd.3gpp.ussd+xml Add application/vnd.biopax.rdf+xml Add text/x-processing","title":"1.14.0 / 2015-06-25"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1130-2015-06-07","text":"Add nginx as a source Add application/x-cocoa Add application/x-java-archive-diff Add application/x-makeself Add application/x-perl Add application/x-pilot Add application/x-redhat-package-manager Add application/x-sea Add audio/x-m4a Add audio/x-realaudio Add image/x-jng Add text/mathml","title":"1.13.0 / 2015-06-07"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1120-2015-06-05","text":"Add application/bdoc Add application/vnd.hyperdrive+json Add application/x-bdoc Add extension .rtf to text/rtf","title":"1.12.0 / 2015-06-05"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1110-2015-05-31","text":"Add audio/wav Add audio/wave Add extension .litcoffee to text/coffeescript Add extension .sfd-hdstx to application/vnd.hydrostatix.sof-data Add extension .n-gage to application/vnd.nokia.n-gage.symbian.install","title":"1.11.0 / 2015-05-31"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1100-2015-05-19","text":"Add application/vnd.balsamiq.bmpr Add application/vnd.microsoft.portable-executable Add application/x-ns-proxy-autoconfig","title":"1.10.0 / 2015-05-19"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#191-2015-04-19","text":"Remove .json extension from application/manifest+json This is causing bugs downstream","title":"1.9.1 / 2015-04-19"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#190-2015-04-19","text":"Add application/manifest+json Add application/vnd.micro+json Add image/vnd.zbrush.pcx Add image/x-ms-bmp","title":"1.9.0 / 2015-04-19"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#180-2015-03-13","text":"Add application/vnd.citationstyles.style+xml Add application/vnd.fastcopy-disk-image Add application/vnd.gov.sk.xmldatacontainer+xml Add extension .jsonld to application/ld+json","title":"1.8.0 / 2015-03-13"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#170-2015-02-08","text":"Add application/vnd.gerber Add application/vnd.msa-disk-image","title":"1.7.0 / 2015-02-08"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#161-2015-02-05","text":"Community extensions ownership transferred from node-mime","title":"1.6.1 / 2015-02-05"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#160-2015-01-29","text":"Add application/jose Add application/jose+json Add application/json-seq Add application/jwk+json Add application/jwk-set+json Add application/jwt Add application/rdap+json Add application/vnd.gov.sk.e-form+xml Add application/vnd.ims.imsccv1p3","title":"1.6.0 / 2015-01-29"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#150-2014-12-30","text":"Add application/vnd.oracle.resource+json Fix various invalid MIME type entries application/mbox+xml application/oscp-response application/vwg-multiplexed audio/g721","title":"1.5.0 / 2014-12-30"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#140-2014-12-21","text":"Add application/vnd.ims.imsccv1p2 Fix various invalid MIME type entries application/vnd-acucobol application/vnd-curl application/vnd-dart application/vnd-dxr application/vnd-fdf application/vnd-mif application/vnd-sema application/vnd-wap-wmlc application/vnd.adobe.flash-movie application/vnd.dece-zip application/vnd.dvb_service application/vnd.micrografx-igx application/vnd.sealed-doc application/vnd.sealed-eml application/vnd.sealed-mht application/vnd.sealed-ppt application/vnd.sealed-tiff application/vnd.sealed-xls application/vnd.sealedmedia.softseal-html application/vnd.sealedmedia.softseal-pdf application/vnd.wap-slc application/vnd.wap-wbxml audio/vnd.sealedmedia.softseal-mpeg image/vnd-djvu image/vnd-svf image/vnd-wap-wbmp image/vnd.sealed-png image/vnd.sealedmedia.softseal-gif image/vnd.sealedmedia.softseal-jpg model/vnd-dwf model/vnd.parasolid.transmit-binary model/vnd.parasolid.transmit-text text/vnd-a text/vnd-curl text/vnd.wap-wml Remove example template MIME types application/example audio/example image/example message/example model/example multipart/example text/example video/example","title":"1.4.0 / 2014-12-21"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#131-2014-12-16","text":"Fix missing extensions application/json5 text/hjson","title":"1.3.1 / 2014-12-16"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#130-2014-12-07","text":"Add application/a2l Add application/aml Add application/atfx Add application/atxml Add application/cdfx+xml Add application/dii Add application/json5 Add application/lxf Add application/mf4 Add application/vnd.apache.thrift.compact Add application/vnd.apache.thrift.json Add application/vnd.coffeescript Add application/vnd.enphase.envoy Add application/vnd.ims.imsccv1p1 Add text/csv-schema Add text/hjson Add text/markdown Add text/yaml","title":"1.3.0 / 2014-12-07"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#120-2014-11-09","text":"Add application/cea Add application/dit Add application/vnd.gov.sk.e-form+zip Add application/vnd.tmd.mediaflex.api+xml Type application/epub+zip is now IANA-registered","title":"1.2.0 / 2014-11-09"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#112-2014-10-23","text":"Rebuild database for application/x-www-form-urlencoded change","title":"1.1.2 / 2014-10-23"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#111-2014-10-20","text":"Mark application/x-www-form-urlencoded as compressible.","title":"1.1.1 / 2014-10-20"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#110-2014-09-28","text":"Add application/font-woff2","title":"1.1.0 / 2014-09-28"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#103-2014-09-25","text":"Fix engine requirement in package","title":"1.0.3 / 2014-09-25"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#102-2014-09-25","text":"Add application/coap-group+json Add application/dcd Add application/vnd.apache.thrift.binary Add image/vnd.tencent.tap Mark all JSON-derived types as compressible Update text/vtt data","title":"1.0.2 / 2014-09-25"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#101-2014-08-30","text":"Fix extension ordering","title":"1.0.1 / 2014-08-30"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#100-2014-08-30","text":"Add application/atf Add application/merge-patch+json Add multipart/x-mixed-replace Add source: 'apache' metadata Add source: 'iana' metadata Remove badly-assumed charset data","title":"1.0.0 / 2014-08-30"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/","text":"mime-types The ultimate javascript content-type utility. Similar to the mime@1.x module , except: No fallbacks. Instead of naively returning the first available type, mime-types simply returns false , so do var type = mime.lookup('unrecognized') || 'application/octet-stream' . No new Mime() business, so you could do var lookup = require('mime-types').lookup . No .define() functionality Bug fixes for .lookup(path) Otherwise, the API is compatible with mime 1.x. Install This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install mime-types Note on MIME Type Data and Semver This package considers the programmatic api as the semver compatibility. Additionally, the package which provides the MIME data for this package ( mime-db ) also considers it's programmatic api as the semver contract. This means the MIME type resolution is not considered in the semver bumps. In the past the version of mime-db was pinned to give two decision points when adopting MIME data changes. This is no longer true. We still update the mime-db package here as a minor release when necessary, but will use a ^ range going forward. This means that if you want to pin your mime-db data you will need to do it in your application. While this expectation was not set in docs until now, it is how the pacakge operated, so we do not feel this is a breaking change. If you wish to pin your mime-db version you can do that with overrides via your package manager of choice. See their documentation for how to correctly configure that. Adding Types All mime types are based on mime-db , so open a PR there if you'd like to add mime types. API var mime = require ( 'mime-types' ) All functions return false if input is invalid or not found. mime.lookup(path) Lookup the content-type associated with a file. mime . lookup ( 'json' ) // 'application/json' mime . lookup ( '.md' ) // 'text/markdown' mime . lookup ( 'file.html' ) // 'text/html' mime . lookup ( 'folder/file.js' ) // 'application/javascript' mime . lookup ( 'folder/.htaccess' ) // false mime . lookup ( 'cats' ) // false mime.contentType(type) Create a full content-type header given a content-type or extension. When given an extension, mime.lookup is used to get the matching content-type, otherwise the given content-type is used. Then if the content-type does not already have a charset parameter, mime.charset is used to get the default charset and add to the returned content-type. mime . contentType ( 'markdown' ) // 'text/x-markdown; charset=utf-8' mime . contentType ( 'file.json' ) // 'application/json; charset=utf-8' mime . contentType ( 'text/html' ) // 'text/html; charset=utf-8' mime . contentType ( 'text/html; charset=iso-8859-1' ) // 'text/html; charset=iso-8859-1' // from a full path mime . contentType ( path . extname ( '/path/to/file.json' )) // 'application/json; charset=utf-8' mime.extension(type) Get the default extension for a content-type. mime . extension ( 'application/octet-stream' ) // 'bin' mime.charset(type) Lookup the implied default charset of a content-type. mime . charset ( 'text/markdown' ) // 'UTF-8' var type = mime.types[extension] A map of content-types by extension. [extensions...] = mime.extensions[type] A map of extensions by content-type. License MIT","title":"mime-types"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/#mime-types","text":"The ultimate javascript content-type utility. Similar to the mime@1.x module , except: No fallbacks. Instead of naively returning the first available type, mime-types simply returns false , so do var type = mime.lookup('unrecognized') || 'application/octet-stream' . No new Mime() business, so you could do var lookup = require('mime-types').lookup . No .define() functionality Bug fixes for .lookup(path) Otherwise, the API is compatible with mime 1.x.","title":"mime-types"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/#install","text":"This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install mime-types","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/#note-on-mime-type-data-and-semver","text":"This package considers the programmatic api as the semver compatibility. Additionally, the package which provides the MIME data for this package ( mime-db ) also considers it's programmatic api as the semver contract. This means the MIME type resolution is not considered in the semver bumps. In the past the version of mime-db was pinned to give two decision points when adopting MIME data changes. This is no longer true. We still update the mime-db package here as a minor release when necessary, but will use a ^ range going forward. This means that if you want to pin your mime-db data you will need to do it in your application. While this expectation was not set in docs until now, it is how the pacakge operated, so we do not feel this is a breaking change. If you wish to pin your mime-db version you can do that with overrides via your package manager of choice. See their documentation for how to correctly configure that.","title":"Note on MIME Type Data and Semver"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/#adding-types","text":"All mime types are based on mime-db , so open a PR there if you'd like to add mime types.","title":"Adding Types"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/#api","text":"var mime = require ( 'mime-types' ) All functions return false if input is invalid or not found.","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/#mimelookuppath","text":"Lookup the content-type associated with a file. mime . lookup ( 'json' ) // 'application/json' mime . lookup ( '.md' ) // 'text/markdown' mime . lookup ( 'file.html' ) // 'text/html' mime . lookup ( 'folder/file.js' ) // 'application/javascript' mime . lookup ( 'folder/.htaccess' ) // false mime . lookup ( 'cats' ) // false","title":"mime.lookup(path)"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/#mimecontenttypetype","text":"Create a full content-type header given a content-type or extension. When given an extension, mime.lookup is used to get the matching content-type, otherwise the given content-type is used. Then if the content-type does not already have a charset parameter, mime.charset is used to get the default charset and add to the returned content-type. mime . contentType ( 'markdown' ) // 'text/x-markdown; charset=utf-8' mime . contentType ( 'file.json' ) // 'application/json; charset=utf-8' mime . contentType ( 'text/html' ) // 'text/html; charset=utf-8' mime . contentType ( 'text/html; charset=iso-8859-1' ) // 'text/html; charset=iso-8859-1' // from a full path mime . contentType ( path . extname ( '/path/to/file.json' )) // 'application/json; charset=utf-8'","title":"mime.contentType(type)"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/#mimeextensiontype","text":"Get the default extension for a content-type. mime . extension ( 'application/octet-stream' ) // 'bin'","title":"mime.extension(type)"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/#mimecharsettype","text":"Lookup the implied default charset of a content-type. mime . charset ( 'text/markdown' ) // 'UTF-8'","title":"mime.charset(type)"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/#var-type-mimetypesextension","text":"A map of content-types by extension.","title":"var type = mime.types[extension]"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/#extensions-mimeextensionstype","text":"A map of extensions by content-type.","title":"[extensions...] = mime.extensions[type]"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/","text":"3.0.1 / 2025-03-26 deps: mime-db@1.54.0 3.0.0 / 2024-08-31 Drop support for node <18 deps: mime-db@1.53.0 resolve extension conflicts with mime-score (#119) asc -> application/pgp-signature is now application/pgp-keys mpp -> application/vnd.ms-project is now application/dash-patch+xml ac -> application/vnd.nokia.n-gage.ac+xml is now application/pkix-attr-cert bdoc -> application/x-bdoc is now application/bdoc wmz -> application/x-msmetafile is now application/x-ms-wmz xsl -> application/xslt+xml is now application/xml wav -> audio/wave is now audio/wav rtf -> text/rtf is now application/rtf xml -> text/xml is now application/xml mp4 -> video/mp4 is now application/mp4 mpg4 -> video/mp4 is now application/mp4 2.1.35 / 2022-03-12 deps: mime-db@1.52.0 Add extensions from IANA for more image/* types Add extension .asc to application/pgp-keys Add extensions to various XML types Add new upstream MIME types 2.1.34 / 2021-11-08 deps: mime-db@1.51.0 Add new upstream MIME types 2.1.33 / 2021-10-01 deps: mime-db@1.50.0 Add deprecated iWorks mime types and extensions Add new upstream MIME types 2.1.32 / 2021-07-27 deps: mime-db@1.49.0 Add extension .trig to application/trig Add new upstream MIME types 2.1.31 / 2021-06-01 deps: mime-db@1.48.0 Add extension .mvt to application/vnd.mapbox-vector-tile Add new upstream MIME types 2.1.30 / 2021-04-02 deps: mime-db@1.47.0 Add extension .amr to audio/amr Remove ambigious extensions from IANA for application/*+xml types Update primary extension to .es for application/ecmascript 2.1.29 / 2021-02-17 deps: mime-db@1.46.0 Add extension .amr to audio/amr Add extension .m4s to video/iso.segment Add extension .opus to audio/ogg Add new upstream MIME types 2.1.28 / 2021-01-01 deps: mime-db@1.45.0 Add application/ubjson with extension .ubj Add image/avif with extension .avif Add image/ktx2 with extension .ktx2 Add extension .dbf to application/vnd.dbf Add extension .rar to application/vnd.rar Add extension .td to application/urc-targetdesc+xml Add new upstream MIME types Fix extension of application/vnd.apple.keynote to be .key 2.1.27 / 2020-04-23 deps: mime-db@1.44.0 Add charsets from IANA Add extension .cjs to application/node Add new upstream MIME types 2.1.26 / 2020-01-05 deps: mime-db@1.43.0 Add application/x-keepass2 with extension .kdbx Add extension .mxmf to audio/mobile-xmf Add extensions from IANA for application/*+xml types Add new upstream MIME types 2.1.25 / 2019-11-12 deps: mime-db@1.42.0 Add new upstream MIME types Add application/toml with extension .toml Add image/vnd.ms-dds with extension .dds 2.1.24 / 2019-04-20 deps: mime-db@1.40.0 Add extensions from IANA for model/* types Add text/mdx with extension .mdx 2.1.23 / 2019-04-17 deps: mime-db@~1.39.0 Add extensions .siv and .sieve to application/sieve Add new upstream MIME types 2.1.22 / 2019-02-14 deps: mime-db@~1.38.0 Add extension .nq to application/n-quads Add extension .nt to application/n-triples Add new upstream MIME types 2.1.21 / 2018-10-19 deps: mime-db@~1.37.0 Add extensions to HEIC image types Add new upstream MIME types 2.1.20 / 2018-08-26 deps: mime-db@~1.36.0 Add Apple file extensions from IANA Add extensions from IANA for image/* types Add new upstream MIME types 2.1.19 / 2018-07-17 deps: mime-db@~1.35.0 Add extension .csl to application/vnd.citationstyles.style+xml Add extension .es to application/ecmascript Add extension .owl to application/rdf+xml Add new upstream MIME types Add UTF-8 as default charset for text/turtle 2.1.18 / 2018-02-16 deps: mime-db@~1.33.0 Add application/raml+yaml with extension .raml Add application/wasm with extension .wasm Add text/shex with extension .shex Add extensions for JPEG-2000 images Add extensions from IANA for message/* types Add new upstream MIME types Update font MIME types Update text/hjson to registered application/hjson 2.1.17 / 2017-09-01 deps: mime-db@~1.30.0 Add application/vnd.ms-outlook Add application/x-arj Add extension .mjs to application/javascript Add glTF types and extensions Add new upstream MIME types Add text/x-org Add VirtualBox MIME types Fix source records for video/* types that are IANA Update font/opentype to registered font/otf 2.1.16 / 2017-07-24 deps: mime-db@~1.29.0 Add application/fido.trusted-apps+json Add extension .wadl to application/vnd.sun.wadl+xml Add extension .gz to application/gzip Add new upstream MIME types Update extensions .md and .markdown to be text/markdown 2.1.15 / 2017-03-23 deps: mime-db@~1.27.0 Add new mime types Add image/apng 2.1.14 / 2017-01-14 deps: mime-db@~1.26.0 Add new mime types 2.1.13 / 2016-11-18 deps: mime-db@~1.25.0 Add new mime types 2.1.12 / 2016-09-18 deps: mime-db@~1.24.0 Add new mime types Add audio/mp3 2.1.11 / 2016-05-01 deps: mime-db@~1.23.0 Add new mime types 2.1.10 / 2016-02-15 deps: mime-db@~1.22.0 Add new mime types Fix extension of application/dash+xml Update primary extension for audio/mp4 2.1.9 / 2016-01-06 deps: mime-db@~1.21.0 Add new mime types 2.1.8 / 2015-11-30 deps: mime-db@~1.20.0 Add new mime types 2.1.7 / 2015-09-20 deps: mime-db@~1.19.0 Add new mime types 2.1.6 / 2015-09-03 deps: mime-db@~1.18.0 Add new mime types 2.1.5 / 2015-08-20 deps: mime-db@~1.17.0 Add new mime types 2.1.4 / 2015-07-30 deps: mime-db@~1.16.0 Add new mime types 2.1.3 / 2015-07-13 deps: mime-db@~1.15.0 Add new mime types 2.1.2 / 2015-06-25 deps: mime-db@~1.14.0 Add new mime types 2.1.1 / 2015-06-08 perf: fix deopt during mapping 2.1.0 / 2015-06-07 Fix incorrectly treating extension-less file name as extension i.e. 'path/to/json' will no longer return application/json Fix .charset(type) to accept parameters Fix .charset(type) to match case-insensitive Improve generation of extension to MIME mapping Refactor internals for readability and no argument reassignment Prefer application/* MIME types from the same source Prefer any type over application/octet-stream deps: mime-db@~1.13.0 Add nginx as a source Add new mime types 2.0.14 / 2015-06-06 deps: mime-db@~1.12.0 Add new mime types 2.0.13 / 2015-05-31 deps: mime-db@~1.11.0 Add new mime types 2.0.12 / 2015-05-19 deps: mime-db@~1.10.0 Add new mime types 2.0.11 / 2015-05-05 deps: mime-db@~1.9.1 Add new mime types 2.0.10 / 2015-03-13 deps: mime-db@~1.8.0 Add new mime types 2.0.9 / 2015-02-09 deps: mime-db@~1.7.0 Add new mime types Community extensions ownership transferred from node-mime 2.0.8 / 2015-01-29 deps: mime-db@~1.6.0 Add new mime types 2.0.7 / 2014-12-30 deps: mime-db@~1.5.0 Add new mime types Fix various invalid MIME type entries 2.0.6 / 2014-12-30 deps: mime-db@~1.4.0 Add new mime types Fix various invalid MIME type entries Remove example template MIME types 2.0.5 / 2014-12-29 deps: mime-db@~1.3.1 Fix missing extensions 2.0.4 / 2014-12-10 deps: mime-db@~1.3.0 Add new mime types 2.0.3 / 2014-11-09 deps: mime-db@~1.2.0 Add new mime types 2.0.2 / 2014-09-28 deps: mime-db@~1.1.0 Add new mime types Update charsets 2.0.1 / 2014-09-07 Support Node.js 0.6 2.0.0 / 2014-09-02 Use mime-db Remove .define() 1.0.2 / 2014-08-04 Set charset=utf-8 for text/javascript 1.0.1 / 2014-06-24 Add text/jsx type 1.0.0 / 2014-05-12 Return false for unknown types Set charset=utf-8 for application/json 0.1.0 / 2014-05-02 Initial release","title":"3.0.1 / 2025-03-26"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#301-2025-03-26","text":"deps: mime-db@1.54.0","title":"3.0.1 / 2025-03-26"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#300-2024-08-31","text":"Drop support for node <18 deps: mime-db@1.53.0 resolve extension conflicts with mime-score (#119) asc -> application/pgp-signature is now application/pgp-keys mpp -> application/vnd.ms-project is now application/dash-patch+xml ac -> application/vnd.nokia.n-gage.ac+xml is now application/pkix-attr-cert bdoc -> application/x-bdoc is now application/bdoc wmz -> application/x-msmetafile is now application/x-ms-wmz xsl -> application/xslt+xml is now application/xml wav -> audio/wave is now audio/wav rtf -> text/rtf is now application/rtf xml -> text/xml is now application/xml mp4 -> video/mp4 is now application/mp4 mpg4 -> video/mp4 is now application/mp4","title":"3.0.0 / 2024-08-31"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2135-2022-03-12","text":"deps: mime-db@1.52.0 Add extensions from IANA for more image/* types Add extension .asc to application/pgp-keys Add extensions to various XML types Add new upstream MIME types","title":"2.1.35 / 2022-03-12"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2134-2021-11-08","text":"deps: mime-db@1.51.0 Add new upstream MIME types","title":"2.1.34 / 2021-11-08"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2133-2021-10-01","text":"deps: mime-db@1.50.0 Add deprecated iWorks mime types and extensions Add new upstream MIME types","title":"2.1.33 / 2021-10-01"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2132-2021-07-27","text":"deps: mime-db@1.49.0 Add extension .trig to application/trig Add new upstream MIME types","title":"2.1.32 / 2021-07-27"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2131-2021-06-01","text":"deps: mime-db@1.48.0 Add extension .mvt to application/vnd.mapbox-vector-tile Add new upstream MIME types","title":"2.1.31 / 2021-06-01"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2130-2021-04-02","text":"deps: mime-db@1.47.0 Add extension .amr to audio/amr Remove ambigious extensions from IANA for application/*+xml types Update primary extension to .es for application/ecmascript","title":"2.1.30 / 2021-04-02"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2129-2021-02-17","text":"deps: mime-db@1.46.0 Add extension .amr to audio/amr Add extension .m4s to video/iso.segment Add extension .opus to audio/ogg Add new upstream MIME types","title":"2.1.29 / 2021-02-17"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2128-2021-01-01","text":"deps: mime-db@1.45.0 Add application/ubjson with extension .ubj Add image/avif with extension .avif Add image/ktx2 with extension .ktx2 Add extension .dbf to application/vnd.dbf Add extension .rar to application/vnd.rar Add extension .td to application/urc-targetdesc+xml Add new upstream MIME types Fix extension of application/vnd.apple.keynote to be .key","title":"2.1.28 / 2021-01-01"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2127-2020-04-23","text":"deps: mime-db@1.44.0 Add charsets from IANA Add extension .cjs to application/node Add new upstream MIME types","title":"2.1.27 / 2020-04-23"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2126-2020-01-05","text":"deps: mime-db@1.43.0 Add application/x-keepass2 with extension .kdbx Add extension .mxmf to audio/mobile-xmf Add extensions from IANA for application/*+xml types Add new upstream MIME types","title":"2.1.26 / 2020-01-05"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2125-2019-11-12","text":"deps: mime-db@1.42.0 Add new upstream MIME types Add application/toml with extension .toml Add image/vnd.ms-dds with extension .dds","title":"2.1.25 / 2019-11-12"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2124-2019-04-20","text":"deps: mime-db@1.40.0 Add extensions from IANA for model/* types Add text/mdx with extension .mdx","title":"2.1.24 / 2019-04-20"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2123-2019-04-17","text":"deps: mime-db@~1.39.0 Add extensions .siv and .sieve to application/sieve Add new upstream MIME types","title":"2.1.23 / 2019-04-17"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2122-2019-02-14","text":"deps: mime-db@~1.38.0 Add extension .nq to application/n-quads Add extension .nt to application/n-triples Add new upstream MIME types","title":"2.1.22 / 2019-02-14"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2121-2018-10-19","text":"deps: mime-db@~1.37.0 Add extensions to HEIC image types Add new upstream MIME types","title":"2.1.21 / 2018-10-19"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2120-2018-08-26","text":"deps: mime-db@~1.36.0 Add Apple file extensions from IANA Add extensions from IANA for image/* types Add new upstream MIME types","title":"2.1.20 / 2018-08-26"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2119-2018-07-17","text":"deps: mime-db@~1.35.0 Add extension .csl to application/vnd.citationstyles.style+xml Add extension .es to application/ecmascript Add extension .owl to application/rdf+xml Add new upstream MIME types Add UTF-8 as default charset for text/turtle","title":"2.1.19 / 2018-07-17"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2118-2018-02-16","text":"deps: mime-db@~1.33.0 Add application/raml+yaml with extension .raml Add application/wasm with extension .wasm Add text/shex with extension .shex Add extensions for JPEG-2000 images Add extensions from IANA for message/* types Add new upstream MIME types Update font MIME types Update text/hjson to registered application/hjson","title":"2.1.18 / 2018-02-16"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2117-2017-09-01","text":"deps: mime-db@~1.30.0 Add application/vnd.ms-outlook Add application/x-arj Add extension .mjs to application/javascript Add glTF types and extensions Add new upstream MIME types Add text/x-org Add VirtualBox MIME types Fix source records for video/* types that are IANA Update font/opentype to registered font/otf","title":"2.1.17 / 2017-09-01"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2116-2017-07-24","text":"deps: mime-db@~1.29.0 Add application/fido.trusted-apps+json Add extension .wadl to application/vnd.sun.wadl+xml Add extension .gz to application/gzip Add new upstream MIME types Update extensions .md and .markdown to be text/markdown","title":"2.1.16 / 2017-07-24"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2115-2017-03-23","text":"deps: mime-db@~1.27.0 Add new mime types Add image/apng","title":"2.1.15 / 2017-03-23"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2114-2017-01-14","text":"deps: mime-db@~1.26.0 Add new mime types","title":"2.1.14 / 2017-01-14"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2113-2016-11-18","text":"deps: mime-db@~1.25.0 Add new mime types","title":"2.1.13 / 2016-11-18"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2112-2016-09-18","text":"deps: mime-db@~1.24.0 Add new mime types Add audio/mp3","title":"2.1.12 / 2016-09-18"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2111-2016-05-01","text":"deps: mime-db@~1.23.0 Add new mime types","title":"2.1.11 / 2016-05-01"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2110-2016-02-15","text":"deps: mime-db@~1.22.0 Add new mime types Fix extension of application/dash+xml Update primary extension for audio/mp4","title":"2.1.10 / 2016-02-15"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#219-2016-01-06","text":"deps: mime-db@~1.21.0 Add new mime types","title":"2.1.9 / 2016-01-06"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#218-2015-11-30","text":"deps: mime-db@~1.20.0 Add new mime types","title":"2.1.8 / 2015-11-30"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#217-2015-09-20","text":"deps: mime-db@~1.19.0 Add new mime types","title":"2.1.7 / 2015-09-20"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#216-2015-09-03","text":"deps: mime-db@~1.18.0 Add new mime types","title":"2.1.6 / 2015-09-03"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#215-2015-08-20","text":"deps: mime-db@~1.17.0 Add new mime types","title":"2.1.5 / 2015-08-20"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#214-2015-07-30","text":"deps: mime-db@~1.16.0 Add new mime types","title":"2.1.4 / 2015-07-30"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#213-2015-07-13","text":"deps: mime-db@~1.15.0 Add new mime types","title":"2.1.3 / 2015-07-13"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#212-2015-06-25","text":"deps: mime-db@~1.14.0 Add new mime types","title":"2.1.2 / 2015-06-25"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#211-2015-06-08","text":"perf: fix deopt during mapping","title":"2.1.1 / 2015-06-08"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#210-2015-06-07","text":"Fix incorrectly treating extension-less file name as extension i.e. 'path/to/json' will no longer return application/json Fix .charset(type) to accept parameters Fix .charset(type) to match case-insensitive Improve generation of extension to MIME mapping Refactor internals for readability and no argument reassignment Prefer application/* MIME types from the same source Prefer any type over application/octet-stream deps: mime-db@~1.13.0 Add nginx as a source Add new mime types","title":"2.1.0 / 2015-06-07"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2014-2015-06-06","text":"deps: mime-db@~1.12.0 Add new mime types","title":"2.0.14 / 2015-06-06"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2013-2015-05-31","text":"deps: mime-db@~1.11.0 Add new mime types","title":"2.0.13 / 2015-05-31"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2012-2015-05-19","text":"deps: mime-db@~1.10.0 Add new mime types","title":"2.0.12 / 2015-05-19"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2011-2015-05-05","text":"deps: mime-db@~1.9.1 Add new mime types","title":"2.0.11 / 2015-05-05"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2010-2015-03-13","text":"deps: mime-db@~1.8.0 Add new mime types","title":"2.0.10 / 2015-03-13"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#209-2015-02-09","text":"deps: mime-db@~1.7.0 Add new mime types Community extensions ownership transferred from node-mime","title":"2.0.9 / 2015-02-09"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#208-2015-01-29","text":"deps: mime-db@~1.6.0 Add new mime types","title":"2.0.8 / 2015-01-29"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#207-2014-12-30","text":"deps: mime-db@~1.5.0 Add new mime types Fix various invalid MIME type entries","title":"2.0.7 / 2014-12-30"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#206-2014-12-30","text":"deps: mime-db@~1.4.0 Add new mime types Fix various invalid MIME type entries Remove example template MIME types","title":"2.0.6 / 2014-12-30"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#205-2014-12-29","text":"deps: mime-db@~1.3.1 Fix missing extensions","title":"2.0.5 / 2014-12-29"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#204-2014-12-10","text":"deps: mime-db@~1.3.0 Add new mime types","title":"2.0.4 / 2014-12-10"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#203-2014-11-09","text":"deps: mime-db@~1.2.0 Add new mime types","title":"2.0.3 / 2014-11-09"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#202-2014-09-28","text":"deps: mime-db@~1.1.0 Add new mime types Update charsets","title":"2.0.2 / 2014-09-28"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#201-2014-09-07","text":"Support Node.js 0.6","title":"2.0.1 / 2014-09-07"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#200-2014-09-02","text":"Use mime-db Remove .define()","title":"2.0.0 / 2014-09-02"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#102-2014-08-04","text":"Set charset=utf-8 for text/javascript","title":"1.0.2 / 2014-08-04"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#101-2014-06-24","text":"Add text/jsx type","title":"1.0.1 / 2014-06-24"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#100-2014-05-12","text":"Return false for unknown types Set charset=utf-8 for application/json","title":"1.0.0 / 2014-05-12"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#010-2014-05-02","text":"Initial release","title":"0.1.0 / 2014-05-02"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/","text":"minimatch A minimal matching utility. This is the matching library used internally by npm. It works by converting glob expressions into JavaScript RegExp objects. Usage var minimatch = require ( \"minimatch\" ) minimatch ( \"bar.foo\" , \"*.foo\" ) // true! minimatch ( \"bar.foo\" , \"*.bar\" ) // false! minimatch ( \"bar.foo\" , \"*.+(bar|foo)\" , { debug : true }) // true, and noisy! Features Supports these glob features: Brace Expansion Extended glob matching \"Globstar\" ** matching See: man sh man bash man 3 fnmatch man 5 gitignore Minimatch Class Create a minimatch object by instantiating the minimatch.Minimatch class. var Minimatch = require ( \"minimatch\" ). Minimatch var mm = new Minimatch ( pattern , options ) Properties pattern The original pattern the minimatch object represents. options The options supplied to the constructor. set A 2-dimensional array of regexp or string expressions. Each row in the array corresponds to a brace-expanded pattern. Each item in the row corresponds to a single path-part. For example, the pattern {a,b/c}/d would expand to a set of patterns like: [ [ a, d ] , [ b, c, d ] ] If a portion of the pattern doesn't have any \"magic\" in it (that is, it's something like \"foo\" rather than fo*o? ), then it will be left as a string rather than converted to a regular expression. regexp Created by the makeRe method. A single regular expression expressing the entire pattern. This is useful in cases where you wish to use the pattern somewhat like fnmatch(3) with FNM_PATH enabled. negate True if the pattern is negated. comment True if the pattern is a comment. empty True if the pattern is \"\" . Methods makeRe Generate the regexp member if necessary, and return it. Will return false if the pattern is invalid. match(fname) Return true if the filename matches the pattern, or false otherwise. matchOne(fileArray, patternArray, partial) Take a / -split filename, and match it against a single row in the regExpSet . This method is mainly for internal use, but is exposed so that it can be used by a glob-walker that needs to avoid excessive filesystem calls. All other methods are internal, and will be called as necessary. minimatch(path, pattern, options) Main export. Tests a path against the pattern using the options. var isJS = minimatch ( file , \"*.js\" , { matchBase : true }) minimatch.filter(pattern, options) Returns a function that tests its supplied argument, suitable for use with Array.filter . Example: var javascripts = fileList . filter ( minimatch . filter ( \"*.js\" , { matchBase : true })) minimatch.match(list, pattern, options) Match against the list of files, in the style of fnmatch or glob. If nothing is matched, and options.nonull is set, then return a list containing the pattern itself. var javascripts = minimatch . match ( fileList , \"*.js\" , { matchBase : true })) minimatch.makeRe(pattern, options) Make a regular expression object from the pattern. Options All options are false by default. debug Dump a ton of stuff to stderr. nobrace Do not expand {a,b} and {1..3} brace sets. noglobstar Disable ** matching against multiple folder names. dot Allow patterns to match filenames starting with a period, even if the pattern does not explicitly have a period in that spot. Note that by default, a/**/b will not match a/.d/b , unless dot is set. noext Disable \"extglob\" style patterns like +(a|b) . nocase Perform a case-insensitive match. nonull When a match is not found by minimatch.match , return a list containing the pattern itself if this option is set. When not set, an empty list is returned if there are no matches. matchBase If set, then patterns without slashes will be matched against the basename of the path if it contains slashes. For example, a?b would match the path /xyz/123/acb , but not /xyz/acb/123 . nocomment Suppress the behavior of treating # at the start of a pattern as a comment. nonegate Suppress the behavior of treating a leading ! character as negation. flipNegate Returns from negate expressions the same as if they were not negated. (Ie, true on a hit, false on a miss.) partial Compare a partial path to a pattern. As long as the parts of the path that are present are not contradicted by the pattern, it will be treated as a match. This is useful in applications where you're walking through a folder structure, and don't yet have the full path, but want to ensure that you do not walk down paths that can never be a match. For example, minimatch ( '/a/b' , '/a/*/c/d' , { partial : true }) // true, might be /a/b/c/d minimatch ( '/a/b' , '/**/d' , { partial : true }) // true, might be /a/b/.../d minimatch ( '/x/y/z' , '/a/**/z' , { partial : true }) // false, because x !== a allowWindowsEscape Windows path separator \\ is by default converted to / , which prohibits the usage of \\ as a escape character. This flag skips that behavior and allows using the escape character. Comparisons to other fnmatch/glob implementations While strict compliance with the existing standards is a worthwhile goal, some discrepancies exist between minimatch and other implementations, and are intentional. If the pattern starts with a ! character, then it is negated. Set the nonegate flag to suppress this behavior, and treat leading ! characters normally. This is perhaps relevant if you wish to start the pattern with a negative extglob pattern like !(a|B) . Multiple ! characters at the start of a pattern will negate the pattern multiple times. If a pattern starts with # , then it is treated as a comment, and will not match anything. Use \\# to match a literal # at the start of a line, or set the nocomment flag to suppress this behavior. The double-star character ** is supported by default, unless the noglobstar flag is set. This is supported in the manner of bsdglob and bash 4.1, where ** only has special significance if it is the only thing in a path part. That is, a/**/b will match a/x/y/b , but a/**b will not. If an escaped pattern has no matches, and the nonull flag is set, then minimatch.match returns the pattern as-provided, rather than interpreting the character escapes. For example, minimatch.match([], \"\\\\*a\\\\?\") will return \"\\\\*a\\\\?\" rather than \"*a?\" . This is akin to setting the nullglob option in bash, except that it does not resolve escaped pattern characters. If brace expansion is not disabled, then it is performed before any other interpretation of the glob pattern. Thus, a pattern like +(a|{b),c)} , which would not be valid in bash or zsh, is expanded first into the set of +(a|b) and +(a|c) , and those patterns are checked for validity. Since those two are valid, matching proceeds.","title":"minimatch"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#minimatch","text":"A minimal matching utility. This is the matching library used internally by npm. It works by converting glob expressions into JavaScript RegExp objects.","title":"minimatch"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#usage","text":"var minimatch = require ( \"minimatch\" ) minimatch ( \"bar.foo\" , \"*.foo\" ) // true! minimatch ( \"bar.foo\" , \"*.bar\" ) // false! minimatch ( \"bar.foo\" , \"*.+(bar|foo)\" , { debug : true }) // true, and noisy!","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#features","text":"Supports these glob features: Brace Expansion Extended glob matching \"Globstar\" ** matching See: man sh man bash man 3 fnmatch man 5 gitignore","title":"Features"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#minimatch-class","text":"Create a minimatch object by instantiating the minimatch.Minimatch class. var Minimatch = require ( \"minimatch\" ). Minimatch var mm = new Minimatch ( pattern , options )","title":"Minimatch Class"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#properties","text":"pattern The original pattern the minimatch object represents. options The options supplied to the constructor. set A 2-dimensional array of regexp or string expressions. Each row in the array corresponds to a brace-expanded pattern. Each item in the row corresponds to a single path-part. For example, the pattern {a,b/c}/d would expand to a set of patterns like: [ [ a, d ] , [ b, c, d ] ] If a portion of the pattern doesn't have any \"magic\" in it (that is, it's something like \"foo\" rather than fo*o? ), then it will be left as a string rather than converted to a regular expression. regexp Created by the makeRe method. A single regular expression expressing the entire pattern. This is useful in cases where you wish to use the pattern somewhat like fnmatch(3) with FNM_PATH enabled. negate True if the pattern is negated. comment True if the pattern is a comment. empty True if the pattern is \"\" .","title":"Properties"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#methods","text":"makeRe Generate the regexp member if necessary, and return it. Will return false if the pattern is invalid. match(fname) Return true if the filename matches the pattern, or false otherwise. matchOne(fileArray, patternArray, partial) Take a / -split filename, and match it against a single row in the regExpSet . This method is mainly for internal use, but is exposed so that it can be used by a glob-walker that needs to avoid excessive filesystem calls. All other methods are internal, and will be called as necessary.","title":"Methods"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#minimatchpath-pattern-options","text":"Main export. Tests a path against the pattern using the options. var isJS = minimatch ( file , \"*.js\" , { matchBase : true })","title":"minimatch(path, pattern, options)"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#minimatchfilterpattern-options","text":"Returns a function that tests its supplied argument, suitable for use with Array.filter . Example: var javascripts = fileList . filter ( minimatch . filter ( \"*.js\" , { matchBase : true }))","title":"minimatch.filter(pattern, options)"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#minimatchmatchlist-pattern-options","text":"Match against the list of files, in the style of fnmatch or glob. If nothing is matched, and options.nonull is set, then return a list containing the pattern itself. var javascripts = minimatch . match ( fileList , \"*.js\" , { matchBase : true }))","title":"minimatch.match(list, pattern, options)"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#minimatchmakerepattern-options","text":"Make a regular expression object from the pattern.","title":"minimatch.makeRe(pattern, options)"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#options","text":"All options are false by default.","title":"Options"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#debug","text":"Dump a ton of stuff to stderr.","title":"debug"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#nobrace","text":"Do not expand {a,b} and {1..3} brace sets.","title":"nobrace"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#noglobstar","text":"Disable ** matching against multiple folder names.","title":"noglobstar"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#dot","text":"Allow patterns to match filenames starting with a period, even if the pattern does not explicitly have a period in that spot. Note that by default, a/**/b will not match a/.d/b , unless dot is set.","title":"dot"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#noext","text":"Disable \"extglob\" style patterns like +(a|b) .","title":"noext"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#nocase","text":"Perform a case-insensitive match.","title":"nocase"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#nonull","text":"When a match is not found by minimatch.match , return a list containing the pattern itself if this option is set. When not set, an empty list is returned if there are no matches.","title":"nonull"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#matchbase","text":"If set, then patterns without slashes will be matched against the basename of the path if it contains slashes. For example, a?b would match the path /xyz/123/acb , but not /xyz/acb/123 .","title":"matchBase"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#nocomment","text":"Suppress the behavior of treating # at the start of a pattern as a comment.","title":"nocomment"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#nonegate","text":"Suppress the behavior of treating a leading ! character as negation.","title":"nonegate"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#flipnegate","text":"Returns from negate expressions the same as if they were not negated. (Ie, true on a hit, false on a miss.)","title":"flipNegate"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#partial","text":"Compare a partial path to a pattern. As long as the parts of the path that are present are not contradicted by the pattern, it will be treated as a match. This is useful in applications where you're walking through a folder structure, and don't yet have the full path, but want to ensure that you do not walk down paths that can never be a match. For example, minimatch ( '/a/b' , '/a/*/c/d' , { partial : true }) // true, might be /a/b/c/d minimatch ( '/a/b' , '/**/d' , { partial : true }) // true, might be /a/b/.../d minimatch ( '/x/y/z' , '/a/**/z' , { partial : true }) // false, because x !== a","title":"partial"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#allowwindowsescape","text":"Windows path separator \\ is by default converted to / , which prohibits the usage of \\ as a escape character. This flag skips that behavior and allows using the escape character.","title":"allowWindowsEscape"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#comparisons-to-other-fnmatchglob-implementations","text":"While strict compliance with the existing standards is a worthwhile goal, some discrepancies exist between minimatch and other implementations, and are intentional. If the pattern starts with a ! character, then it is negated. Set the nonegate flag to suppress this behavior, and treat leading ! characters normally. This is perhaps relevant if you wish to start the pattern with a negative extglob pattern like !(a|B) . Multiple ! characters at the start of a pattern will negate the pattern multiple times. If a pattern starts with # , then it is treated as a comment, and will not match anything. Use \\# to match a literal # at the start of a line, or set the nocomment flag to suppress this behavior. The double-star character ** is supported by default, unless the noglobstar flag is set. This is supported in the manner of bsdglob and bash 4.1, where ** only has special significance if it is the only thing in a path part. That is, a/**/b will match a/x/y/b , but a/**b will not. If an escaped pattern has no matches, and the nonull flag is set, then minimatch.match returns the pattern as-provided, rather than interpreting the character escapes. For example, minimatch.match([], \"\\\\*a\\\\?\") will return \"\\\\*a\\\\?\" rather than \"*a?\" . This is akin to setting the nullglob option in bash, except that it does not resolve escaped pattern characters. If brace expansion is not disabled, then it is performed before any other interpretation of the glob pattern. Thus, a pattern like +(a|{b),c)} , which would not be valid in bash or zsh, is expanded first into the set of +(a|b) and +(a|c) , and those patterns are checked for validity. Since those two are valid, matching proceeds.","title":"Comparisons to other fnmatch/glob implementations"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/","text":"MongoDB Node.js Driver The official MongoDB driver for Node.js. Upgrading to version 6? Take a look at our upgrade guide here ! Quick Links Site Link Documentation www.mongodb.com/docs/drivers/node API Docs mongodb.github.io/node-mongodb-native npm package www.npmjs.com/package/mongodb MongoDB www.mongodb.com MongoDB University learn.mongodb.com MongoDB Developer Center www.mongodb.com/developer Stack Overflow stackoverflow.com Source Code github.com/mongodb/node-mongodb-native Upgrade to v6 etc/notes/CHANGES_6.0.0.md Contributing CONTRIBUTING.md Changelog HISTORY.md Release Integrity Releases are created automatically and signed using the Node team's GPG key . This applies to the git tag as well as all release packages provided as part of a GitHub release. To verify the provided packages, download the key and import it using gpg: gpg --import node-driver.asc The GitHub release contains a detached signature file for the NPM package (named mongodb-X.Y.Z.tgz.sig ). The following command returns the link npm package. npm view mongodb@vX.Y.Z dist.tarball Using the result of the above command, a curl command can return the official npm package for the release. To verify the integrity of the downloaded package, run the following command: gpg --verify mongodb-X.Y.Z.tgz.sig mongodb-X.Y.Z.tgz [!Note] No verification is done when using npm to install the package. The contents of the Github tarball and npm's tarball are identical. Bugs / Feature Requests Think you\u2019ve found a bug? Want to see a new feature in node-mongodb-native ? Please open a case in our issue management tool, JIRA: Create an account and login jira.mongodb.org . Navigate to the NODE project jira.mongodb.org/browse/NODE . Click Create Issue - Please provide as much information as possible about the issue type and how to reproduce it. Bug reports in JIRA for all driver projects (i.e. NODE, PYTHON, CSHARP, JAVA) and the Core Server (i.e. SERVER) project are public . Support / Feedback For issues with, questions about, or feedback for the Node.js driver, please look into our support channels . Please do not email any of the driver developers directly with issues or questions - you're more likely to get an answer on the MongoDB Community Forums . Change Log Change history can be found in HISTORY.md . Compatibility The driver currently supports 4.0+ servers. For exhaustive server and runtime version compatibility matrices, please refer to the following links: MongoDB NodeJS Component Support Matrix The following table describes add-on component version compatibility for the Node.js driver. Only packages with versions in these supported ranges are stable when used in combination. Component mongodb@3.x mongodb@4.x mongodb@5.x mongodb@<6.12 mongodb@>=6.12 bson ^1.0.0 ^4.0.0 ^5.0.0 ^6.0.0 ^6.0.0 bson-ext ^1.0.0 || ^2.0.0 ^4.0.0 N/A N/A N/A kerberos ^1.0.0 ^1.0.0 || ^2.0.0 ^1.0.0 || ^2.0.0 ^2.0.1 ^2.0.1 mongodb-client-encryption ^1.0.0 ^1.0.0 || ^2.0.0 ^2.3.0 ^6.0.0 ^6.0.0 mongodb-legacy N/A ^4.0.0 ^5.0.0 ^6.0.0 ^6.0.0 @mongodb-js/zstd N/A ^1.0.0 ^1.0.0 ^1.1.0 ^1.1.0 || ^2.0.0 Typescript Version We recommend using the latest version of typescript, however we currently ensure the driver's public types compile against typescript@4.4.0 . This is the lowest typescript version guaranteed to work with our driver: older versions may or may not work - use at your own risk. Since typescript does not restrict breaking changes to major versions , we consider this support best effort. If you run into any unexpected compiler failures against our supported TypeScript versions, please let us know by filing an issue on our JIRA . Additionally, our Typescript types are compatible with the ECMAScript standard for our minimum supported Node version. Currently, our Typescript targets es2021. Installation The recommended way to get started using the Node.js 5.x driver is by using the npm (Node Package Manager) to install the dependency in your project. After you've created your own project using npm init , you can run: npm install mongodb This will download the MongoDB driver and add a dependency entry in your package.json file. If you are a Typescript user, you will need the Node.js type definitions to use the driver's definitions: npm install -D @types/node Driver Extensions The MongoDB driver can optionally be enhanced by the following feature packages: Maintained by MongoDB: Zstd network compression - @mongodb-js/zstd MongoDB field level and queryable encryption - mongodb-client-encryption GSSAPI / SSPI / Kerberos authentication - kerberos Some of these packages include native C++ extensions. Consult the trouble shooting guide here if you run into compilation issues. Third party: Snappy network compression - snappy AWS authentication - @aws-sdk/credential-providers Quick Start This guide will show you how to set up a simple application using Node.js and MongoDB. Its scope is only how to set up the driver and perform the simple CRUD operations. For more in-depth coverage, see the official documentation . Create the package.json file First, create a directory where your application will live. mkdir myProject cd myProject Enter the following command and answer the questions to create the initial structure for your new project: npm init -y Next, install the driver as a dependency. npm install mongodb Start a MongoDB Server For complete MongoDB installation instructions, see the manual . Download the right MongoDB version from MongoDB Create a database directory (in this case under /data ). Install and start a mongod process. mongod --dbpath = /data You should see the mongod process start up and print some status information. Connect to MongoDB Create a new app.js file and add the following code to try out some basic CRUD operations using the MongoDB driver. Add code to connect to the server and the database myProject : NOTE: Resolving DNS Connection issues Node.js 18 changed the default DNS resolution ordering from always prioritizing IPv4 to the ordering returned by the DNS provider. In some environments, this can result in localhost resolving to an IPv6 address instead of IPv4 and a consequent failure to connect to the server. This can be resolved by: specifying the IP address family using the MongoClient family option ( MongoClient(<uri>, { family: 4 } ) ) launching mongod or mongos with the ipv6 flag enabled ( --ipv6 mongod option documentation ) using a host of 127.0.0.1 in place of localhost specifying the DNS resolution ordering with the --dns-resolution-order Node.js command line argument (e.g. node --dns-resolution-order=ipv4first ) const { MongoClient } = require ( 'mongodb' ); // or as an es module: // import { MongoClient } from 'mongodb' // Connection URL const url = 'mongodb://localhost:27017' ; const client = new MongoClient ( url ); // Database Name const dbName = 'myProject' ; async function main () { // Use connect method to connect to the server await client . connect (); console . log ( 'Connected successfully to server' ); const db = client . db ( dbName ); const collection = db . collection ( 'documents' ); // the following code examples can be pasted here... return 'done.' ; } main () . then ( console . log ) . catch ( console . error ) . finally (() => client . close ()); Run your app from the command line with: node app.js The application should print Connected successfully to server to the console. Insert a Document Add to app.js the following function which uses the insertMany method to add three documents to the documents collection. const insertResult = await collection . insertMany ([{ a : 1 }, { a : 2 }, { a : 3 }]); console . log ( 'Inserted documents =>' , insertResult ); The insertMany command returns an object with information about the insert operations. Find All Documents Add a query that returns all the documents. const findResult = await collection . find ({}). toArray (); console . log ( 'Found documents =>' , findResult ); This query returns all the documents in the documents collection. If you add this below the insertMany example, you'll see the documents you've inserted. Find Documents with a Query Filter Add a query filter to find only documents which meet the query criteria. const filteredDocs = await collection . find ({ a : 3 }). toArray (); console . log ( 'Found documents filtered by { a: 3 } =>' , filteredDocs ); Only the documents which match 'a' : 3 should be returned. Update a document The following operation updates a document in the documents collection. const updateResult = await collection . updateOne ({ a : 3 }, { $set : { b : 1 } }); console . log ( 'Updated documents =>' , updateResult ); The method updates the first document where the field a is equal to 3 by adding a new field b to the document set to 1 . updateResult contains information about whether there was a matching document to update or not. Remove a document Remove the document where the field a is equal to 3 . const deleteResult = await collection . deleteMany ({ a : 3 }); console . log ( 'Deleted documents =>' , deleteResult ); Index a Collection Indexes can improve your application's performance. The following function creates an index on the a field in the documents collection. const indexName = await collection . createIndex ({ a : 1 }); console . log ( 'index name =' , indexName ); For more detailed information, see the indexing strategies page . Error Handling If you need to filter certain errors from our driver, we have a helpful tree of errors described in etc/notes/errors.md . It is our recommendation to use instanceof checks on errors and to avoid relying on parsing error.message and error.name strings in your code. We guarantee instanceof checks will pass according to semver guidelines, but errors may be sub-classed or their messages may change at any time, even patch releases, as we see fit to increase the helpfulness of the errors. Any new errors we add to the driver will directly extend an existing error class and no existing error will be moved to a different parent class outside of a major release. This means instanceof will always be able to accurately capture the errors that our driver throws. const client = new MongoClient ( url ); await client . connect (); const collection = client . db (). collection ( 'collection' ); try { await collection . insertOne ({ _id : 1 }); await collection . insertOne ({ _id : 1 }); // duplicate key error } catch ( error ) { if ( error instanceof MongoServerError ) { console . log ( `Error worth logging: ${ error } ` ); // special case for some reason } throw error ; // still want to crash } Nightly releases If you need to test with a change from the latest main branch, our mongodb npm package has nightly versions released under the nightly tag. npm install mongodb@nightly Nightly versions are published regardless of testing outcome. This means there could be semantic breakages or partially implemented features. The nightly build is not suitable for production use. Next Steps MongoDB Documentation MongoDB Node Driver Documentation Read about Schemas Star us on GitHub License Apache 2.0 \u00a9 2012-present MongoDB Contributors \\ \u00a9 2009-2012 Christian Amor Kvalheim","title":"MongoDB Node.js Driver"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#mongodb-nodejs-driver","text":"The official MongoDB driver for Node.js. Upgrading to version 6? Take a look at our upgrade guide here !","title":"MongoDB Node.js Driver"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#quick-links","text":"Site Link Documentation www.mongodb.com/docs/drivers/node API Docs mongodb.github.io/node-mongodb-native npm package www.npmjs.com/package/mongodb MongoDB www.mongodb.com MongoDB University learn.mongodb.com MongoDB Developer Center www.mongodb.com/developer Stack Overflow stackoverflow.com Source Code github.com/mongodb/node-mongodb-native Upgrade to v6 etc/notes/CHANGES_6.0.0.md Contributing CONTRIBUTING.md Changelog HISTORY.md","title":"Quick Links"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#release-integrity","text":"Releases are created automatically and signed using the Node team's GPG key . This applies to the git tag as well as all release packages provided as part of a GitHub release. To verify the provided packages, download the key and import it using gpg: gpg --import node-driver.asc The GitHub release contains a detached signature file for the NPM package (named mongodb-X.Y.Z.tgz.sig ). The following command returns the link npm package. npm view mongodb@vX.Y.Z dist.tarball Using the result of the above command, a curl command can return the official npm package for the release. To verify the integrity of the downloaded package, run the following command: gpg --verify mongodb-X.Y.Z.tgz.sig mongodb-X.Y.Z.tgz [!Note] No verification is done when using npm to install the package. The contents of the Github tarball and npm's tarball are identical.","title":"Release Integrity"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#bugs-feature-requests","text":"Think you\u2019ve found a bug? Want to see a new feature in node-mongodb-native ? Please open a case in our issue management tool, JIRA: Create an account and login jira.mongodb.org . Navigate to the NODE project jira.mongodb.org/browse/NODE . Click Create Issue - Please provide as much information as possible about the issue type and how to reproduce it. Bug reports in JIRA for all driver projects (i.e. NODE, PYTHON, CSHARP, JAVA) and the Core Server (i.e. SERVER) project are public .","title":"Bugs / Feature Requests"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#support-feedback","text":"For issues with, questions about, or feedback for the Node.js driver, please look into our support channels . Please do not email any of the driver developers directly with issues or questions - you're more likely to get an answer on the MongoDB Community Forums .","title":"Support / Feedback"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#change-log","text":"Change history can be found in HISTORY.md .","title":"Change Log"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#compatibility","text":"The driver currently supports 4.0+ servers. For exhaustive server and runtime version compatibility matrices, please refer to the following links: MongoDB NodeJS","title":"Compatibility"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#component-support-matrix","text":"The following table describes add-on component version compatibility for the Node.js driver. Only packages with versions in these supported ranges are stable when used in combination. Component mongodb@3.x mongodb@4.x mongodb@5.x mongodb@<6.12 mongodb@>=6.12 bson ^1.0.0 ^4.0.0 ^5.0.0 ^6.0.0 ^6.0.0 bson-ext ^1.0.0 || ^2.0.0 ^4.0.0 N/A N/A N/A kerberos ^1.0.0 ^1.0.0 || ^2.0.0 ^1.0.0 || ^2.0.0 ^2.0.1 ^2.0.1 mongodb-client-encryption ^1.0.0 ^1.0.0 || ^2.0.0 ^2.3.0 ^6.0.0 ^6.0.0 mongodb-legacy N/A ^4.0.0 ^5.0.0 ^6.0.0 ^6.0.0 @mongodb-js/zstd N/A ^1.0.0 ^1.0.0 ^1.1.0 ^1.1.0 || ^2.0.0","title":"Component Support Matrix"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#typescript-version","text":"We recommend using the latest version of typescript, however we currently ensure the driver's public types compile against typescript@4.4.0 . This is the lowest typescript version guaranteed to work with our driver: older versions may or may not work - use at your own risk. Since typescript does not restrict breaking changes to major versions , we consider this support best effort. If you run into any unexpected compiler failures against our supported TypeScript versions, please let us know by filing an issue on our JIRA . Additionally, our Typescript types are compatible with the ECMAScript standard for our minimum supported Node version. Currently, our Typescript targets es2021.","title":"Typescript Version"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#installation","text":"The recommended way to get started using the Node.js 5.x driver is by using the npm (Node Package Manager) to install the dependency in your project. After you've created your own project using npm init , you can run: npm install mongodb This will download the MongoDB driver and add a dependency entry in your package.json file. If you are a Typescript user, you will need the Node.js type definitions to use the driver's definitions: npm install -D @types/node","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#driver-extensions","text":"The MongoDB driver can optionally be enhanced by the following feature packages: Maintained by MongoDB: Zstd network compression - @mongodb-js/zstd MongoDB field level and queryable encryption - mongodb-client-encryption GSSAPI / SSPI / Kerberos authentication - kerberos Some of these packages include native C++ extensions. Consult the trouble shooting guide here if you run into compilation issues. Third party: Snappy network compression - snappy AWS authentication - @aws-sdk/credential-providers","title":"Driver Extensions"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#quick-start","text":"This guide will show you how to set up a simple application using Node.js and MongoDB. Its scope is only how to set up the driver and perform the simple CRUD operations. For more in-depth coverage, see the official documentation .","title":"Quick Start"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#create-the-packagejson-file","text":"First, create a directory where your application will live. mkdir myProject cd myProject Enter the following command and answer the questions to create the initial structure for your new project: npm init -y Next, install the driver as a dependency. npm install mongodb","title":"Create the package.json file"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#start-a-mongodb-server","text":"For complete MongoDB installation instructions, see the manual . Download the right MongoDB version from MongoDB Create a database directory (in this case under /data ). Install and start a mongod process. mongod --dbpath = /data You should see the mongod process start up and print some status information.","title":"Start a MongoDB Server"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#connect-to-mongodb","text":"Create a new app.js file and add the following code to try out some basic CRUD operations using the MongoDB driver. Add code to connect to the server and the database myProject : NOTE: Resolving DNS Connection issues Node.js 18 changed the default DNS resolution ordering from always prioritizing IPv4 to the ordering returned by the DNS provider. In some environments, this can result in localhost resolving to an IPv6 address instead of IPv4 and a consequent failure to connect to the server. This can be resolved by: specifying the IP address family using the MongoClient family option ( MongoClient(<uri>, { family: 4 } ) ) launching mongod or mongos with the ipv6 flag enabled ( --ipv6 mongod option documentation ) using a host of 127.0.0.1 in place of localhost specifying the DNS resolution ordering with the --dns-resolution-order Node.js command line argument (e.g. node --dns-resolution-order=ipv4first ) const { MongoClient } = require ( 'mongodb' ); // or as an es module: // import { MongoClient } from 'mongodb' // Connection URL const url = 'mongodb://localhost:27017' ; const client = new MongoClient ( url ); // Database Name const dbName = 'myProject' ; async function main () { // Use connect method to connect to the server await client . connect (); console . log ( 'Connected successfully to server' ); const db = client . db ( dbName ); const collection = db . collection ( 'documents' ); // the following code examples can be pasted here... return 'done.' ; } main () . then ( console . log ) . catch ( console . error ) . finally (() => client . close ()); Run your app from the command line with: node app.js The application should print Connected successfully to server to the console.","title":"Connect to MongoDB"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#insert-a-document","text":"Add to app.js the following function which uses the insertMany method to add three documents to the documents collection. const insertResult = await collection . insertMany ([{ a : 1 }, { a : 2 }, { a : 3 }]); console . log ( 'Inserted documents =>' , insertResult ); The insertMany command returns an object with information about the insert operations.","title":"Insert a Document"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#find-all-documents","text":"Add a query that returns all the documents. const findResult = await collection . find ({}). toArray (); console . log ( 'Found documents =>' , findResult ); This query returns all the documents in the documents collection. If you add this below the insertMany example, you'll see the documents you've inserted.","title":"Find All Documents"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#find-documents-with-a-query-filter","text":"Add a query filter to find only documents which meet the query criteria. const filteredDocs = await collection . find ({ a : 3 }). toArray (); console . log ( 'Found documents filtered by { a: 3 } =>' , filteredDocs ); Only the documents which match 'a' : 3 should be returned.","title":"Find Documents with a Query Filter"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#update-a-document","text":"The following operation updates a document in the documents collection. const updateResult = await collection . updateOne ({ a : 3 }, { $set : { b : 1 } }); console . log ( 'Updated documents =>' , updateResult ); The method updates the first document where the field a is equal to 3 by adding a new field b to the document set to 1 . updateResult contains information about whether there was a matching document to update or not.","title":"Update a document"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#remove-a-document","text":"Remove the document where the field a is equal to 3 . const deleteResult = await collection . deleteMany ({ a : 3 }); console . log ( 'Deleted documents =>' , deleteResult );","title":"Remove a document"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#index-a-collection","text":"Indexes can improve your application's performance. The following function creates an index on the a field in the documents collection. const indexName = await collection . createIndex ({ a : 1 }); console . log ( 'index name =' , indexName ); For more detailed information, see the indexing strategies page .","title":"Index a Collection"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#error-handling","text":"If you need to filter certain errors from our driver, we have a helpful tree of errors described in etc/notes/errors.md . It is our recommendation to use instanceof checks on errors and to avoid relying on parsing error.message and error.name strings in your code. We guarantee instanceof checks will pass according to semver guidelines, but errors may be sub-classed or their messages may change at any time, even patch releases, as we see fit to increase the helpfulness of the errors. Any new errors we add to the driver will directly extend an existing error class and no existing error will be moved to a different parent class outside of a major release. This means instanceof will always be able to accurately capture the errors that our driver throws. const client = new MongoClient ( url ); await client . connect (); const collection = client . db (). collection ( 'collection' ); try { await collection . insertOne ({ _id : 1 }); await collection . insertOne ({ _id : 1 }); // duplicate key error } catch ( error ) { if ( error instanceof MongoServerError ) { console . log ( `Error worth logging: ${ error } ` ); // special case for some reason } throw error ; // still want to crash }","title":"Error Handling"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#nightly-releases","text":"If you need to test with a change from the latest main branch, our mongodb npm package has nightly versions released under the nightly tag. npm install mongodb@nightly Nightly versions are published regardless of testing outcome. This means there could be semantic breakages or partially implemented features. The nightly build is not suitable for production use.","title":"Nightly releases"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#next-steps","text":"MongoDB Documentation MongoDB Node Driver Documentation Read about Schemas Star us on GitHub","title":"Next Steps"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#license","text":"Apache 2.0 \u00a9 2012-present MongoDB Contributors \\ \u00a9 2009-2012 Christian Amor Kvalheim","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/LICENSE/","text":"Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"{}\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives. Copyright {yyyy} {name of copyright owner} Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"LICENSE"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb-connection-string-url/","text":"mongodb-connection-string-url MongoDB connection strings, based on the WhatWG URL API import ConnectionString from 'mongodb-connection-string-url' ; const cs = new ConnectionString ( 'mongodb://localhost' ); cs . searchParams . set ( 'readPreference' , 'secondary' ); console . log ( cs . href ); // 'mongodb://localhost/?readPreference=secondary' Deviations from the WhatWG URL package URL parameters are case-insensitive The .host , .hostname and .port properties cannot be set, and reading them does not return meaningful results (and are typed as never in TypeScript) The .hosts property contains a list of all hosts in the connection string The .href property cannot be set, only read There is an additional .isSRV property, set to true for mongodb+srv:// There is an additional .clone() utility method on the prototype LICENSE Apache-2.0","title":"mongodb-connection-string-url"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb-connection-string-url/#mongodb-connection-string-url","text":"MongoDB connection strings, based on the WhatWG URL API import ConnectionString from 'mongodb-connection-string-url' ; const cs = new ConnectionString ( 'mongodb://localhost' ); cs . searchParams . set ( 'readPreference' , 'secondary' ); console . log ( cs . href ); // 'mongodb://localhost/?readPreference=secondary'","title":"mongodb-connection-string-url"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb-connection-string-url/#deviations-from-the-whatwg-url-package","text":"URL parameters are case-insensitive The .host , .hostname and .port properties cannot be set, and reading them does not return meaningful results (and are typed as never in TypeScript) The .hosts property contains a list of all hosts in the connection string The .href property cannot be set, only read There is an additional .isSRV property, set to true for mongodb+srv:// There is an additional .clone() utility method on the prototype","title":"Deviations from the WhatWG URL package"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb-connection-string-url/#license","text":"Apache-2.0","title":"LICENSE"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/","text":"Mongoose Mongoose is a MongoDB object modeling tool designed to work in an asynchronous environment. Mongoose supports Node.js and Deno (alpha). Documentation The official documentation website is mongoosejs.com . Mongoose 8.0.0 was released on October 31, 2023. You can find more details on backwards breaking changes in 8.0.0 on our docs site . Support Stack Overflow Bug Reports Mongoose Slack Channel Help Forum MongoDB Support Plugins Check out the plugins search site to see hundreds of related modules from the community. Next, learn how to write your own plugin from the docs or this blog post . Contributors Pull requests are always welcome! Please base pull requests against the master branch and follow the contributing guide . If your pull requests makes documentation changes, please do not modify any .html files. The .html files are compiled code, so please make your changes in docs/*.pug , lib/*.js , or test/docs/*.js . View all 400+ contributors . Installation First install Node.js and MongoDB . Then: npm install mongoose Mongoose 6.8.0 also includes alpha support for Deno . Importing // Using Node.js `require()` const mongoose = require ( 'mongoose' ); // Using ES6 imports import mongoose from 'mongoose' ; Or, using Deno's createRequire() for CommonJS support as follows. import { createRequire } from 'https://deno.land/std@0.177.0/node/module.ts' ; const require = createRequire ( import . meta . url ); const mongoose = require ( 'mongoose' ); mongoose . connect ( 'mongodb://127.0.0.1:27017/test' ) . then (() => console . log ( 'Connected!' )); You can then run the above script using the following. deno run --allow-net --allow-read --allow-sys --allow-env mongoose-test.js Mongoose for Enterprise Available as part of the Tidelift Subscription The maintainers of mongoose and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. Learn more. Overview Connecting to MongoDB First, we need to define a connection. If your app uses only one database, you should use mongoose.connect . If you need to create additional connections, use mongoose.createConnection . Both connect and createConnection take a mongodb:// URI, or the parameters host, database, port, options . await mongoose . connect ( 'mongodb://127.0.0.1/my_database' ); Once connected, the open event is fired on the Connection instance. If you're using mongoose.connect , the Connection is mongoose.connection . Otherwise, mongoose.createConnection return value is a Connection . Note: If the local connection fails then try using 127.0.0.1 instead of localhost. Sometimes issues may arise when the local hostname has been changed. Important! Mongoose buffers all the commands until it's connected to the database. This means that you don't have to wait until it connects to MongoDB in order to define models, run queries, etc. Defining a Model Models are defined through the Schema interface. const Schema = mongoose . Schema ; const ObjectId = Schema . ObjectId ; const BlogPost = new Schema ({ author : ObjectId , title : String , body : String , date : Date }); Aside from defining the structure of your documents and the types of data you're storing, a Schema handles the definition of: Validators (async and sync) Defaults Getters Setters Indexes Middleware Methods definition Statics definition Plugins pseudo-JOINs The following example shows some of these features: const Comment = new Schema ({ name : { type : String , default : 'hahaha' }, age : { type : Number , min : 18 , index : true }, bio : { type : String , match : /[a-z]/ }, date : { type : Date , default : Date . now }, buff : Buffer }); // a setter Comment . path ( 'name' ). set ( function ( v ) { return capitalize ( v ); }); // middleware Comment . pre ( 'save' , function ( next ) { notify ( this . get ( 'email' )); next (); }); Take a look at the example in examples/schema/schema.js for an end-to-end example of a typical setup. Accessing a Model Once we define a model through mongoose.model('ModelName', mySchema) , we can access it through the same function const MyModel = mongoose . model ( 'ModelName' ); Or just do it all at once const MyModel = mongoose . model ( 'ModelName' , mySchema ); The first argument is the singular name of the collection your model is for. Mongoose automatically looks for the plural version of your model name. For example, if you use const MyModel = mongoose . model ( 'Ticket' , mySchema ); Then MyModel will use the tickets collection, not the ticket collection. For more details read the model docs . Once we have our model, we can then instantiate it, and save it: const instance = new MyModel (); instance . my . key = 'hello' ; await instance . save (); Or we can find documents from the same collection await MyModel . find ({}); You can also findOne , findById , update , etc. const instance = await MyModel . findOne ({ /* ... */ }); console . log ( instance . my . key ); // 'hello' For more details check out the docs . Important! If you opened a separate connection using mongoose.createConnection() but attempt to access the model through mongoose.model('ModelName') it will not work as expected since it is not hooked up to an active db connection. In this case access your model through the connection you created: const conn = mongoose . createConnection ( 'your connection string' ); const MyModel = conn . model ( 'ModelName' , schema ); const m = new MyModel (); await m . save (); // works vs const conn = mongoose . createConnection ( 'your connection string' ); const MyModel = mongoose . model ( 'ModelName' , schema ); const m = new MyModel (); await m . save (); // does not work b/c the default connection object was never connected Embedded Documents In the first example snippet, we defined a key in the Schema that looks like: comments: [Comment] Where Comment is a Schema we created. This means that creating embedded documents is as simple as: // retrieve my model const BlogPost = mongoose . model ( 'BlogPost' ); // create a blog post const post = new BlogPost (); // create a comment post . comments . push ({ title : 'My comment' }); await post . save (); The same goes for removing them: const post = await BlogPost . findById ( myId ); post . comments [ 0 ]. deleteOne (); await post . save (); Embedded documents enjoy all the same features as your models. Defaults, validators, middleware. Middleware See the docs page. Intercepting and mutating method arguments You can intercept method arguments via middleware. For example, this would allow you to broadcast changes about your Documents every time someone set s a path in your Document to a new value: schema . pre ( 'set' , function ( next , path , val , typel ) { // `this` is the current Document this . emit ( 'set' , path , val ); // Pass control to the next pre next (); }); Moreover, you can mutate the incoming method arguments so that subsequent middleware see different values for those arguments. To do so, just pass the new values to next : schema . pre ( method , function firstPre ( next , methodArg1 , methodArg2 ) { // Mutate methodArg1 next ( 'altered-' + methodArg1 . toString (), methodArg2 ); }); // pre declaration is chainable schema . pre ( method , function secondPre ( next , methodArg1 , methodArg2 ) { console . log ( methodArg1 ); // => 'altered-originalValOfMethodArg1' console . log ( methodArg2 ); // => 'originalValOfMethodArg2' // Passing no arguments to `next` automatically passes along the current argument values // i.e., the following `next()` is equivalent to `next(methodArg1, methodArg2)` // and also equivalent to, with the example method arg // values, `next('altered-originalValOfMethodArg1', 'originalValOfMethodArg2')` next (); }); Schema gotcha type , when used in a schema has special meaning within Mongoose. If your schema requires using type as a nested property you must use object notation: new Schema ({ broken : { type : Boolean }, asset : { name : String , type : String // uh oh, it broke. asset will be interpreted as String } }); new Schema ({ works : { type : Boolean }, asset : { name : String , type : { type : String } // works. asset is an object with a type property } }); Driver Access Mongoose is built on top of the official MongoDB Node.js driver . Each mongoose model keeps a reference to a native MongoDB driver collection . The collection object can be accessed using YourModel.collection . However, using the collection object directly bypasses all mongoose features, including hooks, validation, etc. The one notable exception that YourModel.collection still buffers commands. As such, YourModel.collection.find() will not return a cursor. API Docs Find the API docs here , generated using dox and acquit . Related Projects MongoDB Runners run-rs mongodb-memory-server mongodb-topology-manager Unofficial CLIs mongoosejs-cli Data Seeding dookie seedgoose mongoose-data-seed Express Session Stores connect-mongodb-session connect-mongo License Copyright (c) 2010 LearnBoost <dev@learnboost.com> Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Mongoose"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#mongoose","text":"Mongoose is a MongoDB object modeling tool designed to work in an asynchronous environment. Mongoose supports Node.js and Deno (alpha).","title":"Mongoose"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#documentation","text":"The official documentation website is mongoosejs.com . Mongoose 8.0.0 was released on October 31, 2023. You can find more details on backwards breaking changes in 8.0.0 on our docs site .","title":"Documentation"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#support","text":"Stack Overflow Bug Reports Mongoose Slack Channel Help Forum MongoDB Support","title":"Support"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#plugins","text":"Check out the plugins search site to see hundreds of related modules from the community. Next, learn how to write your own plugin from the docs or this blog post .","title":"Plugins"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#contributors","text":"Pull requests are always welcome! Please base pull requests against the master branch and follow the contributing guide . If your pull requests makes documentation changes, please do not modify any .html files. The .html files are compiled code, so please make your changes in docs/*.pug , lib/*.js , or test/docs/*.js . View all 400+ contributors .","title":"Contributors"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#installation","text":"First install Node.js and MongoDB . Then: npm install mongoose Mongoose 6.8.0 also includes alpha support for Deno .","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#importing","text":"// Using Node.js `require()` const mongoose = require ( 'mongoose' ); // Using ES6 imports import mongoose from 'mongoose' ; Or, using Deno's createRequire() for CommonJS support as follows. import { createRequire } from 'https://deno.land/std@0.177.0/node/module.ts' ; const require = createRequire ( import . meta . url ); const mongoose = require ( 'mongoose' ); mongoose . connect ( 'mongodb://127.0.0.1:27017/test' ) . then (() => console . log ( 'Connected!' )); You can then run the above script using the following. deno run --allow-net --allow-read --allow-sys --allow-env mongoose-test.js","title":"Importing"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#mongoose-for-enterprise","text":"Available as part of the Tidelift Subscription The maintainers of mongoose and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. Learn more.","title":"Mongoose for Enterprise"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#overview","text":"","title":"Overview"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#connecting-to-mongodb","text":"First, we need to define a connection. If your app uses only one database, you should use mongoose.connect . If you need to create additional connections, use mongoose.createConnection . Both connect and createConnection take a mongodb:// URI, or the parameters host, database, port, options . await mongoose . connect ( 'mongodb://127.0.0.1/my_database' ); Once connected, the open event is fired on the Connection instance. If you're using mongoose.connect , the Connection is mongoose.connection . Otherwise, mongoose.createConnection return value is a Connection . Note: If the local connection fails then try using 127.0.0.1 instead of localhost. Sometimes issues may arise when the local hostname has been changed. Important! Mongoose buffers all the commands until it's connected to the database. This means that you don't have to wait until it connects to MongoDB in order to define models, run queries, etc.","title":"Connecting to MongoDB"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#defining-a-model","text":"Models are defined through the Schema interface. const Schema = mongoose . Schema ; const ObjectId = Schema . ObjectId ; const BlogPost = new Schema ({ author : ObjectId , title : String , body : String , date : Date }); Aside from defining the structure of your documents and the types of data you're storing, a Schema handles the definition of: Validators (async and sync) Defaults Getters Setters Indexes Middleware Methods definition Statics definition Plugins pseudo-JOINs The following example shows some of these features: const Comment = new Schema ({ name : { type : String , default : 'hahaha' }, age : { type : Number , min : 18 , index : true }, bio : { type : String , match : /[a-z]/ }, date : { type : Date , default : Date . now }, buff : Buffer }); // a setter Comment . path ( 'name' ). set ( function ( v ) { return capitalize ( v ); }); // middleware Comment . pre ( 'save' , function ( next ) { notify ( this . get ( 'email' )); next (); }); Take a look at the example in examples/schema/schema.js for an end-to-end example of a typical setup.","title":"Defining a Model"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#accessing-a-model","text":"Once we define a model through mongoose.model('ModelName', mySchema) , we can access it through the same function const MyModel = mongoose . model ( 'ModelName' ); Or just do it all at once const MyModel = mongoose . model ( 'ModelName' , mySchema ); The first argument is the singular name of the collection your model is for. Mongoose automatically looks for the plural version of your model name. For example, if you use const MyModel = mongoose . model ( 'Ticket' , mySchema ); Then MyModel will use the tickets collection, not the ticket collection. For more details read the model docs . Once we have our model, we can then instantiate it, and save it: const instance = new MyModel (); instance . my . key = 'hello' ; await instance . save (); Or we can find documents from the same collection await MyModel . find ({}); You can also findOne , findById , update , etc. const instance = await MyModel . findOne ({ /* ... */ }); console . log ( instance . my . key ); // 'hello' For more details check out the docs . Important! If you opened a separate connection using mongoose.createConnection() but attempt to access the model through mongoose.model('ModelName') it will not work as expected since it is not hooked up to an active db connection. In this case access your model through the connection you created: const conn = mongoose . createConnection ( 'your connection string' ); const MyModel = conn . model ( 'ModelName' , schema ); const m = new MyModel (); await m . save (); // works vs const conn = mongoose . createConnection ( 'your connection string' ); const MyModel = mongoose . model ( 'ModelName' , schema ); const m = new MyModel (); await m . save (); // does not work b/c the default connection object was never connected","title":"Accessing a Model"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#embedded-documents","text":"In the first example snippet, we defined a key in the Schema that looks like: comments: [Comment] Where Comment is a Schema we created. This means that creating embedded documents is as simple as: // retrieve my model const BlogPost = mongoose . model ( 'BlogPost' ); // create a blog post const post = new BlogPost (); // create a comment post . comments . push ({ title : 'My comment' }); await post . save (); The same goes for removing them: const post = await BlogPost . findById ( myId ); post . comments [ 0 ]. deleteOne (); await post . save (); Embedded documents enjoy all the same features as your models. Defaults, validators, middleware.","title":"Embedded Documents"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#middleware","text":"See the docs page.","title":"Middleware"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#intercepting-and-mutating-method-arguments","text":"You can intercept method arguments via middleware. For example, this would allow you to broadcast changes about your Documents every time someone set s a path in your Document to a new value: schema . pre ( 'set' , function ( next , path , val , typel ) { // `this` is the current Document this . emit ( 'set' , path , val ); // Pass control to the next pre next (); }); Moreover, you can mutate the incoming method arguments so that subsequent middleware see different values for those arguments. To do so, just pass the new values to next : schema . pre ( method , function firstPre ( next , methodArg1 , methodArg2 ) { // Mutate methodArg1 next ( 'altered-' + methodArg1 . toString (), methodArg2 ); }); // pre declaration is chainable schema . pre ( method , function secondPre ( next , methodArg1 , methodArg2 ) { console . log ( methodArg1 ); // => 'altered-originalValOfMethodArg1' console . log ( methodArg2 ); // => 'originalValOfMethodArg2' // Passing no arguments to `next` automatically passes along the current argument values // i.e., the following `next()` is equivalent to `next(methodArg1, methodArg2)` // and also equivalent to, with the example method arg // values, `next('altered-originalValOfMethodArg1', 'originalValOfMethodArg2')` next (); });","title":"Intercepting and mutating method arguments"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#schema-gotcha","text":"type , when used in a schema has special meaning within Mongoose. If your schema requires using type as a nested property you must use object notation: new Schema ({ broken : { type : Boolean }, asset : { name : String , type : String // uh oh, it broke. asset will be interpreted as String } }); new Schema ({ works : { type : Boolean }, asset : { name : String , type : { type : String } // works. asset is an object with a type property } });","title":"Schema gotcha"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#driver-access","text":"Mongoose is built on top of the official MongoDB Node.js driver . Each mongoose model keeps a reference to a native MongoDB driver collection . The collection object can be accessed using YourModel.collection . However, using the collection object directly bypasses all mongoose features, including hooks, validation, etc. The one notable exception that YourModel.collection still buffers commands. As such, YourModel.collection.find() will not return a cursor.","title":"Driver Access"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#api-docs","text":"Find the API docs here , generated using dox and acquit .","title":"API Docs"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#related-projects","text":"","title":"Related Projects"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#mongodb-runners","text":"run-rs mongodb-memory-server mongodb-topology-manager","title":"MongoDB Runners"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#unofficial-clis","text":"mongoosejs-cli","title":"Unofficial CLIs"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#data-seeding","text":"dookie seedgoose mongoose-data-seed","title":"Data Seeding"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#express-session-stores","text":"connect-mongodb-session connect-mongo","title":"Express Session Stores"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#license","text":"Copyright (c) 2010 LearnBoost <dev@learnboost.com> Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/LICENSE/","text":"MIT License Copyright (c) 2010-2013 LearnBoost dev@learnboost.com Copyright (c) 2013-2021 Automattic Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"MIT License"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/LICENSE/#mit-license","text":"Copyright (c) 2010-2013 LearnBoost dev@learnboost.com Copyright (c) 2013-2021 Automattic Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"MIT License"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/SECURITY/","text":"Please follow the instructions on Tidelift's security page to report a security issue.","title":"SECURITY"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/lib/drivers/SPEC/","text":"Driver Spec TODO","title":"Driver Spec"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/lib/drivers/SPEC/#driver-spec","text":"TODO","title":"Driver Spec"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/","text":"morgan HTTP request logger middleware for node.js Named after Dexter , a show you should not watch until completion. API var morgan = require ( 'morgan' ) morgan(format, options) Create a new morgan logger middleware function using the given format and options . The format argument may be a string of a predefined name (see below for the names), a string of a format string, or a function that will produce a log entry. The format function will be called with three arguments tokens , req , and res , where tokens is an object with all defined tokens, req is the HTTP request and res is the HTTP response. The function is expected to return a string that will be the log line, or undefined / null to skip logging. Using a predefined format string morgan ( 'tiny' ) Using format string of predefined tokens morgan ( ':method :url :status :res[content-length] - :response-time ms' ) Using a custom format function morgan ( function ( tokens , req , res ) { return [ tokens . method ( req , res ), tokens . url ( req , res ), tokens . status ( req , res ), tokens . res ( req , res , 'content-length' ), '-' , tokens [ 'response-time' ]( req , res ), 'ms' ]. join ( ' ' ) }) Options Morgan accepts these properties in the options object. immediate Write log line on request instead of response. This means that a requests will be logged even if the server crashes, but data from the response (like the response code, content length, etc.) cannot be logged . skip Function to determine if logging is skipped, defaults to false . This function will be called as skip(req, res) . // EXAMPLE: only log error responses morgan ( 'combined' , { skip : function ( req , res ) { return res . statusCode < 400 } }) stream Output stream for writing log lines, defaults to process.stdout . Predefined Formats There are various pre-defined formats provided: combined Standard Apache combined log output. :remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length] \":referrer\" \":user-agent\" common Standard Apache common log output. :remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length] dev Concise output colored by response status for development use. The :status token will be colored green for success codes, red for server error codes, yellow for client error codes, cyan for redirection codes, and uncolored for information codes. :method :url :status :response-time ms - :res[content-length] short Shorter than default, also including response time. :remote-addr :remote-user :method :url HTTP/:http-version :status :res[content-length] - :response-time ms tiny The minimal output. :method :url :status :res[content-length] - :response-time ms Tokens Creating new tokens To define a token, simply invoke morgan.token() with the name and a callback function. This callback function is expected to return a string value. The value returned is then available as \":type\" in this case: morgan . token ( 'type' , function ( req , res ) { return req . headers [ 'content-type' ] }) Calling morgan.token() using the same name as an existing token will overwrite that token definition. The token function is expected to be called with the arguments req and res , representing the HTTP request and HTTP response. Additionally, the token can accept further arguments of it's choosing to customize behavior. :date[format] The current date and time in UTC. The available formats are: clf for the common log format ( \"10/Oct/2000:13:55:36 +0000\" ) iso for the common ISO 8601 date time format ( 2000-10-10T13:55:36.000Z ) web for the common RFC 1123 date time format ( Tue, 10 Oct 2000 13:55:36 GMT ) If no format is given, then the default is web . :http-version The HTTP version of the request. :method The HTTP method of the request. :referrer The Referrer header of the request. This will use the standard mis-spelled Referer header if exists, otherwise Referrer. :remote-addr The remote address of the request. This will use req.ip , otherwise the standard req.connection.remoteAddress value (socket address). :remote-user The user authenticated as part of Basic auth for the request. :req[header] The given header of the request. If the header is not present, the value will be displayed as \"-\" in the log. :res[header] The given header of the response. If the header is not present, the value will be displayed as \"-\" in the log. :response-time[digits] The time between the request coming into morgan and when the response headers are written, in milliseconds. The digits argument is a number that specifies the number of digits to include on the number, defaulting to 3 , which provides microsecond precision. :status The status code of the response. If the request/response cycle completes before a response was sent to the client (for example, the TCP socket closed prematurely by a client aborting the request), then the status will be empty (displayed as \"-\" in the log). :total-time[digits] The time between the request coming into morgan and when the response has finished being written out to the connection, in milliseconds. The digits argument is a number that specifies the number of digits to include on the number, defaulting to 3 , which provides microsecond precision. :url The URL of the request. This will use req.originalUrl if exists, otherwise req.url . :user-agent The contents of the User-Agent header of the request. morgan.compile(format) Compile a format string into a format function for use by morgan . A format string is a string that represents a single log line and can utilize token syntax. Tokens are references by :token-name . If tokens accept arguments, they can be passed using [] , for example: :token-name[pretty] would pass the string 'pretty' as an argument to the token token-name . The function returned from morgan.compile takes three arguments tokens , req , and res , where tokens is object with all defined tokens, req is the HTTP request and res is the HTTP response. The function will return a string that will be the log line, or undefined / null to skip logging. Normally formats are defined using morgan.format(name, format) , but for certain advanced uses, this compile function is directly available. Examples express/connect Simple app that will log all request in the Apache combined format to STDOUT var express = require ( 'express' ) var morgan = require ( 'morgan' ) var app = express () app . use ( morgan ( 'combined' )) app . get ( '/' , function ( req , res ) { res . send ( 'hello, world!' ) }) vanilla http server Simple app that will log all request in the Apache combined format to STDOUT var finalhandler = require ( 'finalhandler' ) var http = require ( 'http' ) var morgan = require ( 'morgan' ) // create \"middleware\" var logger = morgan ( 'combined' ) http . createServer ( function ( req , res ) { var done = finalhandler ( req , res ) logger ( req , res , function ( err ) { if ( err ) return done ( err ) // respond to request res . setHeader ( 'content-type' , 'text/plain' ) res . end ( 'hello, world!' ) }) }) write logs to a file single file Simple app that will log all requests in the Apache combined format to the file access.log . var express = require ( 'express' ) var fs = require ( 'fs' ) var morgan = require ( 'morgan' ) var path = require ( 'path' ) var app = express () // create a write stream (in append mode) var accessLogStream = fs . createWriteStream ( path . join ( __dirname , 'access.log' ), { flags : 'a' }) // setup the logger app . use ( morgan ( 'combined' , { stream : accessLogStream })) app . get ( '/' , function ( req , res ) { res . send ( 'hello, world!' ) }) log file rotation Simple app that will log all requests in the Apache combined format to one log file per day in the log/ directory using the rotating-file-stream module . var express = require ( 'express' ) var morgan = require ( 'morgan' ) var path = require ( 'path' ) var rfs = require ( 'rotating-file-stream' ) // version 2.x var app = express () // create a rotating write stream var accessLogStream = rfs . createStream ( 'access.log' , { interval : '1d' , // rotate daily path : path . join ( __dirname , 'log' ) }) // setup the logger app . use ( morgan ( 'combined' , { stream : accessLogStream })) app . get ( '/' , function ( req , res ) { res . send ( 'hello, world!' ) }) split / dual logging The morgan middleware can be used as many times as needed, enabling combinations like: Log entry on request and one on response Log all requests to file, but errors to console ... and more! Sample app that will log all requests to a file using Apache format, but error responses are logged to the console: var express = require ( 'express' ) var fs = require ( 'fs' ) var morgan = require ( 'morgan' ) var path = require ( 'path' ) var app = express () // log only 4xx and 5xx responses to console app . use ( morgan ( 'dev' , { skip : function ( req , res ) { return res . statusCode < 400 } })) // log all requests to access.log app . use ( morgan ( 'common' , { stream : fs . createWriteStream ( path . join ( __dirname , 'access.log' ), { flags : 'a' }) })) app . get ( '/' , function ( req , res ) { res . send ( 'hello, world!' ) }) use custom token formats Sample app that will use custom token formats. This adds an ID to all requests and displays it using the :id token. var express = require ( 'express' ) var morgan = require ( 'morgan' ) var uuid = require ( 'node-uuid' ) morgan . token ( 'id' , function getId ( req ) { return req . id }) var app = express () app . use ( assignId ) app . use ( morgan ( ':id :method :url :response-time' )) app . get ( '/' , function ( req , res ) { res . send ( 'hello, world!' ) }) function assignId ( req , res , next ) { req . id = uuid . v4 () next () } License MIT","title":"morgan"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#morgan","text":"HTTP request logger middleware for node.js Named after Dexter , a show you should not watch until completion.","title":"morgan"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#api","text":"var morgan = require ( 'morgan' )","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#morganformat-options","text":"Create a new morgan logger middleware function using the given format and options . The format argument may be a string of a predefined name (see below for the names), a string of a format string, or a function that will produce a log entry. The format function will be called with three arguments tokens , req , and res , where tokens is an object with all defined tokens, req is the HTTP request and res is the HTTP response. The function is expected to return a string that will be the log line, or undefined / null to skip logging.","title":"morgan(format, options)"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#using-a-predefined-format-string","text":"morgan ( 'tiny' )","title":"Using a predefined format string"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#using-format-string-of-predefined-tokens","text":"morgan ( ':method :url :status :res[content-length] - :response-time ms' )","title":"Using format string of predefined tokens"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#using-a-custom-format-function","text":"morgan ( function ( tokens , req , res ) { return [ tokens . method ( req , res ), tokens . url ( req , res ), tokens . status ( req , res ), tokens . res ( req , res , 'content-length' ), '-' , tokens [ 'response-time' ]( req , res ), 'ms' ]. join ( ' ' ) })","title":"Using a custom format function"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#options","text":"Morgan accepts these properties in the options object.","title":"Options"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#immediate","text":"Write log line on request instead of response. This means that a requests will be logged even if the server crashes, but data from the response (like the response code, content length, etc.) cannot be logged .","title":"immediate"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#skip","text":"Function to determine if logging is skipped, defaults to false . This function will be called as skip(req, res) . // EXAMPLE: only log error responses morgan ( 'combined' , { skip : function ( req , res ) { return res . statusCode < 400 } })","title":"skip"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#stream","text":"Output stream for writing log lines, defaults to process.stdout .","title":"stream"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#predefined-formats","text":"There are various pre-defined formats provided:","title":"Predefined Formats"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#combined","text":"Standard Apache combined log output. :remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length] \":referrer\" \":user-agent\"","title":"combined"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#common","text":"Standard Apache common log output. :remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length]","title":"common"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#dev","text":"Concise output colored by response status for development use. The :status token will be colored green for success codes, red for server error codes, yellow for client error codes, cyan for redirection codes, and uncolored for information codes. :method :url :status :response-time ms - :res[content-length]","title":"dev"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#short","text":"Shorter than default, also including response time. :remote-addr :remote-user :method :url HTTP/:http-version :status :res[content-length] - :response-time ms","title":"short"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#tiny","text":"The minimal output. :method :url :status :res[content-length] - :response-time ms","title":"tiny"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#tokens","text":"","title":"Tokens"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#creating-new-tokens","text":"To define a token, simply invoke morgan.token() with the name and a callback function. This callback function is expected to return a string value. The value returned is then available as \":type\" in this case: morgan . token ( 'type' , function ( req , res ) { return req . headers [ 'content-type' ] }) Calling morgan.token() using the same name as an existing token will overwrite that token definition. The token function is expected to be called with the arguments req and res , representing the HTTP request and HTTP response. Additionally, the token can accept further arguments of it's choosing to customize behavior.","title":"Creating new tokens"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#dateformat","text":"The current date and time in UTC. The available formats are: clf for the common log format ( \"10/Oct/2000:13:55:36 +0000\" ) iso for the common ISO 8601 date time format ( 2000-10-10T13:55:36.000Z ) web for the common RFC 1123 date time format ( Tue, 10 Oct 2000 13:55:36 GMT ) If no format is given, then the default is web .","title":":date[format]"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#http-version","text":"The HTTP version of the request.","title":":http-version"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#method","text":"The HTTP method of the request.","title":":method"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#referrer","text":"The Referrer header of the request. This will use the standard mis-spelled Referer header if exists, otherwise Referrer.","title":":referrer"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#remote-addr","text":"The remote address of the request. This will use req.ip , otherwise the standard req.connection.remoteAddress value (socket address).","title":":remote-addr"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#remote-user","text":"The user authenticated as part of Basic auth for the request.","title":":remote-user"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#reqheader","text":"The given header of the request. If the header is not present, the value will be displayed as \"-\" in the log.","title":":req[header]"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#resheader","text":"The given header of the response. If the header is not present, the value will be displayed as \"-\" in the log.","title":":res[header]"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#response-timedigits","text":"The time between the request coming into morgan and when the response headers are written, in milliseconds. The digits argument is a number that specifies the number of digits to include on the number, defaulting to 3 , which provides microsecond precision.","title":":response-time[digits]"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#status","text":"The status code of the response. If the request/response cycle completes before a response was sent to the client (for example, the TCP socket closed prematurely by a client aborting the request), then the status will be empty (displayed as \"-\" in the log).","title":":status"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#total-timedigits","text":"The time between the request coming into morgan and when the response has finished being written out to the connection, in milliseconds. The digits argument is a number that specifies the number of digits to include on the number, defaulting to 3 , which provides microsecond precision.","title":":total-time[digits]"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#url","text":"The URL of the request. This will use req.originalUrl if exists, otherwise req.url .","title":":url"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#user-agent","text":"The contents of the User-Agent header of the request.","title":":user-agent"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#morgancompileformat","text":"Compile a format string into a format function for use by morgan . A format string is a string that represents a single log line and can utilize token syntax. Tokens are references by :token-name . If tokens accept arguments, they can be passed using [] , for example: :token-name[pretty] would pass the string 'pretty' as an argument to the token token-name . The function returned from morgan.compile takes three arguments tokens , req , and res , where tokens is object with all defined tokens, req is the HTTP request and res is the HTTP response. The function will return a string that will be the log line, or undefined / null to skip logging. Normally formats are defined using morgan.format(name, format) , but for certain advanced uses, this compile function is directly available.","title":"morgan.compile(format)"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#examples","text":"","title":"Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#expressconnect","text":"Simple app that will log all request in the Apache combined format to STDOUT var express = require ( 'express' ) var morgan = require ( 'morgan' ) var app = express () app . use ( morgan ( 'combined' )) app . get ( '/' , function ( req , res ) { res . send ( 'hello, world!' ) })","title":"express/connect"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#vanilla-http-server","text":"Simple app that will log all request in the Apache combined format to STDOUT var finalhandler = require ( 'finalhandler' ) var http = require ( 'http' ) var morgan = require ( 'morgan' ) // create \"middleware\" var logger = morgan ( 'combined' ) http . createServer ( function ( req , res ) { var done = finalhandler ( req , res ) logger ( req , res , function ( err ) { if ( err ) return done ( err ) // respond to request res . setHeader ( 'content-type' , 'text/plain' ) res . end ( 'hello, world!' ) }) })","title":"vanilla http server"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#write-logs-to-a-file","text":"","title":"write logs to a file"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#single-file","text":"Simple app that will log all requests in the Apache combined format to the file access.log . var express = require ( 'express' ) var fs = require ( 'fs' ) var morgan = require ( 'morgan' ) var path = require ( 'path' ) var app = express () // create a write stream (in append mode) var accessLogStream = fs . createWriteStream ( path . join ( __dirname , 'access.log' ), { flags : 'a' }) // setup the logger app . use ( morgan ( 'combined' , { stream : accessLogStream })) app . get ( '/' , function ( req , res ) { res . send ( 'hello, world!' ) })","title":"single file"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#log-file-rotation","text":"Simple app that will log all requests in the Apache combined format to one log file per day in the log/ directory using the rotating-file-stream module . var express = require ( 'express' ) var morgan = require ( 'morgan' ) var path = require ( 'path' ) var rfs = require ( 'rotating-file-stream' ) // version 2.x var app = express () // create a rotating write stream var accessLogStream = rfs . createStream ( 'access.log' , { interval : '1d' , // rotate daily path : path . join ( __dirname , 'log' ) }) // setup the logger app . use ( morgan ( 'combined' , { stream : accessLogStream })) app . get ( '/' , function ( req , res ) { res . send ( 'hello, world!' ) })","title":"log file rotation"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#split-dual-logging","text":"The morgan middleware can be used as many times as needed, enabling combinations like: Log entry on request and one on response Log all requests to file, but errors to console ... and more! Sample app that will log all requests to a file using Apache format, but error responses are logged to the console: var express = require ( 'express' ) var fs = require ( 'fs' ) var morgan = require ( 'morgan' ) var path = require ( 'path' ) var app = express () // log only 4xx and 5xx responses to console app . use ( morgan ( 'dev' , { skip : function ( req , res ) { return res . statusCode < 400 } })) // log all requests to access.log app . use ( morgan ( 'common' , { stream : fs . createWriteStream ( path . join ( __dirname , 'access.log' ), { flags : 'a' }) })) app . get ( '/' , function ( req , res ) { res . send ( 'hello, world!' ) })","title":"split / dual logging"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#use-custom-token-formats","text":"Sample app that will use custom token formats. This adds an ID to all requests and displays it using the :id token. var express = require ( 'express' ) var morgan = require ( 'morgan' ) var uuid = require ( 'node-uuid' ) morgan . token ( 'id' , function getId ( req ) { return req . id }) var app = express () app . use ( assignId ) app . use ( morgan ( ':id :method :url :response-time' )) app . get ( '/' , function ( req , res ) { res . send ( 'hello, world!' ) }) function assignId ( req , res , next ) { req . id = uuid . v4 () next () }","title":"use custom token formats"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/","text":"1.10.0 / 2020-03-20 Add :total-time token Fix trailing space in colored status code for dev format deps: basic-auth@~2.0.1 deps: safe-buffer@5.1.2 deps: depd@~2.0.0 Replace internal eval usage with Function constructor Use instance methods on process to check for listeners deps: on-headers@~1.0.2 Fix res.writeHead patch missing return value 1.9.1 / 2018-09-10 Fix using special characters in format deps: depd@~1.1.2 perf: remove argument reassignment 1.9.0 / 2017-09-26 Use res.headersSent when available deps: basic-auth@~2.0.0 Use safe-buffer for improved Buffer API deps: debug@2.6.9 deps: depd@~1.1.1 Remove unnecessary Buffer loading 1.8.2 / 2017-05-23 deps: debug@2.6.8 Fix DEBUG_MAX_ARRAY_LENGTH deps: ms@2.0.0 1.8.1 / 2017-02-04 deps: debug@2.6.1 Fix deprecation messages in WebStorm and other editors Undeprecate DEBUG_FD set to 1 or 2 1.8.0 / 2017-02-04 Fix sending unnecessary undefined argument to token functions deps: basic-auth@~1.1.0 deps: debug@2.6.0 Allow colors in workers Deprecated DEBUG_FD environment variable Fix error when running under React Native Use same color for same namespace deps: ms@0.7.2 perf: enable strict mode in compiled functions 1.7.0 / 2016-02-18 Add digits argument to response-time token deps: depd@~1.1.0 Enable strict mode in more places Support web browser loading deps: on-headers@~1.0.1 perf: enable strict mode 1.6.1 / 2015-07-03 deps: basic-auth@~1.0.3 1.6.0 / 2015-06-12 Add morgan.compile(format) export Do not color 1xx status codes in dev format Fix response-time token to not include response latency Fix status token incorrectly displaying before response in dev format Fix token return values to be undefined or a string Improve representation of multiple headers in req and res tokens Use res.getHeader in res token deps: basic-auth@~1.0.2 perf: enable strict mode perf: hoist regular expression perf: parse with regular expressions perf: remove argument reassignment deps: on-finished@~2.3.0 Add defined behavior for HTTP CONNECT requests Add defined behavior for HTTP Upgrade requests deps: ee-first@1.1.1 pref: enable strict mode pref: reduce function closure scopes pref: remove dynamic compile on every request for dev format pref: remove an argument reassignment pref: skip function call without skip option 1.5.3 / 2015-05-10 deps: basic-auth@~1.0.1 deps: debug@~2.2.0 deps: ms@0.7.1 deps: depd@~1.0.1 deps: on-finished@~2.2.1 Fix isFinished(req) when data buffered 1.5.2 / 2015-03-15 deps: debug@~2.1.3 Fix high intensity foreground color for bold deps: ms@0.7.0 1.5.1 / 2014-12-31 deps: debug@~2.1.1 deps: on-finished@~2.2.0 1.5.0 / 2014-11-06 Add multiple date formats clf for the common log format iso for the common ISO 8601 date time format web for the common RFC 1123 date time format Deprecate buffer option Fix date format in common and combined formats Fix token arguments to accept values with \" 1.4.1 / 2014-10-22 deps: on-finished@~2.1.1 Fix handling of pipelined requests 1.4.0 / 2014-10-16 Add debug messages deps: depd@~1.0.0 1.3.2 / 2014-09-27 Fix req.ip integration when immediate: false 1.3.1 / 2014-09-14 Remove un-used bytes dependency deps: depd@0.4.5 1.3.0 / 2014-09-01 Assert if format is not a function or string 1.2.3 / 2014-08-16 deps: on-finished@2.1.0 1.2.2 / 2014-07-27 deps: depd@0.4.4 Work-around v8 generating empty stack traces 1.2.1 / 2014-07-26 deps: depd@0.4.3 Fix exception when global Error.stackTraceLimit is too low 1.2.0 / 2014-07-19 Add :remote-user token Add combined log format Add common log format Add morgan(format, options) function signature Deprecate default format -- use combined format instead Deprecate not providing a format Remove non-standard grey color from dev format 1.1.1 / 2014-05-20 simplify method to get remote address 1.1.0 / 2014-05-18 \"dev\" format will use same tokens as other formats :response-time token is now empty when immediate used :response-time token is now monotonic :response-time token has precision to 1 \u03bcs fix :status + immediate output in node.js 0.8 improve buffer option to prevent indefinite event loop holding deps: bytes@1.0.0 add negative support 1.0.1 / 2014-05-04 Make buffer unique per morgan instance deps: bytes@0.3.0 added terabyte support 1.0.0 / 2014-02-08 Initial release","title":"1.10.0 / 2020-03-20"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#1100-2020-03-20","text":"Add :total-time token Fix trailing space in colored status code for dev format deps: basic-auth@~2.0.1 deps: safe-buffer@5.1.2 deps: depd@~2.0.0 Replace internal eval usage with Function constructor Use instance methods on process to check for listeners deps: on-headers@~1.0.2 Fix res.writeHead patch missing return value","title":"1.10.0 / 2020-03-20"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#191-2018-09-10","text":"Fix using special characters in format deps: depd@~1.1.2 perf: remove argument reassignment","title":"1.9.1 / 2018-09-10"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#190-2017-09-26","text":"Use res.headersSent when available deps: basic-auth@~2.0.0 Use safe-buffer for improved Buffer API deps: debug@2.6.9 deps: depd@~1.1.1 Remove unnecessary Buffer loading","title":"1.9.0 / 2017-09-26"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#182-2017-05-23","text":"deps: debug@2.6.8 Fix DEBUG_MAX_ARRAY_LENGTH deps: ms@2.0.0","title":"1.8.2 / 2017-05-23"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#181-2017-02-04","text":"deps: debug@2.6.1 Fix deprecation messages in WebStorm and other editors Undeprecate DEBUG_FD set to 1 or 2","title":"1.8.1 / 2017-02-04"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#180-2017-02-04","text":"Fix sending unnecessary undefined argument to token functions deps: basic-auth@~1.1.0 deps: debug@2.6.0 Allow colors in workers Deprecated DEBUG_FD environment variable Fix error when running under React Native Use same color for same namespace deps: ms@0.7.2 perf: enable strict mode in compiled functions","title":"1.8.0 / 2017-02-04"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#170-2016-02-18","text":"Add digits argument to response-time token deps: depd@~1.1.0 Enable strict mode in more places Support web browser loading deps: on-headers@~1.0.1 perf: enable strict mode","title":"1.7.0 / 2016-02-18"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#161-2015-07-03","text":"deps: basic-auth@~1.0.3","title":"1.6.1 / 2015-07-03"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#160-2015-06-12","text":"Add morgan.compile(format) export Do not color 1xx status codes in dev format Fix response-time token to not include response latency Fix status token incorrectly displaying before response in dev format Fix token return values to be undefined or a string Improve representation of multiple headers in req and res tokens Use res.getHeader in res token deps: basic-auth@~1.0.2 perf: enable strict mode perf: hoist regular expression perf: parse with regular expressions perf: remove argument reassignment deps: on-finished@~2.3.0 Add defined behavior for HTTP CONNECT requests Add defined behavior for HTTP Upgrade requests deps: ee-first@1.1.1 pref: enable strict mode pref: reduce function closure scopes pref: remove dynamic compile on every request for dev format pref: remove an argument reassignment pref: skip function call without skip option","title":"1.6.0 / 2015-06-12"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#153-2015-05-10","text":"deps: basic-auth@~1.0.1 deps: debug@~2.2.0 deps: ms@0.7.1 deps: depd@~1.0.1 deps: on-finished@~2.2.1 Fix isFinished(req) when data buffered","title":"1.5.3 / 2015-05-10"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#152-2015-03-15","text":"deps: debug@~2.1.3 Fix high intensity foreground color for bold deps: ms@0.7.0","title":"1.5.2 / 2015-03-15"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#151-2014-12-31","text":"deps: debug@~2.1.1 deps: on-finished@~2.2.0","title":"1.5.1 / 2014-12-31"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#150-2014-11-06","text":"Add multiple date formats clf for the common log format iso for the common ISO 8601 date time format web for the common RFC 1123 date time format Deprecate buffer option Fix date format in common and combined formats Fix token arguments to accept values with \"","title":"1.5.0 / 2014-11-06"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#141-2014-10-22","text":"deps: on-finished@~2.1.1 Fix handling of pipelined requests","title":"1.4.1 / 2014-10-22"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#140-2014-10-16","text":"Add debug messages deps: depd@~1.0.0","title":"1.4.0 / 2014-10-16"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#132-2014-09-27","text":"Fix req.ip integration when immediate: false","title":"1.3.2 / 2014-09-27"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#131-2014-09-14","text":"Remove un-used bytes dependency deps: depd@0.4.5","title":"1.3.1 / 2014-09-14"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#130-2014-09-01","text":"Assert if format is not a function or string","title":"1.3.0 / 2014-09-01"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#123-2014-08-16","text":"deps: on-finished@2.1.0","title":"1.2.3 / 2014-08-16"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#122-2014-07-27","text":"deps: depd@0.4.4 Work-around v8 generating empty stack traces","title":"1.2.2 / 2014-07-27"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#121-2014-07-26","text":"deps: depd@0.4.3 Fix exception when global Error.stackTraceLimit is too low","title":"1.2.1 / 2014-07-26"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#120-2014-07-19","text":"Add :remote-user token Add combined log format Add common log format Add morgan(format, options) function signature Deprecate default format -- use combined format instead Deprecate not providing a format Remove non-standard grey color from dev format","title":"1.2.0 / 2014-07-19"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#111-2014-05-20","text":"simplify method to get remote address","title":"1.1.1 / 2014-05-20"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#110-2014-05-18","text":"\"dev\" format will use same tokens as other formats :response-time token is now empty when immediate used :response-time token is now monotonic :response-time token has precision to 1 \u03bcs fix :status + immediate output in node.js 0.8 improve buffer option to prevent indefinite event loop holding deps: bytes@1.0.0 add negative support","title":"1.1.0 / 2014-05-18"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#101-2014-05-04","text":"Make buffer unique per morgan instance deps: bytes@0.3.0 added terabyte support","title":"1.0.1 / 2014-05-04"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#100-2014-02-08","text":"Initial release","title":"1.0.0 / 2014-02-08"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/","text":"debug A tiny node.js debugging utility modelled after node core's debugging technique. Discussion around the V3 API is under way here Installation $ npm install debug Usage debug exposes a function; simply pass this function the name of your module, and it will return a decorated version of console.error for you to pass debug statements to. This will allow you to toggle the debug output for different parts of your module as well as the module as a whole. Example app.js : var debug = require ( 'debug' )( 'http' ) , http = require ( 'http' ) , name = 'My App' ; // fake app debug ( 'booting %s' , name ); http . createServer ( function ( req , res ){ debug ( req . method + ' ' + req . url ); res . end ( 'hello\\n' ); }). listen ( 3000 , function (){ debug ( 'listening' ); }); // fake worker of some kind require ( './worker' ); Example worker.js : var debug = require ( 'debug' )( 'worker' ); setInterval ( function (){ debug ( 'doing some work' ); }, 1000 ); The DEBUG environment variable is then used to enable these based on space or comma-delimited names. Here are some examples: Windows note On Windows the environment variable is set using the set command. set DEBUG=*,-not_this Note that PowerShell uses different syntax to set environment variables. cmd $env:DEBUG = \"*,-not_this\" Then, run the program to be debugged as usual. Millisecond diff When actively developing an application it can be useful to see when the time spent between one debug() call and the next. Suppose for example you invoke debug() before requesting a resource, and after as well, the \"+NNNms\" will show you how much time was spent between calls. When stdout is not a TTY, Date#toUTCString() is used, making it more useful for logging the debug information as shown below: Conventions If you're using this in one or more of your libraries, you should use the name of your library so that developers may toggle debugging as desired without guessing names. If you have more than one debuggers you should prefix them with your library name and use \":\" to separate features. For example \"bodyParser\" from Connect would then be \"connect:bodyParser\". Wildcards The * character may be used as a wildcard. Suppose for example your library has debuggers named \"connect:bodyParser\", \"connect:compress\", \"connect:session\", instead of listing all three with DEBUG=connect:bodyParser,connect:compress,connect:session , you may simply do DEBUG=connect:* , or to run everything using this module simply use DEBUG=* . You can also exclude specific debuggers by prefixing them with a \"-\" character. For example, DEBUG=*,-connect:* would include all debuggers except those starting with \"connect:\". Environment Variables When running through Node.js, you can set a few environment variables that will change the behavior of the debug logging: Name Purpose DEBUG Enables/disables specific debugging namespaces. DEBUG_COLORS Whether or not to use colors in the debug output. DEBUG_DEPTH Object inspection depth. DEBUG_SHOW_HIDDEN Shows hidden properties on inspected objects. Note: The environment variables beginning with DEBUG_ end up being converted into an Options object that gets used with %o / %O formatters. See the Node.js documentation for util.inspect() for the complete list. Formatters Debug uses printf-style formatting. Below are the officially supported formatters: Formatter Representation %O Pretty-print an Object on multiple lines. %o Pretty-print an Object all on a single line. %s String. %d Number (both integer and float). %j JSON. Replaced with the string '[Circular]' if the argument contains circular references. %% Single percent sign ('%'). This does not consume an argument. Custom formatters You can add custom formatters by extending the debug.formatters object. For example, if you wanted to add support for rendering a Buffer as hex with %h , you could do something like: const createDebug = require ( 'debug' ) createDebug . formatters . h = ( v ) => { return v . toString ( 'hex' ) } // \u2026elsewhere const debug = createDebug ( 'foo' ) debug ( 'this is hex: %h' , new Buffer ( 'hello world' )) // foo this is hex: 68656c6c6f20776f726c6421 +0ms Browser support You can build a browser-ready script using browserify , or just use the browserify-as-a-service build , if you don't want to build it yourself. Debug's enable state is currently persisted by localStorage . Consider the situation shown below where you have worker:a and worker:b , and wish to debug both. You can enable this using localStorage.debug : localStorage . debug = 'worker:*' And then refresh the page. a = debug ( 'worker:a' ); b = debug ( 'worker:b' ); setInterval ( function (){ a ( 'doing some work' ); }, 1000 ); setInterval ( function (){ b ( 'doing some work' ); }, 1200 ); Web Inspector Colors Colors are also enabled on \"Web Inspectors\" that understand the %c formatting option. These are WebKit web inspectors, Firefox ( since version 31 ) and the Firebug plugin for Firefox (any version). Colored output looks something like: Output streams By default debug will log to stderr, however this can be configured per-namespace by overriding the log method: Example stdout.js : var debug = require ( 'debug' ); var error = debug ( 'app:error' ); // by default stderr is used error ( 'goes to stderr!' ); var log = debug ( 'app:log' ); // set this namespace to log via console.log log . log = console . log . bind ( console ); // don't forget to bind to console! log ( 'goes to stdout' ); error ( 'still goes to stderr!' ); // set all output to go via console.info // overrides all per-namespace log settings debug . log = console . info . bind ( console ); error ( 'now goes to stdout via console.info' ); log ( 'still goes to stdout, but via console.info now' ); Authors TJ Holowaychuk Nathan Rajlich Andrew Rhyne Backers Support us with a monthly donation and help us continue our activities. [ Become a backer ] Sponsors Become a sponsor and get your logo on our README on Github with a link to your site. [ Become a sponsor ] License (The MIT License) Copyright (c) 2014-2016 TJ Holowaychuk <tj@vision-media.ca> Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"debug"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#debug","text":"A tiny node.js debugging utility modelled after node core's debugging technique. Discussion around the V3 API is under way here","title":"debug"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#installation","text":"$ npm install debug","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#usage","text":"debug exposes a function; simply pass this function the name of your module, and it will return a decorated version of console.error for you to pass debug statements to. This will allow you to toggle the debug output for different parts of your module as well as the module as a whole. Example app.js : var debug = require ( 'debug' )( 'http' ) , http = require ( 'http' ) , name = 'My App' ; // fake app debug ( 'booting %s' , name ); http . createServer ( function ( req , res ){ debug ( req . method + ' ' + req . url ); res . end ( 'hello\\n' ); }). listen ( 3000 , function (){ debug ( 'listening' ); }); // fake worker of some kind require ( './worker' ); Example worker.js : var debug = require ( 'debug' )( 'worker' ); setInterval ( function (){ debug ( 'doing some work' ); }, 1000 ); The DEBUG environment variable is then used to enable these based on space or comma-delimited names. Here are some examples:","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#windows-note","text":"On Windows the environment variable is set using the set command. set DEBUG=*,-not_this Note that PowerShell uses different syntax to set environment variables. cmd $env:DEBUG = \"*,-not_this\" Then, run the program to be debugged as usual.","title":"Windows note"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#millisecond-diff","text":"When actively developing an application it can be useful to see when the time spent between one debug() call and the next. Suppose for example you invoke debug() before requesting a resource, and after as well, the \"+NNNms\" will show you how much time was spent between calls. When stdout is not a TTY, Date#toUTCString() is used, making it more useful for logging the debug information as shown below:","title":"Millisecond diff"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#conventions","text":"If you're using this in one or more of your libraries, you should use the name of your library so that developers may toggle debugging as desired without guessing names. If you have more than one debuggers you should prefix them with your library name and use \":\" to separate features. For example \"bodyParser\" from Connect would then be \"connect:bodyParser\".","title":"Conventions"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#wildcards","text":"The * character may be used as a wildcard. Suppose for example your library has debuggers named \"connect:bodyParser\", \"connect:compress\", \"connect:session\", instead of listing all three with DEBUG=connect:bodyParser,connect:compress,connect:session , you may simply do DEBUG=connect:* , or to run everything using this module simply use DEBUG=* . You can also exclude specific debuggers by prefixing them with a \"-\" character. For example, DEBUG=*,-connect:* would include all debuggers except those starting with \"connect:\".","title":"Wildcards"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#environment-variables","text":"When running through Node.js, you can set a few environment variables that will change the behavior of the debug logging: Name Purpose DEBUG Enables/disables specific debugging namespaces. DEBUG_COLORS Whether or not to use colors in the debug output. DEBUG_DEPTH Object inspection depth. DEBUG_SHOW_HIDDEN Shows hidden properties on inspected objects. Note: The environment variables beginning with DEBUG_ end up being converted into an Options object that gets used with %o / %O formatters. See the Node.js documentation for util.inspect() for the complete list.","title":"Environment Variables"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#formatters","text":"Debug uses printf-style formatting. Below are the officially supported formatters: Formatter Representation %O Pretty-print an Object on multiple lines. %o Pretty-print an Object all on a single line. %s String. %d Number (both integer and float). %j JSON. Replaced with the string '[Circular]' if the argument contains circular references. %% Single percent sign ('%'). This does not consume an argument.","title":"Formatters"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#custom-formatters","text":"You can add custom formatters by extending the debug.formatters object. For example, if you wanted to add support for rendering a Buffer as hex with %h , you could do something like: const createDebug = require ( 'debug' ) createDebug . formatters . h = ( v ) => { return v . toString ( 'hex' ) } // \u2026elsewhere const debug = createDebug ( 'foo' ) debug ( 'this is hex: %h' , new Buffer ( 'hello world' )) // foo this is hex: 68656c6c6f20776f726c6421 +0ms","title":"Custom formatters"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#browser-support","text":"You can build a browser-ready script using browserify , or just use the browserify-as-a-service build , if you don't want to build it yourself. Debug's enable state is currently persisted by localStorage . Consider the situation shown below where you have worker:a and worker:b , and wish to debug both. You can enable this using localStorage.debug : localStorage . debug = 'worker:*' And then refresh the page. a = debug ( 'worker:a' ); b = debug ( 'worker:b' ); setInterval ( function (){ a ( 'doing some work' ); }, 1000 ); setInterval ( function (){ b ( 'doing some work' ); }, 1200 );","title":"Browser support"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#web-inspector-colors","text":"Colors are also enabled on \"Web Inspectors\" that understand the %c formatting option. These are WebKit web inspectors, Firefox ( since version 31 ) and the Firebug plugin for Firefox (any version). Colored output looks something like:","title":"Web Inspector Colors"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#output-streams","text":"By default debug will log to stderr, however this can be configured per-namespace by overriding the log method: Example stdout.js : var debug = require ( 'debug' ); var error = debug ( 'app:error' ); // by default stderr is used error ( 'goes to stderr!' ); var log = debug ( 'app:log' ); // set this namespace to log via console.log log . log = console . log . bind ( console ); // don't forget to bind to console! log ( 'goes to stdout' ); error ( 'still goes to stderr!' ); // set all output to go via console.info // overrides all per-namespace log settings debug . log = console . info . bind ( console ); error ( 'now goes to stdout via console.info' ); log ( 'still goes to stdout, but via console.info now' );","title":"Output streams"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#authors","text":"TJ Holowaychuk Nathan Rajlich Andrew Rhyne","title":"Authors"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#backers","text":"Support us with a monthly donation and help us continue our activities. [ Become a backer ]","title":"Backers"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#sponsors","text":"Become a sponsor and get your logo on our README on Github with a link to your site. [ Become a sponsor ]","title":"Sponsors"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#license","text":"(The MIT License) Copyright (c) 2014-2016 TJ Holowaychuk <tj@vision-media.ca> Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/","text":"2.6.9 / 2017-09-22 remove ReDoS regexp in %o formatter (#504) 2.6.8 / 2017-05-18 Fix: Check for undefined on browser globals (#462, @marbemac) 2.6.7 / 2017-05-16 Fix: Update ms to 2.0.0 to fix regular expression denial of service vulnerability (#458, @hubdotcom) Fix: Inline extend function in node implementation (#452, @dougwilson) Docs: Fix typo (#455, @msasad) 2.6.5 / 2017-04-27 Fix: null reference check on window.documentElement.style.WebkitAppearance (#447, @thebigredgeek) Misc: clean up browser reference checks (#447, @thebigredgeek) Misc: add npm-debug.log to .gitignore (@thebigredgeek) 2.6.4 / 2017-04-20 Fix: bug that would occure if process.env.DEBUG is a non-string value. (#444, @LucianBuzzo) Chore: ignore bower.json in npm installations. (#437, @joaovieira) Misc: update \"ms\" to v0.7.3 (@tootallnate) 2.6.3 / 2017-03-13 Fix: Electron reference to process.env.DEBUG (#431, @paulcbetts) Docs: Changelog fix (@thebigredgeek) 2.6.2 / 2017-03-10 Fix: DEBUG_MAX_ARRAY_LENGTH (#420, @slavaGanzin) Docs: Add backers and sponsors from Open Collective (#422, @piamancini) Docs: Add Slackin invite badge (@tootallnate) 2.6.1 / 2017-02-10 Fix: Module's export default syntax fix for IE8 Expected identifier error Fix: Whitelist DEBUG_FD for values 1 and 2 only (#415, @pi0) Fix: IE8 \"Expected identifier\" error (#414, @vgoma) Fix: Namespaces would not disable once enabled (#409, @musikov) 2.6.0 / 2016-12-28 Fix: added better null pointer checks for browser useColors (@thebigredgeek) Improvement: removed explicit window.debug export (#404, @tootallnate) Improvement: deprecated DEBUG_FD environment variable (#405, @tootallnate) 2.5.2 / 2016-12-25 Fix: reference error on window within webworkers (#393, @KlausTrainer) Docs: fixed README typo (#391, @lurch) Docs: added notice about v3 api discussion (@thebigredgeek) 2.5.1 / 2016-12-20 Fix: babel-core compatibility 2.5.0 / 2016-12-20 Fix: wrong reference in bower file (@thebigredgeek) Fix: webworker compatibility (@thebigredgeek) Fix: output formatting issue (#388, @kribblo) Fix: babel-loader compatibility (#383, @escwald) Misc: removed built asset from repo and publications (@thebigredgeek) Misc: moved source files to /src (#378, @yamikuronue) Test: added karma integration and replaced babel with browserify for browser tests (#378, @yamikuronue) Test: coveralls integration (#378, @yamikuronue) Docs: simplified language in the opening paragraph (#373, @yamikuronue) 2.4.5 / 2016-12-17 Fix: navigator undefined in Rhino (#376, @jochenberger) Fix: custom log function (#379, @hsiliev) Improvement: bit of cleanup + linting fixes (@thebigredgeek) Improvement: rm non-maintainted dist/ dir (#375, @freewil) Docs: simplified language in the opening paragraph. (#373, @yamikuronue) 2.4.4 / 2016-12-14 Fix: work around debug being loaded in preload scripts for electron (#368, @paulcbetts) 2.4.3 / 2016-12-14 Fix: navigation.userAgent error for react native (#364, @escwald) 2.4.2 / 2016-12-14 Fix: browser colors (#367, @tootallnate) Misc: travis ci integration (@thebigredgeek) Misc: added linting and testing boilerplate with sanity check (@thebigredgeek) 2.4.1 / 2016-12-13 Fix: typo that broke the package (#356) 2.4.0 / 2016-12-13 Fix: bower.json references unbuilt src entry point (#342, @justmatt) Fix: revert \"handle regex special characters\" (@tootallnate) Feature: configurable util.inspect()`options for NodeJS (#327, @tootallnate) Feature: %O`(big O) pretty-prints objects (#322, @tootallnate) Improvement: allow colors in workers (#335, @botverse) Improvement: use same color for same namespace. (#338, @lchenay) 2.3.3 / 2016-11-09 Fix: Catch JSON.stringify() errors (#195, Jovan Alleyne) Fix: Returning localStorage saved values (#331, Levi Thomason) Improvement: Don't create an empty object when no process (Nathan Rajlich) 2.3.2 / 2016-11-09 Fix: be super-safe in index.js as well (@TooTallNate) Fix: should check whether process exists (Tom Newby) 2.3.1 / 2016-11-09 Fix: Added electron compatibility (#324, @paulcbetts) Improvement: Added performance optimizations (@tootallnate) Readme: Corrected PowerShell environment variable example (#252, @gimre) Misc: Removed yarn lock file from source control (#321, @fengmk2) 2.3.0 / 2016-11-07 Fix: Consistent placement of ms diff at end of output (#215, @gorangajic) Fix: Escaping of regex special characters in namespace strings (#250, @zacronos) Fix: Fixed bug causing crash on react-native (#282, @vkarpov15) Feature: Enabled ES6+ compatible import via default export (#212 @bucaran) Feature: Added %O formatter to reflect Chrome's console.log capability (#279, @oncletom) Package: Update \"ms\" to 0.7.2 (#315, @DevSide) Package: removed superfluous version property from bower.json (#207 @kkirsche) Readme: fix USE_COLORS to DEBUG_COLORS Readme: Doc fixes for format string sugar (#269, @mlucool) Readme: Updated docs for DEBUG_FD and DEBUG_COLORS environment variables (#232, @mattlyons0) Readme: doc fixes for PowerShell (#271 #243, @exoticknight @unreadable) Readme: better docs for browser support (#224, @matthewmueller) Tooling: Added yarn integration for development (#317, @thebigredgeek) Misc: Renamed History.md to CHANGELOG.md (@thebigredgeek) Misc: Added license file (#226 #274, @CantemoInternal @sdaitzman) Misc: Updated contributors (@thebigredgeek) 2.2.0 / 2015-05-09 package: update \"ms\" to v0.7.1 (#202, @dougwilson) README: add logging to file example (#193, @DanielOchoa) README: fixed a typo (#191, @amir-s) browser: expose storage (#190, @stephenmathieson) Makefile: add a distclean target (#189, @stephenmathieson) 2.1.3 / 2015-03-13 Updated stdout/stderr example (#186) Updated example/stdout.js to match debug current behaviour Renamed example/stderr.js to stdout.js Update Readme.md (#184) replace high intensity foreground color for bold (#182, #183) 2.1.2 / 2015-03-01 dist: recompile update \"ms\" to v0.7.0 package: update \"browserify\" to v9.0.3 component: fix \"ms.js\" repo location changed bower package name updated documentation about using debug in a browser fix: security error on safari (#167, #168, @yields) 2.1.1 / 2014-12-29 browser: use typeof to check for console existence browser: check for console.log truthiness (fix IE 8/9) browser: add support for Chrome apps Readme: added Windows usage remarks Add bower.json to properly support bower install 2.1.0 / 2014-10-15 node: implement DEBUG_FD env variable support package: update \"browserify\" to v6.1.0 package: add \"license\" field to package.json (#135, @panuhorsmalahti) 2.0.0 / 2014-09-01 package: update \"browserify\" to v5.11.0 node: use stderr rather than stdout for logging (#29, @stephenmathieson) 1.0.4 / 2014-07-15 dist: recompile example: remove console.info() log usage example: add \"Content-Type\" UTF-8 header to browser example browser: place %c marker after the space character browser: reset the \"content\" color via color: inherit browser: add colors support for Firefox >= v31 debug: prefer an instance log() function over the global one (#119) Readme: update documentation about styled console logs for FF v31 (#116, @wryk) 1.0.3 / 2014-07-09 Add support for multiple wildcards in namespaces (#122, @seegno) browser: fix lint 1.0.2 / 2014-06-10 browser: update color palette (#113, @gscottolson) common: make console logging function configurable (#108, @timoxley) node: fix %o colors on old node <= 0.8.x Makefile: find node path using shell/which (#109, @timoxley) 1.0.1 / 2014-06-06 browser: use removeItem() to clear localStorage browser, node: don't set DEBUG if namespaces is undefined (#107, @leedm777) package: add \"contributors\" section node: fix comment typo README: list authors 1.0.0 / 2014-06-04 make ms diff be global, not be scope debug: ignore empty strings in enable() node: make DEBUG_COLORS able to disable coloring *: export the colors array npmignore: don't publish the dist dir Makefile: refactor to use browserify package: add \"browserify\" as a dev dependency Readme: add Web Inspector Colors section node: reset terminal color for the debug content node: map \"%o\" to util.inspect() browser: map \"%j\" to JSON.stringify() debug: add custom \"formatters\" debug: use \"ms\" module for humanizing the diff Readme: add \"bash\" syntax highlighting browser: add Firebug color support browser: add colors for WebKit browsers node: apply log to console rewrite: abstract common logic for Node & browsers add .jshintrc file 0.8.1 / 2014-04-14 package: re-add the \"component\" section 0.8.0 / 2014-03-30 add enable() method for nodejs. Closes #27 change from stderr to stdout remove unnecessary index.js file 0.7.4 / 2013-11-13 remove \"browserify\" key from package.json (fixes something in browserify) 0.7.3 / 2013-10-30 fix: catch localStorage security error when cookies are blocked (Chrome) add debug(err) support. Closes #46 add .browser prop to package.json. Closes #42 0.7.2 / 2013-02-06 fix package.json fix: Mobile Safari (private mode) is broken with debug fix: Use unicode to send escape character to shell instead of octal to work with strict mode javascript 0.7.1 / 2013-02-05 add repository URL to package.json add DEBUG_COLORED to force colored output add browserify support fix component. Closes #24 0.7.0 / 2012-05-04 Added .component to package.json Added debug.component.js build 0.6.0 / 2012-03-16 Added support for \"-\" prefix in DEBUG [Vinay Pulim] Added .enabled flag to the node version [TooTallNate] 0.5.0 / 2012-02-02 Added: humanize diffs. Closes #8 Added debug.disable() to the CS variant Removed padding. Closes #10 Fixed: persist client-side variant again. Closes #9 0.4.0 / 2012-02-01 Added browser variant support for older browsers [TooTallNate] Added debug.enable('project:*') to browser variant [TooTallNate] Added padding to diff (moved it to the right) 0.3.0 / 2012-01-26 Added millisecond diff when isatty, otherwise UTC string 0.2.0 / 2012-01-22 Added wildcard support 0.1.0 / 2011-12-02 Added: remove colors unless stderr isatty [TooTallNate] 0.0.1 / 2010-01-03 Initial release","title":"2.6.9 / 2017-09-22"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#269-2017-09-22","text":"remove ReDoS regexp in %o formatter (#504)","title":"2.6.9 / 2017-09-22"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#268-2017-05-18","text":"Fix: Check for undefined on browser globals (#462, @marbemac)","title":"2.6.8 / 2017-05-18"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#267-2017-05-16","text":"Fix: Update ms to 2.0.0 to fix regular expression denial of service vulnerability (#458, @hubdotcom) Fix: Inline extend function in node implementation (#452, @dougwilson) Docs: Fix typo (#455, @msasad)","title":"2.6.7 / 2017-05-16"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#265-2017-04-27","text":"Fix: null reference check on window.documentElement.style.WebkitAppearance (#447, @thebigredgeek) Misc: clean up browser reference checks (#447, @thebigredgeek) Misc: add npm-debug.log to .gitignore (@thebigredgeek)","title":"2.6.5 / 2017-04-27"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#264-2017-04-20","text":"Fix: bug that would occure if process.env.DEBUG is a non-string value. (#444, @LucianBuzzo) Chore: ignore bower.json in npm installations. (#437, @joaovieira) Misc: update \"ms\" to v0.7.3 (@tootallnate)","title":"2.6.4 / 2017-04-20"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#263-2017-03-13","text":"Fix: Electron reference to process.env.DEBUG (#431, @paulcbetts) Docs: Changelog fix (@thebigredgeek)","title":"2.6.3 / 2017-03-13"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#262-2017-03-10","text":"Fix: DEBUG_MAX_ARRAY_LENGTH (#420, @slavaGanzin) Docs: Add backers and sponsors from Open Collective (#422, @piamancini) Docs: Add Slackin invite badge (@tootallnate)","title":"2.6.2 / 2017-03-10"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#261-2017-02-10","text":"Fix: Module's export default syntax fix for IE8 Expected identifier error Fix: Whitelist DEBUG_FD for values 1 and 2 only (#415, @pi0) Fix: IE8 \"Expected identifier\" error (#414, @vgoma) Fix: Namespaces would not disable once enabled (#409, @musikov)","title":"2.6.1 / 2017-02-10"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#260-2016-12-28","text":"Fix: added better null pointer checks for browser useColors (@thebigredgeek) Improvement: removed explicit window.debug export (#404, @tootallnate) Improvement: deprecated DEBUG_FD environment variable (#405, @tootallnate)","title":"2.6.0 / 2016-12-28"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#252-2016-12-25","text":"Fix: reference error on window within webworkers (#393, @KlausTrainer) Docs: fixed README typo (#391, @lurch) Docs: added notice about v3 api discussion (@thebigredgeek)","title":"2.5.2 / 2016-12-25"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#251-2016-12-20","text":"Fix: babel-core compatibility","title":"2.5.1 / 2016-12-20"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#250-2016-12-20","text":"Fix: wrong reference in bower file (@thebigredgeek) Fix: webworker compatibility (@thebigredgeek) Fix: output formatting issue (#388, @kribblo) Fix: babel-loader compatibility (#383, @escwald) Misc: removed built asset from repo and publications (@thebigredgeek) Misc: moved source files to /src (#378, @yamikuronue) Test: added karma integration and replaced babel with browserify for browser tests (#378, @yamikuronue) Test: coveralls integration (#378, @yamikuronue) Docs: simplified language in the opening paragraph (#373, @yamikuronue)","title":"2.5.0 / 2016-12-20"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#245-2016-12-17","text":"Fix: navigator undefined in Rhino (#376, @jochenberger) Fix: custom log function (#379, @hsiliev) Improvement: bit of cleanup + linting fixes (@thebigredgeek) Improvement: rm non-maintainted dist/ dir (#375, @freewil) Docs: simplified language in the opening paragraph. (#373, @yamikuronue)","title":"2.4.5 / 2016-12-17"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#244-2016-12-14","text":"Fix: work around debug being loaded in preload scripts for electron (#368, @paulcbetts)","title":"2.4.4 / 2016-12-14"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#243-2016-12-14","text":"Fix: navigation.userAgent error for react native (#364, @escwald)","title":"2.4.3 / 2016-12-14"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#242-2016-12-14","text":"Fix: browser colors (#367, @tootallnate) Misc: travis ci integration (@thebigredgeek) Misc: added linting and testing boilerplate with sanity check (@thebigredgeek)","title":"2.4.2 / 2016-12-14"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#241-2016-12-13","text":"Fix: typo that broke the package (#356)","title":"2.4.1 / 2016-12-13"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#240-2016-12-13","text":"Fix: bower.json references unbuilt src entry point (#342, @justmatt) Fix: revert \"handle regex special characters\" (@tootallnate) Feature: configurable util.inspect()`options for NodeJS (#327, @tootallnate) Feature: %O`(big O) pretty-prints objects (#322, @tootallnate) Improvement: allow colors in workers (#335, @botverse) Improvement: use same color for same namespace. (#338, @lchenay)","title":"2.4.0 / 2016-12-13"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#233-2016-11-09","text":"Fix: Catch JSON.stringify() errors (#195, Jovan Alleyne) Fix: Returning localStorage saved values (#331, Levi Thomason) Improvement: Don't create an empty object when no process (Nathan Rajlich)","title":"2.3.3 / 2016-11-09"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#232-2016-11-09","text":"Fix: be super-safe in index.js as well (@TooTallNate) Fix: should check whether process exists (Tom Newby)","title":"2.3.2 / 2016-11-09"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#231-2016-11-09","text":"Fix: Added electron compatibility (#324, @paulcbetts) Improvement: Added performance optimizations (@tootallnate) Readme: Corrected PowerShell environment variable example (#252, @gimre) Misc: Removed yarn lock file from source control (#321, @fengmk2)","title":"2.3.1 / 2016-11-09"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#230-2016-11-07","text":"Fix: Consistent placement of ms diff at end of output (#215, @gorangajic) Fix: Escaping of regex special characters in namespace strings (#250, @zacronos) Fix: Fixed bug causing crash on react-native (#282, @vkarpov15) Feature: Enabled ES6+ compatible import via default export (#212 @bucaran) Feature: Added %O formatter to reflect Chrome's console.log capability (#279, @oncletom) Package: Update \"ms\" to 0.7.2 (#315, @DevSide) Package: removed superfluous version property from bower.json (#207 @kkirsche) Readme: fix USE_COLORS to DEBUG_COLORS Readme: Doc fixes for format string sugar (#269, @mlucool) Readme: Updated docs for DEBUG_FD and DEBUG_COLORS environment variables (#232, @mattlyons0) Readme: doc fixes for PowerShell (#271 #243, @exoticknight @unreadable) Readme: better docs for browser support (#224, @matthewmueller) Tooling: Added yarn integration for development (#317, @thebigredgeek) Misc: Renamed History.md to CHANGELOG.md (@thebigredgeek) Misc: Added license file (#226 #274, @CantemoInternal @sdaitzman) Misc: Updated contributors (@thebigredgeek)","title":"2.3.0 / 2016-11-07"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#220-2015-05-09","text":"package: update \"ms\" to v0.7.1 (#202, @dougwilson) README: add logging to file example (#193, @DanielOchoa) README: fixed a typo (#191, @amir-s) browser: expose storage (#190, @stephenmathieson) Makefile: add a distclean target (#189, @stephenmathieson)","title":"2.2.0 / 2015-05-09"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#213-2015-03-13","text":"Updated stdout/stderr example (#186) Updated example/stdout.js to match debug current behaviour Renamed example/stderr.js to stdout.js Update Readme.md (#184) replace high intensity foreground color for bold (#182, #183)","title":"2.1.3 / 2015-03-13"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#212-2015-03-01","text":"dist: recompile update \"ms\" to v0.7.0 package: update \"browserify\" to v9.0.3 component: fix \"ms.js\" repo location changed bower package name updated documentation about using debug in a browser fix: security error on safari (#167, #168, @yields)","title":"2.1.2 / 2015-03-01"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#211-2014-12-29","text":"browser: use typeof to check for console existence browser: check for console.log truthiness (fix IE 8/9) browser: add support for Chrome apps Readme: added Windows usage remarks Add bower.json to properly support bower install","title":"2.1.1 / 2014-12-29"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#210-2014-10-15","text":"node: implement DEBUG_FD env variable support package: update \"browserify\" to v6.1.0 package: add \"license\" field to package.json (#135, @panuhorsmalahti)","title":"2.1.0 / 2014-10-15"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#200-2014-09-01","text":"package: update \"browserify\" to v5.11.0 node: use stderr rather than stdout for logging (#29, @stephenmathieson)","title":"2.0.0 / 2014-09-01"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#104-2014-07-15","text":"dist: recompile example: remove console.info() log usage example: add \"Content-Type\" UTF-8 header to browser example browser: place %c marker after the space character browser: reset the \"content\" color via color: inherit browser: add colors support for Firefox >= v31 debug: prefer an instance log() function over the global one (#119) Readme: update documentation about styled console logs for FF v31 (#116, @wryk)","title":"1.0.4 / 2014-07-15"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#103-2014-07-09","text":"Add support for multiple wildcards in namespaces (#122, @seegno) browser: fix lint","title":"1.0.3 / 2014-07-09"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#102-2014-06-10","text":"browser: update color palette (#113, @gscottolson) common: make console logging function configurable (#108, @timoxley) node: fix %o colors on old node <= 0.8.x Makefile: find node path using shell/which (#109, @timoxley)","title":"1.0.2 / 2014-06-10"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#101-2014-06-06","text":"browser: use removeItem() to clear localStorage browser, node: don't set DEBUG if namespaces is undefined (#107, @leedm777) package: add \"contributors\" section node: fix comment typo README: list authors","title":"1.0.1 / 2014-06-06"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#100-2014-06-04","text":"make ms diff be global, not be scope debug: ignore empty strings in enable() node: make DEBUG_COLORS able to disable coloring *: export the colors array npmignore: don't publish the dist dir Makefile: refactor to use browserify package: add \"browserify\" as a dev dependency Readme: add Web Inspector Colors section node: reset terminal color for the debug content node: map \"%o\" to util.inspect() browser: map \"%j\" to JSON.stringify() debug: add custom \"formatters\" debug: use \"ms\" module for humanizing the diff Readme: add \"bash\" syntax highlighting browser: add Firebug color support browser: add colors for WebKit browsers node: apply log to console rewrite: abstract common logic for Node & browsers add .jshintrc file","title":"1.0.0 / 2014-06-04"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#081-2014-04-14","text":"package: re-add the \"component\" section","title":"0.8.1 / 2014-04-14"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#080-2014-03-30","text":"add enable() method for nodejs. Closes #27 change from stderr to stdout remove unnecessary index.js file","title":"0.8.0 / 2014-03-30"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#074-2013-11-13","text":"remove \"browserify\" key from package.json (fixes something in browserify)","title":"0.7.4 / 2013-11-13"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#073-2013-10-30","text":"fix: catch localStorage security error when cookies are blocked (Chrome) add debug(err) support. Closes #46 add .browser prop to package.json. Closes #42","title":"0.7.3 / 2013-10-30"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#072-2013-02-06","text":"fix package.json fix: Mobile Safari (private mode) is broken with debug fix: Use unicode to send escape character to shell instead of octal to work with strict mode javascript","title":"0.7.2 / 2013-02-06"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#071-2013-02-05","text":"add repository URL to package.json add DEBUG_COLORED to force colored output add browserify support fix component. Closes #24","title":"0.7.1 / 2013-02-05"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#070-2012-05-04","text":"Added .component to package.json Added debug.component.js build","title":"0.7.0 / 2012-05-04"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#060-2012-03-16","text":"Added support for \"-\" prefix in DEBUG [Vinay Pulim] Added .enabled flag to the node version [TooTallNate]","title":"0.6.0 / 2012-03-16"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#050-2012-02-02","text":"Added: humanize diffs. Closes #8 Added debug.disable() to the CS variant Removed padding. Closes #10 Fixed: persist client-side variant again. Closes #9","title":"0.5.0 / 2012-02-02"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#040-2012-02-01","text":"Added browser variant support for older browsers [TooTallNate] Added debug.enable('project:*') to browser variant [TooTallNate] Added padding to diff (moved it to the right)","title":"0.4.0 / 2012-02-01"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#030-2012-01-26","text":"Added millisecond diff when isatty, otherwise UTC string","title":"0.3.0 / 2012-01-26"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#020-2012-01-22","text":"Added wildcard support","title":"0.2.0 / 2012-01-22"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#010-2011-12-02","text":"Added: remove colors unless stderr isatty [TooTallNate]","title":"0.1.0 / 2011-12-02"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#001-2010-01-03","text":"Initial release","title":"0.0.1 / 2010-01-03"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/ms/license/","text":"The MIT License (MIT) Copyright (c) 2016 Zeit, Inc. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/ms/readme/","text":"ms Use this package to easily convert various time formats to milliseconds. Examples ms ( '2 days' ) // 172800000 ms ( '1d' ) // 86400000 ms ( '10h' ) // 36000000 ms ( '2.5 hrs' ) // 9000000 ms ( '2h' ) // 7200000 ms ( '1m' ) // 60000 ms ( '5s' ) // 5000 ms ( '1y' ) // 31557600000 ms ( '100' ) // 100 Convert from milliseconds ms ( 60000 ) // \"1m\" ms ( 2 * 60000 ) // \"2m\" ms ( ms ( '10 hours' )) // \"10h\" Time format written-out ms ( 60000 , { long : true }) // \"1 minute\" ms ( 2 * 60000 , { long : true }) // \"2 minutes\" ms ( ms ( '10 hours' ), { long : true }) // \"10 hours\" Features Works both in node and in the browser. If a number is supplied to ms , a string with a unit is returned. If a string that contains the number is supplied, it returns it as a number (e.g.: it returns 100 for '100' ). If you pass a string with a number and a valid unit, the number of equivalent ms is returned. Caught a bug? Fork this repository to your own GitHub account and then clone it to your local device Link the package to the global module directory: npm link Within the module you want to test your local development instance of ms, just link it to the dependencies: npm link ms . Instead of the default one from npm, node will now use your clone of ms! As always, you can run the tests using: npm test","title":"ms"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/ms/readme/#ms","text":"Use this package to easily convert various time formats to milliseconds.","title":"ms"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/ms/readme/#examples","text":"ms ( '2 days' ) // 172800000 ms ( '1d' ) // 86400000 ms ( '10h' ) // 36000000 ms ( '2.5 hrs' ) // 9000000 ms ( '2h' ) // 7200000 ms ( '1m' ) // 60000 ms ( '5s' ) // 5000 ms ( '1y' ) // 31557600000 ms ( '100' ) // 100","title":"Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/ms/readme/#convert-from-milliseconds","text":"ms ( 60000 ) // \"1m\" ms ( 2 * 60000 ) // \"2m\" ms ( ms ( '10 hours' )) // \"10h\"","title":"Convert from milliseconds"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/ms/readme/#time-format-written-out","text":"ms ( 60000 , { long : true }) // \"1 minute\" ms ( 2 * 60000 , { long : true }) // \"2 minutes\" ms ( ms ( '10 hours' ), { long : true }) // \"10 hours\"","title":"Time format written-out"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/ms/readme/#features","text":"Works both in node and in the browser. If a number is supplied to ms , a string with a unit is returned. If a string that contains the number is supplied, it returns it as a number (e.g.: it returns 100 for '100' ). If you pass a string with a number and a valid unit, the number of equivalent ms is returned.","title":"Features"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/ms/readme/#caught-a-bug","text":"Fork this repository to your own GitHub account and then clone it to your local device Link the package to the global module directory: npm link Within the module you want to test your local development instance of ms, just link it to the dependencies: npm link ms . Instead of the default one from npm, node will now use your clone of ms! As always, you can run the tests using: npm test","title":"Caught a bug?"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/","text":"on-finished Execute a callback when a HTTP request closes, finishes, or errors. Install $ npm install on-finished API var onFinished = require ( 'on-finished' ) onFinished(res, listener) Attach a listener to listen for the response to finish. The listener will be invoked only once when the response finished. If the response finished to an error, the first argument will contain the error. If the response has already finished, the listener will be invoked. Listening to the end of a response would be used to close things associated with the response, like open files. Listener is invoked as listener(err, res) . onFinished ( res , function ( err , res ) { // clean up open fds, etc. // err contains the error is request error'd }) onFinished(req, listener) Attach a listener to listen for the request to finish. The listener will be invoked only once when the request finished. If the request finished to an error, the first argument will contain the error. If the request has already finished, the listener will be invoked. Listening to the end of a request would be used to know when to continue after reading the data. Listener is invoked as listener(err, req) . var data = '' req . setEncoding ( 'utf8' ) res . on ( 'data' , function ( str ) { data += str }) onFinished ( req , function ( err , req ) { // data is read unless there is err }) onFinished.isFinished(res) Determine if res is already finished. This would be useful to check and not even start certain operations if the response has already finished. onFinished.isFinished(req) Determine if req is already finished. This would be useful to check and not even start certain operations if the request has already finished. Special Node.js requests HTTP CONNECT method The meaning of the CONNECT method from RFC 7231, section 4.3.6: The CONNECT method requests that the recipient establish a tunnel to the destination origin server identified by the request-target and, if successful, thereafter restrict its behavior to blind forwarding of packets, in both directions, until the tunnel is closed. Tunnels are commonly used to create an end-to-end virtual connection, through one or more proxies, which can then be secured using TLS (Transport Layer Security, [RFC5246]). In Node.js, these request objects come from the 'connect' event on the HTTP server. When this module is used on a HTTP CONNECT request, the request is considered \"finished\" immediately, due to limitations in the Node.js interface . This means if the CONNECT request contains a request entity, the request will be considered \"finished\" even before it has been read. There is no such thing as a response object to a CONNECT request in Node.js, so there is no support for for one. HTTP Upgrade request The meaning of the Upgrade header from RFC 7230, section 6.1: The \"Upgrade\" header field is intended to provide a simple mechanism for transitioning from HTTP/1.1 to some other protocol on the same connection. In Node.js, these request objects come from the 'upgrade' event on the HTTP server. When this module is used on a HTTP request with an Upgrade header, the request is considered \"finished\" immediately, due to limitations in the Node.js interface . This means if the Upgrade request contains a request entity, the request will be considered \"finished\" even before it has been read. There is no such thing as a response object to a Upgrade request in Node.js, so there is no support for for one. Example The following code ensures that file descriptors are always closed once the response finishes. var destroy = require ( 'destroy' ) var http = require ( 'http' ) var onFinished = require ( 'on-finished' ) http . createServer ( function onRequest ( req , res ) { var stream = fs . createReadStream ( 'package.json' ) stream . pipe ( res ) onFinished ( res , function ( err ) { destroy ( stream ) }) }) License MIT","title":"on-finished"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/#on-finished","text":"Execute a callback when a HTTP request closes, finishes, or errors.","title":"on-finished"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/#install","text":"$ npm install on-finished","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/#api","text":"var onFinished = require ( 'on-finished' )","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/#onfinishedres-listener","text":"Attach a listener to listen for the response to finish. The listener will be invoked only once when the response finished. If the response finished to an error, the first argument will contain the error. If the response has already finished, the listener will be invoked. Listening to the end of a response would be used to close things associated with the response, like open files. Listener is invoked as listener(err, res) . onFinished ( res , function ( err , res ) { // clean up open fds, etc. // err contains the error is request error'd })","title":"onFinished(res, listener)"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/#onfinishedreq-listener","text":"Attach a listener to listen for the request to finish. The listener will be invoked only once when the request finished. If the request finished to an error, the first argument will contain the error. If the request has already finished, the listener will be invoked. Listening to the end of a request would be used to know when to continue after reading the data. Listener is invoked as listener(err, req) . var data = '' req . setEncoding ( 'utf8' ) res . on ( 'data' , function ( str ) { data += str }) onFinished ( req , function ( err , req ) { // data is read unless there is err })","title":"onFinished(req, listener)"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/#onfinishedisfinishedres","text":"Determine if res is already finished. This would be useful to check and not even start certain operations if the response has already finished.","title":"onFinished.isFinished(res)"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/#onfinishedisfinishedreq","text":"Determine if req is already finished. This would be useful to check and not even start certain operations if the request has already finished.","title":"onFinished.isFinished(req)"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/#special-nodejs-requests","text":"","title":"Special Node.js requests"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/#http-connect-method","text":"The meaning of the CONNECT method from RFC 7231, section 4.3.6: The CONNECT method requests that the recipient establish a tunnel to the destination origin server identified by the request-target and, if successful, thereafter restrict its behavior to blind forwarding of packets, in both directions, until the tunnel is closed. Tunnels are commonly used to create an end-to-end virtual connection, through one or more proxies, which can then be secured using TLS (Transport Layer Security, [RFC5246]). In Node.js, these request objects come from the 'connect' event on the HTTP server. When this module is used on a HTTP CONNECT request, the request is considered \"finished\" immediately, due to limitations in the Node.js interface . This means if the CONNECT request contains a request entity, the request will be considered \"finished\" even before it has been read. There is no such thing as a response object to a CONNECT request in Node.js, so there is no support for for one.","title":"HTTP CONNECT method"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/#http-upgrade-request","text":"The meaning of the Upgrade header from RFC 7230, section 6.1: The \"Upgrade\" header field is intended to provide a simple mechanism for transitioning from HTTP/1.1 to some other protocol on the same connection. In Node.js, these request objects come from the 'upgrade' event on the HTTP server. When this module is used on a HTTP request with an Upgrade header, the request is considered \"finished\" immediately, due to limitations in the Node.js interface . This means if the Upgrade request contains a request entity, the request will be considered \"finished\" even before it has been read. There is no such thing as a response object to a Upgrade request in Node.js, so there is no support for for one.","title":"HTTP Upgrade request"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/#example","text":"The following code ensures that file descriptors are always closed once the response finishes. var destroy = require ( 'destroy' ) var http = require ( 'http' ) var onFinished = require ( 'on-finished' ) http . createServer ( function onRequest ( req , res ) { var stream = fs . createReadStream ( 'package.json' ) stream . pipe ( res ) onFinished ( res , function ( err ) { destroy ( stream ) }) })","title":"Example"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/","text":"2.3.0 / 2015-05-26 Add defined behavior for HTTP CONNECT requests Add defined behavior for HTTP Upgrade requests deps: ee-first@1.1.1 2.2.1 / 2015-04-22 Fix isFinished(req) when data buffered 2.2.0 / 2014-12-22 Add message object to callback arguments 2.1.1 / 2014-10-22 Fix handling of pipelined requests 2.1.0 / 2014-08-16 Check if socket is detached Return undefined for isFinished if state unknown 2.0.0 / 2014-08-16 Add isFinished function Move to jshttp organization Remove support for plain socket argument Rename to on-finished Support both req and res as arguments deps: ee-first@1.0.5 1.2.2 / 2014-06-10 Reduce listeners added to emitters avoids \"event emitter leak\" warnings when used multiple times on same request 1.2.1 / 2014-06-08 Fix returned value when already finished 1.2.0 / 2014-06-05 Call callback when called on already-finished socket 1.1.4 / 2014-05-27 Support node.js 0.8 1.1.3 / 2014-04-30 Make sure errors passed as instanceof Error 1.1.2 / 2014-04-18 Default the socket to passed-in object 1.1.1 / 2014-01-16 Rename module to finished 1.1.0 / 2013-12-25 Call callback when called on already-errored socket 1.0.1 / 2013-12-20 Actually pass the error to the callback 1.0.0 / 2013-12-20 Initial release","title":"2.3.0 / 2015-05-26"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#230-2015-05-26","text":"Add defined behavior for HTTP CONNECT requests Add defined behavior for HTTP Upgrade requests deps: ee-first@1.1.1","title":"2.3.0 / 2015-05-26"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#221-2015-04-22","text":"Fix isFinished(req) when data buffered","title":"2.2.1 / 2015-04-22"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#220-2014-12-22","text":"Add message object to callback arguments","title":"2.2.0 / 2014-12-22"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#211-2014-10-22","text":"Fix handling of pipelined requests","title":"2.1.1 / 2014-10-22"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#210-2014-08-16","text":"Check if socket is detached Return undefined for isFinished if state unknown","title":"2.1.0 / 2014-08-16"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#200-2014-08-16","text":"Add isFinished function Move to jshttp organization Remove support for plain socket argument Rename to on-finished Support both req and res as arguments deps: ee-first@1.0.5","title":"2.0.0 / 2014-08-16"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#122-2014-06-10","text":"Reduce listeners added to emitters avoids \"event emitter leak\" warnings when used multiple times on same request","title":"1.2.2 / 2014-06-10"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#121-2014-06-08","text":"Fix returned value when already finished","title":"1.2.1 / 2014-06-08"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#120-2014-06-05","text":"Call callback when called on already-finished socket","title":"1.2.0 / 2014-06-05"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#114-2014-05-27","text":"Support node.js 0.8","title":"1.1.4 / 2014-05-27"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#113-2014-04-30","text":"Make sure errors passed as instanceof Error","title":"1.1.3 / 2014-04-30"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#112-2014-04-18","text":"Default the socket to passed-in object","title":"1.1.2 / 2014-04-18"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#111-2014-01-16","text":"Rename module to finished","title":"1.1.1 / 2014-01-16"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#110-2013-12-25","text":"Call callback when called on already-errored socket","title":"1.1.0 / 2013-12-25"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#101-2013-12-20","text":"Actually pass the error to the callback","title":"1.0.1 / 2013-12-20"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#100-2013-12-20","text":"Initial release","title":"1.0.0 / 2013-12-20"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/","text":"mpath {G,S}et javascript object values using MongoDB-like path notation. Getting var mpath = require ( 'mpath' ); var obj = { comments : [ { title : 'funny' }, { title : 'exciting!' } ] } mpath . get ( 'comments.1.title' , obj ) // 'exciting!' mpath.get supports array property notation as well. var obj = { comments : [ { title : 'funny' }, { title : 'exciting!' } ] } mpath . get ( 'comments.title' , obj ) // ['funny', 'exciting!'] Array property and indexing syntax, when used together, are very powerful. var obj = { array : [ { o : { array : [{ x : { b : [ 4 , 6 , 8 ]}}, { y : 10 } ] }} , { o : { array : [{ x : { b : [ 1 , 2 , 3 ]}}, { x : { z : 10 }}, { x : 'Turkey Day' }] }} , { o : { array : [{ x : { b : null }}, { x : { b : [ null , 1 ]}}] }} , { o : { array : [{ x : null }] }} , { o : { array : [{ y : 3 }] }} , { o : { array : [ 3 , 0 , null ] }} , { o : { name : 'ha' }} ]; } var found = mpath . get ( 'array.o.array.x.b.1' , obj ); console . log ( found ); // prints.. [ [ 6 , undefined ] , [ 2 , undefined , undefined ] , [ null , 1 ] , [ null ] , [ undefined ] , [ undefined , undefined , undefined ] , undefined ] Field selection rules: The following rules are iteratively applied to each segment in the passed path . For example: var path = 'one.two.14' ; // path 'one' // segment 0 'two' // segment 1 14 // segment 2 1) when value of the segment parent is not an array, return the value of parent.segment 2) when value of the segment parent is an array a) if the segment is an integer, replace the parent array with the value at parent[segment] b) if not an integer, keep the array but replace each array item with the value returned from calling get(remainingSegments, item) or undefined if falsey. Maps mpath.get also accepts an optional map argument which receives each individual found value. The value returned from the map function will be used in the original found values place. var obj = { comments : [ { title : 'funny' }, { title : 'exciting!' } ] } mpath . get ( 'comments.title' , obj , function ( val ) { return 'funny' == val ? 'amusing' : val ; }); // ['amusing', 'exciting!'] Setting var obj = { comments : [ { title : 'funny' }, { title : 'exciting!' } ] } mpath . set ( 'comments.1.title' , 'hilarious' , obj ) console . log ( obj . comments [ 1 ]. title ) // 'hilarious' mpath.set supports the same array property notation as mpath.get . var obj = { comments : [ { title : 'funny' }, { title : 'exciting!' } ] } mpath . set ( 'comments.title' , [ 'hilarious' , 'fruity' ], obj ); console . log ( obj ); // prints.. { comments : [ { title : 'hilarious' }, { title : 'fruity' } ]} Array property and indexing syntax can be used together also when setting. var obj = { array : [ { o : { array : [{ x : { b : [ 4 , 6 , 8 ]}}, { y : 10 } ] }} , { o : { array : [{ x : { b : [ 1 , 2 , 3 ]}}, { x : { z : 10 }}, { x : 'Turkey Day' }] }} , { o : { array : [{ x : { b : null }}, { x : { b : [ null , 1 ]}}] }} , { o : { array : [{ x : null }] }} , { o : { array : [{ y : 3 }] }} , { o : { array : [ 3 , 0 , null ] }} , { o : { name : 'ha' }} ] } mpath . set ( 'array.1.o' , 'this was changed' , obj ); console . log ( require ( 'util' ). inspect ( obj , false , 1000 )); // prints.. { array : [ { o : { array : [{ x : { b : [ 4 , 6 , 8 ]}}, { y : 10 } ] }} , { o : 'this was changed' } , { o : { array : [{ x : { b : null }}, { x : { b : [ null , 1 ]}}] }} , { o : { array : [{ x : null }] }} , { o : { array : [{ y : 3 }] }} , { o : { array : [ 3 , 0 , null ] }} , { o : { name : 'ha' }} ]; } mpath . set ( 'array.o.array.x' , 'this was changed too' , obj ); console . log ( require ( 'util' ). inspect ( obj , false , 1000 )); // prints.. { array : [ { o : { array : [{ x : 'this was changed too' }, { y : 10 , x : 'this was changed too' } ] }} , { o : 'this was changed' } , { o : { array : [{ x : 'this was changed too' }, { x : 'this was changed too' }] }} , { o : { array : [{ x : 'this was changed too' }] }} , { o : { array : [{ x : 'this was changed too' , y : 3 }] }} , { o : { array : [ 3 , 0 , null ] }} , { o : { name : 'ha' }} ]; } Setting arrays By default, setting a property within an array to another array results in each element of the new array being set to the item in the destination array at the matching index. An example is helpful. var obj = { comments : [ { title : 'funny' }, { title : 'exciting!' } ] } mpath . set ( 'comments.title' , [ 'hilarious' , 'fruity' ], obj ); console . log ( obj ); // prints.. { comments : [ { title : 'hilarious' }, { title : 'fruity' } ]} If we do not desire this destructuring-like assignment behavior we may instead specify the $ operator in the path being set to force the array to be copied directly. var obj = { comments : [ { title : 'funny' }, { title : 'exciting!' } ] } mpath . set ( 'comments.$.title' , [ 'hilarious' , 'fruity' ], obj ); console . log ( obj ); // prints.. { comments : [ { title : [ 'hilarious' , 'fruity' ] }, { title : [ 'hilarious' , 'fruity' ] } ]} Field assignment rules The rules utilized mirror those used on mpath.get , meaning we can take values returned from mpath.get , update them, and reassign them using mpath.set . Note that setting nested arrays of arrays can get unweildy quickly. Check out the tests for more extreme examples. Maps mpath.set also accepts an optional map argument which receives each individual value being set. The value returned from the map function will be used in the original values place. var obj = { comments : [ { title : 'funny' }, { title : 'exciting!' } ] } mpath . set ( 'comments.title' , [ 'hilarious' , 'fruity' ], obj , function ( val ) { return val . length ; }); console . log ( obj ); // prints.. { comments : [ { title : 9 }, { title : 6 } ]} Custom object types Sometimes you may want to enact the same functionality on custom object types that store all their real data internally, say for an ODM type object. No fear, mpath has you covered. Simply pass the name of the property being used to store the internal data and it will be traversed instead: var mpath = require ( 'mpath' ); var obj = { comments : [ { title : 'exciting!' , _doc : { title : 'great!' }} ] } mpath . get ( 'comments.0.title' , obj , '_doc' ) // 'great!' mpath . set ( 'comments.0.title' , 'nov 3rd' , obj , '_doc' ) mpath . get ( 'comments.0.title' , obj , '_doc' ) // 'nov 3rd' mpath . get ( 'comments.0.title' , obj ) // 'exciting' When used with a map , the map argument comes last. mpath . get ( path , obj , '_doc' , map ); mpath . set ( path , val , obj , '_doc' , map ); LICENSE","title":"mpath"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/#mpath","text":"{G,S}et javascript object values using MongoDB-like path notation.","title":"mpath"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/#getting","text":"var mpath = require ( 'mpath' ); var obj = { comments : [ { title : 'funny' }, { title : 'exciting!' } ] } mpath . get ( 'comments.1.title' , obj ) // 'exciting!' mpath.get supports array property notation as well. var obj = { comments : [ { title : 'funny' }, { title : 'exciting!' } ] } mpath . get ( 'comments.title' , obj ) // ['funny', 'exciting!'] Array property and indexing syntax, when used together, are very powerful. var obj = { array : [ { o : { array : [{ x : { b : [ 4 , 6 , 8 ]}}, { y : 10 } ] }} , { o : { array : [{ x : { b : [ 1 , 2 , 3 ]}}, { x : { z : 10 }}, { x : 'Turkey Day' }] }} , { o : { array : [{ x : { b : null }}, { x : { b : [ null , 1 ]}}] }} , { o : { array : [{ x : null }] }} , { o : { array : [{ y : 3 }] }} , { o : { array : [ 3 , 0 , null ] }} , { o : { name : 'ha' }} ]; } var found = mpath . get ( 'array.o.array.x.b.1' , obj ); console . log ( found ); // prints.. [ [ 6 , undefined ] , [ 2 , undefined , undefined ] , [ null , 1 ] , [ null ] , [ undefined ] , [ undefined , undefined , undefined ] , undefined ]","title":"Getting"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/#field-selection-rules","text":"The following rules are iteratively applied to each segment in the passed path . For example: var path = 'one.two.14' ; // path 'one' // segment 0 'two' // segment 1 14 // segment 2 1) when value of the segment parent is not an array, return the value of parent.segment 2) when value of the segment parent is an array a) if the segment is an integer, replace the parent array with the value at parent[segment] b) if not an integer, keep the array but replace each array item with the value returned from calling get(remainingSegments, item) or undefined if falsey.","title":"Field selection rules:"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/#maps","text":"mpath.get also accepts an optional map argument which receives each individual found value. The value returned from the map function will be used in the original found values place. var obj = { comments : [ { title : 'funny' }, { title : 'exciting!' } ] } mpath . get ( 'comments.title' , obj , function ( val ) { return 'funny' == val ? 'amusing' : val ; }); // ['amusing', 'exciting!']","title":"Maps"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/#setting","text":"var obj = { comments : [ { title : 'funny' }, { title : 'exciting!' } ] } mpath . set ( 'comments.1.title' , 'hilarious' , obj ) console . log ( obj . comments [ 1 ]. title ) // 'hilarious' mpath.set supports the same array property notation as mpath.get . var obj = { comments : [ { title : 'funny' }, { title : 'exciting!' } ] } mpath . set ( 'comments.title' , [ 'hilarious' , 'fruity' ], obj ); console . log ( obj ); // prints.. { comments : [ { title : 'hilarious' }, { title : 'fruity' } ]} Array property and indexing syntax can be used together also when setting. var obj = { array : [ { o : { array : [{ x : { b : [ 4 , 6 , 8 ]}}, { y : 10 } ] }} , { o : { array : [{ x : { b : [ 1 , 2 , 3 ]}}, { x : { z : 10 }}, { x : 'Turkey Day' }] }} , { o : { array : [{ x : { b : null }}, { x : { b : [ null , 1 ]}}] }} , { o : { array : [{ x : null }] }} , { o : { array : [{ y : 3 }] }} , { o : { array : [ 3 , 0 , null ] }} , { o : { name : 'ha' }} ] } mpath . set ( 'array.1.o' , 'this was changed' , obj ); console . log ( require ( 'util' ). inspect ( obj , false , 1000 )); // prints.. { array : [ { o : { array : [{ x : { b : [ 4 , 6 , 8 ]}}, { y : 10 } ] }} , { o : 'this was changed' } , { o : { array : [{ x : { b : null }}, { x : { b : [ null , 1 ]}}] }} , { o : { array : [{ x : null }] }} , { o : { array : [{ y : 3 }] }} , { o : { array : [ 3 , 0 , null ] }} , { o : { name : 'ha' }} ]; } mpath . set ( 'array.o.array.x' , 'this was changed too' , obj ); console . log ( require ( 'util' ). inspect ( obj , false , 1000 )); // prints.. { array : [ { o : { array : [{ x : 'this was changed too' }, { y : 10 , x : 'this was changed too' } ] }} , { o : 'this was changed' } , { o : { array : [{ x : 'this was changed too' }, { x : 'this was changed too' }] }} , { o : { array : [{ x : 'this was changed too' }] }} , { o : { array : [{ x : 'this was changed too' , y : 3 }] }} , { o : { array : [ 3 , 0 , null ] }} , { o : { name : 'ha' }} ]; }","title":"Setting"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/#setting-arrays","text":"By default, setting a property within an array to another array results in each element of the new array being set to the item in the destination array at the matching index. An example is helpful. var obj = { comments : [ { title : 'funny' }, { title : 'exciting!' } ] } mpath . set ( 'comments.title' , [ 'hilarious' , 'fruity' ], obj ); console . log ( obj ); // prints.. { comments : [ { title : 'hilarious' }, { title : 'fruity' } ]} If we do not desire this destructuring-like assignment behavior we may instead specify the $ operator in the path being set to force the array to be copied directly. var obj = { comments : [ { title : 'funny' }, { title : 'exciting!' } ] } mpath . set ( 'comments.$.title' , [ 'hilarious' , 'fruity' ], obj ); console . log ( obj ); // prints.. { comments : [ { title : [ 'hilarious' , 'fruity' ] }, { title : [ 'hilarious' , 'fruity' ] } ]}","title":"Setting arrays"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/#field-assignment-rules","text":"The rules utilized mirror those used on mpath.get , meaning we can take values returned from mpath.get , update them, and reassign them using mpath.set . Note that setting nested arrays of arrays can get unweildy quickly. Check out the tests for more extreme examples.","title":"Field assignment rules"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/#maps_1","text":"mpath.set also accepts an optional map argument which receives each individual value being set. The value returned from the map function will be used in the original values place. var obj = { comments : [ { title : 'funny' }, { title : 'exciting!' } ] } mpath . set ( 'comments.title' , [ 'hilarious' , 'fruity' ], obj , function ( val ) { return val . length ; }); console . log ( obj ); // prints.. { comments : [ { title : 9 }, { title : 6 } ]}","title":"Maps"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/#custom-object-types","text":"Sometimes you may want to enact the same functionality on custom object types that store all their real data internally, say for an ODM type object. No fear, mpath has you covered. Simply pass the name of the property being used to store the internal data and it will be traversed instead: var mpath = require ( 'mpath' ); var obj = { comments : [ { title : 'exciting!' , _doc : { title : 'great!' }} ] } mpath . get ( 'comments.0.title' , obj , '_doc' ) // 'great!' mpath . set ( 'comments.0.title' , 'nov 3rd' , obj , '_doc' ) mpath . get ( 'comments.0.title' , obj , '_doc' ) // 'nov 3rd' mpath . get ( 'comments.0.title' , obj ) // 'exciting' When used with a map , the map argument comes last. mpath . get ( path , obj , '_doc' , map ); mpath . set ( path , val , obj , '_doc' , map ); LICENSE","title":"Custom object types"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/","text":"0.9.0 / 2022-04-17 feat: export stringToParts() 0.8.4 / 2021-09-01 fix: throw error if parts contains an element that isn't a string or number #13 0.8.3 / 2020-12-30 fix: use var instead of let/const for Node.js 4.x support 0.8.2 / 2020-12-30 fix(stringToParts): fall back to legacy treatment for square brackets if square brackets contents aren't a number Automattic/mongoose#9640 chore: add eslint 0.8.1 / 2020-12-10 fix(stringToParts): handle empty string and trailing dot the same way that split() does for backwards compat 0.8.0 / 2020-11-14 feat: support square bracket indexing for get() , set() , has() , and unset() 0.7.0 / 2020-03-24 BREAKING CHANGE: remove component.json #9 AlexeyGrigorievBoost 0.6.0 / 2019-05-01 feat: support setting dotted paths within nested arrays 0.5.2 / 2019-04-25 fix: avoid using subclassed array constructor when doing map() 0.5.1 / 2018-08-30 fix: prevent writing to constructor and prototype as well as proto 0.5.0 / 2018-08-30 BREAKING CHANGE: disallow setting/unsetting proto properties feat: re-add support for Node < 4 for this release 0.4.1 / 2018-04-08 fix: allow opting out of weird $ set behavior re: Automattic/mongoose#6273 0.4.0 / 2018-03-27 feat: add support for ES6 maps BREAKING CHANGE: drop support for Node < 4 0.3.0 / 2017-06-05 feat: add has() and unset() functions 0.2.1 / 2013-03-22 test; added for #5 fix typo that breaks set #5 Contra 0.2.0 / 2013-03-15 added; adapter support for set added; adapter support for get add basic benchmarks add support for using module as a component #2 Contra 0.1.1 / 2012-12-21 added; map support 0.1.0 / 2012-12-13 added; set('array.property', val, object) support added; get('array.property', object) support 0.0.1 / 2012-11-03 initial release","title":"0.9.0 / 2022-04-17"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#090-2022-04-17","text":"feat: export stringToParts()","title":"0.9.0 / 2022-04-17"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#084-2021-09-01","text":"fix: throw error if parts contains an element that isn't a string or number #13","title":"0.8.4 / 2021-09-01"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#083-2020-12-30","text":"fix: use var instead of let/const for Node.js 4.x support","title":"0.8.3 / 2020-12-30"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#082-2020-12-30","text":"fix(stringToParts): fall back to legacy treatment for square brackets if square brackets contents aren't a number Automattic/mongoose#9640 chore: add eslint","title":"0.8.2 / 2020-12-30"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#081-2020-12-10","text":"fix(stringToParts): handle empty string and trailing dot the same way that split() does for backwards compat","title":"0.8.1 / 2020-12-10"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#080-2020-11-14","text":"feat: support square bracket indexing for get() , set() , has() , and unset()","title":"0.8.0 / 2020-11-14"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#070-2020-03-24","text":"BREAKING CHANGE: remove component.json #9 AlexeyGrigorievBoost","title":"0.7.0 / 2020-03-24"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#060-2019-05-01","text":"feat: support setting dotted paths within nested arrays","title":"0.6.0 / 2019-05-01"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#052-2019-04-25","text":"fix: avoid using subclassed array constructor when doing map()","title":"0.5.2 / 2019-04-25"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#051-2018-08-30","text":"fix: prevent writing to constructor and prototype as well as proto","title":"0.5.1 / 2018-08-30"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#050-2018-08-30","text":"BREAKING CHANGE: disallow setting/unsetting proto properties feat: re-add support for Node < 4 for this release","title":"0.5.0 / 2018-08-30"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#041-2018-04-08","text":"fix: allow opting out of weird $ set behavior re: Automattic/mongoose#6273","title":"0.4.1 / 2018-04-08"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#040-2018-03-27","text":"feat: add support for ES6 maps BREAKING CHANGE: drop support for Node < 4","title":"0.4.0 / 2018-03-27"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#030-2017-06-05","text":"feat: add has() and unset() functions","title":"0.3.0 / 2017-06-05"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#021-2013-03-22","text":"test; added for #5 fix typo that breaks set #5 Contra","title":"0.2.1 / 2013-03-22"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#020-2013-03-15","text":"added; adapter support for set added; adapter support for get add basic benchmarks add support for using module as a component #2 Contra","title":"0.2.0 / 2013-03-15"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#011-2012-12-21","text":"added; map support","title":"0.1.1 / 2012-12-21"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#010-2012-12-13","text":"added; set('array.property', val, object) support added; get('array.property', object) support","title":"0.1.0 / 2012-12-13"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#001-2012-11-03","text":"initial release","title":"0.0.1 / 2012-11-03"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/SECURITY/","text":"Reporting a Vulnerability Please report suspected security vulnerabilities to val [at] karpov [dot] io. You will receive a response from us within 72 hours. If the issue is confirmed, we will release a patch as soon as possible depending on complexity.","title":"Reporting a Vulnerability"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/SECURITY/#reporting-a-vulnerability","text":"Please report suspected security vulnerabilities to val [at] karpov [dot] io. You will receive a response from us within 72 hours. If the issue is confirmed, we will release a patch as soon as possible depending on complexity.","title":"Reporting a Vulnerability"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/","text":"mquery mquery is a fluent mongodb query builder designed to run in multiple environments. Features fluent query builder api custom base query support MongoDB 2.4 geoJSON support method + option combinations validation node.js driver compatibility environment detection debug support separated collection implementations for maximum flexibility Use const mongo = require ( 'mongodb' ); const client = new mongo . MongoClient ( uri ); await client . connect (); // get a collection const collection = client . collection ( 'artists' ); // pass it to the constructor await mquery ( collection ). find ({...}); // or pass it to the collection method const docs = await mquery (). find ({...}). collection ( collection ); // or better yet, create a custom query constructor that has it always set const Artist = mquery ( collection ). toConstructor (); const docs = await Artist (). find (...). where (...); mquery requires a collection object to work with. In the example above we just pass the collection object created using the official MongoDB driver . Fluent API mquery Features Use Fluent API Helpers find() findOne() count() findOneAndUpdate() findOneAndUpdate() options findOneAndRemove() findOneAndRemove() options distinct() exec() stream() all() and() box() circle() elemMatch() equals() exists() geometry() gt() gte() in() intersects() lt() lte() maxDistance() mod() ne() nin() nor() near() Example or() polygon() regex() select() String syntax selected() selectedInclusively() selectedExclusively() size() slice() within() where() $where() batchSize() collation() comment() hint() j() limit() maxTime() skip() sort() read() Preferences: Preference Tags: readConcern() Read Concern Level: writeConcern() Write Concern: slaveOk() tailable() wtimeout() Helpers collection() then() merge(object) setOptions(options) setOptions() options setTraceFunction(func) mquery.setGlobalTraceFunction(func) mquery.canMerge(conditions) mquery.use$geoWithin Custom Base Queries Validation Debug support General compatibility ObjectIds Read Preferences Future goals Installation License Helpers collection then merge setOptions setTraceFunction mquery.setGlobalTraceFunction mquery.canMerge mquery.use$geoWithin find() Declares this query a find query. Optionally pass a match clause. mquery (). find () mquery (). find ( match ) await mquery (). find () const docs = await mquery (). find ( match ); assert ( Array . isArray ( docs )); findOne() Declares this query a findOne query. Optionally pass a match clause. mquery (). findOne () mquery (). findOne ( match ) await mquery (). findOne () const doc = await mquery (). findOne ( match ); if ( doc ) { // the document may not be found console . log ( doc ); } count() Declares this query a count query. Optionally pass a match clause. mquery (). count () mquery (). count ( match ) await mquery (). count () const number = await mquery (). count ( match ); console . log ( 'we found %d matching documents' , number ); findOneAndUpdate() Declares this query a findAndModify with update query. Optionally pass a match clause, update document, options. When executed, the first matching document (if found) is modified according to the update document and passed back. findOneAndUpdate() options Options are passed to the setOptions() method. returnDocument : string - 'after' to return the modified document rather than the original. defaults to 'before' upsert : boolean - creates the object if it doesn't exist. defaults to false sort : if multiple docs are found by the match condition, sets the sort order to choose which doc to update query . findOneAndUpdate () query . findOneAndUpdate ( updateDocument ) query . findOneAndUpdate ( match , updateDocument ) query . findOneAndUpdate ( match , updateDocument , options ) // the following all execute the command await query . findOneAndUpdate () await query . findOneAndUpdate ( updateDocument ) await query . findOneAndUpdate ( match , updateDocument ) const doc = await await query . findOneAndUpdate ( match , updateDocument , options ); if ( doc ) { // the document may not be found console . log ( doc ); } findOneAndRemove() Declares this query a findAndModify with remove query. Alias of findOneAndDelete. Optionally pass a match clause, options. When executed, the first matching document (if found) is modified according to the update document, removed from the collection and passed as a result. findOneAndRemove() options Options are passed to the setOptions() method. sort : if multiple docs are found by the condition, sets the sort order to choose which doc to modify and remove A . where (). findOneAndDelete () A . where (). findOneAndRemove () A . where (). findOneAndRemove ( match ) A . where (). findOneAndRemove ( match , options ) // the following all execute the command await A . where (). findOneAndRemove () await A . where (). findOneAndRemove ( match ) const doc = await A . where (). findOneAndRemove ( match , options ); if ( doc ) { // the document may not be found console . log ( doc ); } distinct() Declares this query a distinct query. Optionally pass the distinct field, a match clause. mquery (). distinct () mquery (). distinct ( match ) mquery (). distinct ( match , field ) mquery (). distinct ( field ) // the following all execute the command await mquery (). distinct () await mquery (). distinct ( field ) await mquery (). distinct ( match ) const result = await mquery (). distinct ( match , field ); console . log ( result ); exec() Executes the query. const docs = await mquery (). findOne (). where ( 'route' ). intersects ( polygon ). exec () stream() Executes the query and returns a stream. var stream = mquery (). find (). stream ( options ); stream . on ( 'data' , cb ); stream . on ( 'close' , fn ); Note: this only works with find() operations. Note: returns the stream object directly from the node-mongodb-native driver. (currently streams1 type stream). Any options will be passed along to the driver method . all() Specifies an $all query condition mquery (). where ( 'permission' ). all ([ 'read' , 'write' ]) MongoDB documentation and() Specifies arguments for an $and condition mquery (). and ([{ color : 'green' }, { status : 'ok' }]) MongoDB documentation box() Specifies a $box condition var lowerLeft = [ 40.73083 , - 73.99756 ] var upperRight = [ 40.741404 , - 73.988135 ] mquery (). where ( 'location' ). within (). box ( lowerLeft , upperRight ) MongoDB Documentation circle() Specifies a $center or $centerSphere condition. var area = { center : [ 50 , 50 ], radius : 10 , unique : true } query . where ( 'loc' ). within (). circle ( area ) query . circle ( 'loc' , area ); // for spherical calculations var area = { center : [ 50 , 50 ], radius : 10 , unique : true , spherical : true } query . where ( 'loc' ). within (). circle ( area ) query . circle ( 'loc' , area ); MongoDB Documentation - center MongoDB Documentation - centerSphere elemMatch() Specifies an $elemMatch condition query . where ( 'comment' ). elemMatch ({ author : 'autobot' , votes : { $gte : 5 }}) query . elemMatch ( 'comment' , function ( elem ) { elem . where ( 'author' ). equals ( 'autobot' ); elem . where ( 'votes' ). gte ( 5 ); }) MongoDB Documentation equals() Specifies the complementary comparison value for the path specified with where() . mquery (). where ( 'age' ). equals ( 49 ); // is the same as mquery (). where ({ 'age' : 49 }); exists() Specifies an $exists condition // { name: { $exists: true }} mquery (). where ( 'name' ). exists () mquery (). where ( 'name' ). exists ( true ) mquery (). exists ( 'name' ) // { name: { $exists: false }} mquery (). where ( 'name' ). exists ( false ); mquery (). exists ( 'name' , false ); MongoDB Documentation geometry() Specifies a $geometry condition var polyA = [[[ 10 , 20 ], [ 10 , 40 ], [ 30 , 40 ], [ 30 , 20 ]]] query . where ( 'loc' ). within (). geometry ({ type : 'Polygon' , coordinates : polyA }) // or var polyB = [[ 0 , 0 ], [ 1 , 1 ]] query . where ( 'loc' ). within (). geometry ({ type : 'LineString' , coordinates : polyB }) // or var polyC = [ 0 , 0 ] query . where ( 'loc' ). within (). geometry ({ type : 'Point' , coordinates : polyC }) // or query . where ( 'loc' ). intersects (). geometry ({ type : 'Point' , coordinates : polyC }) // or query . where ( 'loc' ). near (). geometry ({ type : 'Point' , coordinates : [ 3 , 5 ] }) geometry() must come after intersects() , within() , or near() . The object argument must contain type and coordinates properties. type String coordinates Array MongoDB Documentation gt() Specifies a $gt query condition. mquery (). where ( 'clicks' ). gt ( 999 ) MongoDB Documentation gte() Specifies a $gte query condition. MongoDB Documentation mquery (). where ( 'clicks' ). gte ( 1000 ) in() Specifies an $in query condition. mquery (). where ( 'author_id' ). in ([ 3 , 48901 , 761 ]) MongoDB Documentation intersects() Declares an $geoIntersects query for geometry() . query . where ( 'path' ). intersects (). geometry ({ type : 'LineString' , coordinates : [[ 180.0 , 11.0 ], [ 180 , 9.0 ]] }) // geometry arguments are supported query . where ( 'path' ). intersects ({ type : 'LineString' , coordinates : [[ 180.0 , 11.0 ], [ 180 , 9.0 ]] }) Must be used after where() . MongoDB Documentation lt() Specifies a $lt query condition. mquery (). where ( 'clicks' ). lt ( 50 ) MongoDB Documentation lte() Specifies a $lte query condition. mquery (). where ( 'clicks' ). lte ( 49 ) MongoDB Documentation maxDistance() Specifies a $maxDistance query condition. mquery (). where ( 'location' ). near ({ center : [ 139 , 74.3 ] }). maxDistance ( 5 ) MongoDB Documentation mod() Specifies a $mod condition mquery (). where ( 'count' ). mod ( 2 , 0 ) MongoDB Documentation ne() Specifies a $ne query condition. mquery (). where ( 'status' ). ne ( 'ok' ) MongoDB Documentation nin() Specifies an $nin query condition. mquery (). where ( 'author_id' ). nin ([ 3 , 48901 , 761 ]) MongoDB Documentation nor() Specifies arguments for an $nor condition. mquery (). nor ([{ color : 'green' }, { status : 'ok' }]) MongoDB Documentation near() Specifies arguments for a $near or $nearSphere condition. These operators return documents sorted by distance. Example query . where ( 'loc' ). near ({ center : [ 10 , 10 ] }); query . where ( 'loc' ). near ({ center : [ 10 , 10 ], maxDistance : 5 }); query . near ( 'loc' , { center : [ 10 , 10 ], maxDistance : 5 }); // GeoJSON query . where ( 'loc' ). near ({ center : { type : 'Point' , coordinates : [ 10 , 10 ] }}); query . where ( 'loc' ). near ({ center : { type : 'Point' , coordinates : [ 10 , 10 ] }, maxDistance : 5 , spherical : true }); query . where ( 'loc' ). near (). geometry ({ type : 'Point' , coordinates : [ 10 , 10 ] }); // For a $nearSphere condition, pass the `spherical` option. query . near ({ center : [ 10 , 10 ], maxDistance : 5 , spherical : true }); MongoDB Documentation or() Specifies arguments for an $or condition. mquery (). or ([{ color : 'red' }, { status : 'emergency' }]) MongoDB Documentation polygon() Specifies a $polygon condition mquery (). where ( 'loc' ). within (). polygon ([ 10 , 20 ], [ 13 , 25 ], [ 7 , 15 ]) mquery (). polygon ( 'loc' , [ 10 , 20 ], [ 13 , 25 ], [ 7 , 15 ]) MongoDB Documentation regex() Specifies a $regex query condition. mquery (). where ( 'name' ). regex ( /^sixstepsrecords/ ) MongoDB Documentation select() Specifies which document fields to include or exclude // 1 means include, 0 means exclude mquery (). select ({ name : 1 , address : 1 , _id : 0 }) // or mquery (). select ( 'name address -_id' ) String syntax When passing a string, prefixing a path with - will flag that path as excluded. When a path does not have the - prefix, it is included. // include a and b, exclude c query . select ( 'a b -c' ); // or you may use object notation, useful when // you have keys already prefixed with a \"-\" query . select ({ a : 1 , b : 1 , c : 0 }); Cannot be used with distinct() . selected() Determines if the query has selected any fields. var query = mquery (); query . selected () // false query . select ( '-name' ); query . selected () // true selectedInclusively() Determines if the query has selected any fields inclusively. var query = mquery (). select ( 'name' ); query . selectedInclusively () // true var query = mquery (); query . selected () // false query . select ( '-name' ); query . selectedInclusively () // false query . selectedExclusively () // true selectedExclusively() Determines if the query has selected any fields exclusively. var query = mquery (). select ( '-name' ); query . selectedExclusively () // true var query = mquery (); query . selected () // false query . select ( 'name' ); query . selectedExclusively () // false query . selectedInclusively () // true size() Specifies a $size query condition. mquery (). where ( 'someArray' ). size ( 6 ) MongoDB Documentation slice() Specifies a $slice projection for a path mquery (). where ( 'comments' ). slice ( 5 ) mquery (). where ( 'comments' ). slice ( - 5 ) mquery (). where ( 'comments' ). slice ([ - 10 , 5 ]) MongoDB Documentation within() Sets a $geoWithin or $within argument for geo-spatial queries. mquery (). within (). box () mquery (). within (). circle () mquery (). within (). geometry () mquery (). where ( 'loc' ). within ({ center : [ 50 , 50 ], radius : 10 , unique : true , spherical : true }); mquery (). where ( 'loc' ). within ({ box : [[ 40.73 , - 73.9 ], [ 40.7 , - 73.988 ]] }); mquery (). where ( 'loc' ). within ({ polygon : [[],[],[],[]] }); mquery (). where ( 'loc' ). within ([], [], []) // polygon mquery (). where ( 'loc' ). within ([], []) // box mquery (). where ( 'loc' ). within ({ type : 'LineString' , coordinates : [...] }); // geometry As of mquery 2.0, $geoWithin is used by default. This impacts you if running MongoDB < 2.4. To alter this behavior, see mquery.use$geoWithin . Must be used after where() . MongoDB Documentation where() Specifies a path for use with chaining // instead of writing: mquery (). find ({ age : { $gte : 21 , $lte : 65 }}); // we can instead write: mquery (). where ( 'age' ). gte ( 21 ). lte ( 65 ); // passing query conditions is permitted too mquery (). find (). where ({ name : 'vonderful' }) // chaining await mquery () . where ( 'age' ). gte ( 21 ). lte ( 65 ) . where ({ 'name' : /^vonderful/i }) . where ( 'friends' ). slice ( 10 ) . exec () $where() Specifies a $where condition. Use $where when you need to select documents using a JavaScript expression. await query . $where ( 'this.comments.length > 10 || this.name.length > 5' ). exec () query . $where ( function () { return this . comments . length > 10 || this . name . length > 5 ; }) Only use $where when you have a condition that cannot be met using other MongoDB operators like $lt . Be sure to read about all of its caveats before using. batchSize() Specifies the batchSize option. query . batchSize ( 100 ) Cannot be used with distinct() . MongoDB documentation collation() Specifies the collation option. query . collation ({ locale : \"en_US\" , strength : 1 }) MongoDB documentation comment() Specifies the comment option. query . comment ( 'login query' ); Cannot be used with distinct() . MongoDB documentation hint() Sets query hints. mquery (). hint ({ indexA : 1 , indexB : - 1 }) Cannot be used with distinct() . MongoDB documentation j() Requests acknowledgement that this operation has been persisted to MongoDB's on-disk journal. This option is only valid for operations that write to the database: deleteOne() deleteMany() findOneAndDelete() findOneAndUpdate() updateOne() updateMany() Defaults to the j value if it is specified in writeConcern mquery (). j ( true ); limit() Specifies the limit option. query . limit ( 20 ) Cannot be used with distinct() . MongoDB documentation maxTime() Specifies the maxTimeMS option. query . maxTime ( 100 ) query . maxTimeMS ( 100 ) MongoDB documentation skip() Specifies the skip option. query . skip ( 100 ). limit ( 20 ) Cannot be used with distinct() . MongoDB documentation sort() Sets the query sort order. If an object is passed, key values allowed are asc , desc , ascending , descending , 1 , and -1 . If a string is passed, it must be a space delimited list of path names. The sort order of each path is ascending unless the path name is prefixed with - which will be treated as descending. // these are equivalent query . sort ({ field : 'asc' , test : - 1 }); query . sort ( 'field -test' ); Cannot be used with distinct() . MongoDB documentation read() Sets the readPreference option for the query. mquery (). read ( 'primary' ) mquery (). read ( 'p' ) // same as primary mquery (). read ( 'primaryPreferred' ) mquery (). read ( 'pp' ) // same as primaryPreferred mquery (). read ( 'secondary' ) mquery (). read ( 's' ) // same as secondary mquery (). read ( 'secondaryPreferred' ) mquery (). read ( 'sp' ) // same as secondaryPreferred mquery (). read ( 'nearest' ) mquery (). read ( 'n' ) // same as nearest mquery (). setReadPreference ( 'primary' ) // alias of .read() Preferences: primary - (default) Read from primary only. Operations will produce an error if primary is unavailable. Cannot be combined with tags. secondary - Read from secondary if available, otherwise error. primaryPreferred - Read from primary if available, otherwise a secondary. secondaryPreferred - Read from a secondary if available, otherwise read from the primary. nearest - All operations read from among the nearest candidates, but unlike other modes, this option will include both the primary and all secondaries in the random selection. Aliases p primary pp primaryPreferred s secondary sp secondaryPreferred n nearest Preference Tags: To keep the separation of concerns between mquery and your driver clean, mquery#read() no longer handles specifying a second tags argument as of version 0.5. If you need to specify tags, pass any non-string argument as the first argument. mquery will pass this argument untouched to your collections methods later. For example: // example of specifying tags using the Node.js driver var ReadPref = require ( 'mongodb' ). ReadPreference ; var preference = new ReadPref ( 'secondary' , [{ dc : 'sf' , s : 1 },{ dc : 'ma' , s : 2 }]); mquery (...). read ( preference ). exec (); Read more about how to use read preferences here and here . readConcern() Sets the readConcern option for the query. // local mquery (). readConcern ( 'local' ) mquery (). readConcern ( 'l' ) mquery (). r ( 'l' ) // available mquery (). readConcern ( 'available' ) mquery (). readConcern ( 'a' ) mquery (). r ( 'a' ) // majority mquery (). readConcern ( 'majority' ) mquery (). readConcern ( 'm' ) mquery (). r ( 'm' ) // linearizable mquery (). readConcern ( 'linearizable' ) mquery (). readConcern ( 'lz' ) mquery (). r ( 'lz' ) // snapshot mquery (). readConcern ( 'snapshot' ) mquery (). readConcern ( 's' ) mquery (). r ( 's' ) Read Concern Level: local - The query returns from the instance with no guarantee guarantee that the data has been written to a majority of the replica set members (i.e. may be rolled back). (MongoDB 3.2+) available - The query returns from the instance with no guarantee guarantee that the data has been written to a majority of the replica set members (i.e. may be rolled back). (MongoDB 3.6+) majority - The query returns the data that has been acknowledged by a majority of the replica set members. The documents returned by the read operation are durable, even in the event of failure. (MongoDB 3.2+) linearizable - The query returns data that reflects all successful majority-acknowledged writes that completed prior to the start of the read operation. The query may wait for concurrently executing writes to propagate to a majority of replica set members before returning results. (MongoDB 3.4+) snapshot - Only available for operations within multi-document transactions. Upon transaction commit with write concern \"majority\", the transaction operations are guaranteed to have read from a snapshot of majority-committed data. (MongoDB 4.0+) Aliases l local a available m majority lz linearizable s snapshot Read more about how to use read concern here . writeConcern() Sets the writeConcern option for the query. This option is only valid for operations that write to the database: deleteOne() deleteMany() findOneAndDelete() findOneAndUpdate() updateOne() updateMany() mquery (). writeConcern ( 0 ) mquery (). writeConcern ( 1 ) mquery (). writeConcern ({ w : 1 , j : true , wtimeout : 2000 }) mquery (). writeConcern ( 'majority' ) mquery (). writeConcern ( 'm' ) // same as majority mquery (). writeConcern ( 'tagSetName' ) // if the tag set is 'm', use .writeConcern({ w: 'm' }) instead mquery (). w ( 1 ) // w is alias of writeConcern Write Concern: writeConcern({ w: <value> , j: <boolean> , wtimeout: <number> }`) the w option to request acknowledgement that the write operation has propagated to a specified number of mongod instances or to mongod instances with specified tags the j option to request acknowledgement that the write operation has been written to the journal the wtimeout option to specify a time limit to prevent write operations from blocking indefinitely Can be break down to use the following syntax: mquery().w( <value> ).j( <boolean> ).wtimeout( <number> ) Read more about how to use write concern here slaveOk() Sets the slaveOk option. true allows reading from secondaries. deprecated use read() preferences instead if on mongodb >= 2.2 query . slaveOk () // true query . slaveOk ( true ) query . slaveOk ( false ) MongoDB documentation tailable() Sets tailable option. mquery (). tailable () <== true mquery (). tailable ( true ) mquery (). tailable ( false ) Cannot be used with distinct() . MongoDB Documentation wtimeout() Specifies a time limit, in milliseconds, for the write concern. If w > 1 , it is maximum amount of time to wait for this write to propagate through the replica set before this operation fails. The default is 0 , which means no timeout. This option is only valid for operations that write to the database: deleteOne() deleteMany() findOneAndDelete() findOneAndUpdate() updateOne() updateMany() Defaults to wtimeout value if it is specified in writeConcern mquery (). wtimeout ( 2000 ) mquery (). wTimeout ( 2000 ) Helpers collection() Sets the querys collection. mquery (). collection ( aCollection ) then() Executes the query and returns a promise which will be resolved with the query results or rejected if the query responds with an error. mquery (). find (..). then ( success , error ); This is very useful when combined with co or koa , which automatically resolve promise-like objects for you. co ( function * (){ var doc = yield mquery (). findOne ({ _id : 499 }); console . log ( doc ); // { _id: 499, name: 'amazing', .. } })(); NOTE : The returned promise is a bluebird promise but this is customizable. If you want to use your favorite promise library, simply set mquery.Promise = YourPromiseConstructor . Your Promise must be promises A+ compliant. merge(object) Merges other mquery or match condition objects into this one. When an mquery instance is passed, its match conditions, field selection and options are merged. const drum = mquery ({ type : 'drum' }). collection ( instruments ); const redDrum = mquery ({ color : 'red' }). merge ( drum ); const n = await redDrum . count (); console . log ( 'there are %d red drums' , n ); Internally uses mquery.canMerge to determine validity. setOptions(options) Sets query options. mquery (). setOptions ({ collection : coll , limit : 20 }) setOptions() options tailable * sort * limit * skip * maxTime * batchSize * comment * hint * collection : the collection to query against * denotes a query helper method is also available setTraceFunction(func) Set a function to trace this query. Useful for profiling or logging. function traceFunction ( method , queryInfo , query ) { console . log ( 'starting ' + method + ' query' ); return function ( err , result , millis ) { console . log ( 'finished ' + method + ' query in ' + millis + 'ms' ); }; } mquery (). setTraceFunction ( traceFunction ). findOne ({ name : 'Joe' }, cb ); The trace function is passed (method, queryInfo, query) method is the name of the method being called (e.g. findOne) queryInfo contains information about the query: conditions: query conditions/criteria options: options such as sort, fields, etc doc: document being updated query is the query object The trace function should return a callback function which accepts: - err: error, if any - result: result, if any - millis: time spent waiting for query result NOTE: stream requests are not traced. mquery.setGlobalTraceFunction(func) Similar to setTraceFunction() but automatically applied to all queries. mquery . setTraceFunction ( traceFunction ); mquery.canMerge(conditions) Determines if conditions can be merged using mquery().merge() . var query = mquery ({ type : 'drum' }); var okToMerge = mquery . canMerge ( anObject ) if ( okToMerge ) { query . merge ( anObject ); } mquery.use$geoWithin MongoDB 2.4 introduced the $geoWithin operator which replaces and is 100% backward compatible with $within . As of mquery 0.2, we default to using $geoWithin for all within() calls. If you are running MongoDB < 2.4 this will be problematic. To force mquery to be backward compatible and always use $within , set the mquery.use$geoWithin flag to false . mquery . use$geoWithin = false ; Custom Base Queries Often times we want custom base queries that encapsulate predefined criteria. With mquery this is easy. First create the query you want to reuse and call its toConstructor() method which returns a new subclass of mquery that retains all options and criteria of the original. var greatMovies = mquery ( movieCollection ). where ( 'rating' ). gte ( 4.5 ). toConstructor (); // use it! const n = await greatMovies (). count (); console . log ( 'There are %d great movies' , n ); const docs = await greatMovies (). where ({ name : /^Life/ }). select ( 'name' ). find (); console . log ( docs ); Validation Method and options combinations are checked for validity at runtime to prevent creation of invalid query constructs. For example, a distinct query does not support specifying options like hint or field selection. In this case an error will be thrown so you can catch these mistakes in development. Debug support Debug mode is provided through the use of the debug module. To enable: DEBUG = mquery node yourprogram.js Read the debug module documentation for more details. General compatibility ObjectIds mquery clones query arguments before passing them to a collection method for execution. This prevents accidental side-affects to the objects you pass. To clone ObjectIds we need to make some assumptions. First, to check if an object is an ObjectId , we check its constructors name. If it matches either ObjectId or ObjectID we clone it. To clone ObjectIds , we call its optional clone method. If a clone method does not exist, we fall back to calling new obj.constructor(obj.id) . We assume, for compatibility with the Node.js driver, that the ObjectId instance has a public id property and that when creating an ObjectId instance we can pass that id as an argument. Read Preferences mquery supports specifying Read Preferences to control from which MongoDB node your query will read. The Read Preferences spec also support specifying tags. To pass tags, some drivers (Node.js driver) require passing a special constructor that handles both the read preference and its tags. If you need to specify tags, pass an instance of your drivers ReadPreference constructor or roll your own. mquery will store whatever you provide and pass later to your collection during execution. Future goals mongo shell compatibility browser compatibility Installation npm install mquery License MIT","title":"mquery"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#mquery","text":"mquery is a fluent mongodb query builder designed to run in multiple environments.","title":"mquery"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#features","text":"fluent query builder api custom base query support MongoDB 2.4 geoJSON support method + option combinations validation node.js driver compatibility environment detection debug support separated collection implementations for maximum flexibility","title":"Features"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#use","text":"const mongo = require ( 'mongodb' ); const client = new mongo . MongoClient ( uri ); await client . connect (); // get a collection const collection = client . collection ( 'artists' ); // pass it to the constructor await mquery ( collection ). find ({...}); // or pass it to the collection method const docs = await mquery (). find ({...}). collection ( collection ); // or better yet, create a custom query constructor that has it always set const Artist = mquery ( collection ). toConstructor (); const docs = await Artist (). find (...). where (...); mquery requires a collection object to work with. In the example above we just pass the collection object created using the official MongoDB driver .","title":"Use"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#fluent-api","text":"mquery Features Use Fluent API Helpers find() findOne() count() findOneAndUpdate() findOneAndUpdate() options findOneAndRemove() findOneAndRemove() options distinct() exec() stream() all() and() box() circle() elemMatch() equals() exists() geometry() gt() gte() in() intersects() lt() lte() maxDistance() mod() ne() nin() nor() near() Example or() polygon() regex() select() String syntax selected() selectedInclusively() selectedExclusively() size() slice() within() where() $where() batchSize() collation() comment() hint() j() limit() maxTime() skip() sort() read() Preferences: Preference Tags: readConcern() Read Concern Level: writeConcern() Write Concern: slaveOk() tailable() wtimeout() Helpers collection() then() merge(object) setOptions(options) setOptions() options setTraceFunction(func) mquery.setGlobalTraceFunction(func) mquery.canMerge(conditions) mquery.use$geoWithin Custom Base Queries Validation Debug support General compatibility ObjectIds Read Preferences Future goals Installation License","title":"Fluent API"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#helpers","text":"collection then merge setOptions setTraceFunction mquery.setGlobalTraceFunction mquery.canMerge mquery.use$geoWithin","title":"Helpers"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#find","text":"Declares this query a find query. Optionally pass a match clause. mquery (). find () mquery (). find ( match ) await mquery (). find () const docs = await mquery (). find ( match ); assert ( Array . isArray ( docs ));","title":"find()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#findone","text":"Declares this query a findOne query. Optionally pass a match clause. mquery (). findOne () mquery (). findOne ( match ) await mquery (). findOne () const doc = await mquery (). findOne ( match ); if ( doc ) { // the document may not be found console . log ( doc ); }","title":"findOne()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#count","text":"Declares this query a count query. Optionally pass a match clause. mquery (). count () mquery (). count ( match ) await mquery (). count () const number = await mquery (). count ( match ); console . log ( 'we found %d matching documents' , number );","title":"count()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#findoneandupdate","text":"Declares this query a findAndModify with update query. Optionally pass a match clause, update document, options. When executed, the first matching document (if found) is modified according to the update document and passed back.","title":"findOneAndUpdate()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#findoneandupdate-options","text":"Options are passed to the setOptions() method. returnDocument : string - 'after' to return the modified document rather than the original. defaults to 'before' upsert : boolean - creates the object if it doesn't exist. defaults to false sort : if multiple docs are found by the match condition, sets the sort order to choose which doc to update query . findOneAndUpdate () query . findOneAndUpdate ( updateDocument ) query . findOneAndUpdate ( match , updateDocument ) query . findOneAndUpdate ( match , updateDocument , options ) // the following all execute the command await query . findOneAndUpdate () await query . findOneAndUpdate ( updateDocument ) await query . findOneAndUpdate ( match , updateDocument ) const doc = await await query . findOneAndUpdate ( match , updateDocument , options ); if ( doc ) { // the document may not be found console . log ( doc ); }","title":"findOneAndUpdate() options"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#findoneandremove","text":"Declares this query a findAndModify with remove query. Alias of findOneAndDelete. Optionally pass a match clause, options. When executed, the first matching document (if found) is modified according to the update document, removed from the collection and passed as a result.","title":"findOneAndRemove()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#findoneandremove-options","text":"Options are passed to the setOptions() method. sort : if multiple docs are found by the condition, sets the sort order to choose which doc to modify and remove A . where (). findOneAndDelete () A . where (). findOneAndRemove () A . where (). findOneAndRemove ( match ) A . where (). findOneAndRemove ( match , options ) // the following all execute the command await A . where (). findOneAndRemove () await A . where (). findOneAndRemove ( match ) const doc = await A . where (). findOneAndRemove ( match , options ); if ( doc ) { // the document may not be found console . log ( doc ); }","title":"findOneAndRemove() options"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#distinct","text":"Declares this query a distinct query. Optionally pass the distinct field, a match clause. mquery (). distinct () mquery (). distinct ( match ) mquery (). distinct ( match , field ) mquery (). distinct ( field ) // the following all execute the command await mquery (). distinct () await mquery (). distinct ( field ) await mquery (). distinct ( match ) const result = await mquery (). distinct ( match , field ); console . log ( result );","title":"distinct()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#exec","text":"Executes the query. const docs = await mquery (). findOne (). where ( 'route' ). intersects ( polygon ). exec ()","title":"exec()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#stream","text":"Executes the query and returns a stream. var stream = mquery (). find (). stream ( options ); stream . on ( 'data' , cb ); stream . on ( 'close' , fn ); Note: this only works with find() operations. Note: returns the stream object directly from the node-mongodb-native driver. (currently streams1 type stream). Any options will be passed along to the driver method .","title":"stream()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#all","text":"Specifies an $all query condition mquery (). where ( 'permission' ). all ([ 'read' , 'write' ]) MongoDB documentation","title":"all()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#and","text":"Specifies arguments for an $and condition mquery (). and ([{ color : 'green' }, { status : 'ok' }]) MongoDB documentation","title":"and()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#box","text":"Specifies a $box condition var lowerLeft = [ 40.73083 , - 73.99756 ] var upperRight = [ 40.741404 , - 73.988135 ] mquery (). where ( 'location' ). within (). box ( lowerLeft , upperRight ) MongoDB Documentation","title":"box()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#circle","text":"Specifies a $center or $centerSphere condition. var area = { center : [ 50 , 50 ], radius : 10 , unique : true } query . where ( 'loc' ). within (). circle ( area ) query . circle ( 'loc' , area ); // for spherical calculations var area = { center : [ 50 , 50 ], radius : 10 , unique : true , spherical : true } query . where ( 'loc' ). within (). circle ( area ) query . circle ( 'loc' , area ); MongoDB Documentation - center MongoDB Documentation - centerSphere","title":"circle()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#elemmatch","text":"Specifies an $elemMatch condition query . where ( 'comment' ). elemMatch ({ author : 'autobot' , votes : { $gte : 5 }}) query . elemMatch ( 'comment' , function ( elem ) { elem . where ( 'author' ). equals ( 'autobot' ); elem . where ( 'votes' ). gte ( 5 ); }) MongoDB Documentation","title":"elemMatch()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#equals","text":"Specifies the complementary comparison value for the path specified with where() . mquery (). where ( 'age' ). equals ( 49 ); // is the same as mquery (). where ({ 'age' : 49 });","title":"equals()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#exists","text":"Specifies an $exists condition // { name: { $exists: true }} mquery (). where ( 'name' ). exists () mquery (). where ( 'name' ). exists ( true ) mquery (). exists ( 'name' ) // { name: { $exists: false }} mquery (). where ( 'name' ). exists ( false ); mquery (). exists ( 'name' , false ); MongoDB Documentation","title":"exists()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#geometry","text":"Specifies a $geometry condition var polyA = [[[ 10 , 20 ], [ 10 , 40 ], [ 30 , 40 ], [ 30 , 20 ]]] query . where ( 'loc' ). within (). geometry ({ type : 'Polygon' , coordinates : polyA }) // or var polyB = [[ 0 , 0 ], [ 1 , 1 ]] query . where ( 'loc' ). within (). geometry ({ type : 'LineString' , coordinates : polyB }) // or var polyC = [ 0 , 0 ] query . where ( 'loc' ). within (). geometry ({ type : 'Point' , coordinates : polyC }) // or query . where ( 'loc' ). intersects (). geometry ({ type : 'Point' , coordinates : polyC }) // or query . where ( 'loc' ). near (). geometry ({ type : 'Point' , coordinates : [ 3 , 5 ] }) geometry() must come after intersects() , within() , or near() . The object argument must contain type and coordinates properties. type String coordinates Array MongoDB Documentation","title":"geometry()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#gt","text":"Specifies a $gt query condition. mquery (). where ( 'clicks' ). gt ( 999 ) MongoDB Documentation","title":"gt()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#gte","text":"Specifies a $gte query condition. MongoDB Documentation mquery (). where ( 'clicks' ). gte ( 1000 )","title":"gte()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#in","text":"Specifies an $in query condition. mquery (). where ( 'author_id' ). in ([ 3 , 48901 , 761 ]) MongoDB Documentation","title":"in()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#intersects","text":"Declares an $geoIntersects query for geometry() . query . where ( 'path' ). intersects (). geometry ({ type : 'LineString' , coordinates : [[ 180.0 , 11.0 ], [ 180 , 9.0 ]] }) // geometry arguments are supported query . where ( 'path' ). intersects ({ type : 'LineString' , coordinates : [[ 180.0 , 11.0 ], [ 180 , 9.0 ]] }) Must be used after where() . MongoDB Documentation","title":"intersects()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#lt","text":"Specifies a $lt query condition. mquery (). where ( 'clicks' ). lt ( 50 ) MongoDB Documentation","title":"lt()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#lte","text":"Specifies a $lte query condition. mquery (). where ( 'clicks' ). lte ( 49 ) MongoDB Documentation","title":"lte()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#maxdistance","text":"Specifies a $maxDistance query condition. mquery (). where ( 'location' ). near ({ center : [ 139 , 74.3 ] }). maxDistance ( 5 ) MongoDB Documentation","title":"maxDistance()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#mod","text":"Specifies a $mod condition mquery (). where ( 'count' ). mod ( 2 , 0 ) MongoDB Documentation","title":"mod()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#ne","text":"Specifies a $ne query condition. mquery (). where ( 'status' ). ne ( 'ok' ) MongoDB Documentation","title":"ne()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#nin","text":"Specifies an $nin query condition. mquery (). where ( 'author_id' ). nin ([ 3 , 48901 , 761 ]) MongoDB Documentation","title":"nin()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#nor","text":"Specifies arguments for an $nor condition. mquery (). nor ([{ color : 'green' }, { status : 'ok' }]) MongoDB Documentation","title":"nor()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#near","text":"Specifies arguments for a $near or $nearSphere condition. These operators return documents sorted by distance.","title":"near()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#example","text":"query . where ( 'loc' ). near ({ center : [ 10 , 10 ] }); query . where ( 'loc' ). near ({ center : [ 10 , 10 ], maxDistance : 5 }); query . near ( 'loc' , { center : [ 10 , 10 ], maxDistance : 5 }); // GeoJSON query . where ( 'loc' ). near ({ center : { type : 'Point' , coordinates : [ 10 , 10 ] }}); query . where ( 'loc' ). near ({ center : { type : 'Point' , coordinates : [ 10 , 10 ] }, maxDistance : 5 , spherical : true }); query . where ( 'loc' ). near (). geometry ({ type : 'Point' , coordinates : [ 10 , 10 ] }); // For a $nearSphere condition, pass the `spherical` option. query . near ({ center : [ 10 , 10 ], maxDistance : 5 , spherical : true }); MongoDB Documentation","title":"Example"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#or","text":"Specifies arguments for an $or condition. mquery (). or ([{ color : 'red' }, { status : 'emergency' }]) MongoDB Documentation","title":"or()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#polygon","text":"Specifies a $polygon condition mquery (). where ( 'loc' ). within (). polygon ([ 10 , 20 ], [ 13 , 25 ], [ 7 , 15 ]) mquery (). polygon ( 'loc' , [ 10 , 20 ], [ 13 , 25 ], [ 7 , 15 ]) MongoDB Documentation","title":"polygon()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#regex","text":"Specifies a $regex query condition. mquery (). where ( 'name' ). regex ( /^sixstepsrecords/ ) MongoDB Documentation","title":"regex()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#select","text":"Specifies which document fields to include or exclude // 1 means include, 0 means exclude mquery (). select ({ name : 1 , address : 1 , _id : 0 }) // or mquery (). select ( 'name address -_id' )","title":"select()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#string-syntax","text":"When passing a string, prefixing a path with - will flag that path as excluded. When a path does not have the - prefix, it is included. // include a and b, exclude c query . select ( 'a b -c' ); // or you may use object notation, useful when // you have keys already prefixed with a \"-\" query . select ({ a : 1 , b : 1 , c : 0 }); Cannot be used with distinct() .","title":"String syntax"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#selected","text":"Determines if the query has selected any fields. var query = mquery (); query . selected () // false query . select ( '-name' ); query . selected () // true","title":"selected()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#selectedinclusively","text":"Determines if the query has selected any fields inclusively. var query = mquery (). select ( 'name' ); query . selectedInclusively () // true var query = mquery (); query . selected () // false query . select ( '-name' ); query . selectedInclusively () // false query . selectedExclusively () // true","title":"selectedInclusively()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#selectedexclusively","text":"Determines if the query has selected any fields exclusively. var query = mquery (). select ( '-name' ); query . selectedExclusively () // true var query = mquery (); query . selected () // false query . select ( 'name' ); query . selectedExclusively () // false query . selectedInclusively () // true","title":"selectedExclusively()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#size","text":"Specifies a $size query condition. mquery (). where ( 'someArray' ). size ( 6 ) MongoDB Documentation","title":"size()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#slice","text":"Specifies a $slice projection for a path mquery (). where ( 'comments' ). slice ( 5 ) mquery (). where ( 'comments' ). slice ( - 5 ) mquery (). where ( 'comments' ). slice ([ - 10 , 5 ]) MongoDB Documentation","title":"slice()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#within","text":"Sets a $geoWithin or $within argument for geo-spatial queries. mquery (). within (). box () mquery (). within (). circle () mquery (). within (). geometry () mquery (). where ( 'loc' ). within ({ center : [ 50 , 50 ], radius : 10 , unique : true , spherical : true }); mquery (). where ( 'loc' ). within ({ box : [[ 40.73 , - 73.9 ], [ 40.7 , - 73.988 ]] }); mquery (). where ( 'loc' ). within ({ polygon : [[],[],[],[]] }); mquery (). where ( 'loc' ). within ([], [], []) // polygon mquery (). where ( 'loc' ). within ([], []) // box mquery (). where ( 'loc' ). within ({ type : 'LineString' , coordinates : [...] }); // geometry As of mquery 2.0, $geoWithin is used by default. This impacts you if running MongoDB < 2.4. To alter this behavior, see mquery.use$geoWithin . Must be used after where() . MongoDB Documentation","title":"within()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#where","text":"Specifies a path for use with chaining // instead of writing: mquery (). find ({ age : { $gte : 21 , $lte : 65 }}); // we can instead write: mquery (). where ( 'age' ). gte ( 21 ). lte ( 65 ); // passing query conditions is permitted too mquery (). find (). where ({ name : 'vonderful' }) // chaining await mquery () . where ( 'age' ). gte ( 21 ). lte ( 65 ) . where ({ 'name' : /^vonderful/i }) . where ( 'friends' ). slice ( 10 ) . exec ()","title":"where()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#where_1","text":"Specifies a $where condition. Use $where when you need to select documents using a JavaScript expression. await query . $where ( 'this.comments.length > 10 || this.name.length > 5' ). exec () query . $where ( function () { return this . comments . length > 10 || this . name . length > 5 ; }) Only use $where when you have a condition that cannot be met using other MongoDB operators like $lt . Be sure to read about all of its caveats before using.","title":"$where()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#batchsize","text":"Specifies the batchSize option. query . batchSize ( 100 ) Cannot be used with distinct() . MongoDB documentation","title":"batchSize()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#collation","text":"Specifies the collation option. query . collation ({ locale : \"en_US\" , strength : 1 }) MongoDB documentation","title":"collation()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#comment","text":"Specifies the comment option. query . comment ( 'login query' ); Cannot be used with distinct() . MongoDB documentation","title":"comment()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#hint","text":"Sets query hints. mquery (). hint ({ indexA : 1 , indexB : - 1 }) Cannot be used with distinct() . MongoDB documentation","title":"hint()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#j","text":"Requests acknowledgement that this operation has been persisted to MongoDB's on-disk journal. This option is only valid for operations that write to the database: deleteOne() deleteMany() findOneAndDelete() findOneAndUpdate() updateOne() updateMany() Defaults to the j value if it is specified in writeConcern mquery (). j ( true );","title":"j()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#limit","text":"Specifies the limit option. query . limit ( 20 ) Cannot be used with distinct() . MongoDB documentation","title":"limit()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#maxtime","text":"Specifies the maxTimeMS option. query . maxTime ( 100 ) query . maxTimeMS ( 100 ) MongoDB documentation","title":"maxTime()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#skip","text":"Specifies the skip option. query . skip ( 100 ). limit ( 20 ) Cannot be used with distinct() . MongoDB documentation","title":"skip()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#sort","text":"Sets the query sort order. If an object is passed, key values allowed are asc , desc , ascending , descending , 1 , and -1 . If a string is passed, it must be a space delimited list of path names. The sort order of each path is ascending unless the path name is prefixed with - which will be treated as descending. // these are equivalent query . sort ({ field : 'asc' , test : - 1 }); query . sort ( 'field -test' ); Cannot be used with distinct() . MongoDB documentation","title":"sort()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#read","text":"Sets the readPreference option for the query. mquery (). read ( 'primary' ) mquery (). read ( 'p' ) // same as primary mquery (). read ( 'primaryPreferred' ) mquery (). read ( 'pp' ) // same as primaryPreferred mquery (). read ( 'secondary' ) mquery (). read ( 's' ) // same as secondary mquery (). read ( 'secondaryPreferred' ) mquery (). read ( 'sp' ) // same as secondaryPreferred mquery (). read ( 'nearest' ) mquery (). read ( 'n' ) // same as nearest mquery (). setReadPreference ( 'primary' ) // alias of .read()","title":"read()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#preferences","text":"primary - (default) Read from primary only. Operations will produce an error if primary is unavailable. Cannot be combined with tags. secondary - Read from secondary if available, otherwise error. primaryPreferred - Read from primary if available, otherwise a secondary. secondaryPreferred - Read from a secondary if available, otherwise read from the primary. nearest - All operations read from among the nearest candidates, but unlike other modes, this option will include both the primary and all secondaries in the random selection. Aliases p primary pp primaryPreferred s secondary sp secondaryPreferred n nearest","title":"Preferences:"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#preference-tags","text":"To keep the separation of concerns between mquery and your driver clean, mquery#read() no longer handles specifying a second tags argument as of version 0.5. If you need to specify tags, pass any non-string argument as the first argument. mquery will pass this argument untouched to your collections methods later. For example: // example of specifying tags using the Node.js driver var ReadPref = require ( 'mongodb' ). ReadPreference ; var preference = new ReadPref ( 'secondary' , [{ dc : 'sf' , s : 1 },{ dc : 'ma' , s : 2 }]); mquery (...). read ( preference ). exec (); Read more about how to use read preferences here and here .","title":"Preference Tags:"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#readconcern","text":"Sets the readConcern option for the query. // local mquery (). readConcern ( 'local' ) mquery (). readConcern ( 'l' ) mquery (). r ( 'l' ) // available mquery (). readConcern ( 'available' ) mquery (). readConcern ( 'a' ) mquery (). r ( 'a' ) // majority mquery (). readConcern ( 'majority' ) mquery (). readConcern ( 'm' ) mquery (). r ( 'm' ) // linearizable mquery (). readConcern ( 'linearizable' ) mquery (). readConcern ( 'lz' ) mquery (). r ( 'lz' ) // snapshot mquery (). readConcern ( 'snapshot' ) mquery (). readConcern ( 's' ) mquery (). r ( 's' )","title":"readConcern()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#read-concern-level","text":"local - The query returns from the instance with no guarantee guarantee that the data has been written to a majority of the replica set members (i.e. may be rolled back). (MongoDB 3.2+) available - The query returns from the instance with no guarantee guarantee that the data has been written to a majority of the replica set members (i.e. may be rolled back). (MongoDB 3.6+) majority - The query returns the data that has been acknowledged by a majority of the replica set members. The documents returned by the read operation are durable, even in the event of failure. (MongoDB 3.2+) linearizable - The query returns data that reflects all successful majority-acknowledged writes that completed prior to the start of the read operation. The query may wait for concurrently executing writes to propagate to a majority of replica set members before returning results. (MongoDB 3.4+) snapshot - Only available for operations within multi-document transactions. Upon transaction commit with write concern \"majority\", the transaction operations are guaranteed to have read from a snapshot of majority-committed data. (MongoDB 4.0+) Aliases l local a available m majority lz linearizable s snapshot Read more about how to use read concern here .","title":"Read Concern Level:"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#writeconcern","text":"Sets the writeConcern option for the query. This option is only valid for operations that write to the database: deleteOne() deleteMany() findOneAndDelete() findOneAndUpdate() updateOne() updateMany() mquery (). writeConcern ( 0 ) mquery (). writeConcern ( 1 ) mquery (). writeConcern ({ w : 1 , j : true , wtimeout : 2000 }) mquery (). writeConcern ( 'majority' ) mquery (). writeConcern ( 'm' ) // same as majority mquery (). writeConcern ( 'tagSetName' ) // if the tag set is 'm', use .writeConcern({ w: 'm' }) instead mquery (). w ( 1 ) // w is alias of writeConcern","title":"writeConcern()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#write-concern","text":"writeConcern({ w: <value> , j: <boolean> , wtimeout: <number> }`) the w option to request acknowledgement that the write operation has propagated to a specified number of mongod instances or to mongod instances with specified tags the j option to request acknowledgement that the write operation has been written to the journal the wtimeout option to specify a time limit to prevent write operations from blocking indefinitely Can be break down to use the following syntax: mquery().w( <value> ).j( <boolean> ).wtimeout( <number> ) Read more about how to use write concern here","title":"Write Concern:"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#slaveok","text":"Sets the slaveOk option. true allows reading from secondaries. deprecated use read() preferences instead if on mongodb >= 2.2 query . slaveOk () // true query . slaveOk ( true ) query . slaveOk ( false ) MongoDB documentation","title":"slaveOk()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#tailable","text":"Sets tailable option. mquery (). tailable () <== true mquery (). tailable ( true ) mquery (). tailable ( false ) Cannot be used with distinct() . MongoDB Documentation","title":"tailable()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#wtimeout","text":"Specifies a time limit, in milliseconds, for the write concern. If w > 1 , it is maximum amount of time to wait for this write to propagate through the replica set before this operation fails. The default is 0 , which means no timeout. This option is only valid for operations that write to the database: deleteOne() deleteMany() findOneAndDelete() findOneAndUpdate() updateOne() updateMany() Defaults to wtimeout value if it is specified in writeConcern mquery (). wtimeout ( 2000 ) mquery (). wTimeout ( 2000 )","title":"wtimeout()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#helpers_1","text":"","title":"Helpers"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#collection","text":"Sets the querys collection. mquery (). collection ( aCollection )","title":"collection()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#then","text":"Executes the query and returns a promise which will be resolved with the query results or rejected if the query responds with an error. mquery (). find (..). then ( success , error ); This is very useful when combined with co or koa , which automatically resolve promise-like objects for you. co ( function * (){ var doc = yield mquery (). findOne ({ _id : 499 }); console . log ( doc ); // { _id: 499, name: 'amazing', .. } })(); NOTE : The returned promise is a bluebird promise but this is customizable. If you want to use your favorite promise library, simply set mquery.Promise = YourPromiseConstructor . Your Promise must be promises A+ compliant.","title":"then()"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#mergeobject","text":"Merges other mquery or match condition objects into this one. When an mquery instance is passed, its match conditions, field selection and options are merged. const drum = mquery ({ type : 'drum' }). collection ( instruments ); const redDrum = mquery ({ color : 'red' }). merge ( drum ); const n = await redDrum . count (); console . log ( 'there are %d red drums' , n ); Internally uses mquery.canMerge to determine validity.","title":"merge(object)"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#setoptionsoptions","text":"Sets query options. mquery (). setOptions ({ collection : coll , limit : 20 })","title":"setOptions(options)"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#setoptions-options","text":"tailable * sort * limit * skip * maxTime * batchSize * comment * hint * collection : the collection to query against * denotes a query helper method is also available","title":"setOptions() options"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#settracefunctionfunc","text":"Set a function to trace this query. Useful for profiling or logging. function traceFunction ( method , queryInfo , query ) { console . log ( 'starting ' + method + ' query' ); return function ( err , result , millis ) { console . log ( 'finished ' + method + ' query in ' + millis + 'ms' ); }; } mquery (). setTraceFunction ( traceFunction ). findOne ({ name : 'Joe' }, cb ); The trace function is passed (method, queryInfo, query) method is the name of the method being called (e.g. findOne) queryInfo contains information about the query: conditions: query conditions/criteria options: options such as sort, fields, etc doc: document being updated query is the query object The trace function should return a callback function which accepts: - err: error, if any - result: result, if any - millis: time spent waiting for query result NOTE: stream requests are not traced.","title":"setTraceFunction(func)"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#mquerysetglobaltracefunctionfunc","text":"Similar to setTraceFunction() but automatically applied to all queries. mquery . setTraceFunction ( traceFunction );","title":"mquery.setGlobalTraceFunction(func)"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#mquerycanmergeconditions","text":"Determines if conditions can be merged using mquery().merge() . var query = mquery ({ type : 'drum' }); var okToMerge = mquery . canMerge ( anObject ) if ( okToMerge ) { query . merge ( anObject ); }","title":"mquery.canMerge(conditions)"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#mqueryusegeowithin","text":"MongoDB 2.4 introduced the $geoWithin operator which replaces and is 100% backward compatible with $within . As of mquery 0.2, we default to using $geoWithin for all within() calls. If you are running MongoDB < 2.4 this will be problematic. To force mquery to be backward compatible and always use $within , set the mquery.use$geoWithin flag to false . mquery . use$geoWithin = false ;","title":"mquery.use$geoWithin"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#custom-base-queries","text":"Often times we want custom base queries that encapsulate predefined criteria. With mquery this is easy. First create the query you want to reuse and call its toConstructor() method which returns a new subclass of mquery that retains all options and criteria of the original. var greatMovies = mquery ( movieCollection ). where ( 'rating' ). gte ( 4.5 ). toConstructor (); // use it! const n = await greatMovies (). count (); console . log ( 'There are %d great movies' , n ); const docs = await greatMovies (). where ({ name : /^Life/ }). select ( 'name' ). find (); console . log ( docs );","title":"Custom Base Queries"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#validation","text":"Method and options combinations are checked for validity at runtime to prevent creation of invalid query constructs. For example, a distinct query does not support specifying options like hint or field selection. In this case an error will be thrown so you can catch these mistakes in development.","title":"Validation"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#debug-support","text":"Debug mode is provided through the use of the debug module. To enable: DEBUG = mquery node yourprogram.js Read the debug module documentation for more details.","title":"Debug support"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#general-compatibility","text":"","title":"General compatibility"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#objectids","text":"mquery clones query arguments before passing them to a collection method for execution. This prevents accidental side-affects to the objects you pass. To clone ObjectIds we need to make some assumptions. First, to check if an object is an ObjectId , we check its constructors name. If it matches either ObjectId or ObjectID we clone it. To clone ObjectIds , we call its optional clone method. If a clone method does not exist, we fall back to calling new obj.constructor(obj.id) . We assume, for compatibility with the Node.js driver, that the ObjectId instance has a public id property and that when creating an ObjectId instance we can pass that id as an argument.","title":"ObjectIds"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#read-preferences","text":"mquery supports specifying Read Preferences to control from which MongoDB node your query will read. The Read Preferences spec also support specifying tags. To pass tags, some drivers (Node.js driver) require passing a special constructor that handles both the read preference and its tags. If you need to specify tags, pass an instance of your drivers ReadPreference constructor or roll your own. mquery will store whatever you provide and pass later to your collection during execution.","title":"Read Preferences"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#future-goals","text":"mongo shell compatibility browser compatibility","title":"Future goals"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#installation","text":"npm install mquery","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/","text":"5.0.0 / 2023-02-23 BREAKING CHANGE: drop callback support #137 hasezoey BREAKING CHANGE: remove custom promise library support #137 hasezoey BREAKING CHANGE: remove long deprecated update , remove functions #136 hasezoey BREAKING CHANGE: remove collection ducktyping: first param to mquery() is now always the query filter #138 feat: support MongoDB Node driver 5 #137 hasezoey 4.0.3 / 2022-05-17 fix: allow using comment with findOneAndUpdate() , count() , distinct() and hint with findOneAndUpdate() Automattic/mongoose#11793 4.0.2 / 2022-01-23 perf: replace regexp-clone with native functionality #131 Uzlopak 4.0.1 / 2022-01-20 perf: remove sliced, add various microoptimizations #130 Uzlopak refactor: convert NodeCollection to a class #128 jimmywarting 4.0.0 / 2021-08-24 4.0.0-rc0 / 2021-08-19 BREAKING CHANGE: drop support for Node < 12 #123 BREAKING CHANGE: upgrade to mongodb driver 4.x: drop support for findAndModify() , use native findOneAndUpdate/Delete #124 BREAKING CHANGE: rename findStream -> findCursor #124 BREAKING CHANGE: use native ES6 promises by default, remove bluebird dependency #123 3.2.5 / 2021-03-29 fix(utils): make mergeClone() skip special properties like __proto__ #121 zpbrent 3.2.4 / 2021-02-12 fix(utils): make clone() only copy own properties Automattic/mongoose#9876 3.2.3 / 2020-12-10 fix(utils): avoid copying special properties like __proto__ when merging and cloning. Fix CVE-2020-35149 3.2.2 / 2019-09-22 fix: dont re-call setOptions() when pulling base class options Automattic/mongoose#8159 3.2.1 / 2018-08-24 chore: upgrade deps 3.2.0 / 2018-08-24 feat: add $useProjection to opt in to using projection instead of fields re: MongoDB deprecation warnings Automattic/mongoose#6880 3.1.2 / 2018-08-01 chore: move eslint to devDependencies #110 jakesjews 3.1.1 / 2018-07-30 chore: add eslint #107 Fonger docs: clean up readConcern docs #106 Fonger 3.1.0 / 2018-07-29 feat: add readConcern() helper #105 Fonger feat: add maxTimeMS() as alias of maxTime() #105 Fonger feat: add collation() helper #105 Fonger 3.0.1 / 2018-07-02 fix: parse sort array options correctly #103 #102 Fonger 3.0.0 / 2018-01-20 chore: upgrade deps and add nsp 3.0.0-rc0 / 2017-12-06 BREAKING CHANGE: remove support for node < 4 BREAKING CHANGE: remove support for retainKeyOrder, will always be true by default re: Automattic/mongoose#2749 2.3.3 / 2017-11-19 fixed; catch sync errors in cursor.toArray() re: Automattic/mongoose#5812 2.3.2 / 2017-09-27 fixed; bumped debug -> 2.6.9 re: #89 2.3.1 / 2017-05-22 fixed; bumped debug -> 2.6.7 re: #86 2.3.0 / 2017-03-05 added; replaceOne function added; deleteOne and deleteMany functions 2.2.3 / 2017-01-31 fixed; throw correct error when passing incorrectly formatted array to sort() 2.2.2 / 2017-01-31 fixed; allow passing maps to sort() 2.2.1 / 2017-01-29 fixed; allow passing string to hint() 2.2.0 / 2017-01-08 added; updateOne and updateMany functions 2.1.0 / 2016-12-22 added; ability to pass an array to select() #81 dciccale 2.0.0 / 2016-09-25 added; support for mongodb driver 2.0 streams 1.12.0 / 2016-09-25 added; retainKeyOrder option re: Automattic/mongoose#4542 1.11.0 / 2016-06-04 added; .minDistance() helper and minDistance for .near() Automattic/mongoose#4179 1.10.1 / 2016-04-26 fixed; ensure conditions is an object before assigning #75 1.10.0 / 2016-03-16 updated; bluebird to latest 2.10.2 version #74 matskiv 1.9.0 / 2016-03-15 added; .eq as a shortcut for .equals #72 Fonger added; ability to use array syntax for sort re: https://jira.mongodb.org/browse/NODE-578 #67 1.8.0 / 2016-03-01 fixed; dont throw an error if count used with sort or select Automattic/mongoose#3914 1.7.0 / 2016-02-23 fixed; don't treat objects with a length property as argument objects #70 added; .findCursor() method #69 nswbmw added; _compiledUpdate property #68 nswbmw 1.6.2 / 2015-07-12 fixed; support exec cb being called synchronously #66 1.6.1 / 2015-06-16 fixed; do not treat $meta projection as inclusive vkarpov15 1.6.0 / 2015-05-27 update dependencies #65 bachp 1.5.0 / 2015-03-31 fixed; debug output fixed; allow hint usage with count #61 trueinsider 1.4.0 / 2015-03-29 added; object support to slice() #60 vkarpov15 debug; improved output #57 flyvictor 1.3.0 / 2014-11-06 added; setTraceFunction() #53 from jlai 1.2.1 / 2014-09-26 fixed; distinct assignment in toConstructor() #51 from esco 1.2.0 / 2014-09-18 added; stream() support for find() 1.1.0 / 2014-09-15 add #then for co / koa support start checking code coverage 1.0.0 / 2014-07-07 Remove broken require() calls until they're actually implemented #48 vkarpov15 0.9.0 / 2014-05-22 added; thunk() support release 0.8.0 0.8.0 / 2014-05-15 added; support for maxTimeMS #44 yoitsro updated; devDependency (driver to 1.4.4) 0.7.0 / 2014-05-02 fixed; pass $maxDistance in $near object as described in docs #43 vkarpov15 fixed; cloning buffers #42 gjohnson tests; a little bit more mongodb agnostic #34 refack 0.6.0 / 2014-04-01 fixed; Allow $meta args in sort() so text search sorting works #37 vkarpov15 0.5.3 / 2014-02-22 fixed; cloning mongodb.Binary 0.5.2 / 2014-01-30 fixed; cloning ObjectId constructors fixed; cloning of ReadPreferences #30 ashtuchkin tests; use specific mongodb version #29 AvianFlu tests; remove dependency on ObjectId #28 refack tests; add failing ReadPref test 0.5.1 / 2014-01-17 added; deprecation notice to tags parameter #27 ashtuchkin readme; add links 0.5.0 / 2014-01-16 removed; mongodb driver dependency #26 ashtuchkin removed; first class support of read preference tags #26 (still supported though) ashtuchkin added; better ObjectId clone support fixed; cloning objects that have no constructor #21 docs; cleaned up ashtuchkin 0.4.2 / 2014-01-08 updated; debug module 0.7.4 refack 0.4.1 / 2014-01-07 fixed; inclusive/exclusive logic 0.4.0 / 2014-01-06 added; selected() added; selectedInclusively() added; selectedExclusively() 0.3.3 / 2013-11-14 Fix Mongo DB Dependency #20 rschmukler 0.3.2 / 2013-09-06 added; geometry support for near() 0.3.1 / 2013-08-22 fixed; update retains key order #19 0.3.0 / 2013-08-22 less hardcoded isNode env detection #18 vshulyak added; validation of findAndModify varients clone update doc before execution stricter env checks 0.2.7 / 2013-08-2 Now support GeoJSON point values for Query#near 0.2.6 / 2013-07-30 internally, 'asc' and 'desc' for sorts are now converted into 1 and -1, respectively 0.2.5 / 2013-07-30 updated docs changed internal representation of sort to use objects instead of arrays 0.2.4 / 2013-07-25 updated; sliced to 0.0.5 0.2.3 / 2013-07-09 now using a callback in collection.find instead of directly calling toArray() on the cursor ebensing 0.2.2 / 2013-07-09 now exposing mongodb export to allow for better testing ebensing 0.2.1 / 2013-07-08 select no longer accepts arrays as parameters ebensing 0.2.0 / 2013-07-05 use $geoWithin by default 0.1.2 / 2013-07-02 added use$geoWithin flag ebensing fix read preferences typo ebensing fix reference to old param name in exists() ebensing 0.1.1 / 2013-06-24 fixed; $intersects -> $geoIntersects #14 ebensing fixed; Retain key order when copying objects #15 ebensing bump mongodb dev dep 0.1.0 / 2013-05-06 findAndModify; return the query move mquery.proto.canMerge to mquery.canMerge overwrite option now works with non-empty objects use strict mode validate count options validate distinct options add aggregate to base collection methods clone merge arguments clone merged update arguments move subclass to mquery.prototype.toConstructor fixed; maxScan casing use regexp-clone added; geometry/intersects support support $and near: do not use \"radius\" callbacks always fire on next turn of loop defined collection interface remove time from tests clarify goals updated docs; 0.0.1 / 2012-12-15 initial release","title":"5.0.0 / 2023-02-23"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#500-2023-02-23","text":"BREAKING CHANGE: drop callback support #137 hasezoey BREAKING CHANGE: remove custom promise library support #137 hasezoey BREAKING CHANGE: remove long deprecated update , remove functions #136 hasezoey BREAKING CHANGE: remove collection ducktyping: first param to mquery() is now always the query filter #138 feat: support MongoDB Node driver 5 #137 hasezoey","title":"5.0.0 / 2023-02-23"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#403-2022-05-17","text":"fix: allow using comment with findOneAndUpdate() , count() , distinct() and hint with findOneAndUpdate() Automattic/mongoose#11793","title":"4.0.3 / 2022-05-17"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#402-2022-01-23","text":"perf: replace regexp-clone with native functionality #131 Uzlopak","title":"4.0.2 / 2022-01-23"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#401-2022-01-20","text":"perf: remove sliced, add various microoptimizations #130 Uzlopak refactor: convert NodeCollection to a class #128 jimmywarting 4.0.0 / 2021-08-24","title":"4.0.1 / 2022-01-20"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#400-rc0-2021-08-19","text":"BREAKING CHANGE: drop support for Node < 12 #123 BREAKING CHANGE: upgrade to mongodb driver 4.x: drop support for findAndModify() , use native findOneAndUpdate/Delete #124 BREAKING CHANGE: rename findStream -> findCursor #124 BREAKING CHANGE: use native ES6 promises by default, remove bluebird dependency #123","title":"4.0.0-rc0 / 2021-08-19"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#325-2021-03-29","text":"fix(utils): make mergeClone() skip special properties like __proto__ #121 zpbrent","title":"3.2.5 / 2021-03-29"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#324-2021-02-12","text":"fix(utils): make clone() only copy own properties Automattic/mongoose#9876","title":"3.2.4 / 2021-02-12"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#323-2020-12-10","text":"fix(utils): avoid copying special properties like __proto__ when merging and cloning. Fix CVE-2020-35149","title":"3.2.3 / 2020-12-10"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#322-2019-09-22","text":"fix: dont re-call setOptions() when pulling base class options Automattic/mongoose#8159","title":"3.2.2 / 2019-09-22"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#321-2018-08-24","text":"chore: upgrade deps","title":"3.2.1 / 2018-08-24"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#320-2018-08-24","text":"feat: add $useProjection to opt in to using projection instead of fields re: MongoDB deprecation warnings Automattic/mongoose#6880","title":"3.2.0 / 2018-08-24"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#312-2018-08-01","text":"chore: move eslint to devDependencies #110 jakesjews","title":"3.1.2 / 2018-08-01"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#311-2018-07-30","text":"chore: add eslint #107 Fonger docs: clean up readConcern docs #106 Fonger","title":"3.1.1 / 2018-07-30"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#310-2018-07-29","text":"feat: add readConcern() helper #105 Fonger feat: add maxTimeMS() as alias of maxTime() #105 Fonger feat: add collation() helper #105 Fonger","title":"3.1.0 / 2018-07-29"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#301-2018-07-02","text":"fix: parse sort array options correctly #103 #102 Fonger","title":"3.0.1 / 2018-07-02"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#300-2018-01-20","text":"chore: upgrade deps and add nsp","title":"3.0.0 / 2018-01-20"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#300-rc0-2017-12-06","text":"BREAKING CHANGE: remove support for node < 4 BREAKING CHANGE: remove support for retainKeyOrder, will always be true by default re: Automattic/mongoose#2749","title":"3.0.0-rc0 / 2017-12-06"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#233-2017-11-19","text":"fixed; catch sync errors in cursor.toArray() re: Automattic/mongoose#5812","title":"2.3.3 / 2017-11-19"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#232-2017-09-27","text":"fixed; bumped debug -> 2.6.9 re: #89","title":"2.3.2 / 2017-09-27"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#231-2017-05-22","text":"fixed; bumped debug -> 2.6.7 re: #86","title":"2.3.1 / 2017-05-22"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#230-2017-03-05","text":"added; replaceOne function added; deleteOne and deleteMany functions","title":"2.3.0 / 2017-03-05"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#223-2017-01-31","text":"fixed; throw correct error when passing incorrectly formatted array to sort()","title":"2.2.3 / 2017-01-31"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#222-2017-01-31","text":"fixed; allow passing maps to sort()","title":"2.2.2 / 2017-01-31"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#221-2017-01-29","text":"fixed; allow passing string to hint()","title":"2.2.1 / 2017-01-29"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#220-2017-01-08","text":"added; updateOne and updateMany functions","title":"2.2.0 / 2017-01-08"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#210-2016-12-22","text":"added; ability to pass an array to select() #81 dciccale","title":"2.1.0 / 2016-12-22"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#200-2016-09-25","text":"added; support for mongodb driver 2.0 streams","title":"2.0.0 / 2016-09-25"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#1120-2016-09-25","text":"added; retainKeyOrder option re: Automattic/mongoose#4542","title":"1.12.0 / 2016-09-25"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#1110-2016-06-04","text":"added; .minDistance() helper and minDistance for .near() Automattic/mongoose#4179","title":"1.11.0 / 2016-06-04"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#1101-2016-04-26","text":"fixed; ensure conditions is an object before assigning #75","title":"1.10.1 / 2016-04-26"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#1100-2016-03-16","text":"updated; bluebird to latest 2.10.2 version #74 matskiv","title":"1.10.0 / 2016-03-16"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#190-2016-03-15","text":"added; .eq as a shortcut for .equals #72 Fonger added; ability to use array syntax for sort re: https://jira.mongodb.org/browse/NODE-578 #67","title":"1.9.0 / 2016-03-15"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#180-2016-03-01","text":"fixed; dont throw an error if count used with sort or select Automattic/mongoose#3914","title":"1.8.0 / 2016-03-01"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#170-2016-02-23","text":"fixed; don't treat objects with a length property as argument objects #70 added; .findCursor() method #69 nswbmw added; _compiledUpdate property #68 nswbmw","title":"1.7.0 / 2016-02-23"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#162-2015-07-12","text":"fixed; support exec cb being called synchronously #66","title":"1.6.2 / 2015-07-12"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#161-2015-06-16","text":"fixed; do not treat $meta projection as inclusive vkarpov15","title":"1.6.1 / 2015-06-16"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#160-2015-05-27","text":"update dependencies #65 bachp","title":"1.6.0 / 2015-05-27"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#150-2015-03-31","text":"fixed; debug output fixed; allow hint usage with count #61 trueinsider","title":"1.5.0 / 2015-03-31"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#140-2015-03-29","text":"added; object support to slice() #60 vkarpov15 debug; improved output #57 flyvictor","title":"1.4.0 / 2015-03-29"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#130-2014-11-06","text":"added; setTraceFunction() #53 from jlai","title":"1.3.0 / 2014-11-06"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#121-2014-09-26","text":"fixed; distinct assignment in toConstructor() #51 from esco","title":"1.2.1 / 2014-09-26"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#120-2014-09-18","text":"added; stream() support for find()","title":"1.2.0 / 2014-09-18"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#110-2014-09-15","text":"add #then for co / koa support start checking code coverage","title":"1.1.0 / 2014-09-15"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#100-2014-07-07","text":"Remove broken require() calls until they're actually implemented #48 vkarpov15","title":"1.0.0 / 2014-07-07"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#090-2014-05-22","text":"added; thunk() support release 0.8.0","title":"0.9.0 / 2014-05-22"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#080-2014-05-15","text":"added; support for maxTimeMS #44 yoitsro updated; devDependency (driver to 1.4.4)","title":"0.8.0 / 2014-05-15"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#070-2014-05-02","text":"fixed; pass $maxDistance in $near object as described in docs #43 vkarpov15 fixed; cloning buffers #42 gjohnson tests; a little bit more mongodb agnostic #34 refack","title":"0.7.0 / 2014-05-02"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#060-2014-04-01","text":"fixed; Allow $meta args in sort() so text search sorting works #37 vkarpov15","title":"0.6.0 / 2014-04-01"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#053-2014-02-22","text":"fixed; cloning mongodb.Binary","title":"0.5.3 / 2014-02-22"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#052-2014-01-30","text":"fixed; cloning ObjectId constructors fixed; cloning of ReadPreferences #30 ashtuchkin tests; use specific mongodb version #29 AvianFlu tests; remove dependency on ObjectId #28 refack tests; add failing ReadPref test","title":"0.5.2 / 2014-01-30"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#051-2014-01-17","text":"added; deprecation notice to tags parameter #27 ashtuchkin readme; add links","title":"0.5.1 / 2014-01-17"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#050-2014-01-16","text":"removed; mongodb driver dependency #26 ashtuchkin removed; first class support of read preference tags #26 (still supported though) ashtuchkin added; better ObjectId clone support fixed; cloning objects that have no constructor #21 docs; cleaned up ashtuchkin","title":"0.5.0 / 2014-01-16"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#042-2014-01-08","text":"updated; debug module 0.7.4 refack","title":"0.4.2 / 2014-01-08"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#041-2014-01-07","text":"fixed; inclusive/exclusive logic","title":"0.4.1 / 2014-01-07"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#040-2014-01-06","text":"added; selected() added; selectedInclusively() added; selectedExclusively()","title":"0.4.0 / 2014-01-06"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#033-2013-11-14","text":"Fix Mongo DB Dependency #20 rschmukler","title":"0.3.3 / 2013-11-14"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#032-2013-09-06","text":"added; geometry support for near()","title":"0.3.2 / 2013-09-06"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#031-2013-08-22","text":"fixed; update retains key order #19","title":"0.3.1 / 2013-08-22"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#030-2013-08-22","text":"less hardcoded isNode env detection #18 vshulyak added; validation of findAndModify varients clone update doc before execution stricter env checks","title":"0.3.0 / 2013-08-22"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#027-2013-08-2","text":"Now support GeoJSON point values for Query#near","title":"0.2.7 / 2013-08-2"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#026-2013-07-30","text":"internally, 'asc' and 'desc' for sorts are now converted into 1 and -1, respectively","title":"0.2.6 / 2013-07-30"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#025-2013-07-30","text":"updated docs changed internal representation of sort to use objects instead of arrays","title":"0.2.5 / 2013-07-30"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#024-2013-07-25","text":"updated; sliced to 0.0.5","title":"0.2.4 / 2013-07-25"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#023-2013-07-09","text":"now using a callback in collection.find instead of directly calling toArray() on the cursor ebensing","title":"0.2.3 / 2013-07-09"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#022-2013-07-09","text":"now exposing mongodb export to allow for better testing ebensing","title":"0.2.2 / 2013-07-09"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#021-2013-07-08","text":"select no longer accepts arrays as parameters ebensing","title":"0.2.1 / 2013-07-08"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#020-2013-07-05","text":"use $geoWithin by default","title":"0.2.0 / 2013-07-05"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#012-2013-07-02","text":"added use$geoWithin flag ebensing fix read preferences typo ebensing fix reference to old param name in exists() ebensing","title":"0.1.2 / 2013-07-02"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#011-2013-06-24","text":"fixed; $intersects -> $geoIntersects #14 ebensing fixed; Retain key order when copying objects #15 ebensing bump mongodb dev dep","title":"0.1.1 / 2013-06-24"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#010-2013-05-06","text":"findAndModify; return the query move mquery.proto.canMerge to mquery.canMerge overwrite option now works with non-empty objects use strict mode validate count options validate distinct options add aggregate to base collection methods clone merge arguments clone merged update arguments move subclass to mquery.prototype.toConstructor fixed; maxScan casing use regexp-clone added; geometry/intersects support support $and near: do not use \"radius\" callbacks always fire on next turn of loop defined collection interface remove time from tests clarify goals updated docs;","title":"0.1.0 / 2013-05-06"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#001-2012-12-15","text":"initial release","title":"0.0.1 / 2012-12-15"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/SECURITY/","text":"Please follow the instructions on Tidelift's security page to report a security issue.","title":"SECURITY"},{"location":"system-desing/crud-app/JS/server/node_modules/ms/license/","text":"The MIT License (MIT) Copyright (c) 2020 Vercel, Inc. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/ms/readme/","text":"ms Use this package to easily convert various time formats to milliseconds. Examples ms ( '2 days' ) // 172800000 ms ( '1d' ) // 86400000 ms ( '10h' ) // 36000000 ms ( '2.5 hrs' ) // 9000000 ms ( '2h' ) // 7200000 ms ( '1m' ) // 60000 ms ( '5s' ) // 5000 ms ( '1y' ) // 31557600000 ms ( '100' ) // 100 ms ( '-3 days' ) // -259200000 ms ( '-1h' ) // -3600000 ms ( '-200' ) // -200 Convert from Milliseconds ms ( 60000 ) // \"1m\" ms ( 2 * 60000 ) // \"2m\" ms ( - 3 * 60000 ) // \"-3m\" ms ( ms ( '10 hours' )) // \"10h\" Time Format Written-Out ms ( 60000 , { long : true }) // \"1 minute\" ms ( 2 * 60000 , { long : true }) // \"2 minutes\" ms ( - 3 * 60000 , { long : true }) // \"-3 minutes\" ms ( ms ( '10 hours' ), { long : true }) // \"10 hours\" Features Works both in Node.js and in the browser If a number is supplied to ms , a string with a unit is returned If a string that contains the number is supplied, it returns it as a number (e.g.: it returns 100 for '100' ) If you pass a string with a number and a valid unit, the number of equivalent milliseconds is returned Related Packages ms.macro - Run ms as a macro at build-time. Caught a Bug? Fork this repository to your own GitHub account and then clone it to your local device Link the package to the global module directory: npm link Within the module you want to test your local development instance of ms, just link it to the dependencies: npm link ms . Instead of the default one from npm, Node.js will now use your clone of ms! As always, you can run the tests using: npm test","title":"ms"},{"location":"system-desing/crud-app/JS/server/node_modules/ms/readme/#ms","text":"Use this package to easily convert various time formats to milliseconds.","title":"ms"},{"location":"system-desing/crud-app/JS/server/node_modules/ms/readme/#examples","text":"ms ( '2 days' ) // 172800000 ms ( '1d' ) // 86400000 ms ( '10h' ) // 36000000 ms ( '2.5 hrs' ) // 9000000 ms ( '2h' ) // 7200000 ms ( '1m' ) // 60000 ms ( '5s' ) // 5000 ms ( '1y' ) // 31557600000 ms ( '100' ) // 100 ms ( '-3 days' ) // -259200000 ms ( '-1h' ) // -3600000 ms ( '-200' ) // -200","title":"Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/ms/readme/#convert-from-milliseconds","text":"ms ( 60000 ) // \"1m\" ms ( 2 * 60000 ) // \"2m\" ms ( - 3 * 60000 ) // \"-3m\" ms ( ms ( '10 hours' )) // \"10h\"","title":"Convert from Milliseconds"},{"location":"system-desing/crud-app/JS/server/node_modules/ms/readme/#time-format-written-out","text":"ms ( 60000 , { long : true }) // \"1 minute\" ms ( 2 * 60000 , { long : true }) // \"2 minutes\" ms ( - 3 * 60000 , { long : true }) // \"-3 minutes\" ms ( ms ( '10 hours' ), { long : true }) // \"10 hours\"","title":"Time Format Written-Out"},{"location":"system-desing/crud-app/JS/server/node_modules/ms/readme/#features","text":"Works both in Node.js and in the browser If a number is supplied to ms , a string with a unit is returned If a string that contains the number is supplied, it returns it as a number (e.g.: it returns 100 for '100' ) If you pass a string with a number and a valid unit, the number of equivalent milliseconds is returned","title":"Features"},{"location":"system-desing/crud-app/JS/server/node_modules/ms/readme/#related-packages","text":"ms.macro - Run ms as a macro at build-time.","title":"Related Packages"},{"location":"system-desing/crud-app/JS/server/node_modules/ms/readme/#caught-a-bug","text":"Fork this repository to your own GitHub account and then clone it to your local device Link the package to the global module directory: npm link Within the module you want to test your local development instance of ms, just link it to the dependencies: npm link ms . Instead of the default one from npm, Node.js will now use your clone of ms! As always, you can run the tests using: npm test","title":"Caught a Bug?"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/","text":"negotiator An HTTP content negotiator for Node.js Installation $ npm install negotiator API var Negotiator = require ( 'negotiator' ) Accept Negotiation availableMediaTypes = [ 'text/html' , 'text/plain' , 'application/json' ] // The negotiator constructor receives a request object negotiator = new Negotiator ( request ) // Let's say Accept header is 'text/html, application/*;q=0.2, image/jpeg;q=0.8' negotiator . mediaTypes () // -> ['text/html', 'image/jpeg', 'application/*'] negotiator . mediaTypes ( availableMediaTypes ) // -> ['text/html', 'application/json'] negotiator . mediaType ( availableMediaTypes ) // -> 'text/html' You can check a working example at examples/accept.js . Methods mediaType() Returns the most preferred media type from the client. mediaType(availableMediaType) Returns the most preferred media type from a list of available media types. mediaTypes() Returns an array of preferred media types ordered by the client preference. mediaTypes(availableMediaTypes) Returns an array of preferred media types ordered by priority from a list of available media types. Accept-Language Negotiation negotiator = new Negotiator ( request ) availableLanguages = [ 'en' , 'es' , 'fr' ] // Let's say Accept-Language header is 'en;q=0.8, es, pt' negotiator . languages () // -> ['es', 'pt', 'en'] negotiator . languages ( availableLanguages ) // -> ['es', 'en'] language = negotiator . language ( availableLanguages ) // -> 'es' You can check a working example at examples/language.js . Methods language() Returns the most preferred language from the client. language(availableLanguages) Returns the most preferred language from a list of available languages. languages() Returns an array of preferred languages ordered by the client preference. languages(availableLanguages) Returns an array of preferred languages ordered by priority from a list of available languages. Accept-Charset Negotiation availableCharsets = [ 'utf-8' , 'iso-8859-1' , 'iso-8859-5' ] negotiator = new Negotiator ( request ) // Let's say Accept-Charset header is 'utf-8, iso-8859-1;q=0.8, utf-7;q=0.2' negotiator . charsets () // -> ['utf-8', 'iso-8859-1', 'utf-7'] negotiator . charsets ( availableCharsets ) // -> ['utf-8', 'iso-8859-1'] negotiator . charset ( availableCharsets ) // -> 'utf-8' You can check a working example at examples/charset.js . Methods charset() Returns the most preferred charset from the client. charset(availableCharsets) Returns the most preferred charset from a list of available charsets. charsets() Returns an array of preferred charsets ordered by the client preference. charsets(availableCharsets) Returns an array of preferred charsets ordered by priority from a list of available charsets. Accept-Encoding Negotiation availableEncodings = [ 'identity' , 'gzip' ] negotiator = new Negotiator ( request ) // Let's say Accept-Encoding header is 'gzip, compress;q=0.2, identity;q=0.5' negotiator . encodings () // -> ['gzip', 'identity', 'compress'] negotiator . encodings ( availableEncodings ) // -> ['gzip', 'identity'] negotiator . encoding ( availableEncodings ) // -> 'gzip' You can check a working example at examples/encoding.js . Methods encoding() Returns the most preferred encoding from the client. encoding(availableEncodings) Returns the most preferred encoding from a list of available encodings. encoding(availableEncodings, { preferred }) Returns the most preferred encoding from a list of available encodings, while prioritizing based on preferred array between same-quality encodings. encodings() Returns an array of preferred encodings ordered by the client preference. encodings(availableEncodings) Returns an array of preferred encodings ordered by priority from a list of available encodings. encodings(availableEncodings, { preferred }) Returns an array of preferred encodings ordered by priority from a list of available encodings, while prioritizing based on preferred array between same-quality encodings. See Also The accepts module builds on this module and provides an alternative interface, mime type validation, and more. License MIT","title":"negotiator"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#negotiator","text":"An HTTP content negotiator for Node.js","title":"negotiator"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#installation","text":"$ npm install negotiator","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#api","text":"var Negotiator = require ( 'negotiator' )","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#accept-negotiation","text":"availableMediaTypes = [ 'text/html' , 'text/plain' , 'application/json' ] // The negotiator constructor receives a request object negotiator = new Negotiator ( request ) // Let's say Accept header is 'text/html, application/*;q=0.2, image/jpeg;q=0.8' negotiator . mediaTypes () // -> ['text/html', 'image/jpeg', 'application/*'] negotiator . mediaTypes ( availableMediaTypes ) // -> ['text/html', 'application/json'] negotiator . mediaType ( availableMediaTypes ) // -> 'text/html' You can check a working example at examples/accept.js .","title":"Accept Negotiation"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#methods","text":"","title":"Methods"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#mediatype","text":"Returns the most preferred media type from the client.","title":"mediaType()"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#mediatypeavailablemediatype","text":"Returns the most preferred media type from a list of available media types.","title":"mediaType(availableMediaType)"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#mediatypes","text":"Returns an array of preferred media types ordered by the client preference.","title":"mediaTypes()"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#mediatypesavailablemediatypes","text":"Returns an array of preferred media types ordered by priority from a list of available media types.","title":"mediaTypes(availableMediaTypes)"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#accept-language-negotiation","text":"negotiator = new Negotiator ( request ) availableLanguages = [ 'en' , 'es' , 'fr' ] // Let's say Accept-Language header is 'en;q=0.8, es, pt' negotiator . languages () // -> ['es', 'pt', 'en'] negotiator . languages ( availableLanguages ) // -> ['es', 'en'] language = negotiator . language ( availableLanguages ) // -> 'es' You can check a working example at examples/language.js .","title":"Accept-Language Negotiation"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#methods_1","text":"","title":"Methods"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#language","text":"Returns the most preferred language from the client.","title":"language()"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#languageavailablelanguages","text":"Returns the most preferred language from a list of available languages.","title":"language(availableLanguages)"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#languages","text":"Returns an array of preferred languages ordered by the client preference.","title":"languages()"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#languagesavailablelanguages","text":"Returns an array of preferred languages ordered by priority from a list of available languages.","title":"languages(availableLanguages)"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#accept-charset-negotiation","text":"availableCharsets = [ 'utf-8' , 'iso-8859-1' , 'iso-8859-5' ] negotiator = new Negotiator ( request ) // Let's say Accept-Charset header is 'utf-8, iso-8859-1;q=0.8, utf-7;q=0.2' negotiator . charsets () // -> ['utf-8', 'iso-8859-1', 'utf-7'] negotiator . charsets ( availableCharsets ) // -> ['utf-8', 'iso-8859-1'] negotiator . charset ( availableCharsets ) // -> 'utf-8' You can check a working example at examples/charset.js .","title":"Accept-Charset Negotiation"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#methods_2","text":"","title":"Methods"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#charset","text":"Returns the most preferred charset from the client.","title":"charset()"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#charsetavailablecharsets","text":"Returns the most preferred charset from a list of available charsets.","title":"charset(availableCharsets)"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#charsets","text":"Returns an array of preferred charsets ordered by the client preference.","title":"charsets()"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#charsetsavailablecharsets","text":"Returns an array of preferred charsets ordered by priority from a list of available charsets.","title":"charsets(availableCharsets)"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#accept-encoding-negotiation","text":"availableEncodings = [ 'identity' , 'gzip' ] negotiator = new Negotiator ( request ) // Let's say Accept-Encoding header is 'gzip, compress;q=0.2, identity;q=0.5' negotiator . encodings () // -> ['gzip', 'identity', 'compress'] negotiator . encodings ( availableEncodings ) // -> ['gzip', 'identity'] negotiator . encoding ( availableEncodings ) // -> 'gzip' You can check a working example at examples/encoding.js .","title":"Accept-Encoding Negotiation"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#methods_3","text":"","title":"Methods"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#encoding","text":"Returns the most preferred encoding from the client.","title":"encoding()"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#encodingavailableencodings","text":"Returns the most preferred encoding from a list of available encodings.","title":"encoding(availableEncodings)"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#encodingavailableencodings-preferred","text":"Returns the most preferred encoding from a list of available encodings, while prioritizing based on preferred array between same-quality encodings.","title":"encoding(availableEncodings, { preferred })"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#encodings","text":"Returns an array of preferred encodings ordered by the client preference.","title":"encodings()"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#encodingsavailableencodings","text":"Returns an array of preferred encodings ordered by priority from a list of available encodings.","title":"encodings(availableEncodings)"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#encodingsavailableencodings-preferred","text":"Returns an array of preferred encodings ordered by priority from a list of available encodings, while prioritizing based on preferred array between same-quality encodings.","title":"encodings(availableEncodings, { preferred })"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#see-also","text":"The accepts module builds on this module and provides an alternative interface, mime type validation, and more.","title":"See Also"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/","text":"1.0.0 / 2024-08-31 Drop support for node <18 Added an option preferred encodings array #59 0.6.3 / 2022-01-22 Revert \"Lazy-load modules from main entry point\" 0.6.2 / 2019-04-29 Fix sorting charset, encoding, and language with extra parameters 0.6.1 / 2016-05-02 perf: improve Accept parsing speed perf: improve Accept-Charset parsing speed perf: improve Accept-Encoding parsing speed perf: improve Accept-Language parsing speed 0.6.0 / 2015-09-29 Fix including type extensions in parameters in Accept parsing Fix parsing Accept parameters with quoted equals Fix parsing Accept parameters with quoted semicolons Lazy-load modules from main entry point perf: delay type concatenation until needed perf: enable strict mode perf: hoist regular expressions perf: remove closures getting spec properties perf: remove a closure from media type parsing perf: remove property delete from media type parsing 0.5.3 / 2015-05-10 Fix media type parameter matching to be case-insensitive 0.5.2 / 2015-05-06 Fix comparing media types with quoted values Fix splitting media types with quoted commas 0.5.1 / 2015-02-14 Fix preference sorting to be stable for long acceptable lists 0.5.0 / 2014-12-18 Fix list return order when large accepted list Fix missing identity encoding when q=0 exists Remove dynamic building of Negotiator class 0.4.9 / 2014-10-14 Fix error when media type has invalid parameter 0.4.8 / 2014-09-28 Fix all negotiations to be case-insensitive Stable sort preferences of same quality according to client order Support Node.js 0.6 0.4.7 / 2014-06-24 Handle invalid provided languages Handle invalid provided media types 0.4.6 / 2014-06-11 Order by specificity when quality is the same 0.4.5 / 2014-05-29 Fix regression in empty header handling 0.4.4 / 2014-05-29 Fix behaviors when headers are not present 0.4.3 / 2014-04-16 Handle slashes on media params correctly 0.4.2 / 2014-02-28 Fix media type sorting Handle media types params strictly 0.4.1 / 2014-01-16 Use most specific matches 0.4.0 / 2014-01-09 Remove preferred prefix from methods","title":"1.0.0 / 2024-08-31"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#100-2024-08-31","text":"Drop support for node <18 Added an option preferred encodings array #59","title":"1.0.0 / 2024-08-31"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#063-2022-01-22","text":"Revert \"Lazy-load modules from main entry point\"","title":"0.6.3 / 2022-01-22"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#062-2019-04-29","text":"Fix sorting charset, encoding, and language with extra parameters","title":"0.6.2 / 2019-04-29"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#061-2016-05-02","text":"perf: improve Accept parsing speed perf: improve Accept-Charset parsing speed perf: improve Accept-Encoding parsing speed perf: improve Accept-Language parsing speed","title":"0.6.1 / 2016-05-02"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#060-2015-09-29","text":"Fix including type extensions in parameters in Accept parsing Fix parsing Accept parameters with quoted equals Fix parsing Accept parameters with quoted semicolons Lazy-load modules from main entry point perf: delay type concatenation until needed perf: enable strict mode perf: hoist regular expressions perf: remove closures getting spec properties perf: remove a closure from media type parsing perf: remove property delete from media type parsing","title":"0.6.0 / 2015-09-29"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#053-2015-05-10","text":"Fix media type parameter matching to be case-insensitive","title":"0.5.3 / 2015-05-10"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#052-2015-05-06","text":"Fix comparing media types with quoted values Fix splitting media types with quoted commas","title":"0.5.2 / 2015-05-06"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#051-2015-02-14","text":"Fix preference sorting to be stable for long acceptable lists","title":"0.5.1 / 2015-02-14"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#050-2014-12-18","text":"Fix list return order when large accepted list Fix missing identity encoding when q=0 exists Remove dynamic building of Negotiator class","title":"0.5.0 / 2014-12-18"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#049-2014-10-14","text":"Fix error when media type has invalid parameter","title":"0.4.9 / 2014-10-14"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#048-2014-09-28","text":"Fix all negotiations to be case-insensitive Stable sort preferences of same quality according to client order Support Node.js 0.6","title":"0.4.8 / 2014-09-28"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#047-2014-06-24","text":"Handle invalid provided languages Handle invalid provided media types","title":"0.4.7 / 2014-06-24"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#046-2014-06-11","text":"Order by specificity when quality is the same","title":"0.4.6 / 2014-06-11"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#045-2014-05-29","text":"Fix regression in empty header handling","title":"0.4.5 / 2014-05-29"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#044-2014-05-29","text":"Fix behaviors when headers are not present","title":"0.4.4 / 2014-05-29"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#043-2014-04-16","text":"Handle slashes on media params correctly","title":"0.4.3 / 2014-04-16"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#042-2014-02-28","text":"Fix media type sorting Handle media types params strictly","title":"0.4.2 / 2014-02-28"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#041-2014-01-16","text":"Use most specific matches","title":"0.4.1 / 2014-01-16"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#040-2014-01-09","text":"Remove preferred prefix from methods","title":"0.4.0 / 2014-01-09"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/","text":"nodemon nodemon is a tool that helps develop Node.js based applications by automatically restarting the node application when file changes in the directory are detected. nodemon does not require any additional changes to your code or method of development. nodemon is a replacement wrapper for node . To use nodemon , replace the word node on the command line when executing your script. Installation Either through cloning with git or by using npm (the recommended way): npm install -g nodemon # or using yarn: yarn global add nodemon And nodemon will be installed globally to your system path. You can also install nodemon as a development dependency: npm install --save-dev nodemon # or using yarn: yarn add nodemon -D With a local installation, nodemon will not be available in your system path or you can't use it directly from the command line. Instead, the local installation of nodemon can be run by calling it from within an npm script (such as npm start ) or using npx nodemon . Usage nodemon wraps your application, so you can pass all the arguments you would normally pass to your app: nodemon [ your node app ] For CLI options, use the -h (or --help ) argument: nodemon -h Using nodemon is simple, if my application accepted a host and port as the arguments, I would start it as so: nodemon ./server.js localhost 8080 Any output from this script is prefixed with [nodemon] , otherwise all output from your application, errors included, will be echoed out as expected. You can also pass the inspect flag to node through the command line as you would normally: nodemon --inspect ./server.js 80 If you have a package.json file for your app, you can omit the main script entirely and nodemon will read the package.json for the main property and use that value as the app ( ref ). nodemon will also search for the scripts.start property in package.json (as of nodemon 1.1.x). Also check out the FAQ or issues for nodemon. Automatic re-running nodemon was originally written to restart hanging processes such as web servers, but now supports apps that cleanly exit. If your script exits cleanly, nodemon will continue to monitor the directory (or directories) and restart the script if there are any changes. Manual restarting Whilst nodemon is running, if you need to manually restart your application, instead of stopping and restart nodemon, you can type rs with a carriage return, and nodemon will restart your process. Config files nodemon supports local and global configuration files. These are usually named nodemon.json and can be located in the current working directory or in your home directory. An alternative local configuration file can be specified with the --config <file> option. The specificity is as follows, so that a command line argument will always override the config file settings: command line arguments local config global config A config file can take any of the command line arguments as JSON key values, for example: { \"verbose\" : true , \"ignore\" : [ \"*.test.js\" , \"**/fixtures/**\" ], \"execMap\" : { \"rb\" : \"ruby\" , \"pde\" : \"processing --sketch={{pwd}} --run\" } } The above nodemon.json file might be my global config so that I have support for ruby files and processing files, and I can run nodemon demo.pde and nodemon will automatically know how to run the script even though out of the box support for processing scripts. A further example of options can be seen in sample-nodemon.md package.json If you want to keep all your package configurations in one place, nodemon supports using package.json for configuration. Specify the config in the same format as you would for a config file but under nodemonConfig in the package.json file, for example, take the following package.json : { \"name\" : \"nodemon\" , \"homepage\" : \"http://nodemon.io\" , \"...\" : \"... other standard package.json values\" , \"nodemonConfig\" : { \"ignore\" : [ \"**/test/**\" , \"**/docs/**\" ], \"delay\" : 2500 } } Note that if you specify a --config file or provide a local nodemon.json any package.json config is ignored. This section needs better documentation, but for now you can also see nodemon --help config ( also here ) . Using nodemon as a module Please see doc/requireable.md Using nodemon as child process Please see doc/events.md Running non-node scripts nodemon can also be used to execute and monitor other programs. nodemon will read the file extension of the script being run and monitor that extension instead of .js if there's no nodemon.json : nodemon --exec \"python -v\" ./app.py Now nodemon will run app.py with python in verbose mode (note that if you're not passing args to the exec program, you don't need the quotes), and look for new or modified files with the .py extension. Default executables Using the nodemon.json config file, you can define your own default executables using the execMap property. This is particularly useful if you're working with a language that isn't supported by default by nodemon. To add support for nodemon to know about the .pl extension (for Perl), the nodemon.json file would add: { \"execMap\" : { \"pl\" : \"perl\" } } Now running the following, nodemon will know to use perl as the executable: nodemon script.pl It's generally recommended to use the global nodemon.json to add your own execMap options. However, if there's a common default that's missing, this can be merged in to the project so that nodemon supports it by default, by changing default.js and sending a pull request. Monitoring multiple directories By default nodemon monitors the current working directory. If you want to take control of that option, use the --watch option to add specific paths: nodemon --watch app --watch libs app/server.js Now nodemon will only restart if there are changes in the ./app or ./libs directory. By default nodemon will traverse sub-directories, so there's no need in explicitly including sub-directories. Nodemon also supports unix globbing, e.g --watch './lib/*' . The globbing pattern must be quoted. For advanced globbing, see picomatch documentation , the library that nodemon uses through chokidar (which in turn uses it through anymatch ). Specifying extension watch list By default, nodemon looks for files with the .js , .mjs , .coffee , .litcoffee , and .json extensions. If you use the --exec option and monitor app.py nodemon will monitor files with the extension of .py . However, you can specify your own list with the -e (or --ext ) switch like so: nodemon -e js,pug Now nodemon will restart on any changes to files in the directory (or subdirectories) with the extensions .js , .pug . Ignoring files By default, nodemon will only restart when a .js JavaScript file changes. In some cases you will want to ignore some specific files, directories or file patterns, to prevent nodemon from prematurely restarting your application. This can be done via the command line: nodemon --ignore lib/ --ignore tests/ Or specific files can be ignored: nodemon --ignore lib/app.js Patterns can also be ignored (but be sure to quote the arguments): nodemon --ignore 'lib/*.js' Important the ignore rules are patterns matched to the full absolute path, and this determines how many files are monitored. If using a wild card glob pattern, it needs to be used as ** or omitted entirely. For example, nodemon --ignore '**/test/**' will work, whereas --ignore '*/test/*' will not. Note that by default, nodemon will ignore the .git , node_modules , bower_components , .nyc_output , coverage and .sass-cache directories and add your ignored patterns to the list. If you want to indeed watch a directory like node_modules , you need to override the underlying default ignore rules . Application isn't restarting In some networked environments (such as a container running nodemon reading across a mounted drive), you will need to use the legacyWatch: true which enables Chokidar's polling. Via the CLI, use either --legacy-watch or -L for short: nodemon -L Though this should be a last resort as it will poll every file it can find. Delaying restarting In some situations, you may want to wait until a number of files have changed. The timeout before checking for new file changes is 1 second. If you're uploading a number of files and it's taking some number of seconds, this could cause your app to restart multiple times unnecessarily. To add an extra throttle, or delay restarting, use the --delay command: nodemon --delay 10 server.js For more precision, milliseconds can be specified. Either as a float: nodemon --delay 2 .5 server.js Or using the time specifier (ms): nodemon --delay 2500ms server.js The delay figure is number of seconds (or milliseconds, if specified) to delay before restarting. So nodemon will only restart your app the given number of seconds after the last file change. If you are setting this value in nodemon.json , the value will always be interpreted in milliseconds. E.g., the following are equivalent: nodemon --delay 2 .5 { \"delay\" : 2500 } Gracefully reloading down your script It is possible to have nodemon send any signal that you specify to your application. nodemon --signal SIGHUP server.js Your application can handle the signal as follows. process . on ( \"SIGHUP\" , function () { reloadSomeConfiguration (); process . kill ( process . pid , \"SIGTERM\" ); }) Please note that nodemon will send this signal to every process in the process tree. If you are using cluster , then each workers (as well as the master) will receive the signal. If you wish to terminate all workers on receiving a SIGHUP , a common pattern is to catch the SIGHUP in the master, and forward SIGTERM to all workers, while ensuring that all workers ignore SIGHUP . if ( cluster . isMaster ) { process . on ( \"SIGHUP\" , function () { for ( const worker of Object . values ( cluster . workers )) { worker . process . kill ( \"SIGTERM\" ); } }); } else { process . on ( \"SIGHUP\" , function () {}) } Controlling shutdown of your script nodemon sends a kill signal to your application when it sees a file update. If you need to clean up on shutdown inside your script you can capture the kill signal and handle it yourself. The following example will listen once for the SIGUSR2 signal (used by nodemon to restart), run the clean up process and then kill itself for nodemon to continue control: // important to use `on` and not `once` as nodemon can re-send the kill signal process . on ( 'SIGUSR2' , function () { gracefulShutdown ( function () { process . kill ( process . pid , 'SIGTERM' ); }); }); Note that the process.kill is only called once your shutdown jobs are complete. Hat tip to Benjie Gillam for writing this technique up. Triggering events when nodemon state changes If you want growl like notifications when nodemon restarts or to trigger an action when an event happens, then you can either require nodemon or add event actions to your nodemon.json file. For example, to trigger a notification on a Mac when nodemon restarts, nodemon.json looks like this: { \"events\" : { \"restart\" : \"osascript -e 'display notification \\\"app restarted\\\" with title \\\"nodemon\\\"'\" } } A full list of available events is listed on the event states wiki . Note that you can bind to both states and messages. Pipe output to somewhere else nodemon ({ script : ..., stdout : false // important: this tells nodemon not to output to console }). on ( 'readable' , function () { // the `readable` event indicates that data is ready to pick up this . stdout . pipe ( fs . createWriteStream ( 'output.txt' )); this . stderr . pipe ( fs . createWriteStream ( 'err.txt' )); }); Using nodemon in your gulp workflow Check out the gulp-nodemon plugin to integrate nodemon with the rest of your project's gulp workflow. Using nodemon in your Grunt workflow Check out the grunt-nodemon plugin to integrate nodemon with the rest of your project's grunt workflow. Pronunciation nodemon, is it pronounced: node-mon, no-demon or node-e-mon (like pok\u00e9mon)? Well...I've been asked this many times before. I like that I've been asked this before. There's been bets as to which one it actually is. The answer is simple, but possibly frustrating. I'm not saying (how I pronounce it). It's up to you to call it as you like. All answers are correct :) Design principles Fewer flags is better Works across all platforms Fewer features Let individuals build on top of nodemon Offer all CLI functionality as an API Contributions must have and pass tests Nodemon is not perfect, and CLI arguments has sprawled beyond where I'm completely happy, but perhaps it can be reduced a little one day. FAQ See the FAQ and please add your own questions if you think they would help others. Backers Thank you to all our backers ! \ud83d\ude4f Sponsors Support this project by becoming a sponsor. Your logo will show up here with a link to your website. Sponsor this project today \u2764\ufe0f Please note that links to the sponsors above are not direct endorsements nor affiliated with any of contributors of the nodemon project. License MIT http://rem.mit-license.org","title":"Index"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#nodemon","text":"nodemon is a tool that helps develop Node.js based applications by automatically restarting the node application when file changes in the directory are detected. nodemon does not require any additional changes to your code or method of development. nodemon is a replacement wrapper for node . To use nodemon , replace the word node on the command line when executing your script.","title":"nodemon"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#installation","text":"Either through cloning with git or by using npm (the recommended way): npm install -g nodemon # or using yarn: yarn global add nodemon And nodemon will be installed globally to your system path. You can also install nodemon as a development dependency: npm install --save-dev nodemon # or using yarn: yarn add nodemon -D With a local installation, nodemon will not be available in your system path or you can't use it directly from the command line. Instead, the local installation of nodemon can be run by calling it from within an npm script (such as npm start ) or using npx nodemon .","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#usage","text":"nodemon wraps your application, so you can pass all the arguments you would normally pass to your app: nodemon [ your node app ] For CLI options, use the -h (or --help ) argument: nodemon -h Using nodemon is simple, if my application accepted a host and port as the arguments, I would start it as so: nodemon ./server.js localhost 8080 Any output from this script is prefixed with [nodemon] , otherwise all output from your application, errors included, will be echoed out as expected. You can also pass the inspect flag to node through the command line as you would normally: nodemon --inspect ./server.js 80 If you have a package.json file for your app, you can omit the main script entirely and nodemon will read the package.json for the main property and use that value as the app ( ref ). nodemon will also search for the scripts.start property in package.json (as of nodemon 1.1.x). Also check out the FAQ or issues for nodemon.","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#automatic-re-running","text":"nodemon was originally written to restart hanging processes such as web servers, but now supports apps that cleanly exit. If your script exits cleanly, nodemon will continue to monitor the directory (or directories) and restart the script if there are any changes.","title":"Automatic re-running"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#manual-restarting","text":"Whilst nodemon is running, if you need to manually restart your application, instead of stopping and restart nodemon, you can type rs with a carriage return, and nodemon will restart your process.","title":"Manual restarting"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#config-files","text":"nodemon supports local and global configuration files. These are usually named nodemon.json and can be located in the current working directory or in your home directory. An alternative local configuration file can be specified with the --config <file> option. The specificity is as follows, so that a command line argument will always override the config file settings: command line arguments local config global config A config file can take any of the command line arguments as JSON key values, for example: { \"verbose\" : true , \"ignore\" : [ \"*.test.js\" , \"**/fixtures/**\" ], \"execMap\" : { \"rb\" : \"ruby\" , \"pde\" : \"processing --sketch={{pwd}} --run\" } } The above nodemon.json file might be my global config so that I have support for ruby files and processing files, and I can run nodemon demo.pde and nodemon will automatically know how to run the script even though out of the box support for processing scripts. A further example of options can be seen in sample-nodemon.md","title":"Config files"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#packagejson","text":"If you want to keep all your package configurations in one place, nodemon supports using package.json for configuration. Specify the config in the same format as you would for a config file but under nodemonConfig in the package.json file, for example, take the following package.json : { \"name\" : \"nodemon\" , \"homepage\" : \"http://nodemon.io\" , \"...\" : \"... other standard package.json values\" , \"nodemonConfig\" : { \"ignore\" : [ \"**/test/**\" , \"**/docs/**\" ], \"delay\" : 2500 } } Note that if you specify a --config file or provide a local nodemon.json any package.json config is ignored. This section needs better documentation, but for now you can also see nodemon --help config ( also here ) .","title":"package.json"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#using-nodemon-as-a-module","text":"Please see doc/requireable.md","title":"Using nodemon as a module"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#using-nodemon-as-child-process","text":"Please see doc/events.md","title":"Using nodemon as child process"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#running-non-node-scripts","text":"nodemon can also be used to execute and monitor other programs. nodemon will read the file extension of the script being run and monitor that extension instead of .js if there's no nodemon.json : nodemon --exec \"python -v\" ./app.py Now nodemon will run app.py with python in verbose mode (note that if you're not passing args to the exec program, you don't need the quotes), and look for new or modified files with the .py extension.","title":"Running non-node scripts"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#default-executables","text":"Using the nodemon.json config file, you can define your own default executables using the execMap property. This is particularly useful if you're working with a language that isn't supported by default by nodemon. To add support for nodemon to know about the .pl extension (for Perl), the nodemon.json file would add: { \"execMap\" : { \"pl\" : \"perl\" } } Now running the following, nodemon will know to use perl as the executable: nodemon script.pl It's generally recommended to use the global nodemon.json to add your own execMap options. However, if there's a common default that's missing, this can be merged in to the project so that nodemon supports it by default, by changing default.js and sending a pull request.","title":"Default executables"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#monitoring-multiple-directories","text":"By default nodemon monitors the current working directory. If you want to take control of that option, use the --watch option to add specific paths: nodemon --watch app --watch libs app/server.js Now nodemon will only restart if there are changes in the ./app or ./libs directory. By default nodemon will traverse sub-directories, so there's no need in explicitly including sub-directories. Nodemon also supports unix globbing, e.g --watch './lib/*' . The globbing pattern must be quoted. For advanced globbing, see picomatch documentation , the library that nodemon uses through chokidar (which in turn uses it through anymatch ).","title":"Monitoring multiple directories"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#specifying-extension-watch-list","text":"By default, nodemon looks for files with the .js , .mjs , .coffee , .litcoffee , and .json extensions. If you use the --exec option and monitor app.py nodemon will monitor files with the extension of .py . However, you can specify your own list with the -e (or --ext ) switch like so: nodemon -e js,pug Now nodemon will restart on any changes to files in the directory (or subdirectories) with the extensions .js , .pug .","title":"Specifying extension watch list"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#ignoring-files","text":"By default, nodemon will only restart when a .js JavaScript file changes. In some cases you will want to ignore some specific files, directories or file patterns, to prevent nodemon from prematurely restarting your application. This can be done via the command line: nodemon --ignore lib/ --ignore tests/ Or specific files can be ignored: nodemon --ignore lib/app.js Patterns can also be ignored (but be sure to quote the arguments): nodemon --ignore 'lib/*.js' Important the ignore rules are patterns matched to the full absolute path, and this determines how many files are monitored. If using a wild card glob pattern, it needs to be used as ** or omitted entirely. For example, nodemon --ignore '**/test/**' will work, whereas --ignore '*/test/*' will not. Note that by default, nodemon will ignore the .git , node_modules , bower_components , .nyc_output , coverage and .sass-cache directories and add your ignored patterns to the list. If you want to indeed watch a directory like node_modules , you need to override the underlying default ignore rules .","title":"Ignoring files"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#application-isnt-restarting","text":"In some networked environments (such as a container running nodemon reading across a mounted drive), you will need to use the legacyWatch: true which enables Chokidar's polling. Via the CLI, use either --legacy-watch or -L for short: nodemon -L Though this should be a last resort as it will poll every file it can find.","title":"Application isn't restarting"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#delaying-restarting","text":"In some situations, you may want to wait until a number of files have changed. The timeout before checking for new file changes is 1 second. If you're uploading a number of files and it's taking some number of seconds, this could cause your app to restart multiple times unnecessarily. To add an extra throttle, or delay restarting, use the --delay command: nodemon --delay 10 server.js For more precision, milliseconds can be specified. Either as a float: nodemon --delay 2 .5 server.js Or using the time specifier (ms): nodemon --delay 2500ms server.js The delay figure is number of seconds (or milliseconds, if specified) to delay before restarting. So nodemon will only restart your app the given number of seconds after the last file change. If you are setting this value in nodemon.json , the value will always be interpreted in milliseconds. E.g., the following are equivalent: nodemon --delay 2 .5 { \"delay\" : 2500 }","title":"Delaying restarting"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#gracefully-reloading-down-your-script","text":"It is possible to have nodemon send any signal that you specify to your application. nodemon --signal SIGHUP server.js Your application can handle the signal as follows. process . on ( \"SIGHUP\" , function () { reloadSomeConfiguration (); process . kill ( process . pid , \"SIGTERM\" ); }) Please note that nodemon will send this signal to every process in the process tree. If you are using cluster , then each workers (as well as the master) will receive the signal. If you wish to terminate all workers on receiving a SIGHUP , a common pattern is to catch the SIGHUP in the master, and forward SIGTERM to all workers, while ensuring that all workers ignore SIGHUP . if ( cluster . isMaster ) { process . on ( \"SIGHUP\" , function () { for ( const worker of Object . values ( cluster . workers )) { worker . process . kill ( \"SIGTERM\" ); } }); } else { process . on ( \"SIGHUP\" , function () {}) }","title":"Gracefully reloading down your script"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#controlling-shutdown-of-your-script","text":"nodemon sends a kill signal to your application when it sees a file update. If you need to clean up on shutdown inside your script you can capture the kill signal and handle it yourself. The following example will listen once for the SIGUSR2 signal (used by nodemon to restart), run the clean up process and then kill itself for nodemon to continue control: // important to use `on` and not `once` as nodemon can re-send the kill signal process . on ( 'SIGUSR2' , function () { gracefulShutdown ( function () { process . kill ( process . pid , 'SIGTERM' ); }); }); Note that the process.kill is only called once your shutdown jobs are complete. Hat tip to Benjie Gillam for writing this technique up.","title":"Controlling shutdown of your script"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#triggering-events-when-nodemon-state-changes","text":"If you want growl like notifications when nodemon restarts or to trigger an action when an event happens, then you can either require nodemon or add event actions to your nodemon.json file. For example, to trigger a notification on a Mac when nodemon restarts, nodemon.json looks like this: { \"events\" : { \"restart\" : \"osascript -e 'display notification \\\"app restarted\\\" with title \\\"nodemon\\\"'\" } } A full list of available events is listed on the event states wiki . Note that you can bind to both states and messages.","title":"Triggering events when nodemon state changes"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#pipe-output-to-somewhere-else","text":"nodemon ({ script : ..., stdout : false // important: this tells nodemon not to output to console }). on ( 'readable' , function () { // the `readable` event indicates that data is ready to pick up this . stdout . pipe ( fs . createWriteStream ( 'output.txt' )); this . stderr . pipe ( fs . createWriteStream ( 'err.txt' )); });","title":"Pipe output to somewhere else"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#using-nodemon-in-your-gulp-workflow","text":"Check out the gulp-nodemon plugin to integrate nodemon with the rest of your project's gulp workflow.","title":"Using nodemon in your gulp workflow"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#using-nodemon-in-your-grunt-workflow","text":"Check out the grunt-nodemon plugin to integrate nodemon with the rest of your project's grunt workflow.","title":"Using nodemon in your Grunt workflow"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#pronunciation","text":"nodemon, is it pronounced: node-mon, no-demon or node-e-mon (like pok\u00e9mon)? Well...I've been asked this many times before. I like that I've been asked this before. There's been bets as to which one it actually is. The answer is simple, but possibly frustrating. I'm not saying (how I pronounce it). It's up to you to call it as you like. All answers are correct :)","title":"Pronunciation"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#design-principles","text":"Fewer flags is better Works across all platforms Fewer features Let individuals build on top of nodemon Offer all CLI functionality as an API Contributions must have and pass tests Nodemon is not perfect, and CLI arguments has sprawled beyond where I'm completely happy, but perhaps it can be reduced a little one day.","title":"Design principles"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#faq","text":"See the FAQ and please add your own questions if you think they would help others.","title":"FAQ"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#backers","text":"Thank you to all our backers ! \ud83d\ude4f","title":"Backers"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#sponsors","text":"Support this project by becoming a sponsor. Your logo will show up here with a link to your website. Sponsor this project today \u2764\ufe0f Please note that links to the sponsors above are not direct endorsements nor affiliated with any of contributors of the nodemon project.","title":"Sponsors"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#license","text":"MIT http://rem.mit-license.org","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/normalize-path/","text":"normalize-path Normalize slashes in a file path to be posix/unix-like forward slashes. Also condenses repeat slashes to a single slash and removes and trailing slashes, unless disabled. Please consider following this project's author, Jon Schlinkert , and consider starring the project to show your and support. Install Install with npm : $ npm install --save normalize-path Usage const normalize = require ( 'normalize-path' ); console . log ( normalize ( '\\\\foo\\\\bar\\\\baz\\\\' )); //=> '/foo/bar/baz' win32 namespaces console . log ( normalize ( '\\\\\\\\?\\\\UNC\\\\Server01\\\\user\\\\docs\\\\Letter.txt' )); //=> '//?/UNC/Server01/user/docs/Letter.txt' console . log ( normalize ( '\\\\\\\\.\\\\CdRomX' )); //=> '//./CdRomX' Consecutive slashes Condenses multiple consecutive forward slashes (except for leading slashes in win32 namespaces) to a single slash. console . log ( normalize ( './/foo//bar///////baz/' )); //=> './foo/bar/baz' Trailing slashes By default trailing slashes are removed. Pass false as the last argument to disable this behavior and keep trailing slashes : console . log ( normalize ( 'foo\\\\bar\\\\baz\\\\' , false )); //=> 'foo/bar/baz/' console . log ( normalize ( './foo/bar/baz/' , false )); //=> './foo/bar/baz/' Release history v3.0 No breaking changes in this release. a check was added to ensure that win32 namespaces are handled properly by win32 path.parse() after a path has been normalized by this library. a minor optimization was made to simplify how the trailing separator was handled About Contributing Pull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new). Running Tests Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command: $ npm install && npm test Building docs _(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_ To generate the readme, run the following command: $ npm install -g verbose/verb#dev verb-generate-readme && verb Related projects Other useful path-related libraries: contains-path : Return true if a file path contains the given path. | homepage is-absolute : Returns true if a file path is absolute. Does not rely on the path module\u2026 more | homepage is-relative : Returns true if the path appears to be relative. | homepage parse-filepath : Pollyfill for node.js path.parse , parses a filepath into an object. | homepage path-ends-with : Return true if a file path ends with the given string/suffix. | homepage unixify : Convert Windows file paths to unix paths. | homepage Contributors Commits Contributor 35 jonschlinkert 1 phated Author Jon Schlinkert LinkedIn Profile GitHub Profile Twitter Profile License Copyright \u00a9 2018, Jon Schlinkert . Released under the MIT License . This file was generated by verb-generate-readme , v0.6.0, on April 19, 2018.","title":"normalize-path NPM version NPM monthly downloads NPM total downloads Linux Build Status"},{"location":"system-desing/crud-app/JS/server/node_modules/normalize-path/#normalize-path","text":"Normalize slashes in a file path to be posix/unix-like forward slashes. Also condenses repeat slashes to a single slash and removes and trailing slashes, unless disabled. Please consider following this project's author, Jon Schlinkert , and consider starring the project to show your and support.","title":"normalize-path"},{"location":"system-desing/crud-app/JS/server/node_modules/normalize-path/#install","text":"Install with npm : $ npm install --save normalize-path","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/normalize-path/#usage","text":"const normalize = require ( 'normalize-path' ); console . log ( normalize ( '\\\\foo\\\\bar\\\\baz\\\\' )); //=> '/foo/bar/baz' win32 namespaces console . log ( normalize ( '\\\\\\\\?\\\\UNC\\\\Server01\\\\user\\\\docs\\\\Letter.txt' )); //=> '//?/UNC/Server01/user/docs/Letter.txt' console . log ( normalize ( '\\\\\\\\.\\\\CdRomX' )); //=> '//./CdRomX' Consecutive slashes Condenses multiple consecutive forward slashes (except for leading slashes in win32 namespaces) to a single slash. console . log ( normalize ( './/foo//bar///////baz/' )); //=> './foo/bar/baz'","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/normalize-path/#trailing-slashes","text":"By default trailing slashes are removed. Pass false as the last argument to disable this behavior and keep trailing slashes : console . log ( normalize ( 'foo\\\\bar\\\\baz\\\\' , false )); //=> 'foo/bar/baz/' console . log ( normalize ( './foo/bar/baz/' , false )); //=> './foo/bar/baz/'","title":"Trailing slashes"},{"location":"system-desing/crud-app/JS/server/node_modules/normalize-path/#release-history","text":"","title":"Release history"},{"location":"system-desing/crud-app/JS/server/node_modules/normalize-path/#v30","text":"No breaking changes in this release. a check was added to ensure that win32 namespaces are handled properly by win32 path.parse() after a path has been normalized by this library. a minor optimization was made to simplify how the trailing separator was handled","title":"v3.0"},{"location":"system-desing/crud-app/JS/server/node_modules/normalize-path/#about","text":"Contributing Pull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new). Running Tests Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command: $ npm install && npm test Building docs _(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_ To generate the readme, run the following command: $ npm install -g verbose/verb#dev verb-generate-readme && verb","title":"About"},{"location":"system-desing/crud-app/JS/server/node_modules/normalize-path/#related-projects","text":"Other useful path-related libraries: contains-path : Return true if a file path contains the given path. | homepage is-absolute : Returns true if a file path is absolute. Does not rely on the path module\u2026 more | homepage is-relative : Returns true if the path appears to be relative. | homepage parse-filepath : Pollyfill for node.js path.parse , parses a filepath into an object. | homepage path-ends-with : Return true if a file path ends with the given string/suffix. | homepage unixify : Convert Windows file paths to unix paths. | homepage","title":"Related projects"},{"location":"system-desing/crud-app/JS/server/node_modules/normalize-path/#contributors","text":"Commits Contributor 35 jonschlinkert 1 phated","title":"Contributors"},{"location":"system-desing/crud-app/JS/server/node_modules/normalize-path/#author","text":"Jon Schlinkert LinkedIn Profile GitHub Profile Twitter Profile","title":"Author"},{"location":"system-desing/crud-app/JS/server/node_modules/normalize-path/#license","text":"Copyright \u00a9 2018, Jon Schlinkert . Released under the MIT License . This file was generated by verb-generate-readme , v0.6.0, on April 19, 2018.","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.13.4 - 2025-02-04 Commits [Fix] avoid being fooled by a Symbol.toStringTag fa5870d [Tests] fix tests in node v6.0 - v6.4 2abfe1b [Dev Deps] update es-value-fixtures , for-each , has-symbols 3edfb01 v1.13.3 - 2024-11-09 Commits [actions] split out node 10-20, and 20+ 44395a8 [Fix] quoteStyle : properly escape only the containing quotes 5137f8f [Refactor] clean up quoteStyle code 450680c [Tests] add quoteStyle escaping tests e997c59 [Dev Deps] update auto-changelog , es-value-fixtures , tape d5a469c [Tests] replace aud with npm audit fb7815f [Dev Deps] update mock-property 11c817b v1.13.2 - 2024-06-21 Commits [readme] update badges 8a51e6b [Dev Deps] update @ljharb/eslint-config , tape ef05f58 [Dev Deps] update error-cause , has-tostringtag , tape c0c6c26 [Fix] Don't throw when global is not defined d4d0965 [meta] add missing engines.node 17a352a [Dev Deps] update globalthis 9c08884 [Dev Deps] update error-cause 6af352d [Dev Deps] update npmignore 94e617d [Dev Deps] update mock-property 2ac24d7 [Dev Deps] update tape 46125e5 v1.13.1 - 2023-10-19 Commits [Fix] in IE 8, global can !== window despite them being prototypes of each other 30d0859 v1.13.0 - 2023-10-14 Commits [New] add special handling for the global object 431bab2 [Dev Deps] update @ljharb/eslint-config , aud , tape fd4f619 [Dev Deps] update mock-property , tape b453f6c [Dev Deps] update error-cause e8ffc57 [Dev Deps] update tape 054b8b9 [Dev Deps] temporarily remove aud due to breaking change in transitive deps 2476845 [Dev Deps] pin glob , since v10.3.8+ requires a broken jackspeak 383fa5e [Dev Deps] pin jackspeak since 2.1.2+ depends on npm aliases, which kill the install process in npm < 6 68c244c v1.12.3 - 2023-01-12 Commits [Fix] in eg FF 24, collections lack forEach 75fc226 [actions] update rebase action to use reusable workflow 250a277 [Dev Deps] update aud , es-value-fixtures , tape 66a19b3 [Dev Deps] update @ljharb/eslint-config , aud , error-cause c43d332 [Tests] add @pkgjs/support to postlint e2618d2 v1.12.2 - 2022-05-26 Commits [Fix] use util.inspect for a custom inspection symbol method e243bf2 [meta] add support info ca20ba3 [Fix] ignore cause in node v16.9 and v16.10 where it has a bug 86aa553 v1.12.1 - 2022-05-21 Commits [Tests] use mock-property 4ec8893 [meta] use npmignore to autogenerate an npmignore file 07f868c [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape b05244b [Dev Deps] update @ljharb/eslint-config , error-cause , es-value-fixtures , functions-have-names , tape d037398 [Fix] properly handle callable regexes in older engines 848fe48 v1.12.0 - 2021-12-18 Commits [New] add numericSeparator boolean option 2d2d537 [Robustness] cache more prototype methods 191533d [New] ensure an Error\u2019s cause is displayed 53bc2ce [Dev Deps] update eslint , @ljharb/eslint-config bc164b6 [Robustness] cache RegExp.prototype.test a314ab8 [meta] fix auto-changelog settings 5ed0983 v1.11.1 - 2021-12-05 Commits [meta] add auto-changelog 7dbdd22 [actions] reuse common workflows c8823bc [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , tape 7532b12 [Refactor] use has-tostringtag to behave correctly in the presence of symbol shams 94abb5d [actions] update codecov uploader 5ed5102 [Dev Deps] update eslint , tape 37b2ad2 [meta] add sideEffects flag d341f90 v1.11.0 - 2021-07-12 Commits [New] customInspect : add symbol option, to mimic modern util.inspect behavior e973a6e [Dev Deps] update eslint 05f1cb3 v1.10.3 - 2021-05-07 Commits [Fix] handle core-js Symbol shams 4acfc2c [readme] update badges 95c323a [Dev Deps] update eslint , @ljharb/eslint-config , aud cb38f48 v1.10.2 - 2021-04-17 Commits [Fix] use a robust check for a boxed Symbol 87f12d6 v1.10.1 - 2021-04-17 Commits [Fix] use a robust check for a boxed bigint d5ca829 v1.10.0 - 2021-04-17 Commits [Tests] increase coverage d8abb8a [actions] use node/install instead of node/run ; use codecov action 4bfec2e [New] respect Symbol.toStringTag on objects 799b58f [Fix] do not allow Symbol.toStringTag to masquerade as builtins d6c5b37 [New] add WeakRef support b6d898e [meta] do not publish github action workflow files 918cdfc [meta] create FUNDING.yml 0bb5fc5 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 22c8dc0 [meta] use prepublishOnly script for npm 7+ e52ee09 [Dev Deps] update eslint 7c4e6fd v1.9.0 - 2020-11-30 Commits [Tests] migrate tests to Github Actions d262251 [New] add enumerable own Symbols to plain object output ee60c03 [Tests] add passing tests 01ac3e4 [actions] add \"Require Allow Edits\" action c2d7746 [Dev Deps] update eslint , @ljharb/eslint-config , aud , core-js 70058de [Fix] hex characters in strings should be uppercased, to match node assert 6ab8faa [Tests] run nyc on all tests 4c47372 [Tests] node 0.8 has an unpredictable property order; fix groups test by removing property f192069 [New] add enumerable properties to Function inspect result, per node\u2019s assert fd38e1b [Tests] fix tests for node < 10, due to regex match groups 2ac6462 [Dev Deps] update eslint , @ljharb/eslint-config 44b59e2 [Robustness] cache Symbol.prototype.toString f3c2074 [Dev Deps] update eslint 9411294 [meta] require-allow-edits no longer requires an explicit github token 36c0220 [actions] update rebase checkout action to v2 55a39a6 [actions] switch Automatic Rebase workflow to pull_request_target event f59fd3c [Dev Deps] update eslint a492bec v1.8.0 - 2020-06-18 Fixed [New] add indent option #27 Commits [Tests] add codecov 4324cbb [New] add maxStringLength option b3995cb [New] add customInspect option, to disable custom inspect methods 28b9179 [Tests] add Date and RegExp tests 3b28eca [actions] add automatic rebasing / merge commit blocking 0d9c6c0 [Dev Deps] update eslint , @ljharb/eslint-config , core-js , tape ; add aud 7c204f2 [readme] fix repo URLs, remove testling 34ca9a0 [Fix] when truncating a deep array, note it as [Array] instead of just [Object] f74c82d [Dev Deps] update eslint , @ljharb/eslint-config , tape 1a8a5ea [Fix] do not be fooled by a function\u2019s own toString method 7cb5c65 [patch] indicate explicitly that anon functions are anonymous, to match node 81ebdd4 [Dev Deps] loosen the core-js dep e7472e8 [Dev Deps] update tape 699827e [meta] add safe-publish-latest c5d2868 [Dev Deps] update @ljharb/eslint-config 9199501 v1.7.0 - 2019-11-10 Commits [Tests] use shared travis-ci configs 19899ed [Tests] add linting a00f057 [Tests] lint last file 2698047 [Tests] up to node v12.7 , v11.15 , v10.16 , v8.16 , v6.17 589e87a [New] add support for WeakMap and WeakSet 3ddb3e4 [meta] clean up license so github can detect it properly 27527bb [Tests] cover util.inspect.custom 36d47b9 [Dev Deps] update eslint , @ljharb/eslint-config , core-js , tape b614eaa [Tests] fix coverage thresholds 7b7b176 [Tests] bigint tests now can run on unflagged node 063af31 [Refactor] add early bailout to isMap and isSet checks fc51047 [meta] add funding field 7f9953a [Tests] Fix invalid strict-mode syntax with hexadecimal a8b5425 [Dev Deps] update @ljharb/eslint-config 98df157 add copyright to LICENSE bb69fd0 [Tests] use npx aud in posttest 4838353 [Tests] move 0.6 to allowed failures, because it won\u2018t build on travis 1bff32a v1.6.0 - 2018-05-02 Commits [New] add support for boxed BigInt primitives 356c66a [Tests] up to node v10.0 , v9.11 , v8.11 , v6.14 , v4.9 c77b65b [New] Add support for upcoming BigInt 1ac548e [Tests] run bigint tests in CI with --harmony-bigint flag d31b738 [Dev Deps] update core-js , tape ff9eff6 [Docs] fix example to use safer-buffer 48cae12 v1.5.0 - 2017-12-25 Commits [New] add quoteStyle option f5a72d2 [Tests] add more test coverage 30ebe4e [Tests] require 0.6 to pass 99a008c v1.4.1 - 2017-12-19 Commits [Tests] up to node v9.3 , v8.9 , v6.12 6674476 [Fix] inspect(Object(-0)) should be \u201cObject(-0)\u201d, not \u201cObject(0)\u201d d0a031f v1.4.0 - 2017-10-24 Commits [Tests] add npm run coverage 3b48fb2 [Tests] remove commented-out osx builds 71e24db [New] add support for util.inspect.custom , in node only. 20cca77 [Tests] up to node v8.6 ; use nvm install-latest-npm to ensure new npm doesn\u2019t break old node 252952d [Tests] up to node v8.8 4aa868d [Dev Deps] update core-js , tape 59483d1 v1.3.0 - 2017-07-31 Fixed [Fix] Map/Set: work around core-js bug < v2.5.0 #9 Commits [New] add support for arrays with additional object keys 0d19937 [Tests] up to node v8.2 , v7.10 , v6.11 ; fix new npm breaking on older nodes e24784a Only apps should have lockfiles c6faebc [Dev Deps] update tape 7345a0a v1.2.2 - 2017-03-24 Commits [Tests] up to node v7.7 , v6.10 , v4.8 ; improve test matrix a2ddc15 [Tests] up to node v7.0 , v6.9 , v5.12 , v4.6 , io.js v3.3 ; improve test matrix a48949f [Performance] check for primitive types as early as possible. 3b8092a [Refactor] remove unneeded else s. 7255034 [Refactor] avoid recreating lowbyte function every time. 81edd34 [Fix] differentiate -0 from 0 521d345 [Refactor] move object key gathering into separate function aca6265 [Refactor] consolidate wrapping logic for boxed primitives into a function. 4e440cd [Robustness] use typeof instead of comparing to literal undefined 5ca6f60 [Refactor] consolidate Map/Set notations. 4e576e5 [Tests] ensure that this function remains anonymous, despite ES6 name inference. 7540ae5 [Refactor] explicitly coerce Error objects to strings. 7f4ca84 [Refactor] split up var declarations for debuggability 6f2c11e [Robustness] cache Object.prototype.toString df44a20 [Dev Deps] update tape 3ec714e [Dev Deps] update tape beb72d9 v1.2.1 - 2016-04-09 Fixed [Fix] fix Boolean false object inspection. #7 v1.2.0 - 2016-04-09 Fixed [New] add support for inspecting String/Number/Boolean objects. #6 Commits [Dev Deps] update tape 742caa2 v1.1.0 - 2015-12-14 Merged [New] add ES6 Map/Set support. #4 Fixed [New] add ES6 Map/Set support. #3 Commits Update travis.yml to test on bunches of iojs and node versions. 4c1fd65 [Dev Deps] update tape 88a907e 1.0.2 - 2015-08-07 Commits [Fix] Cache Object.prototype.hasOwnProperty in case it's deleted later. 1d0075d [Dev Deps] Update tape ca8d5d7 gitignore node_modules since this is a reusable modules. ed41407 1.0.1 - 2015-07-19 Commits Make inspect work with symbol primitives and objects, including in node 0.11 and 0.12. ddf1b94 bump tape 103d674 use newer travis config d497276 1.0.0 - 2014-08-05 Commits error inspect works properly 260a22d seen coverage 57269e8 htmlelement instance coverage 397ffe1 more element coverage 6905cc2 failing test for type errors 385b615 fn name coverage edc906d server-side element test 362d1d3 custom inspect fn e89b0f6 fixed browser test b530882 depth test, matches node 1cfd9e0 exercise hasOwnProperty path 8d753fb more cases covered for errors c5c46a5 \\W obj key test case b0eceee coverage for explicit depth param e12b91c 0.4.0 - 2014-03-21 Commits passing lowbyte interpolation test b847511 lowbyte test 4a2b0e1 0.3.1 - 2014-03-04 Commits sort keys a07b19c 0.3.0 - 2014-03-04 Commits [] and {} instead of [ ] and { } 654c44b 0.2.0 - 2014-03-04 Commits failing holes test 99cdfad regex already work e324033 failing undef/null test 1f88a00 holes in the all example 7d345f3 check for .inspect(), fixes Buffer use-case c3f7546 fixes for holes ce25f73 weird null behavior 405c1ea tape is actually a devDependency, upgrade 703b0ce put date in the example a342219 passing the null test 4ab737e 0.1.3 - 2013-07-26 Commits special isElement() check 882768a oh right old IEs don't have indexOf either 36d1275 0.1.1 - 2013-07-26 Commits tests! 4422fd9 fix for ie<9, doesn't have hasOwnProperty 6b7d611 fix for all IEs: no f.name 4e0c2f6 badges 5ed0d88 0.1.0 - 2013-07-26 Commits [Function] for functions ad5c485 0.0.0 - 2013-07-26 Commits working browser example 34be6b6 package.json etc cad51f2 docs complete b80cce2 circular example 4b4a7b9 string rep 7afb479","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1134-2025-02-04","text":"","title":"v1.13.4 - 2025-02-04"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits","text":"[Fix] avoid being fooled by a Symbol.toStringTag fa5870d [Tests] fix tests in node v6.0 - v6.4 2abfe1b [Dev Deps] update es-value-fixtures , for-each , has-symbols 3edfb01","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1133-2024-11-09","text":"","title":"v1.13.3 - 2024-11-09"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_1","text":"[actions] split out node 10-20, and 20+ 44395a8 [Fix] quoteStyle : properly escape only the containing quotes 5137f8f [Refactor] clean up quoteStyle code 450680c [Tests] add quoteStyle escaping tests e997c59 [Dev Deps] update auto-changelog , es-value-fixtures , tape d5a469c [Tests] replace aud with npm audit fb7815f [Dev Deps] update mock-property 11c817b","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1132-2024-06-21","text":"","title":"v1.13.2 - 2024-06-21"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_2","text":"[readme] update badges 8a51e6b [Dev Deps] update @ljharb/eslint-config , tape ef05f58 [Dev Deps] update error-cause , has-tostringtag , tape c0c6c26 [Fix] Don't throw when global is not defined d4d0965 [meta] add missing engines.node 17a352a [Dev Deps] update globalthis 9c08884 [Dev Deps] update error-cause 6af352d [Dev Deps] update npmignore 94e617d [Dev Deps] update mock-property 2ac24d7 [Dev Deps] update tape 46125e5","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1131-2023-10-19","text":"","title":"v1.13.1 - 2023-10-19"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_3","text":"[Fix] in IE 8, global can !== window despite them being prototypes of each other 30d0859","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1130-2023-10-14","text":"","title":"v1.13.0 - 2023-10-14"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_4","text":"[New] add special handling for the global object 431bab2 [Dev Deps] update @ljharb/eslint-config , aud , tape fd4f619 [Dev Deps] update mock-property , tape b453f6c [Dev Deps] update error-cause e8ffc57 [Dev Deps] update tape 054b8b9 [Dev Deps] temporarily remove aud due to breaking change in transitive deps 2476845 [Dev Deps] pin glob , since v10.3.8+ requires a broken jackspeak 383fa5e [Dev Deps] pin jackspeak since 2.1.2+ depends on npm aliases, which kill the install process in npm < 6 68c244c","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1123-2023-01-12","text":"","title":"v1.12.3 - 2023-01-12"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_5","text":"[Fix] in eg FF 24, collections lack forEach 75fc226 [actions] update rebase action to use reusable workflow 250a277 [Dev Deps] update aud , es-value-fixtures , tape 66a19b3 [Dev Deps] update @ljharb/eslint-config , aud , error-cause c43d332 [Tests] add @pkgjs/support to postlint e2618d2","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1122-2022-05-26","text":"","title":"v1.12.2 - 2022-05-26"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_6","text":"[Fix] use util.inspect for a custom inspection symbol method e243bf2 [meta] add support info ca20ba3 [Fix] ignore cause in node v16.9 and v16.10 where it has a bug 86aa553","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1121-2022-05-21","text":"","title":"v1.12.1 - 2022-05-21"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_7","text":"[Tests] use mock-property 4ec8893 [meta] use npmignore to autogenerate an npmignore file 07f868c [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape b05244b [Dev Deps] update @ljharb/eslint-config , error-cause , es-value-fixtures , functions-have-names , tape d037398 [Fix] properly handle callable regexes in older engines 848fe48","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1120-2021-12-18","text":"","title":"v1.12.0 - 2021-12-18"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_8","text":"[New] add numericSeparator boolean option 2d2d537 [Robustness] cache more prototype methods 191533d [New] ensure an Error\u2019s cause is displayed 53bc2ce [Dev Deps] update eslint , @ljharb/eslint-config bc164b6 [Robustness] cache RegExp.prototype.test a314ab8 [meta] fix auto-changelog settings 5ed0983","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1111-2021-12-05","text":"","title":"v1.11.1 - 2021-12-05"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_9","text":"[meta] add auto-changelog 7dbdd22 [actions] reuse common workflows c8823bc [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , tape 7532b12 [Refactor] use has-tostringtag to behave correctly in the presence of symbol shams 94abb5d [actions] update codecov uploader 5ed5102 [Dev Deps] update eslint , tape 37b2ad2 [meta] add sideEffects flag d341f90","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1110-2021-07-12","text":"","title":"v1.11.0 - 2021-07-12"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_10","text":"[New] customInspect : add symbol option, to mimic modern util.inspect behavior e973a6e [Dev Deps] update eslint 05f1cb3","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1103-2021-05-07","text":"","title":"v1.10.3 - 2021-05-07"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_11","text":"[Fix] handle core-js Symbol shams 4acfc2c [readme] update badges 95c323a [Dev Deps] update eslint , @ljharb/eslint-config , aud cb38f48","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1102-2021-04-17","text":"","title":"v1.10.2 - 2021-04-17"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_12","text":"[Fix] use a robust check for a boxed Symbol 87f12d6","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1101-2021-04-17","text":"","title":"v1.10.1 - 2021-04-17"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_13","text":"[Fix] use a robust check for a boxed bigint d5ca829","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1100-2021-04-17","text":"","title":"v1.10.0 - 2021-04-17"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_14","text":"[Tests] increase coverage d8abb8a [actions] use node/install instead of node/run ; use codecov action 4bfec2e [New] respect Symbol.toStringTag on objects 799b58f [Fix] do not allow Symbol.toStringTag to masquerade as builtins d6c5b37 [New] add WeakRef support b6d898e [meta] do not publish github action workflow files 918cdfc [meta] create FUNDING.yml 0bb5fc5 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 22c8dc0 [meta] use prepublishOnly script for npm 7+ e52ee09 [Dev Deps] update eslint 7c4e6fd","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v190-2020-11-30","text":"","title":"v1.9.0 - 2020-11-30"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_15","text":"[Tests] migrate tests to Github Actions d262251 [New] add enumerable own Symbols to plain object output ee60c03 [Tests] add passing tests 01ac3e4 [actions] add \"Require Allow Edits\" action c2d7746 [Dev Deps] update eslint , @ljharb/eslint-config , aud , core-js 70058de [Fix] hex characters in strings should be uppercased, to match node assert 6ab8faa [Tests] run nyc on all tests 4c47372 [Tests] node 0.8 has an unpredictable property order; fix groups test by removing property f192069 [New] add enumerable properties to Function inspect result, per node\u2019s assert fd38e1b [Tests] fix tests for node < 10, due to regex match groups 2ac6462 [Dev Deps] update eslint , @ljharb/eslint-config 44b59e2 [Robustness] cache Symbol.prototype.toString f3c2074 [Dev Deps] update eslint 9411294 [meta] require-allow-edits no longer requires an explicit github token 36c0220 [actions] update rebase checkout action to v2 55a39a6 [actions] switch Automatic Rebase workflow to pull_request_target event f59fd3c [Dev Deps] update eslint a492bec","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v180-2020-06-18","text":"","title":"v1.8.0 - 2020-06-18"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#fixed","text":"[New] add indent option #27","title":"Fixed"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_16","text":"[Tests] add codecov 4324cbb [New] add maxStringLength option b3995cb [New] add customInspect option, to disable custom inspect methods 28b9179 [Tests] add Date and RegExp tests 3b28eca [actions] add automatic rebasing / merge commit blocking 0d9c6c0 [Dev Deps] update eslint , @ljharb/eslint-config , core-js , tape ; add aud 7c204f2 [readme] fix repo URLs, remove testling 34ca9a0 [Fix] when truncating a deep array, note it as [Array] instead of just [Object] f74c82d [Dev Deps] update eslint , @ljharb/eslint-config , tape 1a8a5ea [Fix] do not be fooled by a function\u2019s own toString method 7cb5c65 [patch] indicate explicitly that anon functions are anonymous, to match node 81ebdd4 [Dev Deps] loosen the core-js dep e7472e8 [Dev Deps] update tape 699827e [meta] add safe-publish-latest c5d2868 [Dev Deps] update @ljharb/eslint-config 9199501","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v170-2019-11-10","text":"","title":"v1.7.0 - 2019-11-10"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_17","text":"[Tests] use shared travis-ci configs 19899ed [Tests] add linting a00f057 [Tests] lint last file 2698047 [Tests] up to node v12.7 , v11.15 , v10.16 , v8.16 , v6.17 589e87a [New] add support for WeakMap and WeakSet 3ddb3e4 [meta] clean up license so github can detect it properly 27527bb [Tests] cover util.inspect.custom 36d47b9 [Dev Deps] update eslint , @ljharb/eslint-config , core-js , tape b614eaa [Tests] fix coverage thresholds 7b7b176 [Tests] bigint tests now can run on unflagged node 063af31 [Refactor] add early bailout to isMap and isSet checks fc51047 [meta] add funding field 7f9953a [Tests] Fix invalid strict-mode syntax with hexadecimal a8b5425 [Dev Deps] update @ljharb/eslint-config 98df157 add copyright to LICENSE bb69fd0 [Tests] use npx aud in posttest 4838353 [Tests] move 0.6 to allowed failures, because it won\u2018t build on travis 1bff32a","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v160-2018-05-02","text":"","title":"v1.6.0 - 2018-05-02"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_18","text":"[New] add support for boxed BigInt primitives 356c66a [Tests] up to node v10.0 , v9.11 , v8.11 , v6.14 , v4.9 c77b65b [New] Add support for upcoming BigInt 1ac548e [Tests] run bigint tests in CI with --harmony-bigint flag d31b738 [Dev Deps] update core-js , tape ff9eff6 [Docs] fix example to use safer-buffer 48cae12","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v150-2017-12-25","text":"","title":"v1.5.0 - 2017-12-25"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_19","text":"[New] add quoteStyle option f5a72d2 [Tests] add more test coverage 30ebe4e [Tests] require 0.6 to pass 99a008c","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v141-2017-12-19","text":"","title":"v1.4.1 - 2017-12-19"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_20","text":"[Tests] up to node v9.3 , v8.9 , v6.12 6674476 [Fix] inspect(Object(-0)) should be \u201cObject(-0)\u201d, not \u201cObject(0)\u201d d0a031f","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v140-2017-10-24","text":"","title":"v1.4.0 - 2017-10-24"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_21","text":"[Tests] add npm run coverage 3b48fb2 [Tests] remove commented-out osx builds 71e24db [New] add support for util.inspect.custom , in node only. 20cca77 [Tests] up to node v8.6 ; use nvm install-latest-npm to ensure new npm doesn\u2019t break old node 252952d [Tests] up to node v8.8 4aa868d [Dev Deps] update core-js , tape 59483d1","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v130-2017-07-31","text":"","title":"v1.3.0 - 2017-07-31"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#fixed_1","text":"[Fix] Map/Set: work around core-js bug < v2.5.0 #9","title":"Fixed"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_22","text":"[New] add support for arrays with additional object keys 0d19937 [Tests] up to node v8.2 , v7.10 , v6.11 ; fix new npm breaking on older nodes e24784a Only apps should have lockfiles c6faebc [Dev Deps] update tape 7345a0a","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v122-2017-03-24","text":"","title":"v1.2.2 - 2017-03-24"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_23","text":"[Tests] up to node v7.7 , v6.10 , v4.8 ; improve test matrix a2ddc15 [Tests] up to node v7.0 , v6.9 , v5.12 , v4.6 , io.js v3.3 ; improve test matrix a48949f [Performance] check for primitive types as early as possible. 3b8092a [Refactor] remove unneeded else s. 7255034 [Refactor] avoid recreating lowbyte function every time. 81edd34 [Fix] differentiate -0 from 0 521d345 [Refactor] move object key gathering into separate function aca6265 [Refactor] consolidate wrapping logic for boxed primitives into a function. 4e440cd [Robustness] use typeof instead of comparing to literal undefined 5ca6f60 [Refactor] consolidate Map/Set notations. 4e576e5 [Tests] ensure that this function remains anonymous, despite ES6 name inference. 7540ae5 [Refactor] explicitly coerce Error objects to strings. 7f4ca84 [Refactor] split up var declarations for debuggability 6f2c11e [Robustness] cache Object.prototype.toString df44a20 [Dev Deps] update tape 3ec714e [Dev Deps] update tape beb72d9","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v121-2016-04-09","text":"","title":"v1.2.1 - 2016-04-09"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#fixed_2","text":"[Fix] fix Boolean false object inspection. #7","title":"Fixed"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v120-2016-04-09","text":"","title":"v1.2.0 - 2016-04-09"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#fixed_3","text":"[New] add support for inspecting String/Number/Boolean objects. #6","title":"Fixed"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_24","text":"[Dev Deps] update tape 742caa2","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v110-2015-12-14","text":"","title":"v1.1.0 - 2015-12-14"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#merged","text":"[New] add ES6 Map/Set support. #4","title":"Merged"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#fixed_4","text":"[New] add ES6 Map/Set support. #3","title":"Fixed"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_25","text":"Update travis.yml to test on bunches of iojs and node versions. 4c1fd65 [Dev Deps] update tape 88a907e","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#102-2015-08-07","text":"","title":"1.0.2 - 2015-08-07"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_26","text":"[Fix] Cache Object.prototype.hasOwnProperty in case it's deleted later. 1d0075d [Dev Deps] Update tape ca8d5d7 gitignore node_modules since this is a reusable modules. ed41407","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#101-2015-07-19","text":"","title":"1.0.1 - 2015-07-19"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_27","text":"Make inspect work with symbol primitives and objects, including in node 0.11 and 0.12. ddf1b94 bump tape 103d674 use newer travis config d497276","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#100-2014-08-05","text":"","title":"1.0.0 - 2014-08-05"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_28","text":"error inspect works properly 260a22d seen coverage 57269e8 htmlelement instance coverage 397ffe1 more element coverage 6905cc2 failing test for type errors 385b615 fn name coverage edc906d server-side element test 362d1d3 custom inspect fn e89b0f6 fixed browser test b530882 depth test, matches node 1cfd9e0 exercise hasOwnProperty path 8d753fb more cases covered for errors c5c46a5 \\W obj key test case b0eceee coverage for explicit depth param e12b91c","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#040-2014-03-21","text":"","title":"0.4.0 - 2014-03-21"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_29","text":"passing lowbyte interpolation test b847511 lowbyte test 4a2b0e1","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#031-2014-03-04","text":"","title":"0.3.1 - 2014-03-04"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_30","text":"sort keys a07b19c","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#030-2014-03-04","text":"","title":"0.3.0 - 2014-03-04"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_31","text":"[] and {} instead of [ ] and { } 654c44b","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#020-2014-03-04","text":"","title":"0.2.0 - 2014-03-04"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_32","text":"failing holes test 99cdfad regex already work e324033 failing undef/null test 1f88a00 holes in the all example 7d345f3 check for .inspect(), fixes Buffer use-case c3f7546 fixes for holes ce25f73 weird null behavior 405c1ea tape is actually a devDependency, upgrade 703b0ce put date in the example a342219 passing the null test 4ab737e","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#013-2013-07-26","text":"","title":"0.1.3 - 2013-07-26"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_33","text":"special isElement() check 882768a oh right old IEs don't have indexOf either 36d1275","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#011-2013-07-26","text":"","title":"0.1.1 - 2013-07-26"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_34","text":"tests! 4422fd9 fix for ie<9, doesn't have hasOwnProperty 6b7d611 fix for all IEs: no f.name 4e0c2f6 badges 5ed0d88","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#010-2013-07-26","text":"","title":"0.1.0 - 2013-07-26"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_35","text":"[Function] for functions ad5c485","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#000-2013-07-26","text":"","title":"0.0.0 - 2013-07-26"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_36","text":"working browser example 34be6b6 package.json etc cad51f2 docs complete b80cce2 circular example 4b4a7b9 string rep 7afb479","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/readme/","text":"object-inspect string representations of objects in node and the browser example circular var inspect = require ( 'object-inspect' ); var obj = { a : 1 , b : [ 3 , 4 ] }; obj . c = obj ; console . log ( inspect ( obj )); dom element var inspect = require ( 'object-inspect' ); var d = document . createElement ( 'div' ); d . setAttribute ( 'id' , 'beep' ); d . innerHTML = '<b>wooo</b><i>iiiii</i>' ; console . log ( inspect ([ d , { a : 3 , b : 4 , c : [ 5 , 6 ,[ 7 ,[ 8 ,[ 9 ]]]] } ])); output: [ <div id=\"beep\">...</div>, { a: 3, b: 4, c: [ 5, 6, [ 7, [ 8, [ ... ] ] ] ] } ] methods var inspect = require ( 'object-inspect' ) var s = inspect(obj, opts={}) Return a string s with the string representation of obj up to a depth of opts.depth . Additional options: - quoteStyle : must be \"single\" or \"double\", if present. Default 'single' for strings, 'double' for HTML elements. - maxStringLength : must be 0 , a positive integer, Infinity , or null , if present. Default Infinity . - customInspect : When true , a custom inspect method function will be invoked (either undere the util.inspect.custom symbol, or the inspect property). When the string 'symbol' , only the symbol method will be invoked. Default true . - indent : must be \"\\t\", null , or a positive integer. Default null . - numericSeparator : must be a boolean, if present. Default false . If true , all numbers will be printed with numeric separators (eg, 1234.5678 will be printed as '1_234.567_8' ) install With npm do: npm install object-inspect license MIT","title":"object-inspect Version Badge"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/readme/#object-inspect","text":"string representations of objects in node and the browser","title":"object-inspect"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/readme/#example","text":"","title":"example"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/readme/#circular","text":"var inspect = require ( 'object-inspect' ); var obj = { a : 1 , b : [ 3 , 4 ] }; obj . c = obj ; console . log ( inspect ( obj ));","title":"circular"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/readme/#dom-element","text":"var inspect = require ( 'object-inspect' ); var d = document . createElement ( 'div' ); d . setAttribute ( 'id' , 'beep' ); d . innerHTML = '<b>wooo</b><i>iiiii</i>' ; console . log ( inspect ([ d , { a : 3 , b : 4 , c : [ 5 , 6 ,[ 7 ,[ 8 ,[ 9 ]]]] } ])); output: [ <div id=\"beep\">...</div>, { a: 3, b: 4, c: [ 5, 6, [ 7, [ 8, [ ... ] ] ] ] } ]","title":"dom element"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/readme/#methods","text":"var inspect = require ( 'object-inspect' )","title":"methods"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/readme/#var-s-inspectobj-opts","text":"Return a string s with the string representation of obj up to a depth of opts.depth . Additional options: - quoteStyle : must be \"single\" or \"double\", if present. Default 'single' for strings, 'double' for HTML elements. - maxStringLength : must be 0 , a positive integer, Infinity , or null , if present. Default Infinity . - customInspect : When true , a custom inspect method function will be invoked (either undere the util.inspect.custom symbol, or the inspect property). When the string 'symbol' , only the symbol method will be invoked. Default true . - indent : must be \"\\t\", null , or a positive integer. Default null . - numericSeparator : must be a boolean, if present. Default false . If true , all numbers will be printed with numeric separators (eg, 1234.5678 will be printed as '1_234.567_8' )","title":"var s = inspect(obj, opts={})"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/readme/#install","text":"With npm do: npm install object-inspect","title":"install"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/readme/#license","text":"MIT","title":"license"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/","text":"on-finished Execute a callback when a HTTP request closes, finishes, or errors. Install This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install on-finished API var onFinished = require ( 'on-finished' ) onFinished(res, listener) Attach a listener to listen for the response to finish. The listener will be invoked only once when the response finished. If the response finished to an error, the first argument will contain the error. If the response has already finished, the listener will be invoked. Listening to the end of a response would be used to close things associated with the response, like open files. Listener is invoked as listener(err, res) . onFinished ( res , function ( err , res ) { // clean up open fds, etc. // err contains the error if request error'd }) onFinished(req, listener) Attach a listener to listen for the request to finish. The listener will be invoked only once when the request finished. If the request finished to an error, the first argument will contain the error. If the request has already finished, the listener will be invoked. Listening to the end of a request would be used to know when to continue after reading the data. Listener is invoked as listener(err, req) . var data = '' req . setEncoding ( 'utf8' ) req . on ( 'data' , function ( str ) { data += str }) onFinished ( req , function ( err , req ) { // data is read unless there is err }) onFinished.isFinished(res) Determine if res is already finished. This would be useful to check and not even start certain operations if the response has already finished. onFinished.isFinished(req) Determine if req is already finished. This would be useful to check and not even start certain operations if the request has already finished. Special Node.js requests HTTP CONNECT method The meaning of the CONNECT method from RFC 7231, section 4.3.6: The CONNECT method requests that the recipient establish a tunnel to the destination origin server identified by the request-target and, if successful, thereafter restrict its behavior to blind forwarding of packets, in both directions, until the tunnel is closed. Tunnels are commonly used to create an end-to-end virtual connection, through one or more proxies, which can then be secured using TLS (Transport Layer Security, [RFC5246]). In Node.js, these request objects come from the 'connect' event on the HTTP server. When this module is used on a HTTP CONNECT request, the request is considered \"finished\" immediately, due to limitations in the Node.js interface . This means if the CONNECT request contains a request entity, the request will be considered \"finished\" even before it has been read. There is no such thing as a response object to a CONNECT request in Node.js, so there is no support for one. HTTP Upgrade request The meaning of the Upgrade header from RFC 7230, section 6.1: The \"Upgrade\" header field is intended to provide a simple mechanism for transitioning from HTTP/1.1 to some other protocol on the same connection. In Node.js, these request objects come from the 'upgrade' event on the HTTP server. When this module is used on a HTTP request with an Upgrade header, the request is considered \"finished\" immediately, due to limitations in the Node.js interface . This means if the Upgrade request contains a request entity, the request will be considered \"finished\" even before it has been read. There is no such thing as a response object to a Upgrade request in Node.js, so there is no support for one. Example The following code ensures that file descriptors are always closed once the response finishes. var destroy = require ( 'destroy' ) var fs = require ( 'fs' ) var http = require ( 'http' ) var onFinished = require ( 'on-finished' ) http . createServer ( function onRequest ( req , res ) { var stream = fs . createReadStream ( 'package.json' ) stream . pipe ( res ) onFinished ( res , function () { destroy ( stream ) }) }) License MIT","title":"on-finished"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/#on-finished","text":"Execute a callback when a HTTP request closes, finishes, or errors.","title":"on-finished"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/#install","text":"This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install on-finished","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/#api","text":"var onFinished = require ( 'on-finished' )","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/#onfinishedres-listener","text":"Attach a listener to listen for the response to finish. The listener will be invoked only once when the response finished. If the response finished to an error, the first argument will contain the error. If the response has already finished, the listener will be invoked. Listening to the end of a response would be used to close things associated with the response, like open files. Listener is invoked as listener(err, res) . onFinished ( res , function ( err , res ) { // clean up open fds, etc. // err contains the error if request error'd })","title":"onFinished(res, listener)"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/#onfinishedreq-listener","text":"Attach a listener to listen for the request to finish. The listener will be invoked only once when the request finished. If the request finished to an error, the first argument will contain the error. If the request has already finished, the listener will be invoked. Listening to the end of a request would be used to know when to continue after reading the data. Listener is invoked as listener(err, req) . var data = '' req . setEncoding ( 'utf8' ) req . on ( 'data' , function ( str ) { data += str }) onFinished ( req , function ( err , req ) { // data is read unless there is err })","title":"onFinished(req, listener)"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/#onfinishedisfinishedres","text":"Determine if res is already finished. This would be useful to check and not even start certain operations if the response has already finished.","title":"onFinished.isFinished(res)"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/#onfinishedisfinishedreq","text":"Determine if req is already finished. This would be useful to check and not even start certain operations if the request has already finished.","title":"onFinished.isFinished(req)"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/#special-nodejs-requests","text":"","title":"Special Node.js requests"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/#http-connect-method","text":"The meaning of the CONNECT method from RFC 7231, section 4.3.6: The CONNECT method requests that the recipient establish a tunnel to the destination origin server identified by the request-target and, if successful, thereafter restrict its behavior to blind forwarding of packets, in both directions, until the tunnel is closed. Tunnels are commonly used to create an end-to-end virtual connection, through one or more proxies, which can then be secured using TLS (Transport Layer Security, [RFC5246]). In Node.js, these request objects come from the 'connect' event on the HTTP server. When this module is used on a HTTP CONNECT request, the request is considered \"finished\" immediately, due to limitations in the Node.js interface . This means if the CONNECT request contains a request entity, the request will be considered \"finished\" even before it has been read. There is no such thing as a response object to a CONNECT request in Node.js, so there is no support for one.","title":"HTTP CONNECT method"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/#http-upgrade-request","text":"The meaning of the Upgrade header from RFC 7230, section 6.1: The \"Upgrade\" header field is intended to provide a simple mechanism for transitioning from HTTP/1.1 to some other protocol on the same connection. In Node.js, these request objects come from the 'upgrade' event on the HTTP server. When this module is used on a HTTP request with an Upgrade header, the request is considered \"finished\" immediately, due to limitations in the Node.js interface . This means if the Upgrade request contains a request entity, the request will be considered \"finished\" even before it has been read. There is no such thing as a response object to a Upgrade request in Node.js, so there is no support for one.","title":"HTTP Upgrade request"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/#example","text":"The following code ensures that file descriptors are always closed once the response finishes. var destroy = require ( 'destroy' ) var fs = require ( 'fs' ) var http = require ( 'http' ) var onFinished = require ( 'on-finished' ) http . createServer ( function onRequest ( req , res ) { var stream = fs . createReadStream ( 'package.json' ) stream . pipe ( res ) onFinished ( res , function () { destroy ( stream ) }) })","title":"Example"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/","text":"2.4.1 / 2022-02-22 Fix error on early async hooks implementations 2.4.0 / 2022-02-21 Prevent loss of async hooks context 2.3.0 / 2015-05-26 Add defined behavior for HTTP CONNECT requests Add defined behavior for HTTP Upgrade requests deps: ee-first@1.1.1 2.2.1 / 2015-04-22 Fix isFinished(req) when data buffered 2.2.0 / 2014-12-22 Add message object to callback arguments 2.1.1 / 2014-10-22 Fix handling of pipelined requests 2.1.0 / 2014-08-16 Check if socket is detached Return undefined for isFinished if state unknown 2.0.0 / 2014-08-16 Add isFinished function Move to jshttp organization Remove support for plain socket argument Rename to on-finished Support both req and res as arguments deps: ee-first@1.0.5 1.2.2 / 2014-06-10 Reduce listeners added to emitters avoids \"event emitter leak\" warnings when used multiple times on same request 1.2.1 / 2014-06-08 Fix returned value when already finished 1.2.0 / 2014-06-05 Call callback when called on already-finished socket 1.1.4 / 2014-05-27 Support node.js 0.8 1.1.3 / 2014-04-30 Make sure errors passed as instanceof Error 1.1.2 / 2014-04-18 Default the socket to passed-in object 1.1.1 / 2014-01-16 Rename module to finished 1.1.0 / 2013-12-25 Call callback when called on already-errored socket 1.0.1 / 2013-12-20 Actually pass the error to the callback 1.0.0 / 2013-12-20 Initial release","title":"2.4.1 / 2022-02-22"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#241-2022-02-22","text":"Fix error on early async hooks implementations","title":"2.4.1 / 2022-02-22"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#240-2022-02-21","text":"Prevent loss of async hooks context","title":"2.4.0 / 2022-02-21"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#230-2015-05-26","text":"Add defined behavior for HTTP CONNECT requests Add defined behavior for HTTP Upgrade requests deps: ee-first@1.1.1","title":"2.3.0 / 2015-05-26"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#221-2015-04-22","text":"Fix isFinished(req) when data buffered","title":"2.2.1 / 2015-04-22"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#220-2014-12-22","text":"Add message object to callback arguments","title":"2.2.0 / 2014-12-22"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#211-2014-10-22","text":"Fix handling of pipelined requests","title":"2.1.1 / 2014-10-22"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#210-2014-08-16","text":"Check if socket is detached Return undefined for isFinished if state unknown","title":"2.1.0 / 2014-08-16"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#200-2014-08-16","text":"Add isFinished function Move to jshttp organization Remove support for plain socket argument Rename to on-finished Support both req and res as arguments deps: ee-first@1.0.5","title":"2.0.0 / 2014-08-16"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#122-2014-06-10","text":"Reduce listeners added to emitters avoids \"event emitter leak\" warnings when used multiple times on same request","title":"1.2.2 / 2014-06-10"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#121-2014-06-08","text":"Fix returned value when already finished","title":"1.2.1 / 2014-06-08"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#120-2014-06-05","text":"Call callback when called on already-finished socket","title":"1.2.0 / 2014-06-05"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#114-2014-05-27","text":"Support node.js 0.8","title":"1.1.4 / 2014-05-27"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#113-2014-04-30","text":"Make sure errors passed as instanceof Error","title":"1.1.3 / 2014-04-30"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#112-2014-04-18","text":"Default the socket to passed-in object","title":"1.1.2 / 2014-04-18"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#111-2014-01-16","text":"Rename module to finished","title":"1.1.1 / 2014-01-16"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#110-2013-12-25","text":"Call callback when called on already-errored socket","title":"1.1.0 / 2013-12-25"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#101-2013-12-20","text":"Actually pass the error to the callback","title":"1.0.1 / 2013-12-20"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#100-2013-12-20","text":"Initial release","title":"1.0.0 / 2013-12-20"},{"location":"system-desing/crud-app/JS/server/node_modules/on-headers/","text":"on-headers Execute a listener when a response is about to write headers. Installation This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install on-headers API var onHeaders = require ( 'on-headers' ) onHeaders(res, listener) This will add the listener listener to fire when headers are emitted for res . The listener is passed the response object as it's context ( this ). Headers are considered to be emitted only once, right before they are sent to the client. When this is called multiple times on the same res , the listener s are fired in the reverse order they were added. Examples var http = require ( 'http' ) var onHeaders = require ( 'on-headers' ) http . createServer ( onRequest ) . listen ( 3000 ) function addPoweredBy () { // set if not set by end of request if ( ! this . getHeader ( 'X-Powered-By' )) { this . setHeader ( 'X-Powered-By' , 'Node.js' ) } } function onRequest ( req , res ) { onHeaders ( res , addPoweredBy ) res . setHeader ( 'Content-Type' , 'text/plain' ) res . end ( 'hello!' ) } Testing $ npm test License MIT","title":"on-headers"},{"location":"system-desing/crud-app/JS/server/node_modules/on-headers/#on-headers","text":"Execute a listener when a response is about to write headers.","title":"on-headers"},{"location":"system-desing/crud-app/JS/server/node_modules/on-headers/#installation","text":"This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install on-headers","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/on-headers/#api","text":"var onHeaders = require ( 'on-headers' )","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/on-headers/#onheadersres-listener","text":"This will add the listener listener to fire when headers are emitted for res . The listener is passed the response object as it's context ( this ). Headers are considered to be emitted only once, right before they are sent to the client. When this is called multiple times on the same res , the listener s are fired in the reverse order they were added.","title":"onHeaders(res, listener)"},{"location":"system-desing/crud-app/JS/server/node_modules/on-headers/#examples","text":"var http = require ( 'http' ) var onHeaders = require ( 'on-headers' ) http . createServer ( onRequest ) . listen ( 3000 ) function addPoweredBy () { // set if not set by end of request if ( ! this . getHeader ( 'X-Powered-By' )) { this . setHeader ( 'X-Powered-By' , 'Node.js' ) } } function onRequest ( req , res ) { onHeaders ( res , addPoweredBy ) res . setHeader ( 'Content-Type' , 'text/plain' ) res . end ( 'hello!' ) }","title":"Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/on-headers/#testing","text":"$ npm test","title":"Testing"},{"location":"system-desing/crud-app/JS/server/node_modules/on-headers/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/on-headers/HISTORY/","text":"1.0.2 / 2019-02-21 Fix res.writeHead patch missing return value 1.0.1 / 2015-09-29 perf: enable strict mode 1.0.0 / 2014-08-10 Honor res.statusCode change in listener Move to jshttp organization Prevent arguments -related de-opt 0.0.0 / 2014-05-13 Initial implementation","title":"1.0.2 / 2019-02-21"},{"location":"system-desing/crud-app/JS/server/node_modules/on-headers/HISTORY/#102-2019-02-21","text":"Fix res.writeHead patch missing return value","title":"1.0.2 / 2019-02-21"},{"location":"system-desing/crud-app/JS/server/node_modules/on-headers/HISTORY/#101-2015-09-29","text":"perf: enable strict mode","title":"1.0.1 / 2015-09-29"},{"location":"system-desing/crud-app/JS/server/node_modules/on-headers/HISTORY/#100-2014-08-10","text":"Honor res.statusCode change in listener Move to jshttp organization Prevent arguments -related de-opt","title":"1.0.0 / 2014-08-10"},{"location":"system-desing/crud-app/JS/server/node_modules/on-headers/HISTORY/#000-2014-05-13","text":"Initial implementation","title":"0.0.0 / 2014-05-13"},{"location":"system-desing/crud-app/JS/server/node_modules/once/","text":"once Only call a function once. usage var once = require ( 'once' ) function load ( file , cb ) { cb = once ( cb ) loader . load ( 'file' ) loader . once ( 'load' , cb ) loader . once ( 'error' , cb ) } Or add to the Function.prototype in a responsible way: // only has to be done once require ( 'once' ). proto () function load ( file , cb ) { cb = cb . once () loader . load ( 'file' ) loader . once ( 'load' , cb ) loader . once ( 'error' , cb ) } Ironically, the prototype feature makes this module twice as complicated as necessary. To check whether you function has been called, use fn.called . Once the function is called for the first time the return value of the original function is saved in fn.value and subsequent calls will continue to return this value. var once = require ( 'once' ) function load ( cb ) { cb = once ( cb ) var stream = createStream () stream . once ( 'data' , cb ) stream . once ( 'end' , function () { if ( ! cb . called ) cb ( new Error ( 'not found' )) }) } once.strict(func) Throw an error if the function is called twice. Some functions are expected to be called only once. Using once for them would potentially hide logical errors. In the example below, the greet function has to call the callback only once: function greet ( name , cb ) { // return is missing from the if statement // when no name is passed, the callback is called twice if ( ! name ) cb ( 'Hello anonymous' ) cb ( 'Hello ' + name ) } function log ( msg ) { console . log ( msg ) } // this will print 'Hello anonymous' but the logical error will be missed greet ( null , once ( msg )) // once.strict will print 'Hello anonymous' and throw an error when the callback will be called the second time greet ( null , once . strict ( msg ))","title":"once"},{"location":"system-desing/crud-app/JS/server/node_modules/once/#once","text":"Only call a function once.","title":"once"},{"location":"system-desing/crud-app/JS/server/node_modules/once/#usage","text":"var once = require ( 'once' ) function load ( file , cb ) { cb = once ( cb ) loader . load ( 'file' ) loader . once ( 'load' , cb ) loader . once ( 'error' , cb ) } Or add to the Function.prototype in a responsible way: // only has to be done once require ( 'once' ). proto () function load ( file , cb ) { cb = cb . once () loader . load ( 'file' ) loader . once ( 'load' , cb ) loader . once ( 'error' , cb ) } Ironically, the prototype feature makes this module twice as complicated as necessary. To check whether you function has been called, use fn.called . Once the function is called for the first time the return value of the original function is saved in fn.value and subsequent calls will continue to return this value. var once = require ( 'once' ) function load ( cb ) { cb = once ( cb ) var stream = createStream () stream . once ( 'data' , cb ) stream . once ( 'end' , function () { if ( ! cb . called ) cb ( new Error ( 'not found' )) }) }","title":"usage"},{"location":"system-desing/crud-app/JS/server/node_modules/once/#oncestrictfunc","text":"Throw an error if the function is called twice. Some functions are expected to be called only once. Using once for them would potentially hide logical errors. In the example below, the greet function has to call the callback only once: function greet ( name , cb ) { // return is missing from the if statement // when no name is passed, the callback is called twice if ( ! name ) cb ( 'Hello anonymous' ) cb ( 'Hello ' + name ) } function log ( msg ) { console . log ( msg ) } // this will print 'Hello anonymous' but the logical error will be missed greet ( null , once ( msg )) // once.strict will print 'Hello anonymous' and throw an error when the callback will be called the second time greet ( null , once . strict ( msg ))","title":"once.strict(func)"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/","text":"parseurl Parse a URL with memoization. Install This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install parseurl API var parseurl = require ( 'parseurl' ) parseurl(req) Parse the URL of the given request object (looks at the req.url property) and return the result. The result is the same as url.parse in Node.js core. Calling this function multiple times on the same req where req.url does not change will return a cached parsed object, rather than parsing again. parseurl.original(req) Parse the original URL of the given request object and return the result. This works by trying to parse req.originalUrl if it is a string, otherwise parses req.url . The result is the same as url.parse in Node.js core. Calling this function multiple times on the same req where req.originalUrl does not change will return a cached parsed object, rather than parsing again. Benchmark $ npm run-script bench > parseurl@1.3.3 bench nodejs-parseurl > node benchmark/index.js http_parser@2.8.0 node@10.6.0 v8@6.7.288.46-node.13 uv@1.21.0 zlib@1.2.11 ares@1.14.0 modules@64 nghttp2@1.32.0 napi@3 openssl@1.1.0h icu@61.1 unicode@10.0 cldr@33.0 tz@2018c > node benchmark/fullurl.js Parsing URL \"http://localhost:8888/foo/bar?user=tj&pet=fluffy\" 4 tests completed. fasturl x 2 ,207,842 ops/sec \u00b13.76% ( 184 runs sampled ) nativeurl - legacy x 507 ,180 ops/sec \u00b10.82% ( 191 runs sampled ) nativeurl - whatwg x 290 ,044 ops/sec \u00b11.96% ( 189 runs sampled ) parseurl x 488 ,907 ops/sec \u00b12.13% ( 192 runs sampled ) > node benchmark/pathquery.js Parsing URL \"/foo/bar?user=tj&pet=fluffy\" 4 tests completed. fasturl x 3 ,812,564 ops/sec \u00b13.15% ( 188 runs sampled ) nativeurl - legacy x 2 ,651,631 ops/sec \u00b11.68% ( 189 runs sampled ) nativeurl - whatwg x 161 ,837 ops/sec \u00b12.26% ( 189 runs sampled ) parseurl x 4 ,166,338 ops/sec \u00b12.23% ( 184 runs sampled ) > node benchmark/samerequest.js Parsing URL \"/foo/bar?user=tj&pet=fluffy\" on same request object 4 tests completed. fasturl x 3 ,821,651 ops/sec \u00b12.42% ( 185 runs sampled ) nativeurl - legacy x 2 ,651,162 ops/sec \u00b11.90% ( 187 runs sampled ) nativeurl - whatwg x 175 ,166 ops/sec \u00b11.44% ( 188 runs sampled ) parseurl x 14 ,912,606 ops/sec \u00b13.59% ( 183 runs sampled ) > node benchmark/simplepath.js Parsing URL \"/foo/bar\" 4 tests completed. fasturl x 12 ,421,765 ops/sec \u00b12.04% ( 191 runs sampled ) nativeurl - legacy x 7 ,546,036 ops/sec \u00b11.41% ( 188 runs sampled ) nativeurl - whatwg x 198 ,843 ops/sec \u00b11.83% ( 189 runs sampled ) parseurl x 24 ,244,006 ops/sec \u00b10.51% ( 194 runs sampled ) > node benchmark/slash.js Parsing URL \"/\" 4 tests completed. fasturl x 17 ,159,456 ops/sec \u00b13.25% ( 188 runs sampled ) nativeurl - legacy x 11 ,635,097 ops/sec \u00b13.79% ( 184 runs sampled ) nativeurl - whatwg x 240 ,693 ops/sec \u00b10.83% ( 189 runs sampled ) parseurl x 42 ,279,067 ops/sec \u00b10.55% ( 190 runs sampled ) License MIT","title":"parseurl"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/#parseurl","text":"Parse a URL with memoization.","title":"parseurl"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/#install","text":"This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install parseurl","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/#api","text":"var parseurl = require ( 'parseurl' )","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/#parseurlreq","text":"Parse the URL of the given request object (looks at the req.url property) and return the result. The result is the same as url.parse in Node.js core. Calling this function multiple times on the same req where req.url does not change will return a cached parsed object, rather than parsing again.","title":"parseurl(req)"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/#parseurloriginalreq","text":"Parse the original URL of the given request object and return the result. This works by trying to parse req.originalUrl if it is a string, otherwise parses req.url . The result is the same as url.parse in Node.js core. Calling this function multiple times on the same req where req.originalUrl does not change will return a cached parsed object, rather than parsing again.","title":"parseurl.original(req)"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/#benchmark","text":"$ npm run-script bench > parseurl@1.3.3 bench nodejs-parseurl > node benchmark/index.js http_parser@2.8.0 node@10.6.0 v8@6.7.288.46-node.13 uv@1.21.0 zlib@1.2.11 ares@1.14.0 modules@64 nghttp2@1.32.0 napi@3 openssl@1.1.0h icu@61.1 unicode@10.0 cldr@33.0 tz@2018c > node benchmark/fullurl.js Parsing URL \"http://localhost:8888/foo/bar?user=tj&pet=fluffy\" 4 tests completed. fasturl x 2 ,207,842 ops/sec \u00b13.76% ( 184 runs sampled ) nativeurl - legacy x 507 ,180 ops/sec \u00b10.82% ( 191 runs sampled ) nativeurl - whatwg x 290 ,044 ops/sec \u00b11.96% ( 189 runs sampled ) parseurl x 488 ,907 ops/sec \u00b12.13% ( 192 runs sampled ) > node benchmark/pathquery.js Parsing URL \"/foo/bar?user=tj&pet=fluffy\" 4 tests completed. fasturl x 3 ,812,564 ops/sec \u00b13.15% ( 188 runs sampled ) nativeurl - legacy x 2 ,651,631 ops/sec \u00b11.68% ( 189 runs sampled ) nativeurl - whatwg x 161 ,837 ops/sec \u00b12.26% ( 189 runs sampled ) parseurl x 4 ,166,338 ops/sec \u00b12.23% ( 184 runs sampled ) > node benchmark/samerequest.js Parsing URL \"/foo/bar?user=tj&pet=fluffy\" on same request object 4 tests completed. fasturl x 3 ,821,651 ops/sec \u00b12.42% ( 185 runs sampled ) nativeurl - legacy x 2 ,651,162 ops/sec \u00b11.90% ( 187 runs sampled ) nativeurl - whatwg x 175 ,166 ops/sec \u00b11.44% ( 188 runs sampled ) parseurl x 14 ,912,606 ops/sec \u00b13.59% ( 183 runs sampled ) > node benchmark/simplepath.js Parsing URL \"/foo/bar\" 4 tests completed. fasturl x 12 ,421,765 ops/sec \u00b12.04% ( 191 runs sampled ) nativeurl - legacy x 7 ,546,036 ops/sec \u00b11.41% ( 188 runs sampled ) nativeurl - whatwg x 198 ,843 ops/sec \u00b11.83% ( 189 runs sampled ) parseurl x 24 ,244,006 ops/sec \u00b10.51% ( 194 runs sampled ) > node benchmark/slash.js Parsing URL \"/\" 4 tests completed. fasturl x 17 ,159,456 ops/sec \u00b13.25% ( 188 runs sampled ) nativeurl - legacy x 11 ,635,097 ops/sec \u00b13.79% ( 184 runs sampled ) nativeurl - whatwg x 240 ,693 ops/sec \u00b10.83% ( 189 runs sampled ) parseurl x 42 ,279,067 ops/sec \u00b10.55% ( 190 runs sampled )","title":"Benchmark"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/HISTORY/","text":"1.3.3 / 2019-04-15 Fix Node.js 0.8 return value inconsistencies 1.3.2 / 2017-09-09 perf: reduce overhead for full URLs perf: unroll the \"fast-path\" RegExp 1.3.1 / 2016-01-17 perf: enable strict mode 1.3.0 / 2014-08-09 Add parseurl.original for parsing req.originalUrl with fallback Return undefined if req.url is undefined 1.2.0 / 2014-07-21 Cache URLs based on original value Remove no-longer-needed URL mis-parse work-around Simplify the \"fast-path\" RegExp 1.1.3 / 2014-07-08 Fix typo 1.1.2 / 2014-07-08 Seriously fix Node.js 0.8 compatibility 1.1.1 / 2014-07-08 Fix Node.js 0.8 compatibility 1.1.0 / 2014-07-08 Incorporate URL href-only parse fast-path 1.0.1 / 2014-03-08 Add missing require 1.0.0 / 2014-03-08 Genesis from connect","title":"1.3.3 / 2019-04-15"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/HISTORY/#133-2019-04-15","text":"Fix Node.js 0.8 return value inconsistencies","title":"1.3.3 / 2019-04-15"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/HISTORY/#132-2017-09-09","text":"perf: reduce overhead for full URLs perf: unroll the \"fast-path\" RegExp","title":"1.3.2 / 2017-09-09"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/HISTORY/#131-2016-01-17","text":"perf: enable strict mode","title":"1.3.1 / 2016-01-17"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/HISTORY/#130-2014-08-09","text":"Add parseurl.original for parsing req.originalUrl with fallback Return undefined if req.url is undefined","title":"1.3.0 / 2014-08-09"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/HISTORY/#120-2014-07-21","text":"Cache URLs based on original value Remove no-longer-needed URL mis-parse work-around Simplify the \"fast-path\" RegExp","title":"1.2.0 / 2014-07-21"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/HISTORY/#113-2014-07-08","text":"Fix typo","title":"1.1.3 / 2014-07-08"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/HISTORY/#112-2014-07-08","text":"Seriously fix Node.js 0.8 compatibility","title":"1.1.2 / 2014-07-08"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/HISTORY/#111-2014-07-08","text":"Fix Node.js 0.8 compatibility","title":"1.1.1 / 2014-07-08"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/HISTORY/#110-2014-07-08","text":"Incorporate URL href-only parse fast-path","title":"1.1.0 / 2014-07-08"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/HISTORY/#101-2014-03-08","text":"Add missing require","title":"1.0.1 / 2014-03-08"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/HISTORY/#100-2014-03-08","text":"Genesis from connect","title":"1.0.0 / 2014-03-08"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/","text":"Path-to-RegExp Turn a path string such as /user/:name into a regular expression. Installation npm install path-to-regexp --save Usage const { match , pathToRegexp , compile , parse , stringify , } = require ( \"path-to-regexp\" ); Parameters Parameters match arbitrary strings in a path by matching up to the end of the segment, or up to any proceeding tokens. They are defined by prefixing a colon to the parameter name ( :foo ). Parameter names can use any valid JavaScript identifier, or be double quoted to use other characters ( :\"param-name\" ). const fn = match ( \"/:foo/:bar\" ); fn ( \"/test/route\" ); //=> { path: '/test/route', params: { foo: 'test', bar: 'route' } } Wildcard Wildcard parameters match one or more characters across multiple segments. They are defined the same way as regular parameters, but are prefixed with an asterisk ( *foo ). const fn = match ( \"/*splat\" ); fn ( \"/bar/baz\" ); //=> { path: '/bar/baz', params: { splat: [ 'bar', 'baz' ] } } Optional Braces can be used to define parts of the path that are optional. const fn = match ( \"/users{/:id}/delete\" ); fn ( \"/users/delete\" ); //=> { path: '/users/delete', params: {} } fn ( \"/users/123/delete\" ); //=> { path: '/users/123/delete', params: { id: '123' } } Match The match function returns a function for matching strings against a path: path String or array of strings. options (optional) (Extends pathToRegexp options) decode Function for decoding strings to params, or false to disable all processing. (default: decodeURIComponent ) const fn = match ( \"/foo/:bar\" ); Please note: path-to-regexp is intended for ordered data (e.g. paths, hosts). It can not handle arbitrarily ordered data (e.g. query strings, URL fragments, JSON, etc). PathToRegexp The pathToRegexp function returns a regular expression for matching strings against paths. It path String or array of strings. options (optional) (See parse for more options) sensitive Regexp will be case sensitive. (default: false ) end Validate the match reaches the end of the string. (default: true ) delimiter The default delimiter for segments, e.g. [^/] for :named parameters. (default: '/' ) trailing Allows optional trailing delimiter to match. (default: true ) const { regexp , keys } = pathToRegexp ( \"/foo/:bar\" ); Compile (\"Reverse\" Path-To-RegExp) The compile function will return a function for transforming parameters into a valid path: path A string. options (See parse for more options) delimiter The default delimiter for segments, e.g. [^/] for :named parameters. (default: '/' ) encode Function for encoding input strings for output into the path, or false to disable entirely. (default: encodeURIComponent ) const toPath = compile ( \"/user/:id\" ); toPath ({ id : \"name\" }); //=> \"/user/name\" toPath ({ id : \"caf\u00e9\" }); //=> \"/user/caf%C3%A9\" const toPathRepeated = compile ( \"/*segment\" ); toPathRepeated ({ segment : [ \"foo\" ] }); //=> \"/foo\" toPathRepeated ({ segment : [ \"a\" , \"b\" , \"c\" ] }); //=> \"/a/b/c\" // When disabling `encode`, you need to make sure inputs are encoded correctly. No arrays are accepted. const toPathRaw = compile ( \"/user/:id\" , { encode : false }); toPathRaw ({ id : \"%3A%2F\" }); //=> \"/user/%3A%2F\" Stringify Transform TokenData (a sequence of tokens) back into a Path-to-RegExp string. data A TokenData instance const data = new TokenData ([ { type : \"text\" , value : \"/\" }, { type : \"param\" , name : \"foo\" }, ]); const path = stringify ( data ); //=> \"/:foo\" Developers If you are rewriting paths with match and compile, consider using encode: false and decode: false to keep raw paths passed around. To ensure matches work on paths containing characters usually encoded, such as emoji, consider using encodeurl for encodePath . Parse The parse function accepts a string and returns TokenData , the set of tokens and other metadata parsed from the input string. TokenData is can used with match and compile . path A string. options (optional) encodePath A function for encoding input strings. (default: x => x , recommended: encodeurl ) Tokens TokenData is a sequence of tokens, currently of types text , parameter , wildcard , or group . Custom path In some applications, you may not be able to use the path-to-regexp syntax, but still want to use this library for match and compile . For example: import { TokenData , match } from \"path-to-regexp\" ; const tokens = [ { type : \"text\" , value : \"/\" }, { type : \"parameter\" , name : \"foo\" }, ]; const path = new TokenData ( tokens ); const fn = match ( path ); fn ( \"/test\" ); //=> { path: '/test', index: 0, params: { foo: 'test' } } Errors An effort has been made to ensure ambiguous paths from previous releases throw an error. This means you might be seeing an error when things worked before. Unexpected ? or + In past releases, ? , * , and + were used to denote optional or repeating parameters. As an alternative, try these: For optional ( ? ), use an empty segment in a group such as /:file{.:ext} . For repeating ( + ), only wildcard matching is supported, such as /*path . For optional repeating ( * ), use a group and a wildcard parameter such as /files{/*path} . Unexpected ( , ) , [ , ] , etc. Previous versions of Path-to-RegExp used these for RegExp features. This version no longer supports them so they've been reserved to avoid ambiguity. To use these characters literally, escape them with a backslash, e.g. \"\\\\(\" . Missing parameter name Parameter names must be provided after : or * , and they must be a valid JavaScript identifier. If you want an parameter name that isn't a JavaScript identifier, such as starting with a number, you can wrap the name in quotes like :\"my-name\" . Unterminated quote Parameter names can be wrapped in double quote characters, and this error means you forgot to close the quote character. Express <= 4.x Path-To-RegExp breaks compatibility with Express <= 4.x in the following ways: The wildcard * must have a name, matching the behavior of parameters : . The optional character ? is no longer supported, use braces instead: /:file{.:ext} . Regexp characters are not supported. Some characters have been reserved to avoid confusion during upgrade ( ()[]?+! ). Parameter names now support valid JavaScript identifiers, or quoted like :\"this\" . License MIT","title":"Path-to-RegExp"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#path-to-regexp","text":"Turn a path string such as /user/:name into a regular expression.","title":"Path-to-RegExp"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#installation","text":"npm install path-to-regexp --save","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#usage","text":"const { match , pathToRegexp , compile , parse , stringify , } = require ( \"path-to-regexp\" );","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#parameters","text":"Parameters match arbitrary strings in a path by matching up to the end of the segment, or up to any proceeding tokens. They are defined by prefixing a colon to the parameter name ( :foo ). Parameter names can use any valid JavaScript identifier, or be double quoted to use other characters ( :\"param-name\" ). const fn = match ( \"/:foo/:bar\" ); fn ( \"/test/route\" ); //=> { path: '/test/route', params: { foo: 'test', bar: 'route' } }","title":"Parameters"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#wildcard","text":"Wildcard parameters match one or more characters across multiple segments. They are defined the same way as regular parameters, but are prefixed with an asterisk ( *foo ). const fn = match ( \"/*splat\" ); fn ( \"/bar/baz\" ); //=> { path: '/bar/baz', params: { splat: [ 'bar', 'baz' ] } }","title":"Wildcard"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#optional","text":"Braces can be used to define parts of the path that are optional. const fn = match ( \"/users{/:id}/delete\" ); fn ( \"/users/delete\" ); //=> { path: '/users/delete', params: {} } fn ( \"/users/123/delete\" ); //=> { path: '/users/123/delete', params: { id: '123' } }","title":"Optional"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#match","text":"The match function returns a function for matching strings against a path: path String or array of strings. options (optional) (Extends pathToRegexp options) decode Function for decoding strings to params, or false to disable all processing. (default: decodeURIComponent ) const fn = match ( \"/foo/:bar\" ); Please note: path-to-regexp is intended for ordered data (e.g. paths, hosts). It can not handle arbitrarily ordered data (e.g. query strings, URL fragments, JSON, etc).","title":"Match"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#pathtoregexp","text":"The pathToRegexp function returns a regular expression for matching strings against paths. It path String or array of strings. options (optional) (See parse for more options) sensitive Regexp will be case sensitive. (default: false ) end Validate the match reaches the end of the string. (default: true ) delimiter The default delimiter for segments, e.g. [^/] for :named parameters. (default: '/' ) trailing Allows optional trailing delimiter to match. (default: true ) const { regexp , keys } = pathToRegexp ( \"/foo/:bar\" );","title":"PathToRegexp"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#compile-reverse-path-to-regexp","text":"The compile function will return a function for transforming parameters into a valid path: path A string. options (See parse for more options) delimiter The default delimiter for segments, e.g. [^/] for :named parameters. (default: '/' ) encode Function for encoding input strings for output into the path, or false to disable entirely. (default: encodeURIComponent ) const toPath = compile ( \"/user/:id\" ); toPath ({ id : \"name\" }); //=> \"/user/name\" toPath ({ id : \"caf\u00e9\" }); //=> \"/user/caf%C3%A9\" const toPathRepeated = compile ( \"/*segment\" ); toPathRepeated ({ segment : [ \"foo\" ] }); //=> \"/foo\" toPathRepeated ({ segment : [ \"a\" , \"b\" , \"c\" ] }); //=> \"/a/b/c\" // When disabling `encode`, you need to make sure inputs are encoded correctly. No arrays are accepted. const toPathRaw = compile ( \"/user/:id\" , { encode : false }); toPathRaw ({ id : \"%3A%2F\" }); //=> \"/user/%3A%2F\"","title":"Compile (\"Reverse\" Path-To-RegExp)"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#stringify","text":"Transform TokenData (a sequence of tokens) back into a Path-to-RegExp string. data A TokenData instance const data = new TokenData ([ { type : \"text\" , value : \"/\" }, { type : \"param\" , name : \"foo\" }, ]); const path = stringify ( data ); //=> \"/:foo\"","title":"Stringify"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#developers","text":"If you are rewriting paths with match and compile, consider using encode: false and decode: false to keep raw paths passed around. To ensure matches work on paths containing characters usually encoded, such as emoji, consider using encodeurl for encodePath .","title":"Developers"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#parse","text":"The parse function accepts a string and returns TokenData , the set of tokens and other metadata parsed from the input string. TokenData is can used with match and compile . path A string. options (optional) encodePath A function for encoding input strings. (default: x => x , recommended: encodeurl )","title":"Parse"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#tokens","text":"TokenData is a sequence of tokens, currently of types text , parameter , wildcard , or group .","title":"Tokens"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#custom-path","text":"In some applications, you may not be able to use the path-to-regexp syntax, but still want to use this library for match and compile . For example: import { TokenData , match } from \"path-to-regexp\" ; const tokens = [ { type : \"text\" , value : \"/\" }, { type : \"parameter\" , name : \"foo\" }, ]; const path = new TokenData ( tokens ); const fn = match ( path ); fn ( \"/test\" ); //=> { path: '/test', index: 0, params: { foo: 'test' } }","title":"Custom path"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#errors","text":"An effort has been made to ensure ambiguous paths from previous releases throw an error. This means you might be seeing an error when things worked before.","title":"Errors"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#unexpected-or","text":"In past releases, ? , * , and + were used to denote optional or repeating parameters. As an alternative, try these: For optional ( ? ), use an empty segment in a group such as /:file{.:ext} . For repeating ( + ), only wildcard matching is supported, such as /*path . For optional repeating ( * ), use a group and a wildcard parameter such as /files{/*path} .","title":"Unexpected ? or +"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#unexpected-etc","text":"Previous versions of Path-to-RegExp used these for RegExp features. This version no longer supports them so they've been reserved to avoid ambiguity. To use these characters literally, escape them with a backslash, e.g. \"\\\\(\" .","title":"Unexpected (, ), [, ], etc."},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#missing-parameter-name","text":"Parameter names must be provided after : or * , and they must be a valid JavaScript identifier. If you want an parameter name that isn't a JavaScript identifier, such as starting with a number, you can wrap the name in quotes like :\"my-name\" .","title":"Missing parameter name"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#unterminated-quote","text":"Parameter names can be wrapped in double quote characters, and this error means you forgot to close the quote character.","title":"Unterminated quote"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#express-4x","text":"Path-To-RegExp breaks compatibility with Express <= 4.x in the following ways: The wildcard * must have a name, matching the behavior of parameters : . The optional character ? is no longer supported, use braces instead: /:file{.:ext} . Regexp characters are not supported. Some characters have been reserved to avoid confusion during upgrade ( ()[]?+! ). Parameter names now support valid JavaScript identifiers, or quoted like :\"this\" .","title":"Express &lt;= 4.x"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/","text":"Picomatch Blazing fast and accurate glob matcher written in JavaScript. No dependencies and full support for standard and extended Bash glob features, including braces, extglobs, POSIX brackets, and regular expressions. Why picomatch? Lightweight - No dependencies Minimal - Tiny API surface. Main export is a function that takes a glob pattern and returns a matcher function. Fast - Loads in about 2ms (that's several times faster than a single frame of a HD movie at 60fps) Performant - Use the returned matcher function to speed up repeat matching (like when watching files) Accurate matching - Using wildcards ( * and ? ), globstars ( ** ) for nested directories, advanced globbing with extglobs, braces, and POSIX brackets, and support for escaping special characters with \\ or quotes. Well tested - Thousands of unit tests See the library comparison to other libraries. Table of Contents Click to expand - [Install](#install) - [Usage](#usage) - [API](#api) * [picomatch](#picomatch) * [.test](#test) * [.matchBase](#matchbase) * [.isMatch](#ismatch) * [.parse](#parse) * [.scan](#scan) * [.compileRe](#compilere) * [.makeRe](#makere) * [.toRegex](#toregex) - [Options](#options) * [Picomatch options](#picomatch-options) * [Scan Options](#scan-options) * [Options Examples](#options-examples) - [Globbing features](#globbing-features) * [Basic globbing](#basic-globbing) * [Advanced globbing](#advanced-globbing) * [Braces](#braces) * [Matching special characters as literals](#matching-special-characters-as-literals) - [Library Comparisons](#library-comparisons) - [Benchmarks](#benchmarks) - [Philosophies](#philosophies) - [About](#about) * [Author](#author) * [License](#license) _(TOC generated by [verb](https://github.com/verbose/verb) using [markdown-toc](https://github.com/jonschlinkert/markdown-toc))_ Install Install with npm : npm install --save picomatch Usage The main export is a function that takes a glob pattern and an options object and returns a function for matching strings. const pm = require ( 'picomatch' ); const isMatch = pm ( '*.js' ); console . log ( isMatch ( 'abcd' )); //=> false console . log ( isMatch ( 'a.js' )); //=> true console . log ( isMatch ( 'a.md' )); //=> false console . log ( isMatch ( 'a/b.js' )); //=> false API picomatch Creates a matcher function from one or more glob patterns. The returned function takes a string to match as its first argument, and returns true if the string is a match. The returned matcher function also takes a boolean as the second argument that, when true, returns an object with additional information. Params globs {String|Array} : One or more glob patterns. options {Object=} returns {Function=} : Returns a matcher function. Example const picomatch = require ( 'picomatch' ); // picomatch(glob[, options]); const isMatch = picomatch ( '*.!(*a)' ); console . log ( isMatch ( 'a.a' )); //=> false console . log ( isMatch ( 'a.b' )); //=> true .test Test input with the given regex . This is used by the main picomatch() function to test the input string. Params input {String} : String to test. regex {RegExp} returns {Object} : Returns an object with matching info. Example const picomatch = require ( 'picomatch' ); // picomatch.test(input, regex[, options]); console . log ( picomatch . test ( 'foo/bar' , /^(?:([^/]*?)\\/([^/]*?))$/ )); // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' } .matchBase Match the basename of a filepath. Params input {String} : String to test. glob {RegExp|String} : Glob pattern or regex created by .makeRe . returns {Boolean} Example const picomatch = require ( 'picomatch' ); // picomatch.matchBase(input, glob[, options]); console . log ( picomatch . matchBase ( 'foo/bar.js' , '*.js' ); // true .isMatch Returns true if any of the given glob patterns match the specified string . Params {String|Array} : str The string to test. {String|Array} : patterns One or more glob patterns to use for matching. {Object} : See available options . returns {Boolean} : Returns true if any patterns match str Example const picomatch = require ( 'picomatch' ); // picomatch.isMatch(string, patterns[, options]); console . log ( picomatch . isMatch ( 'a.a' , [ 'b.*' , '*.a' ])); //=> true console . log ( picomatch . isMatch ( 'a.a' , 'b.*' )); //=> false .parse Parse a glob pattern to create the source string for a regular expression. Params pattern {String} options {Object} returns {Object} : Returns an object with useful properties and output to be used as a regex source string. Example const picomatch = require ( 'picomatch' ); const result = picomatch . parse ( pattern [, options ]); .scan Scan a glob pattern to separate the pattern into segments. Params input {String} : Glob pattern to scan. options {Object} returns {Object} : Returns an object with Example const picomatch = require ( 'picomatch' ); // picomatch.scan(input[, options]); const result = picomatch . scan ( '!./foo/*.js' ); console . log ( result ); { prefix : '!./' , input : '!./foo/*.js' , start : 3 , base : 'foo' , glob : '*.js' , isBrace : false , isBracket : false , isGlob : true , isExtglob : false , isGlobstar : false , negated : true } .compileRe Compile a regular expression from the state object returned by the parse() method. Params state {Object} options {Object} returnOutput {Boolean} : Intended for implementors, this argument allows you to return the raw output from the parser. returnState {Boolean} : Adds the state to a state property on the returned regex. Useful for implementors and debugging. returns {RegExp} .makeRe Create a regular expression from a parsed glob pattern. Params state {String} : The object returned from the .parse method. options {Object} returnOutput {Boolean} : Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result. returnState {Boolean} : Implementors may use this argument to return the state from the parsed glob with the returned regular expression. returns {RegExp} : Returns a regex created from the given pattern. Example const picomatch = require ( 'picomatch' ); const state = picomatch . parse ( '*.js' ); // picomatch.compileRe(state[, options]); console . log ( picomatch . compileRe ( state )); //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/ .toRegex Create a regular expression from the given regex source string. Params source {String} : Regular expression source string. options {Object} returns {RegExp} Example const picomatch = require ( 'picomatch' ); // picomatch.toRegex(source[, options]); const { output } = picomatch . parse ( '*.js' ); console . log ( picomatch . toRegex ( output )); //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/ Options Picomatch options The following options may be used with the main picomatch() function or any of the methods on the picomatch API. Option Type Default value Description basename boolean false If set, then patterns without slashes will be matched against the basename of the path if it contains slashes. For example, a?b would match the path /xyz/123/acb , but not /xyz/acb/123 . bash boolean false Follow bash matching rules more strictly - disallows backslashes as escape characters, and treats single stars as globstars ( ** ). capture boolean undefined Return regex matches in supporting methods. contains boolean undefined Allows glob to match any part of the given string(s). cwd string process.cwd() Current working directory. Used by picomatch.split() debug boolean undefined Debug regular expressions when an error is thrown. dot boolean false Enable dotfile matching. By default, dotfiles are ignored unless a . is explicitly defined in the pattern, or options.dot is true expandRange function undefined Custom function for expanding ranges in brace patterns, such as {a..z} . The function receives the range values as two arguments, and it must return a string to be used in the generated regex. It's recommended that returned strings be wrapped in parentheses. failglob boolean false Throws an error if no matches are found. Based on the bash option of the same name. fastpaths boolean true To speed up processing, full parsing is skipped for a handful common glob patterns. Disable this behavior by setting this option to false . flags string undefined Regex flags to use in the generated regex. If defined, the nocase option will be overridden. format function undefined Custom function for formatting the returned string. This is useful for removing leading slashes, converting Windows paths to Posix paths, etc. ignore array\\|string undefined One or more glob patterns for excluding strings that should not be matched from the result. keepQuotes boolean false Retain quotes in the generated regex, since quotes may also be used as an alternative to backslashes. literalBrackets boolean undefined When true , brackets in the glob pattern will be escaped so that only literal brackets will be matched. matchBase boolean false Alias for basename maxLength boolean 65536 Limit the max length of the input string. An error is thrown if the input string is longer than this value. nobrace boolean false Disable brace matching, so that {a,b} and {1..3} would be treated as literal characters. nobracket boolean undefined Disable matching with regex brackets. nocase boolean false Make matching case-insensitive. Equivalent to the regex i flag. Note that this option is overridden by the flags option. nodupes boolean true Deprecated, use nounique instead. This option will be removed in a future major release. By default duplicates are removed. Disable uniquification by setting this option to false. noext boolean false Alias for noextglob noextglob boolean false Disable support for matching with extglobs (like +(a\\|b) ) noglobstar boolean false Disable support for matching nested directories with globstars ( ** ) nonegate boolean false Disable support for negating with leading ! noquantifiers boolean false Disable support for regex quantifiers (like a{1,2} ) and treat them as brace patterns to be expanded. onIgnore function undefined Function to be called on ignored items. onMatch function undefined Function to be called on matched items. onResult function undefined Function to be called on all items, regardless of whether or not they are matched or ignored. posix boolean false Support POSIX character classes (\"posix brackets\"). posixSlashes boolean undefined Convert all slashes in file paths to forward slashes. This does not convert slashes in the glob pattern itself prepend boolean undefined String to prepend to the generated regex used for matching. regex boolean false Use regular expression rules for + (instead of matching literal + ), and for stars that follow closing parentheses or brackets (as in )* and ]* ). strictBrackets boolean undefined Throw an error if brackets, braces, or parens are imbalanced. strictSlashes boolean undefined When true, picomatch won't match trailing slashes with single stars. unescape boolean undefined Remove backslashes preceding escaped characters in the glob pattern. By default, backslashes are retained. unixify boolean undefined Alias for posixSlashes , for backwards compatibility. picomatch has automatic detection for regex positive and negative lookbehinds. If the pattern contains a negative lookbehind, you must be using Node.js >= 8.10 or else picomatch will throw an error. Scan Options In addition to the main picomatch options , the following options may also be used with the .scan method. Option Type Default value Description tokens boolean false When true , the returned object will include an array of tokens (objects), representing each path \"segment\" in the scanned glob pattern parts boolean false When true , the returned object will include an array of strings representing each path \"segment\" in the scanned glob pattern. This is automatically enabled when options.tokens is true Example const picomatch = require ( 'picomatch' ); const result = picomatch . scan ( '!./foo/*.js' , { tokens : true }); console . log ( result ); // { // prefix: '!./', // input: '!./foo/*.js', // start: 3, // base: 'foo', // glob: '*.js', // isBrace: false, // isBracket: false, // isGlob: true, // isExtglob: false, // isGlobstar: false, // negated: true, // maxDepth: 2, // tokens: [ // { value: '!./', depth: 0, isGlob: false, negated: true, isPrefix: true }, // { value: 'foo', depth: 1, isGlob: false }, // { value: '*.js', depth: 1, isGlob: true } // ], // slashes: [ 2, 6 ], // parts: [ 'foo', '*.js' ] // } Options Examples options.expandRange Type : function Default : undefined Custom function for expanding ranges in brace patterns. The fill-range library is ideal for this purpose, or you can use custom code to do whatever you need. Example The following example shows how to create a glob that matches a folder const fill = require ( 'fill-range' ); const regex = pm . makeRe ( 'foo/{01..25}/bar' , { expandRange ( a , b ) { return `( ${ fill ( a , b , { toRegex : true } )})` ; } }); console . log ( regex ); //=> /^(?:foo\\/((?:0[1-9]|1[0-9]|2[0-5]))\\/bar)$/ console . log ( regex . test ( 'foo/00/bar' )) // false console . log ( regex . test ( 'foo/01/bar' )) // true console . log ( regex . test ( 'foo/10/bar' )) // true console . log ( regex . test ( 'foo/22/bar' )) // true console . log ( regex . test ( 'foo/25/bar' )) // true console . log ( regex . test ( 'foo/26/bar' )) // false options.format Type : function Default : undefined Custom function for formatting strings before they're matched. Example // strip leading './' from strings const format = str => str . replace ( /^\\.\\// , '' ); const isMatch = picomatch ( 'foo/*.js' , { format }); console . log ( isMatch ( './foo/bar.js' )); //=> true options.onMatch const onMatch = ({ glob , regex , input , output }) => { console . log ({ glob , regex , input , output }); }; const isMatch = picomatch ( '*' , { onMatch }); isMatch ( 'foo' ); isMatch ( 'bar' ); isMatch ( 'baz' ); options.onIgnore const onIgnore = ({ glob , regex , input , output }) => { console . log ({ glob , regex , input , output }); }; const isMatch = picomatch ( '*' , { onIgnore , ignore : 'f*' }); isMatch ( 'foo' ); isMatch ( 'bar' ); isMatch ( 'baz' ); options.onResult const onResult = ({ glob , regex , input , output }) => { console . log ({ glob , regex , input , output }); }; const isMatch = picomatch ( '*' , { onResult , ignore : 'f*' }); isMatch ( 'foo' ); isMatch ( 'bar' ); isMatch ( 'baz' ); Globbing features Basic globbing (Wildcard matching) Advanced globbing (extglobs, posix brackets, brace matching) Basic globbing Character Description * Matches any character zero or more times, excluding path separators. Does not match path separators or hidden files or directories (\"dotfiles\"), unless explicitly enabled by setting the dot option to true . ** Matches any character zero or more times, including path separators. Note that ** will only match path separators ( / , and \\\\ on Windows) when they are the only characters in a path segment. Thus, foo**/bar is equivalent to foo*/bar , and foo/a**b/bar is equivalent to foo/a*b/bar , and more than two consecutive stars in a glob path segment are regarded as a single star . Thus, foo/***/bar is equivalent to foo/*/bar . ? Matches any character excluding path separators one time. Does not match path separators or leading dots. [abc] Matches any characters inside the brackets. For example, [abc] would match the characters a , b or c , and nothing else. Matching behavior vs. Bash Picomatch's matching features and expected results in unit tests are based on Bash's unit tests and the Bash 4.3 specification, with the following exceptions: Bash will match foo/bar/baz with * . Picomatch only matches nested directories with ** . Bash greedily matches with negated extglobs. For example, Bash 4.3 says that !(foo)* should match foo and foobar , since the trailing * bracktracks to match the preceding pattern. This is very memory-inefficient, and IMHO, also incorrect. Picomatch would return false for both foo and foobar . Advanced globbing extglobs POSIX brackets Braces Extglobs Pattern Description @(pattern) Match only one consecutive occurrence of pattern *(pattern) Match zero or more consecutive occurrences of pattern +(pattern) Match one or more consecutive occurrences of pattern ?(pattern) Match zero or one consecutive occurrences of pattern !(pattern) Match anything but pattern Examples const pm = require ( 'picomatch' ); // *(pattern) matches ZERO or more of \"pattern\" console . log ( pm . isMatch ( 'a' , 'a*(z)' )); // true console . log ( pm . isMatch ( 'az' , 'a*(z)' )); // true console . log ( pm . isMatch ( 'azzz' , 'a*(z)' )); // true // +(pattern) matches ONE or more of \"pattern\" console . log ( pm . isMatch ( 'a' , 'a*(z)' )); // true console . log ( pm . isMatch ( 'az' , 'a*(z)' )); // true console . log ( pm . isMatch ( 'azzz' , 'a*(z)' )); // true // supports multiple extglobs console . log ( pm . isMatch ( 'foo.bar' , '!(foo).!(bar)' )); // false // supports nested extglobs console . log ( pm . isMatch ( 'foo.bar' , '!(!(foo)).!(!(bar))' )); // true POSIX brackets POSIX classes are disabled by default. Enable this feature by setting the posix option to true. Enable POSIX bracket support console . log ( pm . makeRe ( '[[:word:]]+' , { posix : true })); //=> /^(?:(?=.)[A-Za-z0-9_]+\\/?)$/ Supported POSIX classes The following named POSIX bracket expressions are supported: [:alnum:] - Alphanumeric characters, equ [a-zA-Z0-9] [:alpha:] - Alphabetical characters, equivalent to [a-zA-Z] . [:ascii:] - ASCII characters, equivalent to [\\\\x00-\\\\x7F] . [:blank:] - Space and tab characters, equivalent to [ \\\\t] . [:cntrl:] - Control characters, equivalent to [\\\\x00-\\\\x1F\\\\x7F] . [:digit:] - Numerical digits, equivalent to [0-9] . [:graph:] - Graph characters, equivalent to [\\\\x21-\\\\x7E] . [:lower:] - Lowercase letters, equivalent to [a-z] . [:print:] - Print characters, equivalent to [\\\\x20-\\\\x7E ] . [:punct:] - Punctuation and symbols, equivalent to [\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_ ~]`. [:space:] - Extended space characters, equivalent to [ \\\\t\\\\r\\\\n\\\\v\\\\f] . [:upper:] - Uppercase letters, equivalent to [A-Z] . [:word:] - Word characters (letters, numbers and underscores), equivalent to [A-Za-z0-9_] . [:xdigit:] - Hexadecimal digits, equivalent to [A-Fa-f0-9] . See the Bash Reference Manual for more information. Braces Picomatch does not do brace expansion. For brace expansion and advanced matching with braces, use micromatch instead. Picomatch has very basic support for braces. Matching special characters as literals If you wish to match the following special characters in a filepath, and you want to use these characters in your glob pattern, they must be escaped with backslashes or quotes: Special Characters Some characters that are used for matching in regular expressions are also regarded as valid file path characters on some platforms. To match any of the following characters as literals: `$^*+?()[] Examples: console . log ( pm . makeRe ( 'foo/bar \\\\(1\\\\)' )); console . log ( pm . makeRe ( 'foo/bar \\\\(1\\\\)' )); Library Comparisons The following table shows which features are supported by minimatch , micromatch , picomatch , nanomatch , extglob , braces , and expand-brackets . Feature minimatch micromatch picomatch nanomatch extglob braces expand-brackets Wildcard matching ( *?+ ) \u2714 \u2714 \u2714 \u2714 - - - Advancing globbing \u2714 \u2714 \u2714 - - - - Brace matching \u2714 \u2714 \u2714 - - \u2714 - Brace expansion \u2714 \u2714 - - - \u2714 - Extglobs partial \u2714 \u2714 - \u2714 - - Posix brackets - \u2714 \u2714 - - - \u2714 Regular expression syntax - \u2714 \u2714 \u2714 \u2714 - \u2714 File system operations - - - - - - - Benchmarks Performance comparison of picomatch and minimatch. # .makeRe star picomatch x 1,993,050 ops/sec \u00b10.51% (91 runs sampled) minimatch x 627,206 ops/sec \u00b11.96% (87 runs sampled)) # .makeRe star; dot=true picomatch x 1,436,640 ops/sec \u00b10.62% (91 runs sampled) minimatch x 525,876 ops/sec \u00b10.60% (88 runs sampled) # .makeRe globstar picomatch x 1,592,742 ops/sec \u00b10.42% (90 runs sampled) minimatch x 962,043 ops/sec \u00b11.76% (91 runs sampled)d) # .makeRe globstars picomatch x 1,615,199 ops/sec \u00b10.35% (94 runs sampled) minimatch x 477,179 ops/sec \u00b11.33% (91 runs sampled) # .makeRe with leading star picomatch x 1,220,856 ops/sec \u00b10.40% (92 runs sampled) minimatch x 453,564 ops/sec \u00b11.43% (94 runs sampled) # .makeRe - basic braces picomatch x 392,067 ops/sec \u00b10.70% (90 runs sampled) minimatch x 99,532 ops/sec \u00b12.03% (87 runs sampled)) Philosophies The goal of this library is to be blazing fast, without compromising on accuracy. Accuracy The number one of goal of this library is accuracy. However, it's not unusual for different glob implementations to have different rules for matching behavior, even with simple wildcard matching. It gets increasingly more complicated when combinations of different features are combined, like when extglobs are combined with globstars, braces, slashes, and so on: !(**/{a,b,*/c}) . Thus, given that there is no canonical glob specification to use as a single source of truth when differences of opinion arise regarding behavior, sometimes we have to implement our best judgement and rely on feedback from users to make improvements. Performance Although this library performs well in benchmarks, and in most cases it's faster than other popular libraries we benchmarked against, we will always choose accuracy over performance. It's not helpful to anyone if our library is faster at returning the wrong answer. About Contributing Pull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new). Please read the [contributing guide](.github/contributing.md) for advice on opening issues, pull requests, and coding standards. Running Tests Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command: npm install && npm test Building docs _(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_ To generate the readme, run the following command: npm install -g verbose/verb#dev verb-generate-readme && verb Author Jon Schlinkert GitHub Profile Twitter Profile LinkedIn Profile License Copyright \u00a9 2017-present, Jon Schlinkert . Released under the MIT License .","title":"Index"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#why-picomatch","text":"Lightweight - No dependencies Minimal - Tiny API surface. Main export is a function that takes a glob pattern and returns a matcher function. Fast - Loads in about 2ms (that's several times faster than a single frame of a HD movie at 60fps) Performant - Use the returned matcher function to speed up repeat matching (like when watching files) Accurate matching - Using wildcards ( * and ? ), globstars ( ** ) for nested directories, advanced globbing with extglobs, braces, and POSIX brackets, and support for escaping special characters with \\ or quotes. Well tested - Thousands of unit tests See the library comparison to other libraries.","title":"Why picomatch?"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#table-of-contents","text":"Click to expand - [Install](#install) - [Usage](#usage) - [API](#api) * [picomatch](#picomatch) * [.test](#test) * [.matchBase](#matchbase) * [.isMatch](#ismatch) * [.parse](#parse) * [.scan](#scan) * [.compileRe](#compilere) * [.makeRe](#makere) * [.toRegex](#toregex) - [Options](#options) * [Picomatch options](#picomatch-options) * [Scan Options](#scan-options) * [Options Examples](#options-examples) - [Globbing features](#globbing-features) * [Basic globbing](#basic-globbing) * [Advanced globbing](#advanced-globbing) * [Braces](#braces) * [Matching special characters as literals](#matching-special-characters-as-literals) - [Library Comparisons](#library-comparisons) - [Benchmarks](#benchmarks) - [Philosophies](#philosophies) - [About](#about) * [Author](#author) * [License](#license) _(TOC generated by [verb](https://github.com/verbose/verb) using [markdown-toc](https://github.com/jonschlinkert/markdown-toc))_","title":"Table of Contents"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#install","text":"Install with npm : npm install --save picomatch","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#usage","text":"The main export is a function that takes a glob pattern and an options object and returns a function for matching strings. const pm = require ( 'picomatch' ); const isMatch = pm ( '*.js' ); console . log ( isMatch ( 'abcd' )); //=> false console . log ( isMatch ( 'a.js' )); //=> true console . log ( isMatch ( 'a.md' )); //=> false console . log ( isMatch ( 'a/b.js' )); //=> false","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#api","text":"","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#picomatch","text":"Creates a matcher function from one or more glob patterns. The returned function takes a string to match as its first argument, and returns true if the string is a match. The returned matcher function also takes a boolean as the second argument that, when true, returns an object with additional information. Params globs {String|Array} : One or more glob patterns. options {Object=} returns {Function=} : Returns a matcher function. Example const picomatch = require ( 'picomatch' ); // picomatch(glob[, options]); const isMatch = picomatch ( '*.!(*a)' ); console . log ( isMatch ( 'a.a' )); //=> false console . log ( isMatch ( 'a.b' )); //=> true","title":"picomatch"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#test","text":"Test input with the given regex . This is used by the main picomatch() function to test the input string. Params input {String} : String to test. regex {RegExp} returns {Object} : Returns an object with matching info. Example const picomatch = require ( 'picomatch' ); // picomatch.test(input, regex[, options]); console . log ( picomatch . test ( 'foo/bar' , /^(?:([^/]*?)\\/([^/]*?))$/ )); // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }","title":".test"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#matchbase","text":"Match the basename of a filepath. Params input {String} : String to test. glob {RegExp|String} : Glob pattern or regex created by .makeRe . returns {Boolean} Example const picomatch = require ( 'picomatch' ); // picomatch.matchBase(input, glob[, options]); console . log ( picomatch . matchBase ( 'foo/bar.js' , '*.js' ); // true","title":".matchBase"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#ismatch","text":"Returns true if any of the given glob patterns match the specified string . Params {String|Array} : str The string to test. {String|Array} : patterns One or more glob patterns to use for matching. {Object} : See available options . returns {Boolean} : Returns true if any patterns match str Example const picomatch = require ( 'picomatch' ); // picomatch.isMatch(string, patterns[, options]); console . log ( picomatch . isMatch ( 'a.a' , [ 'b.*' , '*.a' ])); //=> true console . log ( picomatch . isMatch ( 'a.a' , 'b.*' )); //=> false","title":".isMatch"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#parse","text":"Parse a glob pattern to create the source string for a regular expression. Params pattern {String} options {Object} returns {Object} : Returns an object with useful properties and output to be used as a regex source string. Example const picomatch = require ( 'picomatch' ); const result = picomatch . parse ( pattern [, options ]);","title":".parse"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#scan","text":"Scan a glob pattern to separate the pattern into segments. Params input {String} : Glob pattern to scan. options {Object} returns {Object} : Returns an object with Example const picomatch = require ( 'picomatch' ); // picomatch.scan(input[, options]); const result = picomatch . scan ( '!./foo/*.js' ); console . log ( result ); { prefix : '!./' , input : '!./foo/*.js' , start : 3 , base : 'foo' , glob : '*.js' , isBrace : false , isBracket : false , isGlob : true , isExtglob : false , isGlobstar : false , negated : true }","title":".scan"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#compilere","text":"Compile a regular expression from the state object returned by the parse() method. Params state {Object} options {Object} returnOutput {Boolean} : Intended for implementors, this argument allows you to return the raw output from the parser. returnState {Boolean} : Adds the state to a state property on the returned regex. Useful for implementors and debugging. returns {RegExp}","title":".compileRe"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#makere","text":"Create a regular expression from a parsed glob pattern. Params state {String} : The object returned from the .parse method. options {Object} returnOutput {Boolean} : Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result. returnState {Boolean} : Implementors may use this argument to return the state from the parsed glob with the returned regular expression. returns {RegExp} : Returns a regex created from the given pattern. Example const picomatch = require ( 'picomatch' ); const state = picomatch . parse ( '*.js' ); // picomatch.compileRe(state[, options]); console . log ( picomatch . compileRe ( state )); //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/","title":".makeRe"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#toregex","text":"Create a regular expression from the given regex source string. Params source {String} : Regular expression source string. options {Object} returns {RegExp} Example const picomatch = require ( 'picomatch' ); // picomatch.toRegex(source[, options]); const { output } = picomatch . parse ( '*.js' ); console . log ( picomatch . toRegex ( output )); //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/","title":".toRegex"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#options","text":"","title":"Options"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#picomatch-options","text":"The following options may be used with the main picomatch() function or any of the methods on the picomatch API. Option Type Default value Description basename boolean false If set, then patterns without slashes will be matched against the basename of the path if it contains slashes. For example, a?b would match the path /xyz/123/acb , but not /xyz/acb/123 . bash boolean false Follow bash matching rules more strictly - disallows backslashes as escape characters, and treats single stars as globstars ( ** ). capture boolean undefined Return regex matches in supporting methods. contains boolean undefined Allows glob to match any part of the given string(s). cwd string process.cwd() Current working directory. Used by picomatch.split() debug boolean undefined Debug regular expressions when an error is thrown. dot boolean false Enable dotfile matching. By default, dotfiles are ignored unless a . is explicitly defined in the pattern, or options.dot is true expandRange function undefined Custom function for expanding ranges in brace patterns, such as {a..z} . The function receives the range values as two arguments, and it must return a string to be used in the generated regex. It's recommended that returned strings be wrapped in parentheses. failglob boolean false Throws an error if no matches are found. Based on the bash option of the same name. fastpaths boolean true To speed up processing, full parsing is skipped for a handful common glob patterns. Disable this behavior by setting this option to false . flags string undefined Regex flags to use in the generated regex. If defined, the nocase option will be overridden. format function undefined Custom function for formatting the returned string. This is useful for removing leading slashes, converting Windows paths to Posix paths, etc. ignore array\\|string undefined One or more glob patterns for excluding strings that should not be matched from the result. keepQuotes boolean false Retain quotes in the generated regex, since quotes may also be used as an alternative to backslashes. literalBrackets boolean undefined When true , brackets in the glob pattern will be escaped so that only literal brackets will be matched. matchBase boolean false Alias for basename maxLength boolean 65536 Limit the max length of the input string. An error is thrown if the input string is longer than this value. nobrace boolean false Disable brace matching, so that {a,b} and {1..3} would be treated as literal characters. nobracket boolean undefined Disable matching with regex brackets. nocase boolean false Make matching case-insensitive. Equivalent to the regex i flag. Note that this option is overridden by the flags option. nodupes boolean true Deprecated, use nounique instead. This option will be removed in a future major release. By default duplicates are removed. Disable uniquification by setting this option to false. noext boolean false Alias for noextglob noextglob boolean false Disable support for matching with extglobs (like +(a\\|b) ) noglobstar boolean false Disable support for matching nested directories with globstars ( ** ) nonegate boolean false Disable support for negating with leading ! noquantifiers boolean false Disable support for regex quantifiers (like a{1,2} ) and treat them as brace patterns to be expanded. onIgnore function undefined Function to be called on ignored items. onMatch function undefined Function to be called on matched items. onResult function undefined Function to be called on all items, regardless of whether or not they are matched or ignored. posix boolean false Support POSIX character classes (\"posix brackets\"). posixSlashes boolean undefined Convert all slashes in file paths to forward slashes. This does not convert slashes in the glob pattern itself prepend boolean undefined String to prepend to the generated regex used for matching. regex boolean false Use regular expression rules for + (instead of matching literal + ), and for stars that follow closing parentheses or brackets (as in )* and ]* ). strictBrackets boolean undefined Throw an error if brackets, braces, or parens are imbalanced. strictSlashes boolean undefined When true, picomatch won't match trailing slashes with single stars. unescape boolean undefined Remove backslashes preceding escaped characters in the glob pattern. By default, backslashes are retained. unixify boolean undefined Alias for posixSlashes , for backwards compatibility. picomatch has automatic detection for regex positive and negative lookbehinds. If the pattern contains a negative lookbehind, you must be using Node.js >= 8.10 or else picomatch will throw an error.","title":"Picomatch options"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#scan-options","text":"In addition to the main picomatch options , the following options may also be used with the .scan method. Option Type Default value Description tokens boolean false When true , the returned object will include an array of tokens (objects), representing each path \"segment\" in the scanned glob pattern parts boolean false When true , the returned object will include an array of strings representing each path \"segment\" in the scanned glob pattern. This is automatically enabled when options.tokens is true Example const picomatch = require ( 'picomatch' ); const result = picomatch . scan ( '!./foo/*.js' , { tokens : true }); console . log ( result ); // { // prefix: '!./', // input: '!./foo/*.js', // start: 3, // base: 'foo', // glob: '*.js', // isBrace: false, // isBracket: false, // isGlob: true, // isExtglob: false, // isGlobstar: false, // negated: true, // maxDepth: 2, // tokens: [ // { value: '!./', depth: 0, isGlob: false, negated: true, isPrefix: true }, // { value: 'foo', depth: 1, isGlob: false }, // { value: '*.js', depth: 1, isGlob: true } // ], // slashes: [ 2, 6 ], // parts: [ 'foo', '*.js' ] // }","title":"Scan Options"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#options-examples","text":"","title":"Options Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#optionsexpandrange","text":"Type : function Default : undefined Custom function for expanding ranges in brace patterns. The fill-range library is ideal for this purpose, or you can use custom code to do whatever you need. Example The following example shows how to create a glob that matches a folder const fill = require ( 'fill-range' ); const regex = pm . makeRe ( 'foo/{01..25}/bar' , { expandRange ( a , b ) { return `( ${ fill ( a , b , { toRegex : true } )})` ; } }); console . log ( regex ); //=> /^(?:foo\\/((?:0[1-9]|1[0-9]|2[0-5]))\\/bar)$/ console . log ( regex . test ( 'foo/00/bar' )) // false console . log ( regex . test ( 'foo/01/bar' )) // true console . log ( regex . test ( 'foo/10/bar' )) // true console . log ( regex . test ( 'foo/22/bar' )) // true console . log ( regex . test ( 'foo/25/bar' )) // true console . log ( regex . test ( 'foo/26/bar' )) // false","title":"options.expandRange"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#optionsformat","text":"Type : function Default : undefined Custom function for formatting strings before they're matched. Example // strip leading './' from strings const format = str => str . replace ( /^\\.\\// , '' ); const isMatch = picomatch ( 'foo/*.js' , { format }); console . log ( isMatch ( './foo/bar.js' )); //=> true","title":"options.format"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#optionsonmatch","text":"const onMatch = ({ glob , regex , input , output }) => { console . log ({ glob , regex , input , output }); }; const isMatch = picomatch ( '*' , { onMatch }); isMatch ( 'foo' ); isMatch ( 'bar' ); isMatch ( 'baz' );","title":"options.onMatch"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#optionsonignore","text":"const onIgnore = ({ glob , regex , input , output }) => { console . log ({ glob , regex , input , output }); }; const isMatch = picomatch ( '*' , { onIgnore , ignore : 'f*' }); isMatch ( 'foo' ); isMatch ( 'bar' ); isMatch ( 'baz' );","title":"options.onIgnore"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#optionsonresult","text":"const onResult = ({ glob , regex , input , output }) => { console . log ({ glob , regex , input , output }); }; const isMatch = picomatch ( '*' , { onResult , ignore : 'f*' }); isMatch ( 'foo' ); isMatch ( 'bar' ); isMatch ( 'baz' );","title":"options.onResult"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#globbing-features","text":"Basic globbing (Wildcard matching) Advanced globbing (extglobs, posix brackets, brace matching)","title":"Globbing features"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#basic-globbing","text":"Character Description * Matches any character zero or more times, excluding path separators. Does not match path separators or hidden files or directories (\"dotfiles\"), unless explicitly enabled by setting the dot option to true . ** Matches any character zero or more times, including path separators. Note that ** will only match path separators ( / , and \\\\ on Windows) when they are the only characters in a path segment. Thus, foo**/bar is equivalent to foo*/bar , and foo/a**b/bar is equivalent to foo/a*b/bar , and more than two consecutive stars in a glob path segment are regarded as a single star . Thus, foo/***/bar is equivalent to foo/*/bar . ? Matches any character excluding path separators one time. Does not match path separators or leading dots. [abc] Matches any characters inside the brackets. For example, [abc] would match the characters a , b or c , and nothing else.","title":"Basic globbing"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#matching-behavior-vs-bash","text":"Picomatch's matching features and expected results in unit tests are based on Bash's unit tests and the Bash 4.3 specification, with the following exceptions: Bash will match foo/bar/baz with * . Picomatch only matches nested directories with ** . Bash greedily matches with negated extglobs. For example, Bash 4.3 says that !(foo)* should match foo and foobar , since the trailing * bracktracks to match the preceding pattern. This is very memory-inefficient, and IMHO, also incorrect. Picomatch would return false for both foo and foobar .","title":"Matching behavior vs. Bash"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#advanced-globbing","text":"extglobs POSIX brackets Braces","title":"Advanced globbing"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#extglobs","text":"Pattern Description @(pattern) Match only one consecutive occurrence of pattern *(pattern) Match zero or more consecutive occurrences of pattern +(pattern) Match one or more consecutive occurrences of pattern ?(pattern) Match zero or one consecutive occurrences of pattern !(pattern) Match anything but pattern Examples const pm = require ( 'picomatch' ); // *(pattern) matches ZERO or more of \"pattern\" console . log ( pm . isMatch ( 'a' , 'a*(z)' )); // true console . log ( pm . isMatch ( 'az' , 'a*(z)' )); // true console . log ( pm . isMatch ( 'azzz' , 'a*(z)' )); // true // +(pattern) matches ONE or more of \"pattern\" console . log ( pm . isMatch ( 'a' , 'a*(z)' )); // true console . log ( pm . isMatch ( 'az' , 'a*(z)' )); // true console . log ( pm . isMatch ( 'azzz' , 'a*(z)' )); // true // supports multiple extglobs console . log ( pm . isMatch ( 'foo.bar' , '!(foo).!(bar)' )); // false // supports nested extglobs console . log ( pm . isMatch ( 'foo.bar' , '!(!(foo)).!(!(bar))' )); // true","title":"Extglobs"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#posix-brackets","text":"POSIX classes are disabled by default. Enable this feature by setting the posix option to true. Enable POSIX bracket support console . log ( pm . makeRe ( '[[:word:]]+' , { posix : true })); //=> /^(?:(?=.)[A-Za-z0-9_]+\\/?)$/ Supported POSIX classes The following named POSIX bracket expressions are supported: [:alnum:] - Alphanumeric characters, equ [a-zA-Z0-9] [:alpha:] - Alphabetical characters, equivalent to [a-zA-Z] . [:ascii:] - ASCII characters, equivalent to [\\\\x00-\\\\x7F] . [:blank:] - Space and tab characters, equivalent to [ \\\\t] . [:cntrl:] - Control characters, equivalent to [\\\\x00-\\\\x1F\\\\x7F] . [:digit:] - Numerical digits, equivalent to [0-9] . [:graph:] - Graph characters, equivalent to [\\\\x21-\\\\x7E] . [:lower:] - Lowercase letters, equivalent to [a-z] . [:print:] - Print characters, equivalent to [\\\\x20-\\\\x7E ] . [:punct:] - Punctuation and symbols, equivalent to [\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_ ~]`. [:space:] - Extended space characters, equivalent to [ \\\\t\\\\r\\\\n\\\\v\\\\f] . [:upper:] - Uppercase letters, equivalent to [A-Z] . [:word:] - Word characters (letters, numbers and underscores), equivalent to [A-Za-z0-9_] . [:xdigit:] - Hexadecimal digits, equivalent to [A-Fa-f0-9] . See the Bash Reference Manual for more information.","title":"POSIX brackets"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#braces","text":"Picomatch does not do brace expansion. For brace expansion and advanced matching with braces, use micromatch instead. Picomatch has very basic support for braces.","title":"Braces"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#matching-special-characters-as-literals","text":"If you wish to match the following special characters in a filepath, and you want to use these characters in your glob pattern, they must be escaped with backslashes or quotes: Special Characters Some characters that are used for matching in regular expressions are also regarded as valid file path characters on some platforms. To match any of the following characters as literals: `$^*+?()[] Examples: console . log ( pm . makeRe ( 'foo/bar \\\\(1\\\\)' )); console . log ( pm . makeRe ( 'foo/bar \\\\(1\\\\)' ));","title":"Matching special characters as literals"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#library-comparisons","text":"The following table shows which features are supported by minimatch , micromatch , picomatch , nanomatch , extglob , braces , and expand-brackets . Feature minimatch micromatch picomatch nanomatch extglob braces expand-brackets Wildcard matching ( *?+ ) \u2714 \u2714 \u2714 \u2714 - - - Advancing globbing \u2714 \u2714 \u2714 - - - - Brace matching \u2714 \u2714 \u2714 - - \u2714 - Brace expansion \u2714 \u2714 - - - \u2714 - Extglobs partial \u2714 \u2714 - \u2714 - - Posix brackets - \u2714 \u2714 - - - \u2714 Regular expression syntax - \u2714 \u2714 \u2714 \u2714 - \u2714 File system operations - - - - - - -","title":"Library Comparisons"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#benchmarks","text":"Performance comparison of picomatch and minimatch. # .makeRe star picomatch x 1,993,050 ops/sec \u00b10.51% (91 runs sampled) minimatch x 627,206 ops/sec \u00b11.96% (87 runs sampled)) # .makeRe star; dot=true picomatch x 1,436,640 ops/sec \u00b10.62% (91 runs sampled) minimatch x 525,876 ops/sec \u00b10.60% (88 runs sampled) # .makeRe globstar picomatch x 1,592,742 ops/sec \u00b10.42% (90 runs sampled) minimatch x 962,043 ops/sec \u00b11.76% (91 runs sampled)d) # .makeRe globstars picomatch x 1,615,199 ops/sec \u00b10.35% (94 runs sampled) minimatch x 477,179 ops/sec \u00b11.33% (91 runs sampled) # .makeRe with leading star picomatch x 1,220,856 ops/sec \u00b10.40% (92 runs sampled) minimatch x 453,564 ops/sec \u00b11.43% (94 runs sampled) # .makeRe - basic braces picomatch x 392,067 ops/sec \u00b10.70% (90 runs sampled) minimatch x 99,532 ops/sec \u00b12.03% (87 runs sampled))","title":"Benchmarks"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#philosophies","text":"The goal of this library is to be blazing fast, without compromising on accuracy. Accuracy The number one of goal of this library is accuracy. However, it's not unusual for different glob implementations to have different rules for matching behavior, even with simple wildcard matching. It gets increasingly more complicated when combinations of different features are combined, like when extglobs are combined with globstars, braces, slashes, and so on: !(**/{a,b,*/c}) . Thus, given that there is no canonical glob specification to use as a single source of truth when differences of opinion arise regarding behavior, sometimes we have to implement our best judgement and rely on feedback from users to make improvements. Performance Although this library performs well in benchmarks, and in most cases it's faster than other popular libraries we benchmarked against, we will always choose accuracy over performance. It's not helpful to anyone if our library is faster at returning the wrong answer.","title":"Philosophies"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#about","text":"Contributing Pull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new). Please read the [contributing guide](.github/contributing.md) for advice on opening issues, pull requests, and coding standards. Running Tests Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command: npm install && npm test Building docs _(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_ To generate the readme, run the following command: npm install -g verbose/verb#dev verb-generate-readme && verb","title":"About"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#author","text":"Jon Schlinkert GitHub Profile Twitter Profile LinkedIn Profile","title":"Author"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#license","text":"Copyright \u00a9 2017-present, Jon Schlinkert . Released under the MIT License .","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/","text":"Release history All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . Guiding Principles - Changelogs are for humans, not machines. - There should be an entry for every single version. - The same types of changes should be grouped. - Versions and sections should be linkable. - The latest version comes first. - The release date of each versions is displayed. - Mention whether you follow Semantic Versioning. Types of changes Changelog entries are classified using the following labels _(from [keep-a-changelog](http://keepachangelog.com/)_): - `Added` for new features. - `Changed` for changes in existing functionality. - `Deprecated` for soon-to-be removed features. - `Removed` for now removed features. - `Fixed` for any bug fixes. - `Security` in case of vulnerabilities. 2.3.1 (2022-01-02) Fixed Fixes bug when a pattern containing an expression after the closing parenthesis ( /!(*.d).{ts,tsx} ) was incorrectly converted to regexp ( 9f241ef ). Changed Some documentation improvements ( f81d236 , 421e0e7 ). 2.3.0 (2021-05-21) Fixed Fixes bug where file names with two dots were not being matched consistently with negation extglobs containing a star ( 56083ef ) 2.2.3 (2021-04-10) Fixed Do not skip pattern seperator for square brackets ( fb08a30 ). Set negatedExtGlob also if it does not span the whole pattern ( 032e3f5 ). 2.2.2 (2020-03-21) Fixed Correctly handle parts of the pattern after parentheses in the scan method ( e15b920 ). 2.2.1 (2020-01-04) Fixes #49 , so that braces with no sets or ranges are now propertly treated as literals. 2.2.0 (2020-01-04) Disable fastpaths mode for the parse method ( 5b8d33f ) Add tokens , slashes , and parts to the object returned by picomatch.scan() . 2.1.0 (2019-10-31) add benchmarks for scan ( 4793b92 ) Add eslint object-curly-spacing rule ( 707c650 ) Add prefer-const eslint rule ( 5c7501c ) Add support for nonegate in scan API ( 275c9b9 ) Change lets to consts. Move root import up. ( 4840625 ) closes https://github.com/micromatch/picomatch/issues/21 ( 766bcb0 ) Fix \"Extglobs\" table in readme ( eb19da8 ) fixes https://github.com/micromatch/picomatch/issues/20 ( 9caca07 ) fixes https://github.com/micromatch/picomatch/issues/26 ( fa58f45 ) Lint test ( d433a34 ) lint unit tests ( 0159b55 ) Make scan work with noext ( 6c02e03 ) minor linting ( c2a2b87 ) minor parser improvements ( 197671d ) remove eslint since it... ( 07876fa ) remove funding file ( 8ebe96d ) Remove unused funks ( cbc6d54 ) Run eslint during pretest, fix existing eslint findings ( 0682367 ) support noparen in scan ( 3d37569 ) update changelog ( 7b34e77 ) update travis ( 777f038 ) Use eslint-disable-next-line instead of eslint-disable ( 4e7c1fd ) 2.0.7 (2019-05-14) 2.0.7 ( 9eb9a71 ) supports lookbehinds ( 1f63f7e ) update .verb.md file with typo change ( 2741279 ) fix: typo in README ( 0753e44 ) 2.0.4 (2019-04-10) Fixed Readme link fixed by @danez. options.capture now works as expected when fastpaths are enabled. See https://github.com/micromatch/picomatch/pull/12/commits/26aefd71f1cfaf95c37f1c1fcab68a693b037304. Thanks to @DrPizza. 2.0.0 (2019-04-10) Added Adds support for options.onIgnore . See the readme for details Adds support for options.onResult . See the readme for details Breaking changes The unixify option was renamed to windows caching and all related options and methods have been removed 1.0.0 (2018-11-05) adds .onMatch option improvements to .scan method numerous improvements and optimizations for matching and parsing better windows path handling 0.1.0 - 2017-04-13 First release.","title":"Release history"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#release-history","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . Guiding Principles - Changelogs are for humans, not machines. - There should be an entry for every single version. - The same types of changes should be grouped. - Versions and sections should be linkable. - The latest version comes first. - The release date of each versions is displayed. - Mention whether you follow Semantic Versioning. Types of changes Changelog entries are classified using the following labels _(from [keep-a-changelog](http://keepachangelog.com/)_): - `Added` for new features. - `Changed` for changes in existing functionality. - `Deprecated` for soon-to-be removed features. - `Removed` for now removed features. - `Fixed` for any bug fixes. - `Security` in case of vulnerabilities.","title":"Release history"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#231-2022-01-02","text":"","title":"2.3.1 (2022-01-02)"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#fixed","text":"Fixes bug when a pattern containing an expression after the closing parenthesis ( /!(*.d).{ts,tsx} ) was incorrectly converted to regexp ( 9f241ef ).","title":"Fixed"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#changed","text":"Some documentation improvements ( f81d236 , 421e0e7 ).","title":"Changed"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#230-2021-05-21","text":"","title":"2.3.0 (2021-05-21)"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#fixed_1","text":"Fixes bug where file names with two dots were not being matched consistently with negation extglobs containing a star ( 56083ef )","title":"Fixed"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#223-2021-04-10","text":"","title":"2.2.3 (2021-04-10)"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#fixed_2","text":"Do not skip pattern seperator for square brackets ( fb08a30 ). Set negatedExtGlob also if it does not span the whole pattern ( 032e3f5 ).","title":"Fixed"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#222-2020-03-21","text":"","title":"2.2.2 (2020-03-21)"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#fixed_3","text":"Correctly handle parts of the pattern after parentheses in the scan method ( e15b920 ).","title":"Fixed"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#221-2020-01-04","text":"Fixes #49 , so that braces with no sets or ranges are now propertly treated as literals.","title":"2.2.1 (2020-01-04)"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#220-2020-01-04","text":"Disable fastpaths mode for the parse method ( 5b8d33f ) Add tokens , slashes , and parts to the object returned by picomatch.scan() .","title":"2.2.0 (2020-01-04)"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#210-2019-10-31","text":"add benchmarks for scan ( 4793b92 ) Add eslint object-curly-spacing rule ( 707c650 ) Add prefer-const eslint rule ( 5c7501c ) Add support for nonegate in scan API ( 275c9b9 ) Change lets to consts. Move root import up. ( 4840625 ) closes https://github.com/micromatch/picomatch/issues/21 ( 766bcb0 ) Fix \"Extglobs\" table in readme ( eb19da8 ) fixes https://github.com/micromatch/picomatch/issues/20 ( 9caca07 ) fixes https://github.com/micromatch/picomatch/issues/26 ( fa58f45 ) Lint test ( d433a34 ) lint unit tests ( 0159b55 ) Make scan work with noext ( 6c02e03 ) minor linting ( c2a2b87 ) minor parser improvements ( 197671d ) remove eslint since it... ( 07876fa ) remove funding file ( 8ebe96d ) Remove unused funks ( cbc6d54 ) Run eslint during pretest, fix existing eslint findings ( 0682367 ) support noparen in scan ( 3d37569 ) update changelog ( 7b34e77 ) update travis ( 777f038 ) Use eslint-disable-next-line instead of eslint-disable ( 4e7c1fd )","title":"2.1.0 (2019-10-31)"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#207-2019-05-14","text":"2.0.7 ( 9eb9a71 ) supports lookbehinds ( 1f63f7e ) update .verb.md file with typo change ( 2741279 ) fix: typo in README ( 0753e44 )","title":"2.0.7 (2019-05-14)"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#204-2019-04-10","text":"","title":"2.0.4 (2019-04-10)"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#fixed_4","text":"Readme link fixed by @danez. options.capture now works as expected when fastpaths are enabled. See https://github.com/micromatch/picomatch/pull/12/commits/26aefd71f1cfaf95c37f1c1fcab68a693b037304. Thanks to @DrPizza.","title":"Fixed"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#200-2019-04-10","text":"","title":"2.0.0 (2019-04-10)"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#added","text":"Adds support for options.onIgnore . See the readme for details Adds support for options.onResult . See the readme for details","title":"Added"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#breaking-changes","text":"The unixify option was renamed to windows caching and all related options and methods have been removed","title":"Breaking changes"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#100-2018-11-05","text":"adds .onMatch option improvements to .scan method numerous improvements and optimizations for matching and parsing better windows path handling","title":"1.0.0 (2018-11-05)"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#010-2017-04-13","text":"First release.","title":"0.1.0 - 2017-04-13"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/","text":"proxy-addr Determine address of proxied request Install This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install proxy-addr API var proxyaddr = require ( 'proxy-addr' ) proxyaddr(req, trust) Return the address of the request, using the given trust parameter. The trust argument is a function that returns true if you trust the address, false if you don't. The closest untrusted address is returned. proxyaddr ( req , function ( addr ) { return addr === '127.0.0.1' }) proxyaddr ( req , function ( addr , i ) { return i < 1 }) The trust arugment may also be a single IP address string or an array of trusted addresses, as plain IP addresses, CIDR-formatted strings, or IP/netmask strings. proxyaddr ( req , '127.0.0.1' ) proxyaddr ( req , [ '127.0.0.0/8' , '10.0.0.0/8' ]) proxyaddr ( req , [ '127.0.0.0/255.0.0.0' , '192.168.0.0/255.255.0.0' ]) This module also supports IPv6. Your IPv6 addresses will be normalized automatically (i.e. fe80::00ed:1 equals fe80:0:0:0:0:0:ed:1 ). proxyaddr ( req , '::1' ) proxyaddr ( req , [ '::1/128' , 'fe80::/10' ]) This module will automatically work with IPv4-mapped IPv6 addresses as well to support node.js in IPv6-only mode. This means that you do not have to specify both ::ffff:a00:1 and 10.0.0.1 . As a convenience, this module also takes certain pre-defined names in addition to IP addresses, which expand into IP addresses: proxyaddr ( req , 'loopback' ) proxyaddr ( req , [ 'loopback' , 'fc00:ac:1ab5:fff::1/64' ]) loopback : IPv4 and IPv6 loopback addresses (like ::1 and 127.0.0.1 ). linklocal : IPv4 and IPv6 link-local addresses (like fe80::1:1:1:1 and 169.254.0.1 ). uniquelocal : IPv4 private addresses and IPv6 unique-local addresses (like fc00:ac:1ab5:fff::1 and 192.168.0.1 ). When trust is specified as a function, it will be called for each address to determine if it is a trusted address. The function is given two arguments: addr and i , where addr is a string of the address to check and i is a number that represents the distance from the socket address. proxyaddr.all(req, [trust]) Return all the addresses of the request, optionally stopping at the first untrusted. This array is ordered from closest to furthest (i.e. arr[0] === req.connection.remoteAddress ). proxyaddr . all ( req ) The optional trust argument takes the same arguments as trust does in proxyaddr(req, trust) . proxyaddr . all ( req , 'loopback' ) proxyaddr.compile(val) Compiles argument val into a trust function. This function takes the same arguments as trust does in proxyaddr(req, trust) and returns a function suitable for proxyaddr(req, trust) . var trust = proxyaddr . compile ( 'loopback' ) var addr = proxyaddr ( req , trust ) This function is meant to be optimized for use against every request. It is recommend to compile a trust function up-front for the trusted configuration and pass that to proxyaddr(req, trust) for each request. Testing $ npm test Benchmarks $ npm run-script bench License MIT","title":"proxy-addr"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/#proxy-addr","text":"Determine address of proxied request","title":"proxy-addr"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/#install","text":"This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install proxy-addr","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/#api","text":"var proxyaddr = require ( 'proxy-addr' )","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/#proxyaddrreq-trust","text":"Return the address of the request, using the given trust parameter. The trust argument is a function that returns true if you trust the address, false if you don't. The closest untrusted address is returned. proxyaddr ( req , function ( addr ) { return addr === '127.0.0.1' }) proxyaddr ( req , function ( addr , i ) { return i < 1 }) The trust arugment may also be a single IP address string or an array of trusted addresses, as plain IP addresses, CIDR-formatted strings, or IP/netmask strings. proxyaddr ( req , '127.0.0.1' ) proxyaddr ( req , [ '127.0.0.0/8' , '10.0.0.0/8' ]) proxyaddr ( req , [ '127.0.0.0/255.0.0.0' , '192.168.0.0/255.255.0.0' ]) This module also supports IPv6. Your IPv6 addresses will be normalized automatically (i.e. fe80::00ed:1 equals fe80:0:0:0:0:0:ed:1 ). proxyaddr ( req , '::1' ) proxyaddr ( req , [ '::1/128' , 'fe80::/10' ]) This module will automatically work with IPv4-mapped IPv6 addresses as well to support node.js in IPv6-only mode. This means that you do not have to specify both ::ffff:a00:1 and 10.0.0.1 . As a convenience, this module also takes certain pre-defined names in addition to IP addresses, which expand into IP addresses: proxyaddr ( req , 'loopback' ) proxyaddr ( req , [ 'loopback' , 'fc00:ac:1ab5:fff::1/64' ]) loopback : IPv4 and IPv6 loopback addresses (like ::1 and 127.0.0.1 ). linklocal : IPv4 and IPv6 link-local addresses (like fe80::1:1:1:1 and 169.254.0.1 ). uniquelocal : IPv4 private addresses and IPv6 unique-local addresses (like fc00:ac:1ab5:fff::1 and 192.168.0.1 ). When trust is specified as a function, it will be called for each address to determine if it is a trusted address. The function is given two arguments: addr and i , where addr is a string of the address to check and i is a number that represents the distance from the socket address.","title":"proxyaddr(req, trust)"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/#proxyaddrallreq-trust","text":"Return all the addresses of the request, optionally stopping at the first untrusted. This array is ordered from closest to furthest (i.e. arr[0] === req.connection.remoteAddress ). proxyaddr . all ( req ) The optional trust argument takes the same arguments as trust does in proxyaddr(req, trust) . proxyaddr . all ( req , 'loopback' )","title":"proxyaddr.all(req, [trust])"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/#proxyaddrcompileval","text":"Compiles argument val into a trust function. This function takes the same arguments as trust does in proxyaddr(req, trust) and returns a function suitable for proxyaddr(req, trust) . var trust = proxyaddr . compile ( 'loopback' ) var addr = proxyaddr ( req , trust ) This function is meant to be optimized for use against every request. It is recommend to compile a trust function up-front for the trusted configuration and pass that to proxyaddr(req, trust) for each request.","title":"proxyaddr.compile(val)"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/#testing","text":"$ npm test","title":"Testing"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/#benchmarks","text":"$ npm run-script bench","title":"Benchmarks"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/","text":"2.0.7 / 2021-05-31 deps: forwarded@0.2.0 Use req.socket over deprecated req.connection 2.0.6 / 2020-02-24 deps: ipaddr.js@1.9.1 2.0.5 / 2019-04-16 deps: ipaddr.js@1.9.0 2.0.4 / 2018-07-26 deps: ipaddr.js@1.8.0 2.0.3 / 2018-02-19 deps: ipaddr.js@1.6.0 2.0.2 / 2017-09-24 deps: forwarded@~0.1.2 perf: improve header parsing perf: reduce overhead when no X-Forwarded-For header 2.0.1 / 2017-09-10 deps: forwarded@~0.1.1 Fix trimming leading / trailing OWS perf: hoist regular expression deps: ipaddr.js@1.5.2 2.0.0 / 2017-08-08 Drop support for Node.js below 0.10 1.1.5 / 2017-07-25 Fix array argument being altered deps: ipaddr.js@1.4.0 1.1.4 / 2017-03-24 deps: ipaddr.js@1.3.0 1.1.3 / 2017-01-14 deps: ipaddr.js@1.2.0 1.1.2 / 2016-05-29 deps: ipaddr.js@1.1.1 Fix IPv6-mapped IPv4 validation edge cases 1.1.1 / 2016-05-03 Fix regression matching mixed versions against multiple subnets 1.1.0 / 2016-05-01 Fix accepting various invalid netmasks IPv4 netmasks must be contingous IPv6 addresses cannot be used as a netmask deps: ipaddr.js@1.1.0 1.0.10 / 2015-12-09 deps: ipaddr.js@1.0.5 Fix regression in isValid with non-string arguments 1.0.9 / 2015-12-01 deps: ipaddr.js@1.0.4 Fix accepting some invalid IPv6 addresses Reject CIDRs with negative or overlong masks perf: enable strict mode 1.0.8 / 2015-05-10 deps: ipaddr.js@1.0.1 1.0.7 / 2015-03-16 deps: ipaddr.js@0.1.9 Fix OOM on certain inputs to isValid 1.0.6 / 2015-02-01 deps: ipaddr.js@0.1.8 1.0.5 / 2015-01-08 deps: ipaddr.js@0.1.6 1.0.4 / 2014-11-23 deps: ipaddr.js@0.1.5 Fix edge cases with isValid 1.0.3 / 2014-09-21 Use forwarded npm module 1.0.2 / 2014-09-18 Fix a global leak when multiple subnets are trusted Support Node.js 0.6 deps: ipaddr.js@0.1.3 1.0.1 / 2014-06-03 Fix links in npm package 1.0.0 / 2014-05-08 Add trust argument to determine proxy trust on Accepts custom function Accepts IPv4/IPv6 address(es) Accepts subnets Accepts pre-defined names Add optional trust argument to proxyaddr.all to stop at first untrusted Add proxyaddr.compile to pre-compile trust function to make subsequent calls faster 0.0.1 / 2014-05-04 Fix bad npm publish 0.0.0 / 2014-05-04 Initial release","title":"2.0.7 / 2021-05-31"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#207-2021-05-31","text":"deps: forwarded@0.2.0 Use req.socket over deprecated req.connection","title":"2.0.7 / 2021-05-31"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#206-2020-02-24","text":"deps: ipaddr.js@1.9.1","title":"2.0.6 / 2020-02-24"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#205-2019-04-16","text":"deps: ipaddr.js@1.9.0","title":"2.0.5 / 2019-04-16"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#204-2018-07-26","text":"deps: ipaddr.js@1.8.0","title":"2.0.4 / 2018-07-26"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#203-2018-02-19","text":"deps: ipaddr.js@1.6.0","title":"2.0.3 / 2018-02-19"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#202-2017-09-24","text":"deps: forwarded@~0.1.2 perf: improve header parsing perf: reduce overhead when no X-Forwarded-For header","title":"2.0.2 / 2017-09-24"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#201-2017-09-10","text":"deps: forwarded@~0.1.1 Fix trimming leading / trailing OWS perf: hoist regular expression deps: ipaddr.js@1.5.2","title":"2.0.1 / 2017-09-10"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#200-2017-08-08","text":"Drop support for Node.js below 0.10","title":"2.0.0 / 2017-08-08"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#115-2017-07-25","text":"Fix array argument being altered deps: ipaddr.js@1.4.0","title":"1.1.5 / 2017-07-25"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#114-2017-03-24","text":"deps: ipaddr.js@1.3.0","title":"1.1.4 / 2017-03-24"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#113-2017-01-14","text":"deps: ipaddr.js@1.2.0","title":"1.1.3 / 2017-01-14"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#112-2016-05-29","text":"deps: ipaddr.js@1.1.1 Fix IPv6-mapped IPv4 validation edge cases","title":"1.1.2 / 2016-05-29"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#111-2016-05-03","text":"Fix regression matching mixed versions against multiple subnets","title":"1.1.1 / 2016-05-03"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#110-2016-05-01","text":"Fix accepting various invalid netmasks IPv4 netmasks must be contingous IPv6 addresses cannot be used as a netmask deps: ipaddr.js@1.1.0","title":"1.1.0 / 2016-05-01"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#1010-2015-12-09","text":"deps: ipaddr.js@1.0.5 Fix regression in isValid with non-string arguments","title":"1.0.10 / 2015-12-09"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#109-2015-12-01","text":"deps: ipaddr.js@1.0.4 Fix accepting some invalid IPv6 addresses Reject CIDRs with negative or overlong masks perf: enable strict mode","title":"1.0.9 / 2015-12-01"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#108-2015-05-10","text":"deps: ipaddr.js@1.0.1","title":"1.0.8 / 2015-05-10"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#107-2015-03-16","text":"deps: ipaddr.js@0.1.9 Fix OOM on certain inputs to isValid","title":"1.0.7 / 2015-03-16"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#106-2015-02-01","text":"deps: ipaddr.js@0.1.8","title":"1.0.6 / 2015-02-01"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#105-2015-01-08","text":"deps: ipaddr.js@0.1.6","title":"1.0.5 / 2015-01-08"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#104-2014-11-23","text":"deps: ipaddr.js@0.1.5 Fix edge cases with isValid","title":"1.0.4 / 2014-11-23"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#103-2014-09-21","text":"Use forwarded npm module","title":"1.0.3 / 2014-09-21"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#102-2014-09-18","text":"Fix a global leak when multiple subnets are trusted Support Node.js 0.6 deps: ipaddr.js@0.1.3","title":"1.0.2 / 2014-09-18"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#101-2014-06-03","text":"Fix links in npm package","title":"1.0.1 / 2014-06-03"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#100-2014-05-08","text":"Add trust argument to determine proxy trust on Accepts custom function Accepts IPv4/IPv6 address(es) Accepts subnets Accepts pre-defined names Add optional trust argument to proxyaddr.all to stop at first untrusted Add proxyaddr.compile to pre-compile trust function to make subsequent calls faster","title":"1.0.0 / 2014-05-08"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#001-2014-05-04","text":"Fix bad npm publish","title":"0.0.1 / 2014-05-04"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#000-2014-05-04","text":"Initial release","title":"0.0.0 / 2014-05-04"},{"location":"system-desing/crud-app/JS/server/node_modules/pstree.remy/","text":"pstree.remy Cross platform ps-tree (including unix flavours without ps) Installation npm install pstree.remy Usage const psTree = psTree require ( 'pstree.remy' ); psTree ( PID , ( err , pids ) => { if ( err ) { console . error ( err ); } console . log ( pids ) }); console . log ( psTree . hasPS ? \"This platform has the ps shell command\" : \"This platform does not have the ps shell command\" );","title":"pstree.remy"},{"location":"system-desing/crud-app/JS/server/node_modules/pstree.remy/#pstreeremy","text":"Cross platform ps-tree (including unix flavours without ps)","title":"pstree.remy"},{"location":"system-desing/crud-app/JS/server/node_modules/pstree.remy/#installation","text":"npm install pstree.remy","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/pstree.remy/#usage","text":"const psTree = psTree require ( 'pstree.remy' ); psTree ( PID , ( err , pids ) => { if ( err ) { console . error ( err ); } console . log ( pids ) }); console . log ( psTree . hasPS ? \"This platform has the ps shell command\" : \"This platform does not have the ps shell command\" );","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/","text":"Punycode.js Punycode.js is a robust Punycode converter that fully complies to RFC 3492 and RFC 5891 . This JavaScript library is the result of comparing, optimizing and documenting different open-source implementations of the Punycode algorithm: The C example code from RFC 3492 punycode.c by Markus W. Scherer (IBM) punycode.c by Ben Noordhuis JavaScript implementation by some punycode.js by Ben Noordhuis (note: not fully compliant ) This project was bundled with Node.js from v0.6.2+ until v7 (soft-deprecated). This project provides a CommonJS module that uses ES2015+ features and JavaScript module, which work in modern Node.js versions and browsers. For the old Punycode.js version that offers the same functionality in a UMD build with support for older pre-ES2015 runtimes, including Rhino, Ringo, and Narwhal, see v1.4.1 . Installation Via npm : npm install punycode --save In Node.js : \u26a0\ufe0f Note that userland modules don't hide core modules. For example, require('punycode') still imports the deprecated core module even if you executed npm install punycode . Use require('punycode/') to import userland modules rather than core modules. const punycode = require ( 'punycode/' ); API punycode.decode(string) Converts a Punycode string of ASCII symbols to a string of Unicode symbols. // decode domain name parts punycode . decode ( 'maana-pta' ); // 'ma\u00f1ana' punycode . decode ( '--dqo34k' ); // '\u2603-\u2318' punycode.encode(string) Converts a string of Unicode symbols to a Punycode string of ASCII symbols. // encode domain name parts punycode . encode ( 'ma\u00f1ana' ); // 'maana-pta' punycode . encode ( '\u2603-\u2318' ); // '--dqo34k' punycode.toUnicode(input) Converts a Punycode string representing a domain name or an email address to Unicode. Only the Punycoded parts of the input will be converted, i.e. it doesn\u2019t matter if you call it on a string that has already been converted to Unicode. // decode domain names punycode . toUnicode ( 'xn--maana-pta.com' ); // \u2192 'ma\u00f1ana.com' punycode . toUnicode ( 'xn----dqo34k.com' ); // \u2192 '\u2603-\u2318.com' // decode email addresses punycode . toUnicode ( '\u0434\u0436\u0443\u043c\u043b\u0430@xn--p-8sbkgc5ag7bhce.xn--ba-lmcq' ); // \u2192 '\u0434\u0436\u0443\u043c\u043b\u0430@\u0434\u0436p\u0443\u043c\u043b\u0430\u0442\u0435\u0441\u0442.b\u0440\u0444a' punycode.toASCII(input) Converts a lowercased Unicode string representing a domain name or an email address to Punycode. Only the non-ASCII parts of the input will be converted, i.e. it doesn\u2019t matter if you call it with a domain that\u2019s already in ASCII. // encode domain names punycode . toASCII ( 'ma\u00f1ana.com' ); // \u2192 'xn--maana-pta.com' punycode . toASCII ( '\u2603-\u2318.com' ); // \u2192 'xn----dqo34k.com' // encode email addresses punycode . toASCII ( '\u0434\u0436\u0443\u043c\u043b\u0430@\u0434\u0436p\u0443\u043c\u043b\u0430\u0442\u0435\u0441\u0442.b\u0440\u0444a' ); // \u2192 '\u0434\u0436\u0443\u043c\u043b\u0430@xn--p-8sbkgc5ag7bhce.xn--ba-lmcq' punycode.ucs2 punycode.ucs2.decode(string) Creates an array containing the numeric code point values of each Unicode symbol in the string. While JavaScript uses UCS-2 internally , this function will convert a pair of surrogate halves (each of which UCS-2 exposes as separate characters) into a single code point, matching UTF-16. punycode . ucs2 . decode ( 'abc' ); // \u2192 [0x61, 0x62, 0x63] // surrogate pair for U+1D306 TETRAGRAM FOR CENTRE: punycode . ucs2 . decode ( '\\uD834\\uDF06' ); // \u2192 [0x1D306] punycode.ucs2.encode(codePoints) Creates a string based on an array of numeric code point values. punycode . ucs2 . encode ([ 0x61 , 0x62 , 0x63 ]); // \u2192 'abc' punycode . ucs2 . encode ([ 0x1D306 ]); // \u2192 '\\uD834\\uDF06' punycode.version A string representing the current Punycode.js version number. For maintainers How to publish a new release On the main branch, bump the version number in package.json : npm version patch -m 'Release v%s' Instead of patch , use minor or major as needed . Note that this produces a Git commit + tag. Push the release commit and tag: git push && git push --tags Our CI then automatically publishes the new release to npm, under both the punycode and punycode.js names. Author Mathias Bynens License Punycode.js is available under the MIT license.","title":"Punycode.js punycode on npm"},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/#punycodejs","text":"Punycode.js is a robust Punycode converter that fully complies to RFC 3492 and RFC 5891 . This JavaScript library is the result of comparing, optimizing and documenting different open-source implementations of the Punycode algorithm: The C example code from RFC 3492 punycode.c by Markus W. Scherer (IBM) punycode.c by Ben Noordhuis JavaScript implementation by some punycode.js by Ben Noordhuis (note: not fully compliant ) This project was bundled with Node.js from v0.6.2+ until v7 (soft-deprecated). This project provides a CommonJS module that uses ES2015+ features and JavaScript module, which work in modern Node.js versions and browsers. For the old Punycode.js version that offers the same functionality in a UMD build with support for older pre-ES2015 runtimes, including Rhino, Ringo, and Narwhal, see v1.4.1 .","title":"Punycode.js"},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/#installation","text":"Via npm : npm install punycode --save In Node.js : \u26a0\ufe0f Note that userland modules don't hide core modules. For example, require('punycode') still imports the deprecated core module even if you executed npm install punycode . Use require('punycode/') to import userland modules rather than core modules. const punycode = require ( 'punycode/' );","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/#api","text":"","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/#punycodedecodestring","text":"Converts a Punycode string of ASCII symbols to a string of Unicode symbols. // decode domain name parts punycode . decode ( 'maana-pta' ); // 'ma\u00f1ana' punycode . decode ( '--dqo34k' ); // '\u2603-\u2318'","title":"punycode.decode(string)"},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/#punycodeencodestring","text":"Converts a string of Unicode symbols to a Punycode string of ASCII symbols. // encode domain name parts punycode . encode ( 'ma\u00f1ana' ); // 'maana-pta' punycode . encode ( '\u2603-\u2318' ); // '--dqo34k'","title":"punycode.encode(string)"},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/#punycodetounicodeinput","text":"Converts a Punycode string representing a domain name or an email address to Unicode. Only the Punycoded parts of the input will be converted, i.e. it doesn\u2019t matter if you call it on a string that has already been converted to Unicode. // decode domain names punycode . toUnicode ( 'xn--maana-pta.com' ); // \u2192 'ma\u00f1ana.com' punycode . toUnicode ( 'xn----dqo34k.com' ); // \u2192 '\u2603-\u2318.com' // decode email addresses punycode . toUnicode ( '\u0434\u0436\u0443\u043c\u043b\u0430@xn--p-8sbkgc5ag7bhce.xn--ba-lmcq' ); // \u2192 '\u0434\u0436\u0443\u043c\u043b\u0430@\u0434\u0436p\u0443\u043c\u043b\u0430\u0442\u0435\u0441\u0442.b\u0440\u0444a'","title":"punycode.toUnicode(input)"},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/#punycodetoasciiinput","text":"Converts a lowercased Unicode string representing a domain name or an email address to Punycode. Only the non-ASCII parts of the input will be converted, i.e. it doesn\u2019t matter if you call it with a domain that\u2019s already in ASCII. // encode domain names punycode . toASCII ( 'ma\u00f1ana.com' ); // \u2192 'xn--maana-pta.com' punycode . toASCII ( '\u2603-\u2318.com' ); // \u2192 'xn----dqo34k.com' // encode email addresses punycode . toASCII ( '\u0434\u0436\u0443\u043c\u043b\u0430@\u0434\u0436p\u0443\u043c\u043b\u0430\u0442\u0435\u0441\u0442.b\u0440\u0444a' ); // \u2192 '\u0434\u0436\u0443\u043c\u043b\u0430@xn--p-8sbkgc5ag7bhce.xn--ba-lmcq'","title":"punycode.toASCII(input)"},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/#punycodeucs2","text":"","title":"punycode.ucs2"},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/#punycodeucs2decodestring","text":"Creates an array containing the numeric code point values of each Unicode symbol in the string. While JavaScript uses UCS-2 internally , this function will convert a pair of surrogate halves (each of which UCS-2 exposes as separate characters) into a single code point, matching UTF-16. punycode . ucs2 . decode ( 'abc' ); // \u2192 [0x61, 0x62, 0x63] // surrogate pair for U+1D306 TETRAGRAM FOR CENTRE: punycode . ucs2 . decode ( '\\uD834\\uDF06' ); // \u2192 [0x1D306]","title":"punycode.ucs2.decode(string)"},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/#punycodeucs2encodecodepoints","text":"Creates a string based on an array of numeric code point values. punycode . ucs2 . encode ([ 0x61 , 0x62 , 0x63 ]); // \u2192 'abc' punycode . ucs2 . encode ([ 0x1D306 ]); // \u2192 '\\uD834\\uDF06'","title":"punycode.ucs2.encode(codePoints)"},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/#punycodeversion","text":"A string representing the current Punycode.js version number.","title":"punycode.version"},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/#for-maintainers","text":"","title":"For maintainers"},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/#how-to-publish-a-new-release","text":"On the main branch, bump the version number in package.json : npm version patch -m 'Release v%s' Instead of patch , use minor or major as needed . Note that this produces a Git commit + tag. Push the release commit and tag: git push && git push --tags Our CI then automatically publishes the new release to npm, under both the punycode and punycode.js names.","title":"How to publish a new release"},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/#author","text":"Mathias Bynens","title":"Author"},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/#license","text":"Punycode.js is available under the MIT license.","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/","text":"qs A querystring parsing and stringifying library with some added security. Lead Maintainer: Jordan Harband The qs module was originally created and maintained by TJ Holowaychuk . Usage var qs = require ( 'qs' ); var assert = require ( 'assert' ); var obj = qs . parse ( 'a=c' ); assert . deepEqual ( obj , { a : 'c' }); var str = qs . stringify ( obj ); assert . equal ( str , 'a=c' ); Parsing Objects qs . parse ( string , [ options ]); qs allows you to create nested objects within your query strings, by surrounding the name of sub-keys with square brackets [] . For example, the string 'foo[bar]=baz' converts to: assert . deepEqual ( qs . parse ( 'foo[bar]=baz' ), { foo : { bar : 'baz' } }); When using the plainObjects option the parsed value is returned as a null object, created via { __proto__: null } and as such you should be aware that prototype methods will not exist on it and a user may set those names to whatever value they like: var nullObject = qs . parse ( 'a[hasOwnProperty]=b' , { plainObjects : true }); assert . deepEqual ( nullObject , { a : { hasOwnProperty : 'b' } }); By default parameters that would overwrite properties on the object prototype are ignored, if you wish to keep the data from those fields either use plainObjects as mentioned above, or set allowPrototypes to true which will allow user input to overwrite those properties. WARNING It is generally a bad idea to enable this option as it can cause problems when attempting to use the properties that have been overwritten. Always be careful with this option. var protoObject = qs . parse ( 'a[hasOwnProperty]=b' , { allowPrototypes : true }); assert . deepEqual ( protoObject , { a : { hasOwnProperty : 'b' } }); URI encoded strings work too: assert . deepEqual ( qs . parse ( 'a%5Bb%5D=c' ), { a : { b : 'c' } }); You can also nest your objects, like 'foo[bar][baz]=foobarbaz' : assert . deepEqual ( qs . parse ( 'foo[bar][baz]=foobarbaz' ), { foo : { bar : { baz : 'foobarbaz' } } }); By default, when nesting objects qs will only parse up to 5 children deep. This means if you attempt to parse a string like 'a[b][c][d][e][f][g][h][i]=j' your resulting object will be: var expected = { a : { b : { c : { d : { e : { f : { '[g][h][i]' : 'j' } } } } } } }; var string = 'a[b][c][d][e][f][g][h][i]=j' ; assert . deepEqual ( qs . parse ( string ), expected ); This depth can be overridden by passing a depth option to qs.parse(string, [options]) : var deep = qs . parse ( 'a[b][c][d][e][f][g][h][i]=j' , { depth : 1 }); assert . deepEqual ( deep , { a : { b : { '[c][d][e][f][g][h][i]' : 'j' } } }); You can configure qs to throw an error when parsing nested input beyond this depth using the strictDepth option (defaulted to false): try { qs . parse ( 'a[b][c][d][e][f][g][h][i]=j' , { depth : 1 , strictDepth : true }); } catch ( err ) { assert ( err instanceof RangeError ); assert . strictEqual ( err . message , 'Input depth exceeded depth option of 1 and strictDepth is true' ); } The depth limit helps mitigate abuse when qs is used to parse user input, and it is recommended to keep it a reasonably small number. The strictDepth option adds a layer of protection by throwing an error when the limit is exceeded, allowing you to catch and handle such cases. For similar reasons, by default qs will only parse up to 1000 parameters. This can be overridden by passing a parameterLimit option: var limited = qs . parse ( 'a=b&c=d' , { parameterLimit : 1 }); assert . deepEqual ( limited , { a : 'b' }); If you want an error to be thrown whenever the a limit is exceeded (eg, parameterLimit , arrayLimit ), set the throwOnLimitExceeded option to true . This option will generate a descriptive error if the query string exceeds a configured limit. try { qs . parse ( 'a=1&b=2&c=3&d=4' , { parameterLimit : 3 , throwOnLimitExceeded : true }); } catch ( err ) { assert ( err instanceof Error ); assert . strictEqual ( err . message , 'Parameter limit exceeded. Only 3 parameters allowed.' ); } When throwOnLimitExceeded is set to false (default), qs will parse up to the specified parameterLimit and ignore the rest without throwing an error. To bypass the leading question mark, use ignoreQueryPrefix : var prefixed = qs . parse ( '?a=b&c=d' , { ignoreQueryPrefix : true }); assert . deepEqual ( prefixed , { a : 'b' , c : 'd' }); An optional delimiter can also be passed: var delimited = qs . parse ( 'a=b;c=d' , { delimiter : ';' }); assert . deepEqual ( delimited , { a : 'b' , c : 'd' }); Delimiters can be a regular expression too: var regexed = qs . parse ( 'a=b;c=d,e=f' , { delimiter : /[;,]/ }); assert . deepEqual ( regexed , { a : 'b' , c : 'd' , e : 'f' }); Option allowDots can be used to enable dot notation: var withDots = qs . parse ( 'a.b=c' , { allowDots : true }); assert . deepEqual ( withDots , { a : { b : 'c' } }); Option decodeDotInKeys can be used to decode dots in keys Note: it implies allowDots , so parse will error if you set decodeDotInKeys to true , and allowDots to false . var withDots = qs . parse ( 'name%252Eobj.first=John&name%252Eobj.last=Doe' , { decodeDotInKeys : true }); assert . deepEqual ( withDots , { 'name.obj' : { first : 'John' , last : 'Doe' }}); Option allowEmptyArrays can be used to allowing empty array values in object var withEmptyArrays = qs . parse ( 'foo[]&bar=baz' , { allowEmptyArrays : true }); assert . deepEqual ( withEmptyArrays , { foo : [], bar : 'baz' }); Option duplicates can be used to change the behavior when duplicate keys are encountered assert . deepEqual ( qs . parse ( 'foo=bar&foo=baz' ), { foo : [ 'bar' , 'baz' ] }); assert . deepEqual ( qs . parse ( 'foo=bar&foo=baz' , { duplicates : 'combine' }), { foo : [ 'bar' , 'baz' ] }); assert . deepEqual ( qs . parse ( 'foo=bar&foo=baz' , { duplicates : 'first' }), { foo : 'bar' }); assert . deepEqual ( qs . parse ( 'foo=bar&foo=baz' , { duplicates : 'last' }), { foo : 'baz' }); If you have to deal with legacy browsers or services, there's also support for decoding percent-encoded octets as iso-8859-1: var oldCharset = qs . parse ( 'a=%A7' , { charset : 'iso-8859-1' }); assert . deepEqual ( oldCharset , { a : '\u00a7' }); Some services add an initial utf8=\u2713 value to forms so that old Internet Explorer versions are more likely to submit the form as utf-8. Additionally, the server can check the value against wrong encodings of the checkmark character and detect that a query string or application/x-www-form-urlencoded body was not sent as utf-8, eg. if the form had an accept-charset parameter or the containing page had a different character set. qs supports this mechanism via the charsetSentinel option. If specified, the utf8 parameter will be omitted from the returned object. It will be used to switch to iso-8859-1 / utf-8 mode depending on how the checkmark is encoded. Important : When you specify both the charset option and the charsetSentinel option, the charset will be overridden when the request contains a utf8 parameter from which the actual charset can be deduced. In that sense the charset will behave as the default charset rather than the authoritative charset. var detectedAsUtf8 = qs . parse ( 'utf8=%E2%9C%93&a=%C3%B8' , { charset : 'iso-8859-1' , charsetSentinel : true }); assert . deepEqual ( detectedAsUtf8 , { a : '\u00f8' }); // Browsers encode the checkmark as &#10003; when submitting as iso-8859-1: var detectedAsIso8859_1 = qs . parse ( 'utf8=%26%2310003%3B&a=%F8' , { charset : 'utf-8' , charsetSentinel : true }); assert . deepEqual ( detectedAsIso8859_1 , { a : '\u00f8' }); If you want to decode the &#...; syntax to the actual character, you can specify the interpretNumericEntities option as well: var detectedAsIso8859_1 = qs . parse ( 'a=%26%239786%3B' , { charset : 'iso-8859-1' , interpretNumericEntities : true }); assert . deepEqual ( detectedAsIso8859_1 , { a : '\u263a' }); It also works when the charset has been detected in charsetSentinel mode. Parsing Arrays qs can also parse arrays using a similar [] notation: var withArray = qs . parse ( 'a[]=b&a[]=c' ); assert . deepEqual ( withArray , { a : [ 'b' , 'c' ] }); You may specify an index as well: var withIndexes = qs . parse ( 'a[1]=c&a[0]=b' ); assert . deepEqual ( withIndexes , { a : [ 'b' , 'c' ] }); Note that the only difference between an index in an array and a key in an object is that the value between the brackets must be a number to create an array. When creating arrays with specific indices, qs will compact a sparse array to only the existing values preserving their order: var noSparse = qs . parse ( 'a[1]=b&a[15]=c' ); assert . deepEqual ( noSparse , { a : [ 'b' , 'c' ] }); You may also use allowSparse option to parse sparse arrays: var sparseArray = qs . parse ( 'a[1]=2&a[3]=5' , { allowSparse : true }); assert . deepEqual ( sparseArray , { a : [, '2' , , '5' ] }); Note that an empty string is also a value, and will be preserved: var withEmptyString = qs . parse ( 'a[]=&a[]=b' ); assert . deepEqual ( withEmptyString , { a : [ '' , 'b' ] }); var withIndexedEmptyString = qs . parse ( 'a[0]=b&a[1]=&a[2]=c' ); assert . deepEqual ( withIndexedEmptyString , { a : [ 'b' , '' , 'c' ] }); qs will also limit specifying indices in an array to a maximum index of 20 . Any array members with an index of greater than 20 will instead be converted to an object with the index as the key. This is needed to handle cases when someone sent, for example, a[999999999] and it will take significant time to iterate over this huge array. var withMaxIndex = qs . parse ( 'a[100]=b' ); assert . deepEqual ( withMaxIndex , { a : { '100' : 'b' } }); This limit can be overridden by passing an arrayLimit option: var withArrayLimit = qs . parse ( 'a[1]=b' , { arrayLimit : 0 }); assert . deepEqual ( withArrayLimit , { a : { '1' : 'b' } }); If you want to throw an error whenever the array limit is exceeded, set the throwOnLimitExceeded option to true . This option will generate a descriptive error if the query string exceeds a configured limit. try { qs . parse ( 'a[1]=b' , { arrayLimit : 0 , throwOnLimitExceeded : true }); } catch ( err ) { assert ( err instanceof Error ); assert . strictEqual ( err . message , 'Array limit exceeded. Only 0 elements allowed in an array.' ); } When throwOnLimitExceeded is set to false (default), qs will parse up to the specified arrayLimit and if the limit is exceeded, the array will instead be converted to an object with the index as the key To disable array parsing entirely, set parseArrays to false . var noParsingArrays = qs . parse ( 'a[]=b' , { parseArrays : false }); assert . deepEqual ( noParsingArrays , { a : { '0' : 'b' } }); If you mix notations, qs will merge the two items into an object: var mixedNotation = qs . parse ( 'a[0]=b&a[b]=c' ); assert . deepEqual ( mixedNotation , { a : { '0' : 'b' , b : 'c' } }); You can also create arrays of objects: var arraysOfObjects = qs . parse ( 'a[][b]=c' ); assert . deepEqual ( arraysOfObjects , { a : [{ b : 'c' }] }); Some people use comma to join array, qs can parse it: var arraysOfObjects = qs . parse ( 'a=b,c' , { comma : true }) assert . deepEqual ( arraysOfObjects , { a : [ 'b' , 'c' ] }) ( this cannot convert nested objects, such as a={b:1},{c:d} ) Parsing primitive/scalar values (numbers, booleans, null, etc) By default, all values are parsed as strings. This behavior will not change and is explained in issue #91 . var primitiveValues = qs . parse ( 'a=15&b=true&c=null' ); assert . deepEqual ( primitiveValues , { a : '15' , b : 'true' , c : 'null' }); If you wish to auto-convert values which look like numbers, booleans, and other values into their primitive counterparts, you can use the query-types Express JS middleware which will auto-convert all request query parameters. Stringifying qs . stringify ( object , [ options ]); When stringifying, qs by default URI encodes output. Objects are stringified as you would expect: assert . equal ( qs . stringify ({ a : 'b' }), 'a=b' ); assert . equal ( qs . stringify ({ a : { b : 'c' } }), 'a%5Bb%5D=c' ); This encoding can be disabled by setting the encode option to false : var unencoded = qs . stringify ({ a : { b : 'c' } }, { encode : false }); assert . equal ( unencoded , 'a[b]=c' ); Encoding can be disabled for keys by setting the encodeValuesOnly option to true : var encodedValues = qs . stringify ( { a : 'b' , c : [ 'd' , 'e=f' ], f : [[ 'g' ], [ 'h' ]] }, { encodeValuesOnly : true } ); assert . equal ( encodedValues , 'a=b&c[0]=d&c[1]=e%3Df&f[0][0]=g&f[1][0]=h' ); This encoding can also be replaced by a custom encoding method set as encoder option: var encoded = qs . stringify ({ a : { b : 'c' } }, { encoder : function ( str ) { // Passed in values `a`, `b`, `c` return // Return encoded string }}) (Note: the encoder option does not apply if encode is false ) Analogue to the encoder there is a decoder option for parse to override decoding of properties and values: var decoded = qs . parse ( 'x=z' , { decoder : function ( str ) { // Passed in values `x`, `z` return // Return decoded string }}) You can encode keys and values using different logic by using the type argument provided to the encoder: var encoded = qs . stringify ({ a : { b : 'c' } }, { encoder : function ( str , defaultEncoder , charset , type ) { if ( type === 'key' ) { return // Encoded key } else if ( type === 'value' ) { return // Encoded value } }}) The type argument is also provided to the decoder: var decoded = qs . parse ( 'x=z' , { decoder : function ( str , defaultDecoder , charset , type ) { if ( type === 'key' ) { return // Decoded key } else if ( type === 'value' ) { return // Decoded value } }}) Examples beyond this point will be shown as though the output is not URI encoded for clarity. Please note that the return values in these cases will be URI encoded during real usage. When arrays are stringified, they follow the arrayFormat option, which defaults to indices : qs . stringify ({ a : [ 'b' , 'c' , 'd' ] }); // 'a[0]=b&a[1]=c&a[2]=d' You may override this by setting the indices option to false , or to be more explicit, the arrayFormat option to repeat : qs . stringify ({ a : [ 'b' , 'c' , 'd' ] }, { indices : false }); // 'a=b&a=c&a=d' You may use the arrayFormat option to specify the format of the output array: qs . stringify ({ a : [ 'b' , 'c' ] }, { arrayFormat : 'indices' }) // 'a[0]=b&a[1]=c' qs . stringify ({ a : [ 'b' , 'c' ] }, { arrayFormat : 'brackets' }) // 'a[]=b&a[]=c' qs . stringify ({ a : [ 'b' , 'c' ] }, { arrayFormat : 'repeat' }) // 'a=b&a=c' qs . stringify ({ a : [ 'b' , 'c' ] }, { arrayFormat : 'comma' }) // 'a=b,c' Note: when using arrayFormat set to 'comma' , you can also pass the commaRoundTrip option set to true or false , to append [] on single-item arrays, so that they can round trip through a parse. When objects are stringified, by default they use bracket notation: qs . stringify ({ a : { b : { c : 'd' , e : 'f' } } }); // 'a[b][c]=d&a[b][e]=f' You may override this to use dot notation by setting the allowDots option to true : qs . stringify ({ a : { b : { c : 'd' , e : 'f' } } }, { allowDots : true }); // 'a.b.c=d&a.b.e=f' You may encode the dot notation in the keys of object with option encodeDotInKeys by setting it to true : Note: it implies allowDots , so stringify will error if you set decodeDotInKeys to true , and allowDots to false . Caveat: when encodeValuesOnly is true as well as encodeDotInKeys , only dots in keys and nothing else will be encoded. qs . stringify ({ \"name.obj\" : { \"first\" : \"John\" , \"last\" : \"Doe\" } }, { allowDots : true , encodeDotInKeys : true }) // 'name%252Eobj.first=John&name%252Eobj.last=Doe' You may allow empty array values by setting the allowEmptyArrays option to true : qs . stringify ({ foo : [], bar : 'baz' }, { allowEmptyArrays : true }); // 'foo[]&bar=baz' Empty strings and null values will omit the value, but the equals sign (=) remains in place: assert . equal ( qs . stringify ({ a : '' }), 'a=' ); Key with no values (such as an empty object or array) will return nothing: assert . equal ( qs . stringify ({ a : [] }), '' ); assert . equal ( qs . stringify ({ a : {} }), '' ); assert . equal ( qs . stringify ({ a : [{}] }), '' ); assert . equal ( qs . stringify ({ a : { b : []} }), '' ); assert . equal ( qs . stringify ({ a : { b : {}} }), '' ); Properties that are set to undefined will be omitted entirely: assert . equal ( qs . stringify ({ a : null , b : undefined }), 'a=' ); The query string may optionally be prepended with a question mark: assert . equal ( qs . stringify ({ a : 'b' , c : 'd' }, { addQueryPrefix : true }), '?a=b&c=d' ); The delimiter may be overridden with stringify as well: assert . equal ( qs . stringify ({ a : 'b' , c : 'd' }, { delimiter : ';' }), 'a=b;c=d' ); If you only want to override the serialization of Date objects, you can provide a serializeDate option: var date = new Date ( 7 ); assert . equal ( qs . stringify ({ a : date }), 'a=1970-01-01T00:00:00.007Z' . replace ( /:/g , '%3A' )); assert . equal ( qs . stringify ({ a : date }, { serializeDate : function ( d ) { return d . getTime (); } }), 'a=7' ); You may use the sort option to affect the order of parameter keys: function alphabeticalSort ( a , b ) { return a . localeCompare ( b ); } assert . equal ( qs . stringify ({ a : 'c' , z : 'y' , b : 'f' }, { sort : alphabeticalSort }), 'a=c&b=f&z=y' ); Finally, you can use the filter option to restrict which keys will be included in the stringified output. If you pass a function, it will be called for each key to obtain the replacement value. Otherwise, if you pass an array, it will be used to select properties and array indices for stringification: function filterFunc ( prefix , value ) { if ( prefix == 'b' ) { // Return an `undefined` value to omit a property. return ; } if ( prefix == 'e[f]' ) { return value . getTime (); } if ( prefix == 'e[g][0]' ) { return value * 2 ; } return value ; } qs . stringify ({ a : 'b' , c : 'd' , e : { f : new Date ( 123 ), g : [ 2 ] } }, { filter : filterFunc }); // 'a=b&c=d&e[f]=123&e[g][0]=4' qs . stringify ({ a : 'b' , c : 'd' , e : 'f' }, { filter : [ 'a' , 'e' ] }); // 'a=b&e=f' qs . stringify ({ a : [ 'b' , 'c' , 'd' ], e : 'f' }, { filter : [ 'a' , 0 , 2 ] }); // 'a[0]=b&a[2]=d' You could also use filter to inject custom serialization for user defined types. Consider you're working with some api that expects query strings of the format for ranges: https://domain.com/endpoint?range=30...70 For which you model as: class Range { constructor ( from , to ) { this . from = from ; this . to = to ; } } You could inject a custom serializer to handle values of this type: qs . stringify ( { range : new Range ( 30 , 70 ), }, { filter : ( prefix , value ) => { if ( value instanceof Range ) { return ` ${ value . from } ... ${ value . to } ` ; } // serialize the usual way return value ; }, } ); // range=30...70 Handling of null values By default, null values are treated like empty strings: var withNull = qs . stringify ({ a : null , b : '' }); assert . equal ( withNull , 'a=&b=' ); Parsing does not distinguish between parameters with and without equal signs. Both are converted to empty strings. var equalsInsensitive = qs . parse ( 'a&b=' ); assert . deepEqual ( equalsInsensitive , { a : '' , b : '' }); To distinguish between null values and empty strings use the strictNullHandling flag. In the result string the null values have no = sign: var strictNull = qs . stringify ({ a : null , b : '' }, { strictNullHandling : true }); assert . equal ( strictNull , 'a&b=' ); To parse values without = back to null use the strictNullHandling flag: var parsedStrictNull = qs . parse ( 'a&b=' , { strictNullHandling : true }); assert . deepEqual ( parsedStrictNull , { a : null , b : '' }); To completely skip rendering keys with null values, use the skipNulls flag: var nullsSkipped = qs . stringify ({ a : 'b' , c : null }, { skipNulls : true }); assert . equal ( nullsSkipped , 'a=b' ); If you're communicating with legacy systems, you can switch to iso-8859-1 using the charset option: var iso = qs . stringify ({ \u00e6 : '\u00e6' }, { charset : 'iso-8859-1' }); assert . equal ( iso , '%E6=%E6' ); Characters that don't exist in iso-8859-1 will be converted to numeric entities, similar to what browsers do: var numeric = qs . stringify ({ a : '\u263a' }, { charset : 'iso-8859-1' }); assert . equal ( numeric , 'a=%26%239786%3B' ); You can use the charsetSentinel option to announce the character by including an utf8=\u2713 parameter with the proper encoding if the checkmark, similar to what Ruby on Rails and others do when submitting forms. var sentinel = qs . stringify ({ a : '\u263a' }, { charsetSentinel : true }); assert . equal ( sentinel , 'utf8=%E2%9C%93&a=%E2%98%BA' ); var isoSentinel = qs . stringify ({ a : '\u00e6' }, { charsetSentinel : true , charset : 'iso-8859-1' }); assert . equal ( isoSentinel , 'utf8=%26%2310003%3B&a=%E6' ); Dealing with special character sets By default the encoding and decoding of characters is done in utf-8 , and iso-8859-1 support is also built in via the charset parameter. If you wish to encode querystrings to a different character set (i.e. Shift JIS ) you can use the qs-iconv library: var encoder = require ( 'qs-iconv/encoder' )( 'shift_jis' ); var shiftJISEncoded = qs . stringify ({ a : '\u3053\u3093\u306b\u3061\u306f\uff01' }, { encoder : encoder }); assert . equal ( shiftJISEncoded , 'a=%82%B1%82%F1%82%C9%82%BF%82%CD%81I' ); This also works for decoding of query strings: var decoder = require ( 'qs-iconv/decoder' )( 'shift_jis' ); var obj = qs . parse ( 'a=%82%B1%82%F1%82%C9%82%BF%82%CD%81I' , { decoder : decoder }); assert . deepEqual ( obj , { a : '\u3053\u3093\u306b\u3061\u306f\uff01' }); RFC 3986 and RFC 1738 space encoding RFC3986 used as default option and encodes ' ' to %20 which is backward compatible. In the same time, output can be stringified as per RFC1738 with ' ' equal to '+'. assert.equal(qs.stringify({ a: 'b c' }), 'a=b%20c'); assert.equal(qs.stringify({ a: 'b c' }, { format : 'RFC3986' }), 'a=b%20c'); assert.equal(qs.stringify({ a: 'b c' }, { format : 'RFC1738' }), 'a=b+c'); Security Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report. qs for enterprise Available as part of the Tidelift Subscription The maintainers of qs and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. Learn more. Acknowledgements qs logo by NUMI :","title":"Index"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/#qs","text":"A querystring parsing and stringifying library with some added security. Lead Maintainer: Jordan Harband The qs module was originally created and maintained by TJ Holowaychuk .","title":"qs"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/#usage","text":"var qs = require ( 'qs' ); var assert = require ( 'assert' ); var obj = qs . parse ( 'a=c' ); assert . deepEqual ( obj , { a : 'c' }); var str = qs . stringify ( obj ); assert . equal ( str , 'a=c' );","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/#parsing-objects","text":"qs . parse ( string , [ options ]); qs allows you to create nested objects within your query strings, by surrounding the name of sub-keys with square brackets [] . For example, the string 'foo[bar]=baz' converts to: assert . deepEqual ( qs . parse ( 'foo[bar]=baz' ), { foo : { bar : 'baz' } }); When using the plainObjects option the parsed value is returned as a null object, created via { __proto__: null } and as such you should be aware that prototype methods will not exist on it and a user may set those names to whatever value they like: var nullObject = qs . parse ( 'a[hasOwnProperty]=b' , { plainObjects : true }); assert . deepEqual ( nullObject , { a : { hasOwnProperty : 'b' } }); By default parameters that would overwrite properties on the object prototype are ignored, if you wish to keep the data from those fields either use plainObjects as mentioned above, or set allowPrototypes to true which will allow user input to overwrite those properties. WARNING It is generally a bad idea to enable this option as it can cause problems when attempting to use the properties that have been overwritten. Always be careful with this option. var protoObject = qs . parse ( 'a[hasOwnProperty]=b' , { allowPrototypes : true }); assert . deepEqual ( protoObject , { a : { hasOwnProperty : 'b' } }); URI encoded strings work too: assert . deepEqual ( qs . parse ( 'a%5Bb%5D=c' ), { a : { b : 'c' } }); You can also nest your objects, like 'foo[bar][baz]=foobarbaz' : assert . deepEqual ( qs . parse ( 'foo[bar][baz]=foobarbaz' ), { foo : { bar : { baz : 'foobarbaz' } } }); By default, when nesting objects qs will only parse up to 5 children deep. This means if you attempt to parse a string like 'a[b][c][d][e][f][g][h][i]=j' your resulting object will be: var expected = { a : { b : { c : { d : { e : { f : { '[g][h][i]' : 'j' } } } } } } }; var string = 'a[b][c][d][e][f][g][h][i]=j' ; assert . deepEqual ( qs . parse ( string ), expected ); This depth can be overridden by passing a depth option to qs.parse(string, [options]) : var deep = qs . parse ( 'a[b][c][d][e][f][g][h][i]=j' , { depth : 1 }); assert . deepEqual ( deep , { a : { b : { '[c][d][e][f][g][h][i]' : 'j' } } }); You can configure qs to throw an error when parsing nested input beyond this depth using the strictDepth option (defaulted to false): try { qs . parse ( 'a[b][c][d][e][f][g][h][i]=j' , { depth : 1 , strictDepth : true }); } catch ( err ) { assert ( err instanceof RangeError ); assert . strictEqual ( err . message , 'Input depth exceeded depth option of 1 and strictDepth is true' ); } The depth limit helps mitigate abuse when qs is used to parse user input, and it is recommended to keep it a reasonably small number. The strictDepth option adds a layer of protection by throwing an error when the limit is exceeded, allowing you to catch and handle such cases. For similar reasons, by default qs will only parse up to 1000 parameters. This can be overridden by passing a parameterLimit option: var limited = qs . parse ( 'a=b&c=d' , { parameterLimit : 1 }); assert . deepEqual ( limited , { a : 'b' }); If you want an error to be thrown whenever the a limit is exceeded (eg, parameterLimit , arrayLimit ), set the throwOnLimitExceeded option to true . This option will generate a descriptive error if the query string exceeds a configured limit. try { qs . parse ( 'a=1&b=2&c=3&d=4' , { parameterLimit : 3 , throwOnLimitExceeded : true }); } catch ( err ) { assert ( err instanceof Error ); assert . strictEqual ( err . message , 'Parameter limit exceeded. Only 3 parameters allowed.' ); } When throwOnLimitExceeded is set to false (default), qs will parse up to the specified parameterLimit and ignore the rest without throwing an error. To bypass the leading question mark, use ignoreQueryPrefix : var prefixed = qs . parse ( '?a=b&c=d' , { ignoreQueryPrefix : true }); assert . deepEqual ( prefixed , { a : 'b' , c : 'd' }); An optional delimiter can also be passed: var delimited = qs . parse ( 'a=b;c=d' , { delimiter : ';' }); assert . deepEqual ( delimited , { a : 'b' , c : 'd' }); Delimiters can be a regular expression too: var regexed = qs . parse ( 'a=b;c=d,e=f' , { delimiter : /[;,]/ }); assert . deepEqual ( regexed , { a : 'b' , c : 'd' , e : 'f' }); Option allowDots can be used to enable dot notation: var withDots = qs . parse ( 'a.b=c' , { allowDots : true }); assert . deepEqual ( withDots , { a : { b : 'c' } }); Option decodeDotInKeys can be used to decode dots in keys Note: it implies allowDots , so parse will error if you set decodeDotInKeys to true , and allowDots to false . var withDots = qs . parse ( 'name%252Eobj.first=John&name%252Eobj.last=Doe' , { decodeDotInKeys : true }); assert . deepEqual ( withDots , { 'name.obj' : { first : 'John' , last : 'Doe' }}); Option allowEmptyArrays can be used to allowing empty array values in object var withEmptyArrays = qs . parse ( 'foo[]&bar=baz' , { allowEmptyArrays : true }); assert . deepEqual ( withEmptyArrays , { foo : [], bar : 'baz' }); Option duplicates can be used to change the behavior when duplicate keys are encountered assert . deepEqual ( qs . parse ( 'foo=bar&foo=baz' ), { foo : [ 'bar' , 'baz' ] }); assert . deepEqual ( qs . parse ( 'foo=bar&foo=baz' , { duplicates : 'combine' }), { foo : [ 'bar' , 'baz' ] }); assert . deepEqual ( qs . parse ( 'foo=bar&foo=baz' , { duplicates : 'first' }), { foo : 'bar' }); assert . deepEqual ( qs . parse ( 'foo=bar&foo=baz' , { duplicates : 'last' }), { foo : 'baz' }); If you have to deal with legacy browsers or services, there's also support for decoding percent-encoded octets as iso-8859-1: var oldCharset = qs . parse ( 'a=%A7' , { charset : 'iso-8859-1' }); assert . deepEqual ( oldCharset , { a : '\u00a7' }); Some services add an initial utf8=\u2713 value to forms so that old Internet Explorer versions are more likely to submit the form as utf-8. Additionally, the server can check the value against wrong encodings of the checkmark character and detect that a query string or application/x-www-form-urlencoded body was not sent as utf-8, eg. if the form had an accept-charset parameter or the containing page had a different character set. qs supports this mechanism via the charsetSentinel option. If specified, the utf8 parameter will be omitted from the returned object. It will be used to switch to iso-8859-1 / utf-8 mode depending on how the checkmark is encoded. Important : When you specify both the charset option and the charsetSentinel option, the charset will be overridden when the request contains a utf8 parameter from which the actual charset can be deduced. In that sense the charset will behave as the default charset rather than the authoritative charset. var detectedAsUtf8 = qs . parse ( 'utf8=%E2%9C%93&a=%C3%B8' , { charset : 'iso-8859-1' , charsetSentinel : true }); assert . deepEqual ( detectedAsUtf8 , { a : '\u00f8' }); // Browsers encode the checkmark as &#10003; when submitting as iso-8859-1: var detectedAsIso8859_1 = qs . parse ( 'utf8=%26%2310003%3B&a=%F8' , { charset : 'utf-8' , charsetSentinel : true }); assert . deepEqual ( detectedAsIso8859_1 , { a : '\u00f8' }); If you want to decode the &#...; syntax to the actual character, you can specify the interpretNumericEntities option as well: var detectedAsIso8859_1 = qs . parse ( 'a=%26%239786%3B' , { charset : 'iso-8859-1' , interpretNumericEntities : true }); assert . deepEqual ( detectedAsIso8859_1 , { a : '\u263a' }); It also works when the charset has been detected in charsetSentinel mode.","title":"Parsing Objects"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/#parsing-arrays","text":"qs can also parse arrays using a similar [] notation: var withArray = qs . parse ( 'a[]=b&a[]=c' ); assert . deepEqual ( withArray , { a : [ 'b' , 'c' ] }); You may specify an index as well: var withIndexes = qs . parse ( 'a[1]=c&a[0]=b' ); assert . deepEqual ( withIndexes , { a : [ 'b' , 'c' ] }); Note that the only difference between an index in an array and a key in an object is that the value between the brackets must be a number to create an array. When creating arrays with specific indices, qs will compact a sparse array to only the existing values preserving their order: var noSparse = qs . parse ( 'a[1]=b&a[15]=c' ); assert . deepEqual ( noSparse , { a : [ 'b' , 'c' ] }); You may also use allowSparse option to parse sparse arrays: var sparseArray = qs . parse ( 'a[1]=2&a[3]=5' , { allowSparse : true }); assert . deepEqual ( sparseArray , { a : [, '2' , , '5' ] }); Note that an empty string is also a value, and will be preserved: var withEmptyString = qs . parse ( 'a[]=&a[]=b' ); assert . deepEqual ( withEmptyString , { a : [ '' , 'b' ] }); var withIndexedEmptyString = qs . parse ( 'a[0]=b&a[1]=&a[2]=c' ); assert . deepEqual ( withIndexedEmptyString , { a : [ 'b' , '' , 'c' ] }); qs will also limit specifying indices in an array to a maximum index of 20 . Any array members with an index of greater than 20 will instead be converted to an object with the index as the key. This is needed to handle cases when someone sent, for example, a[999999999] and it will take significant time to iterate over this huge array. var withMaxIndex = qs . parse ( 'a[100]=b' ); assert . deepEqual ( withMaxIndex , { a : { '100' : 'b' } }); This limit can be overridden by passing an arrayLimit option: var withArrayLimit = qs . parse ( 'a[1]=b' , { arrayLimit : 0 }); assert . deepEqual ( withArrayLimit , { a : { '1' : 'b' } }); If you want to throw an error whenever the array limit is exceeded, set the throwOnLimitExceeded option to true . This option will generate a descriptive error if the query string exceeds a configured limit. try { qs . parse ( 'a[1]=b' , { arrayLimit : 0 , throwOnLimitExceeded : true }); } catch ( err ) { assert ( err instanceof Error ); assert . strictEqual ( err . message , 'Array limit exceeded. Only 0 elements allowed in an array.' ); } When throwOnLimitExceeded is set to false (default), qs will parse up to the specified arrayLimit and if the limit is exceeded, the array will instead be converted to an object with the index as the key To disable array parsing entirely, set parseArrays to false . var noParsingArrays = qs . parse ( 'a[]=b' , { parseArrays : false }); assert . deepEqual ( noParsingArrays , { a : { '0' : 'b' } }); If you mix notations, qs will merge the two items into an object: var mixedNotation = qs . parse ( 'a[0]=b&a[b]=c' ); assert . deepEqual ( mixedNotation , { a : { '0' : 'b' , b : 'c' } }); You can also create arrays of objects: var arraysOfObjects = qs . parse ( 'a[][b]=c' ); assert . deepEqual ( arraysOfObjects , { a : [{ b : 'c' }] }); Some people use comma to join array, qs can parse it: var arraysOfObjects = qs . parse ( 'a=b,c' , { comma : true }) assert . deepEqual ( arraysOfObjects , { a : [ 'b' , 'c' ] }) ( this cannot convert nested objects, such as a={b:1},{c:d} )","title":"Parsing Arrays"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/#parsing-primitivescalar-values-numbers-booleans-null-etc","text":"By default, all values are parsed as strings. This behavior will not change and is explained in issue #91 . var primitiveValues = qs . parse ( 'a=15&b=true&c=null' ); assert . deepEqual ( primitiveValues , { a : '15' , b : 'true' , c : 'null' }); If you wish to auto-convert values which look like numbers, booleans, and other values into their primitive counterparts, you can use the query-types Express JS middleware which will auto-convert all request query parameters.","title":"Parsing primitive/scalar values (numbers, booleans, null, etc)"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/#stringifying","text":"qs . stringify ( object , [ options ]); When stringifying, qs by default URI encodes output. Objects are stringified as you would expect: assert . equal ( qs . stringify ({ a : 'b' }), 'a=b' ); assert . equal ( qs . stringify ({ a : { b : 'c' } }), 'a%5Bb%5D=c' ); This encoding can be disabled by setting the encode option to false : var unencoded = qs . stringify ({ a : { b : 'c' } }, { encode : false }); assert . equal ( unencoded , 'a[b]=c' ); Encoding can be disabled for keys by setting the encodeValuesOnly option to true : var encodedValues = qs . stringify ( { a : 'b' , c : [ 'd' , 'e=f' ], f : [[ 'g' ], [ 'h' ]] }, { encodeValuesOnly : true } ); assert . equal ( encodedValues , 'a=b&c[0]=d&c[1]=e%3Df&f[0][0]=g&f[1][0]=h' ); This encoding can also be replaced by a custom encoding method set as encoder option: var encoded = qs . stringify ({ a : { b : 'c' } }, { encoder : function ( str ) { // Passed in values `a`, `b`, `c` return // Return encoded string }}) (Note: the encoder option does not apply if encode is false ) Analogue to the encoder there is a decoder option for parse to override decoding of properties and values: var decoded = qs . parse ( 'x=z' , { decoder : function ( str ) { // Passed in values `x`, `z` return // Return decoded string }}) You can encode keys and values using different logic by using the type argument provided to the encoder: var encoded = qs . stringify ({ a : { b : 'c' } }, { encoder : function ( str , defaultEncoder , charset , type ) { if ( type === 'key' ) { return // Encoded key } else if ( type === 'value' ) { return // Encoded value } }}) The type argument is also provided to the decoder: var decoded = qs . parse ( 'x=z' , { decoder : function ( str , defaultDecoder , charset , type ) { if ( type === 'key' ) { return // Decoded key } else if ( type === 'value' ) { return // Decoded value } }}) Examples beyond this point will be shown as though the output is not URI encoded for clarity. Please note that the return values in these cases will be URI encoded during real usage. When arrays are stringified, they follow the arrayFormat option, which defaults to indices : qs . stringify ({ a : [ 'b' , 'c' , 'd' ] }); // 'a[0]=b&a[1]=c&a[2]=d' You may override this by setting the indices option to false , or to be more explicit, the arrayFormat option to repeat : qs . stringify ({ a : [ 'b' , 'c' , 'd' ] }, { indices : false }); // 'a=b&a=c&a=d' You may use the arrayFormat option to specify the format of the output array: qs . stringify ({ a : [ 'b' , 'c' ] }, { arrayFormat : 'indices' }) // 'a[0]=b&a[1]=c' qs . stringify ({ a : [ 'b' , 'c' ] }, { arrayFormat : 'brackets' }) // 'a[]=b&a[]=c' qs . stringify ({ a : [ 'b' , 'c' ] }, { arrayFormat : 'repeat' }) // 'a=b&a=c' qs . stringify ({ a : [ 'b' , 'c' ] }, { arrayFormat : 'comma' }) // 'a=b,c' Note: when using arrayFormat set to 'comma' , you can also pass the commaRoundTrip option set to true or false , to append [] on single-item arrays, so that they can round trip through a parse. When objects are stringified, by default they use bracket notation: qs . stringify ({ a : { b : { c : 'd' , e : 'f' } } }); // 'a[b][c]=d&a[b][e]=f' You may override this to use dot notation by setting the allowDots option to true : qs . stringify ({ a : { b : { c : 'd' , e : 'f' } } }, { allowDots : true }); // 'a.b.c=d&a.b.e=f' You may encode the dot notation in the keys of object with option encodeDotInKeys by setting it to true : Note: it implies allowDots , so stringify will error if you set decodeDotInKeys to true , and allowDots to false . Caveat: when encodeValuesOnly is true as well as encodeDotInKeys , only dots in keys and nothing else will be encoded. qs . stringify ({ \"name.obj\" : { \"first\" : \"John\" , \"last\" : \"Doe\" } }, { allowDots : true , encodeDotInKeys : true }) // 'name%252Eobj.first=John&name%252Eobj.last=Doe' You may allow empty array values by setting the allowEmptyArrays option to true : qs . stringify ({ foo : [], bar : 'baz' }, { allowEmptyArrays : true }); // 'foo[]&bar=baz' Empty strings and null values will omit the value, but the equals sign (=) remains in place: assert . equal ( qs . stringify ({ a : '' }), 'a=' ); Key with no values (such as an empty object or array) will return nothing: assert . equal ( qs . stringify ({ a : [] }), '' ); assert . equal ( qs . stringify ({ a : {} }), '' ); assert . equal ( qs . stringify ({ a : [{}] }), '' ); assert . equal ( qs . stringify ({ a : { b : []} }), '' ); assert . equal ( qs . stringify ({ a : { b : {}} }), '' ); Properties that are set to undefined will be omitted entirely: assert . equal ( qs . stringify ({ a : null , b : undefined }), 'a=' ); The query string may optionally be prepended with a question mark: assert . equal ( qs . stringify ({ a : 'b' , c : 'd' }, { addQueryPrefix : true }), '?a=b&c=d' ); The delimiter may be overridden with stringify as well: assert . equal ( qs . stringify ({ a : 'b' , c : 'd' }, { delimiter : ';' }), 'a=b;c=d' ); If you only want to override the serialization of Date objects, you can provide a serializeDate option: var date = new Date ( 7 ); assert . equal ( qs . stringify ({ a : date }), 'a=1970-01-01T00:00:00.007Z' . replace ( /:/g , '%3A' )); assert . equal ( qs . stringify ({ a : date }, { serializeDate : function ( d ) { return d . getTime (); } }), 'a=7' ); You may use the sort option to affect the order of parameter keys: function alphabeticalSort ( a , b ) { return a . localeCompare ( b ); } assert . equal ( qs . stringify ({ a : 'c' , z : 'y' , b : 'f' }, { sort : alphabeticalSort }), 'a=c&b=f&z=y' ); Finally, you can use the filter option to restrict which keys will be included in the stringified output. If you pass a function, it will be called for each key to obtain the replacement value. Otherwise, if you pass an array, it will be used to select properties and array indices for stringification: function filterFunc ( prefix , value ) { if ( prefix == 'b' ) { // Return an `undefined` value to omit a property. return ; } if ( prefix == 'e[f]' ) { return value . getTime (); } if ( prefix == 'e[g][0]' ) { return value * 2 ; } return value ; } qs . stringify ({ a : 'b' , c : 'd' , e : { f : new Date ( 123 ), g : [ 2 ] } }, { filter : filterFunc }); // 'a=b&c=d&e[f]=123&e[g][0]=4' qs . stringify ({ a : 'b' , c : 'd' , e : 'f' }, { filter : [ 'a' , 'e' ] }); // 'a=b&e=f' qs . stringify ({ a : [ 'b' , 'c' , 'd' ], e : 'f' }, { filter : [ 'a' , 0 , 2 ] }); // 'a[0]=b&a[2]=d' You could also use filter to inject custom serialization for user defined types. Consider you're working with some api that expects query strings of the format for ranges: https://domain.com/endpoint?range=30...70 For which you model as: class Range { constructor ( from , to ) { this . from = from ; this . to = to ; } } You could inject a custom serializer to handle values of this type: qs . stringify ( { range : new Range ( 30 , 70 ), }, { filter : ( prefix , value ) => { if ( value instanceof Range ) { return ` ${ value . from } ... ${ value . to } ` ; } // serialize the usual way return value ; }, } ); // range=30...70","title":"Stringifying"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/#handling-of-null-values","text":"By default, null values are treated like empty strings: var withNull = qs . stringify ({ a : null , b : '' }); assert . equal ( withNull , 'a=&b=' ); Parsing does not distinguish between parameters with and without equal signs. Both are converted to empty strings. var equalsInsensitive = qs . parse ( 'a&b=' ); assert . deepEqual ( equalsInsensitive , { a : '' , b : '' }); To distinguish between null values and empty strings use the strictNullHandling flag. In the result string the null values have no = sign: var strictNull = qs . stringify ({ a : null , b : '' }, { strictNullHandling : true }); assert . equal ( strictNull , 'a&b=' ); To parse values without = back to null use the strictNullHandling flag: var parsedStrictNull = qs . parse ( 'a&b=' , { strictNullHandling : true }); assert . deepEqual ( parsedStrictNull , { a : null , b : '' }); To completely skip rendering keys with null values, use the skipNulls flag: var nullsSkipped = qs . stringify ({ a : 'b' , c : null }, { skipNulls : true }); assert . equal ( nullsSkipped , 'a=b' ); If you're communicating with legacy systems, you can switch to iso-8859-1 using the charset option: var iso = qs . stringify ({ \u00e6 : '\u00e6' }, { charset : 'iso-8859-1' }); assert . equal ( iso , '%E6=%E6' ); Characters that don't exist in iso-8859-1 will be converted to numeric entities, similar to what browsers do: var numeric = qs . stringify ({ a : '\u263a' }, { charset : 'iso-8859-1' }); assert . equal ( numeric , 'a=%26%239786%3B' ); You can use the charsetSentinel option to announce the character by including an utf8=\u2713 parameter with the proper encoding if the checkmark, similar to what Ruby on Rails and others do when submitting forms. var sentinel = qs . stringify ({ a : '\u263a' }, { charsetSentinel : true }); assert . equal ( sentinel , 'utf8=%E2%9C%93&a=%E2%98%BA' ); var isoSentinel = qs . stringify ({ a : '\u00e6' }, { charsetSentinel : true , charset : 'iso-8859-1' }); assert . equal ( isoSentinel , 'utf8=%26%2310003%3B&a=%E6' );","title":"Handling of null values"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/#dealing-with-special-character-sets","text":"By default the encoding and decoding of characters is done in utf-8 , and iso-8859-1 support is also built in via the charset parameter. If you wish to encode querystrings to a different character set (i.e. Shift JIS ) you can use the qs-iconv library: var encoder = require ( 'qs-iconv/encoder' )( 'shift_jis' ); var shiftJISEncoded = qs . stringify ({ a : '\u3053\u3093\u306b\u3061\u306f\uff01' }, { encoder : encoder }); assert . equal ( shiftJISEncoded , 'a=%82%B1%82%F1%82%C9%82%BF%82%CD%81I' ); This also works for decoding of query strings: var decoder = require ( 'qs-iconv/decoder' )( 'shift_jis' ); var obj = qs . parse ( 'a=%82%B1%82%F1%82%C9%82%BF%82%CD%81I' , { decoder : decoder }); assert . deepEqual ( obj , { a : '\u3053\u3093\u306b\u3061\u306f\uff01' });","title":"Dealing with special character sets"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/#rfc-3986-and-rfc-1738-space-encoding","text":"RFC3986 used as default option and encodes ' ' to %20 which is backward compatible. In the same time, output can be stringified as per RFC1738 with ' ' equal to '+'. assert.equal(qs.stringify({ a: 'b c' }), 'a=b%20c'); assert.equal(qs.stringify({ a: 'b c' }, { format : 'RFC3986' }), 'a=b%20c'); assert.equal(qs.stringify({ a: 'b c' }, { format : 'RFC1738' }), 'a=b+c');","title":"RFC 3986 and RFC 1738 space encoding"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/#security","text":"Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.","title":"Security"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/#qs-for-enterprise","text":"Available as part of the Tidelift Subscription The maintainers of qs and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. Learn more.","title":"qs for enterprise"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/#acknowledgements","text":"qs logo by NUMI :","title":"Acknowledgements"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/","text":"6.14.0 [New] parse : add throwOnParameterLimitExceeded option (#517) [Refactor] parse : use utils.combine more [patch] parse : add explicit throwOnLimitExceeded default [actions] use shared action; re-add finishers [meta] Fix changelog formatting bug [Deps] update side-channel [Dev Deps] update es-value-fixtures , has-bigints , has-proto , has-symbols [Tests] increase coverage 6.13.1 [Fix] stringify : avoid a crash when a filter key is null [Fix] utils.merge : functions should not be stringified into keys [Fix] parse : avoid a crash with interpretNumericEntities: true, comma: true, and iso charset [Fix] stringify : ensure a non-string filter does not crash [Refactor] use __proto__ syntax instead of Object.create for null objects [Refactor] misc cleanup [Tests] utils.merge : add some coverage [Tests] fix a test case [actions] split out node 10-20, and 20+ [Dev Deps] update es-value-fixtures , mock-property , object-inspect , tape 6.13.0 [New] parse : add strictDepth option (#511) [Tests] use npm audit instead of aud 6.12.3 [Fix] parse : properly account for strictNullHandling when allowEmptyArrays [meta] fix changelog indentation 6.12.2 [Fix] parse : parse encoded square brackets (#506) [readme] add CII best practices badge 6.12.1 [Fix] parse : Disable decodeDotInKeys by default to restore previous behavior (#501) [Performance] utils : Optimize performance under large data volumes, reduce memory usage, and speed up processing (#502) [Refactor] utils : use += [Tests] increase coverage 6.12.0 [New] parse / stringify : add decodeDotInKeys / encodeDotKeys options (#488) [New] parse : add duplicates option [New] parse / stringify : add allowEmptyArrays option to allow [] in object values (#487) [Refactor] parse / stringify : move allowDots config logic to its own variable [Refactor] stringify : move option-handling code into normalizeStringifyOptions [readme] update readme, add logos (#484) [readme] stringify : clarify default arrayFormat behavior [readme] fix line wrapping [readme] remove dead badges [Deps] update side-channel [meta] make the dist build 50% smaller [meta] add sideEffects flag [meta] run build in prepack, not prepublish [Tests] parse : remove useless tests; add coverage [Tests] stringify : increase coverage [Tests] use mock-property [Tests] stringify : improve coverage [Dev Deps] update @ljharb/eslint-config , aud , has-override-mistake , has-property-descriptors , mock-property , npmignore , object-inspect , tape [Dev Deps] pin glob , since v10.3.8+ requires a broken jackspeak [Dev Deps] pin jackspeak since 2.1.2+ depends on npm aliases, which kill the install process in npm < 6 6.11.2 [Fix] parse : Fix parsing when the global Object prototype is frozen (#473) [Tests] add passing test cases with empty keys (#473) 6.11.1 [Fix] stringify : encode comma values more consistently (#463) [readme] add usage of filter option for injecting custom serialization, i.e. of custom types (#447) [meta] remove extraneous code backticks (#457) [meta] fix changelog markdown [actions] update checkout action [actions] restrict action permissions [Dev Deps] update @ljharb/eslint-config , aud , object-inspect , tape 6.11.0 [New] [Fix] stringify : revert 0e903c0; add commaRoundTrip option (#442) [readme] fix version badge 6.10.5 [Fix] stringify : with arrayFormat: comma , properly include an explicit [] on a single-item array (#434) 6.10.4 [Fix] stringify : with arrayFormat: comma , include an explicit [] on a single-item array (#441) [meta] use npmignore to autogenerate an npmignore file [Dev Deps] update eslint , @ljharb/eslint-config , aud , has-symbol , object-inspect , tape 6.10.3 [Fix] parse : ignore __proto__ keys (#428) [Robustness] stringify : avoid relying on a global undefined (#427) [actions] reuse common workflows [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , tape 6.10.2 [Fix] stringify : actually fix cyclic references (#426) [Fix] stringify : avoid encoding arrayformat comma when encodeValuesOnly = true (#424) [readme] remove travis badge; add github actions/codecov badges; update URLs [Docs] add note and links for coercing primitive values (#408) [actions] update codecov uploader [actions] update workflows [Tests] clean up stringify tests slightly [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect , safe-publish-latest , tape 6.10.1 [Fix] stringify : avoid exception on repeated object values (#402) 6.10.0 [New] stringify : throw on cycles, instead of an infinite loop (#395, #394, #393) [New] parse : add allowSparse option for collapsing arrays with missing indices (#312) [meta] fix README.md (#399) [meta] only run npm run dist in publish, not install [Dev Deps] update eslint , @ljharb/eslint-config , aud , has-symbols , tape [Tests] fix tests on node v0.6 [Tests] use ljharb/actions/node/install instead of ljharb/actions/node/run [Tests] Revert \"[meta] ignore eclint transitive audit warning\" 6.9.7 [Fix] parse : ignore __proto__ keys (#428) [Fix] stringify : avoid encoding arrayformat comma when encodeValuesOnly = true (#424) [Robustness] stringify : avoid relying on a global undefined (#427) [readme] remove travis badge; add github actions/codecov badges; update URLs [Docs] add note and links for coercing primitive values (#408) [Tests] clean up stringify tests slightly [meta] fix README.md (#399) Revert \"[meta] ignore eclint transitive audit warning\" [actions] backport actions from main [Dev Deps] backport updates from main 6.9.6 [Fix] restore dist dir; mistakenly removed in d4f6c32 6.9.5 [Fix] stringify : do not encode parens for RFC1738 [Fix] stringify : fix arrayFormat comma with empty array/objects (#350) [Refactor] format : remove util.assign call [meta] add \"Allow Edits\" workflow; update rebase workflow [actions] switch Automatic Rebase workflow to pull_request_target event [Tests] stringify : add tests for #378 [Tests] migrate tests to Github Actions [Tests] run nyc on all tests; use tape runner [Dev Deps] update eslint , @ljharb/eslint-config , browserify , mkdirp , object-inspect , tape ; add aud 6.9.4 [Fix] stringify : when arrayFormat is comma , respect serializeDate (#364) [Refactor] stringify : reduce branching (part of #350) [Refactor] move maybeMap to utils [Dev Deps] update browserify , tape 6.9.3 [Fix] proper comma parsing of URL-encoded commas (#361) [Fix] parses comma delimited array while having percent-encoded comma treated as normal text (#336) 6.9.2 [Fix] parse : Fix parsing array from object with comma true (#359) [Fix] parse : throw a TypeError instead of an Error for bad charset (#349) [meta] ignore eclint transitive audit warning [meta] fix indentation in package.json [meta] add tidelift marketing copy [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , has-symbols , tape , mkdirp , iconv-lite [actions] add automatic rebasing / merge commit blocking 6.9.1 [Fix] parse : with comma true, handle field that holds an array of arrays (#335) [Fix] parse : with comma true, do not split non-string values (#334) [meta] add funding field [Dev Deps] update eslint , @ljharb/eslint-config [Tests] use shared travis-ci config 6.9.0 [New] parse / stringify : Pass extra key/value argument to decoder (#333) [Dev Deps] update eslint , @ljharb/eslint-config , evalmd [Tests] parse : add passing arrayFormat tests [Tests] add posttest using npx aud to run npm audit without a lockfile [Tests] up to node v12.10 , v11.15 , v10.16 , v8.16 [Tests] Buffer.from in node v5.0-v5.9 and v4.0-v4.4 requires a TypedArray 6.8.3 [Fix] parse : ignore __proto__ keys (#428) [Robustness] stringify : avoid relying on a global undefined (#427) [Fix] stringify : avoid encoding arrayformat comma when encodeValuesOnly = true (#424) [readme] remove travis badge; add github actions/codecov badges; update URLs [Tests] clean up stringify tests slightly [Docs] add note and links for coercing primitive values (#408) [meta] fix README.md (#399) [actions] backport actions from main [Dev Deps] backport updates from main [Refactor] stringify : reduce branching [meta] do not publish workflow files 6.8.2 [Fix] proper comma parsing of URL-encoded commas (#361) [Fix] parses comma delimited array while having percent-encoded comma treated as normal text (#336) 6.8.1 [Fix] parse : Fix parsing array from object with comma true (#359) [Fix] parse : throw a TypeError instead of an Error for bad charset (#349) [Fix] parse : with comma true, handle field that holds an array of arrays (#335) [fix] parse : with comma true, do not split non-string values (#334) [meta] add tidelift marketing copy [meta] add funding field [Dev Deps] update eslint , @ljharb/eslint-config , tape , safe-publish-latest , evalmd , has-symbols , iconv-lite , mkdirp , object-inspect [Tests] parse : add passing arrayFormat tests [Tests] use shared travis-ci configs [Tests] Buffer.from in node v5.0-v5.9 and v4.0-v4.4 requires a TypedArray [actions] add automatic rebasing / merge commit blocking 6.8.0 [New] add depth=false to preserve the original key; [Fix] depth=0 should preserve the original key (#326) [New] [Fix] stringify symbols and bigints [Fix] ensure node 0.12 can stringify Symbols [Fix] fix for an impossible situation: when the formatter is called with a non-string value [Refactor] formats : tiny bit of cleanup. [Dev Deps] update eslint , @ljharb/eslint-config , browserify , safe-publish-latest , iconv-lite , tape [Tests] add tests for depth=0 and depth=false behavior, both current and intuitive/intended (#326) [Tests] use eclint instead of editorconfig-tools [docs] readme: add security note [meta] add github sponsorship [meta] add FUNDING.yml [meta] Clean up license text so it\u2019s properly detected as BSD-3-Clause 6.7.3 [Fix] parse : ignore __proto__ keys (#428) [Fix] stringify : avoid encoding arrayformat comma when encodeValuesOnly = true (#424) [Robustness] stringify : avoid relying on a global undefined (#427) [readme] remove travis badge; add github actions/codecov badges; update URLs [Docs] add note and links for coercing primitive values (#408) [meta] fix README.md (#399) [meta] do not publish workflow files [actions] backport actions from main [Dev Deps] backport updates from main [Tests] use nyc for coverage [Tests] clean up stringify tests slightly 6.7.2 [Fix] proper comma parsing of URL-encoded commas (#361) [Fix] parses comma delimited array while having percent-encoded comma treated as normal text (#336) 6.7.1 [Fix] parse : Fix parsing array from object with comma true (#359) [Fix] parse : with comma true, handle field that holds an array of arrays (#335) [fix] parse : with comma true, do not split non-string values (#334) [Fix] parse : throw a TypeError instead of an Error for bad charset (#349) [Fix] fix for an impossible situation: when the formatter is called with a non-string value [Refactor] formats : tiny bit of cleanup. readme: add security note [meta] add tidelift marketing copy [meta] add funding field [meta] add FUNDING.yml [meta] Clean up license text so it\u2019s properly detected as BSD-3-Clause [Dev Deps] update eslint , @ljharb/eslint-config , tape , safe-publish-latest , evalmd , iconv-lite , mkdirp , object-inspect , browserify [Tests] parse : add passing arrayFormat tests [Tests] use shared travis-ci configs [Tests] Buffer.from in node v5.0-v5.9 and v4.0-v4.4 requires a TypedArray [Tests] add tests for depth=0 and depth=false behavior, both current and intuitive/intended [Tests] use eclint instead of editorconfig-tools [actions] add automatic rebasing / merge commit blocking 6.7.0 [New] stringify / parse : add comma as an arrayFormat option (#276, #219) [Fix] correctly parse nested arrays (#212) [Fix] utils.merge : avoid a crash with a null target and a truthy non-array source, also with an array source [Robustness] stringify : cache Object.prototype.hasOwnProperty [Refactor] utils : isBuffer : small tweak; add tests [Refactor] use cached Array.isArray [Refactor] parse / stringify : make a function to normalize the options [Refactor] utils : reduce observable [[Get]]s [Refactor] stringify / utils : cache Array.isArray [Tests] always use String(x) over x.toString() [Tests] fix Buffer tests to work in node < 4.5 and node < 5.10 [Tests] temporarily allow coverage to fail 6.6.1 [Fix] parse : ignore __proto__ keys (#428) [Fix] fix for an impossible situation: when the formatter is called with a non-string value [Fix] utils.merge : avoid a crash with a null target and an array source [Fix] utils.merge : avoid a crash with a null target and a truthy non-array source [Fix] correctly parse nested arrays [Robustness] stringify : avoid relying on a global undefined (#427) [Robustness] stringify : cache Object.prototype.hasOwnProperty [Refactor] formats : tiny bit of cleanup. [Refactor] utils : isBuffer : small tweak; add tests [Refactor]: stringify / utils : cache Array.isArray [Refactor] utils : reduce observable [[Get]]s [Refactor] use cached Array.isArray [Refactor] parse / stringify : make a function to normalize the options [readme] remove travis badge; add github actions/codecov badges; update URLs [Docs] Clarify the need for \"arrayLimit\" option [meta] fix README.md (#399) [meta] do not publish workflow files [meta] Clean up license text so it\u2019s properly detected as BSD-3-Clause [meta] add FUNDING.yml [meta] Fixes typo in CHANGELOG.md [actions] backport actions from main [Tests] fix Buffer tests to work in node < 4.5 and node < 5.10 [Tests] always use String(x) over x.toString() [Dev Deps] backport from main 6.6.0 [New] Add support for iso-8859-1, utf8 \"sentinel\" and numeric entities (#268) [New] move two-value combine to a utils function (#189) [Fix] stringify : fix a crash with strictNullHandling and a custom filter / serializeDate (#279) [Fix] when parseArrays is false, properly handle keys ending in [] (#260) [Fix] stringify : do not crash in an obscure combo of interpretNumericEntities , a bad custom decoder , & iso-8859-1 [Fix] utils : merge : fix crash when source is a truthy primitive & no options are provided [refactor] stringify : Avoid arr = arr.concat(...), push to the existing instance (#269) [Refactor] parse : only need to reassign the var once [Refactor] parse / stringify : clean up charset options checking; fix defaults [Refactor] add missing defaults [Refactor] parse : one less concat call [Refactor] utils : compactQueue : make it explicitly side-effecting [Dev Deps] update browserify , eslint , @ljharb/eslint-config , iconv-lite , safe-publish-latest , tape [Tests] up to node v10.10 , v9.11 , v8.12 , v6.14 , v4.9 ; pin included builds to LTS 6.5.3 [Fix] parse : ignore __proto__ keys (#428) [Fix] utils.merge : avoid a crash with a null target and a truthy non-array source [Fix] correctly parse nested arrays [Fix] stringify : fix a crash with strictNullHandling and a custom filter / serializeDate (#279) [Fix] utils : merge : fix crash when source is a truthy primitive & no options are provided [Fix] when parseArrays is false, properly handle keys ending in [] [Fix] fix for an impossible situation: when the formatter is called with a non-string value [Fix] utils.merge : avoid a crash with a null target and an array source [Refactor] utils : reduce observable [[Get]]s [Refactor] use cached Array.isArray [Refactor] stringify : Avoid arr = arr.concat(...), push to the existing instance (#269) [Refactor] parse : only need to reassign the var once [Robustness] stringify : avoid relying on a global undefined (#427) [readme] remove travis badge; add github actions/codecov badges; update URLs [Docs] Clean up license text so it\u2019s properly detected as BSD-3-Clause [Docs] Clarify the need for \"arrayLimit\" option [meta] fix README.md (#399) [meta] add FUNDING.yml [actions] backport actions from main [Tests] always use String(x) over x.toString() [Tests] remove nonexistent tape option [Dev Deps] backport from main 6.5.2 [Fix] use safer-buffer instead of Buffer constructor [Refactor] utils: module.exports one thing, instead of mutating exports (#230) [Dev Deps] update browserify , eslint , iconv-lite , safer-buffer , tape , browserify 6.5.1 [Fix] Fix parsing & compacting very deep objects (#224) [Refactor] name utils functions [Dev Deps] update eslint , @ljharb/eslint-config , tape [Tests] up to node v8.4 ; use nvm install-latest-npm so newer npm doesn\u2019t break older node [Tests] Use precise dist for Node.js 0.6 runtime (#225) [Tests] make 0.6 required, now that it\u2019s passing [Tests] on node v8.2 ; fix npm on node 0.6 6.5.0 [New] add utils.assign [New] pass default encoder/decoder to custom encoder/decoder functions (#206) [New] parse / stringify : add ignoreQueryPrefix / addQueryPrefix options, respectively (#213) [Fix] Handle stringifying empty objects with addQueryPrefix (#217) [Fix] do not mutate options argument (#207) [Refactor] parse : cache index to reuse in else statement (#182) [Docs] add various badges to readme (#208) [Dev Deps] update eslint , browserify , iconv-lite , tape [Tests] up to node v8.1 , v7.10 , v6.11 ; npm v4.6 breaks on node < v1; npm v5+ breaks on node < v4 [Tests] add editorconfig-tools 6.4.1 [Fix] parse : ignore __proto__ keys (#428) [Fix] fix for an impossible situation: when the formatter is called with a non-string value [Fix] use safer-buffer instead of Buffer constructor [Fix] utils.merge : avoid a crash with a null target and an array source [Fix] utils.merge : avoid a crash with a null target and a truthy non-array source [Fix] stringify : fix a crash with strictNullHandling and a custom filter / serializeDate (#279) [Fix] utils : merge : fix crash when source is a truthy primitive & no options are provided [Fix] when parseArrays is false, properly handle keys ending in [] [Robustness] stringify : avoid relying on a global undefined (#427) [Refactor] use cached Array.isArray [Refactor] stringify : Avoid arr = arr.concat(...), push to the existing instance (#269) [readme] remove travis badge; add github actions/codecov badges; update URLs [Docs] Clarify the need for \"arrayLimit\" option [meta] fix README.md (#399) [meta] Clean up license text so it\u2019s properly detected as BSD-3-Clause [meta] add FUNDING.yml [actions] backport actions from main [Tests] remove nonexistent tape option [Dev Deps] backport from main 6.4.0 [New] qs.stringify : add encodeValuesOnly option [Fix] follow allowPrototypes option during merge (#201, #201) [Fix] support keys starting with brackets (#202, #200) [Fix] chmod a-x [Dev Deps] update eslint [Tests] up to node v7.7 , v6.10 , v4.8 ; disable osx builds since they block linux builds [eslint] reduce warnings 6.3.3 [Fix] parse : ignore __proto__ keys (#428) [Fix] fix for an impossible situation: when the formatter is called with a non-string value [Fix] utils.merge : avoid a crash with a null target and an array source [Fix] utils.merge : avoid a crash with a null target and a truthy non-array source [Fix] stringify : fix a crash with strictNullHandling and a custom filter / serializeDate (#279) [Fix] utils : merge : fix crash when source is a truthy primitive & no options are provided [Fix] when parseArrays is false, properly handle keys ending in [] [Robustness] stringify : avoid relying on a global undefined (#427) [Refactor] use cached Array.isArray [Refactor] stringify : Avoid arr = arr.concat(...), push to the existing instance (#269) [Docs] Clarify the need for \"arrayLimit\" option [meta] fix README.md (#399) [meta] Clean up license text so it\u2019s properly detected as BSD-3-Clause [meta] add FUNDING.yml [actions] backport actions from main [Tests] use safer-buffer instead of Buffer constructor [Tests] remove nonexistent tape option [Dev Deps] backport from main 6.3.2 [Fix] follow allowPrototypes option during merge (#201, #200) [Dev Deps] update eslint [Fix] chmod a-x [Fix] support keys starting with brackets (#202, #200) [Tests] up to node v7.7 , v6.10 , v4.8 ; disable osx builds since they block linux builds 6.3.1 [Fix] ensure that allowPrototypes: false does not ever shadow Object.prototype properties (thanks, @snyk!) [Dev Deps] update eslint , @ljharb/eslint-config , browserify , iconv-lite , qs-iconv , tape [Tests] on all node minors; improve test matrix [Docs] document stringify option allowDots (#195) [Docs] add empty object and array values example (#195) [Docs] Fix minor inconsistency/typo (#192) [Docs] document stringify option sort (#191) [Refactor] stringify : throw faster with an invalid encoder [Refactor] remove unnecessary escapes (#184) Remove contributing.md, since qs is no longer part of hapi (#183) 6.3.0 [New] Add support for RFC 1738 (#174, #173) [New] stringify : Add serializeDate option to customize Date serialization (#159) [Fix] ensure utils.merge handles merging two arrays [Refactor] only constructors should be capitalized [Refactor] capitalized var names are for constructors only [Refactor] avoid using a sparse array [Robustness] formats : cache String#replace [Dev Deps] update browserify , eslint , @ljharb/eslint-config ; add safe-publish-latest [Tests] up to node v6.8 , v4.6 ; improve test matrix [Tests] flesh out arrayLimit/arrayFormat tests (#107) [Tests] skip Object.create tests when null objects are not available [Tests] Turn on eslint for test files (#175) 6.2.4 [Fix] parse : ignore __proto__ keys (#428) [Fix] utils.merge : avoid a crash with a null target and an array source [Fix] utils.merge : avoid a crash with a null target and a truthy non-array source [Fix] utils : merge : fix crash when source is a truthy primitive & no options are provided [Fix] when parseArrays is false, properly handle keys ending in [] [Robustness] stringify : avoid relying on a global undefined (#427) [Refactor] use cached Array.isArray [Docs] Clarify the need for \"arrayLimit\" option [meta] fix README.md (#399) [meta] Clean up license text so it\u2019s properly detected as BSD-3-Clause [meta] add FUNDING.yml [actions] backport actions from main [Tests] use safer-buffer instead of Buffer constructor [Tests] remove nonexistent tape option [Dev Deps] backport from main 6.2.3 [Fix] follow allowPrototypes option during merge (#201, #200) [Fix] chmod a-x [Fix] support keys starting with brackets (#202, #200) [Tests] up to node v7.7 , v6.10 , v4.8 ; disable osx builds since they block linux builds 6.2.2 [Fix] ensure that allowPrototypes: false does not ever shadow Object.prototype properties 6.2.1 [Fix] ensure key[]=x&key[]&key[]=y results in 3, not 2, values [Refactor] Be explicit and use Object.prototype.hasOwnProperty.call [Tests] remove parallelshell since it does not reliably report failures [Tests] up to node v6.3 , v5.12 [Dev Deps] update tape , eslint , @ljharb/eslint-config , qs-iconv 6.2.0 [New] pass Buffers to the encoder/decoder directly (#161) [New] add \"encoder\" and \"decoder\" options, for custom param encoding/decoding (#160) [Fix] fix compacting of nested sparse arrays (#150) 6.1.2 [Fix] follow allowPrototypes option during merge (#201, #200) [Fix] chmod a-x [Fix] support keys starting with brackets (#202, #200) [Tests] up to node v7.7 , v6.10 , v4.8 ; disable osx builds since they block linux builds 6.1.1 [Fix] ensure that allowPrototypes: false does not ever shadow Object.prototype properties 6.1.0 [New] allowDots option for stringify (#151) [Fix] \"sort\" option should work at a depth of 3 or more (#151) [Fix] Restore dist directory; will be removed in v7 (#148) 6.0.4 [Fix] follow allowPrototypes option during merge (#201, #200) [Fix] chmod a-x [Fix] support keys starting with brackets (#202, #200) [Tests] up to node v7.7 , v6.10 , v4.8 ; disable osx builds since they block linux builds 6.0.3 [Fix] ensure that allowPrototypes: false does not ever shadow Object.prototype properties [Fix] Restore dist directory; will be removed in v7 (#148) 6.0.2 Revert ES6 requirement and restore support for node down to v0.8. 6.0.1 #127 Fix engines definition in package.json 6.0.0 #124 Use ES6 and drop support for node < v4 5.2.1 [Fix] ensure key[]=x&key[]&key[]=y results in 3, not 2, values 5.2.0 #64 Add option to sort object keys in the query string 5.1.0 #117 make URI encoding stringified results optional #106 Add flag skipNulls to optionally skip null values in stringify 5.0.0 #114 default allowDots to false #100 include dist to npm 4.0.0 #98 make returning plain objects and allowing prototype overwriting properties optional 3.1.0 #89 Add option to disable \"Transform dot notation to bracket notation\" 3.0.0 #80 qs.parse silently drops properties #77 Perf boost #60 Add explicit option to disable array parsing #74 Bad parse when turning array into object #81 Add a filter option #68 Fixed issue with recursion and passing strings into objects. #66 Add mixed array and object dot notation support Closes: #47 #76 RFC 3986 #85 No equal sign #84 update license attribute 2.4.1 #73 Property 'hasOwnProperty' of object # is not a function 2.4.0 #70 Add arrayFormat option 2.3.3 #59 make sure array indexes are >= 0, closes #57 #58 make qs usable for browser loader 2.3.2 #55 allow merging a string into an object 2.3.1 #52 Return \"undefined\" and \"false\" instead of throwing \"TypeError\". 2.3.0 #50 add option to omit array indices, closes #46 2.2.5 #39 Is there an alternative to Buffer.isBuffer? #49 refactor utils.merge, fixes #45 #41 avoid browserifying Buffer, for #39 2.2.4 #38 how to handle object keys beginning with a number 2.2.3 #37 parser discards first empty value in array #36 Update to lab 4.x 2.2.2 #33 Error when plain object in a value #34 use Object.prototype.hasOwnProperty.call instead of obj.hasOwnProperty #24 Changelog? Semver? 2.2.1 #32 account for circular references properly, closes #31 #31 qs.parse stackoverflow on circular objects 2.2.0 #26 Don't use Buffer global if it's not present #30 Bug when merging non-object values into arrays #29 Don't call Utils.clone at the top of Utils.merge #23 Ability to not limit parameters? 2.1.0 #22 Enable using a RegExp as delimiter 2.0.0 #18 Why is there arrayLimit? #20 Configurable parametersLimit #21 make all limits optional, for #18, for #20 1.2.2 #19 Don't overwrite null values 1.2.1 #16 ignore non-string delimiters #15 Close code block 1.2.0 #12 Add optional delim argument #13 fix #11: flattened keys in array are now correctly parsed 1.1.0 #7 Empty values of a POST array disappear after being submitted #9 Should not omit equals signs (=) when value is null #6 Minor grammar fix in README 1.0.2 #5 array holes incorrectly copied into object on large index","title":"CHANGELOG"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6140","text":"[New] parse : add throwOnParameterLimitExceeded option (#517) [Refactor] parse : use utils.combine more [patch] parse : add explicit throwOnLimitExceeded default [actions] use shared action; re-add finishers [meta] Fix changelog formatting bug [Deps] update side-channel [Dev Deps] update es-value-fixtures , has-bigints , has-proto , has-symbols [Tests] increase coverage","title":"6.14.0"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6131","text":"[Fix] stringify : avoid a crash when a filter key is null [Fix] utils.merge : functions should not be stringified into keys [Fix] parse : avoid a crash with interpretNumericEntities: true, comma: true, and iso charset [Fix] stringify : ensure a non-string filter does not crash [Refactor] use __proto__ syntax instead of Object.create for null objects [Refactor] misc cleanup [Tests] utils.merge : add some coverage [Tests] fix a test case [actions] split out node 10-20, and 20+ [Dev Deps] update es-value-fixtures , mock-property , object-inspect , tape","title":"6.13.1"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6130","text":"[New] parse : add strictDepth option (#511) [Tests] use npm audit instead of aud","title":"6.13.0"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6123","text":"[Fix] parse : properly account for strictNullHandling when allowEmptyArrays [meta] fix changelog indentation","title":"6.12.3"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6122","text":"[Fix] parse : parse encoded square brackets (#506) [readme] add CII best practices badge","title":"6.12.2"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6121","text":"[Fix] parse : Disable decodeDotInKeys by default to restore previous behavior (#501) [Performance] utils : Optimize performance under large data volumes, reduce memory usage, and speed up processing (#502) [Refactor] utils : use += [Tests] increase coverage","title":"6.12.1"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6120","text":"[New] parse / stringify : add decodeDotInKeys / encodeDotKeys options (#488) [New] parse : add duplicates option [New] parse / stringify : add allowEmptyArrays option to allow [] in object values (#487) [Refactor] parse / stringify : move allowDots config logic to its own variable [Refactor] stringify : move option-handling code into normalizeStringifyOptions [readme] update readme, add logos (#484) [readme] stringify : clarify default arrayFormat behavior [readme] fix line wrapping [readme] remove dead badges [Deps] update side-channel [meta] make the dist build 50% smaller [meta] add sideEffects flag [meta] run build in prepack, not prepublish [Tests] parse : remove useless tests; add coverage [Tests] stringify : increase coverage [Tests] use mock-property [Tests] stringify : improve coverage [Dev Deps] update @ljharb/eslint-config , aud , has-override-mistake , has-property-descriptors , mock-property , npmignore , object-inspect , tape [Dev Deps] pin glob , since v10.3.8+ requires a broken jackspeak [Dev Deps] pin jackspeak since 2.1.2+ depends on npm aliases, which kill the install process in npm < 6","title":"6.12.0"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6112","text":"[Fix] parse : Fix parsing when the global Object prototype is frozen (#473) [Tests] add passing test cases with empty keys (#473)","title":"6.11.2"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6111","text":"[Fix] stringify : encode comma values more consistently (#463) [readme] add usage of filter option for injecting custom serialization, i.e. of custom types (#447) [meta] remove extraneous code backticks (#457) [meta] fix changelog markdown [actions] update checkout action [actions] restrict action permissions [Dev Deps] update @ljharb/eslint-config , aud , object-inspect , tape","title":"6.11.1"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6110","text":"[New] [Fix] stringify : revert 0e903c0; add commaRoundTrip option (#442) [readme] fix version badge","title":"6.11.0"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6105","text":"[Fix] stringify : with arrayFormat: comma , properly include an explicit [] on a single-item array (#434)","title":"6.10.5"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6104","text":"[Fix] stringify : with arrayFormat: comma , include an explicit [] on a single-item array (#441) [meta] use npmignore to autogenerate an npmignore file [Dev Deps] update eslint , @ljharb/eslint-config , aud , has-symbol , object-inspect , tape","title":"6.10.4"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6103","text":"[Fix] parse : ignore __proto__ keys (#428) [Robustness] stringify : avoid relying on a global undefined (#427) [actions] reuse common workflows [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , tape","title":"6.10.3"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6102","text":"[Fix] stringify : actually fix cyclic references (#426) [Fix] stringify : avoid encoding arrayformat comma when encodeValuesOnly = true (#424) [readme] remove travis badge; add github actions/codecov badges; update URLs [Docs] add note and links for coercing primitive values (#408) [actions] update codecov uploader [actions] update workflows [Tests] clean up stringify tests slightly [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect , safe-publish-latest , tape","title":"6.10.2"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6101","text":"[Fix] stringify : avoid exception on repeated object values (#402)","title":"6.10.1"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6100","text":"[New] stringify : throw on cycles, instead of an infinite loop (#395, #394, #393) [New] parse : add allowSparse option for collapsing arrays with missing indices (#312) [meta] fix README.md (#399) [meta] only run npm run dist in publish, not install [Dev Deps] update eslint , @ljharb/eslint-config , aud , has-symbols , tape [Tests] fix tests on node v0.6 [Tests] use ljharb/actions/node/install instead of ljharb/actions/node/run [Tests] Revert \"[meta] ignore eclint transitive audit warning\"","title":"6.10.0"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#697","text":"[Fix] parse : ignore __proto__ keys (#428) [Fix] stringify : avoid encoding arrayformat comma when encodeValuesOnly = true (#424) [Robustness] stringify : avoid relying on a global undefined (#427) [readme] remove travis badge; add github actions/codecov badges; update URLs [Docs] add note and links for coercing primitive values (#408) [Tests] clean up stringify tests slightly [meta] fix README.md (#399) Revert \"[meta] ignore eclint transitive audit warning\" [actions] backport actions from main [Dev Deps] backport updates from main","title":"6.9.7"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#696","text":"[Fix] restore dist dir; mistakenly removed in d4f6c32","title":"6.9.6"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#695","text":"[Fix] stringify : do not encode parens for RFC1738 [Fix] stringify : fix arrayFormat comma with empty array/objects (#350) [Refactor] format : remove util.assign call [meta] add \"Allow Edits\" workflow; update rebase workflow [actions] switch Automatic Rebase workflow to pull_request_target event [Tests] stringify : add tests for #378 [Tests] migrate tests to Github Actions [Tests] run nyc on all tests; use tape runner [Dev Deps] update eslint , @ljharb/eslint-config , browserify , mkdirp , object-inspect , tape ; add aud","title":"6.9.5"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#694","text":"[Fix] stringify : when arrayFormat is comma , respect serializeDate (#364) [Refactor] stringify : reduce branching (part of #350) [Refactor] move maybeMap to utils [Dev Deps] update browserify , tape","title":"6.9.4"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#693","text":"[Fix] proper comma parsing of URL-encoded commas (#361) [Fix] parses comma delimited array while having percent-encoded comma treated as normal text (#336)","title":"6.9.3"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#692","text":"[Fix] parse : Fix parsing array from object with comma true (#359) [Fix] parse : throw a TypeError instead of an Error for bad charset (#349) [meta] ignore eclint transitive audit warning [meta] fix indentation in package.json [meta] add tidelift marketing copy [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , has-symbols , tape , mkdirp , iconv-lite [actions] add automatic rebasing / merge commit blocking","title":"6.9.2"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#691","text":"[Fix] parse : with comma true, handle field that holds an array of arrays (#335) [Fix] parse : with comma true, do not split non-string values (#334) [meta] add funding field [Dev Deps] update eslint , @ljharb/eslint-config [Tests] use shared travis-ci config","title":"6.9.1"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#690","text":"[New] parse / stringify : Pass extra key/value argument to decoder (#333) [Dev Deps] update eslint , @ljharb/eslint-config , evalmd [Tests] parse : add passing arrayFormat tests [Tests] add posttest using npx aud to run npm audit without a lockfile [Tests] up to node v12.10 , v11.15 , v10.16 , v8.16 [Tests] Buffer.from in node v5.0-v5.9 and v4.0-v4.4 requires a TypedArray","title":"6.9.0"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#683","text":"[Fix] parse : ignore __proto__ keys (#428) [Robustness] stringify : avoid relying on a global undefined (#427) [Fix] stringify : avoid encoding arrayformat comma when encodeValuesOnly = true (#424) [readme] remove travis badge; add github actions/codecov badges; update URLs [Tests] clean up stringify tests slightly [Docs] add note and links for coercing primitive values (#408) [meta] fix README.md (#399) [actions] backport actions from main [Dev Deps] backport updates from main [Refactor] stringify : reduce branching [meta] do not publish workflow files","title":"6.8.3"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#682","text":"[Fix] proper comma parsing of URL-encoded commas (#361) [Fix] parses comma delimited array while having percent-encoded comma treated as normal text (#336)","title":"6.8.2"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#681","text":"[Fix] parse : Fix parsing array from object with comma true (#359) [Fix] parse : throw a TypeError instead of an Error for bad charset (#349) [Fix] parse : with comma true, handle field that holds an array of arrays (#335) [fix] parse : with comma true, do not split non-string values (#334) [meta] add tidelift marketing copy [meta] add funding field [Dev Deps] update eslint , @ljharb/eslint-config , tape , safe-publish-latest , evalmd , has-symbols , iconv-lite , mkdirp , object-inspect [Tests] parse : add passing arrayFormat tests [Tests] use shared travis-ci configs [Tests] Buffer.from in node v5.0-v5.9 and v4.0-v4.4 requires a TypedArray [actions] add automatic rebasing / merge commit blocking","title":"6.8.1"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#680","text":"[New] add depth=false to preserve the original key; [Fix] depth=0 should preserve the original key (#326) [New] [Fix] stringify symbols and bigints [Fix] ensure node 0.12 can stringify Symbols [Fix] fix for an impossible situation: when the formatter is called with a non-string value [Refactor] formats : tiny bit of cleanup. [Dev Deps] update eslint , @ljharb/eslint-config , browserify , safe-publish-latest , iconv-lite , tape [Tests] add tests for depth=0 and depth=false behavior, both current and intuitive/intended (#326) [Tests] use eclint instead of editorconfig-tools [docs] readme: add security note [meta] add github sponsorship [meta] add FUNDING.yml [meta] Clean up license text so it\u2019s properly detected as BSD-3-Clause","title":"6.8.0"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#673","text":"[Fix] parse : ignore __proto__ keys (#428) [Fix] stringify : avoid encoding arrayformat comma when encodeValuesOnly = true (#424) [Robustness] stringify : avoid relying on a global undefined (#427) [readme] remove travis badge; add github actions/codecov badges; update URLs [Docs] add note and links for coercing primitive values (#408) [meta] fix README.md (#399) [meta] do not publish workflow files [actions] backport actions from main [Dev Deps] backport updates from main [Tests] use nyc for coverage [Tests] clean up stringify tests slightly","title":"6.7.3"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#672","text":"[Fix] proper comma parsing of URL-encoded commas (#361) [Fix] parses comma delimited array while having percent-encoded comma treated as normal text (#336)","title":"6.7.2"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#671","text":"[Fix] parse : Fix parsing array from object with comma true (#359) [Fix] parse : with comma true, handle field that holds an array of arrays (#335) [fix] parse : with comma true, do not split non-string values (#334) [Fix] parse : throw a TypeError instead of an Error for bad charset (#349) [Fix] fix for an impossible situation: when the formatter is called with a non-string value [Refactor] formats : tiny bit of cleanup. readme: add security note [meta] add tidelift marketing copy [meta] add funding field [meta] add FUNDING.yml [meta] Clean up license text so it\u2019s properly detected as BSD-3-Clause [Dev Deps] update eslint , @ljharb/eslint-config , tape , safe-publish-latest , evalmd , iconv-lite , mkdirp , object-inspect , browserify [Tests] parse : add passing arrayFormat tests [Tests] use shared travis-ci configs [Tests] Buffer.from in node v5.0-v5.9 and v4.0-v4.4 requires a TypedArray [Tests] add tests for depth=0 and depth=false behavior, both current and intuitive/intended [Tests] use eclint instead of editorconfig-tools [actions] add automatic rebasing / merge commit blocking","title":"6.7.1"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#670","text":"[New] stringify / parse : add comma as an arrayFormat option (#276, #219) [Fix] correctly parse nested arrays (#212) [Fix] utils.merge : avoid a crash with a null target and a truthy non-array source, also with an array source [Robustness] stringify : cache Object.prototype.hasOwnProperty [Refactor] utils : isBuffer : small tweak; add tests [Refactor] use cached Array.isArray [Refactor] parse / stringify : make a function to normalize the options [Refactor] utils : reduce observable [[Get]]s [Refactor] stringify / utils : cache Array.isArray [Tests] always use String(x) over x.toString() [Tests] fix Buffer tests to work in node < 4.5 and node < 5.10 [Tests] temporarily allow coverage to fail","title":"6.7.0"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#661","text":"[Fix] parse : ignore __proto__ keys (#428) [Fix] fix for an impossible situation: when the formatter is called with a non-string value [Fix] utils.merge : avoid a crash with a null target and an array source [Fix] utils.merge : avoid a crash with a null target and a truthy non-array source [Fix] correctly parse nested arrays [Robustness] stringify : avoid relying on a global undefined (#427) [Robustness] stringify : cache Object.prototype.hasOwnProperty [Refactor] formats : tiny bit of cleanup. [Refactor] utils : isBuffer : small tweak; add tests [Refactor]: stringify / utils : cache Array.isArray [Refactor] utils : reduce observable [[Get]]s [Refactor] use cached Array.isArray [Refactor] parse / stringify : make a function to normalize the options [readme] remove travis badge; add github actions/codecov badges; update URLs [Docs] Clarify the need for \"arrayLimit\" option [meta] fix README.md (#399) [meta] do not publish workflow files [meta] Clean up license text so it\u2019s properly detected as BSD-3-Clause [meta] add FUNDING.yml [meta] Fixes typo in CHANGELOG.md [actions] backport actions from main [Tests] fix Buffer tests to work in node < 4.5 and node < 5.10 [Tests] always use String(x) over x.toString() [Dev Deps] backport from main","title":"6.6.1"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#660","text":"[New] Add support for iso-8859-1, utf8 \"sentinel\" and numeric entities (#268) [New] move two-value combine to a utils function (#189) [Fix] stringify : fix a crash with strictNullHandling and a custom filter / serializeDate (#279) [Fix] when parseArrays is false, properly handle keys ending in [] (#260) [Fix] stringify : do not crash in an obscure combo of interpretNumericEntities , a bad custom decoder , & iso-8859-1 [Fix] utils : merge : fix crash when source is a truthy primitive & no options are provided [refactor] stringify : Avoid arr = arr.concat(...), push to the existing instance (#269) [Refactor] parse : only need to reassign the var once [Refactor] parse / stringify : clean up charset options checking; fix defaults [Refactor] add missing defaults [Refactor] parse : one less concat call [Refactor] utils : compactQueue : make it explicitly side-effecting [Dev Deps] update browserify , eslint , @ljharb/eslint-config , iconv-lite , safe-publish-latest , tape [Tests] up to node v10.10 , v9.11 , v8.12 , v6.14 , v4.9 ; pin included builds to LTS","title":"6.6.0"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#653","text":"[Fix] parse : ignore __proto__ keys (#428) [Fix] utils.merge : avoid a crash with a null target and a truthy non-array source [Fix] correctly parse nested arrays [Fix] stringify : fix a crash with strictNullHandling and a custom filter / serializeDate (#279) [Fix] utils : merge : fix crash when source is a truthy primitive & no options are provided [Fix] when parseArrays is false, properly handle keys ending in [] [Fix] fix for an impossible situation: when the formatter is called with a non-string value [Fix] utils.merge : avoid a crash with a null target and an array source [Refactor] utils : reduce observable [[Get]]s [Refactor] use cached Array.isArray [Refactor] stringify : Avoid arr = arr.concat(...), push to the existing instance (#269) [Refactor] parse : only need to reassign the var once [Robustness] stringify : avoid relying on a global undefined (#427) [readme] remove travis badge; add github actions/codecov badges; update URLs [Docs] Clean up license text so it\u2019s properly detected as BSD-3-Clause [Docs] Clarify the need for \"arrayLimit\" option [meta] fix README.md (#399) [meta] add FUNDING.yml [actions] backport actions from main [Tests] always use String(x) over x.toString() [Tests] remove nonexistent tape option [Dev Deps] backport from main","title":"6.5.3"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#652","text":"[Fix] use safer-buffer instead of Buffer constructor [Refactor] utils: module.exports one thing, instead of mutating exports (#230) [Dev Deps] update browserify , eslint , iconv-lite , safer-buffer , tape , browserify","title":"6.5.2"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#651","text":"[Fix] Fix parsing & compacting very deep objects (#224) [Refactor] name utils functions [Dev Deps] update eslint , @ljharb/eslint-config , tape [Tests] up to node v8.4 ; use nvm install-latest-npm so newer npm doesn\u2019t break older node [Tests] Use precise dist for Node.js 0.6 runtime (#225) [Tests] make 0.6 required, now that it\u2019s passing [Tests] on node v8.2 ; fix npm on node 0.6","title":"6.5.1"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#650","text":"[New] add utils.assign [New] pass default encoder/decoder to custom encoder/decoder functions (#206) [New] parse / stringify : add ignoreQueryPrefix / addQueryPrefix options, respectively (#213) [Fix] Handle stringifying empty objects with addQueryPrefix (#217) [Fix] do not mutate options argument (#207) [Refactor] parse : cache index to reuse in else statement (#182) [Docs] add various badges to readme (#208) [Dev Deps] update eslint , browserify , iconv-lite , tape [Tests] up to node v8.1 , v7.10 , v6.11 ; npm v4.6 breaks on node < v1; npm v5+ breaks on node < v4 [Tests] add editorconfig-tools","title":"6.5.0"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#641","text":"[Fix] parse : ignore __proto__ keys (#428) [Fix] fix for an impossible situation: when the formatter is called with a non-string value [Fix] use safer-buffer instead of Buffer constructor [Fix] utils.merge : avoid a crash with a null target and an array source [Fix] utils.merge : avoid a crash with a null target and a truthy non-array source [Fix] stringify : fix a crash with strictNullHandling and a custom filter / serializeDate (#279) [Fix] utils : merge : fix crash when source is a truthy primitive & no options are provided [Fix] when parseArrays is false, properly handle keys ending in [] [Robustness] stringify : avoid relying on a global undefined (#427) [Refactor] use cached Array.isArray [Refactor] stringify : Avoid arr = arr.concat(...), push to the existing instance (#269) [readme] remove travis badge; add github actions/codecov badges; update URLs [Docs] Clarify the need for \"arrayLimit\" option [meta] fix README.md (#399) [meta] Clean up license text so it\u2019s properly detected as BSD-3-Clause [meta] add FUNDING.yml [actions] backport actions from main [Tests] remove nonexistent tape option [Dev Deps] backport from main","title":"6.4.1"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#640","text":"[New] qs.stringify : add encodeValuesOnly option [Fix] follow allowPrototypes option during merge (#201, #201) [Fix] support keys starting with brackets (#202, #200) [Fix] chmod a-x [Dev Deps] update eslint [Tests] up to node v7.7 , v6.10 , v4.8 ; disable osx builds since they block linux builds [eslint] reduce warnings","title":"6.4.0"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#633","text":"[Fix] parse : ignore __proto__ keys (#428) [Fix] fix for an impossible situation: when the formatter is called with a non-string value [Fix] utils.merge : avoid a crash with a null target and an array source [Fix] utils.merge : avoid a crash with a null target and a truthy non-array source [Fix] stringify : fix a crash with strictNullHandling and a custom filter / serializeDate (#279) [Fix] utils : merge : fix crash when source is a truthy primitive & no options are provided [Fix] when parseArrays is false, properly handle keys ending in [] [Robustness] stringify : avoid relying on a global undefined (#427) [Refactor] use cached Array.isArray [Refactor] stringify : Avoid arr = arr.concat(...), push to the existing instance (#269) [Docs] Clarify the need for \"arrayLimit\" option [meta] fix README.md (#399) [meta] Clean up license text so it\u2019s properly detected as BSD-3-Clause [meta] add FUNDING.yml [actions] backport actions from main [Tests] use safer-buffer instead of Buffer constructor [Tests] remove nonexistent tape option [Dev Deps] backport from main","title":"6.3.3"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#632","text":"[Fix] follow allowPrototypes option during merge (#201, #200) [Dev Deps] update eslint [Fix] chmod a-x [Fix] support keys starting with brackets (#202, #200) [Tests] up to node v7.7 , v6.10 , v4.8 ; disable osx builds since they block linux builds","title":"6.3.2"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#631","text":"[Fix] ensure that allowPrototypes: false does not ever shadow Object.prototype properties (thanks, @snyk!) [Dev Deps] update eslint , @ljharb/eslint-config , browserify , iconv-lite , qs-iconv , tape [Tests] on all node minors; improve test matrix [Docs] document stringify option allowDots (#195) [Docs] add empty object and array values example (#195) [Docs] Fix minor inconsistency/typo (#192) [Docs] document stringify option sort (#191) [Refactor] stringify : throw faster with an invalid encoder [Refactor] remove unnecessary escapes (#184) Remove contributing.md, since qs is no longer part of hapi (#183)","title":"6.3.1"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#630","text":"[New] Add support for RFC 1738 (#174, #173) [New] stringify : Add serializeDate option to customize Date serialization (#159) [Fix] ensure utils.merge handles merging two arrays [Refactor] only constructors should be capitalized [Refactor] capitalized var names are for constructors only [Refactor] avoid using a sparse array [Robustness] formats : cache String#replace [Dev Deps] update browserify , eslint , @ljharb/eslint-config ; add safe-publish-latest [Tests] up to node v6.8 , v4.6 ; improve test matrix [Tests] flesh out arrayLimit/arrayFormat tests (#107) [Tests] skip Object.create tests when null objects are not available [Tests] Turn on eslint for test files (#175)","title":"6.3.0"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#624","text":"[Fix] parse : ignore __proto__ keys (#428) [Fix] utils.merge : avoid a crash with a null target and an array source [Fix] utils.merge : avoid a crash with a null target and a truthy non-array source [Fix] utils : merge : fix crash when source is a truthy primitive & no options are provided [Fix] when parseArrays is false, properly handle keys ending in [] [Robustness] stringify : avoid relying on a global undefined (#427) [Refactor] use cached Array.isArray [Docs] Clarify the need for \"arrayLimit\" option [meta] fix README.md (#399) [meta] Clean up license text so it\u2019s properly detected as BSD-3-Clause [meta] add FUNDING.yml [actions] backport actions from main [Tests] use safer-buffer instead of Buffer constructor [Tests] remove nonexistent tape option [Dev Deps] backport from main","title":"6.2.4"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#623","text":"[Fix] follow allowPrototypes option during merge (#201, #200) [Fix] chmod a-x [Fix] support keys starting with brackets (#202, #200) [Tests] up to node v7.7 , v6.10 , v4.8 ; disable osx builds since they block linux builds","title":"6.2.3"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#622","text":"[Fix] ensure that allowPrototypes: false does not ever shadow Object.prototype properties","title":"6.2.2"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#621","text":"[Fix] ensure key[]=x&key[]&key[]=y results in 3, not 2, values [Refactor] Be explicit and use Object.prototype.hasOwnProperty.call [Tests] remove parallelshell since it does not reliably report failures [Tests] up to node v6.3 , v5.12 [Dev Deps] update tape , eslint , @ljharb/eslint-config , qs-iconv","title":"6.2.1"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#620","text":"[New] pass Buffers to the encoder/decoder directly (#161) [New] add \"encoder\" and \"decoder\" options, for custom param encoding/decoding (#160) [Fix] fix compacting of nested sparse arrays (#150)","title":"6.2.0"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#612","text":"[Fix] follow allowPrototypes option during merge (#201, #200) [Fix] chmod a-x [Fix] support keys starting with brackets (#202, #200) [Tests] up to node v7.7 , v6.10 , v4.8 ; disable osx builds since they block linux builds","title":"6.1.2"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#611","text":"[Fix] ensure that allowPrototypes: false does not ever shadow Object.prototype properties","title":"6.1.1"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#610","text":"[New] allowDots option for stringify (#151) [Fix] \"sort\" option should work at a depth of 3 or more (#151) [Fix] Restore dist directory; will be removed in v7 (#148)","title":"6.1.0"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#604","text":"[Fix] follow allowPrototypes option during merge (#201, #200) [Fix] chmod a-x [Fix] support keys starting with brackets (#202, #200) [Tests] up to node v7.7 , v6.10 , v4.8 ; disable osx builds since they block linux builds","title":"6.0.4"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#603","text":"[Fix] ensure that allowPrototypes: false does not ever shadow Object.prototype properties [Fix] Restore dist directory; will be removed in v7 (#148)","title":"6.0.3"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#602","text":"Revert ES6 requirement and restore support for node down to v0.8.","title":"6.0.2"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#601","text":"#127 Fix engines definition in package.json","title":"6.0.1"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#600","text":"#124 Use ES6 and drop support for node < v4","title":"6.0.0"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#521","text":"[Fix] ensure key[]=x&key[]&key[]=y results in 3, not 2, values","title":"5.2.1"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#520","text":"#64 Add option to sort object keys in the query string","title":"5.2.0"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#510","text":"#117 make URI encoding stringified results optional #106 Add flag skipNulls to optionally skip null values in stringify","title":"5.1.0"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#500","text":"#114 default allowDots to false #100 include dist to npm","title":"5.0.0"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#400","text":"#98 make returning plain objects and allowing prototype overwriting properties optional","title":"4.0.0"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#310","text":"#89 Add option to disable \"Transform dot notation to bracket notation\"","title":"3.1.0"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#300","text":"#80 qs.parse silently drops properties #77 Perf boost #60 Add explicit option to disable array parsing #74 Bad parse when turning array into object #81 Add a filter option #68 Fixed issue with recursion and passing strings into objects. #66 Add mixed array and object dot notation support Closes: #47 #76 RFC 3986 #85 No equal sign #84 update license attribute","title":"3.0.0"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#241","text":"#73 Property 'hasOwnProperty' of object # is not a function","title":"2.4.1"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#240","text":"#70 Add arrayFormat option","title":"2.4.0"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#233","text":"#59 make sure array indexes are >= 0, closes #57 #58 make qs usable for browser loader","title":"2.3.3"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#232","text":"#55 allow merging a string into an object","title":"2.3.2"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#231","text":"#52 Return \"undefined\" and \"false\" instead of throwing \"TypeError\".","title":"2.3.1"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#230","text":"#50 add option to omit array indices, closes #46","title":"2.3.0"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#225","text":"#39 Is there an alternative to Buffer.isBuffer? #49 refactor utils.merge, fixes #45 #41 avoid browserifying Buffer, for #39","title":"2.2.5"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#224","text":"#38 how to handle object keys beginning with a number","title":"2.2.4"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#223","text":"#37 parser discards first empty value in array #36 Update to lab 4.x","title":"2.2.3"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#222","text":"#33 Error when plain object in a value #34 use Object.prototype.hasOwnProperty.call instead of obj.hasOwnProperty #24 Changelog? Semver?","title":"2.2.2"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#221","text":"#32 account for circular references properly, closes #31 #31 qs.parse stackoverflow on circular objects","title":"2.2.1"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#220","text":"#26 Don't use Buffer global if it's not present #30 Bug when merging non-object values into arrays #29 Don't call Utils.clone at the top of Utils.merge #23 Ability to not limit parameters?","title":"2.2.0"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#210","text":"#22 Enable using a RegExp as delimiter","title":"2.1.0"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#200","text":"#18 Why is there arrayLimit? #20 Configurable parametersLimit #21 make all limits optional, for #18, for #20","title":"2.0.0"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#122","text":"#19 Don't overwrite null values","title":"1.2.2"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#121","text":"#16 ignore non-string delimiters #15 Close code block","title":"1.2.1"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#120","text":"#12 Add optional delim argument #13 fix #11: flattened keys in array are now correctly parsed","title":"1.2.0"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#110","text":"#7 Empty values of a POST array disappear after being submitted #9 Should not omit equals signs (=) when value is null #6 Minor grammar fix in README","title":"1.1.0"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#102","text":"#5 array holes incorrectly copied into object on large index","title":"1.0.2"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/LICENSE/","text":"BSD 3-Clause License Copyright (c) 2014, Nathan LaFreniere and other contributors All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"LICENSE"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/","text":"range-parser Range header field parser. Installation This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install range-parser API var parseRange = require ( 'range-parser' ) parseRange(size, header, options) Parse the given header string where size is the maximum size of the resource. An array of ranges will be returned or negative numbers indicating an error parsing. -2 signals a malformed header string -1 signals an unsatisfiable range // parse header from request var range = parseRange ( size , req . headers . range ) // the type of the range if ( range . type === 'bytes' ) { // the ranges range . forEach ( function ( r ) { // do something with r.start and r.end }) } Options These properties are accepted in the options object. combine Specifies if overlapping & adjacent ranges should be combined, defaults to false . When true , ranges will be combined and returned as if they were specified that way in the header. parseRange ( 100 , 'bytes=50-55,0-10,5-10,56-60' , { combine : true }) // => [ // { start: 0, end: 10 }, // { start: 50, end: 60 } // ] License MIT","title":"range-parser"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/#range-parser","text":"Range header field parser.","title":"range-parser"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/#installation","text":"This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install range-parser","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/#api","text":"var parseRange = require ( 'range-parser' )","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/#parserangesize-header-options","text":"Parse the given header string where size is the maximum size of the resource. An array of ranges will be returned or negative numbers indicating an error parsing. -2 signals a malformed header string -1 signals an unsatisfiable range // parse header from request var range = parseRange ( size , req . headers . range ) // the type of the range if ( range . type === 'bytes' ) { // the ranges range . forEach ( function ( r ) { // do something with r.start and r.end }) }","title":"parseRange(size, header, options)"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/#options","text":"These properties are accepted in the options object.","title":"Options"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/#combine","text":"Specifies if overlapping & adjacent ranges should be combined, defaults to false . When true , ranges will be combined and returned as if they were specified that way in the header. parseRange ( 100 , 'bytes=50-55,0-10,5-10,56-60' , { combine : true }) // => [ // { start: 0, end: 10 }, // { start: 50, end: 60 } // ]","title":"combine"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/HISTORY/","text":"1.2.1 / 2019-05-10 Improve error when str is not a string 1.2.0 / 2016-06-01 Add combine option to combine overlapping ranges 1.1.0 / 2016-05-13 Fix incorrectly returning -1 when there is at least one valid range perf: remove internal function 1.0.3 / 2015-10-29 perf: enable strict mode 1.0.2 / 2014-09-08 Support Node.js 0.6 1.0.1 / 2014-09-07 Move repository to jshttp 1.0.0 / 2013-12-11 Add repository to package.json Add MIT license 0.0.4 / 2012-06-17 Change ret -1 for unsatisfiable and -2 when invalid 0.0.3 / 2012-06-17 Fix last-byte-pos default to len - 1 0.0.2 / 2012-06-14 Add .type 0.0.1 / 2012-06-11 Initial release","title":"1.2.1 / 2019-05-10"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/HISTORY/#121-2019-05-10","text":"Improve error when str is not a string","title":"1.2.1 / 2019-05-10"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/HISTORY/#120-2016-06-01","text":"Add combine option to combine overlapping ranges","title":"1.2.0 / 2016-06-01"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/HISTORY/#110-2016-05-13","text":"Fix incorrectly returning -1 when there is at least one valid range perf: remove internal function","title":"1.1.0 / 2016-05-13"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/HISTORY/#103-2015-10-29","text":"perf: enable strict mode","title":"1.0.3 / 2015-10-29"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/HISTORY/#102-2014-09-08","text":"Support Node.js 0.6","title":"1.0.2 / 2014-09-08"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/HISTORY/#101-2014-09-07","text":"Move repository to jshttp","title":"1.0.1 / 2014-09-07"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/HISTORY/#100-2013-12-11","text":"Add repository to package.json Add MIT license","title":"1.0.0 / 2013-12-11"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/HISTORY/#004-2012-06-17","text":"Change ret -1 for unsatisfiable and -2 when invalid","title":"0.0.4 / 2012-06-17"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/HISTORY/#003-2012-06-17","text":"Fix last-byte-pos default to len - 1","title":"0.0.3 / 2012-06-17"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/HISTORY/#002-2012-06-14","text":"Add .type","title":"0.0.2 / 2012-06-14"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/HISTORY/#001-2012-06-11","text":"Initial release","title":"0.0.1 / 2012-06-11"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/","text":"raw-body Gets the entire buffer of a stream either as a Buffer or a string. Validates the stream's length against an expected length and maximum limit. Ideal for parsing request bodies. Install This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install raw-body TypeScript This module includes a TypeScript declaration file to enable auto complete in compatible editors and type information for TypeScript projects. This module depends on the Node.js types, so install @types/node : $ npm install @types/node API var getRawBody = require ( 'raw-body' ) getRawBody(stream, [options], [callback]) Returns a promise if no callback specified and global Promise exists. Options: length - The length of the stream. If the contents of the stream do not add up to this length, an 400 error code is returned. limit - The byte limit of the body. This is the number of bytes or any string format supported by bytes , for example 1000 , '500kb' or '3mb' . If the body ends up being larger than this limit, a 413 error code is returned. encoding - The encoding to use to decode the body into a string. By default, a Buffer instance will be returned when no encoding is specified. Most likely, you want utf-8 , so setting encoding to true will decode as utf-8 . You can use any type of encoding supported by iconv-lite . You can also pass a string in place of options to just specify the encoding. If an error occurs, the stream will be paused, everything unpiped, and you are responsible for correctly disposing the stream. For HTTP requests, you may need to finish consuming the stream if you want to keep the socket open for future requests. For streams that use file descriptors, you should stream.destroy() or stream.close() to prevent leaks. Errors This module creates errors depending on the error condition during reading. The error may be an error from the underlying Node.js implementation, but is otherwise an error created by this module, which has the following attributes: limit - the limit in bytes length and expected - the expected length of the stream received - the received bytes encoding - the invalid encoding status and statusCode - the corresponding status code for the error type - the error type Types The errors from this module have a type property which allows for the programmatic determination of the type of error returned. encoding.unsupported This error will occur when the encoding option is specified, but the value does not map to an encoding supported by the iconv-lite module. entity.too.large This error will occur when the limit option is specified, but the stream has an entity that is larger. request.aborted This error will occur when the request stream is aborted by the client before reading the body has finished. request.size.invalid This error will occur when the length option is specified, but the stream has emitted more bytes. stream.encoding.set This error will occur when the given stream has an encoding set on it, making it a decoded stream. The stream should not have an encoding set and is expected to emit Buffer objects. stream.not.readable This error will occur when the given stream is not readable. Examples Simple Express example var contentType = require ( 'content-type' ) var express = require ( 'express' ) var getRawBody = require ( 'raw-body' ) var app = express () app . use ( function ( req , res , next ) { getRawBody ( req , { length : req . headers [ 'content-length' ], limit : '1mb' , encoding : contentType . parse ( req ). parameters . charset }, function ( err , string ) { if ( err ) return next ( err ) req . text = string next () }) }) // now access req.text Simple Koa example var contentType = require ( 'content-type' ) var getRawBody = require ( 'raw-body' ) var koa = require ( 'koa' ) var app = koa () app . use ( function * ( next ) { this . text = yield getRawBody ( this . req , { length : this . req . headers [ 'content-length' ], limit : '1mb' , encoding : contentType . parse ( this . req ). parameters . charset }) yield next }) // now access this.text Using as a promise To use this library as a promise, simply omit the callback and a promise is returned, provided that a global Promise is defined. var getRawBody = require ( 'raw-body' ) var http = require ( 'http' ) var server = http . createServer ( function ( req , res ) { getRawBody ( req ) . then ( function ( buf ) { res . statusCode = 200 res . end ( buf . length + ' bytes submitted' ) }) . catch ( function ( err ) { res . statusCode = 500 res . end ( err . message ) }) }) server . listen ( 3000 ) Using with TypeScript import * as getRawBody from 'raw-body' ; import * as http from 'http' ; const server = http . createServer (( req , res ) => { getRawBody ( req ) . then (( buf ) => { res . statusCode = 200 ; res . end ( buf . length + ' bytes submitted' ); }) . catch (( err ) => { res . statusCode = err . statusCode ; res . end ( err . message ); }); }); server . listen ( 3000 ); License MIT","title":"raw-body"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#raw-body","text":"Gets the entire buffer of a stream either as a Buffer or a string. Validates the stream's length against an expected length and maximum limit. Ideal for parsing request bodies.","title":"raw-body"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#install","text":"This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install raw-body","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#typescript","text":"This module includes a TypeScript declaration file to enable auto complete in compatible editors and type information for TypeScript projects. This module depends on the Node.js types, so install @types/node : $ npm install @types/node","title":"TypeScript"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#api","text":"var getRawBody = require ( 'raw-body' )","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#getrawbodystream-options-callback","text":"Returns a promise if no callback specified and global Promise exists. Options: length - The length of the stream. If the contents of the stream do not add up to this length, an 400 error code is returned. limit - The byte limit of the body. This is the number of bytes or any string format supported by bytes , for example 1000 , '500kb' or '3mb' . If the body ends up being larger than this limit, a 413 error code is returned. encoding - The encoding to use to decode the body into a string. By default, a Buffer instance will be returned when no encoding is specified. Most likely, you want utf-8 , so setting encoding to true will decode as utf-8 . You can use any type of encoding supported by iconv-lite . You can also pass a string in place of options to just specify the encoding. If an error occurs, the stream will be paused, everything unpiped, and you are responsible for correctly disposing the stream. For HTTP requests, you may need to finish consuming the stream if you want to keep the socket open for future requests. For streams that use file descriptors, you should stream.destroy() or stream.close() to prevent leaks.","title":"getRawBody(stream, [options], [callback])"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#errors","text":"This module creates errors depending on the error condition during reading. The error may be an error from the underlying Node.js implementation, but is otherwise an error created by this module, which has the following attributes: limit - the limit in bytes length and expected - the expected length of the stream received - the received bytes encoding - the invalid encoding status and statusCode - the corresponding status code for the error type - the error type","title":"Errors"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#types","text":"The errors from this module have a type property which allows for the programmatic determination of the type of error returned.","title":"Types"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#encodingunsupported","text":"This error will occur when the encoding option is specified, but the value does not map to an encoding supported by the iconv-lite module.","title":"encoding.unsupported"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#entitytoolarge","text":"This error will occur when the limit option is specified, but the stream has an entity that is larger.","title":"entity.too.large"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#requestaborted","text":"This error will occur when the request stream is aborted by the client before reading the body has finished.","title":"request.aborted"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#requestsizeinvalid","text":"This error will occur when the length option is specified, but the stream has emitted more bytes.","title":"request.size.invalid"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#streamencodingset","text":"This error will occur when the given stream has an encoding set on it, making it a decoded stream. The stream should not have an encoding set and is expected to emit Buffer objects.","title":"stream.encoding.set"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#streamnotreadable","text":"This error will occur when the given stream is not readable.","title":"stream.not.readable"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#examples","text":"","title":"Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#simple-express-example","text":"var contentType = require ( 'content-type' ) var express = require ( 'express' ) var getRawBody = require ( 'raw-body' ) var app = express () app . use ( function ( req , res , next ) { getRawBody ( req , { length : req . headers [ 'content-length' ], limit : '1mb' , encoding : contentType . parse ( req ). parameters . charset }, function ( err , string ) { if ( err ) return next ( err ) req . text = string next () }) }) // now access req.text","title":"Simple Express example"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#simple-koa-example","text":"var contentType = require ( 'content-type' ) var getRawBody = require ( 'raw-body' ) var koa = require ( 'koa' ) var app = koa () app . use ( function * ( next ) { this . text = yield getRawBody ( this . req , { length : this . req . headers [ 'content-length' ], limit : '1mb' , encoding : contentType . parse ( this . req ). parameters . charset }) yield next }) // now access this.text","title":"Simple Koa example"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#using-as-a-promise","text":"To use this library as a promise, simply omit the callback and a promise is returned, provided that a global Promise is defined. var getRawBody = require ( 'raw-body' ) var http = require ( 'http' ) var server = http . createServer ( function ( req , res ) { getRawBody ( req ) . then ( function ( buf ) { res . statusCode = 200 res . end ( buf . length + ' bytes submitted' ) }) . catch ( function ( err ) { res . statusCode = 500 res . end ( err . message ) }) }) server . listen ( 3000 )","title":"Using as a promise"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#using-with-typescript","text":"import * as getRawBody from 'raw-body' ; import * as http from 'http' ; const server = http . createServer (( req , res ) => { getRawBody ( req ) . then (( buf ) => { res . statusCode = 200 ; res . end ( buf . length + ' bytes submitted' ); }) . catch (( err ) => { res . statusCode = err . statusCode ; res . end ( err . message ); }); }); server . listen ( 3000 );","title":"Using with TypeScript"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/","text":"3.0.0 / 2024-07-25 deps: iconv-lite@0.6.3 Fix HKSCS encoding to prefer Big5 codes Fix minor issue in UTF-32 decoder's endianness detection code Update 'gb18030' encoding to :2005 edition 3.0.0-beta.1 / 2023-02-21 Change TypeScript argument to NodeJS.ReadableStream interface Drop support for Node.js 0.8 deps: iconv-lite@0.5.2 Add encoding cp720 Add encoding UTF-32 2.5.2 / 2023-02-21 Fix error message for non-stream argument 2.5.1 / 2022-02-28 Fix error on early async hooks implementations 2.5.0 / 2022-02-21 Prevent loss of async hooks context Prevent hanging when stream is not readable deps: http-errors@2.0.0 deps: depd@2.0.0 deps: statuses@2.0.1 2.4.3 / 2022-02-14 deps: bytes@3.1.2 2.4.2 / 2021-11-16 deps: bytes@3.1.1 deps: http-errors@1.8.1 deps: setprototypeof@1.2.0 deps: toidentifier@1.0.1 2.4.1 / 2019-06-25 deps: http-errors@1.7.3 deps: inherits@2.0.4 2.4.0 / 2019-04-17 deps: bytes@3.1.0 Add petabyte ( pb ) support deps: http-errors@1.7.2 Set constructor name when possible deps: setprototypeof@1.1.1 deps: statuses@'>= 1.5.0 < 2' deps: iconv-lite@0.4.24 Added encoding MIK 2.3.3 / 2018-05-08 deps: http-errors@1.6.3 deps: depd@~1.1.2 deps: setprototypeof@1.1.0 deps: statuses@'>= 1.3.1 < 2' deps: iconv-lite@0.4.23 Fix loading encoding with year appended Fix deprecation warnings on Node.js 10+ 2.3.2 / 2017-09-09 deps: iconv-lite@0.4.19 Fix ISO-8859-1 regression Update Windows-1255 2.3.1 / 2017-09-07 deps: bytes@3.0.0 deps: http-errors@1.6.2 deps: depd@1.1.1 perf: skip buffer decoding on overage chunk 2.3.0 / 2017-08-04 Add TypeScript definitions Use http-errors for standard emitted errors deps: bytes@2.5.0 deps: iconv-lite@0.4.18 Add support for React Native Add a warning if not loaded as utf-8 Fix CESU-8 decoding in Node.js 8 Improve speed of ISO-8859-1 encoding 2.2.0 / 2017-01-02 deps: iconv-lite@0.4.15 Added encoding MS-31J Added encoding MS-932 Added encoding MS-936 Added encoding MS-949 Added encoding MS-950 Fix GBK/GB18030 handling of Euro character 2.1.7 / 2016-06-19 deps: bytes@2.4.0 perf: remove double-cleanup on happy path 2.1.6 / 2016-03-07 deps: bytes@2.3.0 Drop partial bytes on all parsed units Fix parsing byte string that looks like hex 2.1.5 / 2015-11-30 deps: bytes@2.2.0 deps: iconv-lite@0.4.13 2.1.4 / 2015-09-27 Fix masking critical errors from iconv-lite deps: iconv-lite@0.4.12 Fix CESU-8 decoding in Node.js 4.x 2.1.3 / 2015-09-12 Fix sync callback when attaching data listener causes sync read Node.js 0.10 compatibility issue 2.1.2 / 2015-07-05 Fix error stack traces to skip makeError deps: iconv-lite@0.4.11 Add encoding CESU-8 2.1.1 / 2015-06-14 Use unpipe module for unpiping requests 2.1.0 / 2015-05-28 deps: iconv-lite@0.4.10 Improved UTF-16 endianness detection Leading BOM is now removed when decoding The encoding UTF-16 without BOM now defaults to UTF-16LE when detection fails 2.0.2 / 2015-05-21 deps: bytes@2.1.0 Slight optimizations 2.0.1 / 2015-05-10 Fix a false-positive when unpiping in Node.js 0.8 2.0.0 / 2015-05-08 Return a promise without callback instead of thunk deps: bytes@2.0.1 units no longer case sensitive when parsing 1.3.4 / 2015-04-15 Fix hanging callback if request aborts during read deps: iconv-lite@0.4.8 Add encoding alias UNICODE-1-1-UTF-7 1.3.3 / 2015-02-08 deps: iconv-lite@0.4.7 Gracefully support enumerables on Object.prototype 1.3.2 / 2015-01-20 deps: iconv-lite@0.4.6 Fix rare aliases of single-byte encodings 1.3.1 / 2014-11-21 deps: iconv-lite@0.4.5 Fix Windows-31J and X-SJIS encoding support 1.3.0 / 2014-07-20 Fully unpipe the stream on error Fixes Cannot switch to old mode now error on Node.js 0.10+ 1.2.3 / 2014-07-20 deps: iconv-lite@0.4.4 Added encoding UTF-7 1.2.2 / 2014-06-19 Send invalid encoding error to callback 1.2.1 / 2014-06-15 deps: iconv-lite@0.4.3 Added encodings UTF-16BE and UTF-16 with BOM 1.2.0 / 2014-06-13 Passing string as options interpreted as encoding Support all encodings from iconv-lite 1.1.7 / 2014-06-12 use string_decoder module from npm 1.1.6 / 2014-05-27 check encoding for old streams1 support node.js < 0.10.6 1.1.5 / 2014-05-14 bump bytes 1.1.4 / 2014-04-19 allow true as an option bump bytes 1.1.3 / 2014-03-02 fix case when length=null 1.1.2 / 2013-12-01 be less strict on state.encoding check 1.1.1 / 2013-11-27 add engines 1.1.0 / 2013-11-27 add err.statusCode and err.type allow for encoding option to be true pause the stream instead of dumping on error throw if the stream's encoding is set 1.0.1 / 2013-11-19 dont support streams1, throw if dev set encoding 1.0.0 / 2013-11-17 rename expected option to length 0.2.0 / 2013-11-15 republish 0.1.1 / 2013-11-15 use bytes 0.1.0 / 2013-11-11 generator support 0.0.3 / 2013-10-10 update repo 0.0.2 / 2013-09-14 dump stream on bad headers listen to events after defining received and buffers 0.0.1 / 2013-09-14 Initial release","title":"3.0.0 / 2024-07-25"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#300-2024-07-25","text":"deps: iconv-lite@0.6.3 Fix HKSCS encoding to prefer Big5 codes Fix minor issue in UTF-32 decoder's endianness detection code Update 'gb18030' encoding to :2005 edition","title":"3.0.0 / 2024-07-25"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#300-beta1-2023-02-21","text":"Change TypeScript argument to NodeJS.ReadableStream interface Drop support for Node.js 0.8 deps: iconv-lite@0.5.2 Add encoding cp720 Add encoding UTF-32","title":"3.0.0-beta.1 / 2023-02-21"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#252-2023-02-21","text":"Fix error message for non-stream argument","title":"2.5.2 / 2023-02-21"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#251-2022-02-28","text":"Fix error on early async hooks implementations","title":"2.5.1 / 2022-02-28"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#250-2022-02-21","text":"Prevent loss of async hooks context Prevent hanging when stream is not readable deps: http-errors@2.0.0 deps: depd@2.0.0 deps: statuses@2.0.1","title":"2.5.0 / 2022-02-21"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#243-2022-02-14","text":"deps: bytes@3.1.2","title":"2.4.3 / 2022-02-14"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#242-2021-11-16","text":"deps: bytes@3.1.1 deps: http-errors@1.8.1 deps: setprototypeof@1.2.0 deps: toidentifier@1.0.1","title":"2.4.2 / 2021-11-16"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#241-2019-06-25","text":"deps: http-errors@1.7.3 deps: inherits@2.0.4","title":"2.4.1 / 2019-06-25"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#240-2019-04-17","text":"deps: bytes@3.1.0 Add petabyte ( pb ) support deps: http-errors@1.7.2 Set constructor name when possible deps: setprototypeof@1.1.1 deps: statuses@'>= 1.5.0 < 2' deps: iconv-lite@0.4.24 Added encoding MIK","title":"2.4.0 / 2019-04-17"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#233-2018-05-08","text":"deps: http-errors@1.6.3 deps: depd@~1.1.2 deps: setprototypeof@1.1.0 deps: statuses@'>= 1.3.1 < 2' deps: iconv-lite@0.4.23 Fix loading encoding with year appended Fix deprecation warnings on Node.js 10+","title":"2.3.3 / 2018-05-08"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#232-2017-09-09","text":"deps: iconv-lite@0.4.19 Fix ISO-8859-1 regression Update Windows-1255","title":"2.3.2 / 2017-09-09"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#231-2017-09-07","text":"deps: bytes@3.0.0 deps: http-errors@1.6.2 deps: depd@1.1.1 perf: skip buffer decoding on overage chunk","title":"2.3.1 / 2017-09-07"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#230-2017-08-04","text":"Add TypeScript definitions Use http-errors for standard emitted errors deps: bytes@2.5.0 deps: iconv-lite@0.4.18 Add support for React Native Add a warning if not loaded as utf-8 Fix CESU-8 decoding in Node.js 8 Improve speed of ISO-8859-1 encoding","title":"2.3.0 / 2017-08-04"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#220-2017-01-02","text":"deps: iconv-lite@0.4.15 Added encoding MS-31J Added encoding MS-932 Added encoding MS-936 Added encoding MS-949 Added encoding MS-950 Fix GBK/GB18030 handling of Euro character","title":"2.2.0 / 2017-01-02"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#217-2016-06-19","text":"deps: bytes@2.4.0 perf: remove double-cleanup on happy path","title":"2.1.7 / 2016-06-19"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#216-2016-03-07","text":"deps: bytes@2.3.0 Drop partial bytes on all parsed units Fix parsing byte string that looks like hex","title":"2.1.6 / 2016-03-07"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#215-2015-11-30","text":"deps: bytes@2.2.0 deps: iconv-lite@0.4.13","title":"2.1.5 / 2015-11-30"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#214-2015-09-27","text":"Fix masking critical errors from iconv-lite deps: iconv-lite@0.4.12 Fix CESU-8 decoding in Node.js 4.x","title":"2.1.4 / 2015-09-27"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#213-2015-09-12","text":"Fix sync callback when attaching data listener causes sync read Node.js 0.10 compatibility issue","title":"2.1.3 / 2015-09-12"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#212-2015-07-05","text":"Fix error stack traces to skip makeError deps: iconv-lite@0.4.11 Add encoding CESU-8","title":"2.1.2 / 2015-07-05"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#211-2015-06-14","text":"Use unpipe module for unpiping requests","title":"2.1.1 / 2015-06-14"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#210-2015-05-28","text":"deps: iconv-lite@0.4.10 Improved UTF-16 endianness detection Leading BOM is now removed when decoding The encoding UTF-16 without BOM now defaults to UTF-16LE when detection fails","title":"2.1.0 / 2015-05-28"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#202-2015-05-21","text":"deps: bytes@2.1.0 Slight optimizations","title":"2.0.2 / 2015-05-21"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#201-2015-05-10","text":"Fix a false-positive when unpiping in Node.js 0.8","title":"2.0.1 / 2015-05-10"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#200-2015-05-08","text":"Return a promise without callback instead of thunk deps: bytes@2.0.1 units no longer case sensitive when parsing","title":"2.0.0 / 2015-05-08"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#134-2015-04-15","text":"Fix hanging callback if request aborts during read deps: iconv-lite@0.4.8 Add encoding alias UNICODE-1-1-UTF-7","title":"1.3.4 / 2015-04-15"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#133-2015-02-08","text":"deps: iconv-lite@0.4.7 Gracefully support enumerables on Object.prototype","title":"1.3.3 / 2015-02-08"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#132-2015-01-20","text":"deps: iconv-lite@0.4.6 Fix rare aliases of single-byte encodings","title":"1.3.2 / 2015-01-20"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#131-2014-11-21","text":"deps: iconv-lite@0.4.5 Fix Windows-31J and X-SJIS encoding support","title":"1.3.1 / 2014-11-21"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#130-2014-07-20","text":"Fully unpipe the stream on error Fixes Cannot switch to old mode now error on Node.js 0.10+","title":"1.3.0 / 2014-07-20"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#123-2014-07-20","text":"deps: iconv-lite@0.4.4 Added encoding UTF-7","title":"1.2.3 / 2014-07-20"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#122-2014-06-19","text":"Send invalid encoding error to callback","title":"1.2.2 / 2014-06-19"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#121-2014-06-15","text":"deps: iconv-lite@0.4.3 Added encodings UTF-16BE and UTF-16 with BOM","title":"1.2.1 / 2014-06-15"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#120-2014-06-13","text":"Passing string as options interpreted as encoding Support all encodings from iconv-lite","title":"1.2.0 / 2014-06-13"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#117-2014-06-12","text":"use string_decoder module from npm","title":"1.1.7 / 2014-06-12"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#116-2014-05-27","text":"check encoding for old streams1 support node.js < 0.10.6","title":"1.1.6 / 2014-05-27"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#115-2014-05-14","text":"bump bytes","title":"1.1.5 / 2014-05-14"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#114-2014-04-19","text":"allow true as an option bump bytes","title":"1.1.4 / 2014-04-19"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#113-2014-03-02","text":"fix case when length=null","title":"1.1.3 / 2014-03-02"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#112-2013-12-01","text":"be less strict on state.encoding check","title":"1.1.2 / 2013-12-01"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#111-2013-11-27","text":"add engines","title":"1.1.1 / 2013-11-27"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#110-2013-11-27","text":"add err.statusCode and err.type allow for encoding option to be true pause the stream instead of dumping on error throw if the stream's encoding is set","title":"1.1.0 / 2013-11-27"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#101-2013-11-19","text":"dont support streams1, throw if dev set encoding","title":"1.0.1 / 2013-11-19"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#100-2013-11-17","text":"rename expected option to length","title":"1.0.0 / 2013-11-17"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#020-2013-11-15","text":"republish","title":"0.2.0 / 2013-11-15"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#011-2013-11-15","text":"use bytes","title":"0.1.1 / 2013-11-15"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#010-2013-11-11","text":"generator support","title":"0.1.0 / 2013-11-11"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#003-2013-10-10","text":"update repo","title":"0.0.3 / 2013-10-10"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#002-2013-09-14","text":"dump stream on bad headers listen to events after defining received and buffers","title":"0.0.2 / 2013-09-14"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#001-2013-09-14","text":"Initial release","title":"0.0.1 / 2013-09-14"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/SECURITY/","text":"Security Policies and Procedures Reporting a Bug The raw-body team and community take all security bugs seriously. Thank you for improving the security of Express. We appreciate your efforts and responsible disclosure and will make every effort to acknowledge your contributions. Report security bugs by emailing the current owners of raw-body . This information can be found in the npm registry using the command npm owner ls raw-body . If unsure or unable to get the information from the above, open an issue in the project issue tracker asking for the current contact information. To ensure the timely response to your report, please ensure that the entirety of the report is contained within the email body and not solely behind a web link or an attachment. At least one owner will acknowledge your email within 48 hours, and will send a more detailed response within 48 hours indicating the next steps in handling your report. After the initial reply to your report, the owners will endeavor to keep you informed of the progress towards a fix and full announcement, and may ask for additional information or guidance.","title":"Security Policies and Procedures"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/SECURITY/#security-policies-and-procedures","text":"","title":"Security Policies and Procedures"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/SECURITY/#reporting-a-bug","text":"The raw-body team and community take all security bugs seriously. Thank you for improving the security of Express. We appreciate your efforts and responsible disclosure and will make every effort to acknowledge your contributions. Report security bugs by emailing the current owners of raw-body . This information can be found in the npm registry using the command npm owner ls raw-body . If unsure or unable to get the information from the above, open an issue in the project issue tracker asking for the current contact information. To ensure the timely response to your report, please ensure that the entirety of the report is contained within the email body and not solely behind a web link or an attachment. At least one owner will acknowledge your email within 48 hours, and will send a more detailed response within 48 hours indicating the next steps in handling your report. After the initial reply to your report, the owners will endeavor to keep you informed of the progress towards a fix and full announcement, and may ask for additional information or guidance.","title":"Reporting a Bug"},{"location":"system-desing/crud-app/JS/server/node_modules/readdirp/","text":"readdirp Recursive version of fs.readdir . Exposes a stream API and a promise API . npm install readdirp const readdirp = require ( 'readdirp' ); // Use streams to achieve small RAM & CPU footprint. // 1) Streams example with for-await. for await ( const entry of readdirp ( '.' )) { const { path } = entry ; console . log ( ` ${ JSON . stringify ({ path } )}` ); } // 2) Streams example, non for-await. // Print out all JS files along with their size within the current folder & subfolders. readdirp ( '.' , { fileFilter : '*.js' , alwaysStat : true }) . on ( 'data' , ( entry ) => { const { path , stats : { size }} = entry ; console . log ( ` ${ JSON . stringify ({ path , size } )}` ); }) // Optionally call stream.destroy() in `warn()` in order to abort and cause 'close' to be emitted . on ( 'warn' , error => console . error ( 'non-fatal error' , error )) . on ( 'error' , error => console . error ( 'fatal error' , error )) . on ( 'end' , () => console . log ( 'done' )); // 3) Promise example. More RAM and CPU than streams / for-await. const files = await readdirp . promise ( '.' ); console . log ( files . map ( file => file . path )); // Other options. readdirp ( 'test' , { fileFilter : '*.js' , directoryFilter : [ '!.git' , '!*modules' ] // directoryFilter: (di) => di.basename.length === 9 type : 'files_directories' , depth : 1 }); For more examples, check out examples directory. API const stream = readdirp(root[, options]) \u2014 Stream API Reads given root recursively and returns a stream of entry infos Optionally can be used like for await (const entry of stream) with node.js 10+ ( asyncIterator ). on('data', (entry) => {}) entry info for every file / dir. on('warn', (error) => {}) non-fatal Error that prevents a file / dir from being processed. Example: inaccessible to the user. on('error', (error) => {}) fatal Error which also ends the stream. Example: illegal options where passed. on('end') \u2014 we are done. Called when all entries were found and no more will be emitted. on('close') \u2014 stream is destroyed via stream.destroy() . Could be useful if you want to manually abort even on a non fatal error. At that point the stream is no longer readable and no more entries, warning or errors are emitted To learn more about streams, consult the very detailed nodejs streams documentation or the stream-handbook const entries = await readdirp.promise(root[, options]) \u2014 Promise API . Returns a list of entry infos . First argument is awalys root , path in which to start reading and recursing into subdirectories. options fileFilter: [\"*.js\"] : filter to include or exclude files. A Function , Glob string or Array of glob strings. Function : a function that takes an entry info as a parameter and returns true to include or false to exclude the entry Glob string : a string (e.g., *.js ) which is matched using picomatch , so go there for more information. Globstars ( ** ) are not supported since specifying a recursive pattern for an already recursive function doesn't make sense. Negated globs (as explained in the minimatch documentation) are allowed, e.g., !*.txt matches everything but text files. Array of glob strings : either need to be all inclusive or all exclusive (negated) patterns otherwise an error is thrown. ['*.json', '*.js'] includes all JavaScript and Json files. ['!.git', '!node_modules'] includes all directories except the '.git' and 'node_modules'. Directories that do not pass a filter will not be recursed into. directoryFilter: ['!.git'] : filter to include/exclude directories found and to recurse into. Directories that do not pass a filter will not be recursed into. depth: 5 : depth at which to stop recursing even if more subdirectories are found type: 'files' : determines if data events on the stream should be emitted for 'files' (default), 'directories' , 'files_directories' , or 'all' . Setting to 'all' will also include entries for other types of file descriptors like character devices, unix sockets and named pipes. alwaysStat: false : always return stats property for every file. Default is false , readdirp will return Dirent entries. Setting it to true can double readdir execution time - use it only when you need file size , mtime etc. Cannot be enabled on node <10.10.0. lstat: false : include symlink entries in the stream along with files. When true , fs.lstat would be used instead of fs.stat EntryInfo Has the following properties: path: 'assets/javascripts/react.js' : path to the file/directory (relative to given root) fullPath: '/Users/dev/projects/app/assets/javascripts/react.js' : full path to the file/directory found basename: 'react.js' : name of the file/directory dirent: fs.Dirent : built-in dir entry object - only with alwaysStat: false stats: fs.Stats : built in stat object - only with alwaysStat: true Changelog 3.5 (Oct 13, 2020) disallows recursive directory-based symlinks. Before, it could have entered infinite loop. 3.4 (Mar 19, 2020) adds support for directory-based symlinks. 3.3 (Dec 6, 2019) stabilizes RAM consumption and enables perf management with highWaterMark option. Fixes race conditions related to for-await looping. 3.2 (Oct 14, 2019) improves performance by 250% and makes streams implementation more idiomatic. 3.1 (Jul 7, 2019) brings bigint support to stat output on Windows. This is backwards-incompatible for some cases. Be careful. It you use it incorrectly, you'll see \"TypeError: Cannot mix BigInt and other types, use explicit conversions\". 3.0 brings huge performance improvements and stream backpressure support. Upgrading 2.x to 3.x: Signature changed from readdirp(options) to readdirp(root, options) Replaced callback API with promise API. Renamed entryType option to type Renamed entryType: 'both' to 'files_directories' EntryInfo Renamed stat to stats Emitted only when alwaysStat: true dirent is emitted instead of stats by default with alwaysStat: false Renamed name to basename Removed parentDir and fullParentDir properties Supported node.js versions: 3.x: node 8+ 2.x: node 0.6+ License Copyright (c) 2012-2019 Thorsten Lorenz, Paul Miller ( https://paulmillr.com ) MIT License, see LICENSE file.","title":"readdirp Weekly downloads"},{"location":"system-desing/crud-app/JS/server/node_modules/readdirp/#readdirp","text":"Recursive version of fs.readdir . Exposes a stream API and a promise API . npm install readdirp const readdirp = require ( 'readdirp' ); // Use streams to achieve small RAM & CPU footprint. // 1) Streams example with for-await. for await ( const entry of readdirp ( '.' )) { const { path } = entry ; console . log ( ` ${ JSON . stringify ({ path } )}` ); } // 2) Streams example, non for-await. // Print out all JS files along with their size within the current folder & subfolders. readdirp ( '.' , { fileFilter : '*.js' , alwaysStat : true }) . on ( 'data' , ( entry ) => { const { path , stats : { size }} = entry ; console . log ( ` ${ JSON . stringify ({ path , size } )}` ); }) // Optionally call stream.destroy() in `warn()` in order to abort and cause 'close' to be emitted . on ( 'warn' , error => console . error ( 'non-fatal error' , error )) . on ( 'error' , error => console . error ( 'fatal error' , error )) . on ( 'end' , () => console . log ( 'done' )); // 3) Promise example. More RAM and CPU than streams / for-await. const files = await readdirp . promise ( '.' ); console . log ( files . map ( file => file . path )); // Other options. readdirp ( 'test' , { fileFilter : '*.js' , directoryFilter : [ '!.git' , '!*modules' ] // directoryFilter: (di) => di.basename.length === 9 type : 'files_directories' , depth : 1 }); For more examples, check out examples directory.","title":"readdirp"},{"location":"system-desing/crud-app/JS/server/node_modules/readdirp/#api","text":"const stream = readdirp(root[, options]) \u2014 Stream API Reads given root recursively and returns a stream of entry infos Optionally can be used like for await (const entry of stream) with node.js 10+ ( asyncIterator ). on('data', (entry) => {}) entry info for every file / dir. on('warn', (error) => {}) non-fatal Error that prevents a file / dir from being processed. Example: inaccessible to the user. on('error', (error) => {}) fatal Error which also ends the stream. Example: illegal options where passed. on('end') \u2014 we are done. Called when all entries were found and no more will be emitted. on('close') \u2014 stream is destroyed via stream.destroy() . Could be useful if you want to manually abort even on a non fatal error. At that point the stream is no longer readable and no more entries, warning or errors are emitted To learn more about streams, consult the very detailed nodejs streams documentation or the stream-handbook const entries = await readdirp.promise(root[, options]) \u2014 Promise API . Returns a list of entry infos . First argument is awalys root , path in which to start reading and recursing into subdirectories.","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/readdirp/#options","text":"fileFilter: [\"*.js\"] : filter to include or exclude files. A Function , Glob string or Array of glob strings. Function : a function that takes an entry info as a parameter and returns true to include or false to exclude the entry Glob string : a string (e.g., *.js ) which is matched using picomatch , so go there for more information. Globstars ( ** ) are not supported since specifying a recursive pattern for an already recursive function doesn't make sense. Negated globs (as explained in the minimatch documentation) are allowed, e.g., !*.txt matches everything but text files. Array of glob strings : either need to be all inclusive or all exclusive (negated) patterns otherwise an error is thrown. ['*.json', '*.js'] includes all JavaScript and Json files. ['!.git', '!node_modules'] includes all directories except the '.git' and 'node_modules'. Directories that do not pass a filter will not be recursed into. directoryFilter: ['!.git'] : filter to include/exclude directories found and to recurse into. Directories that do not pass a filter will not be recursed into. depth: 5 : depth at which to stop recursing even if more subdirectories are found type: 'files' : determines if data events on the stream should be emitted for 'files' (default), 'directories' , 'files_directories' , or 'all' . Setting to 'all' will also include entries for other types of file descriptors like character devices, unix sockets and named pipes. alwaysStat: false : always return stats property for every file. Default is false , readdirp will return Dirent entries. Setting it to true can double readdir execution time - use it only when you need file size , mtime etc. Cannot be enabled on node <10.10.0. lstat: false : include symlink entries in the stream along with files. When true , fs.lstat would be used instead of fs.stat","title":"options"},{"location":"system-desing/crud-app/JS/server/node_modules/readdirp/#entryinfo","text":"Has the following properties: path: 'assets/javascripts/react.js' : path to the file/directory (relative to given root) fullPath: '/Users/dev/projects/app/assets/javascripts/react.js' : full path to the file/directory found basename: 'react.js' : name of the file/directory dirent: fs.Dirent : built-in dir entry object - only with alwaysStat: false stats: fs.Stats : built in stat object - only with alwaysStat: true","title":"EntryInfo"},{"location":"system-desing/crud-app/JS/server/node_modules/readdirp/#changelog","text":"3.5 (Oct 13, 2020) disallows recursive directory-based symlinks. Before, it could have entered infinite loop. 3.4 (Mar 19, 2020) adds support for directory-based symlinks. 3.3 (Dec 6, 2019) stabilizes RAM consumption and enables perf management with highWaterMark option. Fixes race conditions related to for-await looping. 3.2 (Oct 14, 2019) improves performance by 250% and makes streams implementation more idiomatic. 3.1 (Jul 7, 2019) brings bigint support to stat output on Windows. This is backwards-incompatible for some cases. Be careful. It you use it incorrectly, you'll see \"TypeError: Cannot mix BigInt and other types, use explicit conversions\". 3.0 brings huge performance improvements and stream backpressure support. Upgrading 2.x to 3.x: Signature changed from readdirp(options) to readdirp(root, options) Replaced callback API with promise API. Renamed entryType option to type Renamed entryType: 'both' to 'files_directories' EntryInfo Renamed stat to stats Emitted only when alwaysStat: true dirent is emitted instead of stats by default with alwaysStat: false Renamed name to basename Removed parentDir and fullParentDir properties Supported node.js versions: 3.x: node 8+ 2.x: node 0.6+","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/readdirp/#license","text":"Copyright (c) 2012-2019 Thorsten Lorenz, Paul Miller ( https://paulmillr.com ) MIT License, see LICENSE file.","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/router/","text":"router Simple middleware-style router Installation This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install router API var finalhandler = require ( 'finalhandler' ) var http = require ( 'http' ) var Router = require ( 'router' ) var router = Router () router . get ( '/' , function ( req , res ) { res . setHeader ( 'Content-Type' , 'text/plain; charset=utf-8' ) res . end ( 'Hello World!' ) }) var server = http . createServer ( function ( req , res ) { router ( req , res , finalhandler ( req , res )) }) server . listen ( 3000 ) This module is currently an extracted version from the Express project, but with the main change being it can be used with a plain http.createServer object or other web frameworks by removing Express-specific API calls. Router(options) Options strict - When false trailing slashes are optional (default: false ) caseSensitive - When true the routing will be case sensitive. (default: false ) mergeParams - When true any req.params passed to the router will be merged into the router's req.params . (default: false ) ( example ) Returns a function with the signature router(req, res, callback) where callback([err]) must be provided to handle errors and fall-through from not handling requests. router.use([path], ...middleware) Use the given middleware function for all http methods on the given path , defaulting to the root path. router does not automatically see use as a handler. As such, it will not consider it one for handling OPTIONS requests. Note: If a path is specified, that path is stripped from the start of req.url . router . use ( function ( req , res , next ) { // do your things // continue to the next middleware // the request will stall if this is not called next () // note: you should NOT call `next` if you have begun writing to the response }) Middleware can themselves use next('router') at any time to exit the current router instance completely, invoking the top-level callback. router[method](path, ...[middleware], handler) The http methods provide the routing functionality in router . Method middleware and handlers follow usual middleware behavior, except they will only be called when the method and path match the request. // handle a `GET` request router . get ( '/' , function ( req , res ) { res . setHeader ( 'Content-Type' , 'text/plain; charset=utf-8' ) res . end ( 'Hello World!' ) }) Middleware given before the handler have one additional trick, they may invoke next('route') . Calling next('route') bypasses the remaining middleware and the handler mounted for this route, passing the request to the next route suitable for handling this request. Route handlers and middleware can themselves use next('router') at any time to exit the current router instance completely, invoking the top-level callback. router.param(name, param_middleware) Maps the specified path parameter name to a specialized param-capturing middleware. This function positions the middleware in the same stack as .use . The function can optionally return a Promise object. If a Promise object is returned from the function, the router will attach an onRejected callback using .then . If the promise is rejected, next will be called with the rejected value, or an error if the value is falsy. Parameter mapping is used to provide pre-conditions to routes which use normalized placeholders. For example a :user_id parameter could automatically load a user's information from the database without any additional code: router . param ( 'user_id' , function ( req , res , next , id ) { User . find ( id , function ( err , user ) { if ( err ) { return next ( err ) } else if ( ! user ) { return next ( new Error ( 'failed to load user' )) } req . user = user // continue processing the request next () }) }) router.route(path) Creates an instance of a single Route for the given path . (See Router.Route below) Routes can be used to handle http methods with their own, optional middleware. Using router.route(path) is a recommended approach to avoiding duplicate route naming and thus typo errors. var api = router . route ( '/api/' ) Router.Route(path) Represents a single route as an instance that can be used to handle http methods with it's own, optional middleware. route[method](handler) These are functions which you can directly call on a route to register a new handler for the method on the route. // handle a `GET` request var status = router . route ( '/status' ) status . get ( function ( req , res ) { res . setHeader ( 'Content-Type' , 'text/plain; charset=utf-8' ) res . end ( 'All Systems Green!' ) }) route.all(handler) Adds a handler for all HTTP methods to this route. The handler can behave like middleware and call next to continue processing rather than responding. router . route ( '/' ) . all ( function ( req , res , next ) { next () }) . all ( checkSomething ) . get ( function ( req , res ) { res . setHeader ( 'Content-Type' , 'text/plain; charset=utf-8' ) res . end ( 'Hello World!' ) }) Middleware Middleware (and method handlers) are functions that follow specific function parameters and have defined behavior when used with router . The most common format is with three parameters - \"req\", \"res\" and \"next\". req - This is a HTTP incoming message instance. res - This is a HTTP server response instance. next - Calling this function that tells router to proceed to the next matching middleware or method handler. It accepts an error as the first argument. The function can optionally return a Promise object. If a Promise object is returned from the function, the router will attach an onRejected callback using .then . If the promise is rejected, next will be called with the rejected value, or an error if the value is falsy. Middleware and method handlers can also be defined with four arguments. When the function has four parameters defined, the first argument is an error and subsequent arguments remain, becoming - \"err\", \"req\", \"res\", \"next\". These functions are \"error handling middleware\", and can be used for handling errors that occurred in previous handlers (E.g. from calling next(err) ). This is most used when you want to define arbitrary rendering of errors. router . get ( '/error_route' , function ( req , res , next ) { return next ( new Error ( 'Bad Request' )) }) router . use ( function ( err , req , res , next ) { res . end ( err . message ) //= > \"Bad Request\" }) Error handling middleware will only be invoked when an error was given. As long as the error is in the pipeline, normal middleware and handlers will be bypassed - only error handling middleware will be invoked with an error. Examples // import our modules var http = require ( 'http' ) var Router = require ( 'router' ) var finalhandler = require ( 'finalhandler' ) var compression = require ( 'compression' ) var bodyParser = require ( 'body-parser' ) // store our message to display var message = 'Hello World!' // initialize the router & server and add a final callback. var router = Router () var server = http . createServer ( function onRequest ( req , res ) { router ( req , res , finalhandler ( req , res )) }) // use some middleware and compress all outgoing responses router . use ( compression ()) // handle `GET` requests to `/message` router . get ( '/message' , function ( req , res ) { res . statusCode = 200 res . setHeader ( 'Content-Type' , 'text/plain; charset=utf-8' ) res . end ( message + '\\n' ) }) // create and mount a new router for our API var api = Router () router . use ( '/api/' , api ) // add a body parsing middleware to our API api . use ( bodyParser . json ()) // handle `PATCH` requests to `/api/set-message` api . patch ( '/set-message' , function ( req , res ) { if ( req . body . value ) { message = req . body . value res . statusCode = 200 res . setHeader ( 'Content-Type' , 'text/plain; charset=utf-8' ) res . end ( message + '\\n' ) } else { res . statusCode = 400 res . setHeader ( 'Content-Type' , 'text/plain; charset=utf-8' ) res . end ( 'Invalid API Syntax\\n' ) } }) // make our http server listen to connections server . listen ( 8080 ) You can get the message by running this command in your terminal, or navigating to 127.0.0.1:8080 in a web browser. curl http://127.0.0.1:8080 You can set the message by sending it a PATCH request via this command: curl http://127.0.0.1:8080/api/set-message -X PATCH -H \"Content-Type: application/json\" -d '{\"value\":\"Cats!\"}' Example using mergeParams var http = require ( 'http' ) var Router = require ( 'router' ) var finalhandler = require ( 'finalhandler' ) // this example is about the mergeParams option var opts = { mergeParams : true } // make a router with out special options var router = Router ( opts ) var server = http . createServer ( function onRequest ( req , res ) { // set something to be passed into the router req . params = { type : 'kitten' } router ( req , res , finalhandler ( req , res )) }) router . get ( '/' , function ( req , res ) { res . statusCode = 200 res . setHeader ( 'Content-Type' , 'text/plain; charset=utf-8' ) // with respond with the the params that were passed in res . end ( req . params . type + '\\n' ) }) // make another router with our options var handler = Router ( opts ) // mount our new router to a route that accepts a param router . use ( '/:path' , handler ) handler . get ( '/' , function ( req , res ) { res . statusCode = 200 res . setHeader ( 'Content-Type' , 'text/plain; charset=utf-8' ) // will respond with the param of the router's parent route res . end ( req . params . path + '\\n' ) }) // make our http server listen to connections server . listen ( 8080 ) Now you can get the type, or what path you are requesting: curl http://127.0.0.1:8080 > kitten curl http://127.0.0.1:8080/such_path > such_path Example of advanced .route() usage This example shows how to implement routes where there is a custom handler to execute when the path matched, but no methods matched. Without any special handling, this would be treated as just a generic non-match by router (which typically results in a 404), but with a custom handler, a 405 Method Not Allowed can be sent. var http = require ( 'http' ) var finalhandler = require ( 'finalhandler' ) var Router = require ( 'router' ) // create the router and server var router = new Router () var server = http . createServer ( function onRequest ( req , res ) { router ( req , res , finalhandler ( req , res )) }) // register a route and add all methods router . route ( '/pet/:id' ) . get ( function ( req , res ) { // this is GET /pet/:id res . setHeader ( 'Content-Type' , 'application/json' ) res . end ( JSON . stringify ({ name : 'tobi' })) }) . delete ( function ( req , res ) { // this is DELETE /pet/:id res . end () }) . all ( function ( req , res ) { // this is called for all other methods not // defined above for /pet/:id res . statusCode = 405 res . end () }) // make our http server listen to connections server . listen ( 8080 ) License MIT","title":"router"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#router","text":"Simple middleware-style router","title":"router"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#installation","text":"This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install router","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#api","text":"var finalhandler = require ( 'finalhandler' ) var http = require ( 'http' ) var Router = require ( 'router' ) var router = Router () router . get ( '/' , function ( req , res ) { res . setHeader ( 'Content-Type' , 'text/plain; charset=utf-8' ) res . end ( 'Hello World!' ) }) var server = http . createServer ( function ( req , res ) { router ( req , res , finalhandler ( req , res )) }) server . listen ( 3000 ) This module is currently an extracted version from the Express project, but with the main change being it can be used with a plain http.createServer object or other web frameworks by removing Express-specific API calls.","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#routeroptions","text":"Options strict - When false trailing slashes are optional (default: false ) caseSensitive - When true the routing will be case sensitive. (default: false ) mergeParams - When true any req.params passed to the router will be merged into the router's req.params . (default: false ) ( example ) Returns a function with the signature router(req, res, callback) where callback([err]) must be provided to handle errors and fall-through from not handling requests.","title":"Router(options)"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#routerusepath-middleware","text":"Use the given middleware function for all http methods on the given path , defaulting to the root path. router does not automatically see use as a handler. As such, it will not consider it one for handling OPTIONS requests. Note: If a path is specified, that path is stripped from the start of req.url . router . use ( function ( req , res , next ) { // do your things // continue to the next middleware // the request will stall if this is not called next () // note: you should NOT call `next` if you have begun writing to the response }) Middleware can themselves use next('router') at any time to exit the current router instance completely, invoking the top-level callback.","title":"router.use([path], ...middleware)"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#routermethodpath-middleware-handler","text":"The http methods provide the routing functionality in router . Method middleware and handlers follow usual middleware behavior, except they will only be called when the method and path match the request. // handle a `GET` request router . get ( '/' , function ( req , res ) { res . setHeader ( 'Content-Type' , 'text/plain; charset=utf-8' ) res . end ( 'Hello World!' ) }) Middleware given before the handler have one additional trick, they may invoke next('route') . Calling next('route') bypasses the remaining middleware and the handler mounted for this route, passing the request to the next route suitable for handling this request. Route handlers and middleware can themselves use next('router') at any time to exit the current router instance completely, invoking the top-level callback.","title":"router[method](path, ...[middleware], handler)"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#routerparamname-param_middleware","text":"Maps the specified path parameter name to a specialized param-capturing middleware. This function positions the middleware in the same stack as .use . The function can optionally return a Promise object. If a Promise object is returned from the function, the router will attach an onRejected callback using .then . If the promise is rejected, next will be called with the rejected value, or an error if the value is falsy. Parameter mapping is used to provide pre-conditions to routes which use normalized placeholders. For example a :user_id parameter could automatically load a user's information from the database without any additional code: router . param ( 'user_id' , function ( req , res , next , id ) { User . find ( id , function ( err , user ) { if ( err ) { return next ( err ) } else if ( ! user ) { return next ( new Error ( 'failed to load user' )) } req . user = user // continue processing the request next () }) })","title":"router.param(name, param_middleware)"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#routerroutepath","text":"Creates an instance of a single Route for the given path . (See Router.Route below) Routes can be used to handle http methods with their own, optional middleware. Using router.route(path) is a recommended approach to avoiding duplicate route naming and thus typo errors. var api = router . route ( '/api/' )","title":"router.route(path)"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#routerroutepath_1","text":"Represents a single route as an instance that can be used to handle http methods with it's own, optional middleware.","title":"Router.Route(path)"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#routemethodhandler","text":"These are functions which you can directly call on a route to register a new handler for the method on the route. // handle a `GET` request var status = router . route ( '/status' ) status . get ( function ( req , res ) { res . setHeader ( 'Content-Type' , 'text/plain; charset=utf-8' ) res . end ( 'All Systems Green!' ) })","title":"route[method](handler)"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#routeallhandler","text":"Adds a handler for all HTTP methods to this route. The handler can behave like middleware and call next to continue processing rather than responding. router . route ( '/' ) . all ( function ( req , res , next ) { next () }) . all ( checkSomething ) . get ( function ( req , res ) { res . setHeader ( 'Content-Type' , 'text/plain; charset=utf-8' ) res . end ( 'Hello World!' ) })","title":"route.all(handler)"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#middleware","text":"Middleware (and method handlers) are functions that follow specific function parameters and have defined behavior when used with router . The most common format is with three parameters - \"req\", \"res\" and \"next\". req - This is a HTTP incoming message instance. res - This is a HTTP server response instance. next - Calling this function that tells router to proceed to the next matching middleware or method handler. It accepts an error as the first argument. The function can optionally return a Promise object. If a Promise object is returned from the function, the router will attach an onRejected callback using .then . If the promise is rejected, next will be called with the rejected value, or an error if the value is falsy. Middleware and method handlers can also be defined with four arguments. When the function has four parameters defined, the first argument is an error and subsequent arguments remain, becoming - \"err\", \"req\", \"res\", \"next\". These functions are \"error handling middleware\", and can be used for handling errors that occurred in previous handlers (E.g. from calling next(err) ). This is most used when you want to define arbitrary rendering of errors. router . get ( '/error_route' , function ( req , res , next ) { return next ( new Error ( 'Bad Request' )) }) router . use ( function ( err , req , res , next ) { res . end ( err . message ) //= > \"Bad Request\" }) Error handling middleware will only be invoked when an error was given. As long as the error is in the pipeline, normal middleware and handlers will be bypassed - only error handling middleware will be invoked with an error.","title":"Middleware"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#examples","text":"// import our modules var http = require ( 'http' ) var Router = require ( 'router' ) var finalhandler = require ( 'finalhandler' ) var compression = require ( 'compression' ) var bodyParser = require ( 'body-parser' ) // store our message to display var message = 'Hello World!' // initialize the router & server and add a final callback. var router = Router () var server = http . createServer ( function onRequest ( req , res ) { router ( req , res , finalhandler ( req , res )) }) // use some middleware and compress all outgoing responses router . use ( compression ()) // handle `GET` requests to `/message` router . get ( '/message' , function ( req , res ) { res . statusCode = 200 res . setHeader ( 'Content-Type' , 'text/plain; charset=utf-8' ) res . end ( message + '\\n' ) }) // create and mount a new router for our API var api = Router () router . use ( '/api/' , api ) // add a body parsing middleware to our API api . use ( bodyParser . json ()) // handle `PATCH` requests to `/api/set-message` api . patch ( '/set-message' , function ( req , res ) { if ( req . body . value ) { message = req . body . value res . statusCode = 200 res . setHeader ( 'Content-Type' , 'text/plain; charset=utf-8' ) res . end ( message + '\\n' ) } else { res . statusCode = 400 res . setHeader ( 'Content-Type' , 'text/plain; charset=utf-8' ) res . end ( 'Invalid API Syntax\\n' ) } }) // make our http server listen to connections server . listen ( 8080 ) You can get the message by running this command in your terminal, or navigating to 127.0.0.1:8080 in a web browser. curl http://127.0.0.1:8080 You can set the message by sending it a PATCH request via this command: curl http://127.0.0.1:8080/api/set-message -X PATCH -H \"Content-Type: application/json\" -d '{\"value\":\"Cats!\"}'","title":"Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#example-using-mergeparams","text":"var http = require ( 'http' ) var Router = require ( 'router' ) var finalhandler = require ( 'finalhandler' ) // this example is about the mergeParams option var opts = { mergeParams : true } // make a router with out special options var router = Router ( opts ) var server = http . createServer ( function onRequest ( req , res ) { // set something to be passed into the router req . params = { type : 'kitten' } router ( req , res , finalhandler ( req , res )) }) router . get ( '/' , function ( req , res ) { res . statusCode = 200 res . setHeader ( 'Content-Type' , 'text/plain; charset=utf-8' ) // with respond with the the params that were passed in res . end ( req . params . type + '\\n' ) }) // make another router with our options var handler = Router ( opts ) // mount our new router to a route that accepts a param router . use ( '/:path' , handler ) handler . get ( '/' , function ( req , res ) { res . statusCode = 200 res . setHeader ( 'Content-Type' , 'text/plain; charset=utf-8' ) // will respond with the param of the router's parent route res . end ( req . params . path + '\\n' ) }) // make our http server listen to connections server . listen ( 8080 ) Now you can get the type, or what path you are requesting: curl http://127.0.0.1:8080 > kitten curl http://127.0.0.1:8080/such_path > such_path","title":"Example using mergeParams"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#example-of-advanced-route-usage","text":"This example shows how to implement routes where there is a custom handler to execute when the path matched, but no methods matched. Without any special handling, this would be treated as just a generic non-match by router (which typically results in a 404), but with a custom handler, a 405 Method Not Allowed can be sent. var http = require ( 'http' ) var finalhandler = require ( 'finalhandler' ) var Router = require ( 'router' ) // create the router and server var router = new Router () var server = http . createServer ( function onRequest ( req , res ) { router ( req , res , finalhandler ( req , res )) }) // register a route and add all methods router . route ( '/pet/:id' ) . get ( function ( req , res ) { // this is GET /pet/:id res . setHeader ( 'Content-Type' , 'application/json' ) res . end ( JSON . stringify ({ name : 'tobi' })) }) . delete ( function ( req , res ) { // this is DELETE /pet/:id res . end () }) . all ( function ( req , res ) { // this is called for all other methods not // defined above for /pet/:id res . statusCode = 405 res . end () }) // make our http server listen to connections server . listen ( 8080 )","title":"Example of advanced .route() usage"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/","text":"2.2.0 / 2025-03-26 Remove setImmediate support check Restore debug dependency 2.1.0 / 2025-02-10 Updated engines field to Node@18 or higher Remove Object.setPrototypeOf polyfill Use Array.flat instead of array-flatten package Replace methods dependency with standard library deps: parseurl@^1.3.3 deps: is-promise@^4.0.0 Replace utils-merge dependency with Object.assign deps: Remove unused dep after 2.0.0 / 2024-09-09 Drop support for node <18 deps: path-to-regexp@^8.0.0 Drop support for partial capture group router.route('/user(s?)/:user/:op') but still have optional non-capture /user{s}/:user/:op :name? becomes {:name} :name* becomes *name . The splat change also changes splat from strings to an array of strings Optional splats become {*name} :name+ becomes *name and thus equivalent to *name so I dropped those tests Strings as regular expressions are fully removed, need to be converted to native regular expressions 2.0.0-beta.2 / 2024-03-20 This incorporates all changes after 1.3.5 up to 1.3.8. Add support for returned, rejected Promises to router.param 2.0.0-beta.1 / 2020-03-29 This incorporates all changes after 1.3.3 up to 1.3.5. Internalize private router.process_params method Remove debug dependency deps: array-flatten@3.0.0 deps: parseurl@~1.3.3 deps: path-to-regexp@3.2.0 Add new ? , * , and + parameter modifiers. Matching group expressions are only RegExp syntax. (*) is no longer valid and must be written as (.*) , for example. Named matching groups no longer available by position in req.params . /:foo(.*) only captures as req.params.foo and not available as req.params[0] . Regular expressions can only be used in a matching group. /\\\\d+ is no longer valid and must be written as /(\\\\d+) . Matching groups are now literal regular expressions. :foo named captures can no longer be included inside a capture group. Special * path segment behavior removed. /foo/*/bar will match a literal * as the middle segment. deps: setprototypeof@1.2.0 2.0.0-alpha.1 / 2018-07-27 Add basic support for returned, rejected Promises Rejected Promises from middleware functions next(error) Drop support for Node.js below 0.10 deps: debug@3.1.0 Add DEBUG_HIDE_DATE environment variable Change timer to per-namespace instead of global Change non-TTY date format Remove DEBUG_FD environment variable support Support 256 namespace colors 1.3.8 / 2023-02-24 Fix routing requests without method 1.3.7 / 2022-04-28 Fix hanging on large stack of sync routes 1.3.6 / 2021-11-15 Fix handling very large stacks of sync middleware deps: safe-buffer@5.2.1 1.3.5 / 2020-03-24 Fix incorrect middleware execution with unanchored RegExp s perf: use plain object for internal method map 1.3.4 / 2020-01-24 deps: array-flatten@3.0.0 deps: parseurl@~1.3.3 deps: setprototypeof@1.2.0 1.3.3 / 2018-07-06 Fix JSDoc for Router constructor 1.3.2 / 2017-09-24 deps: debug@2.6.9 deps: parseurl@~1.3.2 perf: reduce overhead for full URLs perf: unroll the \"fast-path\" RegExp deps: setprototypeof@1.1.0 deps: utils-merge@1.0.1 1.3.1 / 2017-05-19 deps: debug@2.6.8 Fix DEBUG_MAX_ARRAY_LENGTH deps: ms@2.0.0 1.3.0 / 2017-02-25 Add next(\"router\") to exit from router Fix case where router.use skipped requests routes did not Use %o in path debug to tell types apart deps: setprototypeof@1.0.3 perf: add fast match path for * route 1.2.0 / 2017-02-17 Skip routing when req.url is not set deps: debug@2.6.1 Allow colors in workers Deprecated DEBUG_FD environment variable set to 3 or higher Fix error when running under React Native Use same color for same namespace deps: ms@0.7.2 1.1.5 / 2017-01-28 deps: array-flatten@2.1.1 deps: setprototypeof@1.0.2 Fix using fallback even when native method exists 1.1.4 / 2016-01-21 deps: array-flatten@2.0.0 deps: methods@~1.1.2 perf: enable strict mode deps: parseurl@~1.3.1 perf: enable strict mode 1.1.3 / 2015-08-02 Fix infinite loop condition using mergeParams: true Fix inner numeric indices incorrectly altering parent req.params deps: array-flatten@1.1.1 perf: enable strict mode deps: path-to-regexp@0.1.7 Fix regression with escaped round brackets and matching groups 1.1.2 / 2015-07-06 Fix hiding platform issues with decodeURIComponent Only URIError s are a 400 Fix using * before params in routes Fix using capture groups before params in routes deps: path-to-regexp@0.1.6 perf: enable strict mode perf: remove argument reassignments in routing perf: skip attempting to decode zero length string perf: use plain for loops 1.1.1 / 2015-05-25 Fix issue where next('route') in router.param would incorrectly skip values deps: array-flatten@1.1.0 deps: debug@~2.2.0 deps: ms@0.7.1 1.1.0 / 2015-04-22 Use setprototypeof instead of __proto__ deps: debug@~2.1.3 Fix high intensity foreground color for bold deps: ms@0.7.0 1.0.0 / 2015-01-13 Fix crash from error within OPTIONS response handler deps: array-flatten@1.0.2 Remove redundant code path 1.0.0-beta.3 / 2015-01-11 Fix duplicate methods appearing in OPTIONS responses Fix OPTIONS responses to include the HEAD method properly Remove support for leading colon in router.param(name, fn) Use array-flatten for flattening arrays deps: debug@~2.1.1 deps: methods@~1.1.1 1.0.0-beta.2 / 2014-11-19 Match routes iteratively to prevent stack overflows 1.0.0-beta.1 / 2014-11-16 Initial release ported from Express 4.x Altered to work without Express","title":"2.2.0 / 2025-03-26"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#220-2025-03-26","text":"Remove setImmediate support check Restore debug dependency","title":"2.2.0 / 2025-03-26"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#210-2025-02-10","text":"Updated engines field to Node@18 or higher Remove Object.setPrototypeOf polyfill Use Array.flat instead of array-flatten package Replace methods dependency with standard library deps: parseurl@^1.3.3 deps: is-promise@^4.0.0 Replace utils-merge dependency with Object.assign deps: Remove unused dep after","title":"2.1.0 / 2025-02-10"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#200-2024-09-09","text":"Drop support for node <18 deps: path-to-regexp@^8.0.0 Drop support for partial capture group router.route('/user(s?)/:user/:op') but still have optional non-capture /user{s}/:user/:op :name? becomes {:name} :name* becomes *name . The splat change also changes splat from strings to an array of strings Optional splats become {*name} :name+ becomes *name and thus equivalent to *name so I dropped those tests Strings as regular expressions are fully removed, need to be converted to native regular expressions","title":"2.0.0 / 2024-09-09"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#200-beta2-2024-03-20","text":"This incorporates all changes after 1.3.5 up to 1.3.8. Add support for returned, rejected Promises to router.param","title":"2.0.0-beta.2 / 2024-03-20"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#200-beta1-2020-03-29","text":"This incorporates all changes after 1.3.3 up to 1.3.5. Internalize private router.process_params method Remove debug dependency deps: array-flatten@3.0.0 deps: parseurl@~1.3.3 deps: path-to-regexp@3.2.0 Add new ? , * , and + parameter modifiers. Matching group expressions are only RegExp syntax. (*) is no longer valid and must be written as (.*) , for example. Named matching groups no longer available by position in req.params . /:foo(.*) only captures as req.params.foo and not available as req.params[0] . Regular expressions can only be used in a matching group. /\\\\d+ is no longer valid and must be written as /(\\\\d+) . Matching groups are now literal regular expressions. :foo named captures can no longer be included inside a capture group. Special * path segment behavior removed. /foo/*/bar will match a literal * as the middle segment. deps: setprototypeof@1.2.0","title":"2.0.0-beta.1 / 2020-03-29"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#200-alpha1-2018-07-27","text":"Add basic support for returned, rejected Promises Rejected Promises from middleware functions next(error) Drop support for Node.js below 0.10 deps: debug@3.1.0 Add DEBUG_HIDE_DATE environment variable Change timer to per-namespace instead of global Change non-TTY date format Remove DEBUG_FD environment variable support Support 256 namespace colors","title":"2.0.0-alpha.1 / 2018-07-27"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#138-2023-02-24","text":"Fix routing requests without method","title":"1.3.8 / 2023-02-24"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#137-2022-04-28","text":"Fix hanging on large stack of sync routes","title":"1.3.7 / 2022-04-28"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#136-2021-11-15","text":"Fix handling very large stacks of sync middleware deps: safe-buffer@5.2.1","title":"1.3.6 / 2021-11-15"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#135-2020-03-24","text":"Fix incorrect middleware execution with unanchored RegExp s perf: use plain object for internal method map","title":"1.3.5 / 2020-03-24"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#134-2020-01-24","text":"deps: array-flatten@3.0.0 deps: parseurl@~1.3.3 deps: setprototypeof@1.2.0","title":"1.3.4 / 2020-01-24"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#133-2018-07-06","text":"Fix JSDoc for Router constructor","title":"1.3.3 / 2018-07-06"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#132-2017-09-24","text":"deps: debug@2.6.9 deps: parseurl@~1.3.2 perf: reduce overhead for full URLs perf: unroll the \"fast-path\" RegExp deps: setprototypeof@1.1.0 deps: utils-merge@1.0.1","title":"1.3.2 / 2017-09-24"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#131-2017-05-19","text":"deps: debug@2.6.8 Fix DEBUG_MAX_ARRAY_LENGTH deps: ms@2.0.0","title":"1.3.1 / 2017-05-19"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#130-2017-02-25","text":"Add next(\"router\") to exit from router Fix case where router.use skipped requests routes did not Use %o in path debug to tell types apart deps: setprototypeof@1.0.3 perf: add fast match path for * route","title":"1.3.0 / 2017-02-25"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#120-2017-02-17","text":"Skip routing when req.url is not set deps: debug@2.6.1 Allow colors in workers Deprecated DEBUG_FD environment variable set to 3 or higher Fix error when running under React Native Use same color for same namespace deps: ms@0.7.2","title":"1.2.0 / 2017-02-17"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#115-2017-01-28","text":"deps: array-flatten@2.1.1 deps: setprototypeof@1.0.2 Fix using fallback even when native method exists","title":"1.1.5 / 2017-01-28"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#114-2016-01-21","text":"deps: array-flatten@2.0.0 deps: methods@~1.1.2 perf: enable strict mode deps: parseurl@~1.3.1 perf: enable strict mode","title":"1.1.4 / 2016-01-21"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#113-2015-08-02","text":"Fix infinite loop condition using mergeParams: true Fix inner numeric indices incorrectly altering parent req.params deps: array-flatten@1.1.1 perf: enable strict mode deps: path-to-regexp@0.1.7 Fix regression with escaped round brackets and matching groups","title":"1.1.3 / 2015-08-02"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#112-2015-07-06","text":"Fix hiding platform issues with decodeURIComponent Only URIError s are a 400 Fix using * before params in routes Fix using capture groups before params in routes deps: path-to-regexp@0.1.6 perf: enable strict mode perf: remove argument reassignments in routing perf: skip attempting to decode zero length string perf: use plain for loops","title":"1.1.2 / 2015-07-06"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#111-2015-05-25","text":"Fix issue where next('route') in router.param would incorrectly skip values deps: array-flatten@1.1.0 deps: debug@~2.2.0 deps: ms@0.7.1","title":"1.1.1 / 2015-05-25"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#110-2015-04-22","text":"Use setprototypeof instead of __proto__ deps: debug@~2.1.3 Fix high intensity foreground color for bold deps: ms@0.7.0","title":"1.1.0 / 2015-04-22"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#100-2015-01-13","text":"Fix crash from error within OPTIONS response handler deps: array-flatten@1.0.2 Remove redundant code path","title":"1.0.0 / 2015-01-13"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#100-beta3-2015-01-11","text":"Fix duplicate methods appearing in OPTIONS responses Fix OPTIONS responses to include the HEAD method properly Remove support for leading colon in router.param(name, fn) Use array-flatten for flattening arrays deps: debug@~2.1.1 deps: methods@~1.1.1","title":"1.0.0-beta.3 / 2015-01-11"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#100-beta2-2014-11-19","text":"Match routes iteratively to prevent stack overflows","title":"1.0.0-beta.2 / 2014-11-19"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#100-beta1-2014-11-16","text":"Initial release ported from Express 4.x Altered to work without Express","title":"1.0.0-beta.1 / 2014-11-16"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/","text":"safe-buffer Safer Node.js Buffer API Use the new Node.js Buffer APIs ( Buffer.from , Buffer.alloc , Buffer.allocUnsafe , Buffer.allocUnsafeSlow ) in all versions of Node.js. Uses the built-in implementation when available. install npm install safe-buffer usage The goal of this package is to provide a safe replacement for the node.js Buffer . It's a drop-in replacement for Buffer . You can use it by adding one require line to the top of your node.js modules: var Buffer = require ( 'safe-buffer' ). Buffer // Existing buffer code will continue to work without issues: new Buffer ( 'hey' , 'utf8' ) new Buffer ([ 1 , 2 , 3 ], 'utf8' ) new Buffer ( obj ) new Buffer ( 16 ) // create an uninitialized buffer (potentially unsafe) // But you can use these new explicit APIs to make clear what you want: Buffer . from ( 'hey' , 'utf8' ) // convert from many types to a Buffer Buffer . alloc ( 16 ) // create a zero-filled buffer (safe) Buffer . allocUnsafe ( 16 ) // create an uninitialized buffer (potentially unsafe) api Class Method: Buffer.from(array) array {Array} Allocates a new Buffer using an array of octets. const buf = Buffer . from ([ 0x62 , 0x75 , 0x66 , 0x66 , 0x65 , 0x72 ]); // creates a new Buffer containing ASCII bytes // ['b','u','f','f','e','r'] A TypeError will be thrown if array is not an Array . Class Method: Buffer.from(arrayBuffer[, byteOffset[, length]]) arrayBuffer {ArrayBuffer} The .buffer property of a TypedArray or a new ArrayBuffer() byteOffset {Number} Default: 0 length {Number} Default: arrayBuffer.length - byteOffset When passed a reference to the .buffer property of a TypedArray instance, the newly created Buffer will share the same allocated memory as the TypedArray. const arr = new Uint16Array ( 2 ); arr [ 0 ] = 5000 ; arr [ 1 ] = 4000 ; const buf = Buffer . from ( arr . buffer ); // shares the memory with arr; console . log ( buf ); // Prints: <Buffer 88 13 a0 0f> // changing the TypedArray changes the Buffer also arr [ 1 ] = 6000 ; console . log ( buf ); // Prints: <Buffer 88 13 70 17> The optional byteOffset and length arguments specify a memory range within the arrayBuffer that will be shared by the Buffer . const ab = new ArrayBuffer ( 10 ); const buf = Buffer . from ( ab , 0 , 2 ); console . log ( buf . length ); // Prints: 2 A TypeError will be thrown if arrayBuffer is not an ArrayBuffer . Class Method: Buffer.from(buffer) buffer {Buffer} Copies the passed buffer data onto a new Buffer instance. const buf1 = Buffer . from ( 'buffer' ); const buf2 = Buffer . from ( buf1 ); buf1 [ 0 ] = 0x61 ; console . log ( buf1 . toString ()); // 'auffer' console . log ( buf2 . toString ()); // 'buffer' (copy is not changed) A TypeError will be thrown if buffer is not a Buffer . Class Method: Buffer.from(str[, encoding]) str {String} String to encode. encoding {String} Encoding to use, Default: 'utf8' Creates a new Buffer containing the given JavaScript string str . If provided, the encoding parameter identifies the character encoding. If not provided, encoding defaults to 'utf8' . const buf1 = Buffer . from ( 'this is a t\u00e9st' ); console . log ( buf1 . toString ()); // prints: this is a t\u00e9st console . log ( buf1 . toString ( 'ascii' )); // prints: this is a tC)st const buf2 = Buffer . from ( '7468697320697320612074c3a97374' , 'hex' ); console . log ( buf2 . toString ()); // prints: this is a t\u00e9st A TypeError will be thrown if str is not a string. Class Method: Buffer.alloc(size[, fill[, encoding]]) size {Number} fill {Value} Default: undefined encoding {String} Default: utf8 Allocates a new Buffer of size bytes. If fill is undefined , the Buffer will be zero-filled . const buf = Buffer . alloc ( 5 ); console . log ( buf ); // <Buffer 00 00 00 00 00> The size must be less than or equal to the value of require('buffer').kMaxLength (on 64-bit architectures, kMaxLength is (2^31)-1 ). Otherwise, a [ RangeError ][] is thrown. A zero-length Buffer will be created if a size less than or equal to 0 is specified. If fill is specified, the allocated Buffer will be initialized by calling buf.fill(fill) . See [ buf.fill() ][] for more information. const buf = Buffer . alloc ( 5 , 'a' ); console . log ( buf ); // <Buffer 61 61 61 61 61> If both fill and encoding are specified, the allocated Buffer will be initialized by calling buf.fill(fill, encoding) . For example: const buf = Buffer . alloc ( 11 , 'aGVsbG8gd29ybGQ=' , 'base64' ); console . log ( buf ); // <Buffer 68 65 6c 6c 6f 20 77 6f 72 6c 64> Calling Buffer.alloc(size) can be significantly slower than the alternative Buffer.allocUnsafe(size) but ensures that the newly created Buffer instance contents will never contain sensitive data . A TypeError will be thrown if size is not a number. Class Method: Buffer.allocUnsafe(size) size {Number} Allocates a new non-zero-filled Buffer of size bytes. The size must be less than or equal to the value of require('buffer').kMaxLength (on 64-bit architectures, kMaxLength is (2^31)-1 ). Otherwise, a [ RangeError ][] is thrown. A zero-length Buffer will be created if a size less than or equal to 0 is specified. The underlying memory for Buffer instances created in this way is not initialized . The contents of the newly created Buffer are unknown and may contain sensitive data . Use [ buf.fill(0) ][] to initialize such Buffer instances to zeroes. const buf = Buffer . allocUnsafe ( 5 ); console . log ( buf ); // <Buffer 78 e0 82 02 01> // (octets will be different, every time) buf . fill ( 0 ); console . log ( buf ); // <Buffer 00 00 00 00 00> A TypeError will be thrown if size is not a number. Note that the Buffer module pre-allocates an internal Buffer instance of size Buffer.poolSize that is used as a pool for the fast allocation of new Buffer instances created using Buffer.allocUnsafe(size) (and the deprecated new Buffer(size) constructor) only when size is less than or equal to Buffer.poolSize >> 1 (floor of Buffer.poolSize divided by two). The default value of Buffer.poolSize is 8192 but can be modified. Use of this pre-allocated internal memory pool is a key difference between calling Buffer.alloc(size, fill) vs. Buffer.allocUnsafe(size).fill(fill) . Specifically, Buffer.alloc(size, fill) will never use the internal Buffer pool, while Buffer.allocUnsafe(size).fill(fill) will use the internal Buffer pool if size is less than or equal to half Buffer.poolSize . The difference is subtle but can be important when an application requires the additional performance that Buffer.allocUnsafe(size) provides. Class Method: Buffer.allocUnsafeSlow(size) size {Number} Allocates a new non-zero-filled and non-pooled Buffer of size bytes. The size must be less than or equal to the value of require('buffer').kMaxLength (on 64-bit architectures, kMaxLength is (2^31)-1 ). Otherwise, a [ RangeError ][] is thrown. A zero-length Buffer will be created if a size less than or equal to 0 is specified. The underlying memory for Buffer instances created in this way is not initialized . The contents of the newly created Buffer are unknown and may contain sensitive data . Use [ buf.fill(0) ][] to initialize such Buffer instances to zeroes. When using Buffer.allocUnsafe() to allocate new Buffer instances, allocations under 4KB are, by default, sliced from a single pre-allocated Buffer . This allows applications to avoid the garbage collection overhead of creating many individually allocated Buffers. This approach improves both performance and memory usage by eliminating the need to track and cleanup as many Persistent objects. However, in the case where a developer may need to retain a small chunk of memory from a pool for an indeterminate amount of time, it may be appropriate to create an un-pooled Buffer instance using Buffer.allocUnsafeSlow() then copy out the relevant bits. // need to keep around a few small chunks of memory const store = []; socket . on ( 'readable' , () => { const data = socket . read (); // allocate for retained data const sb = Buffer . allocUnsafeSlow ( 10 ); // copy the data into the new allocation data . copy ( sb , 0 , 0 , 10 ); store . push ( sb ); }); Use of Buffer.allocUnsafeSlow() should be used only as a last resort after a developer has observed undue memory retention in their applications. A TypeError will be thrown if size is not a number. All the Rest The rest of the Buffer API is exactly the same as in node.js. See the docs . Related links Node.js issue: Buffer(number) is unsafe Node.js Enhancement Proposal: Buffer.from/Buffer.alloc/Buffer.zalloc/Buffer() soft-deprecate Why is Buffer unsafe? Today, the node.js Buffer constructor is overloaded to handle many different argument types like String , Array , Object , TypedArrayView ( Uint8Array , etc.), ArrayBuffer , and also Number . The API is optimized for convenience: you can throw any type at it, and it will try to do what you want. Because the Buffer constructor is so powerful, you often see code like this: // Convert UTF-8 strings to hex function toHex ( str ) { return new Buffer ( str ). toString ( 'hex' ) } But what happens if toHex is called with a Number argument? Remote Memory Disclosure If an attacker can make your program call the Buffer constructor with a Number argument, then they can make it allocate uninitialized memory from the node.js process. This could potentially disclose TLS private keys, user data, or database passwords. When the Buffer constructor is passed a Number argument, it returns an UNINITIALIZED block of memory of the specified size . When you create a Buffer like this, you MUST overwrite the contents before returning it to the user. From the node.js docs : new Buffer(size) size Number The underlying memory for Buffer instances created in this way is not initialized. The contents of a newly created Buffer are unknown and could contain sensitive data. Use buf.fill(0) to initialize a Buffer to zeroes. (Emphasis our own.) Whenever the programmer intended to create an uninitialized Buffer you often see code like this: var buf = new Buffer ( 16 ) // Immediately overwrite the uninitialized buffer with data from another buffer for ( var i = 0 ; i < buf . length ; i ++ ) { buf [ i ] = otherBuf [ i ] } Would this ever be a problem in real code? Yes. It's surprisingly common to forget to check the type of your variables in a dynamically-typed language like JavaScript. Usually the consequences of assuming the wrong type is that your program crashes with an uncaught exception. But the failure mode for forgetting to check the type of arguments to the Buffer constructor is more catastrophic. Here's an example of a vulnerable service that takes a JSON payload and converts it to hex: // Take a JSON payload {str: \"some string\"} and convert it to hex var server = http . createServer ( function ( req , res ) { var data = '' req . setEncoding ( 'utf8' ) req . on ( 'data' , function ( chunk ) { data += chunk }) req . on ( 'end' , function () { var body = JSON . parse ( data ) res . end ( new Buffer ( body . str ). toString ( 'hex' )) }) }) server . listen ( 8080 ) In this example, an http client just has to send: { \"str\" : 1000 } and it will get back 1,000 bytes of uninitialized memory from the server. This is a very serious bug. It's similar in severity to the the Heartbleed bug that allowed disclosure of OpenSSL process memory by remote attackers. Which real-world packages were vulnerable? bittorrent-dht Mathias Buus and I ( Feross Aboukhadijeh ) found this issue in one of our own packages, bittorrent-dht . The bug would allow anyone on the internet to send a series of messages to a user of bittorrent-dht and get them to reveal 20 bytes at a time of uninitialized memory from the node.js process. Here's the commit that fixed it. We released a new fixed version, created a Node Security Project disclosure , and deprecated all vulnerable versions on npm so users will get a warning to upgrade to a newer version. ws That got us wondering if there were other vulnerable packages. Sure enough, within a short period of time, we found the same issue in ws , the most popular WebSocket implementation in node.js. If certain APIs were called with Number parameters instead of String or Buffer as expected, then uninitialized server memory would be disclosed to the remote peer. These were the vulnerable methods: socket . send ( number ) socket . ping ( number ) socket . pong ( number ) Here's a vulnerable socket server with some echo functionality: server . on ( 'connection' , function ( socket ) { socket . on ( 'message' , function ( message ) { message = JSON . parse ( message ) if ( message . type === 'echo' ) { socket . send ( message . data ) // send back the user's message } }) }) socket.send(number) called on the server, will disclose server memory. Here's the release where the issue was fixed, with a more detailed explanation. Props to Arnout Kazemier for the quick fix. Here's the Node Security Project disclosure . What's the solution? It's important that node.js offers a fast way to get memory otherwise performance-critical applications would needlessly get a lot slower. But we need a better way to signal our intent as programmers. When we want uninitialized memory, we should request it explicitly. Sensitive functionality should not be packed into a developer-friendly API that loosely accepts many different types. This type of API encourages the lazy practice of passing variables in without checking the type very carefully. A new API: Buffer.allocUnsafe(number) The functionality of creating buffers with uninitialized memory should be part of another API. We propose Buffer.allocUnsafe(number) . This way, it's not part of an API that frequently gets user input of all sorts of different types passed into it. var buf = Buffer . allocUnsafe ( 16 ) // careful, uninitialized memory! // Immediately overwrite the uninitialized buffer with data from another buffer for ( var i = 0 ; i < buf . length ; i ++ ) { buf [ i ] = otherBuf [ i ] } How do we fix node.js core? We sent a PR to node.js core (merged as semver-major ) which defends against one case: var str = 16 new Buffer ( str , 'utf8' ) In this situation, it's implied that the programmer intended the first argument to be a string, since they passed an encoding as a second argument. Today, node.js will allocate uninitialized memory in the case of new Buffer(number, encoding) , which is probably not what the programmer intended. But this is only a partial solution, since if the programmer does new Buffer(variable) (without an encoding parameter) there's no way to know what they intended. If variable is sometimes a number, then uninitialized memory will sometimes be returned. What's the real long-term fix? We could deprecate and remove new Buffer(number) and use Buffer.allocUnsafe(number) when we need uninitialized memory. But that would break 1000s of packages. ~~We believe the best solution is to:~~ ~~1. Change new Buffer(number) to return safe, zeroed-out memory~~ ~~2. Create a new API for creating uninitialized Buffers. We propose: Buffer.allocUnsafe(number) ~~ Update We now support adding three new APIs: Buffer.from(value) - convert from any type to a buffer Buffer.alloc(size) - create a zero-filled buffer Buffer.allocUnsafe(size) - create an uninitialized buffer with given size This solves the core problem that affected ws and bittorrent-dht which is Buffer(variable) getting tricked into taking a number argument. This way, existing code continues working and the impact on the npm ecosystem will be minimal. Over time, npm maintainers can migrate performance-critical code to use Buffer.allocUnsafe(number) instead of new Buffer(number) . Conclusion We think there's a serious design issue with the Buffer API as it exists today. It promotes insecure software by putting high-risk functionality into a convenient API with friendly \"developer ergonomics\". This wasn't merely a theoretical exercise because we found the issue in some of the most popular npm packages. Fortunately, there's an easy fix that can be applied today. Use safe-buffer in place of buffer . var Buffer = require ( 'safe-buffer' ). Buffer Eventually, we hope that node.js core can switch to this new, safer behavior. We believe the impact on the ecosystem would be minimal since it's not a breaking change. Well-maintained, popular packages would be updated to use Buffer.alloc quickly, while older, insecure packages would magically become safe from this attack vector. links Node.js PR: buffer: throw if both length and enc are passed Node Security Project disclosure for ws Node Security Project disclosure for bittorrent-dht credit The original issues in bittorrent-dht ( disclosure ) and ws ( disclosure ) were discovered by Mathias Buus and Feross Aboukhadijeh . Thanks to Adam Baldwin for helping disclose these issues and for his work running the Node Security Project . Thanks to John Hiesey for proofreading this README and auditing the code. license MIT. Copyright (C) Feross Aboukhadijeh","title":"safe-buffer travis npm downloads javascript style guide"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#safe-buffer","text":"","title":"safe-buffer"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#safer-nodejs-buffer-api","text":"Use the new Node.js Buffer APIs ( Buffer.from , Buffer.alloc , Buffer.allocUnsafe , Buffer.allocUnsafeSlow ) in all versions of Node.js. Uses the built-in implementation when available.","title":"Safer Node.js Buffer API"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#install","text":"npm install safe-buffer","title":"install"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#usage","text":"The goal of this package is to provide a safe replacement for the node.js Buffer . It's a drop-in replacement for Buffer . You can use it by adding one require line to the top of your node.js modules: var Buffer = require ( 'safe-buffer' ). Buffer // Existing buffer code will continue to work without issues: new Buffer ( 'hey' , 'utf8' ) new Buffer ([ 1 , 2 , 3 ], 'utf8' ) new Buffer ( obj ) new Buffer ( 16 ) // create an uninitialized buffer (potentially unsafe) // But you can use these new explicit APIs to make clear what you want: Buffer . from ( 'hey' , 'utf8' ) // convert from many types to a Buffer Buffer . alloc ( 16 ) // create a zero-filled buffer (safe) Buffer . allocUnsafe ( 16 ) // create an uninitialized buffer (potentially unsafe)","title":"usage"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#api","text":"","title":"api"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#class-method-bufferfromarray","text":"array {Array} Allocates a new Buffer using an array of octets. const buf = Buffer . from ([ 0x62 , 0x75 , 0x66 , 0x66 , 0x65 , 0x72 ]); // creates a new Buffer containing ASCII bytes // ['b','u','f','f','e','r'] A TypeError will be thrown if array is not an Array .","title":"Class Method: Buffer.from(array)"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#class-method-bufferfromarraybuffer-byteoffset-length","text":"arrayBuffer {ArrayBuffer} The .buffer property of a TypedArray or a new ArrayBuffer() byteOffset {Number} Default: 0 length {Number} Default: arrayBuffer.length - byteOffset When passed a reference to the .buffer property of a TypedArray instance, the newly created Buffer will share the same allocated memory as the TypedArray. const arr = new Uint16Array ( 2 ); arr [ 0 ] = 5000 ; arr [ 1 ] = 4000 ; const buf = Buffer . from ( arr . buffer ); // shares the memory with arr; console . log ( buf ); // Prints: <Buffer 88 13 a0 0f> // changing the TypedArray changes the Buffer also arr [ 1 ] = 6000 ; console . log ( buf ); // Prints: <Buffer 88 13 70 17> The optional byteOffset and length arguments specify a memory range within the arrayBuffer that will be shared by the Buffer . const ab = new ArrayBuffer ( 10 ); const buf = Buffer . from ( ab , 0 , 2 ); console . log ( buf . length ); // Prints: 2 A TypeError will be thrown if arrayBuffer is not an ArrayBuffer .","title":"Class Method: Buffer.from(arrayBuffer[, byteOffset[, length]])"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#class-method-bufferfrombuffer","text":"buffer {Buffer} Copies the passed buffer data onto a new Buffer instance. const buf1 = Buffer . from ( 'buffer' ); const buf2 = Buffer . from ( buf1 ); buf1 [ 0 ] = 0x61 ; console . log ( buf1 . toString ()); // 'auffer' console . log ( buf2 . toString ()); // 'buffer' (copy is not changed) A TypeError will be thrown if buffer is not a Buffer .","title":"Class Method: Buffer.from(buffer)"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#class-method-bufferfromstr-encoding","text":"str {String} String to encode. encoding {String} Encoding to use, Default: 'utf8' Creates a new Buffer containing the given JavaScript string str . If provided, the encoding parameter identifies the character encoding. If not provided, encoding defaults to 'utf8' . const buf1 = Buffer . from ( 'this is a t\u00e9st' ); console . log ( buf1 . toString ()); // prints: this is a t\u00e9st console . log ( buf1 . toString ( 'ascii' )); // prints: this is a tC)st const buf2 = Buffer . from ( '7468697320697320612074c3a97374' , 'hex' ); console . log ( buf2 . toString ()); // prints: this is a t\u00e9st A TypeError will be thrown if str is not a string.","title":"Class Method: Buffer.from(str[, encoding])"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#class-method-bufferallocsize-fill-encoding","text":"size {Number} fill {Value} Default: undefined encoding {String} Default: utf8 Allocates a new Buffer of size bytes. If fill is undefined , the Buffer will be zero-filled . const buf = Buffer . alloc ( 5 ); console . log ( buf ); // <Buffer 00 00 00 00 00> The size must be less than or equal to the value of require('buffer').kMaxLength (on 64-bit architectures, kMaxLength is (2^31)-1 ). Otherwise, a [ RangeError ][] is thrown. A zero-length Buffer will be created if a size less than or equal to 0 is specified. If fill is specified, the allocated Buffer will be initialized by calling buf.fill(fill) . See [ buf.fill() ][] for more information. const buf = Buffer . alloc ( 5 , 'a' ); console . log ( buf ); // <Buffer 61 61 61 61 61> If both fill and encoding are specified, the allocated Buffer will be initialized by calling buf.fill(fill, encoding) . For example: const buf = Buffer . alloc ( 11 , 'aGVsbG8gd29ybGQ=' , 'base64' ); console . log ( buf ); // <Buffer 68 65 6c 6c 6f 20 77 6f 72 6c 64> Calling Buffer.alloc(size) can be significantly slower than the alternative Buffer.allocUnsafe(size) but ensures that the newly created Buffer instance contents will never contain sensitive data . A TypeError will be thrown if size is not a number.","title":"Class Method: Buffer.alloc(size[, fill[, encoding]])"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#class-method-bufferallocunsafesize","text":"size {Number} Allocates a new non-zero-filled Buffer of size bytes. The size must be less than or equal to the value of require('buffer').kMaxLength (on 64-bit architectures, kMaxLength is (2^31)-1 ). Otherwise, a [ RangeError ][] is thrown. A zero-length Buffer will be created if a size less than or equal to 0 is specified. The underlying memory for Buffer instances created in this way is not initialized . The contents of the newly created Buffer are unknown and may contain sensitive data . Use [ buf.fill(0) ][] to initialize such Buffer instances to zeroes. const buf = Buffer . allocUnsafe ( 5 ); console . log ( buf ); // <Buffer 78 e0 82 02 01> // (octets will be different, every time) buf . fill ( 0 ); console . log ( buf ); // <Buffer 00 00 00 00 00> A TypeError will be thrown if size is not a number. Note that the Buffer module pre-allocates an internal Buffer instance of size Buffer.poolSize that is used as a pool for the fast allocation of new Buffer instances created using Buffer.allocUnsafe(size) (and the deprecated new Buffer(size) constructor) only when size is less than or equal to Buffer.poolSize >> 1 (floor of Buffer.poolSize divided by two). The default value of Buffer.poolSize is 8192 but can be modified. Use of this pre-allocated internal memory pool is a key difference between calling Buffer.alloc(size, fill) vs. Buffer.allocUnsafe(size).fill(fill) . Specifically, Buffer.alloc(size, fill) will never use the internal Buffer pool, while Buffer.allocUnsafe(size).fill(fill) will use the internal Buffer pool if size is less than or equal to half Buffer.poolSize . The difference is subtle but can be important when an application requires the additional performance that Buffer.allocUnsafe(size) provides.","title":"Class Method: Buffer.allocUnsafe(size)"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#class-method-bufferallocunsafeslowsize","text":"size {Number} Allocates a new non-zero-filled and non-pooled Buffer of size bytes. The size must be less than or equal to the value of require('buffer').kMaxLength (on 64-bit architectures, kMaxLength is (2^31)-1 ). Otherwise, a [ RangeError ][] is thrown. A zero-length Buffer will be created if a size less than or equal to 0 is specified. The underlying memory for Buffer instances created in this way is not initialized . The contents of the newly created Buffer are unknown and may contain sensitive data . Use [ buf.fill(0) ][] to initialize such Buffer instances to zeroes. When using Buffer.allocUnsafe() to allocate new Buffer instances, allocations under 4KB are, by default, sliced from a single pre-allocated Buffer . This allows applications to avoid the garbage collection overhead of creating many individually allocated Buffers. This approach improves both performance and memory usage by eliminating the need to track and cleanup as many Persistent objects. However, in the case where a developer may need to retain a small chunk of memory from a pool for an indeterminate amount of time, it may be appropriate to create an un-pooled Buffer instance using Buffer.allocUnsafeSlow() then copy out the relevant bits. // need to keep around a few small chunks of memory const store = []; socket . on ( 'readable' , () => { const data = socket . read (); // allocate for retained data const sb = Buffer . allocUnsafeSlow ( 10 ); // copy the data into the new allocation data . copy ( sb , 0 , 0 , 10 ); store . push ( sb ); }); Use of Buffer.allocUnsafeSlow() should be used only as a last resort after a developer has observed undue memory retention in their applications. A TypeError will be thrown if size is not a number.","title":"Class Method: Buffer.allocUnsafeSlow(size)"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#all-the-rest","text":"The rest of the Buffer API is exactly the same as in node.js. See the docs .","title":"All the Rest"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#related-links","text":"Node.js issue: Buffer(number) is unsafe Node.js Enhancement Proposal: Buffer.from/Buffer.alloc/Buffer.zalloc/Buffer() soft-deprecate","title":"Related links"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#why-is-buffer-unsafe","text":"Today, the node.js Buffer constructor is overloaded to handle many different argument types like String , Array , Object , TypedArrayView ( Uint8Array , etc.), ArrayBuffer , and also Number . The API is optimized for convenience: you can throw any type at it, and it will try to do what you want. Because the Buffer constructor is so powerful, you often see code like this: // Convert UTF-8 strings to hex function toHex ( str ) { return new Buffer ( str ). toString ( 'hex' ) } But what happens if toHex is called with a Number argument?","title":"Why is Buffer unsafe?"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#remote-memory-disclosure","text":"If an attacker can make your program call the Buffer constructor with a Number argument, then they can make it allocate uninitialized memory from the node.js process. This could potentially disclose TLS private keys, user data, or database passwords. When the Buffer constructor is passed a Number argument, it returns an UNINITIALIZED block of memory of the specified size . When you create a Buffer like this, you MUST overwrite the contents before returning it to the user. From the node.js docs : new Buffer(size) size Number The underlying memory for Buffer instances created in this way is not initialized. The contents of a newly created Buffer are unknown and could contain sensitive data. Use buf.fill(0) to initialize a Buffer to zeroes. (Emphasis our own.) Whenever the programmer intended to create an uninitialized Buffer you often see code like this: var buf = new Buffer ( 16 ) // Immediately overwrite the uninitialized buffer with data from another buffer for ( var i = 0 ; i < buf . length ; i ++ ) { buf [ i ] = otherBuf [ i ] }","title":"Remote Memory Disclosure"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#would-this-ever-be-a-problem-in-real-code","text":"Yes. It's surprisingly common to forget to check the type of your variables in a dynamically-typed language like JavaScript. Usually the consequences of assuming the wrong type is that your program crashes with an uncaught exception. But the failure mode for forgetting to check the type of arguments to the Buffer constructor is more catastrophic. Here's an example of a vulnerable service that takes a JSON payload and converts it to hex: // Take a JSON payload {str: \"some string\"} and convert it to hex var server = http . createServer ( function ( req , res ) { var data = '' req . setEncoding ( 'utf8' ) req . on ( 'data' , function ( chunk ) { data += chunk }) req . on ( 'end' , function () { var body = JSON . parse ( data ) res . end ( new Buffer ( body . str ). toString ( 'hex' )) }) }) server . listen ( 8080 ) In this example, an http client just has to send: { \"str\" : 1000 } and it will get back 1,000 bytes of uninitialized memory from the server. This is a very serious bug. It's similar in severity to the the Heartbleed bug that allowed disclosure of OpenSSL process memory by remote attackers.","title":"Would this ever be a problem in real code?"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#which-real-world-packages-were-vulnerable","text":"","title":"Which real-world packages were vulnerable?"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#bittorrent-dht","text":"Mathias Buus and I ( Feross Aboukhadijeh ) found this issue in one of our own packages, bittorrent-dht . The bug would allow anyone on the internet to send a series of messages to a user of bittorrent-dht and get them to reveal 20 bytes at a time of uninitialized memory from the node.js process. Here's the commit that fixed it. We released a new fixed version, created a Node Security Project disclosure , and deprecated all vulnerable versions on npm so users will get a warning to upgrade to a newer version.","title":"bittorrent-dht"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#ws","text":"That got us wondering if there were other vulnerable packages. Sure enough, within a short period of time, we found the same issue in ws , the most popular WebSocket implementation in node.js. If certain APIs were called with Number parameters instead of String or Buffer as expected, then uninitialized server memory would be disclosed to the remote peer. These were the vulnerable methods: socket . send ( number ) socket . ping ( number ) socket . pong ( number ) Here's a vulnerable socket server with some echo functionality: server . on ( 'connection' , function ( socket ) { socket . on ( 'message' , function ( message ) { message = JSON . parse ( message ) if ( message . type === 'echo' ) { socket . send ( message . data ) // send back the user's message } }) }) socket.send(number) called on the server, will disclose server memory. Here's the release where the issue was fixed, with a more detailed explanation. Props to Arnout Kazemier for the quick fix. Here's the Node Security Project disclosure .","title":"ws"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#whats-the-solution","text":"It's important that node.js offers a fast way to get memory otherwise performance-critical applications would needlessly get a lot slower. But we need a better way to signal our intent as programmers. When we want uninitialized memory, we should request it explicitly. Sensitive functionality should not be packed into a developer-friendly API that loosely accepts many different types. This type of API encourages the lazy practice of passing variables in without checking the type very carefully.","title":"What's the solution?"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#a-new-api-bufferallocunsafenumber","text":"The functionality of creating buffers with uninitialized memory should be part of another API. We propose Buffer.allocUnsafe(number) . This way, it's not part of an API that frequently gets user input of all sorts of different types passed into it. var buf = Buffer . allocUnsafe ( 16 ) // careful, uninitialized memory! // Immediately overwrite the uninitialized buffer with data from another buffer for ( var i = 0 ; i < buf . length ; i ++ ) { buf [ i ] = otherBuf [ i ] }","title":"A new API: Buffer.allocUnsafe(number)"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#how-do-we-fix-nodejs-core","text":"We sent a PR to node.js core (merged as semver-major ) which defends against one case: var str = 16 new Buffer ( str , 'utf8' ) In this situation, it's implied that the programmer intended the first argument to be a string, since they passed an encoding as a second argument. Today, node.js will allocate uninitialized memory in the case of new Buffer(number, encoding) , which is probably not what the programmer intended. But this is only a partial solution, since if the programmer does new Buffer(variable) (without an encoding parameter) there's no way to know what they intended. If variable is sometimes a number, then uninitialized memory will sometimes be returned.","title":"How do we fix node.js core?"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#whats-the-real-long-term-fix","text":"We could deprecate and remove new Buffer(number) and use Buffer.allocUnsafe(number) when we need uninitialized memory. But that would break 1000s of packages. ~~We believe the best solution is to:~~ ~~1. Change new Buffer(number) to return safe, zeroed-out memory~~ ~~2. Create a new API for creating uninitialized Buffers. We propose: Buffer.allocUnsafe(number) ~~","title":"What's the real long-term fix?"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#update","text":"We now support adding three new APIs: Buffer.from(value) - convert from any type to a buffer Buffer.alloc(size) - create a zero-filled buffer Buffer.allocUnsafe(size) - create an uninitialized buffer with given size This solves the core problem that affected ws and bittorrent-dht which is Buffer(variable) getting tricked into taking a number argument. This way, existing code continues working and the impact on the npm ecosystem will be minimal. Over time, npm maintainers can migrate performance-critical code to use Buffer.allocUnsafe(number) instead of new Buffer(number) .","title":"Update"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#conclusion","text":"We think there's a serious design issue with the Buffer API as it exists today. It promotes insecure software by putting high-risk functionality into a convenient API with friendly \"developer ergonomics\". This wasn't merely a theoretical exercise because we found the issue in some of the most popular npm packages. Fortunately, there's an easy fix that can be applied today. Use safe-buffer in place of buffer . var Buffer = require ( 'safe-buffer' ). Buffer Eventually, we hope that node.js core can switch to this new, safer behavior. We believe the impact on the ecosystem would be minimal since it's not a breaking change. Well-maintained, popular packages would be updated to use Buffer.alloc quickly, while older, insecure packages would magically become safe from this attack vector.","title":"Conclusion"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#links","text":"Node.js PR: buffer: throw if both length and enc are passed Node Security Project disclosure for ws Node Security Project disclosure for bittorrent-dht","title":"links"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#credit","text":"The original issues in bittorrent-dht ( disclosure ) and ws ( disclosure ) were discovered by Mathias Buus and Feross Aboukhadijeh . Thanks to Adam Baldwin for helping disclose these issues and for his work running the Node Security Project . Thanks to John Hiesey for proofreading this README and auditing the code.","title":"credit"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#license","text":"MIT. Copyright (C) Feross Aboukhadijeh","title":"license"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/","text":"Porting to the Buffer.from/Buffer.alloc API Overview Variant 1: Drop support for Node.js \u2264 4.4.x and 5.0.0 \u2014 5.9.x. ( recommended ) Variant 2: Use a polyfill Variant 3: manual detection, with safeguards Finding problematic bits of code using grep Just run grep -nrE '[^a-zA-Z](Slow)?Buffer\\s*\\(' --exclude-dir node_modules . It will find all the potentially unsafe places in your own code (with some considerably unlikely exceptions). Finding problematic bits of code using Node.js 8 If you\u2019re using Node.js \u2265 8.0.0 (which is recommended), Node.js exposes multiple options that help with finding the relevant pieces of code: --trace-warnings will make Node.js show a stack trace for this warning and other warnings that are printed by Node.js. --trace-deprecation does the same thing, but only for deprecation warnings. --pending-deprecation will show more types of deprecation warnings. In particular, it will show the Buffer() deprecation warning, even on Node.js 8. You can set these flags using an environment variable: $ export NODE_OPTIONS = '--trace-warnings --pending-deprecation' $ cat example.js 'use strict'; const foo = new Buffer('foo'); $ node example.js (node:7147) [DEP0005] DeprecationWarning: The Buffer() and new Buffer() constructors are not recommended for use due to security and usability concerns. Please use the new Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() construction methods instead. at showFlaggedDeprecation (buffer.js:127:13) at new Buffer (buffer.js:148:3) at Object.<anonymous> (/path/to/example.js:2:13) [... more stack trace lines ...] Finding problematic bits of code using linters Eslint rules no-buffer-constructor or node/no-deprecated-api also find calls to deprecated Buffer() API. Those rules are included in some pre-sets. There is a drawback, though, that it doesn't always work correctly when Buffer is overriden e.g. with a polyfill, so recommended is a combination of this and some other method described above. Variant 1: Drop support for Node.js \u2264 4.4.x and 5.0.0 \u2014 5.9.x. This is the recommended solution nowadays that would imply only minimal overhead. The Node.js 5.x release line has been unsupported since July 2016, and the Node.js 4.x release line reaches its End of Life in April 2018 (\u2192 Schedule ). This means that these versions of Node.js will not receive any updates, even in case of security issues, so using these release lines should be avoided, if at all possible. What you would do in this case is to convert all new Buffer() or Buffer() calls to use Buffer.alloc() or Buffer.from() , in the following way: For new Buffer(number) , replace it with Buffer.alloc(number) . For new Buffer(string) (or new Buffer(string, encoding) ), replace it with Buffer.from(string) (or Buffer.from(string, encoding) ). For all other combinations of arguments (these are much rarer), also replace new Buffer(...arguments) with Buffer.from(...arguments) . Note that Buffer.alloc() is also faster on the current Node.js versions than new Buffer(size).fill(0) , which is what you would otherwise need to ensure zero-filling. Enabling eslint rule no-buffer-constructor or node/no-deprecated-api is recommended to avoid accidential unsafe Buffer API usage. There is also a JSCodeshift codemod for automatically migrating Buffer constructors to Buffer.alloc() or Buffer.from() . Note that it currently only works with cases where the arguments are literals or where the constructor is invoked with two arguments. If you currently support those older Node.js versions and dropping them would be a semver-major change for you, or if you support older branches of your packages, consider using Variant 2 or Variant 3 on older branches, so people using those older branches will also receive the fix. That way, you will eradicate potential issues caused by unguarded Buffer API usage and your users will not observe a runtime deprecation warning when running your code on Node.js 10. Variant 2: Use a polyfill Utilize safer-buffer as a polyfill to support older Node.js versions. You would take exacly the same steps as in Variant 1 , but with a polyfill const Buffer = require('safer-buffer').Buffer in all files where you use the new Buffer api. Make sure that you do not use old new Buffer API \u2014 in any files where the line above is added, using old new Buffer() API will throw . It will be easy to notice that in CI, though. Alternatively, you could use buffer-from and/or buffer-alloc ponyfills \u2014 those are great, the only downsides being 4 deps in the tree and slightly more code changes to migrate off them (as you would be using e.g. Buffer.from under a different name). If you need only Buffer.from polyfilled \u2014 buffer-from alone which comes with no extra dependencies. Alternatively, you could use safe-buffer \u2014 it also provides a polyfill, but takes a different approach which has it's drawbacks . It will allow you to also use the older new Buffer() API in your code, though \u2014 but that's arguably a benefit, as it is problematic, can cause issues in your code, and will start emitting runtime deprecation warnings starting with Node.js 10. Note that in either case, it is important that you also remove all calls to the old Buffer API manually \u2014 just throwing in safe-buffer doesn't fix the problem by itself, it just provides a polyfill for the new API. I have seen people doing that mistake. Enabling eslint rule no-buffer-constructor or node/no-deprecated-api is recommended. Don't forget to drop the polyfill usage once you drop support for Node.js < 4.5.0. Variant 3 \u2014 manual detection, with safeguards This is useful if you create Buffer instances in only a few places (e.g. one), or you have your own wrapper around them. Buffer(0) This special case for creating empty buffers can be safely replaced with Buffer.concat([]) , which returns the same result all the way down to Node.js 0.8.x. Buffer(notNumber) Before: var buf = new Buffer ( notNumber , encoding ); After: var buf ; if ( Buffer . from && Buffer . from !== Uint8Array . from ) { buf = Buffer . from ( notNumber , encoding ); } else { if ( typeof notNumber === 'number' ) throw new Error ( 'The \"size\" argument must be of type number.' ); buf = new Buffer ( notNumber , encoding ); } encoding is optional. Note that the typeof notNumber before new Buffer is required (for cases when notNumber argument is not hard-coded) and is not caused by the deprecation of Buffer constructor \u2014 it's exactly why the Buffer constructor is deprecated. Ecosystem packages lacking this type-check caused numereous security issues \u2014 situations when unsanitized user input could end up in the Buffer(arg) create problems ranging from DoS to leaking sensitive information to the attacker from the process memory. When notNumber argument is hardcoded (e.g. literal \"abc\" or [0,1,2] ), the typeof check can be omitted. Also note that using TypeScript does not fix this problem for you \u2014 when libs written in TypeScript are used from JS, or when user input ends up there \u2014 it behaves exactly as pure JS, as all type checks are translation-time only and are not present in the actual JS code which TS compiles to. Buffer(number) For Node.js 0.10.x (and below) support: var buf ; if ( Buffer . alloc ) { buf = Buffer . alloc ( number ); } else { buf = new Buffer ( number ); buf . fill ( 0 ); } Otherwise (Node.js \u2265 0.12.x): const buf = Buffer . alloc ? Buffer . alloc ( number ) : new Buffer ( number ). fill ( 0 ); Regarding Buffer.allocUnsafe Be extra cautious when using Buffer.allocUnsafe : * Don't use it if you don't have a good reason to * e.g. you probably won't ever see a performance difference for small buffers, in fact, those might be even faster with Buffer.alloc() , * if your code is not in the hot code path \u2014 you also probably won't notice a difference, * keep in mind that zero-filling minimizes the potential risks. * If you use it, make sure that you never return the buffer in a partially-filled state, * if you are writing to it sequentially \u2014 always truncate it to the actuall written length Errors in handling buffers allocated with Buffer.allocUnsafe could result in various issues, ranged from undefined behaviour of your code to sensitive data (user input, passwords, certs) leaking to the remote attacker. Note that the same applies to new Buffer usage without zero-filling, depending on the Node.js version (and lacking type checks also adds DoS to the list of potential problems). FAQ What is wrong with the Buffer constructor? The Buffer constructor could be used to create a buffer in many different ways: new Buffer(42) creates a Buffer of 42 bytes. Before Node.js 8, this buffer contained arbitrary memory for performance reasons, which could include anything ranging from program source code to passwords and encryption keys. new Buffer('abc') creates a Buffer that contains the UTF-8-encoded version of the string 'abc' . A second argument could specify another encoding: For example, new Buffer(string, 'base64') could be used to convert a Base64 string into the original sequence of bytes that it represents. There are several other combinations of arguments. This meant that, in code like var buffer = new Buffer(foo); , it is not possible to tell what exactly the contents of the generated buffer are without knowing the type of foo . Sometimes, the value of foo comes from an external source. For example, this function could be exposed as a service on a web server, converting a UTF-8 string into its Base64 form: function stringToBase64(req, res) { // The request body should have the format of `{ string: 'foobar' }` const rawBytes = new Buffer(req.body.string) const encoded = rawBytes.toString('base64') res.end({ encoded: encoded }) } Note that this code does not validate the type of req.body.string : req.body.string is expected to be a string. If this is the case, all goes well. req.body.string is controlled by the client that sends the request. If req.body.string is the number 50 , the rawBytes would be 50 bytes: Before Node.js 8, the content would be uninitialized After Node.js 8, the content would be 50 bytes with the value 0 Because of the missing type check, an attacker could intentionally send a number as part of the request. Using this, they can either: Read uninitialized memory. This will leak passwords, encryption keys and other kinds of sensitive information. (Information leak) Force the program to allocate a large amount of memory. For example, when specifying 500000000 as the input value, each request will allocate 500MB of memory. This can be used to either exhaust the memory available of a program completely and make it crash, or slow it down significantly. (Denial of Service) Both of these scenarios are considered serious security issues in a real-world web server context. when using Buffer.from(req.body.string) instead, passing a number will always throw an exception instead, giving a controlled behaviour that can always be handled by the program. The Buffer() constructor has been deprecated for a while. Is this really an issue? Surveys of code in the npm ecosystem have shown that the Buffer() constructor is still widely used. This includes new code, and overall usage of such code has actually been increasing .","title":"Porting to the Buffer.from/Buffer.alloc API"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/#porting-to-the-bufferfrombufferalloc-api","text":"","title":"Porting to the Buffer.from/Buffer.alloc API"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/#overview","text":"Variant 1: Drop support for Node.js \u2264 4.4.x and 5.0.0 \u2014 5.9.x. ( recommended ) Variant 2: Use a polyfill Variant 3: manual detection, with safeguards","title":"Overview"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/#finding-problematic-bits-of-code-using-grep","text":"Just run grep -nrE '[^a-zA-Z](Slow)?Buffer\\s*\\(' --exclude-dir node_modules . It will find all the potentially unsafe places in your own code (with some considerably unlikely exceptions).","title":"Finding problematic bits of code using grep"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/#finding-problematic-bits-of-code-using-nodejs-8","text":"If you\u2019re using Node.js \u2265 8.0.0 (which is recommended), Node.js exposes multiple options that help with finding the relevant pieces of code: --trace-warnings will make Node.js show a stack trace for this warning and other warnings that are printed by Node.js. --trace-deprecation does the same thing, but only for deprecation warnings. --pending-deprecation will show more types of deprecation warnings. In particular, it will show the Buffer() deprecation warning, even on Node.js 8. You can set these flags using an environment variable: $ export NODE_OPTIONS = '--trace-warnings --pending-deprecation' $ cat example.js 'use strict'; const foo = new Buffer('foo'); $ node example.js (node:7147) [DEP0005] DeprecationWarning: The Buffer() and new Buffer() constructors are not recommended for use due to security and usability concerns. Please use the new Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() construction methods instead. at showFlaggedDeprecation (buffer.js:127:13) at new Buffer (buffer.js:148:3) at Object.<anonymous> (/path/to/example.js:2:13) [... more stack trace lines ...]","title":"Finding problematic bits of code using Node.js 8"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/#finding-problematic-bits-of-code-using-linters","text":"Eslint rules no-buffer-constructor or node/no-deprecated-api also find calls to deprecated Buffer() API. Those rules are included in some pre-sets. There is a drawback, though, that it doesn't always work correctly when Buffer is overriden e.g. with a polyfill, so recommended is a combination of this and some other method described above.","title":"Finding problematic bits of code using linters"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/#variant-1-drop-support-for-nodejs-44x-and-500-59x","text":"This is the recommended solution nowadays that would imply only minimal overhead. The Node.js 5.x release line has been unsupported since July 2016, and the Node.js 4.x release line reaches its End of Life in April 2018 (\u2192 Schedule ). This means that these versions of Node.js will not receive any updates, even in case of security issues, so using these release lines should be avoided, if at all possible. What you would do in this case is to convert all new Buffer() or Buffer() calls to use Buffer.alloc() or Buffer.from() , in the following way: For new Buffer(number) , replace it with Buffer.alloc(number) . For new Buffer(string) (or new Buffer(string, encoding) ), replace it with Buffer.from(string) (or Buffer.from(string, encoding) ). For all other combinations of arguments (these are much rarer), also replace new Buffer(...arguments) with Buffer.from(...arguments) . Note that Buffer.alloc() is also faster on the current Node.js versions than new Buffer(size).fill(0) , which is what you would otherwise need to ensure zero-filling. Enabling eslint rule no-buffer-constructor or node/no-deprecated-api is recommended to avoid accidential unsafe Buffer API usage. There is also a JSCodeshift codemod for automatically migrating Buffer constructors to Buffer.alloc() or Buffer.from() . Note that it currently only works with cases where the arguments are literals or where the constructor is invoked with two arguments. If you currently support those older Node.js versions and dropping them would be a semver-major change for you, or if you support older branches of your packages, consider using Variant 2 or Variant 3 on older branches, so people using those older branches will also receive the fix. That way, you will eradicate potential issues caused by unguarded Buffer API usage and your users will not observe a runtime deprecation warning when running your code on Node.js 10.","title":"Variant 1: Drop support for Node.js \u2264 4.4.x and 5.0.0 \u2014 5.9.x."},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/#variant-2-use-a-polyfill","text":"Utilize safer-buffer as a polyfill to support older Node.js versions. You would take exacly the same steps as in Variant 1 , but with a polyfill const Buffer = require('safer-buffer').Buffer in all files where you use the new Buffer api. Make sure that you do not use old new Buffer API \u2014 in any files where the line above is added, using old new Buffer() API will throw . It will be easy to notice that in CI, though. Alternatively, you could use buffer-from and/or buffer-alloc ponyfills \u2014 those are great, the only downsides being 4 deps in the tree and slightly more code changes to migrate off them (as you would be using e.g. Buffer.from under a different name). If you need only Buffer.from polyfilled \u2014 buffer-from alone which comes with no extra dependencies. Alternatively, you could use safe-buffer \u2014 it also provides a polyfill, but takes a different approach which has it's drawbacks . It will allow you to also use the older new Buffer() API in your code, though \u2014 but that's arguably a benefit, as it is problematic, can cause issues in your code, and will start emitting runtime deprecation warnings starting with Node.js 10. Note that in either case, it is important that you also remove all calls to the old Buffer API manually \u2014 just throwing in safe-buffer doesn't fix the problem by itself, it just provides a polyfill for the new API. I have seen people doing that mistake. Enabling eslint rule no-buffer-constructor or node/no-deprecated-api is recommended. Don't forget to drop the polyfill usage once you drop support for Node.js < 4.5.0.","title":"Variant 2: Use a polyfill"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/#variant-3-manual-detection-with-safeguards","text":"This is useful if you create Buffer instances in only a few places (e.g. one), or you have your own wrapper around them.","title":"Variant 3 \u2014 manual detection, with safeguards"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/#buffer0","text":"This special case for creating empty buffers can be safely replaced with Buffer.concat([]) , which returns the same result all the way down to Node.js 0.8.x.","title":"Buffer(0)"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/#buffernotnumber","text":"Before: var buf = new Buffer ( notNumber , encoding ); After: var buf ; if ( Buffer . from && Buffer . from !== Uint8Array . from ) { buf = Buffer . from ( notNumber , encoding ); } else { if ( typeof notNumber === 'number' ) throw new Error ( 'The \"size\" argument must be of type number.' ); buf = new Buffer ( notNumber , encoding ); } encoding is optional. Note that the typeof notNumber before new Buffer is required (for cases when notNumber argument is not hard-coded) and is not caused by the deprecation of Buffer constructor \u2014 it's exactly why the Buffer constructor is deprecated. Ecosystem packages lacking this type-check caused numereous security issues \u2014 situations when unsanitized user input could end up in the Buffer(arg) create problems ranging from DoS to leaking sensitive information to the attacker from the process memory. When notNumber argument is hardcoded (e.g. literal \"abc\" or [0,1,2] ), the typeof check can be omitted. Also note that using TypeScript does not fix this problem for you \u2014 when libs written in TypeScript are used from JS, or when user input ends up there \u2014 it behaves exactly as pure JS, as all type checks are translation-time only and are not present in the actual JS code which TS compiles to.","title":"Buffer(notNumber)"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/#buffernumber","text":"For Node.js 0.10.x (and below) support: var buf ; if ( Buffer . alloc ) { buf = Buffer . alloc ( number ); } else { buf = new Buffer ( number ); buf . fill ( 0 ); } Otherwise (Node.js \u2265 0.12.x): const buf = Buffer . alloc ? Buffer . alloc ( number ) : new Buffer ( number ). fill ( 0 );","title":"Buffer(number)"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/#regarding-bufferallocunsafe","text":"Be extra cautious when using Buffer.allocUnsafe : * Don't use it if you don't have a good reason to * e.g. you probably won't ever see a performance difference for small buffers, in fact, those might be even faster with Buffer.alloc() , * if your code is not in the hot code path \u2014 you also probably won't notice a difference, * keep in mind that zero-filling minimizes the potential risks. * If you use it, make sure that you never return the buffer in a partially-filled state, * if you are writing to it sequentially \u2014 always truncate it to the actuall written length Errors in handling buffers allocated with Buffer.allocUnsafe could result in various issues, ranged from undefined behaviour of your code to sensitive data (user input, passwords, certs) leaking to the remote attacker. Note that the same applies to new Buffer usage without zero-filling, depending on the Node.js version (and lacking type checks also adds DoS to the list of potential problems).","title":"Regarding Buffer.allocUnsafe"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/#faq","text":"","title":"FAQ"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/#what-is-wrong-with-the-buffer-constructor","text":"The Buffer constructor could be used to create a buffer in many different ways: new Buffer(42) creates a Buffer of 42 bytes. Before Node.js 8, this buffer contained arbitrary memory for performance reasons, which could include anything ranging from program source code to passwords and encryption keys. new Buffer('abc') creates a Buffer that contains the UTF-8-encoded version of the string 'abc' . A second argument could specify another encoding: For example, new Buffer(string, 'base64') could be used to convert a Base64 string into the original sequence of bytes that it represents. There are several other combinations of arguments. This meant that, in code like var buffer = new Buffer(foo); , it is not possible to tell what exactly the contents of the generated buffer are without knowing the type of foo . Sometimes, the value of foo comes from an external source. For example, this function could be exposed as a service on a web server, converting a UTF-8 string into its Base64 form: function stringToBase64(req, res) { // The request body should have the format of `{ string: 'foobar' }` const rawBytes = new Buffer(req.body.string) const encoded = rawBytes.toString('base64') res.end({ encoded: encoded }) } Note that this code does not validate the type of req.body.string : req.body.string is expected to be a string. If this is the case, all goes well. req.body.string is controlled by the client that sends the request. If req.body.string is the number 50 , the rawBytes would be 50 bytes: Before Node.js 8, the content would be uninitialized After Node.js 8, the content would be 50 bytes with the value 0 Because of the missing type check, an attacker could intentionally send a number as part of the request. Using this, they can either: Read uninitialized memory. This will leak passwords, encryption keys and other kinds of sensitive information. (Information leak) Force the program to allocate a large amount of memory. For example, when specifying 500000000 as the input value, each request will allocate 500MB of memory. This can be used to either exhaust the memory available of a program completely and make it crash, or slow it down significantly. (Denial of Service) Both of these scenarios are considered serious security issues in a real-world web server context. when using Buffer.from(req.body.string) instead, passing a number will always throw an exception instead, giving a controlled behaviour that can always be handled by the program.","title":"What is wrong with the Buffer constructor?"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/#the-buffer-constructor-has-been-deprecated-for-a-while-is-this-really-an-issue","text":"Surveys of code in the npm ecosystem have shown that the Buffer() constructor is still widely used. This includes new code, and overall usage of such code has actually been increasing .","title":"The Buffer() constructor has been deprecated for a while. Is this really an issue?"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Readme/","text":"safer-buffer Modern Buffer API polyfill without footguns, working on Node.js from 0.8 to current. How to use? First, port all Buffer() and new Buffer() calls to Buffer.alloc() and Buffer.from() API. Then, to achieve compatibility with outdated Node.js versions ( <4.5.0 and 5.x <5.9.0 ), use const Buffer = require('safer-buffer').Buffer in all files where you make calls to the new Buffer API. Use var instead of const if you need that for your Node.js version range support. Also, see the porting Buffer guide. Do I need it? Hopefully, not \u2014 dropping support for outdated Node.js versions should be fine nowdays, and that is the recommended path forward. You do need to port to the Buffer.alloc() and Buffer.from() though. See the porting guide for a better description. Why not safe-buffer ? In short: while safe-buffer serves as a polyfill for the new API, it allows old API usage and itself contains footguns. safe-buffer could be used safely to get the new API while still keeping support for older Node.js versions (like this module), but while analyzing ecosystem usage of the old Buffer API I found out that safe-buffer is itself causing problems in some cases. For example, consider the following snippet: $ cat example.unsafe.js console.log(Buffer(20)) $ ./node-v6.13.0-linux-x64/bin/node example.unsafe.js <Buffer 0a 00 00 00 00 00 00 00 28 13 de 02 00 00 00 00 05 00 00 00> $ standard example.unsafe.js standard: Use JavaScript Standard Style (https://standardjs.com) /home/chalker/repo/safer-buffer/example.unsafe.js:2:13: 'Buffer()' was deprecated since v6. Use 'Buffer.alloc()' or 'Buffer.from()' (use 'https://www.npmjs.com/package/safe-buffer' for '<4.5.0') instead. This is allocates and writes to console an uninitialized chunk of memory. standard linter (among others) catch that and warn people to avoid using unsafe API. Let's now throw in safe-buffer ! $ cat example.safe-buffer.js const Buffer = require('safe-buffer').Buffer console.log(Buffer(20)) $ standard example.safe-buffer.js $ ./node-v6.13.0-linux-x64/bin/node example.safe-buffer.js <Buffer 08 00 00 00 00 00 00 00 28 58 01 82 fe 7f 00 00 00 00 00 00> See the problem? Adding in safe-buffer magically removes the lint warning , but the behavior remains identi\u0441al to what we had before, and when launched on Node.js 6.x LTS \u2014 this dumps out chunks of uninitialized memory. And this code will still emit runtime warnings on Node.js 10.x and above. That was done by design. I first considered changing safe-buffer , prohibiting old API usage or emitting warnings on it, but that significantly diverges from safe-buffer design. After some discussion, it was decided to move my approach into a separate package, and this is that separate package . This footgun is not imaginary \u2014 I observed top-downloaded packages doing that kind of thing, \u00abfixing\u00bb the lint warning by blindly including safe-buffer without any actual changes. Also in some cases, even if the API was migrated to use of safe Buffer API \u2014 a random pull request can bring unsafe Buffer API usage back to the codebase by adding new calls \u2014 and that could go unnoticed even if you have a linter prohibiting that (becase of the reason stated above), and even pass CI. I also observed that being done in popular packages. Some examples: * webdriverio (a module with 548 759 downloads/month), * websocket-stream (218 288 d/m, fix in maxogden/websocket-stream#142 ), * node-serialport (113 138 d/m, fix in node-serialport/node-serialport#1510 ), * karma (3 973 193 d/m, fix in karma-runner/karma#2947 ), * spdy-transport (5 970 727 d/m, fix in spdy-http2/spdy-transport#53 ). * And there are a lot more over the ecosystem. I filed a PR at mysticatea/eslint-plugin-node#110 to partially fix that (for cases when that lint rule is used), but it is a semver-major change for linter rules and presets, so it would take significant time for that to reach actual setups. It also hasn't been released yet (2018-03-20). Also, safer-buffer discourages the usage of .allocUnsafe() , which is often done by a mistake. It still supports it with an explicit concern barier, by placing it under require('safer-buffer/dangereous') . But isn't throwing bad? Not really. It's an error that could be noticed and fixed early, instead of causing havoc later like unguarded new Buffer() calls that end up receiving user input can do. This package affects only the files where var Buffer = require('safer-buffer').Buffer was done, so it is really simple to keep track of things and make sure that you don't mix old API usage with that. Also, CI should hint anything that you might have missed. New commits, if tested, won't land new usage of unsafe Buffer API this way. Node.js 10.x also deals with that by printing a runtime depecation warning. Would it affect third-party modules? No, unless you explicitly do an awful thing like monkey-patching or overriding the built-in Buffer . Don't do that. But I don't want throwing\u2026 That is also fine! Also, it could be better in some cases when you don't comprehensive enough test coverage. In that case \u2014 just don't override Buffer and use var SaferBuffer = require('safer-buffer').Buffer instead. That way, everything using Buffer natively would still work, but there would be two drawbacks: Buffer.from / Buffer.alloc won't be polyfilled \u2014 use SaferBuffer.from and SaferBuffer.alloc instead. You are still open to accidentally using the insecure deprecated API \u2014 use a linter to catch that. Note that using a linter to catch accidential Buffer constructor usage in this case is strongly recommended. Buffer is not overriden in this usecase, so linters won't get confused. \u00abWithout footguns\u00bb? Well, it is still possible to do some things with Buffer API, e.g. accessing .buffer property on older versions and duping things from there. You shouldn't do that in your code, probabably. The intention is to remove the most significant footguns that affect lots of packages in the ecosystem, and to do it in the proper way. Also, this package doesn't protect against security issues affecting some Node.js versions, so for usage in your own production code, it is still recommended to update to a Node.js version supported by upstream .","title":"safer-buffer travis npm javascript style guide Security Responsible Disclosure"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Readme/#safer-buffer","text":"Modern Buffer API polyfill without footguns, working on Node.js from 0.8 to current.","title":"safer-buffer"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Readme/#how-to-use","text":"First, port all Buffer() and new Buffer() calls to Buffer.alloc() and Buffer.from() API. Then, to achieve compatibility with outdated Node.js versions ( <4.5.0 and 5.x <5.9.0 ), use const Buffer = require('safer-buffer').Buffer in all files where you make calls to the new Buffer API. Use var instead of const if you need that for your Node.js version range support. Also, see the porting Buffer guide.","title":"How to use?"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Readme/#do-i-need-it","text":"Hopefully, not \u2014 dropping support for outdated Node.js versions should be fine nowdays, and that is the recommended path forward. You do need to port to the Buffer.alloc() and Buffer.from() though. See the porting guide for a better description.","title":"Do I need it?"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Readme/#why-not-safe-buffer","text":"In short: while safe-buffer serves as a polyfill for the new API, it allows old API usage and itself contains footguns. safe-buffer could be used safely to get the new API while still keeping support for older Node.js versions (like this module), but while analyzing ecosystem usage of the old Buffer API I found out that safe-buffer is itself causing problems in some cases. For example, consider the following snippet: $ cat example.unsafe.js console.log(Buffer(20)) $ ./node-v6.13.0-linux-x64/bin/node example.unsafe.js <Buffer 0a 00 00 00 00 00 00 00 28 13 de 02 00 00 00 00 05 00 00 00> $ standard example.unsafe.js standard: Use JavaScript Standard Style (https://standardjs.com) /home/chalker/repo/safer-buffer/example.unsafe.js:2:13: 'Buffer()' was deprecated since v6. Use 'Buffer.alloc()' or 'Buffer.from()' (use 'https://www.npmjs.com/package/safe-buffer' for '<4.5.0') instead. This is allocates and writes to console an uninitialized chunk of memory. standard linter (among others) catch that and warn people to avoid using unsafe API. Let's now throw in safe-buffer ! $ cat example.safe-buffer.js const Buffer = require('safe-buffer').Buffer console.log(Buffer(20)) $ standard example.safe-buffer.js $ ./node-v6.13.0-linux-x64/bin/node example.safe-buffer.js <Buffer 08 00 00 00 00 00 00 00 28 58 01 82 fe 7f 00 00 00 00 00 00> See the problem? Adding in safe-buffer magically removes the lint warning , but the behavior remains identi\u0441al to what we had before, and when launched on Node.js 6.x LTS \u2014 this dumps out chunks of uninitialized memory. And this code will still emit runtime warnings on Node.js 10.x and above. That was done by design. I first considered changing safe-buffer , prohibiting old API usage or emitting warnings on it, but that significantly diverges from safe-buffer design. After some discussion, it was decided to move my approach into a separate package, and this is that separate package . This footgun is not imaginary \u2014 I observed top-downloaded packages doing that kind of thing, \u00abfixing\u00bb the lint warning by blindly including safe-buffer without any actual changes. Also in some cases, even if the API was migrated to use of safe Buffer API \u2014 a random pull request can bring unsafe Buffer API usage back to the codebase by adding new calls \u2014 and that could go unnoticed even if you have a linter prohibiting that (becase of the reason stated above), and even pass CI. I also observed that being done in popular packages. Some examples: * webdriverio (a module with 548 759 downloads/month), * websocket-stream (218 288 d/m, fix in maxogden/websocket-stream#142 ), * node-serialport (113 138 d/m, fix in node-serialport/node-serialport#1510 ), * karma (3 973 193 d/m, fix in karma-runner/karma#2947 ), * spdy-transport (5 970 727 d/m, fix in spdy-http2/spdy-transport#53 ). * And there are a lot more over the ecosystem. I filed a PR at mysticatea/eslint-plugin-node#110 to partially fix that (for cases when that lint rule is used), but it is a semver-major change for linter rules and presets, so it would take significant time for that to reach actual setups. It also hasn't been released yet (2018-03-20). Also, safer-buffer discourages the usage of .allocUnsafe() , which is often done by a mistake. It still supports it with an explicit concern barier, by placing it under require('safer-buffer/dangereous') .","title":"Why not safe-buffer?"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Readme/#but-isnt-throwing-bad","text":"Not really. It's an error that could be noticed and fixed early, instead of causing havoc later like unguarded new Buffer() calls that end up receiving user input can do. This package affects only the files where var Buffer = require('safer-buffer').Buffer was done, so it is really simple to keep track of things and make sure that you don't mix old API usage with that. Also, CI should hint anything that you might have missed. New commits, if tested, won't land new usage of unsafe Buffer API this way. Node.js 10.x also deals with that by printing a runtime depecation warning.","title":"But isn't throwing bad?"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Readme/#would-it-affect-third-party-modules","text":"No, unless you explicitly do an awful thing like monkey-patching or overriding the built-in Buffer . Don't do that.","title":"Would it affect third-party modules?"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Readme/#but-i-dont-want-throwing","text":"That is also fine! Also, it could be better in some cases when you don't comprehensive enough test coverage. In that case \u2014 just don't override Buffer and use var SaferBuffer = require('safer-buffer').Buffer instead. That way, everything using Buffer natively would still work, but there would be two drawbacks: Buffer.from / Buffer.alloc won't be polyfilled \u2014 use SaferBuffer.from and SaferBuffer.alloc instead. You are still open to accidentally using the insecure deprecated API \u2014 use a linter to catch that. Note that using a linter to catch accidential Buffer constructor usage in this case is strongly recommended. Buffer is not overriden in this usecase, so linters won't get confused.","title":"But I don't want throwing\u2026"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Readme/#without-footguns","text":"Well, it is still possible to do some things with Buffer API, e.g. accessing .buffer property on older versions and duping things from there. You shouldn't do that in your code, probabably. The intention is to remove the most significant footguns that affect lots of packages in the ecosystem, and to do it in the proper way. Also, this package doesn't protect against security issues affecting some Node.js versions, so for usage in your own production code, it is still recommended to update to a Node.js version supported by upstream .","title":"\u00abWithout footguns\u00bb?"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/","text":"semver(1) -- The semantic versioner for npm Install npm install semver ```` ## Usage As a node module: ``` js const semver = require ( 'semver' ) semver.valid ( '1.2.3' ) // '1.2.3' semver.valid ( 'a.b.c' ) // null semver.clean ( ' =v1.2.3 ' ) // '1.2.3' semver.satisfies ( '1.2.3' , '1.x || >=2.5.0 || 5.0.0 - 7.2.3' ) // true semver.gt ( '1.2.3' , '9.8.7' ) // false semver.lt ( '1.2.3' , '9.8.7' ) // true semver.minVersion ( '>=1.0.0' ) // '1.0.0' semver.valid ( semver.coerce ( 'v2' )) // '2.0.0' semver.valid ( semver.coerce ( '42.6.7.9.3-alpha' )) // '42.6.7' You can also just load the module for the function that you care about if you'd like to minimize your footprint. // load the whole API at once in a single object const semver = require ( 'semver' ) // or just load the bits you need // all of them listed here, just pick and choose what you want // classes const SemVer = require ( 'semver/classes/semver' ) const Comparator = require ( 'semver/classes/comparator' ) const Range = require ( 'semver/classes/range' ) // functions for working with versions const semverParse = require ( 'semver/functions/parse' ) const semverValid = require ( 'semver/functions/valid' ) const semverClean = require ( 'semver/functions/clean' ) const semverInc = require ( 'semver/functions/inc' ) const semverDiff = require ( 'semver/functions/diff' ) const semverMajor = require ( 'semver/functions/major' ) const semverMinor = require ( 'semver/functions/minor' ) const semverPatch = require ( 'semver/functions/patch' ) const semverPrerelease = require ( 'semver/functions/prerelease' ) const semverCompare = require ( 'semver/functions/compare' ) const semverRcompare = require ( 'semver/functions/rcompare' ) const semverCompareLoose = require ( 'semver/functions/compare-loose' ) const semverCompareBuild = require ( 'semver/functions/compare-build' ) const semverSort = require ( 'semver/functions/sort' ) const semverRsort = require ( 'semver/functions/rsort' ) // low-level comparators between versions const semverGt = require ( 'semver/functions/gt' ) const semverLt = require ( 'semver/functions/lt' ) const semverEq = require ( 'semver/functions/eq' ) const semverNeq = require ( 'semver/functions/neq' ) const semverGte = require ( 'semver/functions/gte' ) const semverLte = require ( 'semver/functions/lte' ) const semverCmp = require ( 'semver/functions/cmp' ) const semverCoerce = require ( 'semver/functions/coerce' ) // working with ranges const semverSatisfies = require ( 'semver/functions/satisfies' ) const semverMaxSatisfying = require ( 'semver/ranges/max-satisfying' ) const semverMinSatisfying = require ( 'semver/ranges/min-satisfying' ) const semverToComparators = require ( 'semver/ranges/to-comparators' ) const semverMinVersion = require ( 'semver/ranges/min-version' ) const semverValidRange = require ( 'semver/ranges/valid' ) const semverOutside = require ( 'semver/ranges/outside' ) const semverGtr = require ( 'semver/ranges/gtr' ) const semverLtr = require ( 'semver/ranges/ltr' ) const semverIntersects = require ( 'semver/ranges/intersects' ) const semverSimplifyRange = require ( 'semver/ranges/simplify' ) const semverRangeSubset = require ( 'semver/ranges/subset' ) As a command-line utility: $ semver -h A JavaScript implementation of the https://semver.org/ specification Copyright Isaac Z. Schlueter Usage: semver [options] <version> [<version> [...]] Prints valid versions sorted by SemVer precedence Options: -r --range <range> Print versions that match the specified range. -i --increment [<level>] Increment a version by the specified level. Level can be one of: major, minor, patch, premajor, preminor, prepatch, prerelease, or release. Default level is 'patch'. Only one version may be specified. --preid <identifier> Identifier to be used to prefix premajor, preminor, prepatch or prerelease version increments. -l --loose Interpret versions and ranges loosely -n <0|1> This is the base to be used for the prerelease identifier. -p --include-prerelease Always include prerelease versions in range matching -c --coerce Coerce a string into SemVer if possible (does not imply --loose) --rtl Coerce version strings right to left --ltr Coerce version strings left to right (default) Program exits successfully if any valid version satisfies all supplied ranges, and prints all satisfying versions. If no satisfying versions are found, then exits failure. Versions are printed in ascending order, so supplying multiple versions to the utility will just sort them. Versions A \"version\" is described by the v2.0.0 specification found at https://semver.org/ . A leading \"=\" or \"v\" character is stripped off and ignored. Support for stripping a leading \"v\" is kept for compatibility with v1.0.0 of the SemVer specification but should not be used anymore. Ranges A version range is a set of comparators that specify versions that satisfy the range. A comparator is composed of an operator and a version . The set of primitive operators is: < Less than <= Less than or equal to > Greater than >= Greater than or equal to = Equal. If no operator is specified, then equality is assumed, so this operator is optional but MAY be included. For example, the comparator >=1.2.7 would match the versions 1.2.7 , 1.2.8 , 2.5.3 , and 1.3.9 , but not the versions 1.2.6 or 1.1.0 . The comparator >1 is equivalent to >=2.0.0 and would match the versions 2.0.0 and 3.1.0 , but not the versions 1.0.1 or 1.1.0 . Comparators can be joined by whitespace to form a comparator set , which is satisfied by the intersection of all of the comparators it includes. A range is composed of one or more comparator sets, joined by || . A version matches a range if and only if every comparator in at least one of the || -separated comparator sets is satisfied by the version. For example, the range >=1.2.7 <1.3.0 would match the versions 1.2.7 , 1.2.8 , and 1.2.99 , but not the versions 1.2.6 , 1.3.0 , or 1.1.0 . The range 1.2.7 || >=1.2.9 <2.0.0 would match the versions 1.2.7 , 1.2.9 , and 1.4.6 , but not the versions 1.2.8 or 2.0.0 . Prerelease Tags If a version has a prerelease tag (for example, 1.2.3-alpha.3 ) then it will only be allowed to satisfy comparator sets if at least one comparator with the same [major, minor, patch] tuple also has a prerelease tag. For example, the range >1.2.3-alpha.3 would be allowed to match the version 1.2.3-alpha.7 , but it would not be satisfied by 3.4.5-alpha.9 , even though 3.4.5-alpha.9 is technically \"greater than\" 1.2.3-alpha.3 according to the SemVer sort rules. The version range only accepts prerelease tags on the 1.2.3 version. Version 3.4.5 would satisfy the range because it does not have a prerelease flag, and 3.4.5 is greater than 1.2.3-alpha.7 . The purpose of this behavior is twofold. First, prerelease versions frequently are updated very quickly, and contain many breaking changes that are (by the author's design) not yet fit for public consumption. Therefore, by default, they are excluded from range-matching semantics. Second, a user who has opted into using a prerelease version has indicated the intent to use that specific set of alpha/beta/rc versions. By including a prerelease tag in the range, the user is indicating that they are aware of the risk. However, it is still not appropriate to assume that they have opted into taking a similar risk on the next set of prerelease versions. Note that this behavior can be suppressed (treating all prerelease versions as if they were normal versions, for range-matching) by setting the includePrerelease flag on the options object to any functions that do range matching. Prerelease Identifiers The method .inc takes an additional identifier string argument that will append the value of the string as a prerelease identifier: semver . inc ( '1.2.3' , 'prerelease' , 'beta' ) // '1.2.4-beta.0' command-line example: $ semver 1 .2.3 -i prerelease --preid beta 1 .2.4-beta.0 Which then can be used to increment further: $ semver 1 .2.4-beta.0 -i prerelease 1 .2.4-beta.1 To get out of the prerelease phase, use the release option: $ semver 1 .2.4-beta.1 -i release 1 .2.4 Prerelease Identifier Base The method .inc takes an optional parameter 'identifierBase' string that will let you let your prerelease number as zero-based or one-based. Set to false to omit the prerelease number altogether. If you do not specify this parameter, it will default to zero-based. semver . inc ( '1.2.3' , 'prerelease' , 'beta' , '1' ) // '1.2.4-beta.1' semver . inc ( '1.2.3' , 'prerelease' , 'beta' , false ) // '1.2.4-beta' command-line example: $ semver 1 .2.3 -i prerelease --preid beta -n 1 1 .2.4-beta.1 $ semver 1 .2.3 -i prerelease --preid beta -n false 1 .2.4-beta Advanced Range Syntax Advanced range syntax desugars to primitive comparators in deterministic ways. Advanced ranges may be combined in the same way as primitive comparators using white space or || . Hyphen Ranges X.Y.Z - A.B.C Specifies an inclusive set. 1.2.3 - 2.3.4 := >=1.2.3 <=2.3.4 If a partial version is provided as the first version in the inclusive range, then the missing pieces are replaced with zeroes. 1.2 - 2.3.4 := >=1.2.0 <=2.3.4 If a partial version is provided as the second version in the inclusive range, then all versions that start with the supplied parts of the tuple are accepted, but nothing that would be greater than the provided tuple parts. 1.2.3 - 2.3 := >=1.2.3 <2.4.0-0 1.2.3 - 2 := >=1.2.3 <3.0.0-0 X-Ranges 1.2.x 1.X 1.2.* * Any of X , x , or * may be used to \"stand in\" for one of the numeric values in the [major, minor, patch] tuple. * := >=0.0.0 (Any non-prerelease version satisfies, unless includePrerelease is specified, in which case any version at all satisfies) 1.x := >=1.0.0 <2.0.0-0 (Matching major version) 1.2.x := >=1.2.0 <1.3.0-0 (Matching major and minor versions) A partial version range is treated as an X-Range, so the special character is in fact optional. \"\" (empty string) := * := >=0.0.0 1 := 1.x.x := >=1.0.0 <2.0.0-0 1.2 := 1.2.x := >=1.2.0 <1.3.0-0 Tilde Ranges ~1.2.3 ~1.2 ~1 Allows patch-level changes if a minor version is specified on the comparator. Allows minor-level changes if not. ~1.2.3 := >=1.2.3 <1.(2+1).0 := >=1.2.3 <1.3.0-0 ~1.2 := >=1.2.0 <1.(2+1).0 := >=1.2.0 <1.3.0-0 (Same as 1.2.x ) ~1 := >=1.0.0 <(1+1).0.0 := >=1.0.0 <2.0.0-0 (Same as 1.x ) ~0.2.3 := >=0.2.3 <0.(2+1).0 := >=0.2.3 <0.3.0-0 ~0.2 := >=0.2.0 <0.(2+1).0 := >=0.2.0 <0.3.0-0 (Same as 0.2.x ) ~0 := >=0.0.0 <(0+1).0.0 := >=0.0.0 <1.0.0-0 (Same as 0.x ) ~1.2.3-beta.2 := >=1.2.3-beta.2 <1.3.0-0 Note that prereleases in the 1.2.3 version will be allowed, if they are greater than or equal to beta.2 . So, 1.2.3-beta.4 would be allowed, but 1.2.4-beta.2 would not, because it is a prerelease of a different [major, minor, patch] tuple. Caret Ranges ^1.2.3 ^0.2.5 ^0.0.4 Allows changes that do not modify the left-most non-zero element in the [major, minor, patch] tuple. In other words, this allows patch and minor updates for versions 1.0.0 and above, patch updates for versions 0.X >=0.1.0 , and no updates for versions 0.0.X . Many authors treat a 0.x version as if the x were the major \"breaking-change\" indicator. Caret ranges are ideal when an author may make breaking changes between 0.2.4 and 0.3.0 releases, which is a common practice. However, it presumes that there will not be breaking changes between 0.2.4 and 0.2.5 . It allows for changes that are presumed to be additive (but non-breaking), according to commonly observed practices. ^1.2.3 := >=1.2.3 <2.0.0-0 ^0.2.3 := >=0.2.3 <0.3.0-0 ^0.0.3 := >=0.0.3 <0.0.4-0 ^1.2.3-beta.2 := >=1.2.3-beta.2 <2.0.0-0 Note that prereleases in the 1.2.3 version will be allowed, if they are greater than or equal to beta.2 . So, 1.2.3-beta.4 would be allowed, but 1.2.4-beta.2 would not, because it is a prerelease of a different [major, minor, patch] tuple. ^0.0.3-beta := >=0.0.3-beta <0.0.4-0 Note that prereleases in the 0.0.3 version only will be allowed, if they are greater than or equal to beta . So, 0.0.3-pr.2 would be allowed. When parsing caret ranges, a missing patch value desugars to the number 0 , but will allow flexibility within that value, even if the major and minor versions are both 0 . ^1.2.x := >=1.2.0 <2.0.0-0 ^0.0.x := >=0.0.0 <0.1.0-0 ^0.0 := >=0.0.0 <0.1.0-0 A missing minor and patch values will desugar to zero, but also allow flexibility within those values, even if the major version is zero. ^1.x := >=1.0.0 <2.0.0-0 ^0.x := >=0.0.0 <1.0.0-0 Range Grammar Putting all this together, here is a Backus-Naur grammar for ranges, for the benefit of parser authors: range-set ::= range ( logical-or range ) * logical-or ::= ( ' ' ) * '||' ( ' ' ) * range ::= hyphen | simple ( ' ' simple ) * | '' hyphen ::= partial ' - ' partial simple ::= primitive | partial | tilde | caret primitive ::= ( ' < ' | ' > ' | '>=' | '<=' | '=' ) partial partial ::= xr ( '.' xr ( '.' xr qualifier ? )? )? xr ::= 'x' | 'X' | '*' | nr nr ::= '0' | ['1'-'9'] ( ['0'-'9'] ) * tilde ::= '~' partial caret ::= '^' partial qualifier ::= ( '-' pre )? ( '+' build )? pre ::= parts build ::= parts parts ::= part ( '.' part ) * part ::= nr | [-0-9A-Za-z]+ Functions All methods and classes take a final options object argument. All options in this object are false by default. The options supported are: loose : Be more forgiving about not-quite-valid semver strings. (Any resulting output will always be 100% strict compliant, of course.) For backwards compatibility reasons, if the options argument is a boolean value instead of an object, it is interpreted to be the loose param. includePrerelease : Set to suppress the default behavior of excluding prerelease tagged versions from ranges unless they are explicitly opted into. Strict-mode Comparators and Ranges will be strict about the SemVer strings that they parse. valid(v) : Return the parsed version, or null if it's not valid. inc(v, releaseType, options, identifier, identifierBase) : Return the version incremented by the release type ( major , premajor , minor , preminor , patch , prepatch , prerelease , or release ), or null if it's not valid premajor in one call will bump the version up to the next major version and down to a prerelease of that major version. preminor , and prepatch work the same way. If called from a non-prerelease version, prerelease will work the same as prepatch . It increments the patch version and then makes a prerelease. If the input version is already a prerelease it simply increments it. release will remove any prerelease part of the version. identifier can be used to prefix premajor , preminor , prepatch , or prerelease version increments. identifierBase is the base to be used for the prerelease identifier. prerelease(v) : Returns an array of prerelease components, or null if none exist. Example: prerelease('1.2.3-alpha.1') -> ['alpha', 1] major(v) : Return the major version number. minor(v) : Return the minor version number. patch(v) : Return the patch version number. intersects(r1, r2, loose) : Return true if the two supplied ranges or comparators intersect. parse(v) : Attempt to parse a string as a semantic version, returning either a SemVer object or null . Comparison gt(v1, v2) : v1 > v2 gte(v1, v2) : v1 >= v2 lt(v1, v2) : v1 < v2 lte(v1, v2) : v1 <= v2 eq(v1, v2) : v1 == v2 This is true if they're logically equivalent, even if they're not the same string. You already know how to compare strings. neq(v1, v2) : v1 != v2 The opposite of eq . cmp(v1, comparator, v2) : Pass in a comparison string, and it'll call the corresponding function above. \"===\" and \"!==\" do simple string comparison, but are included for completeness. Throws if an invalid comparison string is provided. compare(v1, v2) : Return 0 if v1 == v2 , or 1 if v1 is greater, or -1 if v2 is greater. Sorts in ascending order if passed to Array.sort() . rcompare(v1, v2) : The reverse of compare . Sorts an array of versions in descending order when passed to Array.sort() . compareBuild(v1, v2) : The same as compare but considers build when two versions are equal. Sorts in ascending order if passed to Array.sort() . compareLoose(v1, v2) : Short for compare(v1, v2, { loose: true }) . diff(v1, v2) : Returns the difference between two versions by the release type ( major , premajor , minor , preminor , patch , prepatch , or prerelease ), or null if the versions are the same. Sorting sort(versions) : Returns a sorted array of versions based on the compareBuild function. rsort(versions) : The reverse of sort . Returns an array of versions based on the compareBuild function in descending order. Comparators intersects(comparator) : Return true if the comparators intersect Ranges validRange(range) : Return the valid range or null if it's not valid. satisfies(version, range) : Return true if the version satisfies the range. maxSatisfying(versions, range) : Return the highest version in the list that satisfies the range, or null if none of them do. minSatisfying(versions, range) : Return the lowest version in the list that satisfies the range, or null if none of them do. minVersion(range) : Return the lowest version that can match the given range. gtr(version, range) : Return true if the version is greater than all the versions possible in the range. ltr(version, range) : Return true if the version is less than all the versions possible in the range. outside(version, range, hilo) : Return true if the version is outside the bounds of the range in either the high or low direction. The hilo argument must be either the string '>' or '<' . (This is the function called by gtr and ltr .) intersects(range) : Return true if any of the range comparators intersect. simplifyRange(versions, range) : Return a \"simplified\" range that matches the same items in the versions list as the range specified. Note that it does not guarantee that it would match the same versions in all cases, only for the set of versions provided. This is useful when generating ranges by joining together multiple versions with || programmatically, to provide the user with something a bit more ergonomic. If the provided range is shorter in string-length than the generated range, then that is returned. subset(subRange, superRange) : Return true if the subRange range is entirely contained by the superRange range. Note that, since ranges may be non-contiguous, a version might not be greater than a range, less than a range, or satisfy a range! For example, the range 1.2 <1.2.9 || >2.0.0 would have a hole from 1.2.9 until 2.0.0 , so version 1.2.10 would not be greater than the range (because 2.0.1 satisfies, which is higher), nor less than the range (since 1.2.8 satisfies, which is lower), and it also does not satisfy the range. If you want to know if a version satisfies or does not satisfy a range, use the satisfies(version, range) function. Coercion coerce(version, options) : Coerces a string to semver if possible This aims to provide a very forgiving translation of a non-semver string to semver. It looks for the first digit in a string and consumes all remaining characters which satisfy at least a partial semver (e.g., 1 , 1.2 , 1.2.3 ) up to the max permitted length (256 characters). Longer versions are simply truncated ( 4.6.3.9.2-alpha2 becomes 4.6.3 ). All surrounding text is simply ignored ( v3.4 replaces v3.3.1 becomes 3.4.0 ). Only text which lacks digits will fail coercion ( version one is not valid). The maximum length for any semver component considered for coercion is 16 characters; longer components will be ignored ( 10000000000000000.4.7.4 becomes 4.7.4 ). The maximum value for any semver component is Number.MAX_SAFE_INTEGER || (2**53 - 1) ; higher value components are invalid ( 9999999999999999.4.7.4 is likely invalid). If the options.rtl flag is set, then coerce will return the right-most coercible tuple that does not share an ending index with a longer coercible tuple. For example, 1.2.3.4 will return 2.3.4 in rtl mode, not 4.0.0 . 1.2.3/4 will return 4.0.0 , because the 4 is not a part of any other overlapping SemVer tuple. If the options.includePrerelease flag is set, then the coerce result will contain prerelease and build parts of a version. For example, 1.2.3.4-rc.1+rev.2 will preserve prerelease rc.1 and build rev.2 in the result. Clean clean(version) : Clean a string to be a valid semver if possible This will return a cleaned and trimmed semver version. If the provided version is not valid a null will be returned. This does not work for ranges. ex. * s.clean(' = v 2.1.5foo') : null * s.clean(' = v 2.1.5foo', { loose: true }) : '2.1.5-foo' * s.clean(' = v 2.1.5-foo') : null * s.clean(' = v 2.1.5-foo', { loose: true }) : '2.1.5-foo' * s.clean('=v2.1.5') : '2.1.5' * s.clean(' =v2.1.5') : '2.1.5' * s.clean(' 2.1.5 ') : '2.1.5' * s.clean('~1.0.0') : null Constants As a convenience, helper constants are exported to provide information about what node-semver supports: RELEASE_TYPES major premajor minor preminor patch prepatch prerelease const semver = require('semver'); if (semver.RELEASE_TYPES.includes(arbitraryUserInput)) { console.log('This is a valid release type!'); } else { console.warn('This is NOT a valid release type!'); } SEMVER_SPEC_VERSION 2.0.0 const semver = require('semver'); console.log('We are currently using the semver specification version:', semver.SEMVER_SPEC_VERSION); Exported Modules You may pull in just the part of this semver utility that you need if you are sensitive to packing and tree-shaking concerns. The main require('semver') export uses getter functions to lazily load the parts of the API that are used. The following modules are available: require('semver') require('semver/classes') require('semver/classes/comparator') require('semver/classes/range') require('semver/classes/semver') require('semver/functions/clean') require('semver/functions/cmp') require('semver/functions/coerce') require('semver/functions/compare') require('semver/functions/compare-build') require('semver/functions/compare-loose') require('semver/functions/diff') require('semver/functions/eq') require('semver/functions/gt') require('semver/functions/gte') require('semver/functions/inc') require('semver/functions/lt') require('semver/functions/lte') require('semver/functions/major') require('semver/functions/minor') require('semver/functions/neq') require('semver/functions/parse') require('semver/functions/patch') require('semver/functions/prerelease') require('semver/functions/rcompare') require('semver/functions/rsort') require('semver/functions/satisfies') require('semver/functions/sort') require('semver/functions/valid') require('semver/ranges/gtr') require('semver/ranges/intersects') require('semver/ranges/ltr') require('semver/ranges/max-satisfying') require('semver/ranges/min-satisfying') require('semver/ranges/min-version') require('semver/ranges/outside') require('semver/ranges/simplify') require('semver/ranges/subset') require('semver/ranges/to-comparators') require('semver/ranges/valid')","title":"semver(1) -- The semantic versioner for npm"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#semver1-the-semantic-versioner-for-npm","text":"","title":"semver(1) -- The semantic versioner for npm"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#install","text":"npm install semver ```` ## Usage As a node module: ``` js const semver = require ( 'semver' ) semver.valid ( '1.2.3' ) // '1.2.3' semver.valid ( 'a.b.c' ) // null semver.clean ( ' =v1.2.3 ' ) // '1.2.3' semver.satisfies ( '1.2.3' , '1.x || >=2.5.0 || 5.0.0 - 7.2.3' ) // true semver.gt ( '1.2.3' , '9.8.7' ) // false semver.lt ( '1.2.3' , '9.8.7' ) // true semver.minVersion ( '>=1.0.0' ) // '1.0.0' semver.valid ( semver.coerce ( 'v2' )) // '2.0.0' semver.valid ( semver.coerce ( '42.6.7.9.3-alpha' )) // '42.6.7' You can also just load the module for the function that you care about if you'd like to minimize your footprint. // load the whole API at once in a single object const semver = require ( 'semver' ) // or just load the bits you need // all of them listed here, just pick and choose what you want // classes const SemVer = require ( 'semver/classes/semver' ) const Comparator = require ( 'semver/classes/comparator' ) const Range = require ( 'semver/classes/range' ) // functions for working with versions const semverParse = require ( 'semver/functions/parse' ) const semverValid = require ( 'semver/functions/valid' ) const semverClean = require ( 'semver/functions/clean' ) const semverInc = require ( 'semver/functions/inc' ) const semverDiff = require ( 'semver/functions/diff' ) const semverMajor = require ( 'semver/functions/major' ) const semverMinor = require ( 'semver/functions/minor' ) const semverPatch = require ( 'semver/functions/patch' ) const semverPrerelease = require ( 'semver/functions/prerelease' ) const semverCompare = require ( 'semver/functions/compare' ) const semverRcompare = require ( 'semver/functions/rcompare' ) const semverCompareLoose = require ( 'semver/functions/compare-loose' ) const semverCompareBuild = require ( 'semver/functions/compare-build' ) const semverSort = require ( 'semver/functions/sort' ) const semverRsort = require ( 'semver/functions/rsort' ) // low-level comparators between versions const semverGt = require ( 'semver/functions/gt' ) const semverLt = require ( 'semver/functions/lt' ) const semverEq = require ( 'semver/functions/eq' ) const semverNeq = require ( 'semver/functions/neq' ) const semverGte = require ( 'semver/functions/gte' ) const semverLte = require ( 'semver/functions/lte' ) const semverCmp = require ( 'semver/functions/cmp' ) const semverCoerce = require ( 'semver/functions/coerce' ) // working with ranges const semverSatisfies = require ( 'semver/functions/satisfies' ) const semverMaxSatisfying = require ( 'semver/ranges/max-satisfying' ) const semverMinSatisfying = require ( 'semver/ranges/min-satisfying' ) const semverToComparators = require ( 'semver/ranges/to-comparators' ) const semverMinVersion = require ( 'semver/ranges/min-version' ) const semverValidRange = require ( 'semver/ranges/valid' ) const semverOutside = require ( 'semver/ranges/outside' ) const semverGtr = require ( 'semver/ranges/gtr' ) const semverLtr = require ( 'semver/ranges/ltr' ) const semverIntersects = require ( 'semver/ranges/intersects' ) const semverSimplifyRange = require ( 'semver/ranges/simplify' ) const semverRangeSubset = require ( 'semver/ranges/subset' ) As a command-line utility: $ semver -h A JavaScript implementation of the https://semver.org/ specification Copyright Isaac Z. Schlueter Usage: semver [options] <version> [<version> [...]] Prints valid versions sorted by SemVer precedence Options: -r --range <range> Print versions that match the specified range. -i --increment [<level>] Increment a version by the specified level. Level can be one of: major, minor, patch, premajor, preminor, prepatch, prerelease, or release. Default level is 'patch'. Only one version may be specified. --preid <identifier> Identifier to be used to prefix premajor, preminor, prepatch or prerelease version increments. -l --loose Interpret versions and ranges loosely -n <0|1> This is the base to be used for the prerelease identifier. -p --include-prerelease Always include prerelease versions in range matching -c --coerce Coerce a string into SemVer if possible (does not imply --loose) --rtl Coerce version strings right to left --ltr Coerce version strings left to right (default) Program exits successfully if any valid version satisfies all supplied ranges, and prints all satisfying versions. If no satisfying versions are found, then exits failure. Versions are printed in ascending order, so supplying multiple versions to the utility will just sort them.","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#versions","text":"A \"version\" is described by the v2.0.0 specification found at https://semver.org/ . A leading \"=\" or \"v\" character is stripped off and ignored. Support for stripping a leading \"v\" is kept for compatibility with v1.0.0 of the SemVer specification but should not be used anymore.","title":"Versions"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#ranges","text":"A version range is a set of comparators that specify versions that satisfy the range. A comparator is composed of an operator and a version . The set of primitive operators is: < Less than <= Less than or equal to > Greater than >= Greater than or equal to = Equal. If no operator is specified, then equality is assumed, so this operator is optional but MAY be included. For example, the comparator >=1.2.7 would match the versions 1.2.7 , 1.2.8 , 2.5.3 , and 1.3.9 , but not the versions 1.2.6 or 1.1.0 . The comparator >1 is equivalent to >=2.0.0 and would match the versions 2.0.0 and 3.1.0 , but not the versions 1.0.1 or 1.1.0 . Comparators can be joined by whitespace to form a comparator set , which is satisfied by the intersection of all of the comparators it includes. A range is composed of one or more comparator sets, joined by || . A version matches a range if and only if every comparator in at least one of the || -separated comparator sets is satisfied by the version. For example, the range >=1.2.7 <1.3.0 would match the versions 1.2.7 , 1.2.8 , and 1.2.99 , but not the versions 1.2.6 , 1.3.0 , or 1.1.0 . The range 1.2.7 || >=1.2.9 <2.0.0 would match the versions 1.2.7 , 1.2.9 , and 1.4.6 , but not the versions 1.2.8 or 2.0.0 .","title":"Ranges"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#prerelease-tags","text":"If a version has a prerelease tag (for example, 1.2.3-alpha.3 ) then it will only be allowed to satisfy comparator sets if at least one comparator with the same [major, minor, patch] tuple also has a prerelease tag. For example, the range >1.2.3-alpha.3 would be allowed to match the version 1.2.3-alpha.7 , but it would not be satisfied by 3.4.5-alpha.9 , even though 3.4.5-alpha.9 is technically \"greater than\" 1.2.3-alpha.3 according to the SemVer sort rules. The version range only accepts prerelease tags on the 1.2.3 version. Version 3.4.5 would satisfy the range because it does not have a prerelease flag, and 3.4.5 is greater than 1.2.3-alpha.7 . The purpose of this behavior is twofold. First, prerelease versions frequently are updated very quickly, and contain many breaking changes that are (by the author's design) not yet fit for public consumption. Therefore, by default, they are excluded from range-matching semantics. Second, a user who has opted into using a prerelease version has indicated the intent to use that specific set of alpha/beta/rc versions. By including a prerelease tag in the range, the user is indicating that they are aware of the risk. However, it is still not appropriate to assume that they have opted into taking a similar risk on the next set of prerelease versions. Note that this behavior can be suppressed (treating all prerelease versions as if they were normal versions, for range-matching) by setting the includePrerelease flag on the options object to any functions that do range matching.","title":"Prerelease Tags"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#prerelease-identifiers","text":"The method .inc takes an additional identifier string argument that will append the value of the string as a prerelease identifier: semver . inc ( '1.2.3' , 'prerelease' , 'beta' ) // '1.2.4-beta.0' command-line example: $ semver 1 .2.3 -i prerelease --preid beta 1 .2.4-beta.0 Which then can be used to increment further: $ semver 1 .2.4-beta.0 -i prerelease 1 .2.4-beta.1 To get out of the prerelease phase, use the release option: $ semver 1 .2.4-beta.1 -i release 1 .2.4","title":"Prerelease Identifiers"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#prerelease-identifier-base","text":"The method .inc takes an optional parameter 'identifierBase' string that will let you let your prerelease number as zero-based or one-based. Set to false to omit the prerelease number altogether. If you do not specify this parameter, it will default to zero-based. semver . inc ( '1.2.3' , 'prerelease' , 'beta' , '1' ) // '1.2.4-beta.1' semver . inc ( '1.2.3' , 'prerelease' , 'beta' , false ) // '1.2.4-beta' command-line example: $ semver 1 .2.3 -i prerelease --preid beta -n 1 1 .2.4-beta.1 $ semver 1 .2.3 -i prerelease --preid beta -n false 1 .2.4-beta","title":"Prerelease Identifier Base"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#advanced-range-syntax","text":"Advanced range syntax desugars to primitive comparators in deterministic ways. Advanced ranges may be combined in the same way as primitive comparators using white space or || .","title":"Advanced Range Syntax"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#hyphen-ranges-xyz-abc","text":"Specifies an inclusive set. 1.2.3 - 2.3.4 := >=1.2.3 <=2.3.4 If a partial version is provided as the first version in the inclusive range, then the missing pieces are replaced with zeroes. 1.2 - 2.3.4 := >=1.2.0 <=2.3.4 If a partial version is provided as the second version in the inclusive range, then all versions that start with the supplied parts of the tuple are accepted, but nothing that would be greater than the provided tuple parts. 1.2.3 - 2.3 := >=1.2.3 <2.4.0-0 1.2.3 - 2 := >=1.2.3 <3.0.0-0","title":"Hyphen Ranges X.Y.Z - A.B.C"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#x-ranges-12x-1x-12","text":"Any of X , x , or * may be used to \"stand in\" for one of the numeric values in the [major, minor, patch] tuple. * := >=0.0.0 (Any non-prerelease version satisfies, unless includePrerelease is specified, in which case any version at all satisfies) 1.x := >=1.0.0 <2.0.0-0 (Matching major version) 1.2.x := >=1.2.0 <1.3.0-0 (Matching major and minor versions) A partial version range is treated as an X-Range, so the special character is in fact optional. \"\" (empty string) := * := >=0.0.0 1 := 1.x.x := >=1.0.0 <2.0.0-0 1.2 := 1.2.x := >=1.2.0 <1.3.0-0","title":"X-Ranges 1.2.x 1.X 1.2.* *"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#tilde-ranges-123-12-1","text":"Allows patch-level changes if a minor version is specified on the comparator. Allows minor-level changes if not. ~1.2.3 := >=1.2.3 <1.(2+1).0 := >=1.2.3 <1.3.0-0 ~1.2 := >=1.2.0 <1.(2+1).0 := >=1.2.0 <1.3.0-0 (Same as 1.2.x ) ~1 := >=1.0.0 <(1+1).0.0 := >=1.0.0 <2.0.0-0 (Same as 1.x ) ~0.2.3 := >=0.2.3 <0.(2+1).0 := >=0.2.3 <0.3.0-0 ~0.2 := >=0.2.0 <0.(2+1).0 := >=0.2.0 <0.3.0-0 (Same as 0.2.x ) ~0 := >=0.0.0 <(0+1).0.0 := >=0.0.0 <1.0.0-0 (Same as 0.x ) ~1.2.3-beta.2 := >=1.2.3-beta.2 <1.3.0-0 Note that prereleases in the 1.2.3 version will be allowed, if they are greater than or equal to beta.2 . So, 1.2.3-beta.4 would be allowed, but 1.2.4-beta.2 would not, because it is a prerelease of a different [major, minor, patch] tuple.","title":"Tilde Ranges ~1.2.3 ~1.2 ~1"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#caret-ranges-123-025-004","text":"Allows changes that do not modify the left-most non-zero element in the [major, minor, patch] tuple. In other words, this allows patch and minor updates for versions 1.0.0 and above, patch updates for versions 0.X >=0.1.0 , and no updates for versions 0.0.X . Many authors treat a 0.x version as if the x were the major \"breaking-change\" indicator. Caret ranges are ideal when an author may make breaking changes between 0.2.4 and 0.3.0 releases, which is a common practice. However, it presumes that there will not be breaking changes between 0.2.4 and 0.2.5 . It allows for changes that are presumed to be additive (but non-breaking), according to commonly observed practices. ^1.2.3 := >=1.2.3 <2.0.0-0 ^0.2.3 := >=0.2.3 <0.3.0-0 ^0.0.3 := >=0.0.3 <0.0.4-0 ^1.2.3-beta.2 := >=1.2.3-beta.2 <2.0.0-0 Note that prereleases in the 1.2.3 version will be allowed, if they are greater than or equal to beta.2 . So, 1.2.3-beta.4 would be allowed, but 1.2.4-beta.2 would not, because it is a prerelease of a different [major, minor, patch] tuple. ^0.0.3-beta := >=0.0.3-beta <0.0.4-0 Note that prereleases in the 0.0.3 version only will be allowed, if they are greater than or equal to beta . So, 0.0.3-pr.2 would be allowed. When parsing caret ranges, a missing patch value desugars to the number 0 , but will allow flexibility within that value, even if the major and minor versions are both 0 . ^1.2.x := >=1.2.0 <2.0.0-0 ^0.0.x := >=0.0.0 <0.1.0-0 ^0.0 := >=0.0.0 <0.1.0-0 A missing minor and patch values will desugar to zero, but also allow flexibility within those values, even if the major version is zero. ^1.x := >=1.0.0 <2.0.0-0 ^0.x := >=0.0.0 <1.0.0-0","title":"Caret Ranges ^1.2.3 ^0.2.5 ^0.0.4"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#range-grammar","text":"Putting all this together, here is a Backus-Naur grammar for ranges, for the benefit of parser authors: range-set ::= range ( logical-or range ) * logical-or ::= ( ' ' ) * '||' ( ' ' ) * range ::= hyphen | simple ( ' ' simple ) * | '' hyphen ::= partial ' - ' partial simple ::= primitive | partial | tilde | caret primitive ::= ( ' < ' | ' > ' | '>=' | '<=' | '=' ) partial partial ::= xr ( '.' xr ( '.' xr qualifier ? )? )? xr ::= 'x' | 'X' | '*' | nr nr ::= '0' | ['1'-'9'] ( ['0'-'9'] ) * tilde ::= '~' partial caret ::= '^' partial qualifier ::= ( '-' pre )? ( '+' build )? pre ::= parts build ::= parts parts ::= part ( '.' part ) * part ::= nr | [-0-9A-Za-z]+","title":"Range Grammar"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#functions","text":"All methods and classes take a final options object argument. All options in this object are false by default. The options supported are: loose : Be more forgiving about not-quite-valid semver strings. (Any resulting output will always be 100% strict compliant, of course.) For backwards compatibility reasons, if the options argument is a boolean value instead of an object, it is interpreted to be the loose param. includePrerelease : Set to suppress the default behavior of excluding prerelease tagged versions from ranges unless they are explicitly opted into. Strict-mode Comparators and Ranges will be strict about the SemVer strings that they parse. valid(v) : Return the parsed version, or null if it's not valid. inc(v, releaseType, options, identifier, identifierBase) : Return the version incremented by the release type ( major , premajor , minor , preminor , patch , prepatch , prerelease , or release ), or null if it's not valid premajor in one call will bump the version up to the next major version and down to a prerelease of that major version. preminor , and prepatch work the same way. If called from a non-prerelease version, prerelease will work the same as prepatch . It increments the patch version and then makes a prerelease. If the input version is already a prerelease it simply increments it. release will remove any prerelease part of the version. identifier can be used to prefix premajor , preminor , prepatch , or prerelease version increments. identifierBase is the base to be used for the prerelease identifier. prerelease(v) : Returns an array of prerelease components, or null if none exist. Example: prerelease('1.2.3-alpha.1') -> ['alpha', 1] major(v) : Return the major version number. minor(v) : Return the minor version number. patch(v) : Return the patch version number. intersects(r1, r2, loose) : Return true if the two supplied ranges or comparators intersect. parse(v) : Attempt to parse a string as a semantic version, returning either a SemVer object or null .","title":"Functions"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#comparison","text":"gt(v1, v2) : v1 > v2 gte(v1, v2) : v1 >= v2 lt(v1, v2) : v1 < v2 lte(v1, v2) : v1 <= v2 eq(v1, v2) : v1 == v2 This is true if they're logically equivalent, even if they're not the same string. You already know how to compare strings. neq(v1, v2) : v1 != v2 The opposite of eq . cmp(v1, comparator, v2) : Pass in a comparison string, and it'll call the corresponding function above. \"===\" and \"!==\" do simple string comparison, but are included for completeness. Throws if an invalid comparison string is provided. compare(v1, v2) : Return 0 if v1 == v2 , or 1 if v1 is greater, or -1 if v2 is greater. Sorts in ascending order if passed to Array.sort() . rcompare(v1, v2) : The reverse of compare . Sorts an array of versions in descending order when passed to Array.sort() . compareBuild(v1, v2) : The same as compare but considers build when two versions are equal. Sorts in ascending order if passed to Array.sort() . compareLoose(v1, v2) : Short for compare(v1, v2, { loose: true }) . diff(v1, v2) : Returns the difference between two versions by the release type ( major , premajor , minor , preminor , patch , prepatch , or prerelease ), or null if the versions are the same.","title":"Comparison"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#sorting","text":"sort(versions) : Returns a sorted array of versions based on the compareBuild function. rsort(versions) : The reverse of sort . Returns an array of versions based on the compareBuild function in descending order.","title":"Sorting"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#comparators","text":"intersects(comparator) : Return true if the comparators intersect","title":"Comparators"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#ranges_1","text":"validRange(range) : Return the valid range or null if it's not valid. satisfies(version, range) : Return true if the version satisfies the range. maxSatisfying(versions, range) : Return the highest version in the list that satisfies the range, or null if none of them do. minSatisfying(versions, range) : Return the lowest version in the list that satisfies the range, or null if none of them do. minVersion(range) : Return the lowest version that can match the given range. gtr(version, range) : Return true if the version is greater than all the versions possible in the range. ltr(version, range) : Return true if the version is less than all the versions possible in the range. outside(version, range, hilo) : Return true if the version is outside the bounds of the range in either the high or low direction. The hilo argument must be either the string '>' or '<' . (This is the function called by gtr and ltr .) intersects(range) : Return true if any of the range comparators intersect. simplifyRange(versions, range) : Return a \"simplified\" range that matches the same items in the versions list as the range specified. Note that it does not guarantee that it would match the same versions in all cases, only for the set of versions provided. This is useful when generating ranges by joining together multiple versions with || programmatically, to provide the user with something a bit more ergonomic. If the provided range is shorter in string-length than the generated range, then that is returned. subset(subRange, superRange) : Return true if the subRange range is entirely contained by the superRange range. Note that, since ranges may be non-contiguous, a version might not be greater than a range, less than a range, or satisfy a range! For example, the range 1.2 <1.2.9 || >2.0.0 would have a hole from 1.2.9 until 2.0.0 , so version 1.2.10 would not be greater than the range (because 2.0.1 satisfies, which is higher), nor less than the range (since 1.2.8 satisfies, which is lower), and it also does not satisfy the range. If you want to know if a version satisfies or does not satisfy a range, use the satisfies(version, range) function.","title":"Ranges"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#coercion","text":"coerce(version, options) : Coerces a string to semver if possible This aims to provide a very forgiving translation of a non-semver string to semver. It looks for the first digit in a string and consumes all remaining characters which satisfy at least a partial semver (e.g., 1 , 1.2 , 1.2.3 ) up to the max permitted length (256 characters). Longer versions are simply truncated ( 4.6.3.9.2-alpha2 becomes 4.6.3 ). All surrounding text is simply ignored ( v3.4 replaces v3.3.1 becomes 3.4.0 ). Only text which lacks digits will fail coercion ( version one is not valid). The maximum length for any semver component considered for coercion is 16 characters; longer components will be ignored ( 10000000000000000.4.7.4 becomes 4.7.4 ). The maximum value for any semver component is Number.MAX_SAFE_INTEGER || (2**53 - 1) ; higher value components are invalid ( 9999999999999999.4.7.4 is likely invalid). If the options.rtl flag is set, then coerce will return the right-most coercible tuple that does not share an ending index with a longer coercible tuple. For example, 1.2.3.4 will return 2.3.4 in rtl mode, not 4.0.0 . 1.2.3/4 will return 4.0.0 , because the 4 is not a part of any other overlapping SemVer tuple. If the options.includePrerelease flag is set, then the coerce result will contain prerelease and build parts of a version. For example, 1.2.3.4-rc.1+rev.2 will preserve prerelease rc.1 and build rev.2 in the result.","title":"Coercion"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#clean","text":"clean(version) : Clean a string to be a valid semver if possible This will return a cleaned and trimmed semver version. If the provided version is not valid a null will be returned. This does not work for ranges. ex. * s.clean(' = v 2.1.5foo') : null * s.clean(' = v 2.1.5foo', { loose: true }) : '2.1.5-foo' * s.clean(' = v 2.1.5-foo') : null * s.clean(' = v 2.1.5-foo', { loose: true }) : '2.1.5-foo' * s.clean('=v2.1.5') : '2.1.5' * s.clean(' =v2.1.5') : '2.1.5' * s.clean(' 2.1.5 ') : '2.1.5' * s.clean('~1.0.0') : null","title":"Clean"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#constants","text":"As a convenience, helper constants are exported to provide information about what node-semver supports:","title":"Constants"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#release_types","text":"major premajor minor preminor patch prepatch prerelease const semver = require('semver'); if (semver.RELEASE_TYPES.includes(arbitraryUserInput)) { console.log('This is a valid release type!'); } else { console.warn('This is NOT a valid release type!'); }","title":"RELEASE_TYPES"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#semver_spec_version","text":"2.0.0 const semver = require('semver'); console.log('We are currently using the semver specification version:', semver.SEMVER_SPEC_VERSION);","title":"SEMVER_SPEC_VERSION"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#exported-modules","text":"You may pull in just the part of this semver utility that you need if you are sensitive to packing and tree-shaking concerns. The main require('semver') export uses getter functions to lazily load the parts of the API that are used. The following modules are available: require('semver') require('semver/classes') require('semver/classes/comparator') require('semver/classes/range') require('semver/classes/semver') require('semver/functions/clean') require('semver/functions/cmp') require('semver/functions/coerce') require('semver/functions/compare') require('semver/functions/compare-build') require('semver/functions/compare-loose') require('semver/functions/diff') require('semver/functions/eq') require('semver/functions/gt') require('semver/functions/gte') require('semver/functions/inc') require('semver/functions/lt') require('semver/functions/lte') require('semver/functions/major') require('semver/functions/minor') require('semver/functions/neq') require('semver/functions/parse') require('semver/functions/patch') require('semver/functions/prerelease') require('semver/functions/rcompare') require('semver/functions/rsort') require('semver/functions/satisfies') require('semver/functions/sort') require('semver/functions/valid') require('semver/ranges/gtr') require('semver/ranges/intersects') require('semver/ranges/ltr') require('semver/ranges/max-satisfying') require('semver/ranges/min-satisfying') require('semver/ranges/min-version') require('semver/ranges/outside') require('semver/ranges/simplify') require('semver/ranges/subset') require('semver/ranges/to-comparators') require('semver/ranges/valid')","title":"Exported Modules"},{"location":"system-desing/crud-app/JS/server/node_modules/send/","text":"send Send is a library for streaming files from the file system as a http response supporting partial responses (Ranges), conditional-GET negotiation (If-Match, If-Unmodified-Since, If-None-Match, If-Modified-Since), high test coverage, and granular events which may be leveraged to take appropriate actions in your application or framework. Looking to serve up entire folders mapped to URLs? Try serve-static . Installation This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install send API var send = require ( 'send' ) send(req, path, [options]) Create a new SendStream for the given path to send to a res . The req is the Node.js HTTP request and the path is a urlencoded path to send (urlencoded, not the actual file-system path). Options acceptRanges Enable or disable accepting ranged requests, defaults to true. Disabling this will not send Accept-Ranges and ignore the contents of the Range request header. cacheControl Enable or disable setting Cache-Control response header, defaults to true. Disabling this will ignore the immutable and maxAge options. dotfiles Set how \"dotfiles\" are treated when encountered. A dotfile is a file or directory that begins with a dot (\".\"). Note this check is done on the path itself without checking if the path actually exists on the disk. If root is specified, only the dotfiles above the root are checked (i.e. the root itself can be within a dotfile when set to \"deny\"). 'allow' No special treatment for dotfiles. 'deny' Send a 403 for any request for a dotfile. 'ignore' Pretend like the dotfile does not exist and 404. The default value is similar to 'ignore' , with the exception that this default will not ignore the files within a directory that begins with a dot, for backward-compatibility. end Byte offset at which the stream ends, defaults to the length of the file minus 1. The end is inclusive in the stream, meaning end: 3 will include the 4th byte in the stream. etag Enable or disable etag generation, defaults to true. extensions If a given file doesn't exist, try appending one of the given extensions, in the given order. By default, this is disabled (set to false ). An example value that will serve extension-less HTML files: ['html', 'htm'] . This is skipped if the requested file already has an extension. immutable Enable or disable the immutable directive in the Cache-Control response header, defaults to false . If set to true , the maxAge option should also be specified to enable caching. The immutable directive will prevent supported clients from making conditional requests during the life of the maxAge option to check if the file has changed. index By default send supports \"index.html\" files, to disable this set false or to supply a new index pass a string or an array in preferred order. lastModified Enable or disable Last-Modified header, defaults to true. Uses the file system's last modified value. maxAge Provide a max-age in milliseconds for http caching, defaults to 0. This can also be a string accepted by the ms module. root Serve files relative to path . start Byte offset at which the stream starts, defaults to 0. The start is inclusive, meaning start: 2 will include the 3rd byte in the stream. Events The SendStream is an event emitter and will emit the following events: error an error occurred (err) directory a directory was requested (res, path) file a file was requested (path, stat) headers the headers are about to be set on a file (res, path, stat) stream file streaming has started (stream) end streaming has completed .pipe The pipe method is used to pipe the response into the Node.js HTTP response object, typically send(req, path, options).pipe(res) . Error-handling By default when no error listeners are present an automatic response will be made, otherwise you have full control over the response, aka you may show a 5xx page etc. Caching It does not perform internal caching, you should use a reverse proxy cache such as Varnish for this, or those fancy things called CDNs. If your application is small enough that it would benefit from single-node memory caching, it's small enough that it does not need caching at all ;). Debugging To enable debug() instrumentation output export DEBUG : $ DEBUG=send node app Running tests $ npm install $ npm test Examples Serve a specific file This simple example will send a specific file to all requests. var http = require ( 'http' ) var send = require ( 'send' ) var server = http . createServer ( function onRequest ( req , res ) { send ( req , '/path/to/index.html' ) . pipe ( res ) }) server . listen ( 3000 ) Serve all files from a directory This simple example will just serve up all the files in a given directory as the top-level. For example, a request GET /foo.txt will send back /www/public/foo.txt . var http = require ( 'http' ) var parseUrl = require ( 'parseurl' ) var send = require ( 'send' ) var server = http . createServer ( function onRequest ( req , res ) { send ( req , parseUrl ( req ). pathname , { root : '/www/public' }) . pipe ( res ) }) server . listen ( 3000 ) Custom file types var extname = require ( 'path' ). extname var http = require ( 'http' ) var parseUrl = require ( 'parseurl' ) var send = require ( 'send' ) var server = http . createServer ( function onRequest ( req , res ) { send ( req , parseUrl ( req ). pathname , { root : '/www/public' }) . on ( 'headers' , function ( res , path ) { switch ( extname ( path )) { case '.x-mt' : case '.x-mtt' : // custom type for these extensions res . setHeader ( 'Content-Type' , 'application/x-my-type' ) break } }) . pipe ( res ) }) server . listen ( 3000 ) Custom directory index view This is an example of serving up a structure of directories with a custom function to render a listing of a directory. var http = require ( 'http' ) var fs = require ( 'fs' ) var parseUrl = require ( 'parseurl' ) var send = require ( 'send' ) // Transfer arbitrary files from within /www/example.com/public/* // with a custom handler for directory listing var server = http . createServer ( function onRequest ( req , res ) { send ( req , parseUrl ( req ). pathname , { index : false , root : '/www/public' }) . once ( 'directory' , directory ) . pipe ( res ) }) server . listen ( 3000 ) // Custom directory handler function directory ( res , path ) { var stream = this // redirect to trailing slash for consistent url if ( ! stream . hasTrailingSlash ()) { return stream . redirect ( path ) } // get directory list fs . readdir ( path , function onReaddir ( err , list ) { if ( err ) return stream . error ( err ) // render an index for the directory res . setHeader ( 'Content-Type' , 'text/plain; charset=UTF-8' ) res . end ( list . join ( '\\n' ) + '\\n' ) }) } Serving from a root directory with custom error-handling var http = require ( 'http' ) var parseUrl = require ( 'parseurl' ) var send = require ( 'send' ) var server = http . createServer ( function onRequest ( req , res ) { // your custom error-handling logic: function error ( err ) { res . statusCode = err . status || 500 res . end ( err . message ) } // your custom headers function headers ( res , path , stat ) { // serve all files for download res . setHeader ( 'Content-Disposition' , 'attachment' ) } // your custom directory handling logic: function redirect () { res . statusCode = 301 res . setHeader ( 'Location' , req . url + '/' ) res . end ( 'Redirecting to ' + req . url + '/' ) } // transfer arbitrary files from within // /www/example.com/public/* send ( req , parseUrl ( req ). pathname , { root : '/www/public' }) . on ( 'error' , error ) . on ( 'directory' , redirect ) . on ( 'headers' , headers ) . pipe ( res ) }) server . listen ( 3000 ) License MIT","title":"send"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#send","text":"Send is a library for streaming files from the file system as a http response supporting partial responses (Ranges), conditional-GET negotiation (If-Match, If-Unmodified-Since, If-None-Match, If-Modified-Since), high test coverage, and granular events which may be leveraged to take appropriate actions in your application or framework. Looking to serve up entire folders mapped to URLs? Try serve-static .","title":"send"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#installation","text":"This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install send","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#api","text":"var send = require ( 'send' )","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#sendreq-path-options","text":"Create a new SendStream for the given path to send to a res . The req is the Node.js HTTP request and the path is a urlencoded path to send (urlencoded, not the actual file-system path).","title":"send(req, path, [options])"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#options","text":"","title":"Options"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#acceptranges","text":"Enable or disable accepting ranged requests, defaults to true. Disabling this will not send Accept-Ranges and ignore the contents of the Range request header.","title":"acceptRanges"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#cachecontrol","text":"Enable or disable setting Cache-Control response header, defaults to true. Disabling this will ignore the immutable and maxAge options.","title":"cacheControl"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#dotfiles","text":"Set how \"dotfiles\" are treated when encountered. A dotfile is a file or directory that begins with a dot (\".\"). Note this check is done on the path itself without checking if the path actually exists on the disk. If root is specified, only the dotfiles above the root are checked (i.e. the root itself can be within a dotfile when set to \"deny\"). 'allow' No special treatment for dotfiles. 'deny' Send a 403 for any request for a dotfile. 'ignore' Pretend like the dotfile does not exist and 404. The default value is similar to 'ignore' , with the exception that this default will not ignore the files within a directory that begins with a dot, for backward-compatibility.","title":"dotfiles"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#end","text":"Byte offset at which the stream ends, defaults to the length of the file minus 1. The end is inclusive in the stream, meaning end: 3 will include the 4th byte in the stream.","title":"end"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#etag","text":"Enable or disable etag generation, defaults to true.","title":"etag"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#extensions","text":"If a given file doesn't exist, try appending one of the given extensions, in the given order. By default, this is disabled (set to false ). An example value that will serve extension-less HTML files: ['html', 'htm'] . This is skipped if the requested file already has an extension.","title":"extensions"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#immutable","text":"Enable or disable the immutable directive in the Cache-Control response header, defaults to false . If set to true , the maxAge option should also be specified to enable caching. The immutable directive will prevent supported clients from making conditional requests during the life of the maxAge option to check if the file has changed.","title":"immutable"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#index","text":"By default send supports \"index.html\" files, to disable this set false or to supply a new index pass a string or an array in preferred order.","title":"index"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#lastmodified","text":"Enable or disable Last-Modified header, defaults to true. Uses the file system's last modified value.","title":"lastModified"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#maxage","text":"Provide a max-age in milliseconds for http caching, defaults to 0. This can also be a string accepted by the ms module.","title":"maxAge"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#root","text":"Serve files relative to path .","title":"root"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#start","text":"Byte offset at which the stream starts, defaults to 0. The start is inclusive, meaning start: 2 will include the 3rd byte in the stream.","title":"start"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#events","text":"The SendStream is an event emitter and will emit the following events: error an error occurred (err) directory a directory was requested (res, path) file a file was requested (path, stat) headers the headers are about to be set on a file (res, path, stat) stream file streaming has started (stream) end streaming has completed","title":"Events"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#pipe","text":"The pipe method is used to pipe the response into the Node.js HTTP response object, typically send(req, path, options).pipe(res) .","title":".pipe"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#error-handling","text":"By default when no error listeners are present an automatic response will be made, otherwise you have full control over the response, aka you may show a 5xx page etc.","title":"Error-handling"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#caching","text":"It does not perform internal caching, you should use a reverse proxy cache such as Varnish for this, or those fancy things called CDNs. If your application is small enough that it would benefit from single-node memory caching, it's small enough that it does not need caching at all ;).","title":"Caching"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#debugging","text":"To enable debug() instrumentation output export DEBUG : $ DEBUG=send node app","title":"Debugging"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#running-tests","text":"$ npm install $ npm test","title":"Running tests"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#examples","text":"","title":"Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#serve-a-specific-file","text":"This simple example will send a specific file to all requests. var http = require ( 'http' ) var send = require ( 'send' ) var server = http . createServer ( function onRequest ( req , res ) { send ( req , '/path/to/index.html' ) . pipe ( res ) }) server . listen ( 3000 )","title":"Serve a specific file"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#serve-all-files-from-a-directory","text":"This simple example will just serve up all the files in a given directory as the top-level. For example, a request GET /foo.txt will send back /www/public/foo.txt . var http = require ( 'http' ) var parseUrl = require ( 'parseurl' ) var send = require ( 'send' ) var server = http . createServer ( function onRequest ( req , res ) { send ( req , parseUrl ( req ). pathname , { root : '/www/public' }) . pipe ( res ) }) server . listen ( 3000 )","title":"Serve all files from a directory"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#custom-file-types","text":"var extname = require ( 'path' ). extname var http = require ( 'http' ) var parseUrl = require ( 'parseurl' ) var send = require ( 'send' ) var server = http . createServer ( function onRequest ( req , res ) { send ( req , parseUrl ( req ). pathname , { root : '/www/public' }) . on ( 'headers' , function ( res , path ) { switch ( extname ( path )) { case '.x-mt' : case '.x-mtt' : // custom type for these extensions res . setHeader ( 'Content-Type' , 'application/x-my-type' ) break } }) . pipe ( res ) }) server . listen ( 3000 )","title":"Custom file types"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#custom-directory-index-view","text":"This is an example of serving up a structure of directories with a custom function to render a listing of a directory. var http = require ( 'http' ) var fs = require ( 'fs' ) var parseUrl = require ( 'parseurl' ) var send = require ( 'send' ) // Transfer arbitrary files from within /www/example.com/public/* // with a custom handler for directory listing var server = http . createServer ( function onRequest ( req , res ) { send ( req , parseUrl ( req ). pathname , { index : false , root : '/www/public' }) . once ( 'directory' , directory ) . pipe ( res ) }) server . listen ( 3000 ) // Custom directory handler function directory ( res , path ) { var stream = this // redirect to trailing slash for consistent url if ( ! stream . hasTrailingSlash ()) { return stream . redirect ( path ) } // get directory list fs . readdir ( path , function onReaddir ( err , list ) { if ( err ) return stream . error ( err ) // render an index for the directory res . setHeader ( 'Content-Type' , 'text/plain; charset=UTF-8' ) res . end ( list . join ( '\\n' ) + '\\n' ) }) }","title":"Custom directory index view"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#serving-from-a-root-directory-with-custom-error-handling","text":"var http = require ( 'http' ) var parseUrl = require ( 'parseurl' ) var send = require ( 'send' ) var server = http . createServer ( function onRequest ( req , res ) { // your custom error-handling logic: function error ( err ) { res . statusCode = err . status || 500 res . end ( err . message ) } // your custom headers function headers ( res , path , stat ) { // serve all files for download res . setHeader ( 'Content-Disposition' , 'attachment' ) } // your custom directory handling logic: function redirect () { res . statusCode = 301 res . setHeader ( 'Location' , req . url + '/' ) res . end ( 'Redirecting to ' + req . url + '/' ) } // transfer arbitrary files from within // /www/example.com/public/* send ( req , parseUrl ( req ). pathname , { root : '/www/public' }) . on ( 'error' , error ) . on ( 'directory' , redirect ) . on ( 'headers' , headers ) . pipe ( res ) }) server . listen ( 3000 )","title":"Serving from a root directory with custom error-handling"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/","text":"1.2.0 / 2025-03-27 deps: mime-types@^3.0.1 fresh@^2.0.0 removed destroy remove getHeaderNames() polyfill and refactor clearHeaders() 1.1.0 / 2024-09-10 Changes from 0.19.0 1.0.0 / 2024-07-25 Drop support for Node.js <18.0 statuses@^2.0.1 range-parser@^1.2.1 on-finished@^2.4.1 ms@^2.1.3 mime-types@^2.1.35 http-errors@^2.0.0 fresh@^0.5.2 etag@^1.8.1 escape-html@^1.0.3 encodeurl@^2.0.0 destroy@^1.2.0 debug@^4.3.5 1.0.0-beta.2 / 2024-03-04 Changes from 0.18.0 1.0.0-beta.1 / 2022-02-04 Drop support for Node.js 0.8 Remove hidden option -- use dotfiles option Remove from alias to root -- use root directly Remove send.etag() -- use etag in options Remove send.index() -- use index in options Remove send.maxage() -- use maxAge in options Remove send.root() -- use root in options Use mime-types for file to content type mapping -- removed send.mime deps: debug@3.1.0 Add DEBUG_HIDE_DATE environment variable Change timer to per-namespace instead of global Change non-TTY date format Remove DEBUG_FD environment variable support Support 256 namespace colors 0.19.0 / 2024-09-10 Remove link renderization in html while redirecting 0.18.0 / 2022-03-23 Fix emitted 416 error missing headers property Limit the headers removed for 304 response deps: depd@2.0.0 Replace internal eval usage with Function constructor Use instance methods on process to check for listeners deps: destroy@1.2.0 deps: http-errors@2.0.0 deps: depd@2.0.0 deps: statuses@2.0.1 deps: on-finished@2.4.1 deps: statuses@2.0.1 0.17.2 / 2021-12-11 pref: ignore empty http tokens deps: http-errors@1.8.1 deps: inherits@2.0.4 deps: toidentifier@1.0.1 deps: setprototypeof@1.2.0 deps: ms@2.1.3 0.17.1 / 2019-05-10 Set stricter CSP header in redirect & error responses deps: range-parser@~1.2.1 0.17.0 / 2019-05-03 deps: http-errors@~1.7.2 Set constructor name when possible Use toidentifier module to make class names deps: depd@~1.1.2 deps: setprototypeof@1.1.1 deps: statuses@'>= 1.5.0 < 2' deps: mime@1.6.0 Add extensions for JPEG-2000 images Add new font/* types from IANA Add WASM mapping Update .bdoc to application/bdoc Update .bmp to image/bmp Update .m4a to audio/mp4 Update .rtf to application/rtf Update .wav to audio/wav Update .xml to application/xml Update generic extensions to application/octet-stream : .deb , .dll , .dmg , .exe , .iso , .msi Use mime-score module to resolve extension conflicts deps: ms@2.1.1 Add week / w support Fix negative number handling deps: statuses@~1.5.0 perf: remove redundant path.normalize call 0.16.2 / 2018-02-07 Fix incorrect end tag in default error & redirects deps: depd@~1.1.2 perf: remove argument reassignment deps: encodeurl@~1.0.2 Fix encoding % as last character deps: statuses@~1.4.0 0.16.1 / 2017-09-29 Fix regression in edge-case behavior for empty path 0.16.0 / 2017-09-27 Add immutable option Fix missing </html> in default error & redirects Use instance methods on steam to check for listeners deps: mime@1.4.1 Add 70 new types for file extensions Set charset as \"UTF-8\" for .js and .json perf: improve path validation speed 0.15.6 / 2017-09-22 deps: debug@2.6.9 perf: improve If-Match token parsing 0.15.5 / 2017-09-20 deps: etag@~1.8.1 perf: replace regular expression with substring deps: fresh@0.5.2 Fix handling of modified headers with invalid dates perf: improve ETag match loop perf: improve If-None-Match token parsing 0.15.4 / 2017-08-05 deps: debug@2.6.8 deps: depd@~1.1.1 Remove unnecessary Buffer loading deps: http-errors@~1.6.2 deps: depd@1.1.1 0.15.3 / 2017-05-16 deps: debug@2.6.7 deps: ms@2.0.0 deps: ms@2.0.0 0.15.2 / 2017-04-26 deps: debug@2.6.4 Fix DEBUG_MAX_ARRAY_LENGTH deps: ms@0.7.3 deps: ms@1.0.0 0.15.1 / 2017-03-04 Fix issue when Date.parse does not return NaN on invalid date Fix strict violation in broken environments 0.15.0 / 2017-02-25 Support If-Match and If-Unmodified-Since headers Add res and path arguments to directory event Remove usage of res._headers private field Improves compatibility with Node.js 8 nightly Send complete HTML document in redirect & error responses Set default CSP header in redirect & error responses Use res.getHeaderNames() when available Use res.headersSent when available deps: debug@2.6.1 Allow colors in workers Deprecated DEBUG_FD environment variable set to 3 or higher Fix error when running under React Native Use same color for same namespace deps: ms@0.7.2 deps: etag@~1.8.0 deps: fresh@0.5.0 Fix false detection of no-cache request directive Fix incorrect result when If-None-Match has both * and ETags Fix weak ETag matching to match spec perf: delay reading header values until needed perf: enable strict mode perf: hoist regular expressions perf: remove duplicate conditional perf: remove unnecessary boolean coercions perf: skip checking modified time if ETag check failed perf: skip parsing If-None-Match when no ETag header perf: use Date.parse instead of new Date deps: http-errors@~1.6.1 Make message property enumerable for HttpError s deps: setprototypeof@1.0.3 0.14.2 / 2017-01-23 deps: http-errors@~1.5.1 deps: inherits@2.0.3 deps: setprototypeof@1.0.2 deps: statuses@'>= 1.3.1 < 2' deps: ms@0.7.2 deps: statuses@~1.3.1 0.14.1 / 2016-06-09 Fix redirect error when path contains raw non-URL characters Fix redirect when path starts with multiple forward slashes 0.14.0 / 2016-06-06 Add acceptRanges option Add cacheControl option Attempt to combine multiple ranges into single range Correctly inherit from Stream class Fix Content-Range header in 416 responses when using start / end options Fix Content-Range header missing from default 416 responses Ignore non-byte Range headers deps: http-errors@~1.5.0 Add HttpError export, for err instanceof createError.HttpError Support new code 421 Misdirected Request Use setprototypeof module to replace __proto__ setting deps: inherits@2.0.1 deps: statuses@'>= 1.3.0 < 2' perf: enable strict mode deps: range-parser@~1.2.0 Fix incorrectly returning -1 when there is at least one valid range perf: remove internal function deps: statuses@~1.3.0 Add 421 Misdirected Request perf: enable strict mode perf: remove argument reassignment 0.13.2 / 2016-03-05 Fix invalid Content-Type header when send.mime.default_type unset 0.13.1 / 2016-01-16 deps: depd@~1.1.0 Support web browser loading perf: enable strict mode deps: destroy@~1.0.4 perf: enable strict mode deps: escape-html@~1.0.3 perf: enable strict mode perf: optimize string replacement perf: use faster string coercion deps: range-parser@~1.0.3 perf: enable strict mode 0.13.0 / 2015-06-16 Allow Node.js HTTP server to set Date response header Fix incorrectly removing Content-Location on 304 response Improve the default redirect response headers Send appropriate headers on default error response Use http-errors for standard emitted errors Use statuses instead of http module for status messages deps: escape-html@1.0.2 deps: etag@~1.7.0 Improve stat performance by removing hashing deps: fresh@0.3.0 Add weak ETag matching support deps: on-finished@~2.3.0 Add defined behavior for HTTP CONNECT requests Add defined behavior for HTTP Upgrade requests deps: ee-first@1.1.1 perf: enable strict mode perf: remove unnecessary array allocations 0.12.3 / 2015-05-13 deps: debug@~2.2.0 deps: ms@0.7.1 deps: depd@~1.0.1 deps: etag@~1.6.0 Improve support for JXcore Support \"fake\" stats objects in environments without fs deps: ms@0.7.1 Prevent extraordinarily long inputs deps: on-finished@~2.2.1 0.12.2 / 2015-03-13 Throw errors early for invalid extensions or index options deps: debug@~2.1.3 Fix high intensity foreground color for bold deps: ms@0.7.0 0.12.1 / 2015-02-17 Fix regression sending zero-length files 0.12.0 / 2015-02-16 Always read the stat size from the file Fix mutating passed-in options deps: mime@1.3.4 0.11.1 / 2015-01-20 Fix root path disclosure 0.11.0 / 2015-01-05 deps: debug@~2.1.1 deps: etag@~1.5.1 deps: crc@3.2.1 deps: ms@0.7.0 Add milliseconds Add msecs Add secs Add mins Add hrs Add yrs deps: on-finished@~2.2.0 0.10.1 / 2014-10-22 deps: on-finished@~2.1.1 Fix handling of pipelined requests 0.10.0 / 2014-10-15 deps: debug@~2.1.0 Implement DEBUG_FD env variable support deps: depd@~1.0.0 deps: etag@~1.5.0 Improve string performance Slightly improve speed for weak ETags over 1KB 0.9.3 / 2014-09-24 deps: etag@~1.4.0 Support \"fake\" stats objects 0.9.2 / 2014-09-15 deps: depd@0.4.5 deps: etag@~1.3.1 deps: range-parser@~1.0.2 0.9.1 / 2014-09-07 deps: fresh@0.2.4 0.9.0 / 2014-09-07 Add lastModified option Use etag to generate ETag header deps: debug@~2.0.0 0.8.5 / 2014-09-04 Fix malicious path detection for empty string path 0.8.4 / 2014-09-04 Fix a path traversal issue when using root 0.8.3 / 2014-08-16 deps: destroy@1.0.3 renamed from dethroy deps: on-finished@2.1.0 0.8.2 / 2014-08-14 Work around fd leak in Node.js 0.10 for fs.ReadStream deps: dethroy@1.0.2 0.8.1 / 2014-08-05 Fix extensions behavior when file already has extension 0.8.0 / 2014-08-05 Add extensions option 0.7.4 / 2014-08-04 Fix serving index files without root dir 0.7.3 / 2014-07-29 Fix incorrect 403 on Windows and Node.js 0.11 0.7.2 / 2014-07-27 deps: depd@0.4.4 Work-around v8 generating empty stack traces 0.7.1 / 2014-07-26 deps: depd@0.4.3 Fix exception when global Error.stackTraceLimit is too low 0.7.0 / 2014-07-20 Deprecate hidden option; use dotfiles option Add dotfiles option deps: debug@1.0.4 deps: depd@0.4.2 Add TRACE_DEPRECATION environment variable Remove non-standard grey color from color output Support --no-deprecation argument Support --trace-deprecation argument 0.6.0 / 2014-07-11 Deprecate from option; use root option Deprecate send.etag() -- use etag in options Deprecate send.hidden() -- use hidden in options Deprecate send.index() -- use index in options Deprecate send.maxage() -- use maxAge in options Deprecate send.root() -- use root in options Cap maxAge value to 1 year deps: debug@1.0.3 Add support for multiple wildcards in namespaces 0.5.0 / 2014-06-28 Accept string for maxAge (converted by ms ) Add headers event Include link in default redirect response Use EventEmitter.listenerCount to count listeners 0.4.3 / 2014-06-11 Do not throw un-catchable error on file open race condition Use escape-html for HTML escaping deps: debug@1.0.2 fix some debugging output colors on node.js 0.8 deps: finished@1.2.2 deps: fresh@0.2.2 0.4.2 / 2014-06-09 fix \"event emitter leak\" warnings deps: debug@1.0.1 deps: finished@1.2.1 0.4.1 / 2014-06-02 Send max-age in Cache-Control in correct format 0.4.0 / 2014-05-27 Calculate ETag with md5 for reduced collisions Fix wrong behavior when index file matches directory Ignore stream errors after request ends Goodbye EBADF, read Skip directories in index file search deps: debug@0.8.1 0.3.0 / 2014-04-24 Fix sending files with dots without root set Coerce option types Accept API options in options object Set etags to \"weak\" Include file path in etag Make \"Can't set headers after they are sent.\" catchable Send full entity-body for multi range requests Default directory access to 403 when index disabled Support multiple index paths Support \"If-Range\" header Control whether to generate etags deps: mime@1.2.11 0.2.0 / 2014-01-29 update range-parser and fresh 0.1.4 / 2013-08-11 update fresh 0.1.3 / 2013-07-08 Revert \"Fix fd leak\" 0.1.2 / 2013-07-03 Fix fd leak 0.1.0 / 2012-08-25 add options parameter to send() that is passed to fs.createReadStream() [kanongil] 0.0.4 / 2012-08-16 allow custom \"Accept-Ranges\" definition 0.0.3 / 2012-07-16 fix normalization of the root directory. Closes #3 0.0.2 / 2012-07-09 add passing of req explicitly for now (YUCK) 0.0.1 / 2010-01-03 Initial release","title":"1.2.0 / 2025-03-27"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#120-2025-03-27","text":"deps: mime-types@^3.0.1 fresh@^2.0.0 removed destroy remove getHeaderNames() polyfill and refactor clearHeaders()","title":"1.2.0 / 2025-03-27"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#110-2024-09-10","text":"Changes from 0.19.0","title":"1.1.0 / 2024-09-10"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#100-2024-07-25","text":"Drop support for Node.js <18.0 statuses@^2.0.1 range-parser@^1.2.1 on-finished@^2.4.1 ms@^2.1.3 mime-types@^2.1.35 http-errors@^2.0.0 fresh@^0.5.2 etag@^1.8.1 escape-html@^1.0.3 encodeurl@^2.0.0 destroy@^1.2.0 debug@^4.3.5","title":"1.0.0 / 2024-07-25"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#100-beta2-2024-03-04","text":"Changes from 0.18.0","title":"1.0.0-beta.2 / 2024-03-04"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#100-beta1-2022-02-04","text":"Drop support for Node.js 0.8 Remove hidden option -- use dotfiles option Remove from alias to root -- use root directly Remove send.etag() -- use etag in options Remove send.index() -- use index in options Remove send.maxage() -- use maxAge in options Remove send.root() -- use root in options Use mime-types for file to content type mapping -- removed send.mime deps: debug@3.1.0 Add DEBUG_HIDE_DATE environment variable Change timer to per-namespace instead of global Change non-TTY date format Remove DEBUG_FD environment variable support Support 256 namespace colors","title":"1.0.0-beta.1 / 2022-02-04"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0190-2024-09-10","text":"Remove link renderization in html while redirecting","title":"0.19.0 / 2024-09-10"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0180-2022-03-23","text":"Fix emitted 416 error missing headers property Limit the headers removed for 304 response deps: depd@2.0.0 Replace internal eval usage with Function constructor Use instance methods on process to check for listeners deps: destroy@1.2.0 deps: http-errors@2.0.0 deps: depd@2.0.0 deps: statuses@2.0.1 deps: on-finished@2.4.1 deps: statuses@2.0.1","title":"0.18.0 / 2022-03-23"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0172-2021-12-11","text":"pref: ignore empty http tokens deps: http-errors@1.8.1 deps: inherits@2.0.4 deps: toidentifier@1.0.1 deps: setprototypeof@1.2.0 deps: ms@2.1.3","title":"0.17.2 / 2021-12-11"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0171-2019-05-10","text":"Set stricter CSP header in redirect & error responses deps: range-parser@~1.2.1","title":"0.17.1 / 2019-05-10"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0170-2019-05-03","text":"deps: http-errors@~1.7.2 Set constructor name when possible Use toidentifier module to make class names deps: depd@~1.1.2 deps: setprototypeof@1.1.1 deps: statuses@'>= 1.5.0 < 2' deps: mime@1.6.0 Add extensions for JPEG-2000 images Add new font/* types from IANA Add WASM mapping Update .bdoc to application/bdoc Update .bmp to image/bmp Update .m4a to audio/mp4 Update .rtf to application/rtf Update .wav to audio/wav Update .xml to application/xml Update generic extensions to application/octet-stream : .deb , .dll , .dmg , .exe , .iso , .msi Use mime-score module to resolve extension conflicts deps: ms@2.1.1 Add week / w support Fix negative number handling deps: statuses@~1.5.0 perf: remove redundant path.normalize call","title":"0.17.0 / 2019-05-03"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0162-2018-02-07","text":"Fix incorrect end tag in default error & redirects deps: depd@~1.1.2 perf: remove argument reassignment deps: encodeurl@~1.0.2 Fix encoding % as last character deps: statuses@~1.4.0","title":"0.16.2 / 2018-02-07"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0161-2017-09-29","text":"Fix regression in edge-case behavior for empty path","title":"0.16.1 / 2017-09-29"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0160-2017-09-27","text":"Add immutable option Fix missing </html> in default error & redirects Use instance methods on steam to check for listeners deps: mime@1.4.1 Add 70 new types for file extensions Set charset as \"UTF-8\" for .js and .json perf: improve path validation speed","title":"0.16.0 / 2017-09-27"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0156-2017-09-22","text":"deps: debug@2.6.9 perf: improve If-Match token parsing","title":"0.15.6 / 2017-09-22"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0155-2017-09-20","text":"deps: etag@~1.8.1 perf: replace regular expression with substring deps: fresh@0.5.2 Fix handling of modified headers with invalid dates perf: improve ETag match loop perf: improve If-None-Match token parsing","title":"0.15.5 / 2017-09-20"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0154-2017-08-05","text":"deps: debug@2.6.8 deps: depd@~1.1.1 Remove unnecessary Buffer loading deps: http-errors@~1.6.2 deps: depd@1.1.1","title":"0.15.4 / 2017-08-05"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0153-2017-05-16","text":"deps: debug@2.6.7 deps: ms@2.0.0 deps: ms@2.0.0","title":"0.15.3 / 2017-05-16"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0152-2017-04-26","text":"deps: debug@2.6.4 Fix DEBUG_MAX_ARRAY_LENGTH deps: ms@0.7.3 deps: ms@1.0.0","title":"0.15.2 / 2017-04-26"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0151-2017-03-04","text":"Fix issue when Date.parse does not return NaN on invalid date Fix strict violation in broken environments","title":"0.15.1 / 2017-03-04"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0150-2017-02-25","text":"Support If-Match and If-Unmodified-Since headers Add res and path arguments to directory event Remove usage of res._headers private field Improves compatibility with Node.js 8 nightly Send complete HTML document in redirect & error responses Set default CSP header in redirect & error responses Use res.getHeaderNames() when available Use res.headersSent when available deps: debug@2.6.1 Allow colors in workers Deprecated DEBUG_FD environment variable set to 3 or higher Fix error when running under React Native Use same color for same namespace deps: ms@0.7.2 deps: etag@~1.8.0 deps: fresh@0.5.0 Fix false detection of no-cache request directive Fix incorrect result when If-None-Match has both * and ETags Fix weak ETag matching to match spec perf: delay reading header values until needed perf: enable strict mode perf: hoist regular expressions perf: remove duplicate conditional perf: remove unnecessary boolean coercions perf: skip checking modified time if ETag check failed perf: skip parsing If-None-Match when no ETag header perf: use Date.parse instead of new Date deps: http-errors@~1.6.1 Make message property enumerable for HttpError s deps: setprototypeof@1.0.3","title":"0.15.0 / 2017-02-25"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0142-2017-01-23","text":"deps: http-errors@~1.5.1 deps: inherits@2.0.3 deps: setprototypeof@1.0.2 deps: statuses@'>= 1.3.1 < 2' deps: ms@0.7.2 deps: statuses@~1.3.1","title":"0.14.2 / 2017-01-23"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0141-2016-06-09","text":"Fix redirect error when path contains raw non-URL characters Fix redirect when path starts with multiple forward slashes","title":"0.14.1 / 2016-06-09"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0140-2016-06-06","text":"Add acceptRanges option Add cacheControl option Attempt to combine multiple ranges into single range Correctly inherit from Stream class Fix Content-Range header in 416 responses when using start / end options Fix Content-Range header missing from default 416 responses Ignore non-byte Range headers deps: http-errors@~1.5.0 Add HttpError export, for err instanceof createError.HttpError Support new code 421 Misdirected Request Use setprototypeof module to replace __proto__ setting deps: inherits@2.0.1 deps: statuses@'>= 1.3.0 < 2' perf: enable strict mode deps: range-parser@~1.2.0 Fix incorrectly returning -1 when there is at least one valid range perf: remove internal function deps: statuses@~1.3.0 Add 421 Misdirected Request perf: enable strict mode perf: remove argument reassignment","title":"0.14.0 / 2016-06-06"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0132-2016-03-05","text":"Fix invalid Content-Type header when send.mime.default_type unset","title":"0.13.2 / 2016-03-05"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0131-2016-01-16","text":"deps: depd@~1.1.0 Support web browser loading perf: enable strict mode deps: destroy@~1.0.4 perf: enable strict mode deps: escape-html@~1.0.3 perf: enable strict mode perf: optimize string replacement perf: use faster string coercion deps: range-parser@~1.0.3 perf: enable strict mode","title":"0.13.1 / 2016-01-16"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0130-2015-06-16","text":"Allow Node.js HTTP server to set Date response header Fix incorrectly removing Content-Location on 304 response Improve the default redirect response headers Send appropriate headers on default error response Use http-errors for standard emitted errors Use statuses instead of http module for status messages deps: escape-html@1.0.2 deps: etag@~1.7.0 Improve stat performance by removing hashing deps: fresh@0.3.0 Add weak ETag matching support deps: on-finished@~2.3.0 Add defined behavior for HTTP CONNECT requests Add defined behavior for HTTP Upgrade requests deps: ee-first@1.1.1 perf: enable strict mode perf: remove unnecessary array allocations","title":"0.13.0 / 2015-06-16"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0123-2015-05-13","text":"deps: debug@~2.2.0 deps: ms@0.7.1 deps: depd@~1.0.1 deps: etag@~1.6.0 Improve support for JXcore Support \"fake\" stats objects in environments without fs deps: ms@0.7.1 Prevent extraordinarily long inputs deps: on-finished@~2.2.1","title":"0.12.3 / 2015-05-13"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0122-2015-03-13","text":"Throw errors early for invalid extensions or index options deps: debug@~2.1.3 Fix high intensity foreground color for bold deps: ms@0.7.0","title":"0.12.2 / 2015-03-13"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0121-2015-02-17","text":"Fix regression sending zero-length files","title":"0.12.1 / 2015-02-17"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0120-2015-02-16","text":"Always read the stat size from the file Fix mutating passed-in options deps: mime@1.3.4","title":"0.12.0 / 2015-02-16"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0111-2015-01-20","text":"Fix root path disclosure","title":"0.11.1 / 2015-01-20"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0110-2015-01-05","text":"deps: debug@~2.1.1 deps: etag@~1.5.1 deps: crc@3.2.1 deps: ms@0.7.0 Add milliseconds Add msecs Add secs Add mins Add hrs Add yrs deps: on-finished@~2.2.0","title":"0.11.0 / 2015-01-05"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0101-2014-10-22","text":"deps: on-finished@~2.1.1 Fix handling of pipelined requests","title":"0.10.1 / 2014-10-22"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0100-2014-10-15","text":"deps: debug@~2.1.0 Implement DEBUG_FD env variable support deps: depd@~1.0.0 deps: etag@~1.5.0 Improve string performance Slightly improve speed for weak ETags over 1KB","title":"0.10.0 / 2014-10-15"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#093-2014-09-24","text":"deps: etag@~1.4.0 Support \"fake\" stats objects","title":"0.9.3 / 2014-09-24"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#092-2014-09-15","text":"deps: depd@0.4.5 deps: etag@~1.3.1 deps: range-parser@~1.0.2","title":"0.9.2 / 2014-09-15"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#091-2014-09-07","text":"deps: fresh@0.2.4","title":"0.9.1 / 2014-09-07"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#090-2014-09-07","text":"Add lastModified option Use etag to generate ETag header deps: debug@~2.0.0","title":"0.9.0 / 2014-09-07"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#085-2014-09-04","text":"Fix malicious path detection for empty string path","title":"0.8.5 / 2014-09-04"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#084-2014-09-04","text":"Fix a path traversal issue when using root","title":"0.8.4 / 2014-09-04"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#083-2014-08-16","text":"deps: destroy@1.0.3 renamed from dethroy deps: on-finished@2.1.0","title":"0.8.3 / 2014-08-16"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#082-2014-08-14","text":"Work around fd leak in Node.js 0.10 for fs.ReadStream deps: dethroy@1.0.2","title":"0.8.2 / 2014-08-14"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#081-2014-08-05","text":"Fix extensions behavior when file already has extension","title":"0.8.1 / 2014-08-05"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#080-2014-08-05","text":"Add extensions option","title":"0.8.0 / 2014-08-05"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#074-2014-08-04","text":"Fix serving index files without root dir","title":"0.7.4 / 2014-08-04"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#073-2014-07-29","text":"Fix incorrect 403 on Windows and Node.js 0.11","title":"0.7.3 / 2014-07-29"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#072-2014-07-27","text":"deps: depd@0.4.4 Work-around v8 generating empty stack traces","title":"0.7.2 / 2014-07-27"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#071-2014-07-26","text":"deps: depd@0.4.3 Fix exception when global Error.stackTraceLimit is too low","title":"0.7.1 / 2014-07-26"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#070-2014-07-20","text":"Deprecate hidden option; use dotfiles option Add dotfiles option deps: debug@1.0.4 deps: depd@0.4.2 Add TRACE_DEPRECATION environment variable Remove non-standard grey color from color output Support --no-deprecation argument Support --trace-deprecation argument","title":"0.7.0 / 2014-07-20"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#060-2014-07-11","text":"Deprecate from option; use root option Deprecate send.etag() -- use etag in options Deprecate send.hidden() -- use hidden in options Deprecate send.index() -- use index in options Deprecate send.maxage() -- use maxAge in options Deprecate send.root() -- use root in options Cap maxAge value to 1 year deps: debug@1.0.3 Add support for multiple wildcards in namespaces","title":"0.6.0 / 2014-07-11"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#050-2014-06-28","text":"Accept string for maxAge (converted by ms ) Add headers event Include link in default redirect response Use EventEmitter.listenerCount to count listeners","title":"0.5.0 / 2014-06-28"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#043-2014-06-11","text":"Do not throw un-catchable error on file open race condition Use escape-html for HTML escaping deps: debug@1.0.2 fix some debugging output colors on node.js 0.8 deps: finished@1.2.2 deps: fresh@0.2.2","title":"0.4.3 / 2014-06-11"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#042-2014-06-09","text":"fix \"event emitter leak\" warnings deps: debug@1.0.1 deps: finished@1.2.1","title":"0.4.2 / 2014-06-09"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#041-2014-06-02","text":"Send max-age in Cache-Control in correct format","title":"0.4.1 / 2014-06-02"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#040-2014-05-27","text":"Calculate ETag with md5 for reduced collisions Fix wrong behavior when index file matches directory Ignore stream errors after request ends Goodbye EBADF, read Skip directories in index file search deps: debug@0.8.1","title":"0.4.0 / 2014-05-27"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#030-2014-04-24","text":"Fix sending files with dots without root set Coerce option types Accept API options in options object Set etags to \"weak\" Include file path in etag Make \"Can't set headers after they are sent.\" catchable Send full entity-body for multi range requests Default directory access to 403 when index disabled Support multiple index paths Support \"If-Range\" header Control whether to generate etags deps: mime@1.2.11","title":"0.3.0 / 2014-04-24"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#020-2014-01-29","text":"update range-parser and fresh","title":"0.2.0 / 2014-01-29"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#014-2013-08-11","text":"update fresh","title":"0.1.4 / 2013-08-11"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#013-2013-07-08","text":"Revert \"Fix fd leak\"","title":"0.1.3 / 2013-07-08"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#012-2013-07-03","text":"Fix fd leak","title":"0.1.2 / 2013-07-03"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#010-2012-08-25","text":"add options parameter to send() that is passed to fs.createReadStream() [kanongil]","title":"0.1.0 / 2012-08-25"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#004-2012-08-16","text":"allow custom \"Accept-Ranges\" definition","title":"0.0.4 / 2012-08-16"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#003-2012-07-16","text":"fix normalization of the root directory. Closes #3","title":"0.0.3 / 2012-07-16"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#002-2012-07-09","text":"add passing of req explicitly for now (YUCK)","title":"0.0.2 / 2012-07-09"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#001-2010-01-03","text":"Initial release","title":"0.0.1 / 2010-01-03"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/","text":"serve-static Install This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install serve-static API var serveStatic = require ( 'serve-static' ) serveStatic(root, options) Create a new middleware function to serve files from within a given root directory. The file to serve will be determined by combining req.url with the provided root directory. When a file is not found, instead of sending a 404 response, this module will instead call next() to move on to the next middleware, allowing for stacking and fall-backs. Options acceptRanges Enable or disable accepting ranged requests, defaults to true. Disabling this will not send Accept-Ranges and ignore the contents of the Range request header. cacheControl Enable or disable setting Cache-Control response header, defaults to true. Disabling this will ignore the immutable and maxAge options. dotfiles Set how \"dotfiles\" are treated when encountered. A dotfile is a file or directory that begins with a dot (\".\"). Note this check is done on the path itself without checking if the path actually exists on the disk. If root is specified, only the dotfiles above the root are checked (i.e. the root itself can be within a dotfile when set to \"deny\"). 'allow' No special treatment for dotfiles. 'deny' Deny a request for a dotfile and 403/ next() . 'ignore' Pretend like the dotfile does not exist and 404/ next() . The default value is 'ignore' . etag Enable or disable etag generation, defaults to true. extensions Set file extension fallbacks. When set, if a file is not found, the given extensions will be added to the file name and search for. The first that exists will be served. Example: ['html', 'htm'] . The default value is false . fallthrough Set the middleware to have client errors fall-through as just unhandled requests, otherwise forward a client error. The difference is that client errors like a bad request or a request to a non-existent file will cause this middleware to simply next() to your next middleware when this value is true . When this value is false , these errors (even 404s), will invoke next(err) . Typically true is desired such that multiple physical directories can be mapped to the same web address or for routes to fill in non-existent files. The value false can be used if this middleware is mounted at a path that is designed to be strictly a single file system directory, which allows for short-circuiting 404s for less overhead. This middleware will also reply to all methods. The default value is true . immutable Enable or disable the immutable directive in the Cache-Control response header, defaults to false . If set to true , the maxAge option should also be specified to enable caching. The immutable directive will prevent supported clients from making conditional requests during the life of the maxAge option to check if the file has changed. index By default this module will send \"index.html\" files in response to a request on a directory. To disable this set false or to supply a new index pass a string or an array in preferred order. lastModified Enable or disable Last-Modified header, defaults to true. Uses the file system's last modified value. maxAge Provide a max-age in milliseconds for http caching, defaults to 0. This can also be a string accepted by the ms module. redirect Redirect to trailing \"/\" when the pathname is a dir. Defaults to true . setHeaders Function to set custom headers on response. Alterations to the headers need to occur synchronously. The function is called as fn(res, path, stat) , where the arguments are: res the response object path the file path that is being sent stat the stat object of the file that is being sent Examples Serve files with vanilla node.js http server var finalhandler = require ( 'finalhandler' ) var http = require ( 'http' ) var serveStatic = require ( 'serve-static' ) // Serve up public/ftp folder var serve = serveStatic ( 'public/ftp' , { index : [ 'index.html' , 'index.htm' ] }) // Create server var server = http . createServer ( function onRequest ( req , res ) { serve ( req , res , finalhandler ( req , res )) }) // Listen server . listen ( 3000 ) Serve all files as downloads var contentDisposition = require ( 'content-disposition' ) var finalhandler = require ( 'finalhandler' ) var http = require ( 'http' ) var serveStatic = require ( 'serve-static' ) // Serve up public/ftp folder var serve = serveStatic ( 'public/ftp' , { index : false , setHeaders : setHeaders }) // Set header to force download function setHeaders ( res , path ) { res . setHeader ( 'Content-Disposition' , contentDisposition ( path )) } // Create server var server = http . createServer ( function onRequest ( req , res ) { serve ( req , res , finalhandler ( req , res )) }) // Listen server . listen ( 3000 ) Serving using express Simple This is a simple example of using Express. var express = require ( 'express' ) var serveStatic = require ( 'serve-static' ) var app = express () app . use ( serveStatic ( 'public/ftp' , { index : [ 'default.html' , 'default.htm' ] })) app . listen ( 3000 ) Multiple roots This example shows a simple way to search through multiple directories. Files are searched for in public-optimized/ first, then public/ second as a fallback. var express = require ( 'express' ) var path = require ( 'path' ) var serveStatic = require ( 'serve-static' ) var app = express () app . use ( serveStatic ( path . join ( __dirname , 'public-optimized' ))) app . use ( serveStatic ( path . join ( __dirname , 'public' ))) app . listen ( 3000 ) Different settings for paths This example shows how to set a different max age depending on the served file. In this example, HTML files are not cached, while everything else is for 1 day. var express = require ( 'express' ) var path = require ( 'path' ) var serveStatic = require ( 'serve-static' ) var app = express () app . use ( serveStatic ( path . join ( __dirname , 'public' ), { maxAge : '1d' , setHeaders : setCustomCacheControl })) app . listen ( 3000 ) function setCustomCacheControl ( res , file ) { if ( path . extname ( file ) === '.html' ) { // Custom Cache-Control for HTML files res . setHeader ( 'Cache-Control' , 'public, max-age=0' ) } } License MIT","title":"serve-static"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#serve-static","text":"","title":"serve-static"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#install","text":"This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install serve-static","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#api","text":"var serveStatic = require ( 'serve-static' )","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#servestaticroot-options","text":"Create a new middleware function to serve files from within a given root directory. The file to serve will be determined by combining req.url with the provided root directory. When a file is not found, instead of sending a 404 response, this module will instead call next() to move on to the next middleware, allowing for stacking and fall-backs.","title":"serveStatic(root, options)"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#options","text":"","title":"Options"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#acceptranges","text":"Enable or disable accepting ranged requests, defaults to true. Disabling this will not send Accept-Ranges and ignore the contents of the Range request header.","title":"acceptRanges"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#cachecontrol","text":"Enable or disable setting Cache-Control response header, defaults to true. Disabling this will ignore the immutable and maxAge options.","title":"cacheControl"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#dotfiles","text":"Set how \"dotfiles\" are treated when encountered. A dotfile is a file or directory that begins with a dot (\".\"). Note this check is done on the path itself without checking if the path actually exists on the disk. If root is specified, only the dotfiles above the root are checked (i.e. the root itself can be within a dotfile when set to \"deny\"). 'allow' No special treatment for dotfiles. 'deny' Deny a request for a dotfile and 403/ next() . 'ignore' Pretend like the dotfile does not exist and 404/ next() . The default value is 'ignore' .","title":"dotfiles"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#etag","text":"Enable or disable etag generation, defaults to true.","title":"etag"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#extensions","text":"Set file extension fallbacks. When set, if a file is not found, the given extensions will be added to the file name and search for. The first that exists will be served. Example: ['html', 'htm'] . The default value is false .","title":"extensions"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#fallthrough","text":"Set the middleware to have client errors fall-through as just unhandled requests, otherwise forward a client error. The difference is that client errors like a bad request or a request to a non-existent file will cause this middleware to simply next() to your next middleware when this value is true . When this value is false , these errors (even 404s), will invoke next(err) . Typically true is desired such that multiple physical directories can be mapped to the same web address or for routes to fill in non-existent files. The value false can be used if this middleware is mounted at a path that is designed to be strictly a single file system directory, which allows for short-circuiting 404s for less overhead. This middleware will also reply to all methods. The default value is true .","title":"fallthrough"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#immutable","text":"Enable or disable the immutable directive in the Cache-Control response header, defaults to false . If set to true , the maxAge option should also be specified to enable caching. The immutable directive will prevent supported clients from making conditional requests during the life of the maxAge option to check if the file has changed.","title":"immutable"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#index","text":"By default this module will send \"index.html\" files in response to a request on a directory. To disable this set false or to supply a new index pass a string or an array in preferred order.","title":"index"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#lastmodified","text":"Enable or disable Last-Modified header, defaults to true. Uses the file system's last modified value.","title":"lastModified"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#maxage","text":"Provide a max-age in milliseconds for http caching, defaults to 0. This can also be a string accepted by the ms module.","title":"maxAge"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#redirect","text":"Redirect to trailing \"/\" when the pathname is a dir. Defaults to true .","title":"redirect"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#setheaders","text":"Function to set custom headers on response. Alterations to the headers need to occur synchronously. The function is called as fn(res, path, stat) , where the arguments are: res the response object path the file path that is being sent stat the stat object of the file that is being sent","title":"setHeaders"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#examples","text":"","title":"Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#serve-files-with-vanilla-nodejs-http-server","text":"var finalhandler = require ( 'finalhandler' ) var http = require ( 'http' ) var serveStatic = require ( 'serve-static' ) // Serve up public/ftp folder var serve = serveStatic ( 'public/ftp' , { index : [ 'index.html' , 'index.htm' ] }) // Create server var server = http . createServer ( function onRequest ( req , res ) { serve ( req , res , finalhandler ( req , res )) }) // Listen server . listen ( 3000 )","title":"Serve files with vanilla node.js http server"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#serve-all-files-as-downloads","text":"var contentDisposition = require ( 'content-disposition' ) var finalhandler = require ( 'finalhandler' ) var http = require ( 'http' ) var serveStatic = require ( 'serve-static' ) // Serve up public/ftp folder var serve = serveStatic ( 'public/ftp' , { index : false , setHeaders : setHeaders }) // Set header to force download function setHeaders ( res , path ) { res . setHeader ( 'Content-Disposition' , contentDisposition ( path )) } // Create server var server = http . createServer ( function onRequest ( req , res ) { serve ( req , res , finalhandler ( req , res )) }) // Listen server . listen ( 3000 )","title":"Serve all files as downloads"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#serving-using-express","text":"","title":"Serving using express"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#simple","text":"This is a simple example of using Express. var express = require ( 'express' ) var serveStatic = require ( 'serve-static' ) var app = express () app . use ( serveStatic ( 'public/ftp' , { index : [ 'default.html' , 'default.htm' ] })) app . listen ( 3000 )","title":"Simple"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#multiple-roots","text":"This example shows a simple way to search through multiple directories. Files are searched for in public-optimized/ first, then public/ second as a fallback. var express = require ( 'express' ) var path = require ( 'path' ) var serveStatic = require ( 'serve-static' ) var app = express () app . use ( serveStatic ( path . join ( __dirname , 'public-optimized' ))) app . use ( serveStatic ( path . join ( __dirname , 'public' ))) app . listen ( 3000 )","title":"Multiple roots"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#different-settings-for-paths","text":"This example shows how to set a different max age depending on the served file. In this example, HTML files are not cached, while everything else is for 1 day. var express = require ( 'express' ) var path = require ( 'path' ) var serveStatic = require ( 'serve-static' ) var app = express () app . use ( serveStatic ( path . join ( __dirname , 'public' ), { maxAge : '1d' , setHeaders : setCustomCacheControl })) app . listen ( 3000 ) function setCustomCacheControl ( res , file ) { if ( path . extname ( file ) === '.html' ) { // Custom Cache-Control for HTML files res . setHeader ( 'Cache-Control' , 'public, max-age=0' ) } }","title":"Different settings for paths"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/","text":"2.2.0 / 2025-03-27 deps: send@^1.2.0 2.1.0 / 2024-09-10 Changes from 1.16.0 deps: send@^1.2.0 2.0.0 / 2024-08-23 deps: parseurl@^1.3.3 excape-html@^1.0.3 encodeurl@^2.0.0 supertest@^6.3.4 safe-buffer@^5.2.1 nyc@^17.0.0 mocha@^10.7.0 Changes from 1.x 2.0.0-beta.2 / 2024-03-20 deps: send@1.0.0-beta.2 2.0.0-beta.1 / 2022-02-05 Change dotfiles option default to 'ignore' Drop support for Node.js 0.8 Remove hidden option; use dotfiles option instead Remove mime export; use mime-types package instead deps: send@1.0.0-beta.1 Use mime-types for file to content type mapping deps: debug@3.1.0 1.16.0 / 2024-09-10 Remove link renderization in html while redirecting 1.15.0 / 2022-03-24 deps: send@0.18.0 Fix emitted 416 error missing headers property Limit the headers removed for 304 response deps: depd@2.0.0 deps: destroy@1.2.0 deps: http-errors@2.0.0 deps: on-finished@2.4.1 deps: statuses@2.0.1 1.14.2 / 2021-12-15 deps: send@0.17.2 deps: http-errors@1.8.1 deps: ms@2.1.3 pref: ignore empty http tokens 1.14.1 / 2019-05-10 Set stricter CSP header in redirect response deps: send@0.17.1 deps: range-parser@~1.2.1 1.14.0 / 2019-05-07 deps: parseurl@~1.3.3 deps: send@0.17.0 deps: http-errors@~1.7.2 deps: mime@1.6.0 deps: ms@2.1.1 deps: statuses@~1.5.0 perf: remove redundant path.normalize call 1.13.2 / 2018-02-07 Fix incorrect end tag in redirects deps: encodeurl@~1.0.2 Fix encoding % as last character deps: send@0.16.2 deps: depd@~1.1.2 deps: encodeurl@~1.0.2 deps: statuses@~1.4.0 1.13.1 / 2017-09-29 Fix regression when root is incorrectly set to a file deps: send@0.16.1 1.13.0 / 2017-09-27 deps: send@0.16.0 Add 70 new types for file extensions Add immutable option Fix missing </html> in default error & redirects Set charset as \"UTF-8\" for .js and .json Use instance methods on steam to check for listeners deps: mime@1.4.1 perf: improve path validation speed 1.12.6 / 2017-09-22 deps: send@0.15.6 deps: debug@2.6.9 perf: improve If-Match token parsing perf: improve slash collapsing 1.12.5 / 2017-09-21 deps: parseurl@~1.3.2 perf: reduce overhead for full URLs perf: unroll the \"fast-path\" RegExp deps: send@0.15.5 Fix handling of modified headers with invalid dates deps: etag@~1.8.1 deps: fresh@0.5.2 1.12.4 / 2017-08-05 deps: send@0.15.4 deps: debug@2.6.8 deps: depd@~1.1.1 deps: http-errors@~1.6.2 1.12.3 / 2017-05-16 deps: send@0.15.3 deps: debug@2.6.7 1.12.2 / 2017-04-26 deps: send@0.15.2 deps: debug@2.6.4 1.12.1 / 2017-03-04 deps: send@0.15.1 Fix issue when Date.parse does not return NaN on invalid date Fix strict violation in broken environments 1.12.0 / 2017-02-25 Send complete HTML document in redirect response Set default CSP header in redirect response deps: send@0.15.0 Fix false detection of no-cache request directive Fix incorrect result when If-None-Match has both * and ETags Fix weak ETag matching to match spec Remove usage of res._headers private field Support If-Match and If-Unmodified-Since headers Use res.getHeaderNames() when available Use res.headersSent when available deps: debug@2.6.1 deps: etag@~1.8.0 deps: fresh@0.5.0 deps: http-errors@~1.6.1 1.11.2 / 2017-01-23 deps: send@0.14.2 deps: http-errors@~1.5.1 deps: ms@0.7.2 deps: statuses@~1.3.1 1.11.1 / 2016-06-10 Fix redirect error when req.url contains raw non-URL characters deps: send@0.14.1 1.11.0 / 2016-06-07 Use status code 301 for redirects deps: send@0.14.0 Add acceptRanges option Add cacheControl option Attempt to combine multiple ranges into single range Correctly inherit from Stream class Fix Content-Range header in 416 responses when using start / end options Fix Content-Range header missing from default 416 responses Ignore non-byte Range headers deps: http-errors@~1.5.0 deps: range-parser@~1.2.0 deps: statuses@~1.3.0 perf: remove argument reassignment 1.10.3 / 2016-05-30 deps: send@0.13.2 Fix invalid Content-Type header when send.mime.default_type unset 1.10.2 / 2016-01-19 deps: parseurl@~1.3.1 perf: enable strict mode 1.10.1 / 2016-01-16 deps: escape-html@~1.0.3 perf: enable strict mode perf: optimize string replacement perf: use faster string coercion deps: send@0.13.1 deps: depd@~1.1.0 deps: destroy@~1.0.4 deps: escape-html@~1.0.3 deps: range-parser@~1.0.3 1.10.0 / 2015-06-17 Add fallthrough option Allows declaring this middleware is the final destination Provides better integration with Express patterns Fix reading options from options prototype Improve the default redirect response headers deps: escape-html@1.0.2 deps: send@0.13.0 Allow Node.js HTTP server to set Date response header Fix incorrectly removing Content-Location on 304 response Improve the default redirect response headers Send appropriate headers on default error response Use http-errors for standard emitted errors Use statuses instead of http module for status messages deps: escape-html@1.0.2 deps: etag@~1.7.0 deps: fresh@0.3.0 deps: on-finished@~2.3.0 perf: enable strict mode perf: remove unnecessary array allocations perf: enable strict mode perf: remove argument reassignment 1.9.3 / 2015-05-14 deps: send@0.12.3 deps: debug@~2.2.0 deps: depd@~1.0.1 deps: etag@~1.6.0 deps: ms@0.7.1 deps: on-finished@~2.2.1 1.9.2 / 2015-03-14 deps: send@0.12.2 Throw errors early for invalid extensions or index options deps: debug@~2.1.3 1.9.1 / 2015-02-17 deps: send@0.12.1 Fix regression sending zero-length files 1.9.0 / 2015-02-16 deps: send@0.12.0 Always read the stat size from the file Fix mutating passed-in options deps: mime@1.3.4 1.8.1 / 2015-01-20 Fix redirect loop in Node.js 0.11.14 deps: send@0.11.1 Fix root path disclosure 1.8.0 / 2015-01-05 deps: send@0.11.0 deps: debug@~2.1.1 deps: etag@~1.5.1 deps: ms@0.7.0 deps: on-finished@~2.2.0 1.7.2 / 2015-01-02 Fix potential open redirect when mounted at root 1.7.1 / 2014-10-22 deps: send@0.10.1 deps: on-finished@~2.1.1 1.7.0 / 2014-10-15 deps: send@0.10.0 deps: debug@~2.1.0 deps: depd@~1.0.0 deps: etag@~1.5.0 1.6.5 / 2015-02-04 Fix potential open redirect when mounted at root Back-ported from v1.7.2 1.6.4 / 2014-10-08 Fix redirect loop when index file serving disabled 1.6.3 / 2014-09-24 deps: send@0.9.3 deps: etag@~1.4.0 1.6.2 / 2014-09-15 deps: send@0.9.2 deps: depd@0.4.5 deps: etag@~1.3.1 deps: range-parser@~1.0.2 1.6.1 / 2014-09-07 deps: send@0.9.1 deps: fresh@0.2.4 1.6.0 / 2014-09-07 deps: send@0.9.0 Add lastModified option Use etag to generate ETag header deps: debug@~2.0.0 1.5.4 / 2014-09-04 deps: send@0.8.5 Fix a path traversal issue when using root Fix malicious path detection for empty string path 1.5.3 / 2014-08-17 deps: send@0.8.3 1.5.2 / 2014-08-14 deps: send@0.8.2 Work around fd leak in Node.js 0.10 for fs.ReadStream 1.5.1 / 2014-08-09 Fix parsing of weird req.originalUrl values deps: parseurl@~1.3.0 deps: utils-merge@1.0.0 1.5.0 / 2014-08-05 deps: send@0.8.1 Add extensions option 1.4.4 / 2014-08-04 deps: send@0.7.4 Fix serving index files without root dir 1.4.3 / 2014-07-29 deps: send@0.7.3 Fix incorrect 403 on Windows and Node.js 0.11 1.4.2 / 2014-07-27 deps: send@0.7.2 deps: depd@0.4.4 1.4.1 / 2014-07-26 deps: send@0.7.1 deps: depd@0.4.3 1.4.0 / 2014-07-21 deps: parseurl@~1.2.0 Cache URLs based on original value Remove no-longer-needed URL mis-parse work-around Simplify the \"fast-path\" RegExp deps: send@0.7.0 Add dotfiles option deps: debug@1.0.4 deps: depd@0.4.2 1.3.2 / 2014-07-11 deps: send@0.6.0 Cap maxAge value to 1 year deps: debug@1.0.3 1.3.1 / 2014-07-09 deps: parseurl@~1.1.3 faster parsing of href-only URLs 1.3.0 / 2014-06-28 Add setHeaders option Include HTML link in redirect response deps: send@0.5.0 Accept string for maxAge (converted by ms ) 1.2.3 / 2014-06-11 deps: send@0.4.3 Do not throw un-catchable error on file open race condition Use escape-html for HTML escaping deps: debug@1.0.2 deps: finished@1.2.2 deps: fresh@0.2.2 1.2.2 / 2014-06-09 deps: send@0.4.2 fix \"event emitter leak\" warnings deps: debug@1.0.1 deps: finished@1.2.1 1.2.1 / 2014-06-02 use escape-html for escaping deps: send@0.4.1 Send max-age in Cache-Control in correct format 1.2.0 / 2014-05-29 deps: send@0.4.0 Calculate ETag with md5 for reduced collisions Fix wrong behavior when index file matches directory Ignore stream errors after request ends Skip directories in index file search deps: debug@0.8.1 1.1.0 / 2014-04-24 Accept options directly to send module deps: send@0.3.0 1.0.4 / 2014-04-07 Resolve relative paths at middleware setup Use parseurl to parse the URL from request 1.0.3 / 2014-03-20 Do not rely on connect-like environments 1.0.2 / 2014-03-06 deps: send@0.2.0 1.0.1 / 2014-03-05 Add mime export for back-compat 1.0.0 / 2014-03-05 Genesis from connect","title":"2.2.0 / 2025-03-27"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#220-2025-03-27","text":"deps: send@^1.2.0","title":"2.2.0 / 2025-03-27"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#210-2024-09-10","text":"Changes from 1.16.0 deps: send@^1.2.0","title":"2.1.0 / 2024-09-10"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#200-2024-08-23","text":"deps: parseurl@^1.3.3 excape-html@^1.0.3 encodeurl@^2.0.0 supertest@^6.3.4 safe-buffer@^5.2.1 nyc@^17.0.0 mocha@^10.7.0 Changes from 1.x","title":"2.0.0 / 2024-08-23"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#200-beta2-2024-03-20","text":"deps: send@1.0.0-beta.2","title":"2.0.0-beta.2 / 2024-03-20"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#200-beta1-2022-02-05","text":"Change dotfiles option default to 'ignore' Drop support for Node.js 0.8 Remove hidden option; use dotfiles option instead Remove mime export; use mime-types package instead deps: send@1.0.0-beta.1 Use mime-types for file to content type mapping deps: debug@3.1.0","title":"2.0.0-beta.1 / 2022-02-05"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1160-2024-09-10","text":"Remove link renderization in html while redirecting","title":"1.16.0 / 2024-09-10"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1150-2022-03-24","text":"deps: send@0.18.0 Fix emitted 416 error missing headers property Limit the headers removed for 304 response deps: depd@2.0.0 deps: destroy@1.2.0 deps: http-errors@2.0.0 deps: on-finished@2.4.1 deps: statuses@2.0.1","title":"1.15.0 / 2022-03-24"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1142-2021-12-15","text":"deps: send@0.17.2 deps: http-errors@1.8.1 deps: ms@2.1.3 pref: ignore empty http tokens","title":"1.14.2 / 2021-12-15"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1141-2019-05-10","text":"Set stricter CSP header in redirect response deps: send@0.17.1 deps: range-parser@~1.2.1","title":"1.14.1 / 2019-05-10"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1140-2019-05-07","text":"deps: parseurl@~1.3.3 deps: send@0.17.0 deps: http-errors@~1.7.2 deps: mime@1.6.0 deps: ms@2.1.1 deps: statuses@~1.5.0 perf: remove redundant path.normalize call","title":"1.14.0 / 2019-05-07"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1132-2018-02-07","text":"Fix incorrect end tag in redirects deps: encodeurl@~1.0.2 Fix encoding % as last character deps: send@0.16.2 deps: depd@~1.1.2 deps: encodeurl@~1.0.2 deps: statuses@~1.4.0","title":"1.13.2 / 2018-02-07"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1131-2017-09-29","text":"Fix regression when root is incorrectly set to a file deps: send@0.16.1","title":"1.13.1 / 2017-09-29"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1130-2017-09-27","text":"deps: send@0.16.0 Add 70 new types for file extensions Add immutable option Fix missing </html> in default error & redirects Set charset as \"UTF-8\" for .js and .json Use instance methods on steam to check for listeners deps: mime@1.4.1 perf: improve path validation speed","title":"1.13.0 / 2017-09-27"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1126-2017-09-22","text":"deps: send@0.15.6 deps: debug@2.6.9 perf: improve If-Match token parsing perf: improve slash collapsing","title":"1.12.6 / 2017-09-22"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1125-2017-09-21","text":"deps: parseurl@~1.3.2 perf: reduce overhead for full URLs perf: unroll the \"fast-path\" RegExp deps: send@0.15.5 Fix handling of modified headers with invalid dates deps: etag@~1.8.1 deps: fresh@0.5.2","title":"1.12.5 / 2017-09-21"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1124-2017-08-05","text":"deps: send@0.15.4 deps: debug@2.6.8 deps: depd@~1.1.1 deps: http-errors@~1.6.2","title":"1.12.4 / 2017-08-05"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1123-2017-05-16","text":"deps: send@0.15.3 deps: debug@2.6.7","title":"1.12.3 / 2017-05-16"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1122-2017-04-26","text":"deps: send@0.15.2 deps: debug@2.6.4","title":"1.12.2 / 2017-04-26"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1121-2017-03-04","text":"deps: send@0.15.1 Fix issue when Date.parse does not return NaN on invalid date Fix strict violation in broken environments","title":"1.12.1 / 2017-03-04"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1120-2017-02-25","text":"Send complete HTML document in redirect response Set default CSP header in redirect response deps: send@0.15.0 Fix false detection of no-cache request directive Fix incorrect result when If-None-Match has both * and ETags Fix weak ETag matching to match spec Remove usage of res._headers private field Support If-Match and If-Unmodified-Since headers Use res.getHeaderNames() when available Use res.headersSent when available deps: debug@2.6.1 deps: etag@~1.8.0 deps: fresh@0.5.0 deps: http-errors@~1.6.1","title":"1.12.0 / 2017-02-25"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1112-2017-01-23","text":"deps: send@0.14.2 deps: http-errors@~1.5.1 deps: ms@0.7.2 deps: statuses@~1.3.1","title":"1.11.2 / 2017-01-23"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1111-2016-06-10","text":"Fix redirect error when req.url contains raw non-URL characters deps: send@0.14.1","title":"1.11.1 / 2016-06-10"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1110-2016-06-07","text":"Use status code 301 for redirects deps: send@0.14.0 Add acceptRanges option Add cacheControl option Attempt to combine multiple ranges into single range Correctly inherit from Stream class Fix Content-Range header in 416 responses when using start / end options Fix Content-Range header missing from default 416 responses Ignore non-byte Range headers deps: http-errors@~1.5.0 deps: range-parser@~1.2.0 deps: statuses@~1.3.0 perf: remove argument reassignment","title":"1.11.0 / 2016-06-07"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1103-2016-05-30","text":"deps: send@0.13.2 Fix invalid Content-Type header when send.mime.default_type unset","title":"1.10.3 / 2016-05-30"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1102-2016-01-19","text":"deps: parseurl@~1.3.1 perf: enable strict mode","title":"1.10.2 / 2016-01-19"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1101-2016-01-16","text":"deps: escape-html@~1.0.3 perf: enable strict mode perf: optimize string replacement perf: use faster string coercion deps: send@0.13.1 deps: depd@~1.1.0 deps: destroy@~1.0.4 deps: escape-html@~1.0.3 deps: range-parser@~1.0.3","title":"1.10.1 / 2016-01-16"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1100-2015-06-17","text":"Add fallthrough option Allows declaring this middleware is the final destination Provides better integration with Express patterns Fix reading options from options prototype Improve the default redirect response headers deps: escape-html@1.0.2 deps: send@0.13.0 Allow Node.js HTTP server to set Date response header Fix incorrectly removing Content-Location on 304 response Improve the default redirect response headers Send appropriate headers on default error response Use http-errors for standard emitted errors Use statuses instead of http module for status messages deps: escape-html@1.0.2 deps: etag@~1.7.0 deps: fresh@0.3.0 deps: on-finished@~2.3.0 perf: enable strict mode perf: remove unnecessary array allocations perf: enable strict mode perf: remove argument reassignment","title":"1.10.0 / 2015-06-17"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#193-2015-05-14","text":"deps: send@0.12.3 deps: debug@~2.2.0 deps: depd@~1.0.1 deps: etag@~1.6.0 deps: ms@0.7.1 deps: on-finished@~2.2.1","title":"1.9.3 / 2015-05-14"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#192-2015-03-14","text":"deps: send@0.12.2 Throw errors early for invalid extensions or index options deps: debug@~2.1.3","title":"1.9.2 / 2015-03-14"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#191-2015-02-17","text":"deps: send@0.12.1 Fix regression sending zero-length files","title":"1.9.1 / 2015-02-17"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#190-2015-02-16","text":"deps: send@0.12.0 Always read the stat size from the file Fix mutating passed-in options deps: mime@1.3.4","title":"1.9.0 / 2015-02-16"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#181-2015-01-20","text":"Fix redirect loop in Node.js 0.11.14 deps: send@0.11.1 Fix root path disclosure","title":"1.8.1 / 2015-01-20"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#180-2015-01-05","text":"deps: send@0.11.0 deps: debug@~2.1.1 deps: etag@~1.5.1 deps: ms@0.7.0 deps: on-finished@~2.2.0","title":"1.8.0 / 2015-01-05"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#172-2015-01-02","text":"Fix potential open redirect when mounted at root","title":"1.7.2 / 2015-01-02"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#171-2014-10-22","text":"deps: send@0.10.1 deps: on-finished@~2.1.1","title":"1.7.1 / 2014-10-22"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#170-2014-10-15","text":"deps: send@0.10.0 deps: debug@~2.1.0 deps: depd@~1.0.0 deps: etag@~1.5.0","title":"1.7.0 / 2014-10-15"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#165-2015-02-04","text":"Fix potential open redirect when mounted at root Back-ported from v1.7.2","title":"1.6.5 / 2015-02-04"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#164-2014-10-08","text":"Fix redirect loop when index file serving disabled","title":"1.6.4 / 2014-10-08"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#163-2014-09-24","text":"deps: send@0.9.3 deps: etag@~1.4.0","title":"1.6.3 / 2014-09-24"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#162-2014-09-15","text":"deps: send@0.9.2 deps: depd@0.4.5 deps: etag@~1.3.1 deps: range-parser@~1.0.2","title":"1.6.2 / 2014-09-15"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#161-2014-09-07","text":"deps: send@0.9.1 deps: fresh@0.2.4","title":"1.6.1 / 2014-09-07"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#160-2014-09-07","text":"deps: send@0.9.0 Add lastModified option Use etag to generate ETag header deps: debug@~2.0.0","title":"1.6.0 / 2014-09-07"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#154-2014-09-04","text":"deps: send@0.8.5 Fix a path traversal issue when using root Fix malicious path detection for empty string path","title":"1.5.4 / 2014-09-04"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#153-2014-08-17","text":"deps: send@0.8.3","title":"1.5.3 / 2014-08-17"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#152-2014-08-14","text":"deps: send@0.8.2 Work around fd leak in Node.js 0.10 for fs.ReadStream","title":"1.5.2 / 2014-08-14"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#151-2014-08-09","text":"Fix parsing of weird req.originalUrl values deps: parseurl@~1.3.0 deps: utils-merge@1.0.0","title":"1.5.1 / 2014-08-09"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#150-2014-08-05","text":"deps: send@0.8.1 Add extensions option","title":"1.5.0 / 2014-08-05"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#144-2014-08-04","text":"deps: send@0.7.4 Fix serving index files without root dir","title":"1.4.4 / 2014-08-04"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#143-2014-07-29","text":"deps: send@0.7.3 Fix incorrect 403 on Windows and Node.js 0.11","title":"1.4.3 / 2014-07-29"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#142-2014-07-27","text":"deps: send@0.7.2 deps: depd@0.4.4","title":"1.4.2 / 2014-07-27"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#141-2014-07-26","text":"deps: send@0.7.1 deps: depd@0.4.3","title":"1.4.1 / 2014-07-26"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#140-2014-07-21","text":"deps: parseurl@~1.2.0 Cache URLs based on original value Remove no-longer-needed URL mis-parse work-around Simplify the \"fast-path\" RegExp deps: send@0.7.0 Add dotfiles option deps: debug@1.0.4 deps: depd@0.4.2","title":"1.4.0 / 2014-07-21"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#132-2014-07-11","text":"deps: send@0.6.0 Cap maxAge value to 1 year deps: debug@1.0.3","title":"1.3.2 / 2014-07-11"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#131-2014-07-09","text":"deps: parseurl@~1.1.3 faster parsing of href-only URLs","title":"1.3.1 / 2014-07-09"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#130-2014-06-28","text":"Add setHeaders option Include HTML link in redirect response deps: send@0.5.0 Accept string for maxAge (converted by ms )","title":"1.3.0 / 2014-06-28"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#123-2014-06-11","text":"deps: send@0.4.3 Do not throw un-catchable error on file open race condition Use escape-html for HTML escaping deps: debug@1.0.2 deps: finished@1.2.2 deps: fresh@0.2.2","title":"1.2.3 / 2014-06-11"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#122-2014-06-09","text":"deps: send@0.4.2 fix \"event emitter leak\" warnings deps: debug@1.0.1 deps: finished@1.2.1","title":"1.2.2 / 2014-06-09"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#121-2014-06-02","text":"use escape-html for escaping deps: send@0.4.1 Send max-age in Cache-Control in correct format","title":"1.2.1 / 2014-06-02"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#120-2014-05-29","text":"deps: send@0.4.0 Calculate ETag with md5 for reduced collisions Fix wrong behavior when index file matches directory Ignore stream errors after request ends Skip directories in index file search deps: debug@0.8.1","title":"1.2.0 / 2014-05-29"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#110-2014-04-24","text":"Accept options directly to send module deps: send@0.3.0","title":"1.1.0 / 2014-04-24"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#104-2014-04-07","text":"Resolve relative paths at middleware setup Use parseurl to parse the URL from request","title":"1.0.4 / 2014-04-07"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#103-2014-03-20","text":"Do not rely on connect-like environments","title":"1.0.3 / 2014-03-20"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#102-2014-03-06","text":"deps: send@0.2.0","title":"1.0.2 / 2014-03-06"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#101-2014-03-05","text":"Add mime export for back-compat","title":"1.0.1 / 2014-03-05"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#100-2014-03-05","text":"Genesis from connect","title":"1.0.0 / 2014-03-05"},{"location":"system-desing/crud-app/JS/server/node_modules/setprototypeof/","text":"Polyfill for Object.setPrototypeOf A simple cross platform implementation to set the prototype of an instianted object. Supports all modern browsers and at least back to IE8. Usage: $ npm install --save setprototypeof var setPrototypeOf = require ( 'setprototypeof' ) var obj = {} setPrototypeOf ( obj , { foo : function () { return 'bar' } }) obj . foo () // bar TypeScript is also supported: import setPrototypeOf from 'setprototypeof'","title":"Polyfill for Object.setPrototypeOf"},{"location":"system-desing/crud-app/JS/server/node_modules/setprototypeof/#polyfill-for-objectsetprototypeof","text":"A simple cross platform implementation to set the prototype of an instianted object. Supports all modern browsers and at least back to IE8.","title":"Polyfill for Object.setPrototypeOf"},{"location":"system-desing/crud-app/JS/server/node_modules/setprototypeof/#usage","text":"$ npm install --save setprototypeof var setPrototypeOf = require ( 'setprototypeof' ) var obj = {} setPrototypeOf ( obj , { foo : function () { return 'bar' } }) obj . foo () // bar TypeScript is also supported: import setPrototypeOf from 'setprototypeof'","title":"Usage:"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/","text":"side-channel Store information about any JS value in a side channel. Uses WeakMap if available. Warning: in an environment that lacks WeakMap , this implementation will leak memory until you delete the key . Getting started npm install --save side-channel Usage/Examples const assert = require ( 'assert' ); const getSideChannel = require ( 'side-channel' ); const channel = getSideChannel (); const key = {}; assert . equal ( channel . has ( key ), false ); assert . throws (() => channel . assert ( key ), TypeError ); channel . set ( key , 42 ); channel . assert ( key ); // does not throw assert . equal ( channel . has ( key ), true ); assert . equal ( channel . get ( key ), 42 ); channel . delete ( key ); assert . equal ( channel . has ( key ), false ); assert . throws (() => channel . assert ( key ), TypeError ); Tests Clone the repo, npm install , and run npm test","title":"side-channel Version Badge"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/#side-channel","text":"Store information about any JS value in a side channel. Uses WeakMap if available. Warning: in an environment that lacks WeakMap , this implementation will leak memory until you delete the key .","title":"side-channel"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/#getting-started","text":"npm install --save side-channel","title":"Getting started"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/#usageexamples","text":"const assert = require ( 'assert' ); const getSideChannel = require ( 'side-channel' ); const channel = getSideChannel (); const key = {}; assert . equal ( channel . has ( key ), false ); assert . throws (() => channel . assert ( key ), TypeError ); channel . set ( key , 42 ); channel . assert ( key ); // does not throw assert . equal ( channel . has ( key ), true ); assert . equal ( channel . get ( key ), 42 ); channel . delete ( key ); assert . equal ( channel . has ( key ), false ); assert . throws (() => channel . assert ( key ), TypeError );","title":"Usage/Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/#tests","text":"Clone the repo, npm install , and run npm test","title":"Tests"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.1.0 - 2024-12-11 Commits [Refactor] extract implementations to side-channel-weakmap , side-channel-map , side-channel-list ada5955 [New] add channel.delete c01d2d3 [types] improve types 0c54356 [readme] add content be24868 [actions] split out node 10-20, and 20+ c4488e2 [types] use shared tsconfig 0e0d57c [Dev Deps] update @ljharb/eslint-config , @ljharb/tsconfig , @types/get-intrinsic , @types/object-inspect , @types/tape , auto-changelog , tape fb4f622 [Deps] update call-bind , get-intrinsic , object-inspect b78336b [Tests] replace aud with npm audit ee3ab46 [Dev Deps] add missing peer dep c03e21a v1.0.6 - 2024-02-29 Commits add types 9beef66 [meta] simplify exports 4334cf9 [Deps] update call-bind d6043c4 [Dev Deps] update tape 6aca376 v1.0.5 - 2024-02-06 Commits [actions] reuse common workflows 3d2e1ff [meta] use npmignore to autogenerate an npmignore file 04296ea [meta] add .editorconfig ; add eclint 130f0a6 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , safe-publish-latest , tape d480c2f [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape ecbe70e [actions] update rebase action 75240b9 [Dev Deps] update @ljharb/eslint-config , aud , npmignore , tape ae8d281 [Dev Deps] update @ljharb/eslint-config , aud , tape 7125b88 [Deps] update call-bind , get-intrinsic , object-inspect 82577c9 [Deps] update call-bind , get-intrinsic , object-inspect 550aadf [Tests] increase coverage 5130877 [Deps] update get-intrinsic , object-inspect ba0194c [meta] add missing engines.node 985fd24 [Refactor] use es-errors , so things that only need those do not need get-intrinsic 40227a8 [Deps] update get-intrinsic a989b40 [Deps] update object-inspect aec42d2 v1.0.4 - 2020-12-29 Commits [Tests] migrate tests to Github Actions 10909cb [Refactor] Use a linked list rather than an array, and move accessed nodes to the beginning 195613f [meta] do not publish github action workflow files 290ec29 [Tests] run nyc on all tests; use tape runner ea6d030 [actions] add \"Allow Edits\" workflow d464d8f [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog 02daca8 [Refactor] use call-bind and get-intrinsic instead of es-abstract e09d481 [Deps] update object.assign ee83aa8 [actions] update rebase action to use checkout v2 7726b0b v1.0.3 - 2020-08-23 Commits [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 1f10561 [Deps] update es-abstract , object-inspect bc20159 [Dev Deps] update @ljharb/eslint-config , tape b9b2b22 [Dev Deps] update eslint , @ljharb/eslint-config , tape 7055ab4 [Dev Deps] update auto-changelog ; add aud d278c37 [actions] switch Automatic Rebase workflow to pull_request_target event 3bcf982 [Tests] only audit prod deps 18d01c4 [Deps] update es-abstract 6ab096d [Dev Deps] update tape 9dc174c [Deps] update es-abstract 431d0f0 [Deps] update es-abstract 49869fd [meta] Add package.json to package's exports 77d9cdc v1.0.2 - 2019-12-20 Commits [Dev Deps] update @ljharb/eslint-config , tape 4a526df [Deps] update es-abstract d4f6e62 v1.0.1 - 2019-12-01 Commits [Fix] add missing \"exports\" d212907 v1.0.0 - 2019-12-01 Commits Initial implementation dbebd3a Initial tests 73bdefe Initial commit 43c03e1 npm init 5c090a7 [meta] add auto-changelog a5c4e56 [actions] add automatic rebasing / merge commit blocking bab1683 [meta] add funding field; create FUNDING.yml 63d7aea [Tests] add npm run lint 46a5a81 Only apps should have lockfiles 8b16b03 [meta] add safe-publish-latest 2f098ef","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#v110-2024-12-11","text":"","title":"v1.1.0 - 2024-12-11"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#commits","text":"[Refactor] extract implementations to side-channel-weakmap , side-channel-map , side-channel-list ada5955 [New] add channel.delete c01d2d3 [types] improve types 0c54356 [readme] add content be24868 [actions] split out node 10-20, and 20+ c4488e2 [types] use shared tsconfig 0e0d57c [Dev Deps] update @ljharb/eslint-config , @ljharb/tsconfig , @types/get-intrinsic , @types/object-inspect , @types/tape , auto-changelog , tape fb4f622 [Deps] update call-bind , get-intrinsic , object-inspect b78336b [Tests] replace aud with npm audit ee3ab46 [Dev Deps] add missing peer dep c03e21a","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#v106-2024-02-29","text":"","title":"v1.0.6 - 2024-02-29"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#commits_1","text":"add types 9beef66 [meta] simplify exports 4334cf9 [Deps] update call-bind d6043c4 [Dev Deps] update tape 6aca376","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#v105-2024-02-06","text":"","title":"v1.0.5 - 2024-02-06"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#commits_2","text":"[actions] reuse common workflows 3d2e1ff [meta] use npmignore to autogenerate an npmignore file 04296ea [meta] add .editorconfig ; add eclint 130f0a6 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , safe-publish-latest , tape d480c2f [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape ecbe70e [actions] update rebase action 75240b9 [Dev Deps] update @ljharb/eslint-config , aud , npmignore , tape ae8d281 [Dev Deps] update @ljharb/eslint-config , aud , tape 7125b88 [Deps] update call-bind , get-intrinsic , object-inspect 82577c9 [Deps] update call-bind , get-intrinsic , object-inspect 550aadf [Tests] increase coverage 5130877 [Deps] update get-intrinsic , object-inspect ba0194c [meta] add missing engines.node 985fd24 [Refactor] use es-errors , so things that only need those do not need get-intrinsic 40227a8 [Deps] update get-intrinsic a989b40 [Deps] update object-inspect aec42d2","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#v104-2020-12-29","text":"","title":"v1.0.4 - 2020-12-29"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#commits_3","text":"[Tests] migrate tests to Github Actions 10909cb [Refactor] Use a linked list rather than an array, and move accessed nodes to the beginning 195613f [meta] do not publish github action workflow files 290ec29 [Tests] run nyc on all tests; use tape runner ea6d030 [actions] add \"Allow Edits\" workflow d464d8f [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog 02daca8 [Refactor] use call-bind and get-intrinsic instead of es-abstract e09d481 [Deps] update object.assign ee83aa8 [actions] update rebase action to use checkout v2 7726b0b","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#v103-2020-08-23","text":"","title":"v1.0.3 - 2020-08-23"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#commits_4","text":"[Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 1f10561 [Deps] update es-abstract , object-inspect bc20159 [Dev Deps] update @ljharb/eslint-config , tape b9b2b22 [Dev Deps] update eslint , @ljharb/eslint-config , tape 7055ab4 [Dev Deps] update auto-changelog ; add aud d278c37 [actions] switch Automatic Rebase workflow to pull_request_target event 3bcf982 [Tests] only audit prod deps 18d01c4 [Deps] update es-abstract 6ab096d [Dev Deps] update tape 9dc174c [Deps] update es-abstract 431d0f0 [Deps] update es-abstract 49869fd [meta] Add package.json to package's exports 77d9cdc","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#v102-2019-12-20","text":"","title":"v1.0.2 - 2019-12-20"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#commits_5","text":"[Dev Deps] update @ljharb/eslint-config , tape 4a526df [Deps] update es-abstract d4f6e62","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#v101-2019-12-01","text":"","title":"v1.0.1 - 2019-12-01"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#commits_6","text":"[Fix] add missing \"exports\" d212907","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#v100-2019-12-01","text":"","title":"v1.0.0 - 2019-12-01"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#commits_7","text":"Initial implementation dbebd3a Initial tests 73bdefe Initial commit 43c03e1 npm init 5c090a7 [meta] add auto-changelog a5c4e56 [actions] add automatic rebasing / merge commit blocking bab1683 [meta] add funding field; create FUNDING.yml 63d7aea [Tests] add npm run lint 46a5a81 Only apps should have lockfiles 8b16b03 [meta] add safe-publish-latest 2f098ef","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-list/","text":"side-channel-list Store information about any JS value in a side channel, using a linked list. Warning: this implementation will leak memory until you delete the key . Use side-channel for the best available strategy. Getting started npm install --save side-channel-list Usage/Examples const assert = require ( 'assert' ); const getSideChannelList = require ( 'side-channel-list' ); const channel = getSideChannelList (); const key = {}; assert . equal ( channel . has ( key ), false ); assert . throws (() => channel . assert ( key ), TypeError ); channel . set ( key , 42 ); channel . assert ( key ); // does not throw assert . equal ( channel . has ( key ), true ); assert . equal ( channel . get ( key ), 42 ); channel . delete ( key ); assert . equal ( channel . has ( key ), false ); assert . throws (() => channel . assert ( key ), TypeError ); Tests Clone the repo, npm install , and run npm test","title":"side-channel-list Version Badge"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-list/#side-channel-list","text":"Store information about any JS value in a side channel, using a linked list. Warning: this implementation will leak memory until you delete the key . Use side-channel for the best available strategy.","title":"side-channel-list"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-list/#getting-started","text":"npm install --save side-channel-list","title":"Getting started"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-list/#usageexamples","text":"const assert = require ( 'assert' ); const getSideChannelList = require ( 'side-channel-list' ); const channel = getSideChannelList (); const key = {}; assert . equal ( channel . has ( key ), false ); assert . throws (() => channel . assert ( key ), TypeError ); channel . set ( key , 42 ); channel . assert ( key ); // does not throw assert . equal ( channel . has ( key ), true ); assert . equal ( channel . get ( key ), 42 ); channel . delete ( key ); assert . equal ( channel . has ( key ), false ); assert . throws (() => channel . assert ( key ), TypeError );","title":"Usage/Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-list/#tests","text":"Clone the repo, npm install , and run npm test","title":"Tests"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-list/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.0 - 2024-12-10 Commits Initial implementation, tests, readme, types 5d6baee Initial commit 3ae784c npm init 07055a4 Only apps should have lockfiles 9573058","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-list/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-list/CHANGELOG/#v100-2024-12-10","text":"","title":"v1.0.0 - 2024-12-10"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-list/CHANGELOG/#commits","text":"Initial implementation, tests, readme, types 5d6baee Initial commit 3ae784c npm init 07055a4 Only apps should have lockfiles 9573058","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-map/","text":"side-channel-map Store information about any JS value in a side channel, using a Map. Warning: if the key is an object, this implementation will leak memory until you delete it. Use side-channel for the best available strategy. Getting started npm install --save side-channel-map Usage/Examples const assert = require ( 'assert' ); const getSideChannelMap = require ( 'side-channel-map' ); const channel = getSideChannelMap (); const key = {}; assert . equal ( channel . has ( key ), false ); assert . throws (() => channel . assert ( key ), TypeError ); channel . set ( key , 42 ); channel . assert ( key ); // does not throw assert . equal ( channel . has ( key ), true ); assert . equal ( channel . get ( key ), 42 ); channel . delete ( key ); assert . equal ( channel . has ( key ), false ); assert . throws (() => channel . assert ( key ), TypeError ); Tests Clone the repo, npm install , and run npm test","title":"side-channel-map Version Badge"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-map/#side-channel-map","text":"Store information about any JS value in a side channel, using a Map. Warning: if the key is an object, this implementation will leak memory until you delete it. Use side-channel for the best available strategy.","title":"side-channel-map"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-map/#getting-started","text":"npm install --save side-channel-map","title":"Getting started"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-map/#usageexamples","text":"const assert = require ( 'assert' ); const getSideChannelMap = require ( 'side-channel-map' ); const channel = getSideChannelMap (); const key = {}; assert . equal ( channel . has ( key ), false ); assert . throws (() => channel . assert ( key ), TypeError ); channel . set ( key , 42 ); channel . assert ( key ); // does not throw assert . equal ( channel . has ( key ), true ); assert . equal ( channel . get ( key ), 42 ); channel . delete ( key ); assert . equal ( channel . has ( key ), false ); assert . throws (() => channel . assert ( key ), TypeError );","title":"Usage/Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-map/#tests","text":"Clone the repo, npm install , and run npm test","title":"Tests"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-map/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.1 - 2024-12-10 Commits [Deps] update call-bound 6d05aaa [types] fix generics ordering 11c0184 v1.0.0 - 2024-12-10 Commits Initial implementation, tests, readme, types ad877b4 Initial commit 28f8879 npm init 2c9604e Only apps should have lockfiles 5e7ba9c","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-map/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-map/CHANGELOG/#v101-2024-12-10","text":"","title":"v1.0.1 - 2024-12-10"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-map/CHANGELOG/#commits","text":"[Deps] update call-bound 6d05aaa [types] fix generics ordering 11c0184","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-map/CHANGELOG/#v100-2024-12-10","text":"","title":"v1.0.0 - 2024-12-10"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-map/CHANGELOG/#commits_1","text":"Initial implementation, tests, readme, types ad877b4 Initial commit 28f8879 npm init 2c9604e Only apps should have lockfiles 5e7ba9c","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-weakmap/","text":"side-channel-weakmap Store information about any JS value in a side channel. Uses WeakMap if available. Warning: this implementation will leak memory until you delete the key . Use side-channel for the best available strategy. Getting started npm install --save side-channel-weakmap Usage/Examples const assert = require ( 'assert' ); const getSideChannelList = require ( 'side-channel-weakmap' ); const channel = getSideChannelList (); const key = {}; assert . equal ( channel . has ( key ), false ); assert . throws (() => channel . assert ( key ), TypeError ); channel . set ( key , 42 ); channel . assert ( key ); // does not throw assert . equal ( channel . has ( key ), true ); assert . equal ( channel . get ( key ), 42 ); channel . delete ( key ); assert . equal ( channel . has ( key ), false ); assert . throws (() => channel . assert ( key ), TypeError ); Tests Clone the repo, npm install , and run npm test","title":"side-channel-weakmap Version Badge"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-weakmap/#side-channel-weakmap","text":"Store information about any JS value in a side channel. Uses WeakMap if available. Warning: this implementation will leak memory until you delete the key . Use side-channel for the best available strategy.","title":"side-channel-weakmap"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-weakmap/#getting-started","text":"npm install --save side-channel-weakmap","title":"Getting started"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-weakmap/#usageexamples","text":"const assert = require ( 'assert' ); const getSideChannelList = require ( 'side-channel-weakmap' ); const channel = getSideChannelList (); const key = {}; assert . equal ( channel . has ( key ), false ); assert . throws (() => channel . assert ( key ), TypeError ); channel . set ( key , 42 ); channel . assert ( key ); // does not throw assert . equal ( channel . has ( key ), true ); assert . equal ( channel . get ( key ), 42 ); channel . delete ( key ); assert . equal ( channel . has ( key ), false ); assert . throws (() => channel . assert ( key ), TypeError );","title":"Usage/Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-weakmap/#tests","text":"Clone the repo, npm install , and run npm test","title":"Tests"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-weakmap/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.2 - 2024-12-10 Commits [types] fix generics ordering 1b62e94 v1.0.1 - 2024-12-10 Commits [types] fix generics ordering 08a4a5d [Deps] update side-channel-map b53fe44 v1.0.0 - 2024-12-10 Commits Initial implementation, tests, readme, types 53c0fa4 Initial commit a157947 npm init 54dfc55 Only apps should have lockfiles 0ddd6c7","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-weakmap/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-weakmap/CHANGELOG/#v102-2024-12-10","text":"","title":"v1.0.2 - 2024-12-10"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-weakmap/CHANGELOG/#commits","text":"[types] fix generics ordering 1b62e94","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-weakmap/CHANGELOG/#v101-2024-12-10","text":"","title":"v1.0.1 - 2024-12-10"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-weakmap/CHANGELOG/#commits_1","text":"[types] fix generics ordering 08a4a5d [Deps] update side-channel-map b53fe44","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-weakmap/CHANGELOG/#v100-2024-12-10","text":"","title":"v1.0.0 - 2024-12-10"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-weakmap/CHANGELOG/#commits_2","text":"Initial implementation, tests, readme, types 53c0fa4 Initial commit a157947 npm init 54dfc55 Only apps should have lockfiles 0ddd6c7","title":"Commits"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/","text":"Installation : npm install sift , or yarn add sift Sift is a tiny library for using MongoDB queries in Javascript For extended documentation, checkout http://docs.mongodb.org/manual/reference/operator/query/ Features: Supported operators: \\$in , \\$nin , \\$exists , \\$gte , \\$gt , \\$lte , \\$lt , \\$eq , \\$ne , \\$mod , \\$all , \\$and , \\$or , \\$nor , \\$not , \\$size , \\$type , \\$regex , \\$where , \\$elemMatch Regexp searches Supports node.js, and web Custom Operations Tree-shaking (omitting functionality from web app bundles) Examples import sift from \"sift\" ; // intersecting arrays const result1 = [ \"hello\" , \"sifted\" , \"array!\" ]. filter ( sift ({ $in : [ \"hello\" , \"world\" ] }), ); // ['hello'] // regexp filter const result2 = [ \"craig\" , \"john\" , \"jake\" ]. filter ( sift ( /^j/ )); //['john','jake'] // function filter const testFilter = sift ({ //you can also filter against functions name : function ( value ) { return value . length == 5 ; }, }); const result3 = [ { name : \"craig\" , }, { name : \"john\" , }, { name : \"jake\" , }, ]. filter ( testFilter ); // filtered: [{ name: 'craig' }] // you can test *single values* against your custom sifter testFilter ({ name : \"sarah\" }); //true testFilter ({ name : \"tim\" }); //false API sift(query: MongoQuery, options?: Options): Function Creates a filter with all the built-in MongoDB query operations. query - the filter to use against the target array options operations - custom operations compare - compares difference between two values Example: import sift from \"sift\" ; const test = sift ({ $gt : 5 }); console . log ( test ( 6 )); // true console . log ( test ( 4 )); // false [ 3 , 4 , 5 , 6 , 7 ]. filter ( test ); // [6, 7] createQueryTester(query: Query, options?: Options): Function Creates a filter function without built-in MongoDB query operations. This is useful if you're looking to omit certain operations from application bundles. See Omitting built-in operations for more info. import { createQueryTester , $eq , $in } from \"sift\" ; const filter = createQueryTester ({ $eq : 5 }, { operations : { $eq , $in } }); createEqualsOperation(params: any, ownerQuery: Query, options: Options): Operation Used for custom operations . import { createQueryTester , createEqualsOperation , $eq , $in } from \"sift\" ; const filter = createQueryTester ( { $mod : 5 }, { operations : { $something ( mod , ownerQuery , options ) { return createEqualsOperation ( ( value ) => value % mod === 0 , ownerQuery , options , ); }, }, }, ); filter ( 10 ); // true filter ( 11 ); // false Supported Operators See MongoDB's advanced queries for more info. \\$in array value must be \\$in the given query: Intersecting two arrays: // filtered: ['Brazil'] [ \"Brazil\" , \"Haiti\" , \"Peru\" , \"Chile\" ]. filter ( sift ({ $in : [ \"Costa Rica\" , \"Brazil\" ] }), ); Here's another example. This acts more like the \\$or operator: [{ name : \"Craig\" , location : \"Brazil\" }]. filter ( sift ({ location : { $in : [ \"Costa Rica\" , \"Brazil\" ] } }), ); \\$nin Opposite of \\$in: // filtered: ['Haiti','Peru','Chile'] [ \"Brazil\" , \"Haiti\" , \"Peru\" , \"Chile\" ]. filter ( sift ({ $nin : [ \"Costa Rica\" , \"Brazil\" ] }), ); \\$exists Checks if whether a value exists: // filtered: ['Craig','Tim'] sift ({ $exists : true })([ \"Craig\" , null , \"Tim\" ]); You can also filter out values that don't exist // filtered: [{ name: \"Tim\" }] [{ name : \"Craig\" , city : \"Minneapolis\" }, { name : \"Tim\" }]. filter ( sift ({ city : { $exists : false } }), ); \\$gte Checks if a number is >= value: // filtered: [2, 3] [ 0 , 1 , 2 , 3 ]. filter ( sift ({ $gte : 2 })); \\$gt Checks if a number is > value: // filtered: [3] [ 0 , 1 , 2 , 3 ]. filter ( sift ({ $gt : 2 })); \\$lte Checks if a number is <= value. // filtered: [0, 1, 2] [ 0 , 1 , 2 , 3 ]. filter ( sift ({ $lte : 2 })); \\$lt Checks if number is < value. // filtered: [0, 1] [ 0 , 1 , 2 , 3 ]. filter ( sift ({ $lt : 2 })); \\$eq Checks if query === value . Note that \\$eq can be omitted . For \\$eq , and \\$ne // filtered: [{ state: 'MN' }] [{ state : \"MN\" }, { state : \"CA\" }, { state : \"WI\" }]. filter ( sift ({ state : { $eq : \"MN\" } }), ); Or: // filtered: [{ state: 'MN' }] [{ state : \"MN\" }, { state : \"CA\" }, { state : \"WI\" }]. filter ( sift ({ state : \"MN\" }), ); \\$ne Checks if query !== value . // filtered: [{ state: 'CA' }, { state: 'WI'}] [{ state : \"MN\" }, { state : \"CA\" }, { state : \"WI\" }]. filter ( sift ({ state : { $ne : \"MN\" } }), ); \\$mod Modulus: // filtered: [300, 600] [ 100 , 200 , 300 , 400 , 500 , 600 ]. filter ( sift ({ $mod : [ 3 , 0 ] })); \\$all values must match everything in array: // filtered: [ { tags: ['books','programming','travel' ]} ] [ { tags : [ \"books\" , \"programming\" , \"travel\" ] }, { tags : [ \"travel\" , \"cooking\" ] }, ]. filter ( sift ({ tags : { $all : [ \"books\" , \"programming\" ] } })); \\$and ability to use an array of expressions. All expressions must test true. // filtered: [ { name: 'Craig', state: 'MN' }] [ { name : \"Craig\" , state : \"MN\" }, { name : \"Tim\" , state : \"MN\" }, { name : \"Joe\" , state : \"CA\" }, ]. filter ( sift ({ $and : [{ name : \"Craig\" }, { state : \"MN\" }] })); \\$or OR array of expressions. // filtered: [ { name: 'Craig', state: 'MN' }, { name: 'Tim', state: 'MN' }] [ { name : \"Craig\" , state : \"MN\" }, { name : \"Tim\" , state : \"MN\" }, { name : \"Joe\" , state : \"CA\" }, ]. filter ( sift ({ $or : [{ name : \"Craig\" }, { state : \"MN\" }] })); \\$nor opposite of or: // filtered: [{ name: 'Joe', state: 'CA' }] [ { name : \"Craig\" , state : \"MN\" }, { name : \"Tim\" , state : \"MN\" }, { name : \"Joe\" , state : \"CA\" }, ]. filter ( sift ({ $nor : [{ name : \"Craig\" }, { state : \"MN\" }] })); \\$size Matches an array - must match given size: // filtered: ['food','cooking'] [{ tags : [ \"food\" , \"cooking\" ] }, { tags : [ \"traveling\" ] }]. filter ( sift ({ tags : { $size : 2 } }), ); \\$type Matches a values based on the type [ new Date (), 4342 , \"hello world\" ]. filter ( sift ({ $type : Date })); // returns single date [ new Date (), 4342 , \"hello world\" ]. filter ( sift ({ $type : String })); // returns ['hello world'] \\$regex Matches values based on the given regular expression [ \"frank\" , \"fred\" , \"sam\" , \"frost\" ]. filter ( sift ({ $regex : /^f/i , $nin : [ \"frank\" ] }), ); // [\"fred\", \"frost\"] [ \"frank\" , \"fred\" , \"sam\" , \"frost\" ]. filter ( sift ({ $regex : \"^f\" , $options : \"i\" , $nin : [ \"frank\" ] }), ); // [\"fred\", \"frost\"] \\$where Matches based on some javascript comparison [{ name : \"frank\" }, { name : \"joe\" }]. filter ( sift ({ $where : \"this.name === 'frank'\" }), ); // [\"frank\"] [{ name : \"frank\" }, { name : \"joe\" }]. filter ( sift ({ $where : function () { return this . name === \"frank\" ; }, }), ); // [\"frank\"] \\$elemMatch Matches elements of array var bills = [ { month : \"july\" , casts : [ { id : 1 , value : 200 , }, { id : 2 , value : 1000 , }, ], }, { month : \"august\" , casts : [ { id : 3 , value : 1000 , }, { id : 4 , value : 4000 , }, ], }, ]; var result = bills . filter ( sift ({ casts : { $elemMatch : { value : { $gt : 1000 }, }, }, }), ); // {month:'august', casts:[{id:3, value: 1000},{id: 4, value: 4000}]} \\$not Not expression: [ \"craig\" , \"tim\" , \"jake\" ]. filter ( sift ({ $not : { $in : [ \"craig\" , \"tim\" ] } })); // ['jake'] [ \"craig\" , \"tim\" , \"jake\" ]. filter ( sift ({ $not : { $size : 5 } })); // ['tim','jake'] Date comparison Mongodb allows you to do date comparisons like so: db . collection . find ({ createdAt : { $gte : \"2018-03-22T06:00:00Z\" } }); In Sift, you'll need to specify a Date object: collection . find ( sift ({ createdAt : { $gte : new Date ( \"2018-03-22T06:00:00Z\" ) } }), ); Custom behavior Sift works like MongoDB out of the box, but you're also able to modify the behavior to suite your needs. Custom operations You can register your own custom operations. Here's an example: import sift , { createEqualsOperation } from \"sift\" ; var filter = sift ( { $customMod : 2 , }, { operations : { $customMod ( params , ownerQuery , options ) { return createEqualsOperation ( ( value ) => value % params !== 0 , ownerQuery , options , ); }, }, }, ); [ 1 , 2 , 3 , 4 , 5 ]. filter ( filter ); // [1, 3, 5] Omitting built-in operations You can create a filter function that omits the built-in operations like so: import { createQueryTester , $in , $all , $nin , $lt } from \"sift\" ; const test = createQueryTester ( { $eq : 10 , }, { operations : { $in , $all , $nin , $lt } }, ); [ 1 , 2 , 3 , 4 , 10 ]. filter ( test ); For bundlers like Webpack and Rollup , operations that aren't used are omitted from application bundles via tree-shaking.","title":"Index"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#sift-is-a-tiny-library-for-using-mongodb-queries-in-javascript","text":"For extended documentation, checkout http://docs.mongodb.org/manual/reference/operator/query/","title":"Sift is a tiny library for using MongoDB queries in Javascript"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#features","text":"Supported operators: \\$in , \\$nin , \\$exists , \\$gte , \\$gt , \\$lte , \\$lt , \\$eq , \\$ne , \\$mod , \\$all , \\$and , \\$or , \\$nor , \\$not , \\$size , \\$type , \\$regex , \\$where , \\$elemMatch Regexp searches Supports node.js, and web Custom Operations Tree-shaking (omitting functionality from web app bundles)","title":"Features:"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#examples","text":"import sift from \"sift\" ; // intersecting arrays const result1 = [ \"hello\" , \"sifted\" , \"array!\" ]. filter ( sift ({ $in : [ \"hello\" , \"world\" ] }), ); // ['hello'] // regexp filter const result2 = [ \"craig\" , \"john\" , \"jake\" ]. filter ( sift ( /^j/ )); //['john','jake'] // function filter const testFilter = sift ({ //you can also filter against functions name : function ( value ) { return value . length == 5 ; }, }); const result3 = [ { name : \"craig\" , }, { name : \"john\" , }, { name : \"jake\" , }, ]. filter ( testFilter ); // filtered: [{ name: 'craig' }] // you can test *single values* against your custom sifter testFilter ({ name : \"sarah\" }); //true testFilter ({ name : \"tim\" }); //false","title":"Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#api","text":"","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#siftquery-mongoquery-options-options-function","text":"Creates a filter with all the built-in MongoDB query operations. query - the filter to use against the target array options operations - custom operations compare - compares difference between two values Example: import sift from \"sift\" ; const test = sift ({ $gt : 5 }); console . log ( test ( 6 )); // true console . log ( test ( 4 )); // false [ 3 , 4 , 5 , 6 , 7 ]. filter ( test ); // [6, 7]","title":"sift(query: MongoQuery, options?: Options): Function"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#createquerytesterquery-query-options-options-function","text":"Creates a filter function without built-in MongoDB query operations. This is useful if you're looking to omit certain operations from application bundles. See Omitting built-in operations for more info. import { createQueryTester , $eq , $in } from \"sift\" ; const filter = createQueryTester ({ $eq : 5 }, { operations : { $eq , $in } });","title":"createQueryTester(query: Query, options?: Options): Function"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#createequalsoperationparams-any-ownerquery-query-options-options-operation","text":"Used for custom operations . import { createQueryTester , createEqualsOperation , $eq , $in } from \"sift\" ; const filter = createQueryTester ( { $mod : 5 }, { operations : { $something ( mod , ownerQuery , options ) { return createEqualsOperation ( ( value ) => value % mod === 0 , ownerQuery , options , ); }, }, }, ); filter ( 10 ); // true filter ( 11 ); // false","title":"createEqualsOperation(params: any, ownerQuery: Query, options: Options): Operation"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#supported-operators","text":"See MongoDB's advanced queries for more info.","title":"Supported Operators"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#in","text":"array value must be \\$in the given query: Intersecting two arrays: // filtered: ['Brazil'] [ \"Brazil\" , \"Haiti\" , \"Peru\" , \"Chile\" ]. filter ( sift ({ $in : [ \"Costa Rica\" , \"Brazil\" ] }), ); Here's another example. This acts more like the \\$or operator: [{ name : \"Craig\" , location : \"Brazil\" }]. filter ( sift ({ location : { $in : [ \"Costa Rica\" , \"Brazil\" ] } }), );","title":"\\$in"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#nin","text":"Opposite of \\$in: // filtered: ['Haiti','Peru','Chile'] [ \"Brazil\" , \"Haiti\" , \"Peru\" , \"Chile\" ]. filter ( sift ({ $nin : [ \"Costa Rica\" , \"Brazil\" ] }), );","title":"\\$nin"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#exists","text":"Checks if whether a value exists: // filtered: ['Craig','Tim'] sift ({ $exists : true })([ \"Craig\" , null , \"Tim\" ]); You can also filter out values that don't exist // filtered: [{ name: \"Tim\" }] [{ name : \"Craig\" , city : \"Minneapolis\" }, { name : \"Tim\" }]. filter ( sift ({ city : { $exists : false } }), );","title":"\\$exists"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#gte","text":"Checks if a number is >= value: // filtered: [2, 3] [ 0 , 1 , 2 , 3 ]. filter ( sift ({ $gte : 2 }));","title":"\\$gte"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#gt","text":"Checks if a number is > value: // filtered: [3] [ 0 , 1 , 2 , 3 ]. filter ( sift ({ $gt : 2 }));","title":"\\$gt"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#lte","text":"Checks if a number is <= value. // filtered: [0, 1, 2] [ 0 , 1 , 2 , 3 ]. filter ( sift ({ $lte : 2 }));","title":"\\$lte"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#lt","text":"Checks if number is < value. // filtered: [0, 1] [ 0 , 1 , 2 , 3 ]. filter ( sift ({ $lt : 2 }));","title":"\\$lt"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#eq","text":"Checks if query === value . Note that \\$eq can be omitted . For \\$eq , and \\$ne // filtered: [{ state: 'MN' }] [{ state : \"MN\" }, { state : \"CA\" }, { state : \"WI\" }]. filter ( sift ({ state : { $eq : \"MN\" } }), ); Or: // filtered: [{ state: 'MN' }] [{ state : \"MN\" }, { state : \"CA\" }, { state : \"WI\" }]. filter ( sift ({ state : \"MN\" }), );","title":"\\$eq"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#ne","text":"Checks if query !== value . // filtered: [{ state: 'CA' }, { state: 'WI'}] [{ state : \"MN\" }, { state : \"CA\" }, { state : \"WI\" }]. filter ( sift ({ state : { $ne : \"MN\" } }), );","title":"\\$ne"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#mod","text":"Modulus: // filtered: [300, 600] [ 100 , 200 , 300 , 400 , 500 , 600 ]. filter ( sift ({ $mod : [ 3 , 0 ] }));","title":"\\$mod"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#all","text":"values must match everything in array: // filtered: [ { tags: ['books','programming','travel' ]} ] [ { tags : [ \"books\" , \"programming\" , \"travel\" ] }, { tags : [ \"travel\" , \"cooking\" ] }, ]. filter ( sift ({ tags : { $all : [ \"books\" , \"programming\" ] } }));","title":"\\$all"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#and","text":"ability to use an array of expressions. All expressions must test true. // filtered: [ { name: 'Craig', state: 'MN' }] [ { name : \"Craig\" , state : \"MN\" }, { name : \"Tim\" , state : \"MN\" }, { name : \"Joe\" , state : \"CA\" }, ]. filter ( sift ({ $and : [{ name : \"Craig\" }, { state : \"MN\" }] }));","title":"\\$and"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#or","text":"OR array of expressions. // filtered: [ { name: 'Craig', state: 'MN' }, { name: 'Tim', state: 'MN' }] [ { name : \"Craig\" , state : \"MN\" }, { name : \"Tim\" , state : \"MN\" }, { name : \"Joe\" , state : \"CA\" }, ]. filter ( sift ({ $or : [{ name : \"Craig\" }, { state : \"MN\" }] }));","title":"\\$or"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#nor","text":"opposite of or: // filtered: [{ name: 'Joe', state: 'CA' }] [ { name : \"Craig\" , state : \"MN\" }, { name : \"Tim\" , state : \"MN\" }, { name : \"Joe\" , state : \"CA\" }, ]. filter ( sift ({ $nor : [{ name : \"Craig\" }, { state : \"MN\" }] }));","title":"\\$nor"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#size","text":"Matches an array - must match given size: // filtered: ['food','cooking'] [{ tags : [ \"food\" , \"cooking\" ] }, { tags : [ \"traveling\" ] }]. filter ( sift ({ tags : { $size : 2 } }), );","title":"\\$size"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#type","text":"Matches a values based on the type [ new Date (), 4342 , \"hello world\" ]. filter ( sift ({ $type : Date })); // returns single date [ new Date (), 4342 , \"hello world\" ]. filter ( sift ({ $type : String })); // returns ['hello world']","title":"\\$type"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#regex","text":"Matches values based on the given regular expression [ \"frank\" , \"fred\" , \"sam\" , \"frost\" ]. filter ( sift ({ $regex : /^f/i , $nin : [ \"frank\" ] }), ); // [\"fred\", \"frost\"] [ \"frank\" , \"fred\" , \"sam\" , \"frost\" ]. filter ( sift ({ $regex : \"^f\" , $options : \"i\" , $nin : [ \"frank\" ] }), ); // [\"fred\", \"frost\"]","title":"\\$regex"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#where","text":"Matches based on some javascript comparison [{ name : \"frank\" }, { name : \"joe\" }]. filter ( sift ({ $where : \"this.name === 'frank'\" }), ); // [\"frank\"] [{ name : \"frank\" }, { name : \"joe\" }]. filter ( sift ({ $where : function () { return this . name === \"frank\" ; }, }), ); // [\"frank\"]","title":"\\$where"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#elemmatch","text":"Matches elements of array var bills = [ { month : \"july\" , casts : [ { id : 1 , value : 200 , }, { id : 2 , value : 1000 , }, ], }, { month : \"august\" , casts : [ { id : 3 , value : 1000 , }, { id : 4 , value : 4000 , }, ], }, ]; var result = bills . filter ( sift ({ casts : { $elemMatch : { value : { $gt : 1000 }, }, }, }), ); // {month:'august', casts:[{id:3, value: 1000},{id: 4, value: 4000}]}","title":"\\$elemMatch"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#not","text":"Not expression: [ \"craig\" , \"tim\" , \"jake\" ]. filter ( sift ({ $not : { $in : [ \"craig\" , \"tim\" ] } })); // ['jake'] [ \"craig\" , \"tim\" , \"jake\" ]. filter ( sift ({ $not : { $size : 5 } })); // ['tim','jake']","title":"\\$not"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#date-comparison","text":"Mongodb allows you to do date comparisons like so: db . collection . find ({ createdAt : { $gte : \"2018-03-22T06:00:00Z\" } }); In Sift, you'll need to specify a Date object: collection . find ( sift ({ createdAt : { $gte : new Date ( \"2018-03-22T06:00:00Z\" ) } }), );","title":"Date comparison"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#custom-behavior","text":"Sift works like MongoDB out of the box, but you're also able to modify the behavior to suite your needs.","title":"Custom behavior"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#custom-operations","text":"You can register your own custom operations. Here's an example: import sift , { createEqualsOperation } from \"sift\" ; var filter = sift ( { $customMod : 2 , }, { operations : { $customMod ( params , ownerQuery , options ) { return createEqualsOperation ( ( value ) => value % params !== 0 , ownerQuery , options , ); }, }, }, ); [ 1 , 2 , 3 , 4 , 5 ]. filter ( filter ); // [1, 3, 5]","title":"Custom operations"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#omitting-built-in-operations","text":"You can create a filter function that omits the built-in operations like so: import { createQueryTester , $in , $all , $nin , $lt } from \"sift\" ; const test = createQueryTester ( { $eq : 10 , }, { operations : { $in , $all , $nin , $lt } }, ); [ 1 , 2 , 3 , 4 , 10 ]. filter ( test ); For bundlers like Webpack and Rollup , operations that aren't used are omitted from application bundles via tree-shaking.","title":"Omitting built-in operations"},{"location":"system-desing/crud-app/JS/server/node_modules/simple-update-notifier/","text":"simple-update-notifier Simple update notifier to check for npm updates for cli applications. Checks for updates for an npm module and outputs to the command line if there is one available. The result is cached for the specified time so it doesn't check every time the app runs. Install npm install simple-update-notifier OR yarn add simple-update-notifier Usage import updateNotifier from 'simple-update-notifier' ; import packageJson from './package.json' assert { type : 'json' }; updateNotifier ({ pkg : packageJson }); Options pkg Type: object name Required \\ Type: string version Required \\ Type: string updateCheckInterval Type: number \\ Default: 1000 * 60 * 60 * 24 (1 day) How often to check for updates. shouldNotifyInNpmScript Type: boolean \\ Default: false Allows notification to be shown when running as an npm script. distTag Type: string \\ Default: 'latest' Which dist-tag to use to find the latest version. alwaysRun Type: boolean \\ Default: false When set, updateCheckInterval will not be respected and a check for an update will always be performed. debug Type: boolean \\ Default: false When set, logs explaining the decision will be output to stderr whenever the module opts to not print an update notification","title":"simple-update-notifier GitHub stars"},{"location":"system-desing/crud-app/JS/server/node_modules/simple-update-notifier/#simple-update-notifier","text":"Simple update notifier to check for npm updates for cli applications. Checks for updates for an npm module and outputs to the command line if there is one available. The result is cached for the specified time so it doesn't check every time the app runs.","title":"simple-update-notifier"},{"location":"system-desing/crud-app/JS/server/node_modules/simple-update-notifier/#install","text":"npm install simple-update-notifier OR yarn add simple-update-notifier","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/simple-update-notifier/#usage","text":"import updateNotifier from 'simple-update-notifier' ; import packageJson from './package.json' assert { type : 'json' }; updateNotifier ({ pkg : packageJson });","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/simple-update-notifier/#options","text":"","title":"Options"},{"location":"system-desing/crud-app/JS/server/node_modules/simple-update-notifier/#pkg","text":"Type: object","title":"pkg"},{"location":"system-desing/crud-app/JS/server/node_modules/simple-update-notifier/#name","text":"Required \\ Type: string","title":"name"},{"location":"system-desing/crud-app/JS/server/node_modules/simple-update-notifier/#version","text":"Required \\ Type: string","title":"version"},{"location":"system-desing/crud-app/JS/server/node_modules/simple-update-notifier/#updatecheckinterval","text":"Type: number \\ Default: 1000 * 60 * 60 * 24 (1 day) How often to check for updates.","title":"updateCheckInterval"},{"location":"system-desing/crud-app/JS/server/node_modules/simple-update-notifier/#shouldnotifyinnpmscript","text":"Type: boolean \\ Default: false Allows notification to be shown when running as an npm script.","title":"shouldNotifyInNpmScript"},{"location":"system-desing/crud-app/JS/server/node_modules/simple-update-notifier/#disttag","text":"Type: string \\ Default: 'latest' Which dist-tag to use to find the latest version.","title":"distTag"},{"location":"system-desing/crud-app/JS/server/node_modules/simple-update-notifier/#alwaysrun","text":"Type: boolean \\ Default: false When set, updateCheckInterval will not be respected and a check for an update will always be performed.","title":"alwaysRun"},{"location":"system-desing/crud-app/JS/server/node_modules/simple-update-notifier/#debug","text":"Type: boolean \\ Default: false When set, logs explaining the decision will be output to stderr whenever the module opts to not print an update notification","title":"debug"},{"location":"system-desing/crud-app/JS/server/node_modules/sparse-bitfield/","text":"sparse-bitfield Bitfield implementation that allocates a series of 1kb buffers to support sparse bitfields without allocating a massive buffer. If you want to simple implementation of a flat bitfield see the bitfield module. This module is mostly useful if you need a big bitfield where you won't nessecarily set every bit. npm install sparse-bitfield Usage var bitfield = require ( 'sparse-bitfield' ) var bits = bitfield () bits . set ( 0 , true ) // set first bit bits . set ( 1 , true ) // set second bit bits . set ( 1000000000000 , true ) // set the 1.000.000.000.000th bit Running the above example will allocate two 1kb buffers internally. Each 1kb buffer can hold information about 8192 bits so the first one will be used to store information about the first two bits and the second will be used to store the 1.000.000.000.000th bit. API var bits = bitfield([options]) Create a new bitfield. Options include { pageSize : 1024 , // how big should the partial buffers be buffer : anExistingBitfield , trackUpdates : false // track when pages are being updated in the pager } bits.set(index, value) Set a bit to true or false. bits.get(index) Get the value of a bit. bits.pages A memory-pager instance that is managing the underlying memory. If you set trackUpdates to true in the constructor you can use .lastUpdate() on this instance to get the last updated memory page. var buffer = bits.toBuffer() Get a single buffer representing the entire bitfield. License MIT","title":"sparse-bitfield"},{"location":"system-desing/crud-app/JS/server/node_modules/sparse-bitfield/#sparse-bitfield","text":"Bitfield implementation that allocates a series of 1kb buffers to support sparse bitfields without allocating a massive buffer. If you want to simple implementation of a flat bitfield see the bitfield module. This module is mostly useful if you need a big bitfield where you won't nessecarily set every bit. npm install sparse-bitfield","title":"sparse-bitfield"},{"location":"system-desing/crud-app/JS/server/node_modules/sparse-bitfield/#usage","text":"var bitfield = require ( 'sparse-bitfield' ) var bits = bitfield () bits . set ( 0 , true ) // set first bit bits . set ( 1 , true ) // set second bit bits . set ( 1000000000000 , true ) // set the 1.000.000.000.000th bit Running the above example will allocate two 1kb buffers internally. Each 1kb buffer can hold information about 8192 bits so the first one will be used to store information about the first two bits and the second will be used to store the 1.000.000.000.000th bit.","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/sparse-bitfield/#api","text":"","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/sparse-bitfield/#var-bits-bitfieldoptions","text":"Create a new bitfield. Options include { pageSize : 1024 , // how big should the partial buffers be buffer : anExistingBitfield , trackUpdates : false // track when pages are being updated in the pager }","title":"var bits = bitfield([options])"},{"location":"system-desing/crud-app/JS/server/node_modules/sparse-bitfield/#bitssetindex-value","text":"Set a bit to true or false.","title":"bits.set(index, value)"},{"location":"system-desing/crud-app/JS/server/node_modules/sparse-bitfield/#bitsgetindex","text":"Get the value of a bit.","title":"bits.get(index)"},{"location":"system-desing/crud-app/JS/server/node_modules/sparse-bitfield/#bitspages","text":"A memory-pager instance that is managing the underlying memory. If you set trackUpdates to true in the constructor you can use .lastUpdate() on this instance to get the last updated memory page.","title":"bits.pages"},{"location":"system-desing/crud-app/JS/server/node_modules/sparse-bitfield/#var-buffer-bitstobuffer","text":"Get a single buffer representing the entire bitfield.","title":"var buffer = bits.toBuffer()"},{"location":"system-desing/crud-app/JS/server/node_modules/sparse-bitfield/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/","text":"statuses HTTP status utility for node. This module provides a list of status codes and messages sourced from a few different projects: The IANA Status Code Registry The Node.js project The NGINX project The Apache HTTP Server project Installation This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install statuses API var status = require ( 'statuses' ) status(code) Returns the status message string for a known HTTP status code. The code may be a number or a string. An error is thrown for an unknown status code. status ( 403 ) // => 'Forbidden' status ( '403' ) // => 'Forbidden' status ( 306 ) // throws status(msg) Returns the numeric status code for a known HTTP status message. The message is case-insensitive. An error is thrown for an unknown status message. status ( 'forbidden' ) // => 403 status ( 'Forbidden' ) // => 403 status ( 'foo' ) // throws status.codes Returns an array of all the status codes as Integer s. status.code[msg] Returns the numeric status code for a known status message (in lower-case), otherwise undefined . status [ 'not found' ] // => 404 status.empty[code] Returns true if a status code expects an empty body. status . empty [ 200 ] // => undefined status . empty [ 204 ] // => true status . empty [ 304 ] // => true status.message[code] Returns the string message for a known numeric status code, otherwise undefined . This object is the same format as the Node.js http module http.STATUS_CODES . status . message [ 404 ] // => 'Not Found' status.redirect[code] Returns true if a status code is a valid redirect status. status . redirect [ 200 ] // => undefined status . redirect [ 301 ] // => true status.retry[code] Returns true if you should retry the rest. status . retry [ 501 ] // => undefined status . retry [ 503 ] // => true License MIT","title":"statuses"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/#statuses","text":"HTTP status utility for node. This module provides a list of status codes and messages sourced from a few different projects: The IANA Status Code Registry The Node.js project The NGINX project The Apache HTTP Server project","title":"statuses"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/#installation","text":"This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install statuses","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/#api","text":"var status = require ( 'statuses' )","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/#statuscode","text":"Returns the status message string for a known HTTP status code. The code may be a number or a string. An error is thrown for an unknown status code. status ( 403 ) // => 'Forbidden' status ( '403' ) // => 'Forbidden' status ( 306 ) // throws","title":"status(code)"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/#statusmsg","text":"Returns the numeric status code for a known HTTP status message. The message is case-insensitive. An error is thrown for an unknown status message. status ( 'forbidden' ) // => 403 status ( 'Forbidden' ) // => 403 status ( 'foo' ) // throws","title":"status(msg)"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/#statuscodes","text":"Returns an array of all the status codes as Integer s.","title":"status.codes"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/#statuscodemsg","text":"Returns the numeric status code for a known status message (in lower-case), otherwise undefined . status [ 'not found' ] // => 404","title":"status.code[msg]"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/#statusemptycode","text":"Returns true if a status code expects an empty body. status . empty [ 200 ] // => undefined status . empty [ 204 ] // => true status . empty [ 304 ] // => true","title":"status.empty[code]"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/#statusmessagecode","text":"Returns the string message for a known numeric status code, otherwise undefined . This object is the same format as the Node.js http module http.STATUS_CODES . status . message [ 404 ] // => 'Not Found'","title":"status.message[code]"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/#statusredirectcode","text":"Returns true if a status code is a valid redirect status. status . redirect [ 200 ] // => undefined status . redirect [ 301 ] // => true","title":"status.redirect[code]"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/#statusretrycode","text":"Returns true if you should retry the rest. status . retry [ 501 ] // => undefined status . retry [ 503 ] // => true","title":"status.retry[code]"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/HISTORY/","text":"2.0.1 / 2021-01-03 Fix returning values from Object.prototype 2.0.0 / 2020-04-19 Drop support for Node.js 0.6 Fix messaging casing of 418 I'm a Teapot Remove code 306 Remove status[code] exports; use status.message[code] Remove status[msg] exports; use status.code[msg] Rename 425 Unordered Collection to standard 425 Too Early Rename STATUS_CODES export to message Return status message for statuses(code) when given code 1.5.0 / 2018-03-27 Add 103 Early Hints 1.4.0 / 2017-10-20 Add STATUS_CODES export 1.3.1 / 2016-11-11 Fix return type in JSDoc 1.3.0 / 2016-05-17 Add 421 Misdirected Request perf: enable strict mode 1.2.1 / 2015-02-01 Fix message for status 451 451 Unavailable For Legal Reasons 1.2.0 / 2014-09-28 Add 208 Already Repored Add 226 IM Used Add 306 (Unused) Add 415 Unable For Legal Reasons Add 508 Loop Detected 1.1.1 / 2014-09-24 Add missing 308 to codes.json 1.1.0 / 2014-09-21 Add codes.json for universal support 1.0.4 / 2014-08-20 Package cleanup 1.0.3 / 2014-06-08 Add 308 to .redirect category 1.0.2 / 2014-03-13 Add .retry category 1.0.1 / 2014-03-12 Initial release","title":"2.0.1 / 2021-01-03"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/HISTORY/#201-2021-01-03","text":"Fix returning values from Object.prototype","title":"2.0.1 / 2021-01-03"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/HISTORY/#200-2020-04-19","text":"Drop support for Node.js 0.6 Fix messaging casing of 418 I'm a Teapot Remove code 306 Remove status[code] exports; use status.message[code] Remove status[msg] exports; use status.code[msg] Rename 425 Unordered Collection to standard 425 Too Early Rename STATUS_CODES export to message Return status message for statuses(code) when given code","title":"2.0.0 / 2020-04-19"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/HISTORY/#150-2018-03-27","text":"Add 103 Early Hints","title":"1.5.0 / 2018-03-27"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/HISTORY/#140-2017-10-20","text":"Add STATUS_CODES export","title":"1.4.0 / 2017-10-20"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/HISTORY/#131-2016-11-11","text":"Fix return type in JSDoc","title":"1.3.1 / 2016-11-11"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/HISTORY/#130-2016-05-17","text":"Add 421 Misdirected Request perf: enable strict mode","title":"1.3.0 / 2016-05-17"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/HISTORY/#121-2015-02-01","text":"Fix message for status 451 451 Unavailable For Legal Reasons","title":"1.2.1 / 2015-02-01"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/HISTORY/#120-2014-09-28","text":"Add 208 Already Repored Add 226 IM Used Add 306 (Unused) Add 415 Unable For Legal Reasons Add 508 Loop Detected","title":"1.2.0 / 2014-09-28"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/HISTORY/#111-2014-09-24","text":"Add missing 308 to codes.json","title":"1.1.1 / 2014-09-24"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/HISTORY/#110-2014-09-21","text":"Add codes.json for universal support","title":"1.1.0 / 2014-09-21"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/HISTORY/#104-2014-08-20","text":"Package cleanup","title":"1.0.4 / 2014-08-20"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/HISTORY/#103-2014-06-08","text":"Add 308 to .redirect category","title":"1.0.3 / 2014-06-08"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/HISTORY/#102-2014-03-13","text":"Add .retry category","title":"1.0.2 / 2014-03-13"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/HISTORY/#101-2014-03-12","text":"Initial release","title":"1.0.1 / 2014-03-12"},{"location":"system-desing/crud-app/JS/server/node_modules/supports-color/readme/","text":"supports-color Detect whether a terminal supports color Install $ npm install supports-color Usage const supportsColor = require ( 'supports-color' ); if ( supportsColor . stdout ) { console . log ( 'Terminal stdout supports color' ); } if ( supportsColor . stdout . has256 ) { console . log ( 'Terminal stdout supports 256 colors' ); } if ( supportsColor . stderr . has16m ) { console . log ( 'Terminal stderr supports 16 million colors (truecolor)' ); } API Returns an Object with a stdout and stderr property for testing either streams. Each property is an Object , or false if color is not supported. The stdout / stderr objects specifies a level of support for color through a .level property and a corresponding flag: .level = 1 and .hasBasic = true : Basic color support (16 colors) .level = 2 and .has256 = true : 256 color support .level = 3 and .has16m = true : Truecolor support (16 million colors) Info It obeys the --color and --no-color CLI flags. Can be overridden by the user with the flags --color and --no-color . For situations where using --color is not possible, add the environment variable FORCE_COLOR=1 to forcefully enable color or FORCE_COLOR=0 to forcefully disable. The use of FORCE_COLOR overrides all other color support checks. Explicit 256/Truecolor mode can be enabled using the --color=256 and --color=16m flags, respectively. Related supports-color-cli - CLI for this module chalk - Terminal string styling done right Maintainers Sindre Sorhus Josh Junon License MIT","title":"supports-color Build Status"},{"location":"system-desing/crud-app/JS/server/node_modules/supports-color/readme/#supports-color","text":"Detect whether a terminal supports color","title":"supports-color"},{"location":"system-desing/crud-app/JS/server/node_modules/supports-color/readme/#install","text":"$ npm install supports-color","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/supports-color/readme/#usage","text":"const supportsColor = require ( 'supports-color' ); if ( supportsColor . stdout ) { console . log ( 'Terminal stdout supports color' ); } if ( supportsColor . stdout . has256 ) { console . log ( 'Terminal stdout supports 256 colors' ); } if ( supportsColor . stderr . has16m ) { console . log ( 'Terminal stderr supports 16 million colors (truecolor)' ); }","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/supports-color/readme/#api","text":"Returns an Object with a stdout and stderr property for testing either streams. Each property is an Object , or false if color is not supported. The stdout / stderr objects specifies a level of support for color through a .level property and a corresponding flag: .level = 1 and .hasBasic = true : Basic color support (16 colors) .level = 2 and .has256 = true : 256 color support .level = 3 and .has16m = true : Truecolor support (16 million colors)","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/supports-color/readme/#info","text":"It obeys the --color and --no-color CLI flags. Can be overridden by the user with the flags --color and --no-color . For situations where using --color is not possible, add the environment variable FORCE_COLOR=1 to forcefully enable color or FORCE_COLOR=0 to forcefully disable. The use of FORCE_COLOR overrides all other color support checks. Explicit 256/Truecolor mode can be enabled using the --color=256 and --color=16m flags, respectively.","title":"Info"},{"location":"system-desing/crud-app/JS/server/node_modules/supports-color/readme/#related","text":"supports-color-cli - CLI for this module chalk - Terminal string styling done right","title":"Related"},{"location":"system-desing/crud-app/JS/server/node_modules/supports-color/readme/#maintainers","text":"Sindre Sorhus Josh Junon","title":"Maintainers"},{"location":"system-desing/crud-app/JS/server/node_modules/supports-color/readme/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/","text":"to-regex-range Pass two numbers, get a regex-compatible source string for matching ranges. Validated against more than 2.78 million test assertions. Please consider following this project's author, Jon Schlinkert , and consider starring the project to show your and support. Install Install with npm : $ npm install --save to-regex-range What does this do? This libary generates the `source` string to be passed to `new RegExp()` for matching a range of numbers. **Example** const toRegexRange = require ( 'to-regex-range' ); const regex = new RegExp ( toRegexRange ( '15' , '95' )); A string is returned so that you can do whatever you need with it before passing it to `new RegExp()` (like adding `^` or `$` boundaries, defining flags, or combining it another string). Why use this library? ### Convenience Creating regular expressions for matching numbers gets deceptively complicated pretty fast. For example, let's say you need a validation regex for matching part of a user-id, postal code, social security number, tax id, etc: * regex for matching `1` => `/1/` (easy enough) * regex for matching `1` through `5` => `/[1-5]/` (not bad...) * regex for matching `1` or `5` => `/(1|5)/` (still easy...) * regex for matching `1` through `50` => `/([1-9]|[1-4][0-9]|50)/` (uh-oh...) * regex for matching `1` through `55` => `/([1-9]|[1-4][0-9]|5[0-5])/` (no prob, I can do this...) * regex for matching `1` through `555` => `/([1-9]|[1-9][0-9]|[1-4][0-9]{2}|5[0-4][0-9]|55[0-5])/` (maybe not...) * regex for matching `0001` through `5555` => `/(0{3}[1-9]|0{2}[1-9][0-9]|0[1-9][0-9]{2}|[1-4][0-9]{3}|5[0-4][0-9]{2}|55[0-4][0-9]|555[0-5])/` (okay, I get the point!) The numbers are contrived, but they're also really basic. In the real world you might need to generate a regex on-the-fly for validation. **Learn more** If you're interested in learning more about [character classes](http://www.regular-expressions.info/charclass.html) and other regex features, I personally have always found [regular-expressions.info](http://www.regular-expressions.info/charclass.html) to be pretty useful. ### Heavily tested As of April 07, 2019, this library runs [>1m test assertions](./test/test.js) against generated regex-ranges to provide brute-force verification that results are correct. Tests run in ~280ms on my MacBook Pro, 2.5 GHz Intel Core i7. ### Optimized Generated regular expressions are optimized: * duplicate sequences and character classes are reduced using quantifiers * smart enough to use `?` conditionals when number(s) or range(s) can be positive or negative * uses fragment caching to avoid processing the same exact string more than once Usage Add this library to your javascript application with the following line of code const toRegexRange = require ( 'to-regex-range' ); The main export is a function that takes two integers: the min value and max value (formatted as strings or numbers). const source = toRegexRange ( '15' , '95' ); //=> 1[5-9]|[2-8][0-9]|9[0-5] const regex = new RegExp ( `^ ${ source } $` ); console . log ( regex . test ( '14' )); //=> false console . log ( regex . test ( '50' )); //=> true console . log ( regex . test ( '94' )); //=> true console . log ( regex . test ( '96' )); //=> false Options options.capture Type : boolean Deafault : undefined Wrap the returned value in parentheses when there is more than one regex condition. Useful when you're dynamically generating ranges. console . log ( toRegexRange ( '-10' , '10' )); //=> -[1-9]|-?10|[0-9] console . log ( toRegexRange ( '-10' , '10' , { capture : true })); //=> (-[1-9]|-?10|[0-9]) options.shorthand Type : boolean Deafault : undefined Use the regex shorthand for [0-9] : console . log ( toRegexRange ( '0' , '999999' )); //=> [0-9]|[1-9][0-9]{1,5} console . log ( toRegexRange ( '0' , '999999' , { shorthand : true })); //=> \\d|[1-9]\\d{1,5} options.relaxZeros Type : boolean Default : true This option relaxes matching for leading zeros when when ranges are zero-padded. const source = toRegexRange ( '-0010' , '0010' ); const regex = new RegExp ( `^ ${ source } $` ); console . log ( regex . test ( '-10' )); //=> true console . log ( regex . test ( '-010' )); //=> true console . log ( regex . test ( '-0010' )); //=> true console . log ( regex . test ( '10' )); //=> true console . log ( regex . test ( '010' )); //=> true console . log ( regex . test ( '0010' )); //=> true When relaxZeros is false, matching is strict: const source = toRegexRange ( '-0010' , '0010' , { relaxZeros : false }); const regex = new RegExp ( `^ ${ source } $` ); console . log ( regex . test ( '-10' )); //=> false console . log ( regex . test ( '-010' )); //=> false console . log ( regex . test ( '-0010' )); //=> true console . log ( regex . test ( '10' )); //=> false console . log ( regex . test ( '010' )); //=> false console . log ( regex . test ( '0010' )); //=> true Examples Range Result Compile time toRegexRange(-10, 10) -[1-9]\\|-?10\\|[0-9] 132\u03bcs toRegexRange(-100, -10) -1[0-9]\\|-[2-9][0-9]\\|-100 50\u03bcs toRegexRange(-100, 100) -[1-9]\\|-?[1-9][0-9]\\|-?100\\|[0-9] 42\u03bcs toRegexRange(001, 100) 0{0,2}[1-9]\\|0?[1-9][0-9]\\|100 109\u03bcs toRegexRange(001, 555) 0{0,2}[1-9]\\|0?[1-9][0-9]\\|[1-4][0-9]{2}\\|5[0-4][0-9]\\|55[0-5] 51\u03bcs toRegexRange(0010, 1000) 0{0,2}1[0-9]\\|0{0,2}[2-9][0-9]\\|0?[1-9][0-9]{2}\\|1000 31\u03bcs toRegexRange(1, 50) [1-9]\\|[1-4][0-9]\\|50 24\u03bcs toRegexRange(1, 55) [1-9]\\|[1-4][0-9]\\|5[0-5] 23\u03bcs toRegexRange(1, 555) [1-9]\\|[1-9][0-9]\\|[1-4][0-9]{2}\\|5[0-4][0-9]\\|55[0-5] 30\u03bcs toRegexRange(1, 5555) [1-9]\\|[1-9][0-9]{1,2}\\|[1-4][0-9]{3}\\|5[0-4][0-9]{2}\\|55[0-4][0-9]\\|555[0-5] 43\u03bcs toRegexRange(111, 555) 11[1-9]\\|1[2-9][0-9]\\|[2-4][0-9]{2}\\|5[0-4][0-9]\\|55[0-5] 38\u03bcs toRegexRange(29, 51) 29\\|[34][0-9]\\|5[01] 24\u03bcs toRegexRange(31, 877) 3[1-9]\\|[4-9][0-9]\\|[1-7][0-9]{2}\\|8[0-6][0-9]\\|87[0-7] 32\u03bcs toRegexRange(5, 5) 5 8\u03bcs toRegexRange(5, 6) 5\\|6 11\u03bcs toRegexRange(1, 2) 1\\|2 6\u03bcs toRegexRange(1, 5) [1-5] 15\u03bcs toRegexRange(1, 10) [1-9]\\|10 22\u03bcs toRegexRange(1, 100) [1-9]\\|[1-9][0-9]\\|100 25\u03bcs toRegexRange(1, 1000) [1-9]\\|[1-9][0-9]{1,2}\\|1000 31\u03bcs toRegexRange(1, 10000) [1-9]\\|[1-9][0-9]{1,3}\\|10000 34\u03bcs toRegexRange(1, 100000) [1-9]\\|[1-9][0-9]{1,4}\\|100000 36\u03bcs toRegexRange(1, 1000000) [1-9]\\|[1-9][0-9]{1,5}\\|1000000 42\u03bcs toRegexRange(1, 10000000) [1-9]\\|[1-9][0-9]{1,6}\\|10000000 42\u03bcs Heads up! Order of arguments When the min is larger than the max , values will be flipped to create a valid range: toRegexRange ( '51' , '29' ); Is effectively flipped to: toRegexRange ( '29' , '51' ); //=> 29|[3-4][0-9]|5[0-1] Steps / increments This library does not support steps (increments). A pr to add support would be welcome. History v2.0.0 - 2017-04-21 New features Adds support for zero-padding! v1.0.0 Optimizations Repeating ranges are now grouped using quantifiers. rocessing time is roughly the same, but the generated regex is much smaller, which should result in faster matching. Attribution Inspired by the python library range-regex . About Contributing Pull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new). Running Tests Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command: $ npm install && npm test Building docs _(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_ To generate the readme, run the following command: $ npm install -g verbose/verb#dev verb-generate-readme && verb Related projects You might also be interested in these projects: expand-range : Fast, bash-like range expansion. Expand a range of numbers or letters, uppercase or lowercase. Used\u2026 more | homepage fill-range : Fill in a range of numbers or letters, optionally passing an increment or step to\u2026 more | homepage micromatch : Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch. | homepage repeat-element : Create an array by repeating the given value n times. | homepage repeat-string : Repeat the given string n times. Fastest implementation for repeating a string. | homepage Contributors Commits Contributor 63 jonschlinkert 3 doowb 2 realityking Author Jon Schlinkert GitHub Profile Twitter Profile LinkedIn Profile Please consider supporting me on Patreon, or start your own Patreon page ! License Copyright \u00a9 2019, Jon Schlinkert . Released under the MIT License . This file was generated by verb-generate-readme , v0.8.0, on April 07, 2019.","title":"to-regex-range Donate NPM version NPM monthly downloads NPM total downloads Linux Build Status"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#to-regex-range","text":"Pass two numbers, get a regex-compatible source string for matching ranges. Validated against more than 2.78 million test assertions. Please consider following this project's author, Jon Schlinkert , and consider starring the project to show your and support.","title":"to-regex-range"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#install","text":"Install with npm : $ npm install --save to-regex-range What does this do? This libary generates the `source` string to be passed to `new RegExp()` for matching a range of numbers. **Example** const toRegexRange = require ( 'to-regex-range' ); const regex = new RegExp ( toRegexRange ( '15' , '95' )); A string is returned so that you can do whatever you need with it before passing it to `new RegExp()` (like adding `^` or `$` boundaries, defining flags, or combining it another string). Why use this library? ### Convenience Creating regular expressions for matching numbers gets deceptively complicated pretty fast. For example, let's say you need a validation regex for matching part of a user-id, postal code, social security number, tax id, etc: * regex for matching `1` => `/1/` (easy enough) * regex for matching `1` through `5` => `/[1-5]/` (not bad...) * regex for matching `1` or `5` => `/(1|5)/` (still easy...) * regex for matching `1` through `50` => `/([1-9]|[1-4][0-9]|50)/` (uh-oh...) * regex for matching `1` through `55` => `/([1-9]|[1-4][0-9]|5[0-5])/` (no prob, I can do this...) * regex for matching `1` through `555` => `/([1-9]|[1-9][0-9]|[1-4][0-9]{2}|5[0-4][0-9]|55[0-5])/` (maybe not...) * regex for matching `0001` through `5555` => `/(0{3}[1-9]|0{2}[1-9][0-9]|0[1-9][0-9]{2}|[1-4][0-9]{3}|5[0-4][0-9]{2}|55[0-4][0-9]|555[0-5])/` (okay, I get the point!) The numbers are contrived, but they're also really basic. In the real world you might need to generate a regex on-the-fly for validation. **Learn more** If you're interested in learning more about [character classes](http://www.regular-expressions.info/charclass.html) and other regex features, I personally have always found [regular-expressions.info](http://www.regular-expressions.info/charclass.html) to be pretty useful. ### Heavily tested As of April 07, 2019, this library runs [>1m test assertions](./test/test.js) against generated regex-ranges to provide brute-force verification that results are correct. Tests run in ~280ms on my MacBook Pro, 2.5 GHz Intel Core i7. ### Optimized Generated regular expressions are optimized: * duplicate sequences and character classes are reduced using quantifiers * smart enough to use `?` conditionals when number(s) or range(s) can be positive or negative * uses fragment caching to avoid processing the same exact string more than once","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#usage","text":"Add this library to your javascript application with the following line of code const toRegexRange = require ( 'to-regex-range' ); The main export is a function that takes two integers: the min value and max value (formatted as strings or numbers). const source = toRegexRange ( '15' , '95' ); //=> 1[5-9]|[2-8][0-9]|9[0-5] const regex = new RegExp ( `^ ${ source } $` ); console . log ( regex . test ( '14' )); //=> false console . log ( regex . test ( '50' )); //=> true console . log ( regex . test ( '94' )); //=> true console . log ( regex . test ( '96' )); //=> false","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#options","text":"","title":"Options"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#optionscapture","text":"Type : boolean Deafault : undefined Wrap the returned value in parentheses when there is more than one regex condition. Useful when you're dynamically generating ranges. console . log ( toRegexRange ( '-10' , '10' )); //=> -[1-9]|-?10|[0-9] console . log ( toRegexRange ( '-10' , '10' , { capture : true })); //=> (-[1-9]|-?10|[0-9])","title":"options.capture"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#optionsshorthand","text":"Type : boolean Deafault : undefined Use the regex shorthand for [0-9] : console . log ( toRegexRange ( '0' , '999999' )); //=> [0-9]|[1-9][0-9]{1,5} console . log ( toRegexRange ( '0' , '999999' , { shorthand : true })); //=> \\d|[1-9]\\d{1,5}","title":"options.shorthand"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#optionsrelaxzeros","text":"Type : boolean Default : true This option relaxes matching for leading zeros when when ranges are zero-padded. const source = toRegexRange ( '-0010' , '0010' ); const regex = new RegExp ( `^ ${ source } $` ); console . log ( regex . test ( '-10' )); //=> true console . log ( regex . test ( '-010' )); //=> true console . log ( regex . test ( '-0010' )); //=> true console . log ( regex . test ( '10' )); //=> true console . log ( regex . test ( '010' )); //=> true console . log ( regex . test ( '0010' )); //=> true When relaxZeros is false, matching is strict: const source = toRegexRange ( '-0010' , '0010' , { relaxZeros : false }); const regex = new RegExp ( `^ ${ source } $` ); console . log ( regex . test ( '-10' )); //=> false console . log ( regex . test ( '-010' )); //=> false console . log ( regex . test ( '-0010' )); //=> true console . log ( regex . test ( '10' )); //=> false console . log ( regex . test ( '010' )); //=> false console . log ( regex . test ( '0010' )); //=> true","title":"options.relaxZeros"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#examples","text":"Range Result Compile time toRegexRange(-10, 10) -[1-9]\\|-?10\\|[0-9] 132\u03bcs toRegexRange(-100, -10) -1[0-9]\\|-[2-9][0-9]\\|-100 50\u03bcs toRegexRange(-100, 100) -[1-9]\\|-?[1-9][0-9]\\|-?100\\|[0-9] 42\u03bcs toRegexRange(001, 100) 0{0,2}[1-9]\\|0?[1-9][0-9]\\|100 109\u03bcs toRegexRange(001, 555) 0{0,2}[1-9]\\|0?[1-9][0-9]\\|[1-4][0-9]{2}\\|5[0-4][0-9]\\|55[0-5] 51\u03bcs toRegexRange(0010, 1000) 0{0,2}1[0-9]\\|0{0,2}[2-9][0-9]\\|0?[1-9][0-9]{2}\\|1000 31\u03bcs toRegexRange(1, 50) [1-9]\\|[1-4][0-9]\\|50 24\u03bcs toRegexRange(1, 55) [1-9]\\|[1-4][0-9]\\|5[0-5] 23\u03bcs toRegexRange(1, 555) [1-9]\\|[1-9][0-9]\\|[1-4][0-9]{2}\\|5[0-4][0-9]\\|55[0-5] 30\u03bcs toRegexRange(1, 5555) [1-9]\\|[1-9][0-9]{1,2}\\|[1-4][0-9]{3}\\|5[0-4][0-9]{2}\\|55[0-4][0-9]\\|555[0-5] 43\u03bcs toRegexRange(111, 555) 11[1-9]\\|1[2-9][0-9]\\|[2-4][0-9]{2}\\|5[0-4][0-9]\\|55[0-5] 38\u03bcs toRegexRange(29, 51) 29\\|[34][0-9]\\|5[01] 24\u03bcs toRegexRange(31, 877) 3[1-9]\\|[4-9][0-9]\\|[1-7][0-9]{2}\\|8[0-6][0-9]\\|87[0-7] 32\u03bcs toRegexRange(5, 5) 5 8\u03bcs toRegexRange(5, 6) 5\\|6 11\u03bcs toRegexRange(1, 2) 1\\|2 6\u03bcs toRegexRange(1, 5) [1-5] 15\u03bcs toRegexRange(1, 10) [1-9]\\|10 22\u03bcs toRegexRange(1, 100) [1-9]\\|[1-9][0-9]\\|100 25\u03bcs toRegexRange(1, 1000) [1-9]\\|[1-9][0-9]{1,2}\\|1000 31\u03bcs toRegexRange(1, 10000) [1-9]\\|[1-9][0-9]{1,3}\\|10000 34\u03bcs toRegexRange(1, 100000) [1-9]\\|[1-9][0-9]{1,4}\\|100000 36\u03bcs toRegexRange(1, 1000000) [1-9]\\|[1-9][0-9]{1,5}\\|1000000 42\u03bcs toRegexRange(1, 10000000) [1-9]\\|[1-9][0-9]{1,6}\\|10000000 42\u03bcs","title":"Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#heads-up","text":"Order of arguments When the min is larger than the max , values will be flipped to create a valid range: toRegexRange ( '51' , '29' ); Is effectively flipped to: toRegexRange ( '29' , '51' ); //=> 29|[3-4][0-9]|5[0-1] Steps / increments This library does not support steps (increments). A pr to add support would be welcome.","title":"Heads up!"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#history","text":"","title":"History"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#v200-2017-04-21","text":"New features Adds support for zero-padding!","title":"v2.0.0 - 2017-04-21"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#v100","text":"Optimizations Repeating ranges are now grouped using quantifiers. rocessing time is roughly the same, but the generated regex is much smaller, which should result in faster matching.","title":"v1.0.0"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#attribution","text":"Inspired by the python library range-regex .","title":"Attribution"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#about","text":"Contributing Pull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new). Running Tests Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command: $ npm install && npm test Building docs _(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_ To generate the readme, run the following command: $ npm install -g verbose/verb#dev verb-generate-readme && verb","title":"About"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#related-projects","text":"You might also be interested in these projects: expand-range : Fast, bash-like range expansion. Expand a range of numbers or letters, uppercase or lowercase. Used\u2026 more | homepage fill-range : Fill in a range of numbers or letters, optionally passing an increment or step to\u2026 more | homepage micromatch : Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch. | homepage repeat-element : Create an array by repeating the given value n times. | homepage repeat-string : Repeat the given string n times. Fastest implementation for repeating a string. | homepage","title":"Related projects"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#contributors","text":"Commits Contributor 63 jonschlinkert 3 doowb 2 realityking","title":"Contributors"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#author","text":"Jon Schlinkert GitHub Profile Twitter Profile LinkedIn Profile Please consider supporting me on Patreon, or start your own Patreon page !","title":"Author"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#license","text":"Copyright \u00a9 2019, Jon Schlinkert . Released under the MIT License . This file was generated by verb-generate-readme , v0.8.0, on April 07, 2019.","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/toidentifier/","text":"toidentifier Convert a string of words to a JavaScript identifier Install This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install toidentifier Example var toIdentifier = require ( 'toidentifier' ) console . log ( toIdentifier ( 'Bad Request' )) // => \"BadRequest\" API This CommonJS module exports a single default function: toIdentifier . toIdentifier(string) Given a string as the argument, it will be transformed according to the following rules and the new string will be returned: Split into words separated by space characters ( 0x20 ). Upper case the first character of each word. Join the words together with no separator. Remove all non-word ( [0-9a-z_] ) characters. License MIT","title":"toidentifier"},{"location":"system-desing/crud-app/JS/server/node_modules/toidentifier/#toidentifier","text":"Convert a string of words to a JavaScript identifier","title":"toidentifier"},{"location":"system-desing/crud-app/JS/server/node_modules/toidentifier/#install","text":"This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install toidentifier","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/toidentifier/#example","text":"var toIdentifier = require ( 'toidentifier' ) console . log ( toIdentifier ( 'Bad Request' )) // => \"BadRequest\"","title":"Example"},{"location":"system-desing/crud-app/JS/server/node_modules/toidentifier/#api","text":"This CommonJS module exports a single default function: toIdentifier .","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/toidentifier/#toidentifierstring","text":"Given a string as the argument, it will be transformed according to the following rules and the new string will be returned: Split into words separated by space characters ( 0x20 ). Upper case the first character of each word. Join the words together with no separator. Remove all non-word ( [0-9a-z_] ) characters.","title":"toIdentifier(string)"},{"location":"system-desing/crud-app/JS/server/node_modules/toidentifier/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/toidentifier/#_1","text":"","title":""},{"location":"system-desing/crud-app/JS/server/node_modules/toidentifier/HISTORY/","text":"1.0.1 / 2021-11-14 pref: enable strict mode 1.0.0 / 2018-07-09 Initial release","title":"1.0.1 / 2021-11-14"},{"location":"system-desing/crud-app/JS/server/node_modules/toidentifier/HISTORY/#101-2021-11-14","text":"pref: enable strict mode","title":"1.0.1 / 2021-11-14"},{"location":"system-desing/crud-app/JS/server/node_modules/toidentifier/HISTORY/#100-2018-07-09","text":"Initial release","title":"1.0.0 / 2018-07-09"},{"location":"system-desing/crud-app/JS/server/node_modules/touch/","text":"node-touch For all your node touching needs. Installing npm install touch CLI Usage: See man touch This package exports a binary called nodetouch that works mostly like the unix builtin touch(1) . API Usage: var touch = require ( \"touch\" ) Gives you the following functions: touch(filename, options, cb) touch.sync(filename, options) touch.ftouch(fd, options, cb) touch.ftouchSync(fd, options) All the options objects are optional. All the async functions return a Promise. If a callback function is provided, then it's attached to the Promise. Options force like touch -f Boolean time like touch -t <date> Can be a Date object, or any parseable Date string, or epoch ms number. atime like touch -a Can be either a Boolean, or a Date. mtime like touch -m Can be either a Boolean, or a Date. ref like touch -r <file> Must be path to a file. nocreate like touch -c Boolean If neither atime nor mtime are set, then both values are set. If one of them is set, then the other is not. cli This package creates a nodetouch command line executable that works very much like the unix builtin touch(1)","title":"node-touch"},{"location":"system-desing/crud-app/JS/server/node_modules/touch/#node-touch","text":"For all your node touching needs.","title":"node-touch"},{"location":"system-desing/crud-app/JS/server/node_modules/touch/#installing","text":"npm install touch","title":"Installing"},{"location":"system-desing/crud-app/JS/server/node_modules/touch/#cli-usage","text":"See man touch This package exports a binary called nodetouch that works mostly like the unix builtin touch(1) .","title":"CLI Usage:"},{"location":"system-desing/crud-app/JS/server/node_modules/touch/#api-usage","text":"var touch = require ( \"touch\" ) Gives you the following functions: touch(filename, options, cb) touch.sync(filename, options) touch.ftouch(fd, options, cb) touch.ftouchSync(fd, options) All the options objects are optional. All the async functions return a Promise. If a callback function is provided, then it's attached to the Promise.","title":"API Usage:"},{"location":"system-desing/crud-app/JS/server/node_modules/touch/#options","text":"force like touch -f Boolean time like touch -t <date> Can be a Date object, or any parseable Date string, or epoch ms number. atime like touch -a Can be either a Boolean, or a Date. mtime like touch -m Can be either a Boolean, or a Date. ref like touch -r <file> Must be path to a file. nocreate like touch -c Boolean If neither atime nor mtime are set, then both values are set. If one of them is set, then the other is not.","title":"Options"},{"location":"system-desing/crud-app/JS/server/node_modules/touch/#cli","text":"This package creates a nodetouch command line executable that works very much like the unix builtin touch(1)","title":"cli"},{"location":"system-desing/crud-app/JS/server/node_modules/tr46/","text":"tr46 An JavaScript implementation of Unicode Technical Standard #46: Unicode IDNA Compatibility Processing . API toASCII(domainName[, options]) Converts a string of Unicode symbols to a case-folded Punycode string of ASCII symbols. Available options: checkBidi checkHyphens checkJoiners ignoreInvalidPunycode transitionalProcessing useSTD3ASCIIRules verifyDNSLength toUnicode(domainName[, options]) Converts a case-folded Punycode string of ASCII symbols to a string of Unicode symbols. Available options: checkBidi checkHyphens checkJoiners ignoreInvalidPunycode transitionalProcessing useSTD3ASCIIRules Options checkBidi Type: boolean Default value: false When set to true , any bi-directional text within the input will be checked for validation. checkHyphens Type: boolean Default value: false When set to true , the positions of any hyphen characters within the input will be checked for validation. checkJoiners Type: boolean Default value: false When set to true , any word joiner characters within the input will be checked for validation. ignoreInvalidPunycode Type: boolean Default value: false When set to true , invalid Punycode strings within the input will be allowed. transitionalProcessing Type: boolean Default value: false When set to true , uses transitional (compatibility) processing of the deviation characters. useSTD3ASCIIRules Type: boolean Default value: false When set to true , input will be validated according to STD3 Rules . verifyDNSLength Type: boolean Default value: false When set to true , the length of each DNS label within the input will be checked for validation.","title":"tr46"},{"location":"system-desing/crud-app/JS/server/node_modules/tr46/#tr46","text":"An JavaScript implementation of Unicode Technical Standard #46: Unicode IDNA Compatibility Processing .","title":"tr46"},{"location":"system-desing/crud-app/JS/server/node_modules/tr46/#api","text":"","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/tr46/#toasciidomainname-options","text":"Converts a string of Unicode symbols to a case-folded Punycode string of ASCII symbols. Available options: checkBidi checkHyphens checkJoiners ignoreInvalidPunycode transitionalProcessing useSTD3ASCIIRules verifyDNSLength","title":"toASCII(domainName[, options])"},{"location":"system-desing/crud-app/JS/server/node_modules/tr46/#tounicodedomainname-options","text":"Converts a case-folded Punycode string of ASCII symbols to a string of Unicode symbols. Available options: checkBidi checkHyphens checkJoiners ignoreInvalidPunycode transitionalProcessing useSTD3ASCIIRules","title":"toUnicode(domainName[, options])"},{"location":"system-desing/crud-app/JS/server/node_modules/tr46/#options","text":"","title":"Options"},{"location":"system-desing/crud-app/JS/server/node_modules/tr46/#checkbidi","text":"Type: boolean Default value: false When set to true , any bi-directional text within the input will be checked for validation.","title":"checkBidi"},{"location":"system-desing/crud-app/JS/server/node_modules/tr46/#checkhyphens","text":"Type: boolean Default value: false When set to true , the positions of any hyphen characters within the input will be checked for validation.","title":"checkHyphens"},{"location":"system-desing/crud-app/JS/server/node_modules/tr46/#checkjoiners","text":"Type: boolean Default value: false When set to true , any word joiner characters within the input will be checked for validation.","title":"checkJoiners"},{"location":"system-desing/crud-app/JS/server/node_modules/tr46/#ignoreinvalidpunycode","text":"Type: boolean Default value: false When set to true , invalid Punycode strings within the input will be allowed.","title":"ignoreInvalidPunycode"},{"location":"system-desing/crud-app/JS/server/node_modules/tr46/#transitionalprocessing","text":"Type: boolean Default value: false When set to true , uses transitional (compatibility) processing of the deviation characters.","title":"transitionalProcessing"},{"location":"system-desing/crud-app/JS/server/node_modules/tr46/#usestd3asciirules","text":"Type: boolean Default value: false When set to true , input will be validated according to STD3 Rules .","title":"useSTD3ASCIIRules"},{"location":"system-desing/crud-app/JS/server/node_modules/tr46/#verifydnslength","text":"Type: boolean Default value: false When set to true , the length of each DNS label within the input will be checked for validation.","title":"verifyDNSLength"},{"location":"system-desing/crud-app/JS/server/node_modules/tr46/LICENSE/","text":"The MIT License (MIT) Copyright (c) Sebastian Mayr Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/","text":"type-is Infer the content-type of a request. Install This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install type-is API var http = require ( 'http' ) var typeis = require ( 'type-is' ) http . createServer ( function ( req , res ) { var istext = typeis ( req , [ 'text/*' ]) res . end ( 'you ' + ( istext ? 'sent' : 'did not send' ) + ' me text' ) }) typeis(request, types) Checks if the request is one of the types . If the request has no body, even if there is a Content-Type header, then null is returned. If the Content-Type header is invalid or does not matches any of the types , then false is returned. Otherwise, a string of the type that matched is returned. The request argument is expected to be a Node.js HTTP request. The types argument is an array of type strings. Each type in the types array can be one of the following: A file extension name such as json . This name will be returned if matched. A mime type such as application/json . A mime type with a wildcard such as */* or */json or application/* . The full mime type will be returned if matched. A suffix such as +json . This can be combined with a wildcard such as */vnd+json or application/*+json . The full mime type will be returned if matched. Some examples to illustrate the inputs and returned value: // req.headers.content-type = 'application/json' typeis ( req , [ 'json' ]) // => 'json' typeis ( req , [ 'html' , 'json' ]) // => 'json' typeis ( req , [ 'application/*' ]) // => 'application/json' typeis ( req , [ 'application/json' ]) // => 'application/json' typeis ( req , [ 'html' ]) // => false typeis.hasBody(request) Returns a Boolean if the given request has a body, regardless of the Content-Type header. Having a body has no relation to how large the body is (it may be 0 bytes). This is similar to how file existence works. If a body does exist, then this indicates that there is data to read from the Node.js request stream. if ( typeis . hasBody ( req )) { // read the body, since there is one req . on ( 'data' , function ( chunk ) { // ... }) } typeis.is(mediaType, types) Checks if the mediaType is one of the types . If the mediaType is invalid or does not matches any of the types , then false is returned. Otherwise, a string of the type that matched is returned. The mediaType argument is expected to be a media type string. The types argument is an array of type strings. Each type in the types array can be one of the following: A file extension name such as json . This name will be returned if matched. A mime type such as application/json . A mime type with a wildcard such as */* or */json or application/* . The full mime type will be returned if matched. A suffix such as +json . This can be combined with a wildcard such as */vnd+json or application/*+json . The full mime type will be returned if matched. Some examples to illustrate the inputs and returned value: var mediaType = 'application/json' typeis . is ( mediaType , [ 'json' ]) // => 'json' typeis . is ( mediaType , [ 'html' , 'json' ]) // => 'json' typeis . is ( mediaType , [ 'application/*' ]) // => 'application/json' typeis . is ( mediaType , [ 'application/json' ]) // => 'application/json' typeis . is ( mediaType , [ 'html' ]) // => false typeis.match(expected, actual) Match the type string expected with actual , taking in to account wildcards. A wildcard can only be in the type of the subtype part of a media type and only in the expected value (as actual should be the real media type to match). A suffix can still be included even with a wildcard subtype. If an input is malformed, false will be returned. typeis . match ( 'text/html' , 'text/html' ) // => true typeis . match ( '*/html' , 'text/html' ) // => true typeis . match ( 'text/*' , 'text/html' ) // => true typeis . match ( '*/*' , 'text/html' ) // => true typeis . match ( '*/*+json' , 'application/x-custom+json' ) // => true typeis.normalize(type) Normalize a type string. This works by performing the following: If the type is not a string, false is returned. If the string starts with + (so it is a +suffix shorthand like +json ), then it is expanded to contain the complete wildcard notation of */*+suffix . If the string contains a / , then it is returned as the type. Else the string is assumed to be a file extension and the mapped media type is returned, or false is there is no mapping. This includes two special mappings: 'multipart' -> 'multipart/*' 'urlencoded' -> 'application/x-www-form-urlencoded' Examples Example body parser var express = require ( 'express' ) var typeis = require ( 'type-is' ) var app = express () app . use ( function bodyParser ( req , res , next ) { if ( ! typeis . hasBody ( req )) { return next () } switch ( typeis ( req , [ 'urlencoded' , 'json' , 'multipart' ])) { case 'urlencoded' : // parse urlencoded body throw new Error ( 'implement urlencoded body parsing' ) case 'json' : // parse json body throw new Error ( 'implement json body parsing' ) case 'multipart' : // parse multipart body throw new Error ( 'implement multipart body parsing' ) default : // 415 error code res . statusCode = 415 res . end () break } }) License MIT","title":"type-is"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/#type-is","text":"Infer the content-type of a request.","title":"type-is"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/#install","text":"This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install type-is","title":"Install"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/#api","text":"var http = require ( 'http' ) var typeis = require ( 'type-is' ) http . createServer ( function ( req , res ) { var istext = typeis ( req , [ 'text/*' ]) res . end ( 'you ' + ( istext ? 'sent' : 'did not send' ) + ' me text' ) })","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/#typeisrequest-types","text":"Checks if the request is one of the types . If the request has no body, even if there is a Content-Type header, then null is returned. If the Content-Type header is invalid or does not matches any of the types , then false is returned. Otherwise, a string of the type that matched is returned. The request argument is expected to be a Node.js HTTP request. The types argument is an array of type strings. Each type in the types array can be one of the following: A file extension name such as json . This name will be returned if matched. A mime type such as application/json . A mime type with a wildcard such as */* or */json or application/* . The full mime type will be returned if matched. A suffix such as +json . This can be combined with a wildcard such as */vnd+json or application/*+json . The full mime type will be returned if matched. Some examples to illustrate the inputs and returned value: // req.headers.content-type = 'application/json' typeis ( req , [ 'json' ]) // => 'json' typeis ( req , [ 'html' , 'json' ]) // => 'json' typeis ( req , [ 'application/*' ]) // => 'application/json' typeis ( req , [ 'application/json' ]) // => 'application/json' typeis ( req , [ 'html' ]) // => false","title":"typeis(request, types)"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/#typeishasbodyrequest","text":"Returns a Boolean if the given request has a body, regardless of the Content-Type header. Having a body has no relation to how large the body is (it may be 0 bytes). This is similar to how file existence works. If a body does exist, then this indicates that there is data to read from the Node.js request stream. if ( typeis . hasBody ( req )) { // read the body, since there is one req . on ( 'data' , function ( chunk ) { // ... }) }","title":"typeis.hasBody(request)"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/#typeisismediatype-types","text":"Checks if the mediaType is one of the types . If the mediaType is invalid or does not matches any of the types , then false is returned. Otherwise, a string of the type that matched is returned. The mediaType argument is expected to be a media type string. The types argument is an array of type strings. Each type in the types array can be one of the following: A file extension name such as json . This name will be returned if matched. A mime type such as application/json . A mime type with a wildcard such as */* or */json or application/* . The full mime type will be returned if matched. A suffix such as +json . This can be combined with a wildcard such as */vnd+json or application/*+json . The full mime type will be returned if matched. Some examples to illustrate the inputs and returned value: var mediaType = 'application/json' typeis . is ( mediaType , [ 'json' ]) // => 'json' typeis . is ( mediaType , [ 'html' , 'json' ]) // => 'json' typeis . is ( mediaType , [ 'application/*' ]) // => 'application/json' typeis . is ( mediaType , [ 'application/json' ]) // => 'application/json' typeis . is ( mediaType , [ 'html' ]) // => false","title":"typeis.is(mediaType, types)"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/#typeismatchexpected-actual","text":"Match the type string expected with actual , taking in to account wildcards. A wildcard can only be in the type of the subtype part of a media type and only in the expected value (as actual should be the real media type to match). A suffix can still be included even with a wildcard subtype. If an input is malformed, false will be returned. typeis . match ( 'text/html' , 'text/html' ) // => true typeis . match ( '*/html' , 'text/html' ) // => true typeis . match ( 'text/*' , 'text/html' ) // => true typeis . match ( '*/*' , 'text/html' ) // => true typeis . match ( '*/*+json' , 'application/x-custom+json' ) // => true","title":"typeis.match(expected, actual)"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/#typeisnormalizetype","text":"Normalize a type string. This works by performing the following: If the type is not a string, false is returned. If the string starts with + (so it is a +suffix shorthand like +json ), then it is expanded to contain the complete wildcard notation of */*+suffix . If the string contains a / , then it is returned as the type. Else the string is assumed to be a file extension and the mapped media type is returned, or false is there is no mapping. This includes two special mappings: 'multipart' -> 'multipart/*' 'urlencoded' -> 'application/x-www-form-urlencoded'","title":"typeis.normalize(type)"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/#examples","text":"","title":"Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/#example-body-parser","text":"var express = require ( 'express' ) var typeis = require ( 'type-is' ) var app = express () app . use ( function bodyParser ( req , res , next ) { if ( ! typeis . hasBody ( req )) { return next () } switch ( typeis ( req , [ 'urlencoded' , 'json' , 'multipart' ])) { case 'urlencoded' : // parse urlencoded body throw new Error ( 'implement urlencoded body parsing' ) case 'json' : // parse json body throw new Error ( 'implement json body parsing' ) case 'multipart' : // parse multipart body throw new Error ( 'implement multipart body parsing' ) default : // 415 error code res . statusCode = 415 res . end () break } })","title":"Example body parser"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/","text":"2.0.1 / 2025-03-27 2.0.0 / 2024-08-31 Drop node <18 Use content-type@^1.0.5 and media-typer@^1.0.0 for type validation No behavior changes, upgrades media-typer deps: mime-types@^3.0.0 Add application/toml with extension .toml Add application/ubjson with extension .ubj Add application/x-keepass2 with extension .kdbx Add deprecated iWorks mime types and extensions Add extension .amr to audio/amr Add extension .cjs to application/node Add extension .dbf to application/vnd.dbf Add extension .m4s to video/iso.segment Add extension .mvt to application/vnd.mapbox-vector-tile Add extension .mxmf to audio/mobile-xmf Add extension .opus to audio/ogg Add extension .rar to application/vnd.rar Add extension .td to application/urc-targetdesc+xml Add extension .trig to application/trig Add extensions from IANA for application/*+xml types Add image/avif with extension .avif Add image/ktx2 with extension .ktx2 Add image/vnd.ms-dds with extension .dds Add new upstream MIME types Fix extension of application/vnd.apple.keynote to be .key Remove ambigious extensions from IANA for application/*+xml types Update primary extension to .es for application/ecmascript 1.6.18 / 2019-04-26 Fix regression passing request object to typeis.is 1.6.17 / 2019-04-25 deps: mime-types@~2.1.24 Add Apple file extensions from IANA Add extension .csl to application/vnd.citationstyles.style+xml Add extension .es to application/ecmascript Add extension .nq to application/n-quads Add extension .nt to application/n-triples Add extension .owl to application/rdf+xml Add extensions .siv and .sieve to application/sieve Add extensions from IANA for image/* types Add extensions from IANA for model/* types Add extensions to HEIC image types Add new mime types Add text/mdx with extension .mdx perf: prevent internal throw on invalid type 1.6.16 / 2018-02-16 deps: mime-types@~2.1.18 Add application/raml+yaml with extension .raml Add application/wasm with extension .wasm Add text/shex with extension .shex Add extensions for JPEG-2000 images Add extensions from IANA for message/* types Add extension .mjs to application/javascript Add extension .wadl to application/vnd.sun.wadl+xml Add extension .gz to application/gzip Add glTF types and extensions Add new mime types Update extensions .md and .markdown to be text/markdown Update font MIME types Update text/hjson to registered application/hjson 1.6.15 / 2017-03-31 deps: mime-types@~2.1.15 Add new mime types 1.6.14 / 2016-11-18 deps: mime-types@~2.1.13 Add new mime types 1.6.13 / 2016-05-18 deps: mime-types@~2.1.11 Add new mime types 1.6.12 / 2016-02-28 deps: mime-types@~2.1.10 Add new mime types Fix extension of application/dash+xml Update primary extension for audio/mp4 1.6.11 / 2016-01-29 deps: mime-types@~2.1.9 Add new mime types 1.6.10 / 2015-12-01 deps: mime-types@~2.1.8 Add new mime types 1.6.9 / 2015-09-27 deps: mime-types@~2.1.7 Add new mime types 1.6.8 / 2015-09-04 deps: mime-types@~2.1.6 Add new mime types 1.6.7 / 2015-08-20 Fix type error when given invalid type to match against deps: mime-types@~2.1.5 Add new mime types 1.6.6 / 2015-07-31 deps: mime-types@~2.1.4 Add new mime types 1.6.5 / 2015-07-16 deps: mime-types@~2.1.3 Add new mime types 1.6.4 / 2015-07-01 deps: mime-types@~2.1.2 Add new mime types perf: enable strict mode perf: remove argument reassignment 1.6.3 / 2015-06-08 deps: mime-types@~2.1.1 Add new mime types perf: reduce try block size perf: remove bitwise operations 1.6.2 / 2015-05-10 deps: mime-types@~2.0.11 Add new mime types 1.6.1 / 2015-03-13 deps: mime-types@~2.0.10 Add new mime types 1.6.0 / 2015-02-12 fix false-positives in hasBody Transfer-Encoding check support wildcard for both type and subtype ( */* ) 1.5.7 / 2015-02-09 fix argument reassignment deps: mime-types@~2.0.9 Add new mime types 1.5.6 / 2015-01-29 deps: mime-types@~2.0.8 Add new mime types 1.5.5 / 2014-12-30 deps: mime-types@~2.0.7 Add new mime types Fix missing extensions Fix various invalid MIME type entries Remove example template MIME types deps: mime-db@~1.5.0 1.5.4 / 2014-12-10 deps: mime-types@~2.0.4 Add new mime types deps: mime-db@~1.3.0 1.5.3 / 2014-11-09 deps: mime-types@~2.0.3 Add new mime types deps: mime-db@~1.2.0 1.5.2 / 2014-09-28 deps: mime-types@~2.0.2 Add new mime types deps: mime-db@~1.1.0 1.5.1 / 2014-09-07 Support Node.js 0.6 deps: media-typer@0.3.0 deps: mime-types@~2.0.1 Support Node.js 0.6 1.5.0 / 2014-09-05 fix hasbody to be true for content-length: 0 1.4.0 / 2014-09-02 update mime-types 1.3.2 / 2014-06-24 use ~ range on mime-types 1.3.1 / 2014-06-19 fix global variable leak 1.3.0 / 2014-06-19 improve type parsing invalid media type never matches media type not case-sensitive extra LWS does not affect results 1.2.2 / 2014-06-19 fix behavior on unknown type argument 1.2.1 / 2014-06-03 switch dependency from mime to mime-types@1.0.0 1.2.0 / 2014-05-11 support suffix matching: +json matches application/vnd+json */vnd+json matches application/vnd+json application/*+json matches application/vnd+json 1.1.0 / 2014-04-12 add non-array values support expose internal utilities: .is() .hasBody() .normalize() .match() 1.0.1 / 2014-03-30 add multipart as a shorthand","title":"2.0.1 / 2025-03-27"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#201-2025-03-27","text":"","title":"2.0.1 / 2025-03-27"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#200-2024-08-31","text":"Drop node <18 Use content-type@^1.0.5 and media-typer@^1.0.0 for type validation No behavior changes, upgrades media-typer deps: mime-types@^3.0.0 Add application/toml with extension .toml Add application/ubjson with extension .ubj Add application/x-keepass2 with extension .kdbx Add deprecated iWorks mime types and extensions Add extension .amr to audio/amr Add extension .cjs to application/node Add extension .dbf to application/vnd.dbf Add extension .m4s to video/iso.segment Add extension .mvt to application/vnd.mapbox-vector-tile Add extension .mxmf to audio/mobile-xmf Add extension .opus to audio/ogg Add extension .rar to application/vnd.rar Add extension .td to application/urc-targetdesc+xml Add extension .trig to application/trig Add extensions from IANA for application/*+xml types Add image/avif with extension .avif Add image/ktx2 with extension .ktx2 Add image/vnd.ms-dds with extension .dds Add new upstream MIME types Fix extension of application/vnd.apple.keynote to be .key Remove ambigious extensions from IANA for application/*+xml types Update primary extension to .es for application/ecmascript","title":"2.0.0 / 2024-08-31"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#1618-2019-04-26","text":"Fix regression passing request object to typeis.is","title":"1.6.18 / 2019-04-26"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#1617-2019-04-25","text":"deps: mime-types@~2.1.24 Add Apple file extensions from IANA Add extension .csl to application/vnd.citationstyles.style+xml Add extension .es to application/ecmascript Add extension .nq to application/n-quads Add extension .nt to application/n-triples Add extension .owl to application/rdf+xml Add extensions .siv and .sieve to application/sieve Add extensions from IANA for image/* types Add extensions from IANA for model/* types Add extensions to HEIC image types Add new mime types Add text/mdx with extension .mdx perf: prevent internal throw on invalid type","title":"1.6.17 / 2019-04-25"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#1616-2018-02-16","text":"deps: mime-types@~2.1.18 Add application/raml+yaml with extension .raml Add application/wasm with extension .wasm Add text/shex with extension .shex Add extensions for JPEG-2000 images Add extensions from IANA for message/* types Add extension .mjs to application/javascript Add extension .wadl to application/vnd.sun.wadl+xml Add extension .gz to application/gzip Add glTF types and extensions Add new mime types Update extensions .md and .markdown to be text/markdown Update font MIME types Update text/hjson to registered application/hjson","title":"1.6.16 / 2018-02-16"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#1615-2017-03-31","text":"deps: mime-types@~2.1.15 Add new mime types","title":"1.6.15 / 2017-03-31"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#1614-2016-11-18","text":"deps: mime-types@~2.1.13 Add new mime types","title":"1.6.14 / 2016-11-18"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#1613-2016-05-18","text":"deps: mime-types@~2.1.11 Add new mime types","title":"1.6.13 / 2016-05-18"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#1612-2016-02-28","text":"deps: mime-types@~2.1.10 Add new mime types Fix extension of application/dash+xml Update primary extension for audio/mp4","title":"1.6.12 / 2016-02-28"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#1611-2016-01-29","text":"deps: mime-types@~2.1.9 Add new mime types","title":"1.6.11 / 2016-01-29"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#1610-2015-12-01","text":"deps: mime-types@~2.1.8 Add new mime types","title":"1.6.10 / 2015-12-01"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#169-2015-09-27","text":"deps: mime-types@~2.1.7 Add new mime types","title":"1.6.9 / 2015-09-27"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#168-2015-09-04","text":"deps: mime-types@~2.1.6 Add new mime types","title":"1.6.8 / 2015-09-04"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#167-2015-08-20","text":"Fix type error when given invalid type to match against deps: mime-types@~2.1.5 Add new mime types","title":"1.6.7 / 2015-08-20"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#166-2015-07-31","text":"deps: mime-types@~2.1.4 Add new mime types","title":"1.6.6 / 2015-07-31"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#165-2015-07-16","text":"deps: mime-types@~2.1.3 Add new mime types","title":"1.6.5 / 2015-07-16"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#164-2015-07-01","text":"deps: mime-types@~2.1.2 Add new mime types perf: enable strict mode perf: remove argument reassignment","title":"1.6.4 / 2015-07-01"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#163-2015-06-08","text":"deps: mime-types@~2.1.1 Add new mime types perf: reduce try block size perf: remove bitwise operations","title":"1.6.3 / 2015-06-08"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#162-2015-05-10","text":"deps: mime-types@~2.0.11 Add new mime types","title":"1.6.2 / 2015-05-10"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#161-2015-03-13","text":"deps: mime-types@~2.0.10 Add new mime types","title":"1.6.1 / 2015-03-13"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#160-2015-02-12","text":"fix false-positives in hasBody Transfer-Encoding check support wildcard for both type and subtype ( */* )","title":"1.6.0 / 2015-02-12"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#157-2015-02-09","text":"fix argument reassignment deps: mime-types@~2.0.9 Add new mime types","title":"1.5.7 / 2015-02-09"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#156-2015-01-29","text":"deps: mime-types@~2.0.8 Add new mime types","title":"1.5.6 / 2015-01-29"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#155-2014-12-30","text":"deps: mime-types@~2.0.7 Add new mime types Fix missing extensions Fix various invalid MIME type entries Remove example template MIME types deps: mime-db@~1.5.0","title":"1.5.5 / 2014-12-30"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#154-2014-12-10","text":"deps: mime-types@~2.0.4 Add new mime types deps: mime-db@~1.3.0","title":"1.5.4 / 2014-12-10"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#153-2014-11-09","text":"deps: mime-types@~2.0.3 Add new mime types deps: mime-db@~1.2.0","title":"1.5.3 / 2014-11-09"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#152-2014-09-28","text":"deps: mime-types@~2.0.2 Add new mime types deps: mime-db@~1.1.0","title":"1.5.2 / 2014-09-28"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#151-2014-09-07","text":"Support Node.js 0.6 deps: media-typer@0.3.0 deps: mime-types@~2.0.1 Support Node.js 0.6","title":"1.5.1 / 2014-09-07"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#150-2014-09-05","text":"fix hasbody to be true for content-length: 0","title":"1.5.0 / 2014-09-05"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#140-2014-09-02","text":"update mime-types","title":"1.4.0 / 2014-09-02"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#132-2014-06-24","text":"use ~ range on mime-types","title":"1.3.2 / 2014-06-24"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#131-2014-06-19","text":"fix global variable leak","title":"1.3.1 / 2014-06-19"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#130-2014-06-19","text":"improve type parsing invalid media type never matches media type not case-sensitive extra LWS does not affect results","title":"1.3.0 / 2014-06-19"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#122-2014-06-19","text":"fix behavior on unknown type argument","title":"1.2.2 / 2014-06-19"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#121-2014-06-03","text":"switch dependency from mime to mime-types@1.0.0","title":"1.2.1 / 2014-06-03"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#120-2014-05-11","text":"support suffix matching: +json matches application/vnd+json */vnd+json matches application/vnd+json application/*+json matches application/vnd+json","title":"1.2.0 / 2014-05-11"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#110-2014-04-12","text":"add non-array values support expose internal utilities: .is() .hasBody() .normalize() .match()","title":"1.1.0 / 2014-04-12"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#101-2014-03-30","text":"add multipart as a shorthand","title":"1.0.1 / 2014-03-30"},{"location":"system-desing/crud-app/JS/server/node_modules/undefsafe/","text":"undefsafe Simple function for retrieving deep object properties without getting \"Cannot read property 'X' of undefined\" Can also be used to safely set deep values. Usage var object = { a : { b : { c : 1 , d : [ 1 , 2 , 3 ], e : 'remy' } } }; console . log ( undefsafe ( object , 'a.b.e' )); // \"remy\" console . log ( undefsafe ( object , 'a.b.not.found' )); // undefined Demo: https://jsbin.com/eroqame/3/edit?js,console Setting var object = { a : { b : [ 1 , 2 , 3 ] } }; // modified object var res = undefsafe ( object , 'a.b.0' , 10 ); console . log ( object ); // { a: { b: [10, 2, 3] } } console . log ( res ); // 1 - previous value Star rules in paths As of 1.2.0, undefsafe supports a * in the path if you want to search all of the properties (or array elements) for a particular element. The function will only return a single result, either the 3rd argument validation value, or the first positive match. For example, the following github data: const githubData = { commits : [{ modified : [ \"one\" , \"two\" ] }, /* ... */ ] }; // first modified file found in the first commit console . log ( undefsafe ( githubData , 'commits.*.modified.0' )); // returns `two` or undefined if not found console . log ( undefsafe ( githubData , 'commits.*.modified.*' , 'two' ));","title":"undefsafe"},{"location":"system-desing/crud-app/JS/server/node_modules/undefsafe/#undefsafe","text":"Simple function for retrieving deep object properties without getting \"Cannot read property 'X' of undefined\" Can also be used to safely set deep values.","title":"undefsafe"},{"location":"system-desing/crud-app/JS/server/node_modules/undefsafe/#usage","text":"var object = { a : { b : { c : 1 , d : [ 1 , 2 , 3 ], e : 'remy' } } }; console . log ( undefsafe ( object , 'a.b.e' )); // \"remy\" console . log ( undefsafe ( object , 'a.b.not.found' )); // undefined Demo: https://jsbin.com/eroqame/3/edit?js,console","title":"Usage"},{"location":"system-desing/crud-app/JS/server/node_modules/undefsafe/#setting","text":"var object = { a : { b : [ 1 , 2 , 3 ] } }; // modified object var res = undefsafe ( object , 'a.b.0' , 10 ); console . log ( object ); // { a: { b: [10, 2, 3] } } console . log ( res ); // 1 - previous value","title":"Setting"},{"location":"system-desing/crud-app/JS/server/node_modules/undefsafe/#star-rules-in-paths","text":"As of 1.2.0, undefsafe supports a * in the path if you want to search all of the properties (or array elements) for a particular element. The function will only return a single result, either the 3rd argument validation value, or the first positive match. For example, the following github data: const githubData = { commits : [{ modified : [ \"one\" , \"two\" ] }, /* ... */ ] }; // first modified file found in the first commit console . log ( undefsafe ( githubData , 'commits.*.modified.0' )); // returns `two` or undefined if not found console . log ( undefsafe ( githubData , 'commits.*.modified.*' , 'two' ));","title":"Star rules in paths"},{"location":"system-desing/crud-app/JS/server/node_modules/unpipe/","text":"unpipe Unpipe a stream from all destinations. Installation $ npm install unpipe API var unpipe = require ( 'unpipe' ) unpipe(stream) Unpipes all destinations from a given stream. With stream 2+, this is equivalent to stream.unpipe() . When used with streams 1 style streams (typically Node.js 0.8 and below), this module attempts to undo the actions done in stream.pipe(dest) . License MIT","title":"unpipe"},{"location":"system-desing/crud-app/JS/server/node_modules/unpipe/#unpipe","text":"Unpipe a stream from all destinations.","title":"unpipe"},{"location":"system-desing/crud-app/JS/server/node_modules/unpipe/#installation","text":"$ npm install unpipe","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/unpipe/#api","text":"var unpipe = require ( 'unpipe' )","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/unpipe/#unpipestream","text":"Unpipes all destinations from a given stream. With stream 2+, this is equivalent to stream.unpipe() . When used with streams 1 style streams (typically Node.js 0.8 and below), this module attempts to undo the actions done in stream.pipe(dest) .","title":"unpipe(stream)"},{"location":"system-desing/crud-app/JS/server/node_modules/unpipe/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/unpipe/HISTORY/","text":"1.0.0 / 2015-06-14 Initial release","title":"1.0.0 / 2015-06-14"},{"location":"system-desing/crud-app/JS/server/node_modules/unpipe/HISTORY/#100-2015-06-14","text":"Initial release","title":"1.0.0 / 2015-06-14"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/","text":"vary Manipulate the HTTP Vary header Installation This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install vary API var vary = require ( 'vary' ) vary(res, field) Adds the given header field to the Vary response header of res . This can be a string of a single field, a string of a valid Vary header, or an array of multiple fields. This will append the header if not already listed, otherwise leaves it listed in the current location. // Append \"Origin\" to the Vary header of the response vary ( res , 'Origin' ) vary.append(header, field) Adds the given header field to the Vary response header string header . This can be a string of a single field, a string of a valid Vary header, or an array of multiple fields. This will append the header if not already listed, otherwise leaves it listed in the current location. The new header string is returned. // Get header string appending \"Origin\" to \"Accept, User-Agent\" vary . append ( 'Accept, User-Agent' , 'Origin' ) Examples Updating the Vary header when content is based on it var http = require ( 'http' ) var vary = require ( 'vary' ) http . createServer ( function onRequest ( req , res ) { // about to user-agent sniff vary ( res , 'User-Agent' ) var ua = req . headers [ 'user-agent' ] || '' var isMobile = /mobi|android|touch|mini/i . test ( ua ) // serve site, depending on isMobile res . setHeader ( 'Content-Type' , 'text/html' ) res . end ( 'You are (probably) ' + ( isMobile ? '' : 'not ' ) + 'a mobile user' ) }) Testing $ npm test License MIT","title":"vary"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/#vary","text":"Manipulate the HTTP Vary header","title":"vary"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/#installation","text":"This is a Node.js module available through the npm registry . Installation is done using the npm install command : $ npm install vary","title":"Installation"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/#api","text":"var vary = require ( 'vary' )","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/#varyres-field","text":"Adds the given header field to the Vary response header of res . This can be a string of a single field, a string of a valid Vary header, or an array of multiple fields. This will append the header if not already listed, otherwise leaves it listed in the current location. // Append \"Origin\" to the Vary header of the response vary ( res , 'Origin' )","title":"vary(res, field)"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/#varyappendheader-field","text":"Adds the given header field to the Vary response header string header . This can be a string of a single field, a string of a valid Vary header, or an array of multiple fields. This will append the header if not already listed, otherwise leaves it listed in the current location. The new header string is returned. // Get header string appending \"Origin\" to \"Accept, User-Agent\" vary . append ( 'Accept, User-Agent' , 'Origin' )","title":"vary.append(header, field)"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/#examples","text":"","title":"Examples"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/#updating-the-vary-header-when-content-is-based-on-it","text":"var http = require ( 'http' ) var vary = require ( 'vary' ) http . createServer ( function onRequest ( req , res ) { // about to user-agent sniff vary ( res , 'User-Agent' ) var ua = req . headers [ 'user-agent' ] || '' var isMobile = /mobi|android|touch|mini/i . test ( ua ) // serve site, depending on isMobile res . setHeader ( 'Content-Type' , 'text/html' ) res . end ( 'You are (probably) ' + ( isMobile ? '' : 'not ' ) + 'a mobile user' ) })","title":"Updating the Vary header when content is based on it"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/#testing","text":"$ npm test","title":"Testing"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/#license","text":"MIT","title":"License"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/HISTORY/","text":"1.1.2 / 2017-09-23 perf: improve header token parsing speed 1.1.1 / 2017-03-20 perf: hoist regular expression 1.1.0 / 2015-09-29 Only accept valid field names in the field argument Ensures the resulting string is a valid HTTP header value 1.0.1 / 2015-07-08 Fix setting empty header from empty field perf: enable strict mode perf: remove argument reassignments 1.0.0 / 2014-08-10 Accept valid Vary header string as field Add vary.append for low-level string manipulation Move to jshttp orgainzation 0.1.0 / 2014-06-05 Support array of fields to set 0.0.0 / 2014-06-04 Initial release","title":"1.1.2 / 2017-09-23"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/HISTORY/#112-2017-09-23","text":"perf: improve header token parsing speed","title":"1.1.2 / 2017-09-23"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/HISTORY/#111-2017-03-20","text":"perf: hoist regular expression","title":"1.1.1 / 2017-03-20"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/HISTORY/#110-2015-09-29","text":"Only accept valid field names in the field argument Ensures the resulting string is a valid HTTP header value","title":"1.1.0 / 2015-09-29"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/HISTORY/#101-2015-07-08","text":"Fix setting empty header from empty field perf: enable strict mode perf: remove argument reassignments","title":"1.0.1 / 2015-07-08"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/HISTORY/#100-2014-08-10","text":"Accept valid Vary header string as field Add vary.append for low-level string manipulation Move to jshttp orgainzation","title":"1.0.0 / 2014-08-10"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/HISTORY/#010-2014-06-05","text":"Support array of fields to set","title":"0.1.0 / 2014-06-05"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/HISTORY/#000-2014-06-04","text":"Initial release","title":"0.0.0 / 2014-06-04"},{"location":"system-desing/crud-app/JS/server/node_modules/webidl-conversions/","text":"Web IDL Type Conversions on JavaScript Values This package implements, in JavaScript, the algorithms to convert a given JavaScript value according to a given Web IDL type . The goal is that you should be able to write code like \"use strict\" ; const conversions = require ( \"webidl-conversions\" ); function doStuff ( x , y ) { x = conversions [ \"boolean\" ]( x ); y = conversions [ \"unsigned long\" ]( y ); // actual algorithm code here } and your function doStuff will behave the same as a Web IDL operation declared as undefined doStuff ( boolean x , unsigned long y ) ; API This package's main module's default export is an object with a variety of methods, each corresponding to a different Web IDL type. Each method, when invoked on a JavaScript value, will give back the new JavaScript value that results after passing through the Web IDL conversion rules. (See below for more details on what that means.) Alternately, the method could throw an error, if the Web IDL algorithm is specified to do so: for example conversions[\"float\"](NaN) will throw a TypeError . Each method also accepts a second, optional, parameter for miscellaneous options. For conversion methods that throw errors, a string option { context } may be provided to provide more information in the error message. (For example, conversions[\"float\"](NaN, { context: \"Argument 1 of Interface's operation\" }) will throw an error with message \"Argument 1 of Interface's operation is not a finite floating-point value.\" ) If we are dealing with multiple JavaScript realms (such as those created using Node.js' vm module or the HTML iframe element), and exceptions from another realm need to be thrown, one can supply an object option globals containing the following properties: { globals : { Number , String , TypeError } } Those specific functions will be used when throwing exceptions. Specific conversions may also accept other options, the details of which can be found below. Conversions implemented Conversions for all of the basic types from the Web IDL specification are implemented: any undefined boolean Integer types , which can additionally be provided the boolean options { clamp, enforceRange } as a second parameter float , unrestricted float double , unrestricted double DOMString , which can additionally be provided the boolean option { treatNullAsEmptyString } as a second parameter ByteString , USVString object Buffer source types , which can additionally be provided with the boolean option { allowShared } as a second parameter Additionally, for convenience, the following derived type definitions are implemented: ArrayBufferView , which can additionally be provided with the boolean option { allowShared } as a second parameter BufferSource DOMTimeStamp Derived types, such as nullable types, promise types, sequences, records, etc. are not handled by this library. You may wish to investigate the webidl2js project. A note on the long long types The long long and unsigned long long Web IDL types can hold values that cannot be stored in JavaScript numbers. Conversions are still accurate as we make use of BigInt in the conversion process, but in the case of unsigned long long we simply cannot represent some possible output values in JavaScript. For example, converting the JavaScript number -1 to a Web IDL unsigned long long is supposed to produce the Web IDL value 18446744073709551615 . Since we are representing our Web IDL values in JavaScript, we can't represent 18446744073709551615 , so we instead the best we could do is 18446744073709551616 as the output. To mitigate this, we could return the raw BigInt value from the conversion function, but right now it is not implemented. If your use case requires such precision, file an issue . On the other hand, long long conversion is always accurate, since the input value can never be more precise than the output value. A note on BufferSource types All of the BufferSource types will throw when the relevant ArrayBuffer has been detached. This technically is not part of the specified conversion algorithm , but instead part of the getting a reference/getting a copy algorithms. We've consolidated them here for convenience and ease of implementation, but if there is a need to separate them in the future, please open an issue so we can investigate. Background What's actually going on here, conceptually, is pretty weird. Let's try to explain. Web IDL, as part of its madness-inducing design, has its own type system. When people write algorithms in web platform specs, they usually operate on Web IDL values, i.e. instances of Web IDL types. For example, if they were specifying the algorithm for our doStuff operation above, they would treat x as a Web IDL value of Web IDL type boolean . Crucially, they would not treat x as a JavaScript variable whose value is either the JavaScript true or false . They're instead working in a different type system altogether, with its own rules. Separately from its type system, Web IDL defines a \"binding\" of the type system into JavaScript. This contains rules like: when you pass a JavaScript value to the JavaScript method that manifests a given Web IDL operation, how does that get converted into a Web IDL value? For example, a JavaScript true passed in the position of a Web IDL boolean argument becomes a Web IDL true . But, a JavaScript true passed in the position of a Web IDL unsigned long becomes a Web IDL 1 . And so on. Finally, we have the actual implementation code. This is usually C++, although these days some smart people are using Rust . The implementation, of course, has its own type system. So when they implement the Web IDL algorithms, they don't actually use Web IDL values, since those aren't \"real\" outside of specs. Instead, implementations apply the Web IDL binding rules in such a way as to convert incoming JavaScript values into C++ values. For example, if code in the browser called doStuff(true, true) , then the implementation code would eventually receive a C++ bool containing true and a C++ uint32_t containing 1 . The upside of all this is that implementations can abstract all the conversion logic away, letting Web IDL handle it, and focus on implementing the relevant methods in C++ with values of the correct type already provided. That is payoff of Web IDL, in a nutshell. And getting to that payoff is the goal of this project\u2014but for JavaScript implementations, instead of C++ ones. That is, this library is designed to make it easier for JavaScript developers to write functions that behave like a given Web IDL operation. So conceptually, the conversion pipeline, which in its general form is JavaScript values \u21a6 Web IDL values \u21a6 implementation-language values, in this case becomes JavaScript values \u21a6 Web IDL values \u21a6 JavaScript values. And that intermediate step is where all the logic is performed: a JavaScript true becomes a Web IDL 1 in an unsigned long context, which then becomes a JavaScript 1 . Don't use this Seriously, why would you ever use this? You really shouldn't. Web IDL is \u2026 strange, and you shouldn't be emulating its semantics. If you're looking for a generic argument-processing library, you should find one with better rules than those from Web IDL. In general, your JavaScript should not be trying to become more like Web IDL; if anything, we should fix Web IDL to make it more like JavaScript. The only people who should use this are those trying to create faithful implementations (or polyfills) of web platform interfaces defined in Web IDL. Its main consumer is the jsdom project.","title":"Web IDL Type Conversions on JavaScript Values"},{"location":"system-desing/crud-app/JS/server/node_modules/webidl-conversions/#web-idl-type-conversions-on-javascript-values","text":"This package implements, in JavaScript, the algorithms to convert a given JavaScript value according to a given Web IDL type . The goal is that you should be able to write code like \"use strict\" ; const conversions = require ( \"webidl-conversions\" ); function doStuff ( x , y ) { x = conversions [ \"boolean\" ]( x ); y = conversions [ \"unsigned long\" ]( y ); // actual algorithm code here } and your function doStuff will behave the same as a Web IDL operation declared as undefined doStuff ( boolean x , unsigned long y ) ;","title":"Web IDL Type Conversions on JavaScript Values"},{"location":"system-desing/crud-app/JS/server/node_modules/webidl-conversions/#api","text":"This package's main module's default export is an object with a variety of methods, each corresponding to a different Web IDL type. Each method, when invoked on a JavaScript value, will give back the new JavaScript value that results after passing through the Web IDL conversion rules. (See below for more details on what that means.) Alternately, the method could throw an error, if the Web IDL algorithm is specified to do so: for example conversions[\"float\"](NaN) will throw a TypeError . Each method also accepts a second, optional, parameter for miscellaneous options. For conversion methods that throw errors, a string option { context } may be provided to provide more information in the error message. (For example, conversions[\"float\"](NaN, { context: \"Argument 1 of Interface's operation\" }) will throw an error with message \"Argument 1 of Interface's operation is not a finite floating-point value.\" ) If we are dealing with multiple JavaScript realms (such as those created using Node.js' vm module or the HTML iframe element), and exceptions from another realm need to be thrown, one can supply an object option globals containing the following properties: { globals : { Number , String , TypeError } } Those specific functions will be used when throwing exceptions. Specific conversions may also accept other options, the details of which can be found below.","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/webidl-conversions/#conversions-implemented","text":"Conversions for all of the basic types from the Web IDL specification are implemented: any undefined boolean Integer types , which can additionally be provided the boolean options { clamp, enforceRange } as a second parameter float , unrestricted float double , unrestricted double DOMString , which can additionally be provided the boolean option { treatNullAsEmptyString } as a second parameter ByteString , USVString object Buffer source types , which can additionally be provided with the boolean option { allowShared } as a second parameter Additionally, for convenience, the following derived type definitions are implemented: ArrayBufferView , which can additionally be provided with the boolean option { allowShared } as a second parameter BufferSource DOMTimeStamp Derived types, such as nullable types, promise types, sequences, records, etc. are not handled by this library. You may wish to investigate the webidl2js project.","title":"Conversions implemented"},{"location":"system-desing/crud-app/JS/server/node_modules/webidl-conversions/#a-note-on-the-long-long-types","text":"The long long and unsigned long long Web IDL types can hold values that cannot be stored in JavaScript numbers. Conversions are still accurate as we make use of BigInt in the conversion process, but in the case of unsigned long long we simply cannot represent some possible output values in JavaScript. For example, converting the JavaScript number -1 to a Web IDL unsigned long long is supposed to produce the Web IDL value 18446744073709551615 . Since we are representing our Web IDL values in JavaScript, we can't represent 18446744073709551615 , so we instead the best we could do is 18446744073709551616 as the output. To mitigate this, we could return the raw BigInt value from the conversion function, but right now it is not implemented. If your use case requires such precision, file an issue . On the other hand, long long conversion is always accurate, since the input value can never be more precise than the output value.","title":"A note on the long long types"},{"location":"system-desing/crud-app/JS/server/node_modules/webidl-conversions/#a-note-on-buffersource-types","text":"All of the BufferSource types will throw when the relevant ArrayBuffer has been detached. This technically is not part of the specified conversion algorithm , but instead part of the getting a reference/getting a copy algorithms. We've consolidated them here for convenience and ease of implementation, but if there is a need to separate them in the future, please open an issue so we can investigate.","title":"A note on BufferSource types"},{"location":"system-desing/crud-app/JS/server/node_modules/webidl-conversions/#background","text":"What's actually going on here, conceptually, is pretty weird. Let's try to explain. Web IDL, as part of its madness-inducing design, has its own type system. When people write algorithms in web platform specs, they usually operate on Web IDL values, i.e. instances of Web IDL types. For example, if they were specifying the algorithm for our doStuff operation above, they would treat x as a Web IDL value of Web IDL type boolean . Crucially, they would not treat x as a JavaScript variable whose value is either the JavaScript true or false . They're instead working in a different type system altogether, with its own rules. Separately from its type system, Web IDL defines a \"binding\" of the type system into JavaScript. This contains rules like: when you pass a JavaScript value to the JavaScript method that manifests a given Web IDL operation, how does that get converted into a Web IDL value? For example, a JavaScript true passed in the position of a Web IDL boolean argument becomes a Web IDL true . But, a JavaScript true passed in the position of a Web IDL unsigned long becomes a Web IDL 1 . And so on. Finally, we have the actual implementation code. This is usually C++, although these days some smart people are using Rust . The implementation, of course, has its own type system. So when they implement the Web IDL algorithms, they don't actually use Web IDL values, since those aren't \"real\" outside of specs. Instead, implementations apply the Web IDL binding rules in such a way as to convert incoming JavaScript values into C++ values. For example, if code in the browser called doStuff(true, true) , then the implementation code would eventually receive a C++ bool containing true and a C++ uint32_t containing 1 . The upside of all this is that implementations can abstract all the conversion logic away, letting Web IDL handle it, and focus on implementing the relevant methods in C++ with values of the correct type already provided. That is payoff of Web IDL, in a nutshell. And getting to that payoff is the goal of this project\u2014but for JavaScript implementations, instead of C++ ones. That is, this library is designed to make it easier for JavaScript developers to write functions that behave like a given Web IDL operation. So conceptually, the conversion pipeline, which in its general form is JavaScript values \u21a6 Web IDL values \u21a6 implementation-language values, in this case becomes JavaScript values \u21a6 Web IDL values \u21a6 JavaScript values. And that intermediate step is where all the logic is performed: a JavaScript true becomes a Web IDL 1 in an unsigned long context, which then becomes a JavaScript 1 .","title":"Background"},{"location":"system-desing/crud-app/JS/server/node_modules/webidl-conversions/#dont-use-this","text":"Seriously, why would you ever use this? You really shouldn't. Web IDL is \u2026 strange, and you shouldn't be emulating its semantics. If you're looking for a generic argument-processing library, you should find one with better rules than those from Web IDL. In general, your JavaScript should not be trying to become more like Web IDL; if anything, we should fix Web IDL to make it more like JavaScript. The only people who should use this are those trying to create faithful implementations (or polyfills) of web platform interfaces defined in Web IDL. Its main consumer is the jsdom project.","title":"Don't use this"},{"location":"system-desing/crud-app/JS/server/node_modules/webidl-conversions/LICENSE/","text":"The BSD 2-Clause License Copyright (c) 2014, Domenic Denicola All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"The BSD 2-Clause License"},{"location":"system-desing/crud-app/JS/server/node_modules/webidl-conversions/LICENSE/#the-bsd-2-clause-license","text":"Copyright (c) 2014, Domenic Denicola All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"The BSD 2-Clause License"},{"location":"system-desing/crud-app/JS/server/node_modules/whatwg-url/","text":"whatwg-url whatwg-url is a full implementation of the WHATWG URL Standard . It can be used standalone, but it also exposes a lot of the internal algorithms that are useful for integrating a URL parser into a project like jsdom . Specification conformance whatwg-url is currently up to date with the URL spec up to commit 6c78200 . For file: URLs, whose origin is left unspecified , whatwg-url chooses to use a new opaque origin (which serializes to \"null\" ). whatwg-url does not yet implement any encoding handling beyond UTF-8. That is, the encoding override parameter does not exist in our API. API The URL and URLSearchParams classes The main API is provided by the URL and URLSearchParams exports, which follows the spec's behavior in all ways (including e.g. USVString conversion). Most consumers of this library will want to use these. Low-level URL Standard API The following methods are exported for use by places like jsdom that need to implement things like HTMLHyperlinkElementUtils . They mostly operate on or return an \"internal URL\" or \"URL record\" type. URL parser : parseURL(input, { baseURL }) Basic URL parser : basicURLParse(input, { baseURL, url, stateOverride }) URL serializer : serializeURL(urlRecord, excludeFragment) Host serializer : serializeHost(hostFromURLRecord) URL path serializer : serializePath(urlRecord) Serialize an integer : serializeInteger(number) Origin serializer : serializeURLOrigin(urlRecord) Set the username : setTheUsername(urlRecord, usernameString) Set the password : setThePassword(urlRecord, passwordString) Has an opaque path : hasAnOpaquePath(urlRecord) Cannot have a username/password/port : cannotHaveAUsernamePasswordPort(urlRecord) Percent decode bytes : percentDecodeBytes(uint8Array) Percent decode a string : percentDecodeString(string) The stateOverride parameter is one of the following strings: \"scheme start\" \"scheme\" \"no scheme\" \"special relative or authority\" \"path or authority\" \"relative\" \"relative slash\" \"special authority slashes\" \"special authority ignore slashes\" \"authority\" \"host\" \"hostname\" \"port\" \"file\" \"file slash\" \"file host\" \"path start\" \"path\" \"opaque path\" \"query\" \"fragment\" The URL record type has the following API: scheme username password host port path (as an array of strings, or a string) query fragment These properties should be treated with care, as in general changing them will cause the URL record to be in an inconsistent state until the appropriate invocation of basicURLParse is used to fix it up. You can see examples of this in the URL Standard, where there are many step sequences like \"4. Set context object\u2019s url\u2019s fragment to the empty string. 5. Basic URL parse input with context object\u2019s url as url and fragment state as state override .\" In between those two steps, a URL record is in an unusable state. The return value of \"failure\" in the spec is represented by null . That is, functions like parseURL and basicURLParse can return either a URL record or null . whatwg-url/webidl2js-wrapper module This module exports the URL and URLSearchParams interface wrappers API generated by webidl2js . Development instructions First, install Node.js . Then, fetch the dependencies of whatwg-url, by running from this directory: npm install To run tests: npm test To generate a coverage report: npm run coverage To build and run the live viewer: npm run prepare npm run build-live-viewer Serve the contents of the live-viewer directory using any web server. Supporting whatwg-url The jsdom project (including whatwg-url) is a community-driven project maintained by a team of volunteers . You could support us by: Getting professional support for whatwg-url as part of a Tidelift subscription. Tidelift helps making open source sustainable for us while giving teams assurances for maintenance, licensing, and security. Contributing directly to the project.","title":"whatwg-url"},{"location":"system-desing/crud-app/JS/server/node_modules/whatwg-url/#whatwg-url","text":"whatwg-url is a full implementation of the WHATWG URL Standard . It can be used standalone, but it also exposes a lot of the internal algorithms that are useful for integrating a URL parser into a project like jsdom .","title":"whatwg-url"},{"location":"system-desing/crud-app/JS/server/node_modules/whatwg-url/#specification-conformance","text":"whatwg-url is currently up to date with the URL spec up to commit 6c78200 . For file: URLs, whose origin is left unspecified , whatwg-url chooses to use a new opaque origin (which serializes to \"null\" ). whatwg-url does not yet implement any encoding handling beyond UTF-8. That is, the encoding override parameter does not exist in our API.","title":"Specification conformance"},{"location":"system-desing/crud-app/JS/server/node_modules/whatwg-url/#api","text":"","title":"API"},{"location":"system-desing/crud-app/JS/server/node_modules/whatwg-url/#the-url-and-urlsearchparams-classes","text":"The main API is provided by the URL and URLSearchParams exports, which follows the spec's behavior in all ways (including e.g. USVString conversion). Most consumers of this library will want to use these.","title":"The URL and URLSearchParams classes"},{"location":"system-desing/crud-app/JS/server/node_modules/whatwg-url/#low-level-url-standard-api","text":"The following methods are exported for use by places like jsdom that need to implement things like HTMLHyperlinkElementUtils . They mostly operate on or return an \"internal URL\" or \"URL record\" type. URL parser : parseURL(input, { baseURL }) Basic URL parser : basicURLParse(input, { baseURL, url, stateOverride }) URL serializer : serializeURL(urlRecord, excludeFragment) Host serializer : serializeHost(hostFromURLRecord) URL path serializer : serializePath(urlRecord) Serialize an integer : serializeInteger(number) Origin serializer : serializeURLOrigin(urlRecord) Set the username : setTheUsername(urlRecord, usernameString) Set the password : setThePassword(urlRecord, passwordString) Has an opaque path : hasAnOpaquePath(urlRecord) Cannot have a username/password/port : cannotHaveAUsernamePasswordPort(urlRecord) Percent decode bytes : percentDecodeBytes(uint8Array) Percent decode a string : percentDecodeString(string) The stateOverride parameter is one of the following strings: \"scheme start\" \"scheme\" \"no scheme\" \"special relative or authority\" \"path or authority\" \"relative\" \"relative slash\" \"special authority slashes\" \"special authority ignore slashes\" \"authority\" \"host\" \"hostname\" \"port\" \"file\" \"file slash\" \"file host\" \"path start\" \"path\" \"opaque path\" \"query\" \"fragment\" The URL record type has the following API: scheme username password host port path (as an array of strings, or a string) query fragment These properties should be treated with care, as in general changing them will cause the URL record to be in an inconsistent state until the appropriate invocation of basicURLParse is used to fix it up. You can see examples of this in the URL Standard, where there are many step sequences like \"4. Set context object\u2019s url\u2019s fragment to the empty string. 5. Basic URL parse input with context object\u2019s url as url and fragment state as state override .\" In between those two steps, a URL record is in an unusable state. The return value of \"failure\" in the spec is represented by null . That is, functions like parseURL and basicURLParse can return either a URL record or null .","title":"Low-level URL Standard API"},{"location":"system-desing/crud-app/JS/server/node_modules/whatwg-url/#whatwg-urlwebidl2js-wrapper-module","text":"This module exports the URL and URLSearchParams interface wrappers API generated by webidl2js .","title":"whatwg-url/webidl2js-wrapper module"},{"location":"system-desing/crud-app/JS/server/node_modules/whatwg-url/#development-instructions","text":"First, install Node.js . Then, fetch the dependencies of whatwg-url, by running from this directory: npm install To run tests: npm test To generate a coverage report: npm run coverage To build and run the live viewer: npm run prepare npm run build-live-viewer Serve the contents of the live-viewer directory using any web server.","title":"Development instructions"},{"location":"system-desing/crud-app/JS/server/node_modules/whatwg-url/#supporting-whatwg-url","text":"The jsdom project (including whatwg-url) is a community-driven project maintained by a team of volunteers . You could support us by: Getting professional support for whatwg-url as part of a Tidelift subscription. Tidelift helps making open source sustainable for us while giving teams assurances for maintenance, licensing, and security. Contributing directly to the project.","title":"Supporting whatwg-url"},{"location":"system-desing/crud-app/JS/server/node_modules/wrappy/","text":"wrappy Callback wrapping utility USAGE var wrappy = require ( \"wrappy\" ) // var wrapper = wrappy(wrapperFunction) // make sure a cb is called only once // See also: http://npm.im/once for this specific use case var once = wrappy ( function ( cb ) { var called = false return function () { if ( called ) return called = true return cb . apply ( this , arguments ) } }) function printBoo () { console . log ( 'boo' ) } // has some rando property printBoo . iAmBooPrinter = true var onlyPrintOnce = once ( printBoo ) onlyPrintOnce () // prints 'boo' onlyPrintOnce () // does nothing // random property is retained! assert . equal ( onlyPrintOnce . iAmBooPrinter , true )","title":"wrappy"},{"location":"system-desing/crud-app/JS/server/node_modules/wrappy/#wrappy","text":"Callback wrapping utility","title":"wrappy"},{"location":"system-desing/crud-app/JS/server/node_modules/wrappy/#usage","text":"var wrappy = require ( \"wrappy\" ) // var wrapper = wrappy(wrapperFunction) // make sure a cb is called only once // See also: http://npm.im/once for this specific use case var once = wrappy ( function ( cb ) { var called = false return function () { if ( called ) return called = true return cb . apply ( this , arguments ) } }) function printBoo () { console . log ( 'boo' ) } // has some rando property printBoo . iAmBooPrinter = true var onlyPrintOnce = once ( printBoo ) onlyPrintOnce () // prints 'boo' onlyPrintOnce () // does nothing // random property is retained! assert . equal ( onlyPrintOnce . iAmBooPrinter , true )","title":"USAGE"}]}