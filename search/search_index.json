{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>This multi-language repository is your practical guide to mastering system design. Dive into core concepts like microservices, caching, databases, message queues, and more through hands-on examples and exercises implemented in various programming languages.</p> <p>See firsthand how fundamental design choices translate across different tech stacks, gaining a deeper understanding of language-specific nuances within the context of building robust and scalable systems. Whether you are a beginner exploring architectural patterns or an experienced developer comparing implementation approaches, this repository provides a valuable resource for learning and practicing essential system design principles. Explore diverse coding styles and discover how to apply key concepts in the language of your choice.</p>"},{"location":"#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>Section 1: getting-started</p> <ul> <li>Subsection 1.1: User Guide</li> <li>Subsection 1.2: License</li> </ul> </li> <li> <p>Section 2: system Degign 101</p> <ul> <li>Subsection 2.1: Crud app with rest api</li> </ul> </li> </ul>"},{"location":"LICENSE/","title":"License","text":"<p>MIT License</p> <p>Copyright (c) 2025 Diptu</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"system-desing/","title":"System Design Multilangul","text":"<p>My digital laboratory for mastering system design through Practice in multiple language.</p>"},{"location":"system-desing/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>Section 1: getting-started</p> <ul> <li>Subsection 1.1: User Guide</li> <li>Subsection 1.2: License</li> </ul> </li> <li> <p>Section 2: system Degign 101</p> <ul> <li>Subsection 2.1: Crud app with rest api</li> </ul> </li> </ul>"},{"location":"system-desing/getting-started/","title":"Getting Started","text":"<p>Welcome to the <code>system-design-multilang</code> repository! This project aims to provide practical examples and exercises for learning and practicing system design concepts using various programming languages.</p>"},{"location":"system-desing/getting-started/#repository-structure","title":"Repository Structure","text":"<p>The repository is organized to help you easily find examples related to specific system design topics and programming languages. You'll generally find the following structure:</p>"},{"location":"system-desing/getting-started/#layout","title":"layout","text":"<pre><code>README.md       # Repository-level overview\nconcept-name-01  \nlanguage-01/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\nlanguage-02/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre> <ul> <li>Concept Folders: Each top-level folder represents a key system design concept (e.g., <code>microservices</code>, <code>caching</code>, <code>databases</code>, <code>message-queues</code>).</li> <li>Language Folders: Within each concept folder, you'll find subfolders named after the programming languages used to demonstrate that concept (e.g., <code>python</code>, <code>node</code>).</li> <li>Concept README: Each concept folder may contain a <code>README.md</code> file providing a brief explanation of the concept and its relevance.</li> <li>Code Files: The language-specific folders will contain the actual code examples and potentially instructions on how to run them.</li> </ul>"},{"location":"system-desing/getting-started/#how-to-use-this-repository","title":"How to Use This Repository","text":"<ol> <li>Explore Concepts: Navigate through the top-level folders to find the system design concept you're interested in learning about.</li> <li>Choose a Language: Within a concept folder, select the programming language you're comfortable with or want to explore.</li> <li>Review the Code: Examine the code examples to understand how the system design concept is implemented in that specific language.</li> <li>Run the Code (If Applicable): Follow any instructions provided within the language-specific folder or the concept's <code>README.md</code> to run the code and experiment.</li> <li>Compare Implementations: Explore the same concept implemented in different programming languages to see the variations and trade-offs.</li> </ol>"},{"location":"system-desing/getting-started/#contributing-optional","title":"Contributing (Optional)","text":"<p>If you'd like to contribute to this repository by adding new examples, implementing concepts in different languages, or improving existing code, please refer to the <code>CONTRIBUTING.md</code> file (if it exists). We welcome contributions that enhance the learning experience for everyone.</p>"},{"location":"system-desing/getting-started/#license","title":"License","text":"<p>This repository is licensed under the MIT lisense .(See <code>LICENSE</code> file for details).</p> <p>Happy learning and practicing system design!</p>"},{"location":"system-desing/crud-app/","title":"CRUD Application","text":"<ul> <li>Author: Nazmul Alam</li> <li>Date: 2025-04-09</li> <li>email:diptunazmulalam@gmail.com</li> </ul> API <p>An API (<code>Application Programming Interface</code>) is a technology enabling communication between software applications over the internet. It defines a set of rules and protocols that govern how different software components can interact and exchange data.</p> <p>CRUD APi</p> <p>A CRUD API facilitates the management of data within backend systems through four fundamental operations: Create, Read, Update, and Delete. These operations are typically mapped to specific HTTP methods: GET: Used to retrieve data from the server. POST: Used to create new data on the server. PUT: Used to update existing data on the server. DELETE: Used to remove data from the server. These methods form the cornerstone of many web applications, enabling comprehensive data manipulation through programmatic interfaces.</p>"},{"location":"system-desing/crud-app/#implementation","title":"Implementation:","text":"<ul> <li><code>js/</code>: Contains the implementation of the CRUD application using Mern</li> <li><code>python/</code>: Contains the implementation of the CRUD application using Python Fastapi and flask.</li> </ul>"},{"location":"system-desing/crud-app/JS/","title":"Introduction to Node.js and Express","text":"What is Node.js? <p>Node.js is an open-source and cross-platform runtime environment for executing JavaScript code outside of a web browser. It is commonly used to build back-end services, also known as APIs.</p> <p>Node.js is particularly well-suited for building:</p> <ul> <li>Highly scalable applications</li> <li>Data-intensive applications</li> <li>Real-time back-end services that power client applications</li> </ul> Why Node? <p>Node.js has become a preferred choice for backend development due to several compelling reasons:</p> <ul> <li>JavaScript Everywhere: It allows you to use JavaScript for both your frontend and backend, simplifying development and enabling easier transitions between roles.</li> <li>Scalability: Node.js facilitates the easy scaling of applications, making it suitable for large-scale professional projects with growing user bases.</li> <li>Performance: Its fast and non-blocking nature, driven by its asynchronous event-driven architecture, ensures efficient handling of concurrent requests.</li> <li>Community and Ecosystem: Node.js boasts a vibrant community of developers and a rich ecosystem of readily available packages and libraries (primarily through npm - Node Package Manager).</li> </ul> How to Install Node.js <p>Follow these steps to install Node.js on your system:</p> <ol> <li>Download the Installer: Visit the official Node.js website and download the appropriate installer for your operating system (Mac or Windows).</li> <li>Choose the LTS Version: It is generally recommended to download and install the Long-Term Support (LTS) version, which is usually displayed on the left side of the download page.</li> <li>Run the Installer: Once the download is complete, run the installer and follow the on-screen prompts. You will likely need to click the \"NEXT\" button multiple times and accept the default installation settings.</li> <li> <p>Verify Installation: To confirm that Node.js has been installed correctly, open your terminal (or command prompt on Windows) and run the following command:</p> <pre><code>node --version\n</code></pre> <p>If the installation was successful, this command will output the installed version of Node.js. On Windows, you might need to restart your command prompt after installation before running this command.</p> </li> </ol> What is Express? <p>Express is a fast, unopinionated, and minimalist web backend or server-side web framework for Node.js. Essentially, Express simplifies the process of building APIs and web applications with Node.js by providing a set of robust features and tools with less code.</p> <p>Key aspects of Express:</p> <ul> <li>It is a framework built on top of Node.js.</li> <li>It enables you to create your backend with ease, providing structure and conventions for handling routing, middleware, and more.</li> <li>It can be used in conjunction with frontend frameworks like React, Angular, or Vue to build complete full-stack applications.</li> </ul> Why do You Need Express? <p>Express offers significant advantages for Node.js web development:</p> <ul> <li>Simplified Development: It makes building web applications with Node.js much easier by abstracting away low-level details and providing a more intuitive API.</li> <li>Lightweight and Fast: Express is extremely light, fast, and free, contributing to the overall performance of your application.</li> <li>Versatility: It is suitable for building both server-rendered applications (where HTML is generated on the server) as well as API/Microservices (for data exchange with frontend applications).</li> <li>Popularity and Community Support: Express is the most popular Node.js web framework, benefiting from a large and active community that provides extensive documentation, tutorials, and support.</li> <li>Full Control: It gives you full control over requests and responses, allowing for highly customized application logic.</li> </ul> Prerequisites <p>Before you begin working with Node.js and Express, ensure you have the following:</p> <ul> <li>Basic knowledge of JavaScript: A fundamental understanding of JavaScript syntax, concepts, and asynchronous programming is essential.</li> <li>Node.js Installed: You need to have successfully downloaded and installed Node.js on your computer as described in the installation section.</li> <li>Postman (Recommended): While not strictly required for development, Postman is a valuable tool for testing and interacting with your backend APIs. You can download it from the Postman website.</li> </ul>"},{"location":"system-desing/crud-app/JS/#crud-api","title":"Crud-api","text":"projrct structure <p>create a directory called server aand move into server directory. <pre><code>mkdir server\ncd server\n</code></pre></p> View npm Version Information <ul> <li><code>npm</code> stands for Node Package Manager. It is the default package manager for the Node.js JavaScript runtime environment.</li> <li><code>-v</code> is a common command-line flag that typically stands for \"version\".</li> </ul> <p>When you execute <code>npm -v</code>, the terminal will output the version number of the npm client that is installed on your machine.</p> Initialize a new Node.js project <p>Inside server directory run the following command to initialize a Node.js project. <pre><code>npm init -y\n</code></pre> The command <code>npm init -y</code> is used within a Node.js project to initialize a new <code>package.json</code> file. This file is a fundamental part of any Node.js project managed with npm (Node Package Manager).</p> package.json<pre><code>{\n\"name\": \"server\",\n\"version\": \"1.0.0\",\n\"main\": \"index.js\",\n\"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"\n},\n\"keywords\": [],\n\"author\": \"\",\n\"license\": \"ISC\",\n\"description\": \"\"\n}\n</code></pre> <p>Project Structure:</p> <pre><code> server\n    \u2514\u2500\u2500 ./server/package.json\n</code></pre> <p>Install Express.js</p> <pre><code>`npm i express`\n</code></pre> Why use express? <p>Installing Express allows us to:</p> <ul> <li>Quickly set up a web server: Express simplifies the process of creating and configuring HTTP servers in Node.js.</li> <li>Define routes for your application: It provides a clear and organized way to handle different HTTP requests (like GET, POST, PUT, DELETE) to specific URLs (routes) in your application.</li> <li>Implement middleware: Express allows you to use middleware functions to perform various tasks before or after handling a request, such as logging, authentication, and data parsing.</li> <li>Build APIs: It is a popular choice for building RESTful APIs that can be consumed by frontend applications or other services.</li> <li>Render dynamic web pages: Express can be used with templating engines to generate HTML content dynamically on the server.</li> </ul> <p>Project Structure:</p> <p><pre><code>server\n    \u2514\u2500\u2500 ./server/package.json\n    \u2514\u2500\u2500 ./server/node_modules\n</code></pre> package.json<pre><code>\"dependencies\": {\n\"express\": \"^5.1.0\"\n}\n</code></pre></p>"},{"location":"system-desing/crud-app/JS/#example-output","title":"Example Output","text":"<p>The provided output shows the following: 10.9.2</p>"},{"location":"system-desing/crud-app/JS/#setting-up-code-directory","title":"Setting Up code Directory","text":""},{"location":"system-desing/crud-app/JS/#creating-the-source-directory","title":"Creating the Source Directory","text":"<p>The first step is to create a directory that will house all your project's source code files. A common convention is to name this directory <code>src</code> (short for \"source\").</p> <p><pre><code>mkdir src\n</code></pre> Next, we'll typically want to create a main JavaScript file where our application's entry point will reside. A common name for this file is <code>index.js</code></p> <pre><code>touch src/index.js\n</code></pre>"},{"location":"system-desing/crud-app/JS/#creating-a-basic-express-server","title":"Creating a Basic Express Server","text":"index.js<pre><code>const express = require('express');\nconst app = express()\n\napp.listen(3000, ()=&gt;{\n    console.log(`server running on http://localhost:3000`);\n})\n</code></pre>"},{"location":"system-desing/crud-app/JS/#running-the-nodejs-server","title":"Running the Node.js Server","text":"<pre><code>node src/index.js\n</code></pre>"},{"location":"system-desing/crud-app/JS/#package-installation","title":"Package Installation","text":"<ol> <li>Nodemon</li> <li>morgan</li> </ol>  Why Use Nodemon? <ul> <li>Automatic Restarts: The primary benefit of Nodemon is its ability to automatically restart your Node.js server upon saving changes to your files. This saves you valuable development time and allows you to focus on coding.</li> <li>No Code Changes Required: Nodemon is designed to be a seamless replacement for the <code>node</code> command. You don't need to modify your existing Node.js code to use it.</li> <li>Improved Development Experience: By automating the server restart process, Nodemon provides a smoother and more efficient development experience.</li> </ul> <p>We can easily install Nodemon as a development dependency for your project using npm (Node Package Manager):</p> <pre><code>npm install --save-dev nodemon\n</code></pre>  Why Use Morgan? <p>Morgan is a popular Node.js logging middleware that provides a simple way to log HTTP requests and responses. * HTTP Request and Response Logging: Morgan logs HTTP requests and responses, making it easier to monitor and debug your application.</p> <pre><code>npm install --save-dev morgan\n</code></pre> <p>package.json<pre><code>    \"devDependencies\": {\n        \"morgan\": \"^1.10.0\",\n        \"nodemon\": \"^3.1.9\"\n}\n</code></pre> Add the following lines to script section: package.json<pre><code>\"scripts\": {\n    \"start\" : \"node ./src/index.js\",\n    \"dev\" : \"nodemon ./src/index.js\",  \n    },\n</code></pre></p>"},{"location":"system-desing/crud-app/JS/#running-the-production-application","title":"Running the Production Application","text":"<p><pre><code>npm run start\n</code></pre> will run the commad <code>node ./src/index.js</code></p>"},{"location":"system-desing/crud-app/JS/#running-the-development-application-with-nodemon","title":"Running the Development Application with Nodemon","text":"<p><pre><code>npm run dev\n</code></pre> will run the commad <code>nodemon ./src/index.js</code></p>"},{"location":"system-desing/crud-app/JS/#create-a-http-request","title":"Create a HTTP request","text":"index.js<pre><code>const express = require('express');\nconst app = express()\n\napp.get('/products', (req, res) =&gt; {\n    res.status(200).send(\n         {\n            'success': true,\n            'msg':'products is returned'}\n        );\n  })\napp.listen(3000, ()=&gt;{\n    console.log(`server is running on http://localhost:3000`);\n})\n</code></pre> <p>Now let's the Development Application with Nodemon</p> <p><pre><code>npm run dev\n</code></pre> now we can visit http://localhost:3000/products in our browser to see the response.</p> <p>package.json<pre><code>const express = require('express');\nconst app = express()\n\nconst morgan = require('morgan')\n// setup the logger\napp.use(morgan('dev'))\napp.get('/products', (req, res) =&gt; {\n    res.status(200).send(\n         {\n            'success': true,\n            'msg':'products is returned'}\n        );\n  })\napp.listen(3000, ()=&gt;{\n    console.log(`server running on http://localhost:3000`);\n})\n</code></pre> now if we send any request to server e,g http://localhost:3000/products we'll see logs in the terminal.</p> Express Middleware <p>Express middleware are functions that have access to the request object (<code>req</code>), the response object (<code>res</code>) and the next middleware function in the application\u2019s request-response cycle. The next middleware function is commonly denoted by a variable named <code>next</code>.</p> <p>Middleware functions can perform the following tasks:</p> <ul> <li>Execute any code.</li> <li>Make changes to the request and the response objects.</li> <li>End the request-response cycle.</li> <li>Call the next middleware function in the stack.</li> <li>If the current middleware function does not end the request-response cycle, it must call next() to pass control to the next middleware function. Otherwise, the request will be left hanging.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/%40mongodb-js/saslprep/readme/","title":"saslprep","text":"<p>Note: This is a fork of the original <code>saslprep</code> npm package and provides equivalent functionality.</p> <p>Stringprep Profile for User Names and Passwords, rfc4013</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/%40mongodb-js/saslprep/readme/#usage","title":"Usage","text":"<pre><code>const saslprep = require('@mongodb-js/saslprep');\n\nsaslprep('password\\u00AD'); // password\nsaslprep('password\\u0007'); // Error: prohibited character\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/%40mongodb-js/saslprep/readme/#api","title":"API","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/%40mongodb-js/saslprep/readme/#saslprepinput-string-opts-options-string","title":"<code>saslprep(input: String, opts: Options): String</code>","text":"<p>Normalize user name or password.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/%40mongodb-js/saslprep/readme/#optionsallowunassigned-bool","title":"<code>Options.allowUnassigned: bool</code>","text":"<p>A special behavior for unassigned code points, see https://tools.ietf.org/html/rfc4013#section-2.5. Disabled by default.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/%40mongodb-js/saslprep/readme/#license","title":"License","text":"<p>MIT, 2017-2019 (c) Dmitriy Tsvettsikh</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/%40types/webidl-conversions/","title":"Installation","text":"<p><code>npm install --save @types/webidl-conversions</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/%40types/webidl-conversions/#summary","title":"Summary","text":"<p>This package contains type definitions for webidl-conversions (https://github.com/jsdom/webidl-conversions#readme).</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/%40types/webidl-conversions/#details","title":"Details","text":"<p>Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/webidl-conversions.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/%40types/webidl-conversions/#additional-details","title":"Additional Details","text":"<ul> <li>Last updated: Tue, 07 Nov 2023 15:11:36 GMT</li> <li>Dependencies: none</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/%40types/webidl-conversions/#credits","title":"Credits","text":"<p>These definitions were written by ExE Boss, and BendingBender.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/%40types/whatwg-url/","title":"Installation","text":"<p><code>npm install --save @types/whatwg-url</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/%40types/whatwg-url/#summary","title":"Summary","text":"<p>This package contains type definitions for whatwg-url (https://github.com/jsdom/whatwg-url#readme).</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/%40types/whatwg-url/#details","title":"Details","text":"<p>Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/whatwg-url.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/%40types/whatwg-url/#additional-details","title":"Additional Details","text":"<ul> <li>Last updated: Sat, 18 May 2024 21:06:54 GMT</li> <li>Dependencies: @types/webidl-conversions</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/%40types/whatwg-url/#credits","title":"Credits","text":"<p>These definitions were written by Alexander Marks, ExE Boss, and BendingBender.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/","title":"accepts","text":"<p>Higher level content negotiation based on negotiator. Extracted from koa for general use.</p> <p>In addition to negotiator, it allows:</p> <ul> <li>Allows types as an array or arguments list, ie <code>(['text/html', 'application/json'])</code>   as well as <code>('text/html', 'application/json')</code>.</li> <li>Allows type shorthands such as <code>json</code>.</li> <li>Returns <code>false</code> when no types match</li> <li>Treats non-existent headers as <code>*</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/#installation","title":"Installation","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install accepts\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/#api","title":"API","text":"<pre><code>var accepts = require('accepts')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/#acceptsreq","title":"accepts(req)","text":"<p>Create a new <code>Accepts</code> object for the given <code>req</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/#charsetcharsets","title":".charset(charsets)","text":"<p>Return the first accepted charset. If nothing in <code>charsets</code> is accepted, then <code>false</code> is returned.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/#charsets","title":".charsets()","text":"<p>Return the charsets that the request accepts, in the order of the client's preference (most preferred first).</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/#encodingencodings","title":".encoding(encodings)","text":"<p>Return the first accepted encoding. If nothing in <code>encodings</code> is accepted, then <code>false</code> is returned.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/#encodings","title":".encodings()","text":"<p>Return the encodings that the request accepts, in the order of the client's preference (most preferred first).</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/#languagelanguages","title":".language(languages)","text":"<p>Return the first accepted language. If nothing in <code>languages</code> is accepted, then <code>false</code> is returned.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/#languages","title":".languages()","text":"<p>Return the languages that the request accepts, in the order of the client's preference (most preferred first).</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/#typetypes","title":".type(types)","text":"<p>Return the first accepted type (and it is returned as the same text as what appears in the <code>types</code> array). If nothing in <code>types</code> is accepted, then <code>false</code> is returned.</p> <p>The <code>types</code> array can contain full MIME types or file extensions. Any value that is not a full MIME type is passed to <code>require('mime-types').lookup</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/#types","title":".types()","text":"<p>Return the types that the request accepts, in the order of the client's preference (most preferred first).</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/#examples","title":"Examples","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/#simple-type-negotiation","title":"Simple type negotiation","text":"<p>This simple example shows how to use <code>accepts</code> to return a different typed respond body based on what the client wants to accept. The server lists it's preferences in order and will get back the best match between the client and server.</p> <pre><code>var accepts = require('accepts')\nvar http = require('http')\n\nfunction app (req, res) {\n  var accept = accepts(req)\n\n  // the order of this list is significant; should be server preferred order\n  switch (accept.type(['json', 'html'])) {\n    case 'json':\n      res.setHeader('Content-Type', 'application/json')\n      res.write('{\"hello\":\"world!\"}')\n      break\n    case 'html':\n      res.setHeader('Content-Type', 'text/html')\n      res.write('&lt;b&gt;hello, world!&lt;/b&gt;')\n      break\n    default:\n      // the fallback is text/plain, so no need to specify it above\n      res.setHeader('Content-Type', 'text/plain')\n      res.write('hello, world!')\n      break\n  }\n\n  res.end()\n}\n\nhttp.createServer(app).listen(3000)\n</code></pre> <p>You can test this out with the cURL program: <pre><code>curl -I -H'Accept: text/html' http://localhost:3000/\n</code></pre></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/","title":"2.0.0 / 2024-08-31","text":"<ul> <li>Drop node &lt;18 support</li> <li>deps: mime-types@^3.0.0</li> <li>deps: negotiator@^1.0.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#138-2022-02-02","title":"1.3.8 / 2022-02-02","text":"<ul> <li>deps: mime-types@~2.1.34<ul> <li>deps: mime-db@~1.51.0</li> </ul> </li> <li>deps: negotiator@0.6.3</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#137-2019-04-29","title":"1.3.7 / 2019-04-29","text":"<ul> <li>deps: negotiator@0.6.2<ul> <li>Fix sorting charset, encoding, and language with extra parameters</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#136-2019-04-28","title":"1.3.6 / 2019-04-28","text":"<ul> <li>deps: mime-types@~2.1.24<ul> <li>deps: mime-db@~1.40.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#135-2018-02-28","title":"1.3.5 / 2018-02-28","text":"<ul> <li>deps: mime-types@~2.1.18<ul> <li>deps: mime-db@~1.33.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#134-2017-08-22","title":"1.3.4 / 2017-08-22","text":"<ul> <li>deps: mime-types@~2.1.16<ul> <li>deps: mime-db@~1.29.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#133-2016-05-02","title":"1.3.3 / 2016-05-02","text":"<ul> <li>deps: mime-types@~2.1.11<ul> <li>deps: mime-db@~1.23.0</li> </ul> </li> <li>deps: negotiator@0.6.1<ul> <li>perf: improve <code>Accept</code> parsing speed</li> <li>perf: improve <code>Accept-Charset</code> parsing speed</li> <li>perf: improve <code>Accept-Encoding</code> parsing speed</li> <li>perf: improve <code>Accept-Language</code> parsing speed</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#132-2016-03-08","title":"1.3.2 / 2016-03-08","text":"<ul> <li>deps: mime-types@~2.1.10<ul> <li>Fix extension of <code>application/dash+xml</code></li> <li>Update primary extension for <code>audio/mp4</code></li> <li>deps: mime-db@~1.22.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#131-2016-01-19","title":"1.3.1 / 2016-01-19","text":"<ul> <li>deps: mime-types@~2.1.9<ul> <li>deps: mime-db@~1.21.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#130-2015-09-29","title":"1.3.0 / 2015-09-29","text":"<ul> <li>deps: mime-types@~2.1.7<ul> <li>deps: mime-db@~1.19.0</li> </ul> </li> <li>deps: negotiator@0.6.0<ul> <li>Fix including type extensions in parameters in <code>Accept</code> parsing</li> <li>Fix parsing <code>Accept</code> parameters with quoted equals</li> <li>Fix parsing <code>Accept</code> parameters with quoted semicolons</li> <li>Lazy-load modules from main entry point</li> <li>perf: delay type concatenation until needed</li> <li>perf: enable strict mode</li> <li>perf: hoist regular expressions</li> <li>perf: remove closures getting spec properties</li> <li>perf: remove a closure from media type parsing</li> <li>perf: remove property delete from media type parsing</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#1213-2015-09-06","title":"1.2.13 / 2015-09-06","text":"<ul> <li>deps: mime-types@~2.1.6<ul> <li>deps: mime-db@~1.18.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#1212-2015-07-30","title":"1.2.12 / 2015-07-30","text":"<ul> <li>deps: mime-types@~2.1.4<ul> <li>deps: mime-db@~1.16.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#1211-2015-07-16","title":"1.2.11 / 2015-07-16","text":"<ul> <li>deps: mime-types@~2.1.3<ul> <li>deps: mime-db@~1.15.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#1210-2015-07-01","title":"1.2.10 / 2015-07-01","text":"<ul> <li>deps: mime-types@~2.1.2<ul> <li>deps: mime-db@~1.14.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#129-2015-06-08","title":"1.2.9 / 2015-06-08","text":"<ul> <li>deps: mime-types@~2.1.1<ul> <li>perf: fix deopt during mapping</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#128-2015-06-07","title":"1.2.8 / 2015-06-07","text":"<ul> <li>deps: mime-types@~2.1.0<ul> <li>deps: mime-db@~1.13.0</li> </ul> </li> <li>perf: avoid argument reassignment &amp; argument slice</li> <li>perf: avoid negotiator recursive construction</li> <li>perf: enable strict mode</li> <li>perf: remove unnecessary bitwise operator</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#127-2015-05-10","title":"1.2.7 / 2015-05-10","text":"<ul> <li>deps: negotiator@0.5.3<ul> <li>Fix media type parameter matching to be case-insensitive</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#126-2015-05-07","title":"1.2.6 / 2015-05-07","text":"<ul> <li>deps: mime-types@~2.0.11<ul> <li>deps: mime-db@~1.9.1</li> </ul> </li> <li>deps: negotiator@0.5.2<ul> <li>Fix comparing media types with quoted values</li> <li>Fix splitting media types with quoted commas</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#125-2015-03-13","title":"1.2.5 / 2015-03-13","text":"<ul> <li>deps: mime-types@~2.0.10<ul> <li>deps: mime-db@~1.8.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#124-2015-02-14","title":"1.2.4 / 2015-02-14","text":"<ul> <li>Support Node.js 0.6</li> <li>deps: mime-types@~2.0.9<ul> <li>deps: mime-db@~1.7.0</li> </ul> </li> <li>deps: negotiator@0.5.1<ul> <li>Fix preference sorting to be stable for long acceptable lists</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#123-2015-01-31","title":"1.2.3 / 2015-01-31","text":"<ul> <li>deps: mime-types@~2.0.8<ul> <li>deps: mime-db@~1.6.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#122-2014-12-30","title":"1.2.2 / 2014-12-30","text":"<ul> <li>deps: mime-types@~2.0.7<ul> <li>deps: mime-db@~1.5.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#121-2014-12-30","title":"1.2.1 / 2014-12-30","text":"<ul> <li>deps: mime-types@~2.0.5<ul> <li>deps: mime-db@~1.3.1</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#120-2014-12-19","title":"1.2.0 / 2014-12-19","text":"<ul> <li>deps: negotiator@0.5.0<ul> <li>Fix list return order when large accepted list</li> <li>Fix missing identity encoding when q=0 exists</li> <li>Remove dynamic building of Negotiator class</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#114-2014-12-10","title":"1.1.4 / 2014-12-10","text":"<ul> <li>deps: mime-types@~2.0.4<ul> <li>deps: mime-db@~1.3.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#113-2014-11-09","title":"1.1.3 / 2014-11-09","text":"<ul> <li>deps: mime-types@~2.0.3<ul> <li>deps: mime-db@~1.2.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#112-2014-10-14","title":"1.1.2 / 2014-10-14","text":"<ul> <li>deps: negotiator@0.4.9<ul> <li>Fix error when media type has invalid parameter</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#111-2014-09-28","title":"1.1.1 / 2014-09-28","text":"<ul> <li>deps: mime-types@~2.0.2<ul> <li>deps: mime-db@~1.1.0</li> </ul> </li> <li>deps: negotiator@0.4.8<ul> <li>Fix all negotiations to be case-insensitive</li> <li>Stable sort preferences of same quality according to client order</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#110-2014-09-02","title":"1.1.0 / 2014-09-02","text":"<ul> <li>update <code>mime-types</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#107-2014-07-04","title":"1.0.7 / 2014-07-04","text":"<ul> <li>Fix wrong type returned from <code>type</code> when match after unknown extension</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#106-2014-06-24","title":"1.0.6 / 2014-06-24","text":"<ul> <li>deps: negotiator@0.4.7</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#105-2014-06-20","title":"1.0.5 / 2014-06-20","text":"<ul> <li>fix crash when unknown extension given</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#104-2014-06-19","title":"1.0.4 / 2014-06-19","text":"<ul> <li>use <code>mime-types</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#103-2014-06-11","title":"1.0.3 / 2014-06-11","text":"<ul> <li>deps: negotiator@0.4.6<ul> <li>Order by specificity when quality is the same</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#102-2014-05-29","title":"1.0.2 / 2014-05-29","text":"<ul> <li>Fix interpretation when header not in request</li> <li>deps: pin negotiator@0.4.5</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#101-2014-01-18","title":"1.0.1 / 2014-01-18","text":"<ul> <li>Identity encoding isn't always acceptable</li> <li>deps: negotiator@~0.4.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/accepts/HISTORY/#100-2013-12-27","title":"1.0.0 / 2013-12-27","text":"<ul> <li>Genesis</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/anymatch/","title":"anymatch","text":"<p>Javascript module to match a string against a regular expression, glob, string, or function that takes the string as an argument and returns a truthy or falsy value. The matcher can also be an array of any or all of these. Useful for allowing a very flexible user-defined config to define things like file paths.</p> <p>Note: This module has Bash-parity, please be aware that Windows-style backslashes are not supported as separators. See https://github.com/micromatch/micromatch#backslashes for more information.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/anymatch/#usage","title":"Usage","text":"<pre><code>npm install anymatch\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/anymatch/#anymatchmatchers-teststring-returnindex-options","title":"anymatch(matchers, testString, [returnIndex], [options])","text":"<ul> <li>matchers: (Array|String|RegExp|Function) String to be directly matched, string with glob patterns, regular expression test, function that takes the testString as an argument and returns a truthy value if it should be matched, or an array of any number and mix of these types.</li> <li>testString: (String|Array) The string to test against the matchers. If passed as an array, the first element of the array will be used as the <code>testString</code> for non-function matchers, while the entire array will be applied as the arguments for function matchers.</li> <li>options: (Object [optional]_) Any of the picomatch options.<ul> <li>returnIndex: (Boolean [optional]) If true, return the array index of the first matcher that that testString matched, or -1 if no match, instead of a boolean result.</li> </ul> </li> </ul> <pre><code>const anymatch = require('anymatch');\n\nconst matchers = [ 'path/to/file.js', 'path/anyjs/**/*.js', /foo.js$/, string =&gt; string.includes('bar') &amp;&amp; string.length &gt; 10 ] ;\n\nanymatch(matchers, 'path/to/file.js'); // true\nanymatch(matchers, 'path/anyjs/baz.js'); // true\nanymatch(matchers, 'path/to/foo.js'); // true\nanymatch(matchers, 'path/to/bar.js'); // true\nanymatch(matchers, 'bar.js'); // false\n\n// returnIndex = true\nanymatch(matchers, 'foo.js', {returnIndex: true}); // 2\nanymatch(matchers, 'path/anyjs/foo.js', {returnIndex: true}); // 1\n\n// any picomatc\n\n// using globs to match directories and their children\nanymatch('node_modules', 'node_modules'); // true\nanymatch('node_modules', 'node_modules/somelib/index.js'); // false\nanymatch('node_modules/**', 'node_modules/somelib/index.js'); // true\nanymatch('node_modules/**', '/absolute/path/to/node_modules/somelib/index.js'); // false\nanymatch('**/node_modules/**', '/absolute/path/to/node_modules/somelib/index.js'); // true\n\nconst matcher = anymatch(matchers);\n['foo.js', 'bar.js'].filter(matcher);  // [ 'foo.js' ]\nanymatch master* \u276f\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/anymatch/#anymatchmatchers","title":"anymatch(matchers)","text":"<p>You can also pass in only your matcher(s) to get a curried function that has already been bound to the provided matching criteria. This can be used as an <code>Array#filter</code> callback.</p> <pre><code>var matcher = anymatch(matchers);\n\nmatcher('path/to/file.js'); // true\nmatcher('path/anyjs/baz.js', true); // 1\n\n['foo.js', 'bar.js'].filter(matcher); // ['foo.js']\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/anymatch/#changelog","title":"Changelog","text":"<p>See release notes page on GitHub</p> <ul> <li>v3.0: Removed <code>startIndex</code> and <code>endIndex</code> arguments. Node 8.x-only.</li> <li>v2.0: micromatch moves away from minimatch-parity and inline with Bash. This includes handling backslashes differently (see https://github.com/micromatch/micromatch#backslashes for more information).</li> <li>v1.2: anymatch uses micromatch for glob pattern matching. Issues with glob pattern matching should be reported directly to the micromatch issue tracker.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/anymatch/#license","title":"License","text":"<p>ISC</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/balanced-match/","title":"balanced-match","text":"<p>Match balanced string pairs, like <code>{</code> and <code>}</code> or <code>&lt;b&gt;</code> and <code>&lt;/b&gt;</code>. Supports regular expressions as well!</p> <p> </p> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/balanced-match/#example","title":"Example","text":"<p>Get the first matching pair of braces:</p> <pre><code>var balanced = require('balanced-match');\n\nconsole.log(balanced('{', '}', 'pre{in{nested}}post'));\nconsole.log(balanced('{', '}', 'pre{first}between{second}post'));\nconsole.log(balanced(/\\s+\\{\\s+/, /\\s+\\}\\s+/, 'pre  {   in{nest}   }  post'));\n</code></pre> <p>The matches are:</p> <pre><code>$ node example.js\n{ start: 3, end: 14, pre: 'pre', body: 'in{nested}', post: 'post' }\n{ start: 3,\n  end: 9,\n  pre: 'pre',\n  body: 'first',\n  post: 'between{second}post' }\n{ start: 3, end: 17, pre: 'pre', body: 'in{nest}', post: 'post' }\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/balanced-match/#api","title":"API","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/balanced-match/#var-m-balanceda-b-str","title":"var m = balanced(a, b, str)","text":"<p>For the first non-nested matching pair of <code>a</code> and <code>b</code> in <code>str</code>, return an object with those keys:</p> <ul> <li>start the index of the first match of <code>a</code></li> <li>end the index of the matching <code>b</code></li> <li>pre the preamble, <code>a</code> and <code>b</code> not included</li> <li>body the match, <code>a</code> and <code>b</code> not included</li> <li>post the postscript, <code>a</code> and <code>b</code> not included</li> </ul> <p>If there's no match, <code>undefined</code> will be returned.</p> <p>If the <code>str</code> contains more <code>a</code> than <code>b</code> / there are unmatched pairs, the first match that was closed will be used. For example, <code>{{a}</code> will match <code>['{', 'a', '']</code> and <code>{a}}</code> will match <code>['', 'a', '}']</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/balanced-match/#var-r-balancedrangea-b-str","title":"var r = balanced.range(a, b, str)","text":"<p>For the first non-nested matching pair of <code>a</code> and <code>b</code> in <code>str</code>, return an array with indexes: <code>[ &lt;a index&gt;, &lt;b index&gt; ]</code>.</p> <p>If there's no match, <code>undefined</code> will be returned.</p> <p>If the <code>str</code> contains more <code>a</code> than <code>b</code> / there are unmatched pairs, the first match that was closed will be used. For example, <code>{{a}</code> will match <code>[ 1, 3 ]</code> and <code>{a}}</code> will match <code>[0, 2]</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/balanced-match/#installation","title":"Installation","text":"<p>With npm do:</p> <pre><code>npm install balanced-match\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/balanced-match/#security-contact-information","title":"Security contact information","text":"<p>To report a security vulnerability, please use the Tidelift security contact. Tidelift will coordinate the fix and disclosure.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/balanced-match/#license","title":"License","text":"<p>(MIT)</p> <p>Copyright (c) 2013 Julian Gruber &lt;julian@juliangruber.com&gt;</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/balanced-match/LICENSE/","title":"LICENSE","text":"<p>(MIT)</p> <p>Copyright (c) 2013 Julian Gruber &lt;julian@juliangruber.com&gt;</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/","title":"basic-auth","text":"<p>Generic basic auth Authorization header field parser for whatever.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/#installation","title":"Installation","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install basic-auth\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/#api","title":"API","text":"<pre><code>var auth = require('basic-auth')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/#authreq","title":"auth(req)","text":"<p>Get the basic auth credentials from the given request. The <code>Authorization</code> header is parsed and if the header is invalid, <code>undefined</code> is returned, otherwise an object with <code>name</code> and <code>pass</code> properties.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/#authparsestring","title":"auth.parse(string)","text":"<p>Parse a basic auth authorization header string. This will return an object with <code>name</code> and <code>pass</code> properties, or <code>undefined</code> if the string is invalid.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/#example","title":"Example","text":"<p>Pass a Node.js request object to the module export. If parsing fails <code>undefined</code> is returned, otherwise an object with <code>.name</code> and <code>.pass</code>.</p> <pre><code>var auth = require('basic-auth')\nvar user = auth(req)\n// =&gt; { name: 'something', pass: 'whatever' }\n</code></pre> <p>A header string from any other location can also be parsed with <code>auth.parse</code>, for example a <code>Proxy-Authorization</code> header:</p> <pre><code>var auth = require('basic-auth')\nvar user = auth.parse(req.getHeader('Proxy-Authorization'))\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/#with-vanilla-nodejs-http-server","title":"With vanilla node.js http server","text":"<pre><code>var http = require('http')\nvar auth = require('basic-auth')\nvar compare = require('tsscmp')\n\n// Create server\nvar server = http.createServer(function (req, res) {\n  var credentials = auth(req)\n\n  // Check credentials\n  // The \"check\" function will typically be against your user store\n  if (!credentials || !check(credentials.name, credentials.pass)) {\n    res.statusCode = 401\n    res.setHeader('WWW-Authenticate', 'Basic realm=\"example\"')\n    res.end('Access denied')\n  } else {\n    res.end('Access granted')\n  }\n})\n\n// Basic function to validate credentials for example\nfunction check (name, pass) {\n  var valid = true\n\n  // Simple method to prevent short-circut and use timing-safe compare\n  valid = compare(name, 'john') &amp;&amp; valid\n  valid = compare(pass, 'secret') &amp;&amp; valid\n\n  return valid\n}\n\n// Listen\nserver.listen(3000)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/HISTORY/","title":"2.0.1 / 2018-09-19","text":"<ul> <li>deps: safe-buffer@5.1.2</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/HISTORY/#200-2017-09-12","title":"2.0.0 / 2017-09-12","text":"<ul> <li>Drop support for Node.js below 0.8</li> <li>Remove <code>auth(ctx)</code> signature -- pass in header or <code>auth(ctx.req)</code></li> <li>Use <code>safe-buffer</code> for improved Buffer API</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/HISTORY/#110-2016-11-18","title":"1.1.0 / 2016-11-18","text":"<ul> <li>Add <code>auth.parse</code> for low-level string parsing</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/HISTORY/#104-2016-05-10","title":"1.0.4 / 2016-05-10","text":"<ul> <li>Improve error message when <code>req</code> argument is not an object</li> <li>Improve error message when <code>req</code> missing <code>headers</code> property</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/HISTORY/#103-2015-07-01","title":"1.0.3 / 2015-07-01","text":"<ul> <li>Fix regression accepting a Koa context</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/HISTORY/#102-2015-06-12","title":"1.0.2 / 2015-06-12","text":"<ul> <li>Improve error message when <code>req</code> argument missing</li> <li>perf: enable strict mode</li> <li>perf: hoist regular expression</li> <li>perf: parse with regular expressions</li> <li>perf: remove argument reassignment</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/HISTORY/#101-2015-05-04","title":"1.0.1 / 2015-05-04","text":"<ul> <li>Update readme</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/HISTORY/#100-2014-07-01","title":"1.0.0 / 2014-07-01","text":"<ul> <li>Support empty password</li> <li>Support empty username</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/HISTORY/#001-2013-11-30","title":"0.0.1 / 2013-11-30","text":"<ul> <li>Initial release</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/","title":"safe-buffer","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#safer-nodejs-buffer-api","title":"Safer Node.js Buffer API","text":"<p>Use the new Node.js Buffer APIs (<code>Buffer.from</code>, <code>Buffer.alloc</code>, <code>Buffer.allocUnsafe</code>, <code>Buffer.allocUnsafeSlow</code>) in all versions of Node.js.</p> <p>Uses the built-in implementation when available.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#install","title":"install","text":"<pre><code>npm install safe-buffer\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#usage","title":"usage","text":"<p>The goal of this package is to provide a safe replacement for the node.js <code>Buffer</code>.</p> <p>It's a drop-in replacement for <code>Buffer</code>. You can use it by adding one <code>require</code> line to the top of your node.js modules:</p> <pre><code>var Buffer = require('safe-buffer').Buffer\n\n// Existing buffer code will continue to work without issues:\n\nnew Buffer('hey', 'utf8')\nnew Buffer([1, 2, 3], 'utf8')\nnew Buffer(obj)\nnew Buffer(16) // create an uninitialized buffer (potentially unsafe)\n\n// But you can use these new explicit APIs to make clear what you want:\n\nBuffer.from('hey', 'utf8') // convert from many types to a Buffer\nBuffer.alloc(16) // create a zero-filled buffer (safe)\nBuffer.allocUnsafe(16) // create an uninitialized buffer (potentially unsafe)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#api","title":"api","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#class-method-bufferfromarray","title":"Class Method: Buffer.from(array)","text":"<ul> <li><code>array</code> {Array}</li> </ul> <p>Allocates a new <code>Buffer</code> using an <code>array</code> of octets.</p> <pre><code>const buf = Buffer.from([0x62,0x75,0x66,0x66,0x65,0x72]);\n  // creates a new Buffer containing ASCII bytes\n  // ['b','u','f','f','e','r']\n</code></pre> <p>A <code>TypeError</code> will be thrown if <code>array</code> is not an <code>Array</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#class-method-bufferfromarraybuffer-byteoffset-length","title":"Class Method: Buffer.from(arrayBuffer[, byteOffset[, length]])","text":"<ul> <li><code>arrayBuffer</code> {ArrayBuffer} The <code>.buffer</code> property of a <code>TypedArray</code> or   a <code>new ArrayBuffer()</code></li> <li><code>byteOffset</code> {Number} Default: <code>0</code></li> <li><code>length</code> {Number} Default: <code>arrayBuffer.length - byteOffset</code></li> </ul> <p>When passed a reference to the <code>.buffer</code> property of a <code>TypedArray</code> instance, the newly created <code>Buffer</code> will share the same allocated memory as the TypedArray.</p> <pre><code>const arr = new Uint16Array(2);\narr[0] = 5000;\narr[1] = 4000;\n\nconst buf = Buffer.from(arr.buffer); // shares the memory with arr;\n\nconsole.log(buf);\n  // Prints: &lt;Buffer 88 13 a0 0f&gt;\n\n// changing the TypedArray changes the Buffer also\narr[1] = 6000;\n\nconsole.log(buf);\n  // Prints: &lt;Buffer 88 13 70 17&gt;\n</code></pre> <p>The optional <code>byteOffset</code> and <code>length</code> arguments specify a memory range within the <code>arrayBuffer</code> that will be shared by the <code>Buffer</code>.</p> <pre><code>const ab = new ArrayBuffer(10);\nconst buf = Buffer.from(ab, 0, 2);\nconsole.log(buf.length);\n  // Prints: 2\n</code></pre> <p>A <code>TypeError</code> will be thrown if <code>arrayBuffer</code> is not an <code>ArrayBuffer</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#class-method-bufferfrombuffer","title":"Class Method: Buffer.from(buffer)","text":"<ul> <li><code>buffer</code> {Buffer}</li> </ul> <p>Copies the passed <code>buffer</code> data onto a new <code>Buffer</code> instance.</p> <pre><code>const buf1 = Buffer.from('buffer');\nconst buf2 = Buffer.from(buf1);\n\nbuf1[0] = 0x61;\nconsole.log(buf1.toString());\n  // 'auffer'\nconsole.log(buf2.toString());\n  // 'buffer' (copy is not changed)\n</code></pre> <p>A <code>TypeError</code> will be thrown if <code>buffer</code> is not a <code>Buffer</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#class-method-bufferfromstr-encoding","title":"Class Method: Buffer.from(str[, encoding])","text":"<ul> <li><code>str</code> {String} String to encode.</li> <li><code>encoding</code> {String} Encoding to use, Default: <code>'utf8'</code></li> </ul> <p>Creates a new <code>Buffer</code> containing the given JavaScript string <code>str</code>. If provided, the <code>encoding</code> parameter identifies the character encoding. If not provided, <code>encoding</code> defaults to <code>'utf8'</code>.</p> <pre><code>const buf1 = Buffer.from('this is a t\u00e9st');\nconsole.log(buf1.toString());\n  // prints: this is a t\u00e9st\nconsole.log(buf1.toString('ascii'));\n  // prints: this is a tC)st\n\nconst buf2 = Buffer.from('7468697320697320612074c3a97374', 'hex');\nconsole.log(buf2.toString());\n  // prints: this is a t\u00e9st\n</code></pre> <p>A <code>TypeError</code> will be thrown if <code>str</code> is not a string.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#class-method-bufferallocsize-fill-encoding","title":"Class Method: Buffer.alloc(size[, fill[, encoding]])","text":"<ul> <li><code>size</code> {Number}</li> <li><code>fill</code> {Value} Default: <code>undefined</code></li> <li><code>encoding</code> {String} Default: <code>utf8</code></li> </ul> <p>Allocates a new <code>Buffer</code> of <code>size</code> bytes. If <code>fill</code> is <code>undefined</code>, the <code>Buffer</code> will be zero-filled.</p> <pre><code>const buf = Buffer.alloc(5);\nconsole.log(buf);\n  // &lt;Buffer 00 00 00 00 00&gt;\n</code></pre> <p>The <code>size</code> must be less than or equal to the value of <code>require('buffer').kMaxLength</code> (on 64-bit architectures, <code>kMaxLength</code> is <code>(2^31)-1</code>). Otherwise, a [<code>RangeError</code>][] is thrown. A zero-length Buffer will be created if a <code>size</code> less than or equal to 0 is specified.</p> <p>If <code>fill</code> is specified, the allocated <code>Buffer</code> will be initialized by calling <code>buf.fill(fill)</code>. See [<code>buf.fill()</code>][] for more information.</p> <pre><code>const buf = Buffer.alloc(5, 'a');\nconsole.log(buf);\n  // &lt;Buffer 61 61 61 61 61&gt;\n</code></pre> <p>If both <code>fill</code> and <code>encoding</code> are specified, the allocated <code>Buffer</code> will be initialized by calling <code>buf.fill(fill, encoding)</code>. For example:</p> <pre><code>const buf = Buffer.alloc(11, 'aGVsbG8gd29ybGQ=', 'base64');\nconsole.log(buf);\n  // &lt;Buffer 68 65 6c 6c 6f 20 77 6f 72 6c 64&gt;\n</code></pre> <p>Calling <code>Buffer.alloc(size)</code> can be significantly slower than the alternative <code>Buffer.allocUnsafe(size)</code> but ensures that the newly created <code>Buffer</code> instance contents will never contain sensitive data.</p> <p>A <code>TypeError</code> will be thrown if <code>size</code> is not a number.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#class-method-bufferallocunsafesize","title":"Class Method: Buffer.allocUnsafe(size)","text":"<ul> <li><code>size</code> {Number}</li> </ul> <p>Allocates a new non-zero-filled <code>Buffer</code> of <code>size</code> bytes.  The <code>size</code> must be less than or equal to the value of <code>require('buffer').kMaxLength</code> (on 64-bit architectures, <code>kMaxLength</code> is <code>(2^31)-1</code>). Otherwise, a [<code>RangeError</code>][] is thrown. A zero-length Buffer will be created if a <code>size</code> less than or equal to 0 is specified.</p> <p>The underlying memory for <code>Buffer</code> instances created in this way is not initialized. The contents of the newly created <code>Buffer</code> are unknown and may contain sensitive data. Use [<code>buf.fill(0)</code>][] to initialize such <code>Buffer</code> instances to zeroes.</p> <pre><code>const buf = Buffer.allocUnsafe(5);\nconsole.log(buf);\n  // &lt;Buffer 78 e0 82 02 01&gt;\n  // (octets will be different, every time)\nbuf.fill(0);\nconsole.log(buf);\n  // &lt;Buffer 00 00 00 00 00&gt;\n</code></pre> <p>A <code>TypeError</code> will be thrown if <code>size</code> is not a number.</p> <p>Note that the <code>Buffer</code> module pre-allocates an internal <code>Buffer</code> instance of size <code>Buffer.poolSize</code> that is used as a pool for the fast allocation of new <code>Buffer</code> instances created using <code>Buffer.allocUnsafe(size)</code> (and the deprecated <code>new Buffer(size)</code> constructor) only when <code>size</code> is less than or equal to <code>Buffer.poolSize &gt;&gt; 1</code> (floor of <code>Buffer.poolSize</code> divided by two). The default value of <code>Buffer.poolSize</code> is <code>8192</code> but can be modified.</p> <p>Use of this pre-allocated internal memory pool is a key difference between calling <code>Buffer.alloc(size, fill)</code> vs. <code>Buffer.allocUnsafe(size).fill(fill)</code>. Specifically, <code>Buffer.alloc(size, fill)</code> will never use the internal Buffer pool, while <code>Buffer.allocUnsafe(size).fill(fill)</code> will use the internal Buffer pool if <code>size</code> is less than or equal to half <code>Buffer.poolSize</code>. The difference is subtle but can be important when an application requires the additional performance that <code>Buffer.allocUnsafe(size)</code> provides.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#class-method-bufferallocunsafeslowsize","title":"Class Method: Buffer.allocUnsafeSlow(size)","text":"<ul> <li><code>size</code> {Number}</li> </ul> <p>Allocates a new non-zero-filled and non-pooled <code>Buffer</code> of <code>size</code> bytes.  The <code>size</code> must be less than or equal to the value of <code>require('buffer').kMaxLength</code> (on 64-bit architectures, <code>kMaxLength</code> is <code>(2^31)-1</code>). Otherwise, a [<code>RangeError</code>][] is thrown. A zero-length Buffer will be created if a <code>size</code> less than or equal to 0 is specified.</p> <p>The underlying memory for <code>Buffer</code> instances created in this way is not initialized. The contents of the newly created <code>Buffer</code> are unknown and may contain sensitive data. Use [<code>buf.fill(0)</code>][] to initialize such <code>Buffer</code> instances to zeroes.</p> <p>When using <code>Buffer.allocUnsafe()</code> to allocate new <code>Buffer</code> instances, allocations under 4KB are, by default, sliced from a single pre-allocated <code>Buffer</code>. This allows applications to avoid the garbage collection overhead of creating many individually allocated Buffers. This approach improves both performance and memory usage by eliminating the need to track and cleanup as many <code>Persistent</code> objects.</p> <p>However, in the case where a developer may need to retain a small chunk of memory from a pool for an indeterminate amount of time, it may be appropriate to create an un-pooled Buffer instance using <code>Buffer.allocUnsafeSlow()</code> then copy out the relevant bits.</p> <pre><code>// need to keep around a few small chunks of memory\nconst store = [];\n\nsocket.on('readable', () =&gt; {\n  const data = socket.read();\n  // allocate for retained data\n  const sb = Buffer.allocUnsafeSlow(10);\n  // copy the data into the new allocation\n  data.copy(sb, 0, 0, 10);\n  store.push(sb);\n});\n</code></pre> <p>Use of <code>Buffer.allocUnsafeSlow()</code> should be used only as a last resort after a developer has observed undue memory retention in their applications.</p> <p>A <code>TypeError</code> will be thrown if <code>size</code> is not a number.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#all-the-rest","title":"All the Rest","text":"<p>The rest of the <code>Buffer</code> API is exactly the same as in node.js. See the docs.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#related-links","title":"Related links","text":"<ul> <li>Node.js issue: Buffer(number) is unsafe</li> <li>Node.js Enhancement Proposal: Buffer.from/Buffer.alloc/Buffer.zalloc/Buffer() soft-deprecate</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#why-is-buffer-unsafe","title":"Why is <code>Buffer</code> unsafe?","text":"<p>Today, the node.js <code>Buffer</code> constructor is overloaded to handle many different argument types like <code>String</code>, <code>Array</code>, <code>Object</code>, <code>TypedArrayView</code> (<code>Uint8Array</code>, etc.), <code>ArrayBuffer</code>, and also <code>Number</code>.</p> <p>The API is optimized for convenience: you can throw any type at it, and it will try to do what you want.</p> <p>Because the Buffer constructor is so powerful, you often see code like this:</p> <pre><code>// Convert UTF-8 strings to hex\nfunction toHex (str) {\n  return new Buffer(str).toString('hex')\n}\n</code></pre> <p>But what happens if <code>toHex</code> is called with a <code>Number</code> argument?</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#remote-memory-disclosure","title":"Remote Memory Disclosure","text":"<p>If an attacker can make your program call the <code>Buffer</code> constructor with a <code>Number</code> argument, then they can make it allocate uninitialized memory from the node.js process. This could potentially disclose TLS private keys, user data, or database passwords.</p> <p>When the <code>Buffer</code> constructor is passed a <code>Number</code> argument, it returns an UNINITIALIZED block of memory of the specified <code>size</code>. When you create a <code>Buffer</code> like this, you MUST overwrite the contents before returning it to the user.</p> <p>From the node.js docs:</p> <p><code>new Buffer(size)</code></p> <ul> <li><code>size</code> Number</li> </ul> <p>The underlying memory for <code>Buffer</code> instances created in this way is not initialized. The contents of a newly created <code>Buffer</code> are unknown and could contain sensitive data. Use <code>buf.fill(0)</code> to initialize a Buffer to zeroes.</p> <p>(Emphasis our own.)</p> <p>Whenever the programmer intended to create an uninitialized <code>Buffer</code> you often see code like this:</p> <pre><code>var buf = new Buffer(16)\n\n// Immediately overwrite the uninitialized buffer with data from another buffer\nfor (var i = 0; i &lt; buf.length; i++) {\n  buf[i] = otherBuf[i]\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#would-this-ever-be-a-problem-in-real-code","title":"Would this ever be a problem in real code?","text":"<p>Yes. It's surprisingly common to forget to check the type of your variables in a dynamically-typed language like JavaScript.</p> <p>Usually the consequences of assuming the wrong type is that your program crashes with an uncaught exception. But the failure mode for forgetting to check the type of arguments to the <code>Buffer</code> constructor is more catastrophic.</p> <p>Here's an example of a vulnerable service that takes a JSON payload and converts it to hex:</p> <pre><code>// Take a JSON payload {str: \"some string\"} and convert it to hex\nvar server = http.createServer(function (req, res) {\n  var data = ''\n  req.setEncoding('utf8')\n  req.on('data', function (chunk) {\n    data += chunk\n  })\n  req.on('end', function () {\n    var body = JSON.parse(data)\n    res.end(new Buffer(body.str).toString('hex'))\n  })\n})\n\nserver.listen(8080)\n</code></pre> <p>In this example, an http client just has to send:</p> <pre><code>{\n  \"str\": 1000\n}\n</code></pre> <p>and it will get back 1,000 bytes of uninitialized memory from the server.</p> <p>This is a very serious bug. It's similar in severity to the the Heartbleed bug that allowed disclosure of OpenSSL process memory by remote attackers.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#which-real-world-packages-were-vulnerable","title":"Which real-world packages were vulnerable?","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#bittorrent-dht","title":"<code>bittorrent-dht</code>","text":"<p>Mathias Buus and I (Feross Aboukhadijeh) found this issue in one of our own packages, <code>bittorrent-dht</code>. The bug would allow anyone on the internet to send a series of messages to a user of <code>bittorrent-dht</code> and get them to reveal 20 bytes at a time of uninitialized memory from the node.js process.</p> <p>Here's the commit that fixed it. We released a new fixed version, created a Node Security Project disclosure, and deprecated all vulnerable versions on npm so users will get a warning to upgrade to a newer version.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#ws","title":"<code>ws</code>","text":"<p>That got us wondering if there were other vulnerable packages. Sure enough, within a short period of time, we found the same issue in <code>ws</code>, the most popular WebSocket implementation in node.js.</p> <p>If certain APIs were called with <code>Number</code> parameters instead of <code>String</code> or <code>Buffer</code> as expected, then uninitialized server memory would be disclosed to the remote peer.</p> <p>These were the vulnerable methods:</p> <pre><code>socket.send(number)\nsocket.ping(number)\nsocket.pong(number)\n</code></pre> <p>Here's a vulnerable socket server with some echo functionality:</p> <pre><code>server.on('connection', function (socket) {\n  socket.on('message', function (message) {\n    message = JSON.parse(message)\n    if (message.type === 'echo') {\n      socket.send(message.data) // send back the user's message\n    }\n  })\n})\n</code></pre> <p><code>socket.send(number)</code> called on the server, will disclose server memory.</p> <p>Here's the release where the issue was fixed, with a more detailed explanation. Props to Arnout Kazemier for the quick fix. Here's the Node Security Project disclosure.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#whats-the-solution","title":"What's the solution?","text":"<p>It's important that node.js offers a fast way to get memory otherwise performance-critical applications would needlessly get a lot slower.</p> <p>But we need a better way to signal our intent as programmers. When we want uninitialized memory, we should request it explicitly.</p> <p>Sensitive functionality should not be packed into a developer-friendly API that loosely accepts many different types. This type of API encourages the lazy practice of passing variables in without checking the type very carefully.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#a-new-api-bufferallocunsafenumber","title":"A new API: <code>Buffer.allocUnsafe(number)</code>","text":"<p>The functionality of creating buffers with uninitialized memory should be part of another API. We propose <code>Buffer.allocUnsafe(number)</code>. This way, it's not part of an API that frequently gets user input of all sorts of different types passed into it.</p> <pre><code>var buf = Buffer.allocUnsafe(16) // careful, uninitialized memory!\n\n// Immediately overwrite the uninitialized buffer with data from another buffer\nfor (var i = 0; i &lt; buf.length; i++) {\n  buf[i] = otherBuf[i]\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#how-do-we-fix-nodejs-core","title":"How do we fix node.js core?","text":"<p>We sent a PR to node.js core (merged as <code>semver-major</code>) which defends against one case:</p> <pre><code>var str = 16\nnew Buffer(str, 'utf8')\n</code></pre> <p>In this situation, it's implied that the programmer intended the first argument to be a string, since they passed an encoding as a second argument. Today, node.js will allocate uninitialized memory in the case of <code>new Buffer(number, encoding)</code>, which is probably not what the programmer intended.</p> <p>But this is only a partial solution, since if the programmer does <code>new Buffer(variable)</code> (without an <code>encoding</code> parameter) there's no way to know what they intended. If <code>variable</code> is sometimes a number, then uninitialized memory will sometimes be returned.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#whats-the-real-long-term-fix","title":"What's the real long-term fix?","text":"<p>We could deprecate and remove <code>new Buffer(number)</code> and use <code>Buffer.allocUnsafe(number)</code> when we need uninitialized memory. But that would break 1000s of packages.</p> <p>~~We believe the best solution is to:~~</p> <p>~~1. Change <code>new Buffer(number)</code> to return safe, zeroed-out memory~~</p> <p>~~2. Create a new API for creating uninitialized Buffers. We propose: <code>Buffer.allocUnsafe(number)</code>~~</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#update","title":"Update","text":"<p>We now support adding three new APIs:</p> <ul> <li><code>Buffer.from(value)</code> - convert from any type to a buffer</li> <li><code>Buffer.alloc(size)</code> - create a zero-filled buffer</li> <li><code>Buffer.allocUnsafe(size)</code> - create an uninitialized buffer with given size</li> </ul> <p>This solves the core problem that affected <code>ws</code> and <code>bittorrent-dht</code> which is <code>Buffer(variable)</code> getting tricked into taking a number argument.</p> <p>This way, existing code continues working and the impact on the npm ecosystem will be minimal. Over time, npm maintainers can migrate performance-critical code to use <code>Buffer.allocUnsafe(number)</code> instead of <code>new Buffer(number)</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#conclusion","title":"Conclusion","text":"<p>We think there's a serious design issue with the <code>Buffer</code> API as it exists today. It promotes insecure software by putting high-risk functionality into a convenient API with friendly \"developer ergonomics\".</p> <p>This wasn't merely a theoretical exercise because we found the issue in some of the most popular npm packages.</p> <p>Fortunately, there's an easy fix that can be applied today. Use <code>safe-buffer</code> in place of <code>buffer</code>.</p> <pre><code>var Buffer = require('safe-buffer').Buffer\n</code></pre> <p>Eventually, we hope that node.js core can switch to this new, safer behavior. We believe the impact on the ecosystem would be minimal since it's not a breaking change. Well-maintained, popular packages would be updated to use <code>Buffer.alloc</code> quickly, while older, insecure packages would magically become safe from this attack vector.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#links","title":"links","text":"<ul> <li>Node.js PR: buffer: throw if both length and enc are passed</li> <li>Node Security Project disclosure for <code>ws</code></li> <li>Node Security Project disclosure for<code>bittorrent-dht</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#credit","title":"credit","text":"<p>The original issues in <code>bittorrent-dht</code> (disclosure) and <code>ws</code> (disclosure) were discovered by Mathias Buus and Feross Aboukhadijeh.</p> <p>Thanks to Adam Baldwin for helping disclose these issues and for his work running the Node Security Project.</p> <p>Thanks to John Hiesey for proofreading this README and auditing the code.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/basic-auth/node_modules/safe-buffer/#license","title":"license","text":"<p>MIT. Copyright (C) Feross Aboukhadijeh</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bcryptjs/","title":"bcrypt.js","text":"<p>Optimized bcrypt in JavaScript with zero dependencies, with TypeScript support. Compatible to the C++ bcrypt binding on Node.js and also working in the browser.</p> <p> </p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bcryptjs/#security-considerations","title":"Security considerations","text":"<p>Besides incorporating a salt to protect against rainbow table attacks, bcrypt is an adaptive function: over time, the iteration count can be increased to make it slower, so it remains resistant to brute-force search attacks even with increasing computation power. (see)</p> <p>While bcrypt.js is compatible to the C++ bcrypt binding, it is written in pure JavaScript and thus slower (about 30%), effectively reducing the number of iterations that can be processed in an equal time span.</p> <p>The maximum input length is 72 bytes (note that UTF-8 encoded characters use up to 4 bytes) and the length of generated hashes is 60 characters. Note that maximum input length is not implicitly checked by the library for compatibility with the C++ binding on Node.js, but should be checked with <code>bcrypt.truncates(password)</code> where necessary.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bcryptjs/#usage","title":"Usage","text":"<p>The package exports an ECMAScript module with an UMD fallback.</p> <pre><code>$&gt; npm install bcryptjs\n</code></pre> <pre><code>import bcrypt from \"bcryptjs\";\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/bcryptjs/#usage-with-a-cdn","title":"Usage with a CDN","text":"<ul> <li>From GitHub via jsDelivr: <code>https://cdn.jsdelivr.net/gh/dcodeIO/bcrypt.js@TAG/index.js</code> (ESM)</li> <li>From npm via jsDelivr: <code>https://cdn.jsdelivr.net/npm/bcryptjs@VERSION/index.js</code> (ESM) <code>https://cdn.jsdelivr.net/npm/bcryptjs@VERSION/umd/index.js</code> (UMD)</li> <li>From npm via unpkg: <code>https://unpkg.com/bcryptjs@VERSION/index.js</code> (ESM) <code>https://unpkg.com/bcryptjs@VERSION/umd/index.js</code> (UMD)</li> </ul> <p>Replace <code>TAG</code> respectively <code>VERSION</code> with a specific version or omit it (not recommended in production) to use latest.</p> <p>When using the ESM variant in a browser, the <code>crypto</code> import needs to be stubbed out, for example using an import map. Bundlers should omit it automatically.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bcryptjs/#usage-sync","title":"Usage - Sync","text":"<p>To hash a password:</p> <pre><code>const salt = bcrypt.genSaltSync(10);\nconst hash = bcrypt.hashSync(\"B4c0/\\/\", salt);\n// Store hash in your password DB\n</code></pre> <p>To check a password:</p> <pre><code>// Load hash from your password DB\nbcrypt.compareSync(\"B4c0/\\/\", hash); // true\nbcrypt.compareSync(\"not_bacon\", hash); // false\n</code></pre> <p>Auto-gen a salt and hash:</p> <pre><code>const hash = bcrypt.hashSync(\"bacon\", 10);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/bcryptjs/#usage-async","title":"Usage - Async","text":"<p>To hash a password:</p> <pre><code>const salt = await bcrypt.genSalt(10);\nconst hash = await bcrypt.hash(\"B4c0/\\/\", salt);\n// Store hash in your password DB\n</code></pre> <pre><code>bcrypt.genSalt(10, (err, salt) =&gt; {\n  bcrypt.hash(\"B4c0/\\/\", salt, function (err, hash) {\n    // Store hash in your password DB\n  });\n});\n</code></pre> <p>To check a password:</p> <pre><code>// Load hash from your password DB\nawait bcrypt.compare(\"B4c0/\\/\", hash); // true\nawait bcrypt.compare(\"not_bacon\", hash); // false\n</code></pre> <pre><code>// Load hash from your password DB\nbcrypt.compare(\"B4c0/\\/\", hash, (err, res) =&gt; {\n  // res === true\n});\nbcrypt.compare(\"not_bacon\", hash, (err, res) =&gt; {\n  // res === false\n});\n</code></pre> <p>Auto-gen a salt and hash:</p> <pre><code>await bcrypt.hash(\"B4c0/\\/\", 10);\n// Store hash in your password DB\n</code></pre> <pre><code>bcrypt.hash(\"B4c0/\\/\", 10, (err, hash) =&gt; {\n  // Store hash in your password DB\n});\n</code></pre> <p>Note: Under the hood, asynchronous APIs split an operation into small chunks. After the completion of a chunk, the execution of the next chunk is placed on the back of the JS event queue, efficiently yielding for other computation to execute.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bcryptjs/#usage-command-line","title":"Usage - Command Line","text":"<pre><code>Usage: bcrypt &lt;input&gt; [rounds|salt]\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/bcryptjs/#api","title":"API","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/bcryptjs/#callback-types","title":"Callback types","text":"<ul> <li> <p>Callback&lt;<code>T</code>&gt;: <code>(err: Error | null, result?: T) =&gt; void</code>   Called with an error on failure or a value of type <code>T</code> upon success.</p> </li> <li> <p>ProgressCallback: <code>(percentage: number) =&gt; void</code>   Called with the percentage of rounds completed (0.0 - 1.0), maximally once per <code>MAX_EXECUTION_TIME = 100</code> ms.</p> </li> <li> <p>RandomFallback: <code>(length: number) =&gt; number[]</code>   Called to obtain random bytes when both Web Crypto API and Node.js   crypto are not available.</p> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/bcryptjs/#functions","title":"Functions","text":"<ul> <li> <p>bcrypt.genSaltSync(rounds?: <code>number</code>): <code>string</code>   Synchronously generates a salt. Number of rounds defaults to 10 when omitted.</p> </li> <li> <p>bcrypt.genSalt(rounds?: <code>number</code>): <code>Promise&lt;string&gt;</code>   Asynchronously generates a salt. Number of rounds defaults to 10 when omitted.</p> </li> <li> <p>bcrypt.genSalt([rounds: <code>number</code>, ]callback: <code>Callback&lt;string&gt;</code>): <code>void</code>   Asynchronously generates a salt. Number of rounds defaults to 10 when omitted.</p> </li> <li> <p>bcrypt.truncates(password: <code>string</code>): <code>boolean</code>   Tests if a password will be truncated when hashed, that is its length is greater than 72 bytes when converted to UTF-8.</p> </li> <li> <p>bcrypt.hashSync(password: <code>string</code>, salt?: <code>number | string</code>): <code>string</code>   Synchronously generates a hash for the given password. Number of rounds defaults to 10 when omitted.</p> </li> <li> <p>bcrypt.hash(password: <code>string</code>, salt: <code>number | string</code>): <code>Promise&lt;string&gt;</code>   Asynchronously generates a hash for the given password.</p> </li> <li> <p>bcrypt.hash(password: <code>string</code>, salt: <code>number | string</code>, callback: <code>Callback&lt;string&gt;</code>, progressCallback?: <code>ProgressCallback</code>): <code>void</code>   Asynchronously generates a hash for the given password.</p> </li> <li> <p>bcrypt.compareSync(password: <code>string</code>, hash: <code>string</code>): <code>boolean</code>   Synchronously tests a password against a hash.</p> </li> <li> <p>bcrypt.compare(password: <code>string</code>, hash: <code>string</code>): <code>Promise&lt;boolean&gt;</code>   Asynchronously compares a password against a hash.</p> </li> <li> <p>bcrypt.compare(password: <code>string</code>, hash: <code>string</code>, callback: <code>Callback&lt;boolean&gt;</code>, progressCallback?: <code>ProgressCallback</code>)   Asynchronously compares a password against a hash.</p> </li> <li> <p>bcrypt.getRounds(hash: <code>string</code>): <code>number</code>   Gets the number of rounds used to encrypt the specified hash.</p> </li> <li> <p>bcrypt.getSalt(hash: <code>string</code>): <code>string</code>   Gets the salt portion from a hash. Does not validate the hash.</p> </li> <li> <p>bcrypt.setRandomFallback(random: <code>RandomFallback</code>): <code>void</code>   Sets the pseudo random number generator to use as a fallback if neither Web Crypto API nor Node.js crypto are available. Please note: It is highly important that the PRNG used is cryptographically secure and that it is seeded properly!</p> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/bcryptjs/#building","title":"Building","text":"<p>Building the UMD fallback:</p> <pre><code>$&gt; npm run build\n</code></pre> <p>Running the tests:</p> <pre><code>$&gt; npm test\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/bcryptjs/#credits","title":"Credits","text":"<p>Based on work started by Shane Girish at bcrypt-nodejs, which is itself based on javascript-bcrypt (New BSD-licensed).</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/binary-extensions/readme/","title":"binary-extensions","text":"<p>List of binary file extensions</p> <p>The list is just a JSON file and can be used anywhere.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/binary-extensions/readme/#install","title":"Install","text":"<pre><code>npm install binary-extensions\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/binary-extensions/readme/#usage","title":"Usage","text":"<pre><code>const binaryExtensions = require('binary-extensions');\n\nconsole.log(binaryExtensions);\n//=&gt; ['3ds', '3g2', \u2026]\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/binary-extensions/readme/#related","title":"Related","text":"<ul> <li>is-binary-path - Check if a filepath is a binary file</li> <li>text-extensions - List of text file extensions</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/","title":"body-parser","text":"<p>Node.js body parsing middleware.</p> <p>Parse incoming request bodies in a middleware before your handlers, available under the <code>req.body</code> property.</p> <p>Note As <code>req.body</code>'s shape is based on user-controlled input, all properties and values in this object are untrusted and should be validated before trusting. For example, <code>req.body.foo.toString()</code> may fail in multiple ways, for example the <code>foo</code> property may not be there or may not be a string, and <code>toString</code> may not be a function and instead a string or other user input.</p> <p>Learn about the anatomy of an HTTP transaction in Node.js.</p> <p>This does not handle multipart bodies, due to their complex and typically large nature. For multipart bodies, you may be interested in the following modules:</p> <ul> <li>busboy and     connect-busboy</li> <li>multiparty and     connect-multiparty</li> <li>formidable</li> <li>multer</li> </ul> <p>This module provides the following parsers:</p> <ul> <li>JSON body parser</li> <li>Raw body parser</li> <li>Text body parser</li> <li>URL-encoded form body parser</li> </ul> <p>Other body parsers you might be interested in:</p> <ul> <li>body</li> <li>co-body</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#installation","title":"Installation","text":"<pre><code>$ npm install body-parser\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#api","title":"API","text":"<pre><code>const bodyParser = require('body-parser')\n</code></pre> <p>The <code>bodyParser</code> object exposes various factories to create middlewares. All middlewares will populate the <code>req.body</code> property with the parsed body when the <code>Content-Type</code> request header matches the <code>type</code> option.</p> <p>The various errors returned by this module are described in the errors section.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#bodyparserjsonoptions","title":"bodyParser.json([options])","text":"<p>Returns middleware that only parses <code>json</code> and only looks at requests where the <code>Content-Type</code> header matches the <code>type</code> option. This parser accepts any Unicode encoding of the body and supports automatic inflation of <code>gzip</code>, <code>br</code> (brotli) and <code>deflate</code> encodings.</p> <p>A new <code>body</code> object containing the parsed data is populated on the <code>request</code> object after the middleware (i.e. <code>req.body</code>).</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#options","title":"Options","text":"<p>The <code>json</code> function takes an optional <code>options</code> object that may contain any of the following keys:</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#inflate","title":"inflate","text":"<p>When set to <code>true</code>, then deflated (compressed) bodies will be inflated; when <code>false</code>, deflated bodies are rejected. Defaults to <code>true</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#limit","title":"limit","text":"<p>Controls the maximum request body size. If this is a number, then the value specifies the number of bytes; if it is a string, the value is passed to the bytes library for parsing. Defaults to <code>'100kb'</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#reviver","title":"reviver","text":"<p>The <code>reviver</code> option is passed directly to <code>JSON.parse</code> as the second argument. You can find more information on this argument in the MDN documentation about JSON.parse.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#strict","title":"strict","text":"<p>When set to <code>true</code>, will only accept arrays and objects; when <code>false</code> will accept anything <code>JSON.parse</code> accepts. Defaults to <code>true</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#type","title":"type","text":"<p>The <code>type</code> option is used to determine what media type the middleware will parse. This option can be a string, array of strings, or a function. If not a function, <code>type</code> option is passed directly to the type-is library and this can be an extension name (like <code>json</code>), a mime type (like <code>application/json</code>), or a mime type with a wildcard (like <code>*/*</code> or <code>*/json</code>). If a function, the <code>type</code> option is called as <code>fn(req)</code> and the request is parsed if it returns a truthy value. Defaults to <code>application/json</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#verify","title":"verify","text":"<p>The <code>verify</code> option, if supplied, is called as <code>verify(req, res, buf, encoding)</code>, where <code>buf</code> is a <code>Buffer</code> of the raw request body and <code>encoding</code> is the encoding of the request. The parsing can be aborted by throwing an error.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#bodyparserrawoptions","title":"bodyParser.raw([options])","text":"<p>Returns middleware that parses all bodies as a <code>Buffer</code> and only looks at requests where the <code>Content-Type</code> header matches the <code>type</code> option. This parser supports automatic inflation of <code>gzip</code>, <code>br</code> (brotli) and <code>deflate</code> encodings.</p> <p>A new <code>body</code> object containing the parsed data is populated on the <code>request</code> object after the middleware (i.e. <code>req.body</code>). This will be a <code>Buffer</code> object of the body.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#options_1","title":"Options","text":"<p>The <code>raw</code> function takes an optional <code>options</code> object that may contain any of the following keys:</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#inflate_1","title":"inflate","text":"<p>When set to <code>true</code>, then deflated (compressed) bodies will be inflated; when <code>false</code>, deflated bodies are rejected. Defaults to <code>true</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#limit_1","title":"limit","text":"<p>Controls the maximum request body size. If this is a number, then the value specifies the number of bytes; if it is a string, the value is passed to the bytes library for parsing. Defaults to <code>'100kb'</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#type_1","title":"type","text":"<p>The <code>type</code> option is used to determine what media type the middleware will parse. This option can be a string, array of strings, or a function. If not a function, <code>type</code> option is passed directly to the type-is library and this can be an extension name (like <code>bin</code>), a mime type (like <code>application/octet-stream</code>), or a mime type with a wildcard (like <code>*/*</code> or <code>application/*</code>). If a function, the <code>type</code> option is called as <code>fn(req)</code> and the request is parsed if it returns a truthy value. Defaults to <code>application/octet-stream</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#verify_1","title":"verify","text":"<p>The <code>verify</code> option, if supplied, is called as <code>verify(req, res, buf, encoding)</code>, where <code>buf</code> is a <code>Buffer</code> of the raw request body and <code>encoding</code> is the encoding of the request. The parsing can be aborted by throwing an error.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#bodyparsertextoptions","title":"bodyParser.text([options])","text":"<p>Returns middleware that parses all bodies as a string and only looks at requests where the <code>Content-Type</code> header matches the <code>type</code> option. This parser supports automatic inflation of <code>gzip</code>, <code>br</code> (brotli) and <code>deflate</code> encodings.</p> <p>A new <code>body</code> string containing the parsed data is populated on the <code>request</code> object after the middleware (i.e. <code>req.body</code>). This will be a string of the body.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#options_2","title":"Options","text":"<p>The <code>text</code> function takes an optional <code>options</code> object that may contain any of the following keys:</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#defaultcharset","title":"defaultCharset","text":"<p>Specify the default character set for the text content if the charset is not specified in the <code>Content-Type</code> header of the request. Defaults to <code>utf-8</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#inflate_2","title":"inflate","text":"<p>When set to <code>true</code>, then deflated (compressed) bodies will be inflated; when <code>false</code>, deflated bodies are rejected. Defaults to <code>true</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#limit_2","title":"limit","text":"<p>Controls the maximum request body size. If this is a number, then the value specifies the number of bytes; if it is a string, the value is passed to the bytes library for parsing. Defaults to <code>'100kb'</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#type_2","title":"type","text":"<p>The <code>type</code> option is used to determine what media type the middleware will parse. This option can be a string, array of strings, or a function. If not a function, <code>type</code> option is passed directly to the type-is library and this can be an extension name (like <code>txt</code>), a mime type (like <code>text/plain</code>), or a mime type with a wildcard (like <code>*/*</code> or <code>text/*</code>). If a function, the <code>type</code> option is called as <code>fn(req)</code> and the request is parsed if it returns a truthy value. Defaults to <code>text/plain</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#verify_2","title":"verify","text":"<p>The <code>verify</code> option, if supplied, is called as <code>verify(req, res, buf, encoding)</code>, where <code>buf</code> is a <code>Buffer</code> of the raw request body and <code>encoding</code> is the encoding of the request. The parsing can be aborted by throwing an error.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#bodyparserurlencodedoptions","title":"bodyParser.urlencoded([options])","text":"<p>Returns middleware that only parses <code>urlencoded</code> bodies and only looks at requests where the <code>Content-Type</code> header matches the <code>type</code> option. This parser accepts only UTF-8 encoding of the body and supports automatic inflation of <code>gzip</code>, <code>br</code> (brotli) and <code>deflate</code> encodings.</p> <p>A new <code>body</code> object containing the parsed data is populated on the <code>request</code> object after the middleware (i.e. <code>req.body</code>). This object will contain key-value pairs, where the value can be a string or array (when <code>extended</code> is <code>false</code>), or any type (when <code>extended</code> is <code>true</code>).</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#options_3","title":"Options","text":"<p>The <code>urlencoded</code> function takes an optional <code>options</code> object that may contain any of the following keys:</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#extended","title":"extended","text":"<p>The \"extended\" syntax allows for rich objects and arrays to be encoded into the URL-encoded format, allowing for a JSON-like experience with URL-encoded. For more information, please see the qs library.</p> <p>Defaults to <code>false</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#inflate_3","title":"inflate","text":"<p>When set to <code>true</code>, then deflated (compressed) bodies will be inflated; when <code>false</code>, deflated bodies are rejected. Defaults to <code>true</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#limit_3","title":"limit","text":"<p>Controls the maximum request body size. If this is a number, then the value specifies the number of bytes; if it is a string, the value is passed to the bytes library for parsing. Defaults to <code>'100kb'</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#parameterlimit","title":"parameterLimit","text":"<p>The <code>parameterLimit</code> option controls the maximum number of parameters that are allowed in the URL-encoded data. If a request contains more parameters than this value, a 413 will be returned to the client. Defaults to <code>1000</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#type_3","title":"type","text":"<p>The <code>type</code> option is used to determine what media type the middleware will parse. This option can be a string, array of strings, or a function. If not a function, <code>type</code> option is passed directly to the type-is library and this can be an extension name (like <code>urlencoded</code>), a mime type (like <code>application/x-www-form-urlencoded</code>), or a mime type with a wildcard (like <code>*/x-www-form-urlencoded</code>). If a function, the <code>type</code> option is called as <code>fn(req)</code> and the request is parsed if it returns a truthy value. Defaults to <code>application/x-www-form-urlencoded</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#verify_3","title":"verify","text":"<p>The <code>verify</code> option, if supplied, is called as <code>verify(req, res, buf, encoding)</code>, where <code>buf</code> is a <code>Buffer</code> of the raw request body and <code>encoding</code> is the encoding of the request. The parsing can be aborted by throwing an error.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#defaultcharset_1","title":"defaultCharset","text":"<p>The default charset to parse as, if not specified in content-type. Must be either <code>utf-8</code> or <code>iso-8859-1</code>. Defaults to <code>utf-8</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#charsetsentinel","title":"charsetSentinel","text":"<p>Whether to let the value of the <code>utf8</code> parameter take precedence as the charset selector. It requires the form to contain a parameter named <code>utf8</code> with a value of <code>\u2713</code>. Defaults to <code>false</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#interpretnumericentities","title":"interpretNumericEntities","text":"<p>Whether to decode numeric entities such as <code>&amp;#9786;</code> when parsing an iso-8859-1 form. Defaults to <code>false</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#depth","title":"depth","text":"<p>The <code>depth</code> option is used to configure the maximum depth of the <code>qs</code> library when <code>extended</code> is <code>true</code>. This allows you to limit the amount of keys that are parsed and can be useful to prevent certain types of abuse. Defaults to <code>32</code>. It is recommended to keep this value as low as possible.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#errors","title":"Errors","text":"<p>The middlewares provided by this module create errors using the <code>http-errors</code> module. The errors will typically have a <code>status</code>/<code>statusCode</code> property that contains the suggested HTTP response code, an <code>expose</code> property to determine if the <code>message</code> property should be displayed to the client, a <code>type</code> property to determine the type of error without matching against the <code>message</code>, and a <code>body</code> property containing the read body, if available.</p> <p>The following are the common errors created, though any error can come through for various reasons.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#content-encoding-unsupported","title":"content encoding unsupported","text":"<p>This error will occur when the request had a <code>Content-Encoding</code> header that contained an encoding but the \"inflation\" option was set to <code>false</code>. The <code>status</code> property is set to <code>415</code>, the <code>type</code> property is set to <code>'encoding.unsupported'</code>, and the <code>charset</code> property will be set to the encoding that is unsupported.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#entity-parse-failed","title":"entity parse failed","text":"<p>This error will occur when the request contained an entity that could not be parsed by the middleware. The <code>status</code> property is set to <code>400</code>, the <code>type</code> property is set to <code>'entity.parse.failed'</code>, and the <code>body</code> property is set to the entity value that failed parsing.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#entity-verify-failed","title":"entity verify failed","text":"<p>This error will occur when the request contained an entity that could not be failed verification by the defined <code>verify</code> option. The <code>status</code> property is set to <code>403</code>, the <code>type</code> property is set to <code>'entity.verify.failed'</code>, and the <code>body</code> property is set to the entity value that failed verification.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#request-aborted","title":"request aborted","text":"<p>This error will occur when the request is aborted by the client before reading the body has finished. The <code>received</code> property will be set to the number of bytes received before the request was aborted and the <code>expected</code> property is set to the number of expected bytes. The <code>status</code> property is set to <code>400</code> and <code>type</code> property is set to <code>'request.aborted'</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#request-entity-too-large","title":"request entity too large","text":"<p>This error will occur when the request body's size is larger than the \"limit\" option. The <code>limit</code> property will be set to the byte limit and the <code>length</code> property will be set to the request body's length. The <code>status</code> property is set to <code>413</code> and the <code>type</code> property is set to <code>'entity.too.large'</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#request-size-did-not-match-content-length","title":"request size did not match content length","text":"<p>This error will occur when the request's length did not match the length from the <code>Content-Length</code> header. This typically occurs when the request is malformed, typically when the <code>Content-Length</code> header was calculated based on characters instead of bytes. The <code>status</code> property is set to <code>400</code> and the <code>type</code> property is set to <code>'request.size.invalid'</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#stream-encoding-should-not-be-set","title":"stream encoding should not be set","text":"<p>This error will occur when something called the <code>req.setEncoding</code> method prior to this middleware. This module operates directly on bytes only and you cannot call <code>req.setEncoding</code> when using this module. The <code>status</code> property is set to <code>500</code> and the <code>type</code> property is set to <code>'stream.encoding.set'</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#stream-is-not-readable","title":"stream is not readable","text":"<p>This error will occur when the request is no longer readable when this middleware attempts to read it. This typically means something other than a middleware from this module read the request body already and the middleware was also configured to read the same request. The <code>status</code> property is set to <code>500</code> and the <code>type</code> property is set to <code>'stream.not.readable'</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#too-many-parameters","title":"too many parameters","text":"<p>This error will occur when the content of the request exceeds the configured <code>parameterLimit</code> for the <code>urlencoded</code> parser. The <code>status</code> property is set to <code>413</code> and the <code>type</code> property is set to <code>'parameters.too.many'</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#unsupported-charset-bogus","title":"unsupported charset \"BOGUS\"","text":"<p>This error will occur when the request had a charset parameter in the <code>Content-Type</code> header, but the <code>iconv-lite</code> module does not support it OR the parser does not support it. The charset is contained in the message as well as in the <code>charset</code> property. The <code>status</code> property is set to <code>415</code>, the <code>type</code> property is set to <code>'charset.unsupported'</code>, and the <code>charset</code> property is set to the charset that is unsupported.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#unsupported-content-encoding-bogus","title":"unsupported content encoding \"bogus\"","text":"<p>This error will occur when the request had a <code>Content-Encoding</code> header that contained an unsupported encoding. The encoding is contained in the message as well as in the <code>encoding</code> property. The <code>status</code> property is set to <code>415</code>, the <code>type</code> property is set to <code>'encoding.unsupported'</code>, and the <code>encoding</code> property is set to the encoding that is unsupported.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#the-input-exceeded-the-depth","title":"The input exceeded the depth","text":"<p>This error occurs when using <code>bodyParser.urlencoded</code> with the <code>extended</code> property set to <code>true</code> and the input exceeds the configured <code>depth</code> option. The <code>status</code> property is set to <code>400</code>. It is recommended to review the <code>depth</code> option and evaluate if it requires a higher value. When the <code>depth</code> option is set to <code>32</code> (default value), the error will not be thrown.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#examples","title":"Examples","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#expressconnect-top-level-generic","title":"Express/Connect top-level generic","text":"<p>This example demonstrates adding a generic JSON and URL-encoded parser as a top-level middleware, which will parse the bodies of all incoming requests. This is the simplest setup.</p> <pre><code>const express = require('express')\nconst bodyParser = require('body-parser')\n\nconst app = express()\n\n// parse application/x-www-form-urlencoded\napp.use(bodyParser.urlencoded())\n\n// parse application/json\napp.use(bodyParser.json())\n\napp.use(function (req, res) {\n  res.setHeader('Content-Type', 'text/plain')\n  res.write('you posted:\\n')\n  res.end(String(JSON.stringify(req.body, null, 2)))\n})\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#express-route-specific","title":"Express route-specific","text":"<p>This example demonstrates adding body parsers specifically to the routes that need them. In general, this is the most recommended way to use body-parser with Express.</p> <pre><code>const express = require('express')\nconst bodyParser = require('body-parser')\n\nconst app = express()\n\n// create application/json parser\nconst jsonParser = bodyParser.json()\n\n// create application/x-www-form-urlencoded parser\nconst urlencodedParser = bodyParser.urlencoded()\n\n// POST /login gets urlencoded bodies\napp.post('/login', urlencodedParser, function (req, res) {\n  if (!req.body || !req.body.username) res.sendStatus(400)\n  res.send('welcome, ' + req.body.username)\n})\n\n// POST /api/users gets JSON bodies\napp.post('/api/users', jsonParser, function (req, res) {\n  if (!req.body) res.sendStatus(400)\n  // create user in req.body\n})\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#change-accepted-type-for-parsers","title":"Change accepted type for parsers","text":"<p>All the parsers accept a <code>type</code> option which allows you to change the <code>Content-Type</code> that the middleware will parse.</p> <pre><code>const express = require('express')\nconst bodyParser = require('body-parser')\n\nconst app = express()\n\n// parse various different custom JSON types as JSON\napp.use(bodyParser.json({ type: 'application/*+json' }))\n\n// parse some custom thing into a Buffer\napp.use(bodyParser.raw({ type: 'application/vnd.custom-type' }))\n\n// parse an HTML body into a string\napp.use(bodyParser.text({ type: 'text/html' }))\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/","title":"2.2.0 / 2025-03-27","text":"<ul> <li>refactor: normalize common options for all parsers</li> <li>deps:</li> <li>iconv-lite@^0.6.3</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#210-2025-02-10","title":"2.1.0 / 2025-02-10","text":"<ul> <li>deps:</li> <li>type-is@^2.0.0</li> <li>debug@^4.4.0</li> <li>Removed destroy</li> <li>refactor: prefix built-in node module imports</li> <li>use the node require cache instead of custom caching</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#202-2024-10-31","title":"2.0.2 / 2024-10-31","text":"<ul> <li>remove <code>unpipe</code> package and use native <code>unpipe()</code> method</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#201-2024-09-10","title":"2.0.1 / 2024-09-10","text":"<ul> <li>Restore expected behavior <code>extended</code> to <code>false</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#200-2024-09-10","title":"2.0.0 / 2024-09-10","text":"<ul> <li>Propagate changes from 1.20.3 </li> <li>add brotli support #406</li> <li>Breaking Change: Node.js 18 is the minimum supported version</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#200-beta2-2023-02-23","title":"2.0.0-beta.2 / 2023-02-23","text":"<p>This incorporates all changes after 1.19.1 up to 1.20.2.</p> <ul> <li>Remove deprecated <code>bodyParser()</code> combination middleware</li> <li>deps: debug@3.1.0<ul> <li>Add <code>DEBUG_HIDE_DATE</code> environment variable</li> <li>Change timer to per-namespace instead of global</li> <li>Change non-TTY date format</li> <li>Remove <code>DEBUG_FD</code> environment variable support</li> <li>Support 256 namespace colors</li> </ul> </li> <li>deps: iconv-lite@0.5.2<ul> <li>Add encoding cp720</li> <li>Add encoding UTF-32</li> </ul> </li> <li>deps: raw-body@3.0.0-beta.1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#200-beta1-2021-12-17","title":"2.0.0-beta.1 / 2021-12-17","text":"<ul> <li>Drop support for Node.js 0.8</li> <li><code>req.body</code> is no longer always initialized to <code>{}</code><ul> <li>it is left <code>undefined</code> unless a body is parsed</li> </ul> </li> <li><code>urlencoded</code> parser now defaults <code>extended</code> to <code>false</code></li> <li>Use <code>on-finished</code> to determine when body read</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1203-2024-09-10","title":"1.20.3 / 2024-09-10","text":"<ul> <li>deps: qs@6.13.0</li> <li>add <code>depth</code> option to customize the depth level in the parser</li> <li>IMPORTANT: The default <code>depth</code> level for parsing URL-encoded data is now <code>32</code> (previously was <code>Infinity</code>)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1202-2023-02-21","title":"1.20.2 / 2023-02-21","text":"<ul> <li>Fix strict json error message on Node.js 19+</li> <li>deps: content-type@~1.0.5<ul> <li>perf: skip value escaping when unnecessary</li> </ul> </li> <li>deps: raw-body@2.5.2</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1201-2022-10-06","title":"1.20.1 / 2022-10-06","text":"<ul> <li>deps: qs@6.11.0</li> <li>perf: remove unnecessary object clone</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1200-2022-04-02","title":"1.20.0 / 2022-04-02","text":"<ul> <li>Fix error message for json parse whitespace in <code>strict</code></li> <li>Fix internal error when inflated body exceeds limit</li> <li>Prevent loss of async hooks context</li> <li>Prevent hanging when request already read</li> <li>deps: depd@2.0.0<ul> <li>Replace internal <code>eval</code> usage with <code>Function</code> constructor</li> <li>Use instance methods on <code>process</code> to check for listeners</li> </ul> </li> <li>deps: http-errors@2.0.0<ul> <li>deps: depd@2.0.0</li> <li>deps: statuses@2.0.1</li> </ul> </li> <li>deps: on-finished@2.4.1</li> <li>deps: qs@6.10.3</li> <li>deps: raw-body@2.5.1<ul> <li>deps: http-errors@2.0.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1192-2022-02-15","title":"1.19.2 / 2022-02-15","text":"<ul> <li>deps: bytes@3.1.2</li> <li>deps: qs@6.9.7<ul> <li>Fix handling of <code>__proto__</code> keys</li> </ul> </li> <li>deps: raw-body@2.4.3<ul> <li>deps: bytes@3.1.2</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1191-2021-12-10","title":"1.19.1 / 2021-12-10","text":"<ul> <li>deps: bytes@3.1.1</li> <li>deps: http-errors@1.8.1<ul> <li>deps: inherits@2.0.4</li> <li>deps: toidentifier@1.0.1</li> <li>deps: setprototypeof@1.2.0</li> </ul> </li> <li>deps: qs@6.9.6</li> <li>deps: raw-body@2.4.2<ul> <li>deps: bytes@3.1.1</li> <li>deps: http-errors@1.8.1</li> </ul> </li> <li>deps: safe-buffer@5.2.1</li> <li>deps: type-is@~1.6.18</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1190-2019-04-25","title":"1.19.0 / 2019-04-25","text":"<ul> <li>deps: bytes@3.1.0<ul> <li>Add petabyte (<code>pb</code>) support</li> </ul> </li> <li>deps: http-errors@1.7.2<ul> <li>Set constructor name when possible</li> <li>deps: setprototypeof@1.1.1</li> <li>deps: statuses@'&gt;= 1.5.0 &lt; 2'</li> </ul> </li> <li>deps: iconv-lite@0.4.24<ul> <li>Added encoding MIK</li> </ul> </li> <li>deps: qs@6.7.0<ul> <li>Fix parsing array brackets after index</li> </ul> </li> <li>deps: raw-body@2.4.0<ul> <li>deps: bytes@3.1.0</li> <li>deps: http-errors@1.7.2</li> <li>deps: iconv-lite@0.4.24</li> </ul> </li> <li>deps: type-is@~1.6.17<ul> <li>deps: mime-types@~2.1.24</li> <li>perf: prevent internal <code>throw</code> on invalid type</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1183-2018-05-14","title":"1.18.3 / 2018-05-14","text":"<ul> <li>Fix stack trace for strict json parse error</li> <li>deps: depd@~1.1.2<ul> <li>perf: remove argument reassignment</li> </ul> </li> <li>deps: http-errors@~1.6.3<ul> <li>deps: depd@~1.1.2</li> <li>deps: setprototypeof@1.1.0</li> <li>deps: statuses@'&gt;= 1.3.1 &lt; 2'</li> </ul> </li> <li>deps: iconv-lite@0.4.23<ul> <li>Fix loading encoding with year appended</li> <li>Fix deprecation warnings on Node.js 10+</li> </ul> </li> <li>deps: qs@6.5.2</li> <li>deps: raw-body@2.3.3<ul> <li>deps: http-errors@1.6.3</li> <li>deps: iconv-lite@0.4.23</li> </ul> </li> <li>deps: type-is@~1.6.16<ul> <li>deps: mime-types@~2.1.18</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1182-2017-09-22","title":"1.18.2 / 2017-09-22","text":"<ul> <li>deps: debug@2.6.9</li> <li>perf: remove argument reassignment</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1181-2017-09-12","title":"1.18.1 / 2017-09-12","text":"<ul> <li>deps: content-type@~1.0.4<ul> <li>perf: remove argument reassignment</li> <li>perf: skip parameter parsing when no parameters</li> </ul> </li> <li>deps: iconv-lite@0.4.19<ul> <li>Fix ISO-8859-1 regression</li> <li>Update Windows-1255</li> </ul> </li> <li>deps: qs@6.5.1<ul> <li>Fix parsing &amp; compacting very deep objects</li> </ul> </li> <li>deps: raw-body@2.3.2<ul> <li>deps: iconv-lite@0.4.19</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1180-2017-09-08","title":"1.18.0 / 2017-09-08","text":"<ul> <li>Fix JSON strict violation error to match native parse error</li> <li>Include the <code>body</code> property on verify errors</li> <li>Include the <code>type</code> property on all generated errors</li> <li>Use <code>http-errors</code> to set status code on errors</li> <li>deps: bytes@3.0.0</li> <li>deps: debug@2.6.8</li> <li>deps: depd@~1.1.1<ul> <li>Remove unnecessary <code>Buffer</code> loading</li> </ul> </li> <li>deps: http-errors@~1.6.2<ul> <li>deps: depd@1.1.1</li> </ul> </li> <li>deps: iconv-lite@0.4.18<ul> <li>Add support for React Native</li> <li>Add a warning if not loaded as utf-8</li> <li>Fix CESU-8 decoding in Node.js 8</li> <li>Improve speed of ISO-8859-1 encoding</li> </ul> </li> <li>deps: qs@6.5.0</li> <li>deps: raw-body@2.3.1<ul> <li>Use <code>http-errors</code> for standard emitted errors</li> <li>deps: bytes@3.0.0</li> <li>deps: iconv-lite@0.4.18</li> <li>perf: skip buffer decoding on overage chunk</li> </ul> </li> <li>perf: prevent internal <code>throw</code> when missing charset</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1172-2017-05-17","title":"1.17.2 / 2017-05-17","text":"<ul> <li>deps: debug@2.6.7<ul> <li>Fix <code>DEBUG_MAX_ARRAY_LENGTH</code></li> <li>deps: ms@2.0.0</li> </ul> </li> <li>deps: type-is@~1.6.15<ul> <li>deps: mime-types@~2.1.15</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1171-2017-03-06","title":"1.17.1 / 2017-03-06","text":"<ul> <li>deps: qs@6.4.0<ul> <li>Fix regression parsing keys starting with <code>[</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1170-2017-03-01","title":"1.17.0 / 2017-03-01","text":"<ul> <li>deps: http-errors@~1.6.1<ul> <li>Make <code>message</code> property enumerable for <code>HttpError</code>s</li> <li>deps: setprototypeof@1.0.3</li> </ul> </li> <li>deps: qs@6.3.1<ul> <li>Fix compacting nested arrays</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1161-2017-02-10","title":"1.16.1 / 2017-02-10","text":"<ul> <li>deps: debug@2.6.1<ul> <li>Fix deprecation messages in WebStorm and other editors</li> <li>Undeprecate <code>DEBUG_FD</code> set to <code>1</code> or <code>2</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1160-2017-01-17","title":"1.16.0 / 2017-01-17","text":"<ul> <li>deps: debug@2.6.0<ul> <li>Allow colors in workers</li> <li>Deprecated <code>DEBUG_FD</code> environment variable</li> <li>Fix error when running under React Native</li> <li>Use same color for same namespace</li> <li>deps: ms@0.7.2</li> </ul> </li> <li>deps: http-errors@~1.5.1<ul> <li>deps: inherits@2.0.3</li> <li>deps: setprototypeof@1.0.2</li> <li>deps: statuses@'&gt;= 1.3.1 &lt; 2'</li> </ul> </li> <li>deps: iconv-lite@0.4.15<ul> <li>Added encoding MS-31J</li> <li>Added encoding MS-932</li> <li>Added encoding MS-936</li> <li>Added encoding MS-949</li> <li>Added encoding MS-950</li> <li>Fix GBK/GB18030 handling of Euro character</li> </ul> </li> <li>deps: qs@6.2.1<ul> <li>Fix array parsing from skipping empty values</li> </ul> </li> <li>deps: raw-body@~2.2.0<ul> <li>deps: iconv-lite@0.4.15</li> </ul> </li> <li>deps: type-is@~1.6.14<ul> <li>deps: mime-types@~2.1.13</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1152-2016-06-19","title":"1.15.2 / 2016-06-19","text":"<ul> <li>deps: bytes@2.4.0</li> <li>deps: content-type@~1.0.2<ul> <li>perf: enable strict mode</li> </ul> </li> <li>deps: http-errors@~1.5.0<ul> <li>Use <code>setprototypeof</code> module to replace <code>__proto__</code> setting</li> <li>deps: statuses@'&gt;= 1.3.0 &lt; 2'</li> <li>perf: enable strict mode</li> </ul> </li> <li>deps: qs@6.2.0</li> <li>deps: raw-body@~2.1.7<ul> <li>deps: bytes@2.4.0</li> <li>perf: remove double-cleanup on happy path</li> </ul> </li> <li>deps: type-is@~1.6.13<ul> <li>deps: mime-types@~2.1.11</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1151-2016-05-05","title":"1.15.1 / 2016-05-05","text":"<ul> <li>deps: bytes@2.3.0<ul> <li>Drop partial bytes on all parsed units</li> <li>Fix parsing byte string that looks like hex</li> </ul> </li> <li>deps: raw-body@~2.1.6<ul> <li>deps: bytes@2.3.0</li> </ul> </li> <li>deps: type-is@~1.6.12<ul> <li>deps: mime-types@~2.1.10</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1150-2016-02-10","title":"1.15.0 / 2016-02-10","text":"<ul> <li>deps: http-errors@~1.4.0<ul> <li>Add <code>HttpError</code> export, for <code>err instanceof createError.HttpError</code></li> <li>deps: inherits@2.0.1</li> <li>deps: statuses@'&gt;= 1.2.1 &lt; 2'</li> </ul> </li> <li>deps: qs@6.1.0</li> <li>deps: type-is@~1.6.11<ul> <li>deps: mime-types@~2.1.9</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1142-2015-12-16","title":"1.14.2 / 2015-12-16","text":"<ul> <li>deps: bytes@2.2.0</li> <li>deps: iconv-lite@0.4.13</li> <li>deps: qs@5.2.0</li> <li>deps: raw-body@~2.1.5<ul> <li>deps: bytes@2.2.0</li> <li>deps: iconv-lite@0.4.13</li> </ul> </li> <li>deps: type-is@~1.6.10<ul> <li>deps: mime-types@~2.1.8</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1141-2015-09-27","title":"1.14.1 / 2015-09-27","text":"<ul> <li>Fix issue where invalid charset results in 400 when <code>verify</code> used</li> <li>deps: iconv-lite@0.4.12<ul> <li>Fix CESU-8 decoding in Node.js 4.x</li> </ul> </li> <li>deps: raw-body@~2.1.4<ul> <li>Fix masking critical errors from <code>iconv-lite</code></li> <li>deps: iconv-lite@0.4.12</li> </ul> </li> <li>deps: type-is@~1.6.9<ul> <li>deps: mime-types@~2.1.7</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1140-2015-09-16","title":"1.14.0 / 2015-09-16","text":"<ul> <li>Fix JSON strict parse error to match syntax errors</li> <li>Provide static <code>require</code> analysis in <code>urlencoded</code> parser</li> <li>deps: depd@~1.1.0<ul> <li>Support web browser loading</li> </ul> </li> <li>deps: qs@5.1.0</li> <li>deps: raw-body@~2.1.3<ul> <li>Fix sync callback when attaching data listener causes sync read</li> </ul> </li> <li>deps: type-is@~1.6.8<ul> <li>Fix type error when given invalid type to match against</li> <li>deps: mime-types@~2.1.6</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1133-2015-07-31","title":"1.13.3 / 2015-07-31","text":"<ul> <li>deps: type-is@~1.6.6<ul> <li>deps: mime-types@~2.1.4</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1132-2015-07-05","title":"1.13.2 / 2015-07-05","text":"<ul> <li>deps: iconv-lite@0.4.11</li> <li>deps: qs@4.0.0<ul> <li>Fix dropping parameters like <code>hasOwnProperty</code></li> <li>Fix user-visible incompatibilities from 3.1.0</li> <li>Fix various parsing edge cases</li> </ul> </li> <li>deps: raw-body@~2.1.2<ul> <li>Fix error stack traces to skip <code>makeError</code></li> <li>deps: iconv-lite@0.4.11</li> </ul> </li> <li>deps: type-is@~1.6.4<ul> <li>deps: mime-types@~2.1.2</li> <li>perf: enable strict mode</li> <li>perf: remove argument reassignment</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1131-2015-06-16","title":"1.13.1 / 2015-06-16","text":"<ul> <li>deps: qs@2.4.2<ul> <li>Downgraded from 3.1.0 because of user-visible incompatibilities</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1130-2015-06-14","title":"1.13.0 / 2015-06-14","text":"<ul> <li>Add <code>statusCode</code> property on <code>Error</code>s, in addition to <code>status</code></li> <li>Change <code>type</code> default to <code>application/json</code> for JSON parser</li> <li>Change <code>type</code> default to <code>application/x-www-form-urlencoded</code> for urlencoded parser</li> <li>Provide static <code>require</code> analysis</li> <li>Use the <code>http-errors</code> module to generate errors</li> <li>deps: bytes@2.1.0<ul> <li>Slight optimizations</li> </ul> </li> <li>deps: iconv-lite@0.4.10<ul> <li>The encoding UTF-16 without BOM now defaults to UTF-16LE when detection fails</li> <li>Leading BOM is now removed when decoding</li> </ul> </li> <li>deps: on-finished@~2.3.0<ul> <li>Add defined behavior for HTTP <code>CONNECT</code> requests</li> <li>Add defined behavior for HTTP <code>Upgrade</code> requests</li> <li>deps: ee-first@1.1.1</li> </ul> </li> <li>deps: qs@3.1.0<ul> <li>Fix dropping parameters like <code>hasOwnProperty</code></li> <li>Fix various parsing edge cases</li> <li>Parsed object now has <code>null</code> prototype</li> </ul> </li> <li>deps: raw-body@~2.1.1<ul> <li>Use <code>unpipe</code> module for unpiping requests</li> <li>deps: iconv-lite@0.4.10</li> </ul> </li> <li>deps: type-is@~1.6.3<ul> <li>deps: mime-types@~2.1.1</li> <li>perf: reduce try block size</li> <li>perf: remove bitwise operations</li> </ul> </li> <li>perf: enable strict mode</li> <li>perf: remove argument reassignment</li> <li>perf: remove delete call</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1124-2015-05-10","title":"1.12.4 / 2015-05-10","text":"<ul> <li>deps: debug@~2.2.0</li> <li>deps: qs@2.4.2<ul> <li>Fix allowing parameters like <code>constructor</code></li> </ul> </li> <li>deps: on-finished@~2.2.1</li> <li>deps: raw-body@~2.0.1<ul> <li>Fix a false-positive when unpiping in Node.js 0.8</li> <li>deps: bytes@2.0.1</li> </ul> </li> <li>deps: type-is@~1.6.2<ul> <li>deps: mime-types@~2.0.11</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1123-2015-04-15","title":"1.12.3 / 2015-04-15","text":"<ul> <li>Slight efficiency improvement when not debugging</li> <li>deps: depd@~1.0.1</li> <li>deps: iconv-lite@0.4.8<ul> <li>Add encoding alias UNICODE-1-1-UTF-7</li> </ul> </li> <li>deps: raw-body@1.3.4<ul> <li>Fix hanging callback if request aborts during read</li> <li>deps: iconv-lite@0.4.8</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1122-2015-03-16","title":"1.12.2 / 2015-03-16","text":"<ul> <li>deps: qs@2.4.1<ul> <li>Fix error when parameter <code>hasOwnProperty</code> is present</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1121-2015-03-15","title":"1.12.1 / 2015-03-15","text":"<ul> <li>deps: debug@~2.1.3<ul> <li>Fix high intensity foreground color for bold</li> <li>deps: ms@0.7.0</li> </ul> </li> <li>deps: type-is@~1.6.1<ul> <li>deps: mime-types@~2.0.10</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1120-2015-02-13","title":"1.12.0 / 2015-02-13","text":"<ul> <li>add <code>debug</code> messages</li> <li>accept a function for the <code>type</code> option</li> <li>use <code>content-type</code> to parse <code>Content-Type</code> headers</li> <li>deps: iconv-lite@0.4.7<ul> <li>Gracefully support enumerables on <code>Object.prototype</code></li> </ul> </li> <li>deps: raw-body@1.3.3<ul> <li>deps: iconv-lite@0.4.7</li> </ul> </li> <li>deps: type-is@~1.6.0<ul> <li>fix argument reassignment</li> <li>fix false-positives in <code>hasBody</code> <code>Transfer-Encoding</code> check</li> <li>support wildcard for both type and subtype (<code>*/*</code>)</li> <li>deps: mime-types@~2.0.9</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1110-2015-01-30","title":"1.11.0 / 2015-01-30","text":"<ul> <li>make internal <code>extended: true</code> depth limit infinity</li> <li>deps: type-is@~1.5.6<ul> <li>deps: mime-types@~2.0.8</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1102-2015-01-20","title":"1.10.2 / 2015-01-20","text":"<ul> <li>deps: iconv-lite@0.4.6<ul> <li>Fix rare aliases of single-byte encodings</li> </ul> </li> <li>deps: raw-body@1.3.2<ul> <li>deps: iconv-lite@0.4.6</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1101-2015-01-01","title":"1.10.1 / 2015-01-01","text":"<ul> <li>deps: on-finished@~2.2.0</li> <li>deps: type-is@~1.5.5<ul> <li>deps: mime-types@~2.0.7</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#1100-2014-12-02","title":"1.10.0 / 2014-12-02","text":"<ul> <li>make internal <code>extended: true</code> array limit dynamic</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#193-2014-11-21","title":"1.9.3 / 2014-11-21","text":"<ul> <li>deps: iconv-lite@0.4.5<ul> <li>Fix Windows-31J and X-SJIS encoding support</li> </ul> </li> <li>deps: qs@2.3.3<ul> <li>Fix <code>arrayLimit</code> behavior</li> </ul> </li> <li>deps: raw-body@1.3.1<ul> <li>deps: iconv-lite@0.4.5</li> </ul> </li> <li>deps: type-is@~1.5.3<ul> <li>deps: mime-types@~2.0.3</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#192-2014-10-27","title":"1.9.2 / 2014-10-27","text":"<ul> <li>deps: qs@2.3.2<ul> <li>Fix parsing of mixed objects and values</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#191-2014-10-22","title":"1.9.1 / 2014-10-22","text":"<ul> <li>deps: on-finished@~2.1.1<ul> <li>Fix handling of pipelined requests</li> </ul> </li> <li>deps: qs@2.3.0<ul> <li>Fix parsing of mixed implicit and explicit arrays</li> </ul> </li> <li>deps: type-is@~1.5.2<ul> <li>deps: mime-types@~2.0.2</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#190-2014-09-24","title":"1.9.0 / 2014-09-24","text":"<ul> <li>include the charset in \"unsupported charset\" error message</li> <li>include the encoding in \"unsupported content encoding\" error message</li> <li>deps: depd@~1.0.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#184-2014-09-23","title":"1.8.4 / 2014-09-23","text":"<ul> <li>fix content encoding to be case-insensitive</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#183-2014-09-19","title":"1.8.3 / 2014-09-19","text":"<ul> <li>deps: qs@2.2.4<ul> <li>Fix issue with object keys starting with numbers truncated</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#182-2014-09-15","title":"1.8.2 / 2014-09-15","text":"<ul> <li>deps: depd@0.4.5</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#181-2014-09-07","title":"1.8.1 / 2014-09-07","text":"<ul> <li>deps: media-typer@0.3.0</li> <li>deps: type-is@~1.5.1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#180-2014-09-05","title":"1.8.0 / 2014-09-05","text":"<ul> <li>make empty-body-handling consistent between chunked requests<ul> <li>empty <code>json</code> produces <code>{}</code></li> <li>empty <code>raw</code> produces <code>new Buffer(0)</code></li> <li>empty <code>text</code> produces <code>''</code></li> <li>empty <code>urlencoded</code> produces <code>{}</code></li> </ul> </li> <li>deps: qs@2.2.3<ul> <li>Fix issue where first empty value in array is discarded</li> </ul> </li> <li>deps: type-is@~1.5.0<ul> <li>fix <code>hasbody</code> to be true for <code>content-length: 0</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#170-2014-09-01","title":"1.7.0 / 2014-09-01","text":"<ul> <li>add <code>parameterLimit</code> option to <code>urlencoded</code> parser</li> <li>change <code>urlencoded</code> extended array limit to 100</li> <li>respond with 413 when over <code>parameterLimit</code> in <code>urlencoded</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#167-2014-08-29","title":"1.6.7 / 2014-08-29","text":"<ul> <li>deps: qs@2.2.2<ul> <li>Remove unnecessary cloning</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#166-2014-08-27","title":"1.6.6 / 2014-08-27","text":"<ul> <li>deps: qs@2.2.0<ul> <li>Array parsing fix</li> <li>Performance improvements</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#165-2014-08-16","title":"1.6.5 / 2014-08-16","text":"<ul> <li>deps: on-finished@2.1.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#164-2014-08-14","title":"1.6.4 / 2014-08-14","text":"<ul> <li>deps: qs@1.2.2</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#163-2014-08-10","title":"1.6.3 / 2014-08-10","text":"<ul> <li>deps: qs@1.2.1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#162-2014-08-07","title":"1.6.2 / 2014-08-07","text":"<ul> <li>deps: qs@1.2.0<ul> <li>Fix parsing array of objects</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#161-2014-08-06","title":"1.6.1 / 2014-08-06","text":"<ul> <li>deps: qs@1.1.0<ul> <li>Accept urlencoded square brackets</li> <li>Accept empty values in implicit array notation</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#160-2014-08-05","title":"1.6.0 / 2014-08-05","text":"<ul> <li>deps: qs@1.0.2<ul> <li>Complete rewrite</li> <li>Limits array length to 20</li> <li>Limits object depth to 5</li> <li>Limits parameters to 1,000</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#152-2014-07-27","title":"1.5.2 / 2014-07-27","text":"<ul> <li>deps: depd@0.4.4<ul> <li>Work-around v8 generating empty stack traces</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#151-2014-07-26","title":"1.5.1 / 2014-07-26","text":"<ul> <li>deps: depd@0.4.3<ul> <li>Fix exception when global <code>Error.stackTraceLimit</code> is too low</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#150-2014-07-20","title":"1.5.0 / 2014-07-20","text":"<ul> <li>deps: depd@0.4.2<ul> <li>Add <code>TRACE_DEPRECATION</code> environment variable</li> <li>Remove non-standard grey color from color output</li> <li>Support <code>--no-deprecation</code> argument</li> <li>Support <code>--trace-deprecation</code> argument</li> </ul> </li> <li>deps: iconv-lite@0.4.4<ul> <li>Added encoding UTF-7</li> </ul> </li> <li>deps: raw-body@1.3.0<ul> <li>deps: iconv-lite@0.4.4</li> <li>Added encoding UTF-7</li> <li>Fix <code>Cannot switch to old mode now</code> error on Node.js 0.10+</li> </ul> </li> <li>deps: type-is@~1.3.2</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#143-2014-06-19","title":"1.4.3 / 2014-06-19","text":"<ul> <li>deps: type-is@1.3.1<ul> <li>fix global variable leak</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#142-2014-06-19","title":"1.4.2 / 2014-06-19","text":"<ul> <li>deps: type-is@1.3.0<ul> <li>improve type parsing</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#141-2014-06-19","title":"1.4.1 / 2014-06-19","text":"<ul> <li>fix urlencoded extended deprecation message</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#140-2014-06-19","title":"1.4.0 / 2014-06-19","text":"<ul> <li>add <code>text</code> parser</li> <li>add <code>raw</code> parser</li> <li>check accepted charset in content-type (accepts utf-8)</li> <li>check accepted encoding in content-encoding (accepts identity)</li> <li>deprecate <code>bodyParser()</code> middleware; use <code>.json()</code> and <code>.urlencoded()</code> as needed</li> <li>deprecate <code>urlencoded()</code> without provided <code>extended</code> option</li> <li>lazy-load urlencoded parsers</li> <li>parsers split into files for reduced mem usage</li> <li>support gzip and deflate bodies<ul> <li>set <code>inflate: false</code> to turn off</li> </ul> </li> <li>deps: raw-body@1.2.2<ul> <li>Support all encodings from <code>iconv-lite</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#131-2014-06-11","title":"1.3.1 / 2014-06-11","text":"<ul> <li>deps: type-is@1.2.1<ul> <li>Switch dependency from mime to mime-types@1.0.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#130-2014-05-31","title":"1.3.0 / 2014-05-31","text":"<ul> <li>add <code>extended</code> option to urlencoded parser</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#122-2014-05-27","title":"1.2.2 / 2014-05-27","text":"<ul> <li>deps: raw-body@1.1.6<ul> <li>assert stream encoding on node.js 0.8</li> <li>assert stream encoding on node.js &lt; 0.10.6</li> <li>deps: bytes@1</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#121-2014-05-26","title":"1.2.1 / 2014-05-26","text":"<ul> <li>invoke <code>next(err)</code> after request fully read<ul> <li>prevents hung responses and socket hang ups</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#120-2014-05-11","title":"1.2.0 / 2014-05-11","text":"<ul> <li>add <code>verify</code> option</li> <li>deps: type-is@1.2.0<ul> <li>support suffix matching</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#112-2014-05-11","title":"1.1.2 / 2014-05-11","text":"<ul> <li>improve json parser speed</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#111-2014-05-11","title":"1.1.1 / 2014-05-11","text":"<ul> <li>fix repeated limit parsing with every request</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#110-2014-05-10","title":"1.1.0 / 2014-05-10","text":"<ul> <li>add <code>type</code> option</li> <li>deps: pin for safety and consistency</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#102-2014-04-14","title":"1.0.2 / 2014-04-14","text":"<ul> <li>use <code>type-is</code> module</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/body-parser/HISTORY/#101-2014-03-20","title":"1.0.1 / 2014-03-20","text":"<ul> <li>lower default limits to 100kb</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/brace-expansion/","title":"brace-expansion","text":"<p>Brace expansion,  as known from sh/bash, in JavaScript.</p> <p> </p> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/brace-expansion/#example","title":"Example","text":"<pre><code>var expand = require('brace-expansion');\n\nexpand('file-{a,b,c}.jpg')\n// =&gt; ['file-a.jpg', 'file-b.jpg', 'file-c.jpg']\n\nexpand('-v{,,}')\n// =&gt; ['-v', '-v', '-v']\n\nexpand('file{0..2}.jpg')\n// =&gt; ['file0.jpg', 'file1.jpg', 'file2.jpg']\n\nexpand('file-{a..c}.jpg')\n// =&gt; ['file-a.jpg', 'file-b.jpg', 'file-c.jpg']\n\nexpand('file{2..0}.jpg')\n// =&gt; ['file2.jpg', 'file1.jpg', 'file0.jpg']\n\nexpand('file{0..4..2}.jpg')\n// =&gt; ['file0.jpg', 'file2.jpg', 'file4.jpg']\n\nexpand('file-{a..e..2}.jpg')\n// =&gt; ['file-a.jpg', 'file-c.jpg', 'file-e.jpg']\n\nexpand('file{00..10..5}.jpg')\n// =&gt; ['file00.jpg', 'file05.jpg', 'file10.jpg']\n\nexpand('{{A..C},{a..c}}')\n// =&gt; ['A', 'B', 'C', 'a', 'b', 'c']\n\nexpand('ppp{,config,oe{,conf}}')\n// =&gt; ['ppp', 'pppconfig', 'pppoe', 'pppoeconf']\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/brace-expansion/#api","title":"API","text":"<pre><code>var expand = require('brace-expansion');\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/brace-expansion/#var-expanded-expandstr","title":"var expanded = expand(str)","text":"<p>Return an array of all possible and valid expansions of <code>str</code>. If none are found, <code>[str]</code> is returned.</p> <p>Valid expansions are:</p> <pre><code>/^(.*,)+(.+)?$/\n// {a,b,...}\n</code></pre> <p>A comma separated list of options, like <code>{a,b}</code> or <code>{a,{b,c}}</code> or <code>{,a,}</code>.</p> <pre><code>/^-?\\d+\\.\\.-?\\d+(\\.\\.-?\\d+)?$/\n// {x..y[..incr]}\n</code></pre> <p>A numeric sequence from <code>x</code> to <code>y</code> inclusive, with optional increment. If <code>x</code> or <code>y</code> start with a leading <code>0</code>, all the numbers will be padded to have equal length. Negative numbers and backwards iteration work too.</p> <pre><code>/^-?\\d+\\.\\.-?\\d+(\\.\\.-?\\d+)?$/\n// {x..y[..incr]}\n</code></pre> <p>An alphabetic sequence from <code>x</code> to <code>y</code> inclusive, with optional increment. <code>x</code> and <code>y</code> must be exactly one character, and if given, <code>incr</code> must be a number.</p> <p>For compatibility reasons, the string <code>${</code> is not eligible for brace expansion.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/brace-expansion/#installation","title":"Installation","text":"<p>With npm do:</p> <pre><code>npm install brace-expansion\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/brace-expansion/#contributors","title":"Contributors","text":"<ul> <li>Julian Gruber</li> <li>Isaac Z. Schlueter</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/brace-expansion/#sponsors","title":"Sponsors","text":"<p>This module is proudly supported by my Sponsors!</p> <p>Do you want to support modules like this to improve their quality, stability and weigh in on new features? Then please consider donating to my Patreon. Not sure how much of my modules you're using? Try feross/thanks!</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/brace-expansion/#license","title":"License","text":"<p>(MIT)</p> <p>Copyright (c) 2013 Julian Gruber &lt;julian@juliangruber.com&gt;</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/","title":"braces","text":"<p>Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support for the Bash 4.3 braces specification, without sacrificing speed.</p> <p>Please consider following this project's author, Jon Schlinkert, and consider starring the project to show your  and support.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#install","title":"Install","text":"<p>Install with npm:</p> <pre><code>$ npm install --save braces\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#v300-released","title":"v3.0.0 Released!!","text":"<p>See the changelog for details.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#why-use-braces","title":"Why use braces?","text":"<p>Brace patterns make globs more powerful by adding the ability to match specific ranges and sequences of characters.</p> <ul> <li>Accurate - complete support for the Bash 4.3 Brace Expansion specification (passes all of the Bash braces tests)</li> <li>fast and performant - Starts fast, runs fast and scales well as patterns increase in complexity.</li> <li>Organized code base - The parser and compiler are easy to maintain and update when edge cases crop up.</li> <li>Well-tested - Thousands of test assertions, and passes all of the Bash, minimatch, and brace-expansion unit tests (as of the date this was written).</li> <li>Safer - You shouldn't have to worry about users defining aggressive or malicious brace patterns that can break your application. Braces takes measures to prevent malicious regex that can be used for DDoS attacks (see catastrophic backtracking).</li> <li>Supports lists - (aka \"sets\") <code>a/{b,c}/d</code> =&gt; <code>['a/b/d', 'a/c/d']</code></li> <li>Supports sequences - (aka \"ranges\") <code>{01..03}</code> =&gt; <code>['01', '02', '03']</code></li> <li>Supports steps - (aka \"increments\") <code>{2..10..2}</code> =&gt; <code>['2', '4', '6', '8', '10']</code></li> <li>Supports escaping - To prevent evaluation of special characters.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#usage","title":"Usage","text":"<p>The main export is a function that takes one or more brace <code>patterns</code> and <code>options</code>.</p> <pre><code>const braces = require('braces');\n// braces(patterns[, options]);\n\nconsole.log(braces(['{01..05}', '{a..e}']));\n//=&gt; ['(0[1-5])', '([a-e])']\n\nconsole.log(braces(['{01..05}', '{a..e}'], { expand: true }));\n//=&gt; ['01', '02', '03', '04', '05', 'a', 'b', 'c', 'd', 'e']\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#brace-expansion-vs-compilation","title":"Brace Expansion vs. Compilation","text":"<p>By default, brace patterns are compiled into strings that are optimized for creating regular expressions and matching.</p> <p>Compiled</p> <pre><code>console.log(braces('a/{x,y,z}/b'));\n//=&gt; ['a/(x|y|z)/b']\nconsole.log(braces(['a/{01..20}/b', 'a/{1..5}/b']));\n//=&gt; [ 'a/(0[1-9]|1[0-9]|20)/b', 'a/([1-5])/b' ]\n</code></pre> <p>Expanded</p> <p>Enable brace expansion by setting the <code>expand</code> option to true, or by using braces.expand() (returns an array similar to what you'd expect from Bash, or <code>echo {1..5}</code>, or minimatch):</p> <pre><code>console.log(braces('a/{x,y,z}/b', { expand: true }));\n//=&gt; ['a/x/b', 'a/y/b', 'a/z/b']\n\nconsole.log(braces.expand('{01..10}'));\n//=&gt; ['01','02','03','04','05','06','07','08','09','10']\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#lists","title":"Lists","text":"<p>Expand lists (like Bash \"sets\"):</p> <pre><code>console.log(braces('a/{foo,bar,baz}/*.js'));\n//=&gt; ['a/(foo|bar|baz)/*.js']\n\nconsole.log(braces.expand('a/{foo,bar,baz}/*.js'));\n//=&gt; ['a/foo/*.js', 'a/bar/*.js', 'a/baz/*.js']\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#sequences","title":"Sequences","text":"<p>Expand ranges of characters (like Bash \"sequences\"):</p> <pre><code>console.log(braces.expand('{1..3}')); // ['1', '2', '3']\nconsole.log(braces.expand('a/{1..3}/b')); // ['a/1/b', 'a/2/b', 'a/3/b']\nconsole.log(braces('{a..c}', { expand: true })); // ['a', 'b', 'c']\nconsole.log(braces('foo/{a..c}', { expand: true })); // ['foo/a', 'foo/b', 'foo/c']\n\n// supports zero-padded ranges\nconsole.log(braces('a/{01..03}/b')); //=&gt; ['a/(0[1-3])/b']\nconsole.log(braces('a/{001..300}/b')); //=&gt; ['a/(0{2}[1-9]|0[1-9][0-9]|[12][0-9]{2}|300)/b']\n</code></pre> <p>See fill-range for all available range-expansion options.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#steppped-ranges","title":"Steppped ranges","text":"<p>Steps, or increments, may be used with ranges:</p> <pre><code>console.log(braces.expand('{2..10..2}'));\n//=&gt; ['2', '4', '6', '8', '10']\n\nconsole.log(braces('{2..10..2}'));\n//=&gt; ['(2|4|6|8|10)']\n</code></pre> <p>When the .optimize method is used, or options.optimize is set to true, sequences are passed to to-regex-range for expansion.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#nesting","title":"Nesting","text":"<p>Brace patterns may be nested. The results of each expanded string are not sorted, and left to right order is preserved.</p> <p>\"Expanded\" braces</p> <pre><code>console.log(braces.expand('a{b,c,/{x,y}}/e'));\n//=&gt; ['ab/e', 'ac/e', 'a/x/e', 'a/y/e']\n\nconsole.log(braces.expand('a/{x,{1..5},y}/c'));\n//=&gt; ['a/x/c', 'a/1/c', 'a/2/c', 'a/3/c', 'a/4/c', 'a/5/c', 'a/y/c']\n</code></pre> <p>\"Optimized\" braces</p> <pre><code>console.log(braces('a{b,c,/{x,y}}/e'));\n//=&gt; ['a(b|c|/(x|y))/e']\n\nconsole.log(braces('a/{x,{1..5},y}/c'));\n//=&gt; ['a/(x|([1-5])|y)/c']\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#escaping","title":"Escaping","text":"<p>Escaping braces</p> <p>A brace pattern will not be expanded or evaluted if either the opening or closing brace is escaped:</p> <pre><code>console.log(braces.expand('a\\\\{d,c,b}e'));\n//=&gt; ['a{d,c,b}e']\n\nconsole.log(braces.expand('a{d,c,b\\\\}e'));\n//=&gt; ['a{d,c,b}e']\n</code></pre> <p>Escaping commas</p> <p>Commas inside braces may also be escaped:</p> <pre><code>console.log(braces.expand('a{b\\\\,c}d'));\n//=&gt; ['a{b,c}d']\n\nconsole.log(braces.expand('a{d\\\\,c,b}e'));\n//=&gt; ['ad,ce', 'abe']\n</code></pre> <p>Single items</p> <p>Following bash conventions, a brace pattern is also not expanded when it contains a single character:</p> <pre><code>console.log(braces.expand('a{b}c'));\n//=&gt; ['a{b}c']\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#options","title":"Options","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#optionsmaxlength","title":"options.maxLength","text":"<p>Type: <code>Number</code></p> <p>Default: <code>10,000</code></p> <p>Description: Limit the length of the input string. Useful when the input string is generated or your application allows users to pass a string, et cetera.</p> <pre><code>console.log(braces('a/{b,c}/d', { maxLength: 3 })); //=&gt; throws an error\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#optionsexpand","title":"options.expand","text":"<p>Type: <code>Boolean</code></p> <p>Default: <code>undefined</code></p> <p>Description: Generate an \"expanded\" brace pattern (alternatively you can use the <code>braces.expand()</code> method, which does the same thing).</p> <pre><code>console.log(braces('a/{b,c}/d', { expand: true }));\n//=&gt; [ 'a/b/d', 'a/c/d' ]\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#optionsnodupes","title":"options.nodupes","text":"<p>Type: <code>Boolean</code></p> <p>Default: <code>undefined</code></p> <p>Description: Remove duplicates from the returned array.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#optionsrangelimit","title":"options.rangeLimit","text":"<p>Type: <code>Number</code></p> <p>Default: <code>1000</code></p> <p>Description: To prevent malicious patterns from being passed by users, an error is thrown when <code>braces.expand()</code> is used or <code>options.expand</code> is true and the generated range will exceed the <code>rangeLimit</code>.</p> <p>You can customize <code>options.rangeLimit</code> or set it to <code>Inifinity</code> to disable this altogether.</p> <p>Examples</p> <pre><code>// pattern exceeds the \"rangeLimit\", so it's optimized automatically\nconsole.log(braces.expand('{1..1000}'));\n//=&gt; ['([1-9]|[1-9][0-9]{1,2}|1000)']\n\n// pattern does not exceed \"rangeLimit\", so it's NOT optimized\nconsole.log(braces.expand('{1..100}'));\n//=&gt; ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#optionstransform","title":"options.transform","text":"<p>Type: <code>Function</code></p> <p>Default: <code>undefined</code></p> <p>Description: Customize range expansion.</p> <p>Example: Transforming non-numeric values</p> <pre><code>const alpha = braces.expand('x/{a..e}/y', {\n  transform(value, index) {\n    // When non-numeric values are passed, \"value\" is a character code.\n    return 'foo/' + String.fromCharCode(value) + '-' + index;\n  },\n});\nconsole.log(alpha);\n//=&gt; [ 'x/foo/a-0/y', 'x/foo/b-1/y', 'x/foo/c-2/y', 'x/foo/d-3/y', 'x/foo/e-4/y' ]\n</code></pre> <p>Example: Transforming numeric values</p> <pre><code>const numeric = braces.expand('{1..5}', {\n  transform(value) {\n    // when numeric values are passed, \"value\" is a number\n    return 'foo/' + value * 2;\n  },\n});\nconsole.log(numeric);\n//=&gt; [ 'foo/2', 'foo/4', 'foo/6', 'foo/8', 'foo/10' ]\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#optionsquantifiers","title":"options.quantifiers","text":"<p>Type: <code>Boolean</code></p> <p>Default: <code>undefined</code></p> <p>Description: In regular expressions, quanitifiers can be used to specify how many times a token can be repeated. For example, <code>a{1,3}</code> will match the letter <code>a</code> one to three times.</p> <p>Unfortunately, regex quantifiers happen to share the same syntax as Bash lists</p> <p>The <code>quantifiers</code> option tells braces to detect when regex quantifiers are defined in the given pattern, and not to try to expand them as lists.</p> <p>Examples</p> <pre><code>const braces = require('braces');\nconsole.log(braces('a/b{1,3}/{x,y,z}'));\n//=&gt; [ 'a/b(1|3)/(x|y|z)' ]\nconsole.log(braces('a/b{1,3}/{x,y,z}', { quantifiers: true }));\n//=&gt; [ 'a/b{1,3}/(x|y|z)' ]\nconsole.log(braces('a/b{1,3}/{x,y,z}', { quantifiers: true, expand: true }));\n//=&gt; [ 'a/b{1,3}/x', 'a/b{1,3}/y', 'a/b{1,3}/z' ]\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#optionskeepescaping","title":"options.keepEscaping","text":"<p>Type: <code>Boolean</code></p> <p>Default: <code>undefined</code></p> <p>Description: Do not strip backslashes that were used for escaping from the result.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#what-is-brace-expansion","title":"What is \"brace expansion\"?","text":"<p>Brace expansion is a type of parameter expansion that was made popular by unix shells for generating lists of strings, as well as regex-like matching when used alongside wildcards (globs).</p> <p>In addition to \"expansion\", braces are also used for matching. In other words:</p> <ul> <li>brace expansion is for generating new lists</li> <li>brace matching is for filtering existing lists</li> </ul> More about brace expansion (click to expand)  There are two main types of brace expansion:  1. **lists**: which are defined using comma-separated values inside curly braces: `{a,b,c}` 2. **sequences**: which are defined using a starting value and an ending value, separated by two dots: `a{1..3}b`. Optionally, a third argument may be passed to define a \"step\" or increment to use: `a{1..100..10}b`. These are also sometimes referred to as \"ranges\".  Here are some example brace patterns to illustrate how they work:  **Sets**  <pre><code>{a,b,c}       =&gt; a b c\n{a,b,c}{1,2}  =&gt; a1 a2 b1 b2 c1 c2\n</code></pre>  **Sequences**  <pre><code>{1..9}        =&gt; 1 2 3 4 5 6 7 8 9\n{4..-4}       =&gt; 4 3 2 1 0 -1 -2 -3 -4\n{1..20..3}    =&gt; 1 4 7 10 13 16 19\n{a..j}        =&gt; a b c d e f g h i j\n{j..a}        =&gt; j i h g f e d c b a\n{a..z..3}     =&gt; a d g j m p s v y\n</code></pre>  **Combination**  Sets and sequences can be mixed together or used along with any other strings.  <pre><code>{a,b,c}{1..3}   =&gt; a1 a2 a3 b1 b2 b3 c1 c2 c3\nfoo/{a,b,c}/bar =&gt; foo/a/bar foo/b/bar foo/c/bar\n</code></pre>  The fact that braces can be \"expanded\" from relatively simple patterns makes them ideal for quickly generating test fixtures, file paths, and similar use cases.  ## Brace matching  In addition to _expansion_, brace patterns are also useful for performing regular-expression-like matching.  For example, the pattern `foo/{1..3}/bar` would match any of following strings:  <pre><code>foo/1/bar\nfoo/2/bar\nfoo/3/bar\n</code></pre>  But not:  <pre><code>baz/1/qux\nbaz/2/qux\nbaz/3/qux\n</code></pre>  Braces can also be combined with [glob patterns](https://github.com/jonschlinkert/micromatch) to perform more advanced wildcard matching. For example, the pattern `*/{1..3}/*` would match any of following strings:  <pre><code>foo/1/bar\nfoo/2/bar\nfoo/3/bar\nbaz/1/qux\nbaz/2/qux\nbaz/3/qux\n</code></pre>  ## Brace matching pitfalls  Although brace patterns offer a user-friendly way of matching ranges or sets of strings, there are also some major disadvantages and potential risks you should be aware of.  ### tldr  **\"brace bombs\"**  - brace expansion can eat up a huge amount of processing resources - as brace patterns increase _linearly in size_, the system resources required to expand the pattern increase exponentially - users can accidentally (or intentially) exhaust your system's resources resulting in the equivalent of a DoS attack (bonus: no programming knowledge is required!)  For a more detailed explanation with examples, see the [geometric complexity](#geometric-complexity) section.  ### The solution  Jump to the [performance section](#performance) to see how Braces solves this problem in comparison to other libraries.  ### Geometric complexity  At minimum, brace patterns with sets limited to two elements have quadradic or `O(n^2)` complexity. But the complexity of the algorithm increases exponentially as the number of sets, _and elements per set_, increases, which is `O(n^c)`.  For example, the following sets demonstrate quadratic (`O(n^2)`) complexity:  <pre><code>{1,2}{3,4}      =&gt; (2X2)    =&gt; 13 14 23 24\n{1,2}{3,4}{5,6} =&gt; (2X2X2)  =&gt; 135 136 145 146 235 236 245 246\n</code></pre>  But add an element to a set, and we get a n-fold Cartesian product with `O(n^c)` complexity:  <pre><code>{1,2,3}{4,5,6}{7,8,9} =&gt; (3X3X3) =&gt; 147 148 149 157 158 159 167 168 169 247 248\n                                    249 257 258 259 267 268 269 347 348 349 357\n                                    358 359 367 368 369\n</code></pre>  Now, imagine how this complexity grows given that each element is a n-tuple:  <pre><code>{1..100}{1..100}         =&gt; (100X100)     =&gt; 10,000 elements (38.4 kB)\n{1..100}{1..100}{1..100} =&gt; (100X100X100) =&gt; 1,000,000 elements (5.76 MB)\n</code></pre>  Although these examples are clearly contrived, they demonstrate how brace patterns can quickly grow out of control.  **More information**  Interested in learning more about brace expansion?  - [linuxjournal/bash-brace-expansion](http://www.linuxjournal.com/content/bash-brace-expansion) - [rosettacode/Brace_expansion](https://rosettacode.org/wiki/Brace_expansion) - [cartesian product](https://en.wikipedia.org/wiki/Cartesian_product)"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#performance","title":"Performance","text":"<p>Braces is not only screaming fast, it's also more accurate the other brace expansion libraries.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#better-algorithms","title":"Better algorithms","text":"<p>Fortunately there is a solution to the \"brace bomb\" problem: don't expand brace patterns into an array when they're used for matching.</p> <p>Instead, convert the pattern into an optimized regular expression. This is easier said than done, and braces is the only library that does this currently.</p> <p>The proof is in the numbers</p> <p>Minimatch gets exponentially slower as patterns increase in complexity, braces does not. The following results were generated using <code>braces()</code> and <code>minimatch.braceExpand()</code>, respectively.</p> Pattern braces [minimatch][] <code>{1..9007199254740991}</code>[^1] <code>298 B</code> (5ms 459\u03bcs) N/A (freezes) <code>{1..1000000000000000}</code> <code>41 B</code> (1ms 15\u03bcs) N/A (freezes) <code>{1..100000000000000}</code> <code>40 B</code> (890\u03bcs) N/A (freezes) <code>{1..10000000000000}</code> <code>39 B</code> (2ms 49\u03bcs) N/A (freezes) <code>{1..1000000000000}</code> <code>38 B</code> (608\u03bcs) N/A (freezes) <code>{1..100000000000}</code> <code>37 B</code> (397\u03bcs) N/A (freezes) <code>{1..10000000000}</code> <code>35 B</code> (983\u03bcs) N/A (freezes) <code>{1..1000000000}</code> <code>34 B</code> (798\u03bcs) N/A (freezes) <code>{1..100000000}</code> <code>33 B</code> (733\u03bcs) N/A (freezes) <code>{1..10000000}</code> <code>32 B</code> (5ms 632\u03bcs) <code>78.89 MB</code> (16s 388ms 569\u03bcs) <code>{1..1000000}</code> <code>31 B</code> (1ms 381\u03bcs) <code>6.89 MB</code> (1s 496ms 887\u03bcs) <code>{1..100000}</code> <code>30 B</code> (950\u03bcs) <code>588.89 kB</code> (146ms 921\u03bcs) <code>{1..10000}</code> <code>29 B</code> (1ms 114\u03bcs) <code>48.89 kB</code> (14ms 187\u03bcs) <code>{1..1000}</code> <code>28 B</code> (760\u03bcs) <code>3.89 kB</code> (1ms 453\u03bcs) <code>{1..100}</code> <code>22 B</code> (345\u03bcs) <code>291 B</code> (196\u03bcs) <code>{1..10}</code> <code>10 B</code> (533\u03bcs) <code>20 B</code> (37\u03bcs) <code>{1..3}</code> <code>7 B</code> (190\u03bcs) <code>5 B</code> (27\u03bcs)"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#faster-algorithms","title":"Faster algorithms","text":"<p>When you need expansion, braces is still much faster.</p> <p>(the following results were generated using <code>braces.expand()</code> and <code>minimatch.braceExpand()</code>, respectively)</p> Pattern braces [minimatch][] <code>{1..10000000}</code> <code>78.89 MB</code> (2s 698ms 642\u03bcs) <code>78.89 MB</code> (18s 601ms 974\u03bcs) <code>{1..1000000}</code> <code>6.89 MB</code> (458ms 576\u03bcs) <code>6.89 MB</code> (1s 491ms 621\u03bcs) <code>{1..100000}</code> <code>588.89 kB</code> (20ms 728\u03bcs) <code>588.89 kB</code> (156ms 919\u03bcs) <code>{1..10000}</code> <code>48.89 kB</code> (2ms 202\u03bcs) <code>48.89 kB</code> (13ms 641\u03bcs) <code>{1..1000}</code> <code>3.89 kB</code> (1ms 796\u03bcs) <code>3.89 kB</code> (1ms 958\u03bcs) <code>{1..100}</code> <code>291 B</code> (424\u03bcs) <code>291 B</code> (211\u03bcs) <code>{1..10}</code> <code>20 B</code> (487\u03bcs) <code>20 B</code> (72\u03bcs) <code>{1..3}</code> <code>5 B</code> (166\u03bcs) <code>5 B</code> (27\u03bcs) <p>If you'd like to run these comparisons yourself, see test/support/generate.js.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#benchmarks","title":"Benchmarks","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#running-benchmarks","title":"Running benchmarks","text":"<p>Install dev dependencies:</p> <pre><code>npm i -d &amp;&amp; npm benchmark\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#latest-results","title":"Latest results","text":"<p>Braces is more accurate, without sacrificing performance.</p> <pre><code>\u25cf expand - range (expanded)\n     braces x 53,167 ops/sec \u00b10.12% (102 runs sampled)\n  minimatch x 11,378 ops/sec \u00b10.10% (102 runs sampled)\n\u25cf expand - range (optimized for regex)\n     braces x 373,442 ops/sec \u00b10.04% (100 runs sampled)\n  minimatch x 3,262 ops/sec \u00b10.18% (100 runs sampled)\n\u25cf expand - nested ranges (expanded)\n     braces x 33,921 ops/sec \u00b10.09% (99 runs sampled)\n  minimatch x 10,855 ops/sec \u00b10.28% (100 runs sampled)\n\u25cf expand - nested ranges (optimized for regex)\n     braces x 287,479 ops/sec \u00b10.52% (98 runs sampled)\n  minimatch x 3,219 ops/sec \u00b10.28% (101 runs sampled)\n\u25cf expand - set (expanded)\n     braces x 238,243 ops/sec \u00b10.19% (97 runs sampled)\n  minimatch x 538,268 ops/sec \u00b10.31% (96 runs sampled)\n\u25cf expand - set (optimized for regex)\n     braces x 321,844 ops/sec \u00b10.10% (97 runs sampled)\n  minimatch x 140,600 ops/sec \u00b10.15% (100 runs sampled)\n\u25cf expand - nested sets (expanded)\n     braces x 165,371 ops/sec \u00b10.42% (96 runs sampled)\n  minimatch x 337,720 ops/sec \u00b10.28% (100 runs sampled)\n\u25cf expand - nested sets (optimized for regex)\n     braces x 242,948 ops/sec \u00b10.12% (99 runs sampled)\n  minimatch x 87,403 ops/sec \u00b10.79% (96 runs sampled)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#about","title":"About","text":"Contributing  Pull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).   Running Tests  Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:  <pre><code>$ npm install &amp;&amp; npm test\n</code></pre> Building docs  _(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_  To generate the readme, run the following command:  <pre><code>$ npm install -g verbose/verb#dev verb-generate-readme &amp;&amp; verb\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#contributors","title":"Contributors","text":"Commits Contributor 197 jonschlinkert 4 doowb 1 es128 1 eush77 1 hemanth 1 wtgtybhertgeghgtwtg"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#author","title":"Author","text":"<p>Jon Schlinkert</p> <ul> <li>GitHub Profile</li> <li>Twitter Profile</li> <li>LinkedIn Profile</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/braces/#license","title":"License","text":"<p>Copyright \u00a9 2019, Jon Schlinkert. Released under the MIT License.</p> <p>This file was generated by verb-generate-readme, v0.8.0, on April 08, 2019.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/","title":"BSON parser","text":"<p>BSON is short for \"Binary JSON,\" and is the binary-encoded serialization of JSON-like documents. You can learn more about it in the specification.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Usage</li> <li>Bugs/Feature Requests</li> <li>Installation</li> <li>Documentation</li> <li>FAQ</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#release-integrity","title":"Release Integrity","text":"<p>Releases are created automatically and signed using the Node team's GPG key. This applies to the git tag as well as all release packages provided as part of a GitHub release. To verify the provided packages, download the key and import it using gpg:</p> <pre><code>gpg --import node-driver.asc\n</code></pre> <p>The GitHub release contains a detached signature file for the NPM package (named <code>bson-X.Y.Z.tgz.sig</code>).</p> <p>The following command returns the link npm package.  <pre><code>npm view bson@vX.Y.Z dist.tarball \n</code></pre></p> <p>Using the result of the above command, a <code>curl</code> command can return the official npm package for the release.</p> <p>To verify the integrity of the downloaded package, run the following command: <pre><code>gpg --verify bson-X.Y.Z.tgz.sig bson-X.Y.Z.tgz\n</code></pre></p> <p>[!Note] No verification is done when using npm to install the package. The contents of the Github tarball and npm's tarball are identical.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#bugs-feature-requests","title":"Bugs / Feature Requests","text":"<p>Think you've found a bug? Want to see a new feature in <code>bson</code>? Please open a case in our issue management tool, JIRA:</p> <ol> <li>Create an account and login: jira.mongodb.org</li> <li>Navigate to the NODE project: jira.mongodb.org/browse/NODE</li> <li>Click Create Issue - Please provide as much information as possible about the issue and how to reproduce it.</li> </ol> <p>Bug reports in JIRA for the NODE driver project are public.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#usage","title":"Usage","text":"<p>To build a new version perform the following operations:</p> <pre><code>npm install\nnpm run build\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#nodejs-or-bundling-usage","title":"Node.js or Bundling Usage","text":"<p>When using a bundler or Node.js you can import bson using the package name:</p> <pre><code>import { BSON, EJSON, ObjectId } from 'bson';\n// or:\n// const { BSON, EJSON, ObjectId } = require('bson');\n\nconst bytes = BSON.serialize({ _id: new ObjectId() });\nconsole.log(bytes);\nconst doc = BSON.deserialize(bytes);\nconsole.log(EJSON.stringify(doc));\n// {\"_id\":{\"$oid\":\"...\"}}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#browser-usage","title":"Browser Usage","text":"<p>If you are working directly in the browser without a bundler please use the <code>.mjs</code> bundle like so:</p> <pre><code>&lt;script type=\"module\"&gt;\n  import { BSON, EJSON, ObjectId } from './lib/bson.mjs';\n\n  const bytes = BSON.serialize({ _id: new ObjectId() });\n  console.log(bytes);\n  const doc = BSON.deserialize(bytes);\n  console.log(EJSON.stringify(doc));\n  // {\"_id\":{\"$oid\":\"...\"}}\n&lt;/script&gt;\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#installation","title":"Installation","text":"<pre><code>npm install bson\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#mongodb-nodejs-driver-version-compatibility","title":"MongoDB Node.js Driver Version Compatibility","text":"<p>Only the following version combinations with the MongoDB Node.js Driver are considered stable.</p> <code>bson@1.x</code> <code>bson@4.x</code> <code>bson@5.x</code> <code>bson@6.x</code> <code>mongodb@6.x</code> N/A N/A N/A \u2713 <code>mongodb@5.x</code> N/A N/A \u2713 N/A <code>mongodb@4.x</code> N/A \u2713 N/A N/A <code>mongodb@3.x</code> \u2713 N/A N/A N/A"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#documentation","title":"Documentation","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#bson","title":"BSON","text":"<p>API documentation</p> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#ejson","title":"EJSON","text":"<ul> <li> <p>EJSON</p> </li> <li> <p>.parse(text, [options])</p> </li> <li> <p>.stringify(value, [replacer], [space], [options])</p> </li> <li> <p>.serialize(bson, [options])</p> </li> <li> <p>.deserialize(ejson, [options])</p> </li> </ul> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#ejsonparsetext-options","title":"EJSON.parse(text, [options])","text":"Param Type Default Description text <code>string</code> [options] <code>object</code> Optional settings [options.relaxed] <code>boolean</code> <code>true</code> Attempt to return native JS types where possible, rather than BSON types (if true) <p>Parse an Extended JSON string, constructing the JavaScript value or object described by that string.</p> <p>Example</p> <pre><code>const { EJSON } = require('bson');\nconst text = '{ \"int32\": { \"$numberInt\": \"10\" } }';\n\n// prints { int32: { [String: '10'] _bsontype: 'Int32', value: '10' } }\nconsole.log(EJSON.parse(text, { relaxed: false }));\n\n// prints { int32: 10 }\nconsole.log(EJSON.parse(text));\n</code></pre> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#ejsonstringifyvalue-replacer-space-options","title":"EJSON.stringify(value, [replacer], [space], [options])","text":"Param Type Default Description value <code>object</code> The value to convert to extended JSON [replacer] <code>function</code> | <code>array</code> A function that alters the behavior of the stringification process, or an array of String and Number objects that serve as a whitelist for selecting/filtering the properties of the value object to be included in the JSON string. If this value is null or not provided, all properties of the object are included in the resulting JSON string [space] <code>string</code> | <code>number</code> A String or Number object that's used to insert white space into the output JSON string for readability purposes. [options] <code>object</code> Optional settings [options.relaxed] <code>boolean</code> <code>true</code> Enabled Extended JSON's <code>relaxed</code> mode [options.legacy] <code>boolean</code> <code>true</code> Output in Extended JSON v1 <p>Converts a BSON document to an Extended JSON string, optionally replacing values if a replacer function is specified or optionally including only the specified properties if a replacer array is specified.</p> <p>Example</p> <pre><code>const { EJSON } = require('bson');\nconst Int32 = require('mongodb').Int32;\nconst doc = { int32: new Int32(10) };\n\n// prints '{\"int32\":{\"$numberInt\":\"10\"}}'\nconsole.log(EJSON.stringify(doc, { relaxed: false }));\n\n// prints '{\"int32\":10}'\nconsole.log(EJSON.stringify(doc));\n</code></pre> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#ejsonserializebson-options","title":"EJSON.serialize(bson, [options])","text":"Param Type Description bson <code>object</code> The object to serialize [options] <code>object</code> Optional settings passed to the <code>stringify</code> function <p>Serializes an object to an Extended JSON string, and reparse it as a JavaScript object.</p> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#ejsondeserializeejson-options","title":"EJSON.deserialize(ejson, [options])","text":"Param Type Description ejson <code>object</code> The Extended JSON object to deserialize [options] <code>object</code> Optional settings passed to the parse method <p>Deserializes an Extended JSON object into a plain JavaScript object with native/BSON types</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#error-handling","title":"Error Handling","text":"<p>It is our recommendation to use <code>BSONError.isBSONError()</code> checks on errors and to avoid relying on parsing <code>error.message</code> and <code>error.name</code> strings in your code. We guarantee <code>BSONError.isBSONError()</code> checks will pass according to semver guidelines, but errors may be sub-classed or their messages may change at any time, even patch releases, as we see fit to increase the helpfulness of the errors.</p> <p>Any new errors we add to the driver will directly extend an existing error class and no existing error will be moved to a different parent class outside of a major release. This means <code>BSONError.isBSONError()</code> will always be able to accurately capture the errors that our BSON library throws.</p> <p>Hypothetical example: A collection in our Db has an issue with UTF-8 data:</p> <pre><code>let documentCount = 0;\nconst cursor = collection.find({}, { utf8Validation: true });\ntry {\n  for await (const doc of cursor) documentCount += 1;\n} catch (error) {\n  if (BSONError.isBSONError(error)) {\n    console.log(`Found the troublemaker UTF-8!: ${documentCount} ${error.message}`);\n    return documentCount;\n  }\n  throw error;\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#react-native","title":"React Native","text":"<p>BSON vendors the required polyfills for <code>TextEncoder</code>, <code>TextDecoder</code>, <code>atob</code>, <code>btoa</code> imported from React Native and therefore doesn't expect users to polyfill these. One additional polyfill, <code>crypto.getRandomValues</code> is recommended and can be installed with the following command:</p> <pre><code>npm install --save react-native-get-random-values\n</code></pre> <p>The following snippet should be placed at the top of the entrypoint (by default this is the root <code>index.js</code> file) for React Native projects using the BSON library. These lines must be placed for any code that imports <code>BSON</code>.</p> <pre><code>// Required Polyfills For ReactNative\nimport 'react-native-get-random-values';\n</code></pre> <p>Finally, import the <code>BSON</code> library like so:</p> <pre><code>import { BSON, EJSON } from 'bson';\n</code></pre> <p>This will cause React Native to import the <code>node_modules/bson/lib/bson.rn.cjs</code> bundle (see the <code>\"react-native\"</code> setting we have in the <code>\"exports\"</code> section of our package.json.)</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#technical-note-about-react-native-module-import","title":"Technical Note about React Native module import","text":"<p>The <code>\"exports\"</code> definition in our <code>package.json</code> will result in BSON's CommonJS bundle being imported in a React Native project instead of the ES module bundle. Importing the CommonJS bundle is necessary because BSON's ES module bundle of BSON uses top-level await, which is not supported syntax in React Native's runtime hermes.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#faq","title":"FAQ","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#why-does-undefined-get-converted-to-null","title":"Why does <code>undefined</code> get converted to <code>null</code>?","text":"<p>The <code>undefined</code> BSON type has been deprecated for many years, so this library has dropped support for it. Use the <code>ignoreUndefined</code> option (for example, from the driver ) to instead remove <code>undefined</code> keys.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/#how-do-i-add-custom-serialization-logic","title":"How do I add custom serialization logic?","text":"<p>This library looks for <code>toBSON()</code> functions on every path, and calls the <code>toBSON()</code> function to get the value to serialize.</p> <pre><code>const BSON = require('bson');\n\nclass CustomSerialize {\n  toBSON() {\n    return 42;\n  }\n}\n\nconst obj = { answer: new CustomSerialize() };\n// \"{ answer: 42 }\"\nconsole.log(BSON.deserialize(BSON.serialize(obj)));\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/LICENSE/","title":"LICENSE","text":"<pre><code>                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/\n</code></pre> <p>TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION</p> <ol> <li> <p>Definitions.</p> <p>\"License\" shall mean the terms and conditions for use, reproduction,   and distribution as defined by Sections 1 through 9 of this document.</p> <p>\"Licensor\" shall mean the copyright owner or entity authorized by   the copyright owner that is granting the License.</p> <p>\"Legal Entity\" shall mean the union of the acting entity and all   other entities that control, are controlled by, or are under common   control with that entity. For the purposes of this definition,   \"control\" means (i) the power, direct or indirect, to cause the   direction or management of such entity, whether by contract or   otherwise, or (ii) ownership of fifty percent (50%) or more of the   outstanding shares, or (iii) beneficial ownership of such entity.</p> <p>\"You\" (or \"Your\") shall mean an individual or Legal Entity   exercising permissions granted by this License.</p> <p>\"Source\" form shall mean the preferred form for making modifications,   including but not limited to software source code, documentation   source, and configuration files.</p> <p>\"Object\" form shall mean any form resulting from mechanical   transformation or translation of a Source form, including but   not limited to compiled object code, generated documentation,   and conversions to other media types.</p> <p>\"Work\" shall mean the work of authorship, whether in Source or   Object form, made available under the License, as indicated by a   copyright notice that is included in or attached to the work   (an example is provided in the Appendix below).</p> <p>\"Derivative Works\" shall mean any work, whether in Source or Object   form, that is based on (or derived from) the Work and for which the   editorial revisions, annotations, elaborations, or other modifications   represent, as a whole, an original work of authorship. For the purposes   of this License, Derivative Works shall not include works that remain   separable from, or merely link (or bind by name) to the interfaces of,   the Work and Derivative Works thereof.</p> <p>\"Contribution\" shall mean any work of authorship, including   the original version of the Work and any modifications or additions   to that Work or Derivative Works thereof, that is intentionally   submitted to Licensor for inclusion in the Work by the copyright owner   or by an individual or Legal Entity authorized to submit on behalf of   the copyright owner. For the purposes of this definition, \"submitted\"   means any form of electronic, verbal, or written communication sent   to the Licensor or its representatives, including but not limited to   communication on electronic mailing lists, source code control systems,   and issue tracking systems that are managed by, or on behalf of, the   Licensor for the purpose of discussing and improving the Work, but   excluding communication that is conspicuously marked or otherwise   designated in writing by the copyright owner as \"Not a Contribution.\"</p> <p>\"Contributor\" shall mean Licensor and any individual or Legal Entity   on behalf of whom a Contribution has been received by Licensor and   subsequently incorporated within the Work.</p> </li> <li> <p>Grant of Copyright License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       copyright license to reproduce, prepare Derivative Works of,       publicly display, publicly perform, sublicense, and distribute the       Work and such Derivative Works in Source or Object form.</p> </li> <li> <p>Grant of Patent License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       (except as stated in this section) patent license to make, have made,       use, offer to sell, sell, import, and otherwise transfer the Work,       where such license applies only to those patent claims licensable       by such Contributor that are necessarily infringed by their       Contribution(s) alone or by combination of their Contribution(s)       with the Work to which such Contribution(s) was submitted. If You       institute patent litigation against any entity (including a       cross-claim or counterclaim in a lawsuit) alleging that the Work       or a Contribution incorporated within the Work constitutes direct       or contributory patent infringement, then any patent licenses       granted to You under this License for that Work shall terminate       as of the date such litigation is filed.</p> </li> <li> <p>Redistribution. You may reproduce and distribute copies of the       Work or Derivative Works thereof in any medium, with or without       modifications, and in Source or Object form, provided that You       meet the following conditions:</p> <p>(a) You must give any other recipients of the Work or       Derivative Works a copy of this License; and</p> <p>(b) You must cause any modified files to carry prominent notices       stating that You changed the files; and</p> <p>(c) You must retain, in the Source form of any Derivative Works       that You distribute, all copyright, patent, trademark, and       attribution notices from the Source form of the Work,       excluding those notices that do not pertain to any part of       the Derivative Works; and</p> <p>(d) If the Work includes a \"NOTICE\" text file as part of its       distribution, then any Derivative Works that You distribute must       include a readable copy of the attribution notices contained       within such NOTICE file, excluding those notices that do not       pertain to any part of the Derivative Works, in at least one       of the following places: within a NOTICE text file distributed       as part of the Derivative Works; within the Source form or       documentation, if provided along with the Derivative Works; or,       within a display generated by the Derivative Works, if and       wherever such third-party notices normally appear. The contents       of the NOTICE file are for informational purposes only and       do not modify the License. You may add Your own attribution       notices within Derivative Works that You distribute, alongside       or as an addendum to the NOTICE text from the Work, provided       that such additional attribution notices cannot be construed       as modifying the License.</p> <p>You may add Your own copyright statement to Your modifications and   may provide additional or different license terms and conditions   for use, reproduction, or distribution of Your modifications, or   for any such Derivative Works as a whole, provided Your use,   reproduction, and distribution of the Work otherwise complies with   the conditions stated in this License.</p> </li> <li> <p>Submission of Contributions. Unless You explicitly state otherwise,       any Contribution intentionally submitted for inclusion in the Work       by You to the Licensor shall be under the terms and conditions of       this License, without any additional terms or conditions.       Notwithstanding the above, nothing herein shall supersede or modify       the terms of any separate license agreement you may have executed       with Licensor regarding such Contributions.</p> </li> <li> <p>Trademarks. This License does not grant permission to use the trade       names, trademarks, service marks, or product names of the Licensor,       except as required for reasonable and customary use in describing the       origin of the Work and reproducing the content of the NOTICE file.</p> </li> <li> <p>Disclaimer of Warranty. Unless required by applicable law or       agreed to in writing, Licensor provides the Work (and each       Contributor provides its Contributions) on an \"AS IS\" BASIS,       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or       implied, including, without limitation, any warranties or conditions       of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A       PARTICULAR PURPOSE. You are solely responsible for determining the       appropriateness of using or redistributing the Work and assume any       risks associated with Your exercise of permissions under this License.</p> </li> <li> <p>Limitation of Liability. In no event and under no legal theory,       whether in tort (including negligence), contract, or otherwise,       unless required by applicable law (such as deliberate and grossly       negligent acts) or agreed to in writing, shall any Contributor be       liable to You for damages, including any direct, indirect, special,       incidental, or consequential damages of any character arising as a       result of this License or out of the use or inability to use the       Work (including but not limited to damages for loss of goodwill,       work stoppage, computer failure or malfunction, or any and all       other commercial damages or losses), even if such Contributor       has been advised of the possibility of such damages.</p> </li> <li> <p>Accepting Warranty or Additional Liability. While redistributing       the Work or Derivative Works thereof, You may choose to offer,       and charge a fee for, acceptance of support, warranty, indemnity,       or other liability obligations and/or rights consistent with this       License. However, in accepting such obligations, You may act only       on Your own behalf and on Your sole responsibility, not on behalf       of any other Contributor, and only if You agree to indemnify,       defend, and hold each Contributor harmless for any liability       incurred by, or claims asserted against, such Contributor by reason       of your accepting any such warranty or additional liability.</p> </li> </ol> <p>END OF TERMS AND CONDITIONS</p> <p>APPENDIX: How to apply the Apache License to your work.</p> <pre><code>  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.\n</code></pre> <p>Copyright [yyyy] [name of copyright owner]</p> <p>Licensed under the Apache License, Version 2.0 (the \"License\");    you may not use this file except in compliance with the License.    You may obtain a copy of the License at</p> <pre><code>   http://www.apache.org/licenses/LICENSE-2.0\n</code></pre> <p>Unless required by applicable law or agreed to in writing, software    distributed under the License is distributed on an \"AS IS\" BASIS,    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.    See the License for the specific language governing permissions and    limitations under the License.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/base64/","title":"base64","text":"<p>base64 is a robust base64 encoder/decoder that is fully compatible with <code>atob()</code> and <code>btoa()</code>, written in JavaScript. The base64-encoding and -decoding algorithms it uses are fully RFC 4648 compliant.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/base64/#installation","title":"Installation","text":"<p>Via npm:</p> <pre><code>npm install base-64\n</code></pre> <p>In a browser:</p> <pre><code>&lt;script src=\"base64.js\"&gt;&lt;/script&gt;\n</code></pre> <p>In Narwhal, Node.js, and RingoJS:</p> <pre><code>var base64 = require('base-64');\n</code></pre> <p>In Rhino:</p> <pre><code>load('base64.js');\n</code></pre> <p>Using an AMD loader like RequireJS:</p> <pre><code>require(\n  {\n    'paths': {\n      'base64': 'path/to/base64'\n    }\n  },\n  ['base64'],\n  function(base64) {\n    console.log(base64);\n  }\n);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/base64/#api","title":"API","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/base64/#base64version","title":"<code>base64.version</code>","text":"<p>A string representing the semantic version number.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/base64/#base64encodeinput","title":"<code>base64.encode(input)</code>","text":"<p>This function takes a byte string (the <code>input</code> parameter) and encodes it according to base64. The input data must be in the form of a string containing only characters in the range from U+0000 to U+00FF, each representing a binary byte with values <code>0x00</code> to <code>0xFF</code>. The <code>base64.encode()</code> function is designed to be fully compatible with <code>btoa()</code> as described in the HTML Standard.</p> <pre><code>var encodedData = base64.encode(input);\n</code></pre> <p>To base64-encode any Unicode string, encode it as UTF-8 first:</p> <pre><code>var base64 = require('base-64');\nvar utf8 = require('utf8');\n\nvar text = 'foo \u00a9 bar \ud834\udf06 baz';\nvar bytes = utf8.encode(text);\nvar encoded = base64.encode(bytes);\nconsole.log(encoded);\n// \u2192 'Zm9vIMKpIGJhciDwnYyGIGJheg=='\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/base64/#base64decodeinput","title":"<code>base64.decode(input)</code>","text":"<p>This function takes a base64-encoded string (the <code>input</code> parameter) and decodes it. The return value is in the form of a string containing only characters in the range from U+0000 to U+00FF, each representing a binary byte with values <code>0x00</code> to <code>0xFF</code>. The <code>base64.decode()</code> function is designed to be fully compatible with <code>atob()</code> as described in the HTML Standard.</p> <pre><code>var decodedData = base64.decode(encodedData);\n</code></pre> <p>To base64-decode UTF-8-encoded data back into a Unicode string, UTF-8-decode it after base64-decoding it:</p> <pre><code>var encoded = 'Zm9vIMKpIGJhciDwnYyGIGJheg==';\nvar bytes = base64.decode(encoded);\nvar text = utf8.decode(bytes);\nconsole.log(text);\n// \u2192 'foo \u00a9 bar \ud834\udf06 baz'\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/base64/#support","title":"Support","text":"<p>base64 is designed to work in at least Node.js v0.10.0, Narwhal 0.3.2, RingoJS 0.8-0.9, PhantomJS 1.9.0, Rhino 1.7RC4, as well as old and modern versions of Chrome, Firefox, Safari, Opera, and Internet Explorer.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/base64/#unit-tests-code-coverage","title":"Unit tests &amp; code coverage","text":"<p>After cloning this repository, run <code>npm install</code> to install the dependencies needed for development and testing. You may want to install Istanbul globally using <code>npm install istanbul -g</code>.</p> <p>Once that\u2019s done, you can run the unit tests in Node using <code>npm test</code> or <code>node tests/tests.js</code>. To run the tests in Rhino, Ringo, Narwhal, and web browsers as well, use <code>grunt test</code>.</p> <p>To generate the code coverage report, use <code>grunt cover</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/base64/#author","title":"Author","text":"Mathias Bynens"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/base64/#license","title":"License","text":"<p>base64 is available under the MIT license.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/text-encoding/","title":"text-encoding","text":"<p>This is a polyfill for the Encoding Living Standard API for the Web, allowing encoding and decoding of textual data to and from Typed Array buffers for binary data in JavaScript.</p> <p>By default it adheres to the spec and does not support encoding to legacy encodings, only decoding. It is also implemented to match the specification's algorithms, rather than for performance. The intended use is within Web pages, so it has no dependency on server frameworks or particular module schemes.</p> <p>Basic examples and tests are included.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/text-encoding/#install","title":"Install","text":"<p>There are a few ways you can get and use the <code>text-encoding</code> library.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/text-encoding/#html-page-usage","title":"HTML Page Usage","text":"<p>Clone the repo and include the files directly:</p> <pre><code>  &lt;!-- Required for non-UTF encodings --&gt;\n  &lt;script src=\"encoding-indexes.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"encoding.js\"&gt;&lt;/script&gt;\n</code></pre> <p>This is the only use case the developer cares about. If you want those fancy module and/or package manager things that are popular these days you should probably use a different library.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/text-encoding/#package-managers","title":"Package Managers","text":"<p>The package is published to npm and bower as <code>text-encoding</code>. Use through these is not really supported, since they aren't used by the developer of the library. Using <code>require()</code> in interesting ways probably breaks. Patches welcome, as long as they don't break the basic use of the files via <code>&lt;script&gt;</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/text-encoding/#api-overview","title":"API Overview","text":"<p>Basic Usage</p> <pre><code>  var uint8array = new TextEncoder().encode(string);\n  var string = new TextDecoder(encoding).decode(uint8array);\n</code></pre> <p>Streaming Decode</p> <pre><code>  var string = \"\", decoder = new TextDecoder(encoding), buffer;\n  while (buffer = next_chunk()) {\n    string += decoder.decode(buffer, {stream:true});\n  }\n  string += decoder.decode(); // finish the stream\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/text-encoding/#encodings","title":"Encodings","text":"<p>All encodings from the Encoding specification are supported:</p> <p>utf-8 ibm866 iso-8859-2 iso-8859-3 iso-8859-4 iso-8859-5 iso-8859-6 iso-8859-7 iso-8859-8 iso-8859-8-i iso-8859-10 iso-8859-13 iso-8859-14 iso-8859-15 iso-8859-16 koi8-r koi8-u macintosh windows-874 windows-1250 windows-1251 windows-1252 windows-1253 windows-1254 windows-1255 windows-1256 windows-1257 windows-1258 x-mac-cyrillic gb18030 hz-gb-2312 big5 euc-jp iso-2022-jp shift_jis euc-kr replacement utf-16be utf-16le x-user-defined</p> <p>(Some encodings may be supported under other names, e.g. ascii, iso-8859-1, etc. See Encoding for additional labels for each encoding.)</p> <p>Encodings other than utf-8, utf-16le and utf-16be require an additional <code>encoding-indexes.js</code> file to be included. It is rather large (596kB uncompressed, 188kB gzipped); portions may be deleted if support for some encodings is not required.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/text-encoding/#non-standard-behavior","title":"Non-Standard Behavior","text":"<p>As required by the specification, only encoding to utf-8 is supported. If you want to try it out, you can force a non-standard behavior by passing the <code>NONSTANDARD_allowLegacyEncoding</code> option to TextEncoder and a label. For example:</p> <pre><code>var uint8array = new TextEncoder(\n  'windows-1252', { NONSTANDARD_allowLegacyEncoding: true }).encode(text);\n</code></pre> <p>But note that the above won't work if you're using the polyfill in a browser that natively supports the TextEncoder API natively, since the polyfill won't be used!</p> <p>You can force the polyfill to be used by using this before the polyfill:</p> <pre><code>&lt;script&gt;\nwindow.TextEncoder = window.TextDecoder = null;\n&lt;/script&gt;\n</code></pre> <p>To support the legacy encodings (which may be stateful), the TextEncoder <code>encode()</code> method accepts an optional dictionary and <code>stream</code> option, e.g. <code>encoder.encode(string, {stream: true});</code> This is not needed for standard encoding since the input is always in complete code points.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/text-encoding/LICENSE/","title":"LICENSE","text":"<p>The encoding indexes, algorithms, and many comments in the code derive from the Encoding Standard https://encoding.spec.whatwg.org/</p> <p>Otherwise, the code of this repository is released under the Unlicense license and is also dual-licensed under an Apache 2.0 license. Both are included below.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/text-encoding/LICENSE/#unlicense","title":"Unlicense","text":"<p>This is free and unencumbered software released into the public domain.</p> <p>Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.</p> <p>In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p> <p>For more information, please refer to http://unlicense.org/</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bson/vendor/text-encoding/LICENSE/#apache-20-license","title":"Apache 2.0 License","text":"<pre><code>                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/\n</code></pre> <p>TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION</p> <ol> <li> <p>Definitions.</p> <p>\"License\" shall mean the terms and conditions for use, reproduction,   and distribution as defined by Sections 1 through 9 of this document.</p> <p>\"Licensor\" shall mean the copyright owner or entity authorized by   the copyright owner that is granting the License.</p> <p>\"Legal Entity\" shall mean the union of the acting entity and all   other entities that control, are controlled by, or are under common   control with that entity. For the purposes of this definition,   \"control\" means (i) the power, direct or indirect, to cause the   direction or management of such entity, whether by contract or   otherwise, or (ii) ownership of fifty percent (50%) or more of the   outstanding shares, or (iii) beneficial ownership of such entity.</p> <p>\"You\" (or \"Your\") shall mean an individual or Legal Entity   exercising permissions granted by this License.</p> <p>\"Source\" form shall mean the preferred form for making modifications,   including but not limited to software source code, documentation   source, and configuration files.</p> <p>\"Object\" form shall mean any form resulting from mechanical   transformation or translation of a Source form, including but   not limited to compiled object code, generated documentation,   and conversions to other media types.</p> <p>\"Work\" shall mean the work of authorship, whether in Source or   Object form, made available under the License, as indicated by a   copyright notice that is included in or attached to the work   (an example is provided in the Appendix below).</p> <p>\"Derivative Works\" shall mean any work, whether in Source or Object   form, that is based on (or derived from) the Work and for which the   editorial revisions, annotations, elaborations, or other modifications   represent, as a whole, an original work of authorship. For the purposes   of this License, Derivative Works shall not include works that remain   separable from, or merely link (or bind by name) to the interfaces of,   the Work and Derivative Works thereof.</p> <p>\"Contribution\" shall mean any work of authorship, including   the original version of the Work and any modifications or additions   to that Work or Derivative Works thereof, that is intentionally   submitted to Licensor for inclusion in the Work by the copyright owner   or by an individual or Legal Entity authorized to submit on behalf of   the copyright owner. For the purposes of this definition, \"submitted\"   means any form of electronic, verbal, or written communication sent   to the Licensor or its representatives, including but not limited to   communication on electronic mailing lists, source code control systems,   and issue tracking systems that are managed by, or on behalf of, the   Licensor for the purpose of discussing and improving the Work, but   excluding communication that is conspicuously marked or otherwise   designated in writing by the copyright owner as \"Not a Contribution.\"</p> <p>\"Contributor\" shall mean Licensor and any individual or Legal Entity   on behalf of whom a Contribution has been received by Licensor and   subsequently incorporated within the Work.</p> </li> <li> <p>Grant of Copyright License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       copyright license to reproduce, prepare Derivative Works of,       publicly display, publicly perform, sublicense, and distribute the       Work and such Derivative Works in Source or Object form.</p> </li> <li> <p>Grant of Patent License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       (except as stated in this section) patent license to make, have made,       use, offer to sell, sell, import, and otherwise transfer the Work,       where such license applies only to those patent claims licensable       by such Contributor that are necessarily infringed by their       Contribution(s) alone or by combination of their Contribution(s)       with the Work to which such Contribution(s) was submitted. If You       institute patent litigation against any entity (including a       cross-claim or counterclaim in a lawsuit) alleging that the Work       or a Contribution incorporated within the Work constitutes direct       or contributory patent infringement, then any patent licenses       granted to You under this License for that Work shall terminate       as of the date such litigation is filed.</p> </li> <li> <p>Redistribution. You may reproduce and distribute copies of the       Work or Derivative Works thereof in any medium, with or without       modifications, and in Source or Object form, provided that You       meet the following conditions:</p> <p>(a) You must give any other recipients of the Work or       Derivative Works a copy of this License; and</p> <p>(b) You must cause any modified files to carry prominent notices       stating that You changed the files; and</p> <p>(c) You must retain, in the Source form of any Derivative Works       that You distribute, all copyright, patent, trademark, and       attribution notices from the Source form of the Work,       excluding those notices that do not pertain to any part of       the Derivative Works; and</p> <p>(d) If the Work includes a \"NOTICE\" text file as part of its       distribution, then any Derivative Works that You distribute must       include a readable copy of the attribution notices contained       within such NOTICE file, excluding those notices that do not       pertain to any part of the Derivative Works, in at least one       of the following places: within a NOTICE text file distributed       as part of the Derivative Works; within the Source form or       documentation, if provided along with the Derivative Works; or,       within a display generated by the Derivative Works, if and       wherever such third-party notices normally appear. The contents       of the NOTICE file are for informational purposes only and       do not modify the License. You may add Your own attribution       notices within Derivative Works that You distribute, alongside       or as an addendum to the NOTICE text from the Work, provided       that such additional attribution notices cannot be construed       as modifying the License.</p> <p>You may add Your own copyright statement to Your modifications and   may provide additional or different license terms and conditions   for use, reproduction, or distribution of Your modifications, or   for any such Derivative Works as a whole, provided Your use,   reproduction, and distribution of the Work otherwise complies with   the conditions stated in this License.</p> </li> <li> <p>Submission of Contributions. Unless You explicitly state otherwise,       any Contribution intentionally submitted for inclusion in the Work       by You to the Licensor shall be under the terms and conditions of       this License, without any additional terms or conditions.       Notwithstanding the above, nothing herein shall supersede or modify       the terms of any separate license agreement you may have executed       with Licensor regarding such Contributions.</p> </li> <li> <p>Trademarks. This License does not grant permission to use the trade       names, trademarks, service marks, or product names of the Licensor,       except as required for reasonable and customary use in describing the       origin of the Work and reproducing the content of the NOTICE file.</p> </li> <li> <p>Disclaimer of Warranty. Unless required by applicable law or       agreed to in writing, Licensor provides the Work (and each       Contributor provides its Contributions) on an \"AS IS\" BASIS,       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or       implied, including, without limitation, any warranties or conditions       of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A       PARTICULAR PURPOSE. You are solely responsible for determining the       appropriateness of using or redistributing the Work and assume any       risks associated with Your exercise of permissions under this License.</p> </li> <li> <p>Limitation of Liability. In no event and under no legal theory,       whether in tort (including negligence), contract, or otherwise,       unless required by applicable law (such as deliberate and grossly       negligent acts) or agreed to in writing, shall any Contributor be       liable to You for damages, including any direct, indirect, special,       incidental, or consequential damages of any character arising as a       result of this License or out of the use or inability to use the       Work (including but not limited to damages for loss of goodwill,       work stoppage, computer failure or malfunction, or any and all       other commercial damages or losses), even if such Contributor       has been advised of the possibility of such damages.</p> </li> <li> <p>Accepting Warranty or Additional Liability. While redistributing       the Work or Derivative Works thereof, You may choose to offer,       and charge a fee for, acceptance of support, warranty, indemnity,       or other liability obligations and/or rights consistent with this       License. However, in accepting such obligations, You may act only       on Your own behalf and on Your sole responsibility, not on behalf       of any other Contributor, and only if You agree to indemnify,       defend, and hold each Contributor harmless for any liability       incurred by, or claims asserted against, such Contributor by reason       of your accepting any such warranty or additional liability.</p> </li> </ol> <p>END OF TERMS AND CONDITIONS</p> <p>APPENDIX: How to apply the Apache License to your work.</p> <pre><code>  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.\n</code></pre> <p>Copyright [yyyy] [name of copyright owner]</p> <p>Licensed under the Apache License, Version 2.0 (the \"License\");    you may not use this file except in compliance with the License.    You may obtain a copy of the License at</p> <pre><code>   http://www.apache.org/licenses/LICENSE-2.0\n</code></pre> <p>Unless required by applicable law or agreed to in writing, software    distributed under the License is distributed on an \"AS IS\" BASIS,    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.    See the License for the specific language governing permissions and    limitations under the License.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/buffer-equal-constant-time/","title":"buffer-equal-constant-time","text":"<p>Constant-time <code>Buffer</code> comparison for node.js.  Should work with browserify too.</p> <p></p> <pre><code>  npm install buffer-equal-constant-time\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/buffer-equal-constant-time/#usage","title":"Usage","text":"<pre><code>  var bufferEq = require('buffer-equal-constant-time');\n\n  var a = new Buffer('asdf');\n  var b = new Buffer('asdf');\n  if (bufferEq(a,b)) {\n    // the same!\n  } else {\n    // different in at least one byte!\n  }\n</code></pre> <p>If you'd like to install an <code>.equal()</code> method onto the node.js <code>Buffer</code> and <code>SlowBuffer</code> prototypes:</p> <pre><code>  require('buffer-equal-constant-time').install();\n\n  var a = new Buffer('asdf');\n  var b = new Buffer('asdf');\n  if (a.equal(b)) {\n    // the same!\n  } else {\n    // different in at least one byte!\n  }\n</code></pre> <p>To get rid of the installed <code>.equal()</code> method, call <code>.restore()</code>:</p> <pre><code>  require('buffer-equal-constant-time').restore();\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/buffer-equal-constant-time/#legal","title":"Legal","text":"<p>\u00a9 2013 GoInstant Inc., a salesforce.com company</p> <p>Licensed under the BSD 3-clause license.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/","title":"3.1.2 / 2022-01-27","text":"<ul> <li>Fix return value for un-parsable strings</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#311-2021-11-15","title":"3.1.1 / 2021-11-15","text":"<ul> <li>Fix \"thousandsSeparator\" incorrecting formatting fractional part</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#310-2019-01-22","title":"3.1.0 / 2019-01-22","text":"<ul> <li>Add petabyte (<code>pb</code>) support</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#300-2017-08-31","title":"3.0.0 / 2017-08-31","text":"<ul> <li>Change \"kB\" to \"KB\" in format output</li> <li>Remove support for Node.js 0.6</li> <li>Remove support for ComponentJS</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#250-2017-03-24","title":"2.5.0 / 2017-03-24","text":"<ul> <li>Add option \"unit\"</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#240-2016-06-01","title":"2.4.0 / 2016-06-01","text":"<ul> <li>Add option \"unitSeparator\"</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#230-2016-02-15","title":"2.3.0 / 2016-02-15","text":"<ul> <li>Drop partial bytes on all parsed units</li> <li>Fix non-finite numbers to <code>.format</code> to return <code>null</code></li> <li>Fix parsing byte string that looks like hex</li> <li>perf: hoist regular expressions</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#220-2015-11-13","title":"2.2.0 / 2015-11-13","text":"<ul> <li>add option \"decimalPlaces\"</li> <li>add option \"fixedDecimals\"</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#210-2015-05-21","title":"2.1.0 / 2015-05-21","text":"<ul> <li>add <code>.format</code> export</li> <li>add <code>.parse</code> export</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#202-2015-05-20","title":"2.0.2 / 2015-05-20","text":"<ul> <li>remove map recreation</li> <li>remove unnecessary object construction</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#201-2015-05-07","title":"2.0.1 / 2015-05-07","text":"<ul> <li>fix browserify require</li> <li>remove node.extend dependency</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#200-2015-04-12","title":"2.0.0 / 2015-04-12","text":"<ul> <li>add option \"case\"</li> <li>add option \"thousandsSeparator\"</li> <li>return \"null\" on invalid parse input</li> <li>support proper round-trip: bytes(bytes(num)) === num</li> <li>units no longer case sensitive when parsing</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#100-2014-05-05","title":"1.0.0 / 2014-05-05","text":"<ul> <li>add negative support. fixes #6</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#030-2014-03-19","title":"0.3.0 / 2014-03-19","text":"<ul> <li>added terabyte support</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#021-2013-04-01","title":"0.2.1 / 2013-04-01","text":"<ul> <li>add .component</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#020-2012-10-28","title":"0.2.0 / 2012-10-28","text":"<ul> <li>bytes(200).should.eql('200b')</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/History/#010-2012-07-04","title":"0.1.0 / 2012-07-04","text":"<ul> <li>add bytes to string conversion [yields]</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/Readme/","title":"Bytes utility","text":"<p>Utility to parse a string bytes (ex: <code>1TB</code>) to bytes (<code>1099511627776</code>) and vice-versa.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/Readme/#installation","title":"Installation","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install bytes\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/Readme/#usage","title":"Usage","text":"<pre><code>var bytes = require('bytes');\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/Readme/#bytesnumberstring-value-options-numberstringnull","title":"bytes(number\uff5cstring value, [options]): number\uff5cstring\uff5cnull","text":"<p>Default export function. Delegates to either <code>bytes.format</code> or <code>bytes.parse</code> based on the type of <code>value</code>.</p> <p>Arguments</p> Name Type Description value <code>number</code>\uff5c<code>string</code> Number value to format or string value to parse options <code>Object</code> Conversion options for <code>format</code> <p>Returns</p> Name Type Description results <code>string</code>\uff5c<code>number</code>\uff5c<code>null</code> Return null upon error. Numeric value in bytes, or string value otherwise. <p>Example</p> <pre><code>bytes(1024);\n// output: '1KB'\n\nbytes('1KB');\n// output: 1024\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/Readme/#bytesformatnumber-value-options-stringnull","title":"bytes.format(number value, [options]): string\uff5cnull","text":"<p>Format the given value in bytes into a string. If the value is negative, it is kept as such. If it is a float, it is  rounded.</p> <p>Arguments</p> Name Type Description value <code>number</code> Value in bytes options <code>Object</code> Conversion options <p>Options</p> Property Type Description decimalPlaces <code>number</code>\uff5c<code>null</code> Maximum number of decimal places to include in output. Default value to <code>2</code>. fixedDecimals <code>boolean</code>\uff5c<code>null</code> Whether to always display the maximum number of decimal places. Default value to <code>false</code> thousandsSeparator <code>string</code>\uff5c<code>null</code> Example of values: <code>' '</code>, <code>','</code> and <code>'.'</code>... Default value to <code>''</code>. unit <code>string</code>\uff5c<code>null</code> The unit in which the result will be returned (B/KB/MB/GB/TB). Default value to <code>''</code> (which means auto detect). unitSeparator <code>string</code>\uff5c<code>null</code> Separator to use between number and unit. Default value to <code>''</code>. <p>Returns</p> Name Type Description results <code>string</code>\uff5c<code>null</code> Return null upon error. String value otherwise. <p>Example</p> <pre><code>bytes.format(1024);\n// output: '1KB'\n\nbytes.format(1000);\n// output: '1000B'\n\nbytes.format(1000, {thousandsSeparator: ' '});\n// output: '1 000B'\n\nbytes.format(1024 * 1.7, {decimalPlaces: 0});\n// output: '2KB'\n\nbytes.format(1024, {unitSeparator: ' '});\n// output: '1 KB'\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/Readme/#bytesparsestringnumber-value-numbernull","title":"bytes.parse(string\uff5cnumber value): number\uff5cnull","text":"<p>Parse the string value into an integer in bytes. If no unit is given, or <code>value</code> is a number, it is assumed the value is in bytes.</p> <p>Supported units and abbreviations are as follows and are case-insensitive:</p> <ul> <li><code>b</code> for bytes</li> <li><code>kb</code> for kilobytes</li> <li><code>mb</code> for megabytes</li> <li><code>gb</code> for gigabytes</li> <li><code>tb</code> for terabytes</li> <li><code>pb</code> for petabytes</li> </ul> <p>The units are in powers of two, not ten. This means 1kb = 1024b according to this parser.</p> <p>Arguments</p> Name Type Description value <code>string</code>\uff5c<code>number</code> String to parse, or number in bytes. <p>Returns</p> Name Type Description results <code>number</code>\uff5c<code>null</code> Return null upon error. Value in bytes otherwise. <p>Example</p> <pre><code>bytes.parse('1KB');\n// output: 1024\n\nbytes.parse('1024');\n// output: 1024\n\nbytes.parse(1024);\n// output: 1024\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/bytes/Readme/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bind-apply-helpers/","title":"call-bind-apply-helpers","text":"<p>Helper functions around Function call/apply/bind, for use in <code>call-bind</code>.</p> <p>The only packages that should likely ever use this package directly are <code>call-bind</code> and <code>get-intrinsic</code>. Please use <code>call-bind</code> unless you have a very good reason not to.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bind-apply-helpers/#getting-started","title":"Getting started","text":"<pre><code>npm install --save call-bind-apply-helpers\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bind-apply-helpers/#usageexamples","title":"Usage/Examples","text":"<pre><code>const assert = require('assert');\nconst callBindBasic = require('call-bind-apply-helpers');\n\nfunction f(a, b) {\n    assert.equal(this, 1);\n    assert.equal(a, 2);\n    assert.equal(b, 3);\n    assert.equal(arguments.length, 2);\n}\n\nconst fBound = callBindBasic([f, 1]);\n\ndelete Function.prototype.call;\ndelete Function.prototype.bind;\n\nfBound(2, 3);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bind-apply-helpers/#tests","title":"Tests","text":"<p>Clone the repo, <code>npm install</code>, and run <code>npm test</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bind-apply-helpers/CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bind-apply-helpers/CHANGELOG/#v102-2025-02-12","title":"v1.0.2 - 2025-02-12","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/call-bind-apply-helpers/CHANGELOG/#commits","title":"Commits","text":"<ul> <li>[types] improve inferred types <code>e6f9586</code></li> <li>[Dev Deps] update <code>@arethetypeswrong/cli</code>, <code>@ljharb/tsconfig</code>, <code>@types/tape</code>, <code>es-value-fixtures</code>, <code>for-each</code>, <code>has-strict-mode</code>, <code>object-inspect</code> <code>e43d540</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bind-apply-helpers/CHANGELOG/#v101-2024-12-08","title":"v1.0.1 - 2024-12-08","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/call-bind-apply-helpers/CHANGELOG/#commits_1","title":"Commits","text":"<ul> <li>[types] <code>reflectApply</code>: fix types <code>4efc396</code></li> <li>[Fix] <code>reflectApply</code>: oops, Reflect is not a function <code>83cc739</code></li> <li>[Dev Deps] update <code>@arethetypeswrong/cli</code> <code>80bd5d3</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bind-apply-helpers/CHANGELOG/#v100-2024-12-05","title":"v1.0.0 - 2024-12-05","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/call-bind-apply-helpers/CHANGELOG/#commits_2","title":"Commits","text":"<ul> <li>Initial implementation, tests, readme <code>7879629</code></li> <li>Initial commit <code>3f1dc16</code></li> <li>npm init <code>081df04</code></li> <li>Only apps should have lockfiles <code>5b9ca0f</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bound/","title":"call-bound","text":"<p>Robust call-bound JavaScript intrinsics, using <code>call-bind</code> and <code>get-intrinsic</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bound/#getting-started","title":"Getting started","text":"<pre><code>npm install --save call-bound\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bound/#usageexamples","title":"Usage/Examples","text":"<pre><code>const assert = require('assert');\nconst callBound = require('call-bound');\n\nconst slice = callBound('Array.prototype.slice');\n\ndelete Function.prototype.call;\ndelete Function.prototype.bind;\ndelete Array.prototype.slice;\n\nassert.deepEqual(slice([1, 2, 3, 4], 1, -1), [2, 3]);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bound/#tests","title":"Tests","text":"<p>Clone the repo, <code>npm install</code>, and run <code>npm test</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bound/CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bound/CHANGELOG/#v104-2025-03-03","title":"v1.0.4 - 2025-03-03","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/call-bound/CHANGELOG/#commits","title":"Commits","text":"<ul> <li>[types] improve types <code>e648922</code></li> <li>[Dev Deps] update <code>@arethetypeswrong/cli</code>, <code>@ljharb/tsconfig</code>, <code>@types/tape</code>, <code>es-value-fixtures</code>, <code>for-each</code>, <code>has-strict-mode</code>, <code>object-inspect</code> <code>a42a5eb</code></li> <li>[Deps] update <code>call-bind-apply-helpers</code>, <code>get-intrinsic</code> <code>f529eac</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bound/CHANGELOG/#v103-2024-12-15","title":"v1.0.3 - 2024-12-15","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/call-bound/CHANGELOG/#commits_1","title":"Commits","text":"<ul> <li>[Refactor] use <code>call-bind-apply-helpers</code> instead of <code>call-bind</code> <code>5e0b134</code></li> <li>[Deps] update <code>get-intrinsic</code> <code>41fc967</code></li> <li>[readme] fix example <code>79a0137</code></li> <li>[meta] add <code>sideEffects</code> flag <code>08b07be</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bound/CHANGELOG/#v102-2024-12-10","title":"v1.0.2 - 2024-12-10","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/call-bound/CHANGELOG/#commits_2","title":"Commits","text":"<ul> <li>[Dev Deps] update <code>@arethetypeswrong/cli</code>, <code>@ljharb/tsconfig</code>, <code>gopd</code> <code>e6a5ffe</code></li> <li>[Deps] update <code>call-bind</code>, <code>get-intrinsic</code> <code>2aeb5b5</code></li> <li>[types] improve return type <code>1a0c9fe</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/call-bound/CHANGELOG/#v101-2024-12-05","title":"v1.0.1 - 2024-12-05","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/call-bound/CHANGELOG/#commits_3","title":"Commits","text":"<ul> <li>Initial implementation, tests, readme, types <code>6d94121</code></li> <li>Initial commit <code>0eae867</code></li> <li>npm init <code>71b2479</code></li> <li>Only apps should have lockfiles <code>c3754a9</code></li> <li>[actions] skip <code>npm ls</code> in node &lt; 10 <code>74275a5</code></li> <li>[Dev Deps] add missing peer dep <code>1354de8</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/","title":"Chokidar","text":"<p>Minimal and efficient cross-platform file watching library</p> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/#why","title":"Why?","text":"<p>Node.js <code>fs.watch</code>:</p> <ul> <li>Doesn't report filenames on MacOS.</li> <li>Doesn't report events at all when using editors like Sublime on MacOS.</li> <li>Often reports events twice.</li> <li>Emits most changes as <code>rename</code>.</li> <li>Does not provide an easy way to recursively watch file trees.</li> <li>Does not support recursive watching on Linux.</li> </ul> <p>Node.js <code>fs.watchFile</code>:</p> <ul> <li>Almost as bad at event handling.</li> <li>Also does not provide any recursive watching.</li> <li>Results in high CPU utilization.</li> </ul> <p>Chokidar resolves these problems.</p> <p>Initially made for Brunch (an ultra-swift web app build tool), it is now used in Microsoft's Visual Studio Code, gulp, karma, PM2, browserify, webpack, BrowserSync, and many others. It has proven itself in production environments.</p> <p>Version 3 is out! Check out our blog post about it: Chokidar 3: How to save 32TB of traffic every week</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/#how","title":"How?","text":"<p>Chokidar does still rely on the Node.js core <code>fs</code> module, but when using <code>fs.watch</code> and <code>fs.watchFile</code> for watching, it normalizes the events it receives, often checking for truth by getting file stats and/or dir contents.</p> <p>On MacOS, chokidar by default uses a native extension exposing the Darwin <code>FSEvents</code> API. This provides very efficient recursive watching compared with implementations like <code>kqueue</code> available on most *nix platforms. Chokidar still does have to do some work to normalize the events received that way as well.</p> <p>On most other platforms, the <code>fs.watch</code>-based implementation is the default, which avoids polling and keeps CPU usage down. Be advised that chokidar will initiate watchers recursively for everything within scope of the paths that have been specified, so be judicious about not wasting system resources by watching much more than needed.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/#getting-started","title":"Getting started","text":"<p>Install with npm:</p> <pre><code>npm install chokidar\n</code></pre> <p>Then <code>require</code> and use it in your code:</p> <pre><code>const chokidar = require('chokidar');\n\n// One-liner for current directory\nchokidar.watch('.').on('all', (event, path) =&gt; {\n  console.log(event, path);\n});\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/#api","title":"API","text":"<pre><code>// Example of a more typical implementation structure\n\n// Initialize watcher.\nconst watcher = chokidar.watch('file, dir, glob, or array', {\n  ignored: /(^|[\\/\\\\])\\../, // ignore dotfiles\n  persistent: true\n});\n\n// Something to use when events are received.\nconst log = console.log.bind(console);\n// Add event listeners.\nwatcher\n  .on('add', path =&gt; log(`File ${path} has been added`))\n  .on('change', path =&gt; log(`File ${path} has been changed`))\n  .on('unlink', path =&gt; log(`File ${path} has been removed`));\n\n// More possible events.\nwatcher\n  .on('addDir', path =&gt; log(`Directory ${path} has been added`))\n  .on('unlinkDir', path =&gt; log(`Directory ${path} has been removed`))\n  .on('error', error =&gt; log(`Watcher error: ${error}`))\n  .on('ready', () =&gt; log('Initial scan complete. Ready for changes'))\n  .on('raw', (event, path, details) =&gt; { // internal\n    log('Raw event info:', event, path, details);\n  });\n\n// 'add', 'addDir' and 'change' events also receive stat() results as second\n// argument when available: https://nodejs.org/api/fs.html#fs_class_fs_stats\nwatcher.on('change', (path, stats) =&gt; {\n  if (stats) console.log(`File ${path} changed size to ${stats.size}`);\n});\n\n// Watch new files.\nwatcher.add('new-file');\nwatcher.add(['new-file-2', 'new-file-3', '**/other-file*']);\n\n// Get list of actual paths being watched on the filesystem\nvar watchedPaths = watcher.getWatched();\n\n// Un-watch some files.\nawait watcher.unwatch('new-file*');\n\n// Stop watching.\n// The method is async!\nwatcher.close().then(() =&gt; console.log('closed'));\n\n// Full list of options. See below for descriptions.\n// Do not use this example!\nchokidar.watch('file', {\n  persistent: true,\n\n  ignored: '*.txt',\n  ignoreInitial: false,\n  followSymlinks: true,\n  cwd: '.',\n  disableGlobbing: false,\n\n  usePolling: false,\n  interval: 100,\n  binaryInterval: 300,\n  alwaysStat: false,\n  depth: 99,\n  awaitWriteFinish: {\n    stabilityThreshold: 2000,\n    pollInterval: 100\n  },\n\n  ignorePermissionErrors: false,\n  atomic: true // or a custom 'atomicity delay', in milliseconds (default 100)\n});\n</code></pre> <p><code>chokidar.watch(paths, [options])</code></p> <ul> <li><code>paths</code> (string or array of strings). Paths to files, dirs to be watched recursively, or glob patterns.<ul> <li>Note: globs must not contain windows separators (<code>\\</code>), because that's how they work by the standard \u2014 you'll need to replace them with forward slashes (<code>/</code>).</li> <li>Note 2: for additional glob documentation, check out low-level library: picomatch.</li> </ul> </li> <li><code>options</code> (object) Options object as defined below:</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/#persistence","title":"Persistence","text":"<ul> <li><code>persistent</code> (default: <code>true</code>). Indicates whether the process should continue to run as long as files are being watched. If set to <code>false</code> when using <code>fsevents</code> to watch, no more events will be emitted after <code>ready</code>, even if the process continues to run.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/#path-filtering","title":"Path filtering","text":"<ul> <li><code>ignored</code> (anymatch-compatible definition) Defines files/paths to be ignored. The whole relative or absolute path is tested, not just filename. If a function with two arguments is provided, it gets called twice per path - once with a single argument (the path), second time with two arguments (the path and the <code>fs.Stats</code> object of that path).</li> <li><code>ignoreInitial</code> (default: <code>false</code>). If set to <code>false</code> then <code>add</code>/<code>addDir</code> events are also emitted for matching paths while instantiating the watching as chokidar discovers these file paths (before the <code>ready</code> event).</li> <li><code>followSymlinks</code> (default: <code>true</code>). When <code>false</code>, only the symlinks themselves will be watched for changes instead of following the link references and bubbling events through the link's path.</li> <li><code>cwd</code> (no default). The base directory from which watch <code>paths</code> are to be derived. Paths emitted with events will be relative to this.</li> <li><code>disableGlobbing</code> (default: <code>false</code>). If set to <code>true</code> then the strings passed to <code>.watch()</code> and <code>.add()</code> are treated as literal path names, even if they look like globs.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/#performance","title":"Performance","text":"<ul> <li><code>usePolling</code> (default: <code>false</code>). Whether to use fs.watchFile (backed by polling), or fs.watch. If polling leads to high CPU utilization, consider setting this to <code>false</code>. It is typically necessary to set this to <code>true</code> to successfully watch files over a network, and it may be necessary to successfully watch files in other non-standard situations. Setting to <code>true</code> explicitly on MacOS overrides the <code>useFsEvents</code> default. You may also set the CHOKIDAR_USEPOLLING env variable to true (1) or false (0) in order to override this option.</li> <li>Polling-specific settings (effective when <code>usePolling: true</code>)</li> <li><code>interval</code> (default: <code>100</code>). Interval of file system polling, in milliseconds. You may also     set the CHOKIDAR_INTERVAL env variable to override this option.</li> <li><code>binaryInterval</code> (default: <code>300</code>). Interval of file system   polling for binary files.   (see list of binary extensions)</li> <li><code>useFsEvents</code> (default: <code>true</code> on MacOS). Whether to use the <code>fsevents</code> watching interface if available. When set to <code>true</code> explicitly and <code>fsevents</code> is available this supercedes the <code>usePolling</code> setting. When set to <code>false</code> on MacOS, <code>usePolling: true</code> becomes the default.</li> <li><code>alwaysStat</code> (default: <code>false</code>). If relying upon the <code>fs.Stats</code> object that may get passed with <code>add</code>, <code>addDir</code>, and <code>change</code> events, set this to <code>true</code> to ensure it is provided even in cases where it wasn't already available from the underlying watch events.</li> <li><code>depth</code> (default: <code>undefined</code>). If set, limits how many levels of subdirectories will be traversed.</li> <li><code>awaitWriteFinish</code> (default: <code>false</code>). By default, the <code>add</code> event will fire when a file first appears on disk, before the entire file has been written. Furthermore, in some cases some <code>change</code> events will be emitted while the file is being written. In some cases, especially when watching for large files there will be a need to wait for the write operation to finish before responding to a file creation or modification. Setting <code>awaitWriteFinish</code> to <code>true</code> (or a truthy value) will poll file size, holding its <code>add</code> and <code>change</code> events until the size does not change for a configurable amount of time. The appropriate duration setting is heavily dependent on the OS and hardware. For accurate detection this parameter should be relatively high, making file watching much less responsive. Use with caution.</li> <li><code>options.awaitWriteFinish</code> can be set to an object in order to adjust   timing params:</li> <li><code>awaitWriteFinish.stabilityThreshold</code> (default: 2000). Amount of time in   milliseconds for a file size to remain constant before emitting its event.</li> <li><code>awaitWriteFinish.pollInterval</code> (default: 100). File size polling interval, in milliseconds.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/#errors","title":"Errors","text":"<ul> <li><code>ignorePermissionErrors</code> (default: <code>false</code>). Indicates whether to watch files that don't have read permissions if possible. If watching fails due to <code>EPERM</code> or <code>EACCES</code> with this set to <code>true</code>, the errors will be suppressed silently.</li> <li><code>atomic</code> (default: <code>true</code> if <code>useFsEvents</code> and <code>usePolling</code> are <code>false</code>). Automatically filters out artifacts that occur when using editors that use \"atomic writes\" instead of writing directly to the source file. If a file is re-added within 100 ms of being deleted, Chokidar emits a <code>change</code> event rather than <code>unlink</code> then <code>add</code>. If the default of 100 ms does not work well for you, you can override it by setting <code>atomic</code> to a custom value, in milliseconds.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/#methods-events","title":"Methods &amp; Events","text":"<p><code>chokidar.watch()</code> produces an instance of <code>FSWatcher</code>. Methods of <code>FSWatcher</code>:</p> <ul> <li><code>.add(path / paths)</code>: Add files, directories, or glob patterns for tracking. Takes an array of strings or just one string.</li> <li><code>.on(event, callback)</code>: Listen for an FS event. Available events: <code>add</code>, <code>addDir</code>, <code>change</code>, <code>unlink</code>, <code>unlinkDir</code>, <code>ready</code>, <code>raw</code>, <code>error</code>. Additionally <code>all</code> is available which gets emitted with the underlying event name and path for every event other than <code>ready</code>, <code>raw</code>, and <code>error</code>.  <code>raw</code> is internal, use it carefully.</li> <li><code>.unwatch(path / paths)</code>: Stop watching files, directories, or glob patterns. Takes an array of strings or just one string.</li> <li><code>.close()</code>: async Removes all listeners from watched files. Asynchronous, returns Promise. Use with <code>await</code> to ensure bugs don't happen.</li> <li><code>.getWatched()</code>: Returns an object representing all the paths on the file system being watched by this <code>FSWatcher</code> instance. The object's keys are all the directories (using absolute paths unless the <code>cwd</code> option was used), and the values are arrays of the names of the items contained in each directory.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/#cli","title":"CLI","text":"<p>If you need a CLI interface for your file watching, check out chokidar-cli, allowing you to execute a command on each change, or get a stdio stream of change events.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/#install-troubleshooting","title":"Install Troubleshooting","text":"<ul> <li><code>npm WARN optional dep failed, continuing fsevents@n.n.n</code></li> <li> <p>This message is normal part of how <code>npm</code> handles optional dependencies and is     not indicative of a problem. Even if accompanied by other related error messages,     Chokidar should function properly.</p> </li> <li> <p><code>TypeError: fsevents is not a constructor</code></p> </li> <li> <p>Update chokidar by doing <code>rm -rf node_modules package-lock.json yarn.lock &amp;&amp; npm install</code>, or update your dependency that uses chokidar.</p> </li> <li> <p>Chokidar is producing <code>ENOSP</code> error on Linux, like this:</p> </li> <li><code>bash: cannot set terminal process group (-1): Inappropriate ioctl for device bash: no job control in this shell</code> <code>Error: watch /home/ ENOSPC</code></li> <li>This means Chokidar ran out of file handles and you'll need to increase their count by executing the following command in Terminal:   <code>echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf &amp;&amp; sudo sysctl -p</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/#changelog","title":"Changelog","text":"<p>For more detailed changelog, see <code>full_changelog.md</code>. - v3.5 (Jan 6, 2021): Support for ARM Macs with Apple Silicon. Fixes for deleted symlinks. - v3.4 (Apr 26, 2020): Support for directory-based symlinks. Fixes for macos file replacement. - v3.3 (Nov 2, 2019): <code>FSWatcher#close()</code> method became async. That fixes IO race conditions related to close method. - v3.2 (Oct 1, 2019): Improve Linux RAM usage by 50%. Race condition fixes. Windows glob fixes. Improve stability by using tight range of dependency versions. - v3.1 (Sep 16, 2019): dotfiles are no longer filtered out by default. Use <code>ignored</code> option if needed. Improve initial Linux scan time by 50%. - v3 (Apr 30, 2019): massive CPU &amp; RAM consumption improvements; reduces deps / package size by a factor of 17x and bumps Node.js requirement to v8.16 and higher. - v2 (Dec 29, 2017): Globs are now posix-style-only; without windows support. Tons of bugfixes. - v1 (Apr 7, 2015): Glob support, symlink support, tons of bugfixes. Node 0.8+ is supported - v0.1 (Apr 20, 2012): Initial release, extracted from Brunch</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/#also","title":"Also","text":"<p>Why was chokidar named this way? What's the meaning behind it?</p> <p>Chowkidar is a transliteration of a Hindi word meaning 'watchman, gatekeeper', \u091a\u094c\u0915\u0940\u0926\u093e\u0930. This ultimately comes from Sanskrit _ \u091a\u0924\u0941\u0937\u094d\u0915_ (crossway, quadrangle, consisting-of-four). This word is also used in other languages like Urdu as (\u0686\u0648\u06a9\u06cc\u062f\u0627\u0631) which is widely used in Pakistan and India. </p>"},{"location":"system-desing/crud-app/JS/server/node_modules/chokidar/#license","title":"License","text":"<p>MIT (c) Paul Miller (https://paulmillr.com), see LICENSE file.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/concat-map/","title":"concat-map","text":"<p>Concatenative mapdashery.</p> <p></p> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/concat-map/#example","title":"example","text":"<pre><code>var concatMap = require('concat-map');\nvar xs = [ 1, 2, 3, 4, 5, 6 ];\nvar ys = concatMap(xs, function (x) {\n    return x % 2 ? [ x - 0.1, x, x + 0.1 ] : [];\n});\nconsole.dir(ys);\n</code></pre> <pre><code>[ 0.9, 1, 1.1, 2.9, 3, 3.1, 4.9, 5, 5.1 ]\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/concat-map/#methods","title":"methods","text":"<pre><code>var concatMap = require('concat-map')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/concat-map/#concatmapxs-fn","title":"concatMap(xs, fn)","text":"<p>Return an array of concatenated elements by calling <code>fn(x, i)</code> for each element <code>x</code> and each index <code>i</code> in the array <code>xs</code>.</p> <p>When <code>fn(x, i)</code> returns an array, its result will be concatenated with the result array. If <code>fn(x, i)</code> returns anything else, that value will be pushed onto the end of the result array.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/concat-map/#install","title":"install","text":"<p>With npm do:</p> <pre><code>npm install concat-map\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/concat-map/#license","title":"license","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/concat-map/#notes","title":"notes","text":"<p>This module was written while sitting high above the ground in a tree.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/","title":"content-disposition","text":"<p>Create and parse HTTP <code>Content-Disposition</code> header</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/#installation","title":"Installation","text":"<pre><code>$ npm install content-disposition\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/#api","title":"API","text":"<pre><code>var contentDisposition = require('content-disposition')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/#contentdispositionfilename-options","title":"contentDisposition(filename, options)","text":"<p>Create an attachment <code>Content-Disposition</code> header value using the given file name, if supplied. The <code>filename</code> is optional and if no file name is desired, but you want to specify <code>options</code>, set <code>filename</code> to <code>undefined</code>.</p> <pre><code>res.setHeader('Content-Disposition', contentDisposition('\u222b maths.pdf'))\n</code></pre> <p>note HTTP headers are of the ISO-8859-1 character set. If you are writing this header through a means different from <code>setHeader</code> in Node.js, you'll want to specify the <code>'binary'</code> encoding in Node.js.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/#options","title":"Options","text":"<p><code>contentDisposition</code> accepts these properties in the options object.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/#fallback","title":"fallback","text":"<p>If the <code>filename</code> option is outside ISO-8859-1, then the file name is actually stored in a supplemental field for clients that support Unicode file names and a ISO-8859-1 version of the file name is automatically generated.</p> <p>This specifies the ISO-8859-1 file name to override the automatic generation or disables the generation all together, defaults to <code>true</code>.</p> <ul> <li>A string will specify the ISO-8859-1 file name to use in place of automatic     generation.</li> <li><code>false</code> will disable including a ISO-8859-1 file name and only include the     Unicode version (unless the file name is already ISO-8859-1).</li> <li><code>true</code> will enable automatic generation if the file name is outside ISO-8859-1.</li> </ul> <p>If the <code>filename</code> option is ISO-8859-1 and this option is specified and has a different value, then the <code>filename</code> option is encoded in the extended field and this set as the fallback field, even though they are both ISO-8859-1.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/#type","title":"type","text":"<p>Specifies the disposition type, defaults to <code>\"attachment\"</code>. This can also be <code>\"inline\"</code>, or any other value (all values except inline are treated like <code>attachment</code>, but can convey additional information if both parties agree to it). The type is normalized to lower-case.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/#contentdispositionparsestring","title":"contentDisposition.parse(string)","text":"<pre><code>var disposition = contentDisposition.parse('attachment; filename=\"EURO rates.txt\"; filename*=UTF-8\\'\\'%e2%82%ac%20rates.txt')\n</code></pre> <p>Parse a <code>Content-Disposition</code> header string. This automatically handles extended (\"Unicode\") parameters by decoding them and providing them under the standard parameter name. This will return an object with the following properties (examples are shown for the string <code>'attachment; filename=\"EURO rates.txt\"; filename*=UTF-8\\'\\'%e2%82%ac%20rates.txt'</code>):</p> <ul> <li> <p><code>type</code>: The disposition type (always lower case). Example: <code>'attachment'</code></p> </li> <li> <p><code>parameters</code>: An object of the parameters in the disposition (name of parameter    always lower case and extended versions replace non-extended versions). Example:    <code>{filename: \"\u20ac rates.txt\"}</code></p> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/#examples","title":"Examples","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/#send-a-file-for-download","title":"Send a file for download","text":"<pre><code>var contentDisposition = require('content-disposition')\nvar destroy = require('destroy')\nvar fs = require('fs')\nvar http = require('http')\nvar onFinished = require('on-finished')\n\nvar filePath = '/path/to/public/plans.pdf'\n\nhttp.createServer(function onRequest (req, res) {\n  // set headers\n  res.setHeader('Content-Type', 'application/pdf')\n  res.setHeader('Content-Disposition', contentDisposition(filePath))\n\n  // send file\n  var stream = fs.createReadStream(filePath)\n  stream.pipe(res)\n  onFinished(res, function () {\n    destroy(stream)\n  })\n})\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/#testing","title":"Testing","text":"<pre><code>$ npm test\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/#references","title":"References","text":"<ul> <li>RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1</li> <li>RFC 5987: Character Set and Language Encoding for Hypertext Transfer Protocol (HTTP) Header Field Parameters</li> <li>RFC 6266: Use of the Content-Disposition Header Field in the Hypertext Transfer Protocol (HTTP)</li> <li>Test Cases for HTTP Content-Disposition header field (RFC 6266) and the Encodings defined in RFCs 2047, 2231 and 5987</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/HISTORY/","title":"1.0.0 / 2024-08-31","text":"<ul> <li>drop node &lt;18</li> <li>allow utf8 as alias for utf-8</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/HISTORY/#054-2021-12-10","title":"0.5.4 / 2021-12-10","text":"<ul> <li>deps: safe-buffer@5.2.1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/HISTORY/#053-2018-12-17","title":"0.5.3 / 2018-12-17","text":"<ul> <li>Use <code>safe-buffer</code> for improved Buffer API</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/HISTORY/#052-2016-12-08","title":"0.5.2 / 2016-12-08","text":"<ul> <li>Fix <code>parse</code> to accept any linear whitespace character</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/HISTORY/#051-2016-01-17","title":"0.5.1 / 2016-01-17","text":"<ul> <li>perf: enable strict mode</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/HISTORY/#050-2014-10-11","title":"0.5.0 / 2014-10-11","text":"<ul> <li>Add <code>parse</code> function</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/HISTORY/#040-2014-09-21","title":"0.4.0 / 2014-09-21","text":"<ul> <li>Expand non-Unicode <code>filename</code> to the full ISO-8859-1 charset</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/HISTORY/#030-2014-09-20","title":"0.3.0 / 2014-09-20","text":"<ul> <li>Add <code>fallback</code> option</li> <li>Add <code>type</code> option</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/HISTORY/#020-2014-09-19","title":"0.2.0 / 2014-09-19","text":"<ul> <li>Reduce ambiguity of file names with hex escape in buggy browsers</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/HISTORY/#012-2014-09-19","title":"0.1.2 / 2014-09-19","text":"<ul> <li>Fix periodic invalid Unicode filename header</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/HISTORY/#011-2014-09-19","title":"0.1.1 / 2014-09-19","text":"<ul> <li>Fix invalid characters appearing in <code>filename*</code> parameter</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/HISTORY/#010-2014-09-18","title":"0.1.0 / 2014-09-18","text":"<ul> <li>Make the <code>filename</code> argument optional</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-disposition/HISTORY/#000-2014-09-18","title":"0.0.0 / 2014-09-18","text":"<ul> <li>Initial release</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/","title":"content-type","text":"<p>Create and parse HTTP Content-Type header according to RFC 7231</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/#installation","title":"Installation","text":"<pre><code>$ npm install content-type\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/#api","title":"API","text":"<pre><code>var contentType = require('content-type')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/#contenttypeparsestring","title":"contentType.parse(string)","text":"<pre><code>var obj = contentType.parse('image/svg+xml; charset=utf-8')\n</code></pre> <p>Parse a <code>Content-Type</code> header. This will return an object with the following properties (examples are shown for the string <code>'image/svg+xml; charset=utf-8'</code>):</p> <ul> <li> <p><code>type</code>: The media type (the type and subtype, always lower case).    Example: <code>'image/svg+xml'</code></p> </li> <li> <p><code>parameters</code>: An object of the parameters in the media type (name of parameter    always lower case). Example: <code>{charset: 'utf-8'}</code></p> </li> </ul> <p>Throws a <code>TypeError</code> if the string is missing or invalid.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/#contenttypeparsereq","title":"contentType.parse(req)","text":"<pre><code>var obj = contentType.parse(req)\n</code></pre> <p>Parse the <code>Content-Type</code> header from the given <code>req</code>. Short-cut for <code>contentType.parse(req.headers['content-type'])</code>.</p> <p>Throws a <code>TypeError</code> if the <code>Content-Type</code> header is missing or invalid.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/#contenttypeparseres","title":"contentType.parse(res)","text":"<pre><code>var obj = contentType.parse(res)\n</code></pre> <p>Parse the <code>Content-Type</code> header set on the given <code>res</code>. Short-cut for <code>contentType.parse(res.getHeader('content-type'))</code>.</p> <p>Throws a <code>TypeError</code> if the <code>Content-Type</code> header is missing or invalid.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/#contenttypeformatobj","title":"contentType.format(obj)","text":"<pre><code>var str = contentType.format({\n  type: 'image/svg+xml',\n  parameters: { charset: 'utf-8' }\n})\n</code></pre> <p>Format an object into a <code>Content-Type</code> header. This will return a string of the content type for the given object with the following properties (examples are shown that produce the string <code>'image/svg+xml; charset=utf-8'</code>):</p> <ul> <li> <p><code>type</code>: The media type (will be lower-cased). Example: <code>'image/svg+xml'</code></p> </li> <li> <p><code>parameters</code>: An object of the parameters in the media type (name of the    parameter will be lower-cased). Example: <code>{charset: 'utf-8'}</code></p> </li> </ul> <p>Throws a <code>TypeError</code> if the object contains an invalid type or parameter names.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/HISTORY/","title":"1.0.5 / 2023-01-29","text":"<ul> <li>perf: skip value escaping when unnecessary</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/HISTORY/#104-2017-09-11","title":"1.0.4 / 2017-09-11","text":"<ul> <li>perf: skip parameter parsing when no parameters</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/HISTORY/#103-2017-09-10","title":"1.0.3 / 2017-09-10","text":"<ul> <li>perf: remove argument reassignment</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/HISTORY/#102-2016-05-09","title":"1.0.2 / 2016-05-09","text":"<ul> <li>perf: enable strict mode</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/HISTORY/#101-2015-02-13","title":"1.0.1 / 2015-02-13","text":"<ul> <li>Improve missing <code>Content-Type</code> header error message</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/content-type/HISTORY/#100-2015-02-01","title":"1.0.0 / 2015-02-01","text":"<ul> <li>Initial implementation, derived from <code>media-typer@0.3.0</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/","title":"cookie","text":"<p>Basic HTTP cookie parser and serializer for HTTP servers.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#installation","title":"Installation","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install cookie\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#api","title":"API","text":"<pre><code>var cookie = require('cookie');\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#cookieparsestr-options","title":"cookie.parse(str, options)","text":"<p>Parse an HTTP <code>Cookie</code> header string and returning an object of all cookie name-value pairs. The <code>str</code> argument is the string representing a <code>Cookie</code> header value and <code>options</code> is an optional object containing additional parsing options.</p> <pre><code>var cookies = cookie.parse('foo=bar; equation=E%3Dmc%5E2');\n// { foo: 'bar', equation: 'E=mc^2' }\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#options","title":"Options","text":"<p><code>cookie.parse</code> accepts these properties in the options object.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#decode","title":"decode","text":"<p>Specifies a function that will be used to decode a cookie's value. Since the value of a cookie has a limited character set (and must be a simple string), this function can be used to decode a previously-encoded cookie value into a JavaScript string or other object.</p> <p>The default function is the global <code>decodeURIComponent</code>, which will decode any URL-encoded sequences into their byte representations.</p> <p>note if an error is thrown from this function, the original, non-decoded cookie value will be returned as the cookie's value.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#cookieserializename-value-options","title":"cookie.serialize(name, value, options)","text":"<p>Serialize a cookie name-value pair into a <code>Set-Cookie</code> header string. The <code>name</code> argument is the name for the cookie, the <code>value</code> argument is the value to set the cookie to, and the <code>options</code> argument is an optional object containing additional serialization options.</p> <pre><code>var setCookie = cookie.serialize('foo', 'bar');\n// foo=bar\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#options_1","title":"Options","text":"<p><code>cookie.serialize</code> accepts these properties in the options object.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#domain","title":"domain","text":"<p>Specifies the value for the <code>Domain</code> <code>Set-Cookie</code> attribute. By default, no domain is set, and most clients will consider the cookie to apply to only the current domain.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#encode","title":"encode","text":"<p>Specifies a function that will be used to encode a cookie's value. Since value of a cookie has a limited character set (and must be a simple string), this function can be used to encode a value into a string suited for a cookie's value.</p> <p>The default function is the global <code>encodeURIComponent</code>, which will encode a JavaScript string into UTF-8 byte sequences and then URL-encode any that fall outside of the cookie range.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#expires","title":"expires","text":"<p>Specifies the <code>Date</code> object to be the value for the <code>Expires</code> <code>Set-Cookie</code> attribute. By default, no expiration is set, and most clients will consider this a \"non-persistent cookie\" and will delete it on a condition like exiting a web browser application.</p> <p>note the cookie storage model specification states that if both <code>expires</code> and <code>maxAge</code> are set, then <code>maxAge</code> takes precedence, but it is possible not all clients by obey this, so if both are set, they should point to the same date and time.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#httponly","title":"httpOnly","text":"<p>Specifies the <code>boolean</code> value for the <code>HttpOnly</code> <code>Set-Cookie</code> attribute. When truthy, the <code>HttpOnly</code> attribute is set, otherwise it is not. By default, the <code>HttpOnly</code> attribute is not set.</p> <p>note be careful when setting this to <code>true</code>, as compliant clients will not allow client-side JavaScript to see the cookie in <code>document.cookie</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#maxage","title":"maxAge","text":"<p>Specifies the <code>number</code> (in seconds) to be the value for the <code>Max-Age</code> <code>Set-Cookie</code> attribute. The given number will be converted to an integer by rounding down. By default, no maximum age is set.</p> <p>note the cookie storage model specification states that if both <code>expires</code> and <code>maxAge</code> are set, then <code>maxAge</code> takes precedence, but it is possible not all clients by obey this, so if both are set, they should point to the same date and time.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#partitioned","title":"partitioned","text":"<p>Specifies the <code>boolean</code> value for the <code>Partitioned</code> <code>Set-Cookie</code> attribute. When truthy, the <code>Partitioned</code> attribute is set, otherwise it is not. By default, the <code>Partitioned</code> attribute is not set.</p> <p>note This is an attribute that has not yet been fully standardized, and may change in the future. This also means many clients may ignore this attribute until they understand it.</p> <p>More information about can be found in the proposal.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#path","title":"path","text":"<p>Specifies the value for the <code>Path</code> <code>Set-Cookie</code> attribute. By default, the path is considered the \"default path\".</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#priority","title":"priority","text":"<p>Specifies the <code>string</code> to be the value for the <code>Priority</code> <code>Set-Cookie</code> attribute.</p> <ul> <li><code>'low'</code> will set the <code>Priority</code> attribute to <code>Low</code>.</li> <li><code>'medium'</code> will set the <code>Priority</code> attribute to <code>Medium</code>, the default priority when not set.</li> <li><code>'high'</code> will set the <code>Priority</code> attribute to <code>High</code>.</li> </ul> <p>More information about the different priority levels can be found in the specification.</p> <p>note This is an attribute that has not yet been fully standardized, and may change in the future. This also means many clients may ignore this attribute until they understand it.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#samesite","title":"sameSite","text":"<p>Specifies the <code>boolean</code> or <code>string</code> to be the value for the <code>SameSite</code> <code>Set-Cookie</code> attribute.</p> <ul> <li><code>true</code> will set the <code>SameSite</code> attribute to <code>Strict</code> for strict same site enforcement.</li> <li><code>false</code> will not set the <code>SameSite</code> attribute.</li> <li><code>'lax'</code> will set the <code>SameSite</code> attribute to <code>Lax</code> for lax same site enforcement.</li> <li><code>'none'</code> will set the <code>SameSite</code> attribute to <code>None</code> for an explicit cross-site cookie.</li> <li><code>'strict'</code> will set the <code>SameSite</code> attribute to <code>Strict</code> for strict same site enforcement.</li> </ul> <p>More information about the different enforcement levels can be found in the specification.</p> <p>note This is an attribute that has not yet been fully standardized, and may change in the future. This also means many clients may ignore this attribute until they understand it.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#secure","title":"secure","text":"<p>Specifies the <code>boolean</code> value for the <code>Secure</code> <code>Set-Cookie</code> attribute. When truthy, the <code>Secure</code> attribute is set, otherwise it is not. By default, the <code>Secure</code> attribute is not set.</p> <p>note be careful when setting this to <code>true</code>, as compliant clients will not send the cookie back to the server in the future if the browser does not have an HTTPS connection.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#example","title":"Example","text":"<p>The following example uses this module in conjunction with the Node.js core HTTP server to prompt a user for their name and display it back on future visits.</p> <pre><code>var cookie = require('cookie');\nvar escapeHtml = require('escape-html');\nvar http = require('http');\nvar url = require('url');\n\nfunction onRequest(req, res) {\n  // Parse the query string\n  var query = url.parse(req.url, true, true).query;\n\n  if (query &amp;&amp; query.name) {\n    // Set a new cookie with the name\n    res.setHeader('Set-Cookie', cookie.serialize('name', String(query.name), {\n      httpOnly: true,\n      maxAge: 60 * 60 * 24 * 7 // 1 week\n    }));\n\n    // Redirect back after setting cookie\n    res.statusCode = 302;\n    res.setHeader('Location', req.headers.referer || '/');\n    res.end();\n    return;\n  }\n\n  // Parse the cookies on the request\n  var cookies = cookie.parse(req.headers.cookie || '');\n\n  // Get the visitor name set in the cookie\n  var name = cookies.name;\n\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8');\n\n  if (name) {\n    res.write('&lt;p&gt;Welcome back, &lt;b&gt;' + escapeHtml(name) + '&lt;/b&gt;!&lt;/p&gt;');\n  } else {\n    res.write('&lt;p&gt;Hello, new visitor!&lt;/p&gt;');\n  }\n\n  res.write('&lt;form method=\"GET\"&gt;');\n  res.write('&lt;input placeholder=\"enter your name\" name=\"name\"&gt; &lt;input type=\"submit\" value=\"Set Name\"&gt;');\n  res.end('&lt;/form&gt;');\n}\n\nhttp.createServer(onRequest).listen(3000);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#testing","title":"Testing","text":"<pre><code>$ npm test\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#benchmark","title":"Benchmark","text":"<pre><code>$ npm run bench\n\n&gt; cookie@0.5.0 bench\n&gt; node benchmark/index.js\n\n  node@18.18.2\n  acorn@8.10.0\n  ada@2.6.0\n  ares@1.19.1\n  brotli@1.0.9\n  cldr@43.1\n  icu@73.2\n  llhttp@6.0.11\n  modules@108\n  napi@9\n  nghttp2@1.57.0\n  nghttp3@0.7.0\n  ngtcp2@0.8.1\n  openssl@3.0.10+quic\n  simdutf@3.2.14\n  tz@2023c\n  undici@5.26.3\n  unicode@15.0\n  uv@1.44.2\n  uvwasi@0.0.18\n  v8@10.2.154.26-node.26\n  zlib@1.2.13.1-motley\n\n&gt; node benchmark/parse-top.js\n\n  cookie.parse - top sites\n\n  14 tests completed.\n\n  parse accounts.google.com x 2,588,913 ops/sec \u00b10.74% (186 runs sampled)\n  parse apple.com           x 2,370,002 ops/sec \u00b10.69% (186 runs sampled)\n  parse cloudflare.com      x 2,213,102 ops/sec \u00b10.88% (188 runs sampled)\n  parse docs.google.com     x 2,194,157 ops/sec \u00b11.03% (184 runs sampled)\n  parse drive.google.com    x 2,265,084 ops/sec \u00b10.79% (187 runs sampled)\n  parse en.wikipedia.org    x   457,099 ops/sec \u00b10.81% (186 runs sampled)\n  parse linkedin.com        x   504,407 ops/sec \u00b10.89% (186 runs sampled)\n  parse maps.google.com     x 1,230,959 ops/sec \u00b10.98% (186 runs sampled)\n  parse microsoft.com       x   926,294 ops/sec \u00b10.88% (184 runs sampled)\n  parse play.google.com     x 2,311,338 ops/sec \u00b10.83% (185 runs sampled)\n  parse support.google.com  x 1,508,850 ops/sec \u00b10.86% (186 runs sampled)\n  parse www.google.com      x 1,022,582 ops/sec \u00b11.32% (182 runs sampled)\n  parse youtu.be            x   332,136 ops/sec \u00b11.02% (185 runs sampled)\n  parse youtube.com         x   323,833 ops/sec \u00b10.77% (183 runs sampled)\n\n&gt; node benchmark/parse.js\n\n  cookie.parse - generic\n\n  6 tests completed.\n\n  simple      x 3,214,032 ops/sec \u00b11.61% (183 runs sampled)\n  decode      x   587,237 ops/sec \u00b11.16% (187 runs sampled)\n  unquote     x 2,954,618 ops/sec \u00b11.35% (183 runs sampled)\n  duplicates  x   857,008 ops/sec \u00b10.89% (187 runs sampled)\n  10 cookies  x   292,133 ops/sec \u00b10.89% (187 runs sampled)\n  100 cookies x    22,610 ops/sec \u00b10.68% (187 runs sampled)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#references","title":"References","text":"<ul> <li>RFC 6265: HTTP State Management Mechanism</li> <li>Same-site Cookies</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/SECURITY/","title":"Security Policies and Procedures","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/cookie/SECURITY/#reporting-a-bug","title":"Reporting a Bug","text":"<p>The <code>cookie</code> team and community take all security bugs seriously. Thank you for improving the security of the project. We appreciate your efforts and responsible disclosure and will make every effort to acknowledge your contributions.</p> <p>Report security bugs by emailing the current owner(s) of <code>cookie</code>. This information can be found in the npm registry using the command <code>npm owner ls cookie</code>. If unsure or unable to get the information from the above, open an issue in the project issue tracker asking for the current contact information.</p> <p>To ensure the timely response to your report, please ensure that the entirety of the report is contained within the email body and not solely behind a web link or an attachment.</p> <p>At least one owner will acknowledge your email within 48 hours, and will send a more detailed response within 48 hours indicating the next steps in handling your report. After the initial reply to your report, the owners will endeavor to keep you informed of the progress towards a fix and full announcement, and may ask for additional information or guidance.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/History/","title":"1.2.2 / 2024-10-29","text":"<ul> <li>various metadata/documentation tweaks (incl. #51)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/History/#121-2023-02-27","title":"1.2.1 / 2023-02-27","text":"<ul> <li>update annotations for allowed secret key types (#44, thanks @jyasskin!)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/History/#120-2022-02-17","title":"1.2.0 / 2022-02-17","text":"<ul> <li>allow buffer and other node-supported types as key (#33)</li> <li>be pickier about extra content after signed portion (#40)</li> <li>some internal code clarity/cleanup improvements (#26)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/History/#110-2018-01-18","title":"1.1.0 / 2018-01-18","text":"<ul> <li>switch to built-in <code>crypto.timingSafeEqual</code> for validation instead of previous double-hash method (thank you @jodevsa!)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/History/#107-2023-04-12","title":"1.0.7 / 2023-04-12","text":"<p>Later release for older node.js versions. See the v1.0.x branch notes.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/History/#106-2015-02-03","title":"1.0.6 / 2015-02-03","text":"<ul> <li>use <code>npm test</code> instead of <code>make test</code> to run tests</li> <li>clearer assertion messages when checking input</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/History/#105-2014-09-05","title":"1.0.5 / 2014-09-05","text":"<ul> <li>add license to package.json</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/History/#104-2014-06-25","title":"1.0.4 / 2014-06-25","text":"<ul> <li>corrected avoidance of timing attacks (thanks @tenbits!)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/History/#103-2014-01-28","title":"1.0.3 / 2014-01-28","text":"<ul> <li>[incorrect] fix for timing attacks</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/History/#102-2014-01-28","title":"1.0.2 / 2014-01-28","text":"<ul> <li>fix missing repository warning</li> <li>fix typo in test</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/History/#101-2013-04-15","title":"1.0.1 / 2013-04-15","text":"<ul> <li>Revert \"Changed underlying HMAC algo. to sha512.\"</li> <li>Revert \"Fix for timing attacks on MAC verification.\"</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/History/#001-2010-01-03","title":"0.0.1 / 2010-01-03","text":"<ul> <li>Initial release</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/Readme/","title":"cookie-signature","text":"<p>Sign and unsign cookies.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/Readme/#example","title":"Example","text":"<pre><code>var cookie = require('cookie-signature');\n\nvar val = cookie.sign('hello', 'tobiiscool');\nval.should.equal('hello.DGDUkGlIkCzPz+C0B064FNgHdEjox7ch8tOBGslZ5QI');\n\nvar val = cookie.sign('hello', 'tobiiscool');\ncookie.unsign(val, 'tobiiscool').should.equal('hello');\ncookie.unsign(val, 'luna').should.be.false;\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/cookie-signature/Readme/#license","title":"License","text":"<p>MIT.</p> <p>See LICENSE file for details.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/","title":"debug","text":"<p>A tiny JavaScript debugging utility modelled after Node.js core's debugging technique. Works in Node.js and web browsers.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#installation","title":"Installation","text":"<pre><code>$ npm install debug\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#usage","title":"Usage","text":"<p><code>debug</code> exposes a function; simply pass this function the name of your module, and it will return a decorated version of <code>console.error</code> for you to pass debug statements to. This will allow you to toggle the debug output for different parts of your module as well as the module as a whole.</p> <p>Example app.js:</p> <pre><code>var debug = require('debug')('http')\n  , http = require('http')\n  , name = 'My App';\n\n// fake app\n\ndebug('booting %o', name);\n\nhttp.createServer(function(req, res){\n  debug(req.method + ' ' + req.url);\n  res.end('hello\\n');\n}).listen(3000, function(){\n  debug('listening');\n});\n\n// fake worker of some kind\n\nrequire('./worker');\n</code></pre> <p>Example worker.js:</p> <pre><code>var a = require('debug')('worker:a')\n  , b = require('debug')('worker:b');\n\nfunction work() {\n  a('doing lots of uninteresting work');\n  setTimeout(work, Math.random() * 1000);\n}\n\nwork();\n\nfunction workb() {\n  b('doing some work');\n  setTimeout(workb, Math.random() * 2000);\n}\n\nworkb();\n</code></pre> <p>The <code>DEBUG</code> environment variable is then used to enable these based on space or comma-delimited names.</p> <p>Here are some examples:</p> <p> </p>"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#windows-command-prompt-notes","title":"Windows command prompt notes","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#cmd","title":"CMD","text":"<p>On Windows the environment variable is set using the <code>set</code> command.</p> <pre><code>set DEBUG=*,-not_this\n</code></pre> <p>Example:</p> <pre><code>set DEBUG=* &amp; node app.js\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#powershell-vs-code-default","title":"PowerShell (VS Code default)","text":"<p>PowerShell uses different syntax to set environment variables.</p> <pre><code>$env:DEBUG = \"*,-not_this\"\n</code></pre> <p>Example:</p> <pre><code>$env:DEBUG='app';node app.js\n</code></pre> <p>Then, run the program to be debugged as usual.</p> <p>npm script example: <pre><code>  \"windowsDebug\": \"@powershell -Command $env:DEBUG='*';node app.js\",\n</code></pre></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#namespace-colors","title":"Namespace Colors","text":"<p>Every debug instance has a color generated for it based on its namespace name. This helps when visually parsing the debug output to identify which debug instance a debug line belongs to.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#nodejs","title":"Node.js","text":"<p>In Node.js, colors are enabled when stderr is a TTY. You also should install the <code>supports-color</code> module alongside debug, otherwise debug will only use a small handful of basic colors.</p> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#web-browser","title":"Web Browser","text":"<p>Colors are also enabled on \"Web Inspectors\" that understand the <code>%c</code> formatting option. These are WebKit web inspectors, Firefox (since version 31) and the Firebug plugin for Firefox (any version).</p> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#millisecond-diff","title":"Millisecond diff","text":"<p>When actively developing an application it can be useful to see when the time spent between one <code>debug()</code> call and the next. Suppose for example you invoke <code>debug()</code> before requesting a resource, and after as well, the \"+NNNms\" will show you how much time was spent between calls.</p> <p></p> <p>When stdout is not a TTY, <code>Date#toISOString()</code> is used, making it more useful for logging the debug information as shown below:</p> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#conventions","title":"Conventions","text":"<p>If you're using this in one or more of your libraries, you should use the name of your library so that developers may toggle debugging as desired without guessing names. If you have more than one debuggers you should prefix them with your library name and use \":\" to separate features. For example \"bodyParser\" from Connect would then be \"connect:bodyParser\".  If you append a \"*\" to the end of your name, it will always be enabled regardless of the setting of the DEBUG environment variable.  You can then use it for normal output as well as debug output.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#wildcards","title":"Wildcards","text":"<p>The <code>*</code> character may be used as a wildcard. Suppose for example your library has debuggers named \"connect:bodyParser\", \"connect:compress\", \"connect:session\", instead of listing all three with <code>DEBUG=connect:bodyParser,connect:compress,connect:session</code>, you may simply do <code>DEBUG=connect:*</code>, or to run everything using this module simply use <code>DEBUG=*</code>.</p> <p>You can also exclude specific debuggers by prefixing them with a \"-\" character. For example, <code>DEBUG=*,-connect:*</code> would include all debuggers except those starting with \"connect:\".</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#environment-variables","title":"Environment Variables","text":"<p>When running through Node.js, you can set a few environment variables that will change the behavior of the debug logging:</p> Name Purpose <code>DEBUG</code> Enables/disables specific debugging namespaces. <code>DEBUG_HIDE_DATE</code> Hide date from debug output (non-TTY). <code>DEBUG_COLORS</code> Whether or not to use colors in the debug output. <code>DEBUG_DEPTH</code> Object inspection depth. <code>DEBUG_SHOW_HIDDEN</code> Shows hidden properties on inspected objects. <p>Note: The environment variables beginning with <code>DEBUG_</code> end up being converted into an Options object that gets used with <code>%o</code>/<code>%O</code> formatters. See the Node.js documentation for <code>util.inspect()</code> for the complete list.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#formatters","title":"Formatters","text":"<p>Debug uses printf-style formatting. Below are the officially supported formatters:</p> Formatter Representation <code>%O</code> Pretty-print an Object on multiple lines. <code>%o</code> Pretty-print an Object all on a single line. <code>%s</code> String. <code>%d</code> Number (both integer and float). <code>%j</code> JSON. Replaced with the string '[Circular]' if the argument contains circular references. <code>%%</code> Single percent sign ('%'). This does not consume an argument."},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#custom-formatters","title":"Custom formatters","text":"<p>You can add custom formatters by extending the <code>debug.formatters</code> object. For example, if you wanted to add support for rendering a Buffer as hex with <code>%h</code>, you could do something like:</p> <pre><code>const createDebug = require('debug')\ncreateDebug.formatters.h = (v) =&gt; {\n  return v.toString('hex')\n}\n\n// \u2026elsewhere\nconst debug = createDebug('foo')\ndebug('this is hex: %h', new Buffer('hello world'))\n//   foo this is hex: 68656c6c6f20776f726c6421 +0ms\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#browser-support","title":"Browser Support","text":"<p>You can build a browser-ready script using browserify, or just use the browserify-as-a-service build, if you don't want to build it yourself.</p> <p>Debug's enable state is currently persisted by <code>localStorage</code>. Consider the situation shown below where you have <code>worker:a</code> and <code>worker:b</code>, and wish to debug both. You can enable this using <code>localStorage.debug</code>:</p> <pre><code>localStorage.debug = 'worker:*'\n</code></pre> <p>And then refresh the page.</p> <pre><code>a = debug('worker:a');\nb = debug('worker:b');\n\nsetInterval(function(){\n  a('doing some work');\n}, 1000);\n\nsetInterval(function(){\n  b('doing some work');\n}, 1200);\n</code></pre> <p>In Chromium-based web browsers (e.g. Brave, Chrome, and Electron), the JavaScript console will\u2014by default\u2014only show messages logged by <code>debug</code> if the \"Verbose\" log level is enabled.</p> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#output-streams","title":"Output streams","text":"<p>By default <code>debug</code> will log to stderr, however this can be configured per-namespace by overriding the <code>log</code> method:</p> <p>Example stdout.js:</p> <pre><code>var debug = require('debug');\nvar error = debug('app:error');\n\n// by default stderr is used\nerror('goes to stderr!');\n\nvar log = debug('app:log');\n// set this namespace to log via console.log\nlog.log = console.log.bind(console); // don't forget to bind to console!\nlog('goes to stdout');\nerror('still goes to stderr!');\n\n// set all output to go via console.info\n// overrides all per-namespace log settings\ndebug.log = console.info.bind(console);\nerror('now goes to stdout via console.info');\nlog('still goes to stdout, but via console.info now');\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#extend","title":"Extend","text":"<p>You can simply extend debugger  <pre><code>const log = require('debug')('auth');\n\n//creates new debug instance with extended namespace\nconst logSign = log.extend('sign');\nconst logLogin = log.extend('login');\n\nlog('hello'); // auth hello\nlogSign('hello'); //auth:sign hello\nlogLogin('hello'); //auth:login hello\n</code></pre></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#set-dynamically","title":"Set dynamically","text":"<p>You can also enable debug dynamically by calling the <code>enable()</code> method :</p> <pre><code>let debug = require('debug');\n\nconsole.log(1, debug.enabled('test'));\n\ndebug.enable('test');\nconsole.log(2, debug.enabled('test'));\n\ndebug.disable();\nconsole.log(3, debug.enabled('test'));\n</code></pre> <p>print :  <pre><code>1 false\n2 true\n3 false\n</code></pre></p> <p>Usage : <code>enable(namespaces)</code> <code>namespaces</code> can include modes separated by a colon and wildcards.</p> <p>Note that calling <code>enable()</code> completely overrides previously set DEBUG variable : </p> <pre><code>$ DEBUG=foo node -e 'var dbg = require(\"debug\"); dbg.enable(\"bar\"); console.log(dbg.enabled(\"foo\"))'\n=&gt; false\n</code></pre> <p><code>disable()</code></p> <p>Will disable all namespaces. The functions returns the namespaces currently enabled (and skipped). This can be useful if you want to disable debugging temporarily without knowing what was enabled to begin with.</p> <p>For example:</p> <pre><code>let debug = require('debug');\ndebug.enable('foo:*,-foo:bar');\nlet namespaces = debug.disable();\ndebug.enable(namespaces);\n</code></pre> <p>Note: There is no guarantee that the string will be identical to the initial enable string, but semantically they will be identical.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#checking-whether-a-debug-target-is-enabled","title":"Checking whether a debug target is enabled","text":"<p>After you've created a debug instance, you can determine whether or not it is enabled by checking the <code>enabled</code> property:</p> <pre><code>const debug = require('debug')('http');\n\nif (debug.enabled) {\n  // do stuff...\n}\n</code></pre> <p>You can also manually toggle this property to force the debug instance to be enabled or disabled.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#usage-in-child-processes","title":"Usage in child processes","text":"<p>Due to the way <code>debug</code> detects if the output is a TTY or not, colors are not shown in child processes when <code>stderr</code> is piped. A solution is to pass the <code>DEBUG_COLORS=1</code> environment variable to the child process. For example:</p> <pre><code>worker = fork(WORKER_WRAP_PATH, [workerPath], {\n  stdio: [\n    /* stdin: */ 0,\n    /* stdout: */ 'pipe',\n    /* stderr: */ 'pipe',\n    'ipc',\n  ],\n  env: Object.assign({}, process.env, {\n    DEBUG_COLORS: 1 // without this settings, colors won't be shown\n  }),\n});\n\nworker.stderr.pipe(process.stderr, { end: false });\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#authors","title":"Authors","text":"<ul> <li>TJ Holowaychuk</li> <li>Nathan Rajlich</li> <li>Andrew Rhyne</li> <li>Josh Junon</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#backers","title":"Backers","text":"<p>Support us with a monthly donation and help us continue our activities. [Become a backer]</p> <p> </p>"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#sponsors","title":"Sponsors","text":"<p>Become a sponsor and get your logo on our README on Github with a link to your site. [Become a sponsor]</p> <p> </p>"},{"location":"system-desing/crud-app/JS/server/node_modules/debug/#license","title":"License","text":"<p>(The MIT License)</p> <p>Copyright (c) 2014-2017 TJ Holowaychuk &lt;tj@vision-media.ca&gt; Copyright (c) 2018-2021 Josh Junon</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/","title":"2.0.0 / 2018-10-26","text":"<ul> <li>Drop support for Node.js 0.6</li> <li>Replace internal <code>eval</code> usage with <code>Function</code> constructor</li> <li>Use instance methods on <code>process</code> to check for listeners</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#112-2018-01-11","title":"1.1.2 / 2018-01-11","text":"<ul> <li>perf: remove argument reassignment</li> <li>Support Node.js 0.6 to 9.x</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#111-2017-07-27","title":"1.1.1 / 2017-07-27","text":"<ul> <li>Remove unnecessary <code>Buffer</code> loading</li> <li>Support Node.js 0.6 to 8.x</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#110-2015-09-14","title":"1.1.0 / 2015-09-14","text":"<ul> <li>Enable strict mode in more places</li> <li>Support io.js 3.x</li> <li>Support io.js 2.x</li> <li>Support web browser loading<ul> <li>Requires bundler like Browserify or webpack</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#101-2015-04-07","title":"1.0.1 / 2015-04-07","text":"<ul> <li>Fix <code>TypeError</code>s when under <code>'use strict'</code> code</li> <li>Fix useless type name on auto-generated messages</li> <li>Support io.js 1.x</li> <li>Support Node.js 0.12</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#100-2014-09-17","title":"1.0.0 / 2014-09-17","text":"<ul> <li>No changes</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#045-2014-09-09","title":"0.4.5 / 2014-09-09","text":"<ul> <li>Improve call speed to functions using the function wrapper</li> <li>Support Node.js 0.6</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#044-2014-07-27","title":"0.4.4 / 2014-07-27","text":"<ul> <li>Work-around v8 generating empty stack traces</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#043-2014-07-26","title":"0.4.3 / 2014-07-26","text":"<ul> <li>Fix exception when global <code>Error.stackTraceLimit</code> is too low</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#042-2014-07-19","title":"0.4.2 / 2014-07-19","text":"<ul> <li>Correct call site for wrapped functions and properties</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#041-2014-07-19","title":"0.4.1 / 2014-07-19","text":"<ul> <li>Improve automatic message generation for function properties</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#040-2014-07-19","title":"0.4.0 / 2014-07-19","text":"<ul> <li>Add <code>TRACE_DEPRECATION</code> environment variable</li> <li>Remove non-standard grey color from color output</li> <li>Support <code>--no-deprecation</code> argument</li> <li>Support <code>--trace-deprecation</code> argument</li> <li>Support <code>deprecate.property(fn, prop, message)</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#030-2014-06-16","title":"0.3.0 / 2014-06-16","text":"<ul> <li>Add <code>NO_DEPRECATION</code> environment variable</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#020-2014-06-15","title":"0.2.0 / 2014-06-15","text":"<ul> <li>Add <code>deprecate.property(obj, prop, message)</code></li> <li>Remove <code>supports-color</code> dependency for node.js 0.8</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#010-2014-06-15","title":"0.1.0 / 2014-06-15","text":"<ul> <li>Add <code>deprecate.function(fn, message)</code></li> <li>Add <code>process.on('deprecation', fn)</code> emitter</li> <li>Automatically generate message when omitted from <code>deprecate()</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#001-2014-06-15","title":"0.0.1 / 2014-06-15","text":"<ul> <li>Fix warning for dynamic calls at singe call site</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/History/#000-2014-06-15","title":"0.0.0 / 2014-06-15","text":"<ul> <li>Initial implementation</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/","title":"depd","text":"<p>Deprecate all the things</p> <p>With great modules comes great responsibility; mark things deprecated!</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#install","title":"Install","text":"<p>This module is installed directly using <code>npm</code>:</p> <pre><code>$ npm install depd\n</code></pre> <p>This module can also be bundled with systems like Browserify or webpack, though by default this module will alter it's API to no longer display or track deprecations.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#api","title":"API","text":"<pre><code>var deprecate = require('depd')('my-module')\n</code></pre> <p>This library allows you to display deprecation messages to your users. This library goes above and beyond with deprecation warnings by introspection of the call stack (but only the bits that it is interested in).</p> <p>Instead of just warning on the first invocation of a deprecated function and never again, this module will warn on the first invocation of a deprecated function per unique call site, making it ideal to alert users of all deprecated uses across the code base, rather than just whatever happens to execute first.</p> <p>The deprecation warnings from this module also include the file and line information for the call into the module that the deprecated function was in.</p> <p>NOTE this library has a similar interface to the <code>debug</code> module, and this module uses the calling file to get the boundary for the call stacks, so you should always create a new <code>deprecate</code> object in each file and not within some central file.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#depdnamespace","title":"depd(namespace)","text":"<p>Create a new deprecate function that uses the given namespace name in the messages and will display the call site prior to the stack entering the file this function was called from. It is highly suggested you use the name of your module as the namespace.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#deprecatemessage","title":"deprecate(message)","text":"<p>Call this function from deprecated code to display a deprecation message. This message will appear once per unique caller site. Caller site is the first call site in the stack in a different file from the caller of this function.</p> <p>If the message is omitted, a message is generated for you based on the site of the <code>deprecate()</code> call and will display the name of the function called, similar to the name displayed in a stack trace.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#deprecatefunctionfn-message","title":"deprecate.function(fn, message)","text":"<p>Call this function to wrap a given function in a deprecation message on any call to the function. An optional message can be supplied to provide a custom message.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#deprecatepropertyobj-prop-message","title":"deprecate.property(obj, prop, message)","text":"<p>Call this function to wrap a given property on object in a deprecation message on any accessing or setting of the property. An optional message can be supplied to provide a custom message.</p> <p>The method must be called on the object where the property belongs (not inherited from the prototype).</p> <p>If the property is a data descriptor, it will be converted to an accessor descriptor in order to display the deprecation message.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#processondeprecation-fn","title":"process.on('deprecation', fn)","text":"<p>This module will allow easy capturing of deprecation errors by emitting the errors as the type \"deprecation\" on the global <code>process</code>. If there are no listeners for this type, the errors are written to STDERR as normal, but if there are any listeners, nothing will be written to STDERR and instead only emitted. From there, you can write the errors in a different format or to a logging source.</p> <p>The error represents the deprecation and is emitted only once with the same rules as writing to STDERR. The error has the following properties:</p> <ul> <li><code>message</code> - This is the message given by the library</li> <li><code>name</code> - This is always <code>'DeprecationError'</code></li> <li><code>namespace</code> - This is the namespace the deprecation came from</li> <li><code>stack</code> - This is the stack of the call to the deprecated thing</li> </ul> <p>Example <code>error.stack</code> output:</p> <pre><code>DeprecationError: my-cool-module deprecated oldfunction\n    at Object.&lt;anonymous&gt; ([eval]-wrapper:6:22)\n    at Module._compile (module.js:456:26)\n    at evalScript (node.js:532:25)\n    at startup (node.js:80:7)\n    at node.js:902:3\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#processenvno_deprecation","title":"process.env.NO_DEPRECATION","text":"<p>As a user of modules that are deprecated, the environment variable <code>NO_DEPRECATION</code> is provided as a quick solution to silencing deprecation warnings from being output. The format of this is similar to that of <code>DEBUG</code>:</p> <pre><code>$ NO_DEPRECATION=my-module,othermod node app.js\n</code></pre> <p>This will suppress deprecations from being output for \"my-module\" and \"othermod\". The value is a list of comma-separated namespaces. To suppress every warning across all namespaces, use the value <code>*</code> for a namespace.</p> <p>Providing the argument <code>--no-deprecation</code> to the <code>node</code> executable will suppress all deprecations (only available in Node.js 0.8 or higher).</p> <p>NOTE This will not suppress the deperecations given to any \"deprecation\" event listeners, just the output to STDERR.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#processenvtrace_deprecation","title":"process.env.TRACE_DEPRECATION","text":"<p>As a user of modules that are deprecated, the environment variable <code>TRACE_DEPRECATION</code> is provided as a solution to getting more detailed location information in deprecation warnings by including the entire stack trace. The format of this is the same as <code>NO_DEPRECATION</code>:</p> <pre><code>$ TRACE_DEPRECATION=my-module,othermod node app.js\n</code></pre> <p>This will include stack traces for deprecations being output for \"my-module\" and \"othermod\". The value is a list of comma-separated namespaces. To trace every warning across all namespaces, use the value <code>*</code> for a namespace.</p> <p>Providing the argument <code>--trace-deprecation</code> to the <code>node</code> executable will trace all deprecations (only available in Node.js 0.8 or higher).</p> <p>NOTE This will not trace the deperecations silenced by <code>NO_DEPRECATION</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#display","title":"Display","text":"<p>When a user calls a function in your library that you mark deprecated, they will see the following written to STDERR (in the given colors, similar colors and layout to the <code>debug</code> module):</p> <pre><code>bright cyan    bright yellow\n|              |          reset       cyan\n|              |          |           |\n\u25bc              \u25bc          \u25bc           \u25bc\nmy-cool-module deprecated oldfunction [eval]-wrapper:6:22\n\u25b2              \u25b2          \u25b2           \u25b2\n|              |          |           |\nnamespace      |          |           location of mycoolmod.oldfunction() call\n               |          deprecation message\n               the word \"deprecated\"\n</code></pre> <p>If the user redirects their STDERR to a file or somewhere that does not support colors, they see (similar layout to the <code>debug</code> module):</p> <pre><code>Sun, 15 Jun 2014 05:21:37 GMT my-cool-module deprecated oldfunction at [eval]-wrapper:6:22\n\u25b2                             \u25b2              \u25b2          \u25b2              \u25b2\n|                             |              |          |              |\ntimestamp of message          namespace      |          |             location of mycoolmod.oldfunction() call\n                                             |          deprecation message\n                                             the word \"deprecated\"\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#examples","title":"Examples","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#deprecating-all-calls-to-a-function","title":"Deprecating all calls to a function","text":"<p>This will display a deprecated message about \"oldfunction\" being deprecated from \"my-module\" on STDERR.</p> <pre><code>var deprecate = require('depd')('my-cool-module')\n\n// message automatically derived from function name\n// Object.oldfunction\nexports.oldfunction = deprecate.function(function oldfunction () {\n  // all calls to function are deprecated\n})\n\n// specific message\nexports.oldfunction = deprecate.function(function () {\n  // all calls to function are deprecated\n}, 'oldfunction')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#conditionally-deprecating-a-function-call","title":"Conditionally deprecating a function call","text":"<p>This will display a deprecated message about \"weirdfunction\" being deprecated from \"my-module\" on STDERR when called with less than 2 arguments.</p> <pre><code>var deprecate = require('depd')('my-cool-module')\n\nexports.weirdfunction = function () {\n  if (arguments.length &lt; 2) {\n    // calls with 0 or 1 args are deprecated\n    deprecate('weirdfunction args &lt; 2')\n  }\n}\n</code></pre> <p>When calling <code>deprecate</code> as a function, the warning is counted per call site within your own module, so you can display different deprecations depending on different situations and the users will still get all the warnings:</p> <pre><code>var deprecate = require('depd')('my-cool-module')\n\nexports.weirdfunction = function () {\n  if (arguments.length &lt; 2) {\n    // calls with 0 or 1 args are deprecated\n    deprecate('weirdfunction args &lt; 2')\n  } else if (typeof arguments[0] !== 'string') {\n    // calls with non-string first argument are deprecated\n    deprecate('weirdfunction non-string first arg')\n  }\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#deprecating-property-access","title":"Deprecating property access","text":"<p>This will display a deprecated message about \"oldprop\" being deprecated from \"my-module\" on STDERR when accessed. A deprecation will be displayed when setting the value and when getting the value.</p> <pre><code>var deprecate = require('depd')('my-cool-module')\n\nexports.oldprop = 'something'\n\n// message automatically derives from property name\ndeprecate.property(exports, 'oldprop')\n\n// explicit message\ndeprecate.property(exports, 'oldprop', 'oldprop &gt;= 0.10')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/depd/Readme/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/","title":"Index","text":"\ud83c\udf89 announcing dotenvx. run anywhere, multi-environment, encrypted envs.    **Special thanks to [our sponsors](https://github.com/sponsors/motdotla)**   Warp is a blazingly fast, Rust-based terminal reimagined to work like a modern app. <sup>Get more done in the CLI with real text editing, block-based output, and AI command search.</sup> Graphite is the AI developer productivity platform helping teams on GitHub ship higher quality software, faster."},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#dotenv","title":"dotenv","text":"<p>Dotenv is a zero-dependency module that loads environment variables from a <code>.env</code> file into <code>process.env</code>. Storing configuration in the environment separate from code is based on The Twelve-Factor App methodology.</p> <p> </p> <ul> <li>\ud83c\udf31 Install</li> <li>\ud83c\udfd7\ufe0f Usage (.env)</li> <li>\ud83c\udf34 Multiple Environments \ud83c\udd95</li> <li>\ud83d\ude80 Deploying (encryption) \ud83c\udd95</li> <li>\ud83d\udcda Examples</li> <li>\ud83d\udcd6 Docs</li> <li>\u2753 FAQ</li> <li>\u23f1\ufe0f Changelog</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#install","title":"\ud83c\udf31 Install","text":"<pre><code>npm install dotenv --save\n</code></pre> <p>You can also use an npm-compatible package manager like yarn or bun:</p> <pre><code>yarn add dotenv\n# or\nbun add dotenv\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#usage","title":"\ud83c\udfd7\ufe0f Usage","text":"<p> <p></p> <p>Create a <code>.env</code> file in the root of your project (if using a monorepo structure like <code>apps/backend/app.js</code>, put it in the root of the folder where your <code>app.js</code> process runs):</p> <pre><code>S3_BUCKET=\"YOURS3BUCKET\"\nSECRET_KEY=\"YOURSECRETKEYGOESHERE\"\n</code></pre> <p>As early as possible in your application, import and configure dotenv:</p> <pre><code>require('dotenv').config()\nconsole.log(process.env) // remove this after you've confirmed it is working\n</code></pre> <p>.. or using ES6?</p> <pre><code>import 'dotenv/config'\n</code></pre> <p>That's it. <code>process.env</code> now has the keys and values you defined in your <code>.env</code> file:</p> <pre><code>require('dotenv').config()\n// or import 'dotenv/config' if you're using ES6\n\n...\n\ns3.getBucketCors({Bucket: process.env.S3_BUCKET}, function(err, data) {})\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#multiline-values","title":"Multiline values","text":"<p>If you need multiline variables, for example private keys, those are now supported (<code>&gt;= v15.0.0</code>) with line breaks:</p> <pre><code>PRIVATE_KEY=\"-----BEGIN RSA PRIVATE KEY-----\n...\nKh9NV...\n...\n-----END RSA PRIVATE KEY-----\"\n</code></pre> <p>Alternatively, you can double quote strings and use the <code>\\n</code> character:</p> <pre><code>PRIVATE_KEY=\"-----BEGIN RSA PRIVATE KEY-----\\nKh9NV...\\n-----END RSA PRIVATE KEY-----\\n\"\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#comments","title":"Comments","text":"<p>Comments may be added to your file on their own line or inline:</p> <pre><code># This is a comment\nSECRET_KEY=YOURSECRETKEYGOESHERE # comment\nSECRET_HASH=\"something-with-a-#-hash\"\n</code></pre> <p>Comments begin where a <code>#</code> exists, so if your value contains a <code>#</code> please wrap it in quotes. This is a breaking change from <code>&gt;= v15.0.0</code> and on.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#parsing","title":"Parsing","text":"<p>The engine which parses the contents of your file containing environment variables is available to use. It accepts a String or Buffer and will return an Object with the parsed keys and values.</p> <pre><code>const dotenv = require('dotenv')\nconst buf = Buffer.from('BASIC=basic')\nconst config = dotenv.parse(buf) // will return an object\nconsole.log(typeof config, config) // object { BASIC : 'basic' }\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#preload","title":"Preload","text":"<p>Note: Consider using <code>dotenvx</code> instead of preloading. I am now doing (and recommending) so.</p> <p>It serves the same purpose (you do not need to require and load dotenv), adds better debugging, and works with ANY language, framework, or platform. \u2013 motdotla</p> <p>You can use the <code>--require</code> (<code>-r</code>) command line option to preload dotenv. By doing this, you do not need to require and load dotenv in your application code.</p> <pre><code>$ node -r dotenv/config your_script.js\n</code></pre> <p>The configuration options below are supported as command line arguments in the format <code>dotenv_config_&lt;option&gt;=value</code></p> <pre><code>$ node -r dotenv/config your_script.js dotenv_config_path=/custom/path/to/.env dotenv_config_debug=true\n</code></pre> <p>Additionally, you can use environment variables to set configuration options. Command line arguments will precede these.</p> <pre><code>$ DOTENV_CONFIG_&lt;OPTION&gt;=value node -r dotenv/config your_script.js\n</code></pre> <pre><code>$ DOTENV_CONFIG_ENCODING=latin1 DOTENV_CONFIG_DEBUG=true node -r dotenv/config your_script.js dotenv_config_path=/custom/path/to/.env\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#variable-expansion","title":"Variable Expansion","text":"<p>You need to add the value of another variable in one of your variables? Use dotenv-expand.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#command-substitution","title":"Command Substitution","text":"<p>Use dotenvx to use command substitution.</p> <p>Add the output of a command to one of your variables in your .env file.</p> <p><pre><code># .env\nDATABASE_URL=\"postgres://$(whoami)@localhost/my_database\"\n</code></pre> <pre><code>// index.js\nconsole.log('DATABASE_URL', process.env.DATABASE_URL)\n</code></pre> <pre><code>$ dotenvx run --debug -- node index.js\n[dotenvx@0.14.1] injecting env (1) from .env\nDATABASE_URL postgres://yourusername@localhost/my_database\n</code></pre></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#syncing","title":"Syncing","text":"<p>You need to keep <code>.env</code> files in sync between machines, environments, or team members? Use dotenvx to encrypt your <code>.env</code> files and safely include them in source control. This still subscribes to the twelve-factor app rules by generating a decryption key separate from code.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#multiple-environments","title":"Multiple Environments","text":"<p>Use dotenvx to generate <code>.env.ci</code>, <code>.env.production</code> files, and more.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#deploying","title":"Deploying","text":"<p>You need to deploy your secrets in a cloud-agnostic manner? Use dotenvx to generate a private decryption key that is set on your production server.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#manage-multiple-environments","title":"\ud83c\udf34 Manage Multiple Environments","text":"<p>Use dotenvx</p> <p>Run any environment locally. Create a <code>.env.ENVIRONMENT</code> file and use <code>--env-file</code> to load it. It's straightforward, yet flexible.</p> <pre><code>$ echo \"HELLO=production\" &gt; .env.production\n$ echo \"console.log('Hello ' + process.env.HELLO)\" &gt; index.js\n\n$ dotenvx run --env-file=.env.production -- node index.js\nHello production\n&gt; ^^\n</code></pre> <p>or with multiple .env files</p> <pre><code>$ echo \"HELLO=local\" &gt; .env.local\n$ echo \"HELLO=World\" &gt; .env\n$ echo \"console.log('Hello ' + process.env.HELLO)\" &gt; index.js\n\n$ dotenvx run --env-file=.env.local --env-file=.env -- node index.js\nHello local\n</code></pre> <p>more environment examples</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#deploying_1","title":"\ud83d\ude80 Deploying","text":"<p>Use dotenvx.</p> <p>Add encryption to your <code>.env</code> files with a single command. Pass the <code>--encrypt</code> flag.</p> <pre><code>$ dotenvx set HELLO Production --encrypt -f .env.production\n$ echo \"console.log('Hello ' + process.env.HELLO)\" &gt; index.js\n\n$ DOTENV_PRIVATE_KEY_PRODUCTION=\"&lt;.env.production private key&gt;\" dotenvx run -- node index.js\n[dotenvx] injecting env (2) from .env.production\nHello Production\n</code></pre> <p>learn more</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#examples","title":"\ud83d\udcda Examples","text":"<p>See examples of using dotenv with various frameworks, languages, and configurations.</p> <ul> <li>nodejs</li> <li>nodejs (debug on)</li> <li>nodejs (override on)</li> <li>nodejs (processEnv override)</li> <li>esm</li> <li>esm (preload)</li> <li>typescript</li> <li>typescript parse</li> <li>typescript config</li> <li>webpack</li> <li>webpack (plugin)</li> <li>react</li> <li>react (typescript)</li> <li>express</li> <li>nestjs</li> <li>fastify</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#documentation","title":"\ud83d\udcd6 Documentation","text":"<p>Dotenv exposes four functions:</p> <ul> <li><code>config</code></li> <li><code>parse</code></li> <li><code>populate</code></li> <li><code>decrypt</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#config","title":"Config","text":"<p><code>config</code> will read your <code>.env</code> file, parse the contents, assign it to <code>process.env</code>, and return an Object with a <code>parsed</code> key containing the loaded content or an <code>error</code> key if it failed.</p> <pre><code>const result = dotenv.config()\n\nif (result.error) {\n  throw result.error\n}\n\nconsole.log(result.parsed)\n</code></pre> <p>You can additionally, pass options to <code>config</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#options","title":"Options","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#path","title":"path","text":"<p>Default: <code>path.resolve(process.cwd(), '.env')</code></p> <p>Specify a custom path if your file containing environment variables is located elsewhere.</p> <pre><code>require('dotenv').config({ path: '/custom/path/to/.env' })\n</code></pre> <p>By default, <code>config</code> will look for a file called .env in the current working directory.</p> <p>Pass in multiple files as an array, and they will be parsed in order and combined with <code>process.env</code> (or <code>option.processEnv</code>, if set). The first value set for a variable will win, unless the <code>options.override</code> flag is set, in which case the last value set will win.  If a value already exists in <code>process.env</code> and the <code>options.override</code> flag is NOT set, no changes will be made to that value. </p> <pre><code>require('dotenv').config({ path: ['.env.local', '.env'] })\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#encoding","title":"encoding","text":"<p>Default: <code>utf8</code></p> <p>Specify the encoding of your file containing environment variables.</p> <pre><code>require('dotenv').config({ encoding: 'latin1' })\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#debug","title":"debug","text":"<p>Default: <code>false</code></p> <p>Turn on logging to help debug why certain keys or values are not being set as you expect.</p> <pre><code>require('dotenv').config({ debug: process.env.DEBUG })\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#override","title":"override","text":"<p>Default: <code>false</code></p> <p>Override any environment variables that have already been set on your machine with values from your .env file(s). If multiple files have been provided in <code>option.path</code> the override will also be used as each file is combined with the next. Without <code>override</code> being set, the first value wins. With <code>override</code> set the last value wins. </p> <pre><code>require('dotenv').config({ override: true })\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#processenv","title":"processEnv","text":"<p>Default: <code>process.env</code></p> <p>Specify an object to write your environment variables to. Defaults to <code>process.env</code> environment variables.</p> <pre><code>const myObject = {}\nrequire('dotenv').config({ processEnv: myObject })\n\nconsole.log(myObject) // values from .env\nconsole.log(process.env) // this was not changed or written to\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#parse","title":"Parse","text":"<p>The engine which parses the contents of your file containing environment variables is available to use. It accepts a String or Buffer and will return an Object with the parsed keys and values.</p> <pre><code>const dotenv = require('dotenv')\nconst buf = Buffer.from('BASIC=basic')\nconst config = dotenv.parse(buf) // will return an object\nconsole.log(typeof config, config) // object { BASIC : 'basic' }\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#options_1","title":"Options","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#debug_1","title":"debug","text":"<p>Default: <code>false</code></p> <p>Turn on logging to help debug why certain keys or values are not being set as you expect.</p> <pre><code>const dotenv = require('dotenv')\nconst buf = Buffer.from('hello world')\nconst opt = { debug: true }\nconst config = dotenv.parse(buf, opt)\n// expect a debug message because the buffer is not in KEY=VAL form\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#populate","title":"Populate","text":"<p>The engine which populates the contents of your .env file to <code>process.env</code> is available for use. It accepts a target, a source, and options. This is useful for power users who want to supply their own objects.</p> <p>For example, customizing the source:</p> <pre><code>const dotenv = require('dotenv')\nconst parsed = { HELLO: 'world' }\n\ndotenv.populate(process.env, parsed)\n\nconsole.log(process.env.HELLO) // world\n</code></pre> <p>For example, customizing the source AND target:</p> <pre><code>const dotenv = require('dotenv')\nconst parsed = { HELLO: 'universe' }\nconst target = { HELLO: 'world' } // empty object\n\ndotenv.populate(target, parsed, { override: true, debug: true })\n\nconsole.log(target) // { HELLO: 'universe' }\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#options_2","title":"options","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#debug_2","title":"Debug","text":"<p>Default: <code>false</code></p> <p>Turn on logging to help debug why certain keys or values are not being populated as you expect.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#override_1","title":"override","text":"<p>Default: <code>false</code></p> <p>Override any environment variables that have already been set.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#faq","title":"\u2753 FAQ","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#why-is-the-env-file-not-loading-my-environment-variables-successfully","title":"Why is the <code>.env</code> file not loading my environment variables successfully?","text":"<p>Most likely your <code>.env</code> file is not in the correct place. See this stack overflow.</p> <p>Turn on debug mode and try again..</p> <pre><code>require('dotenv').config({ debug: true })\n</code></pre> <p>You will receive a helpful error outputted to your console.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#should-i-commit-my-env-file","title":"Should I commit my <code>.env</code> file?","text":"<p>No. We strongly recommend against committing your <code>.env</code> file to version control. It should only include environment-specific values such as database passwords or API keys. Your production database should have a different password than your development database.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#should-i-have-multiple-env-files","title":"Should I have multiple <code>.env</code> files?","text":"<p>We recommend creating one <code>.env</code> file per environment. Use <code>.env</code> for local/development, <code>.env.production</code> for production and so on. This still follows the twelve factor principles as each is attributed individually to its own environment. Avoid custom set ups that work in inheritance somehow (<code>.env.production</code> inherits values form <code>.env</code> for example). It is better to duplicate values if necessary across each <code>.env.environment</code> file.</p> <p>In a twelve-factor app, env vars are granular controls, each fully orthogonal to other env vars. They are never grouped together as \u201cenvironments\u201d, but instead are independently managed for each deploy. This is a model that scales up smoothly as the app naturally expands into more deploys over its lifetime.</p> <p>\u2013 The Twelve-Factor App</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#what-rules-does-the-parsing-engine-follow","title":"What rules does the parsing engine follow?","text":"<p>The parsing engine currently supports the following rules:</p> <ul> <li><code>BASIC=basic</code> becomes <code>{BASIC: 'basic'}</code></li> <li>empty lines are skipped</li> <li>lines beginning with <code>#</code> are treated as comments</li> <li><code>#</code> marks the beginning of a comment (unless when the value is wrapped in quotes)</li> <li>empty values become empty strings (<code>EMPTY=</code> becomes <code>{EMPTY: ''}</code>)</li> <li>inner quotes are maintained (think JSON) (<code>JSON={\"foo\": \"bar\"}</code> becomes <code>{JSON:\"{\\\"foo\\\": \\\"bar\\\"}\"</code>)</li> <li>whitespace is removed from both ends of unquoted values (see more on <code>trim</code>) (<code>FOO=  some value</code> becomes <code>{FOO: 'some value'}</code>)</li> <li>single and double quoted values are escaped (<code>SINGLE_QUOTE='quoted'</code> becomes <code>{SINGLE_QUOTE: \"quoted\"}</code>)</li> <li>single and double quoted values maintain whitespace from both ends (<code>FOO=\"  some value  \"</code> becomes <code>{FOO: '  some value  '}</code>)</li> <li>double quoted values expand new lines (<code>MULTILINE=\"new\\nline\"</code> becomes</li> </ul> <pre><code>{MULTILINE: 'new\nline'}\n</code></pre> <ul> <li>backticks are supported (<code>BACKTICK_KEY=`This has 'single' and \"double\" quotes inside of it.`</code>)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#what-happens-to-environment-variables-that-were-already-set","title":"What happens to environment variables that were already set?","text":"<p>By default, we will never modify any environment variables that have already been set. In particular, if there is a variable in your <code>.env</code> file which collides with one that already exists in your environment, then that variable will be skipped.</p> <p>If instead, you want to override <code>process.env</code> use the <code>override</code> option.</p> <pre><code>require('dotenv').config({ override: true })\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#how-come-my-environment-variables-are-not-showing-up-for-react","title":"How come my environment variables are not showing up for React?","text":"<p>Your React code is run in Webpack, where the <code>fs</code> module or even the <code>process</code> global itself are not accessible out-of-the-box. <code>process.env</code> can only be injected through Webpack configuration.</p> <p>If you are using <code>react-scripts</code>, which is distributed through <code>create-react-app</code>, it has dotenv built in but with a quirk. Preface your environment variables with <code>REACT_APP_</code>. See this stack overflow for more details.</p> <p>If you are using other frameworks (e.g. Next.js, Gatsby...), you need to consult their documentation for how to inject environment variables into the client.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#can-i-customizewrite-plugins-for-dotenv","title":"Can I customize/write plugins for dotenv?","text":"<p>Yes! <code>dotenv.config()</code> returns an object representing the parsed <code>.env</code> file. This gives you everything you need to continue setting values on <code>process.env</code>. For example:</p> <pre><code>const dotenv = require('dotenv')\nconst variableExpansion = require('dotenv-expand')\nconst myEnv = dotenv.config()\nvariableExpansion(myEnv)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#how-do-i-use-dotenv-with-import","title":"How do I use dotenv with <code>import</code>?","text":"<p>Simply..</p> <pre><code>// index.mjs (ESM)\nimport 'dotenv/config' // see https://github.com/motdotla/dotenv#how-do-i-use-dotenv-with-import\nimport express from 'express'\n</code></pre> <p>A little background..</p> <p>When you run a module containing an <code>import</code> declaration, the modules it imports are loaded first, then each module body is executed in a depth-first traversal of the dependency graph, avoiding cycles by skipping anything already executed.</p> <p>\u2013 ES6 In Depth: Modules</p> <p>What does this mean in plain language? It means you would think the following would work but it won't.</p> <p><code>errorReporter.mjs</code>: <pre><code>class Client {\n  constructor (apiKey) {\n    console.log('apiKey', apiKey)\n\n    this.apiKey = apiKey\n  }\n}\n\nexport default new Client(process.env.API_KEY)\n</code></pre> <code>index.mjs</code>: <pre><code>// Note: this is INCORRECT and will not work\nimport * as dotenv from 'dotenv'\ndotenv.config()\n\nimport errorReporter from './errorReporter.mjs' // process.env.API_KEY will be blank!\n</code></pre></p> <p><code>process.env.API_KEY</code> will be blank.</p> <p>Instead, <code>index.mjs</code> should be written as..</p> <pre><code>import 'dotenv/config'\n\nimport errorReporter from './errorReporter.mjs'\n</code></pre> <p>Does that make sense? It's a bit unintuitive, but it is how importing of ES6 modules work. Here is a working example of this pitfall.</p> <p>There are two alternatives to this approach:</p> <ol> <li>Preload dotenv: <code>node --require dotenv/config index.js</code> (Note: you do not need to <code>import</code> dotenv with this approach)</li> <li>Create a separate file that will execute <code>config</code> first as outlined in this comment on #133</li> </ol>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#why-am-i-getting-the-error-module-not-found-error-cant-resolve-cryptoospath","title":"Why am I getting the error <code>Module not found: Error: Can't resolve 'crypto|os|path'</code>?","text":"<p>You are using dotenv on the front-end and have not included a polyfill. Webpack &lt; 5 used to include these for you. Do the following:</p> <pre><code>npm install node-polyfill-webpack-plugin\n</code></pre> <p>Configure your <code>webpack.config.js</code> to something like the following.</p> <pre><code>require('dotenv').config()\n\nconst path = require('path');\nconst webpack = require('webpack')\n\nconst NodePolyfillPlugin = require('node-polyfill-webpack-plugin')\n\nmodule.exports = {\n  mode: 'development',\n  entry: './src/index.ts',\n  output: {\n    filename: 'bundle.js',\n    path: path.resolve(__dirname, 'dist'),\n  },\n  plugins: [\n    new NodePolyfillPlugin(),\n    new webpack.DefinePlugin({\n      'process.env': {\n        HELLO: JSON.stringify(process.env.HELLO)\n      }\n    }),\n  ]\n};\n</code></pre> <p>Alternatively, just use dotenv-webpack which does this and more behind the scenes for you.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#what-about-variable-expansion","title":"What about variable expansion?","text":"<p>Try dotenv-expand</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#what-about-syncing-and-securing-env-files","title":"What about syncing and securing .env files?","text":"<p>Use dotenvx</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#what-if-i-accidentally-commit-my-env-file-to-code","title":"What if I accidentally commit my <code>.env</code> file to code?","text":"<p>Remove it, remove git history and then install the git pre-commit hook to prevent this from ever happening again. </p> <pre><code>brew install dotenvx/brew/dotenvx\ndotenvx precommit --install\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#how-can-i-prevent-committing-my-env-file-to-a-docker-build","title":"How can I prevent committing my <code>.env</code> file to a Docker build?","text":"<p>Use the docker prebuild hook.</p> <pre><code># Dockerfile\n...\nRUN curl -fsS https://dotenvx.sh/ | sh\n...\nRUN dotenvx prebuild\nCMD [\"dotenvx\", \"run\", \"--\", \"node\", \"index.js\"]\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#contributing-guide","title":"Contributing Guide","text":"<p>See CONTRIBUTING.md</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#changelog","title":"CHANGELOG","text":"<p>See CHANGELOG.md</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/#whos-using-dotenv","title":"Who's using dotenv?","text":"<p>These npm modules depend on it.</p> <p>Projects that expand it often use the keyword \"dotenv\" on npm.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file. See standard-version for commit guidelines.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#unreleased","title":"Unreleased","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1650-2025-04-07","title":"16.5.0 (2025-04-07)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added","title":"Added","text":"<ul> <li>\ud83c\udf89 Added new sponsor Graphite - the AI developer productivity platform helping teams on GitHub ship higher quality software, faster.</li> </ul> <p>[!TIP] Become a sponsor</p> <p>The dotenvx README is viewed thousands of times DAILY on GitHub and NPM. Sponsoring dotenv is a great way to get in front of developers and give back to the developer community at the same time.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed","title":"Changed","text":"<ul> <li>Remove <code>_log</code> method. Use <code>_debug</code> #862</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1647-2024-12-03","title":"16.4.7 (2024-12-03)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_1","title":"Changed","text":"<ul> <li>Ignore <code>.tap</code> folder when publishing. (oops, sorry about that everyone. - @motdotla) #848</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1646-2024-12-02","title":"16.4.6 (2024-12-02)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_2","title":"Changed","text":"<ul> <li>Clean up stale dev dependencies #847</li> <li>Various README updates clarifying usage and alternative solutions using dotenvx</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1645-2024-02-19","title":"16.4.5 (2024-02-19)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_3","title":"Changed","text":"<ul> <li>\ud83d\udc1e Fix recent regression when using <code>path</code> option. return to historical behavior: do not attempt to auto find <code>.env</code> if <code>path</code> set. (regression was introduced in <code>16.4.3</code>) #814</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1644-2024-02-13","title":"16.4.4 (2024-02-13)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_4","title":"Changed","text":"<ul> <li>\ud83d\udc1e Replaced chaining operator <code>?.</code> with old school <code>&amp;&amp;</code> (fixing node 12 failures) #812</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1643-2024-02-12","title":"16.4.3 (2024-02-12)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_5","title":"Changed","text":"<ul> <li>Fixed processing of multiple files in <code>options.path</code> #805</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1642-2024-02-10","title":"16.4.2 (2024-02-10)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_6","title":"Changed","text":"<ul> <li>Changed funding link in package.json to <code>dotenvx.com</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1641-2024-01-24","title":"16.4.1 (2024-01-24)","text":"<ul> <li>Patch support for array as <code>path</code> option #797</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1640-2024-01-23","title":"16.4.0 (2024-01-23)","text":"<ul> <li>Add <code>error.code</code> to error messages around <code>.env.vault</code> decryption handling #795</li> <li>Add ability to find <code>.env.vault</code> file when filename(s) passed as an array #784</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1632-2024-01-18","title":"16.3.2 (2024-01-18)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_1","title":"Added","text":"<ul> <li>Add debug message when no encoding set #735</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_7","title":"Changed","text":"<ul> <li>Fix output typing for <code>populate</code> #792</li> <li>Use subarray instead of slice #793</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1631-2023-06-17","title":"16.3.1 (2023-06-17)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_2","title":"Added","text":"<ul> <li>Add missing type definitions for <code>processEnv</code> and <code>DOTENV_KEY</code> options. #756</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1630-2023-06-16","title":"16.3.0 (2023-06-16)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_3","title":"Added","text":"<ul> <li>Optionally pass <code>DOTENV_KEY</code> to options rather than relying on <code>process.env.DOTENV_KEY</code>. Defaults to <code>process.env.DOTENV_KEY</code> #754</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1620-2023-06-15","title":"16.2.0 (2023-06-15)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_4","title":"Added","text":"<ul> <li>Optionally write to your own target object rather than <code>process.env</code>. Defaults to <code>process.env</code>. #753</li> <li>Add import type URL to types file #751</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1614-2023-06-04","title":"16.1.4 (2023-06-04)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_5","title":"Added","text":"<ul> <li>Added <code>.github/</code> to <code>.npmignore</code> #747</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1613-2023-05-31","title":"16.1.3 (2023-05-31)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#removed","title":"Removed","text":"<ul> <li>Removed <code>browser</code> keys for <code>path</code>, <code>os</code>, and <code>crypto</code> in package.json. These were set to false incorrectly as of 16.1. Instead, if using dotenv on the front-end make sure to include polyfills for <code>path</code>, <code>os</code>, and <code>crypto</code>. node-polyfill-webpack-plugin provides these.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1612-2023-05-31","title":"16.1.2 (2023-05-31)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_8","title":"Changed","text":"<ul> <li>Exposed private function <code>_configDotenv</code> as <code>configDotenv</code>. #744</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1611-2023-05-30","title":"16.1.1 (2023-05-30)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_6","title":"Added","text":"<ul> <li>Added type definition for <code>decrypt</code> function</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_9","title":"Changed","text":"<ul> <li>Fixed <code>{crypto: false}</code> in <code>packageJson.browser</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1610-2023-05-30","title":"16.1.0 (2023-05-30)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_7","title":"Added","text":"<ul> <li>Add <code>populate</code> convenience method #733</li> <li>Accept URL as path option #720</li> <li>Add dotenv to <code>npm fund</code> command</li> <li>Spanish language README #698</li> <li>Add <code>.env.vault</code> support. \ud83c\udf89 (#730)</li> </ul> <p>\u2139\ufe0f <code>.env.vault</code> extends the <code>.env</code> file format standard with a localized encrypted vault file. Package it securely with your production code deploys. It's cloud agnostic so that you can deploy your secrets anywhere \u2013\u00a0without risky third-party integrations. read more</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_10","title":"Changed","text":"<ul> <li>Fixed \"cannot resolve 'fs'\" error on tools like Replit #693</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1603-2022-09-29","title":"16.0.3 (2022-09-29)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_11","title":"Changed","text":"<ul> <li>Added library version to debug logs (#682)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1602-2022-08-30","title":"16.0.2 (2022-08-30)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_8","title":"Added","text":"<ul> <li>Export <code>env-options.js</code> and <code>cli-options.js</code> in package.json for use with downstream dotenv-expand module</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1601-2022-05-10","title":"16.0.1 (2022-05-10)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_12","title":"Changed","text":"<ul> <li>Minor README clarifications</li> <li>Development ONLY: updated devDependencies as recommended for development only security risks (#658)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1600-2022-02-02","title":"16.0.0 (2022-02-02)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_9","title":"Added","text":"<ul> <li>Breaking: Backtick support \ud83c\udf89 (#615)</li> </ul> <p>If you had values containing the backtick character, please quote those values with either single or double quotes.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1501-2022-02-02","title":"15.0.1 (2022-02-02)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_13","title":"Changed","text":"<ul> <li>Properly parse empty single or double quoted values \ud83d\udc1e (#614)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1500-2022-01-31","title":"15.0.0 (2022-01-31)","text":"<p><code>v15.0.0</code> is a major new release with some important breaking changes.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_10","title":"Added","text":"<ul> <li>Breaking: Multiline parsing support (just works. no need for the flag.)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_14","title":"Changed","text":"<ul> <li>Breaking: <code>#</code> marks the beginning of a comment (UNLESS the value is wrapped in quotes. Please update your <code>.env</code> files to wrap in quotes any values containing <code>#</code>. For example: <code>SECRET_HASH=\"something-with-a-#-hash\"</code>).</li> </ul> <p>..Understandably, (as some teams have noted) this is tedious to do across the entire team. To make it less tedious, we recommend using dotenv cli going forward. It's an optional plugin that will keep your <code>.env</code> files in sync between machines, environments, or team members.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#removed_1","title":"Removed","text":"<ul> <li>Breaking: Remove multiline option (just works out of the box now. no need for the flag.)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1432-2022-01-25","title":"14.3.2 (2022-01-25)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_15","title":"Changed","text":"<ul> <li>Preserve backwards compatibility on values containing <code>#</code> \ud83d\udc1e (#603)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1431-2022-01-25","title":"14.3.1 (2022-01-25)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_16","title":"Changed","text":"<ul> <li>Preserve backwards compatibility on exports by re-introducing the prior in-place exports \ud83d\udc1e (#606)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1430-2022-01-24","title":"14.3.0 (2022-01-24)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_11","title":"Added","text":"<ul> <li>Add <code>multiline</code> option \ud83c\udf89 (#486)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1420-2022-01-17","title":"14.2.0 (2022-01-17)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_12","title":"Added","text":"<ul> <li>Add <code>dotenv_config_override</code> cli option</li> <li>Add <code>DOTENV_CONFIG_OVERRIDE</code> command line env option</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1411-2022-01-17","title":"14.1.1 (2022-01-17)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_13","title":"Added","text":"<ul> <li>Add React gotcha to FAQ on README</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1410-2022-01-17","title":"14.1.0 (2022-01-17)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_14","title":"Added","text":"<ul> <li>Add <code>override</code> option \ud83c\udf89 (#595)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1401-2022-01-16","title":"14.0.1 (2022-01-16)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_15","title":"Added","text":"<ul> <li>Log error on failure to load <code>.env</code> file (#594)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1400-2022-01-16","title":"14.0.0 (2022-01-16)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_16","title":"Added","text":"<ul> <li>Breaking: Support inline comments for the parser \ud83c\udf89 (#568)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1301-2022-01-16","title":"13.0.1 (2022-01-16)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_17","title":"Changed","text":"<ul> <li>Hide comments and newlines from debug output (#404)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1300-2022-01-16","title":"13.0.0 (2022-01-16)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_17","title":"Added","text":"<ul> <li>Breaking: Add type file for <code>config.js</code> (#539)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1204-2022-01-16","title":"12.0.4 (2022-01-16)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_18","title":"Changed","text":"<ul> <li>README updates</li> <li>Minor order adjustment to package json format</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1203-2022-01-15","title":"12.0.3 (2022-01-15)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_19","title":"Changed","text":"<ul> <li>Simplified jsdoc for consistency across editors</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1202-2022-01-15","title":"12.0.2 (2022-01-15)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_20","title":"Changed","text":"<ul> <li>Improve embedded jsdoc type documentation</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1201-2022-01-15","title":"12.0.1 (2022-01-15)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_21","title":"Changed","text":"<ul> <li>README updates and clarifications</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1200-2022-01-15","title":"12.0.0 (2022-01-15)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#removed_2","title":"Removed","text":"<ul> <li>Breaking: drop support for Flow static type checker (#584)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_22","title":"Changed","text":"<ul> <li>Move types/index.d.ts to lib/main.d.ts (#585)</li> <li>Typescript cleanup (#587)</li> <li>Explicit typescript inclusion in package.json (#566)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1100-2022-01-11","title":"11.0.0 (2022-01-11)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_23","title":"Changed","text":"<ul> <li>Breaking: drop support for Node v10 (#558)</li> <li>Patch debug option (#550)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#1000-2021-05-20","title":"10.0.0 (2021-05-20)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_18","title":"Added","text":"<ul> <li>Add generic support to parse function</li> <li>Allow for import \"dotenv/config.js\"</li> <li>Add support to resolve home directory in path via ~</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#902-2021-05-10","title":"9.0.2 (2021-05-10)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_24","title":"Changed","text":"<ul> <li>Support windows newlines with debug mode</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#901-2021-05-08","title":"9.0.1 (2021-05-08)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_25","title":"Changed","text":"<ul> <li>Updates to README</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#900-2021-05-05","title":"9.0.0 (2021-05-05)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_26","title":"Changed","text":"<ul> <li>Breaking: drop support for Node v8</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#860-2021-05-05","title":"8.6.0 (2021-05-05)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_19","title":"Added","text":"<ul> <li>define package.json in exports</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#851-2021-05-05","title":"8.5.1 (2021-05-05)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_27","title":"Changed","text":"<ul> <li>updated dev dependencies via npm audit</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#850-2021-05-05","title":"8.5.0 (2021-05-05)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_20","title":"Added","text":"<ul> <li>allow for <code>import \"dotenv/config\"</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#840-2021-05-05","title":"8.4.0 (2021-05-05)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_28","title":"Changed","text":"<ul> <li>point to exact types file to work with VS Code</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#830-2021-05-05","title":"8.3.0 (2021-05-05)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_29","title":"Changed","text":"<ul> <li>Breaking: drop support for Node v8 (mistake to be released as minor bump. later bumped to 9.0.0. see above.)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#820-2019-10-16","title":"8.2.0 (2019-10-16)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_21","title":"Added","text":"<ul> <li>TypeScript types</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#810-2019-08-18","title":"8.1.0 (2019-08-18)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_30","title":"Changed","text":"<ul> <li>Breaking: drop support for Node v6 (#392)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#800-2019-05-02","title":"8.0.0 (2019-05-02)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_31","title":"Changed","text":"<ul> <li>Breaking: drop support for Node v6 (#302)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#700-2019-03-12","title":"7.0.0 - 2019-03-12","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#fixed","title":"Fixed","text":"<ul> <li>Fix removing unbalanced quotes (#376)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#removed_3","title":"Removed","text":"<ul> <li>Removed <code>load</code> alias for <code>config</code> for consistency throughout code and documentation.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#620-2018-12-03","title":"6.2.0 - 2018-12-03","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_22","title":"Added","text":"<ul> <li>Support preload configuration via environment variables (#351)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#610-2018-10-08","title":"6.1.0 - 2018-10-08","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_23","title":"Added","text":"<ul> <li><code>debug</code> option for <code>config</code> and <code>parse</code> methods will turn on logging</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#600-2018-06-02","title":"6.0.0 - 2018-06-02","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_32","title":"Changed","text":"<ul> <li>Breaking: drop support for Node v4 (#304)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#500-2018-01-29","title":"5.0.0 - 2018-01-29","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_24","title":"Added","text":"<ul> <li>Testing against Node v8 and v9</li> <li>Documentation on trim behavior of values</li> <li>Documentation on how to use with <code>import</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_33","title":"Changed","text":"<ul> <li>Breaking: default <code>path</code> is now <code>path.resolve(process.cwd(), '.env')</code></li> <li>Breaking: does not write over keys already in <code>process.env</code> if the key has a falsy value</li> <li>using <code>const</code> and <code>let</code> instead of <code>var</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#removed_4","title":"Removed","text":"<ul> <li>Testing against Node v7</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#400-2016-12-23","title":"4.0.0 - 2016-12-23","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_34","title":"Changed","text":"<ul> <li>Return Object with parsed content or error instead of false (#165).</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#removed_5","title":"Removed","text":"<ul> <li><code>verbose</code> option removed in favor of returning result.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#300-2016-12-20","title":"3.0.0 - 2016-12-20","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_25","title":"Added","text":"<ul> <li><code>verbose</code> option will log any error messages. Off by default.</li> <li>parses email addresses correctly</li> <li>allow importing config method directly in ES6</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_35","title":"Changed","text":"<ul> <li>Suppress error messages by default (#154)</li> <li>Ignoring more files for NPM to make package download smaller</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#fixed_1","title":"Fixed","text":"<ul> <li>False positive test due to case-sensitive variable (#124)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#removed_6","title":"Removed","text":"<ul> <li><code>silent</code> option removed in favor of <code>verbose</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#200-2016-01-20","title":"2.0.0 - 2016-01-20","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_26","title":"Added","text":"<ul> <li>CHANGELOG to \"make it easier for users and contributors to see precisely what notable changes have been made between each release\". Linked to from README</li> <li>LICENSE to be more explicit about what was defined in <code>package.json</code>. Linked to from README</li> <li>Testing nodejs v4 on travis-ci</li> <li>added examples of how to use dotenv in different ways</li> <li>return parsed object on success rather than boolean true</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_36","title":"Changed","text":"<ul> <li>README has shorter description not referencing ruby gem since we don't have or want feature parity</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#removed_7","title":"Removed","text":"<ul> <li>Variable expansion and escaping so environment variables are encouraged to be fully orthogonal</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#120-2015-06-20","title":"1.2.0 - 2015-06-20","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_27","title":"Added","text":"<ul> <li>Preload hook to require dotenv without including it in your code</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#changed_37","title":"Changed","text":"<ul> <li>clarified license to be \"BSD-2-Clause\" in <code>package.json</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#fixed_2","title":"Fixed","text":"<ul> <li>retain spaces in string vars</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#110-2015-03-31","title":"1.1.0 - 2015-03-31","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#added_28","title":"Added","text":"<ul> <li>Silent option to silence <code>console.log</code> when <code>.env</code> missing</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#100-2015-03-13","title":"1.0.0 - 2015-03-13","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/CHANGELOG/#removed_8","title":"Removed","text":"<ul> <li>support for multiple <code>.env</code> files. should always use one <code>.env</code> file for the current environment</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/","title":"README es","text":"\ud83c\udf89 announcing dotenvx. run anywhere, multi-environment, encrypted envs.  <p> <sup> Dotenv es apoyado por la comunidad. </sup> </p> <sup>Gracias espaciales a:</sup> Warp is a blazingly fast, Rust-based terminal reimagined to work like a modern app. <sup>Get more done in the CLI with real text editing, block-based output, and AI command search.</sup> Graphite is the AI developer productivity platform helping teams on GitHub ship higher quality software, faster."},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#dotenv","title":"dotenv","text":"<p>Dotenv es un m\u00f3dulo de dependencia cero que carga las variables de entorno desde un archivo <code>.env</code> en <code>process.env</code>. El almacenamiento de la configuraci\u00f3n del entorno separado del c\u00f3digo est\u00e1 basado en la metodolog\u00eda The Twelve-Factor App.</p> <p> </p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#instalacion","title":"Instalaci\u00f3n","text":"<pre><code># instalaci\u00f3n local (recomendado)\nnpm install dotenv --save\n</code></pre> <p>O installaci\u00f3n con yarn? <code>yarn add dotenv</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#uso","title":"Uso","text":"<p>Cree un archivo <code>.env</code> en la ra\u00edz de su proyecto:</p> <pre><code>S3_BUCKET=\"YOURS3BUCKET\"\nSECRET_KEY=\"YOURSECRETKEYGOESHERE\"\n</code></pre> <p>Tan pr\u00f3nto como sea posible en su aplicaci\u00f3n, importe y configure dotenv:</p> <pre><code>require('dotenv').config()\nconsole.log(process.env) // elimine esto despu\u00e9s que haya confirmado que esta funcionando\n</code></pre> <p>.. o usa ES6?</p> <pre><code>import * as dotenv from 'dotenv' // vea en https://github.com/motdotla/dotenv#como-uso-dotenv-con-import\n// REVISAR LINK DE REFERENCIA DE IMPORTACI\u00d3N\ndotenv.config()\nimport express from 'express'\n</code></pre> <p>Eso es todo. <code>process.env</code> ahora tiene las claves y los valores que definiste en tu archivo <code>.env</code>:</p> <pre><code>require('dotenv').config()\n\n...\n\ns3.getBucketCors({Bucket: process.env.S3_BUCKET}, function(err, data) {})\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#valores-multilinea","title":"Valores multil\u00ednea","text":"<p>Si necesita variables de varias l\u00edneas, por ejemplo, claves privadas, ahora se admiten en la versi\u00f3n (<code>&gt;= v15.0.0</code>) con saltos de l\u00ednea:</p> <pre><code>PRIVATE_KEY=\"-----BEGIN RSA PRIVATE KEY-----\n...\nKh9NV...\n...\n-----END RSA PRIVATE KEY-----\"\n</code></pre> <p>Alternativamente, puede usar comillas dobles y usar el car\u00e1cter <code>\\n</code>:</p> <pre><code>PRIVATE_KEY=\"-----BEGIN RSA PRIVATE KEY-----\\nKh9NV...\\n-----END RSA PRIVATE KEY-----\\n\"\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#comentarios","title":"Comentarios","text":"<p>Los comentarios pueden ser agregados en tu archivo o en la misma l\u00ednea:</p> <pre><code># This is a comment\nSECRET_KEY=YOURSECRETKEYGOESHERE # comment\nSECRET_HASH=\"something-with-a-#-hash\"\n</code></pre> <p>Los comentarios comienzan donde existe un <code>#</code>, entonces, si su valor contiene un <code>#</code>, enci\u00e9rrelo entre comillas. Este es un cambio importante desde la versi\u00f3n <code>&gt;= v15.0.0</code> en adelante.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#analisis","title":"An\u00e1lisis","text":"<p>El motor que analiza el contenido de su archivo que contiene variables de entorno est\u00e1 disponible para su uso. Este Acepta una Cadena o un B\u00fafer y devolver\u00e1 un Objeto con las claves y los valores analizados.</p> <pre><code>const dotenv = require('dotenv')\nconst buf = Buffer.from('BASICO=basico')\nconst config = dotenv.parse(buf) // devolver\u00e1 un objeto\nconsole.log(typeof config, config) // objeto { BASICO : 'basico' }\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#precarga","title":"Precarga","text":"<p>Puede usar el <code>--require</code> (<code>-r</code>) opci\u00f3n de l\u00ednea de comando para precargar dotenv. Al hacer esto, no necesita requerir ni cargar dotnev en el c\u00f3digo de su aplicaci\u00f3n.</p> <pre><code>$ node -r dotenv/config tu_script.js\n</code></pre> <p>Las opciones de configuraci\u00f3n a continuaci\u00f3n se admiten como argumentos de l\u00ednea de comandos en el formato <code>dotenv_config_&lt;option&gt;=value</code></p> <pre><code>$ node -r dotenv/config tu_script.js dotenv_config_path=/custom/path/to/.env dotenv_config_debug=true\n</code></pre> <p>Adem\u00e1s, puede usar variables de entorno para establecer opciones de configuraci\u00f3n. Los argumentos de l\u00ednea de comandos preceder\u00e1n a estos.</p> <pre><code>$ DOTENV_CONFIG_&lt;OPTION&gt;=value node -r dotenv/config tu_script.js\n</code></pre> <pre><code>$ DOTENV_CONFIG_ENCODING=latin1 DOTENV_CONFIG_DEBUG=true node -r dotenv/config tu_script.js dotenv_config_path=/custom/path/to/.env\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#expansion-variable","title":"Expansi\u00f3n Variable","text":"<p>Necesitaras agregar el valor de otro variable en una de sus variables? Usa dotenv-expand.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#sincronizando","title":"Sincronizando","text":"<p>Necesitas mentener sincronizados los archivos <code>.env</code> entre maquinas, entornos, o miembros del equipo? Usa  dotenv-vault.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#ejemplos","title":"Ejemplos","text":"<p>Vea ejemplos sobre el uso de dotenv con varios frameworks, lenguajes y configuraciones.</p> <ul> <li>nodejs</li> <li>nodejs (depurar en)</li> <li>nodejs (anular en)</li> <li>esm</li> <li>esm (precarga)</li> <li>typescript</li> <li>typescript parse</li> <li>typescript config</li> <li>webpack</li> <li>webpack (plugin)</li> <li>react</li> <li>react (typescript)</li> <li>express</li> <li>nestjs</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#documentacion","title":"Documentaci\u00f3n","text":"<p>Dotenv expone dos funciones:</p> <ul> <li><code>configuraci\u00f3n</code></li> <li><code>analizar</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#configuracion","title":"Configuraci\u00f3n","text":"<p><code>Configuraci\u00f3n</code> leer\u00e1 su archivo <code>.env</code>, analizar\u00e1 el contenido, lo asignar\u00e1 a <code>process.env</code>, y devolver\u00e1 un Objeto con una clave <code>parsed</code> que contiene el contenido cargado o una clave <code>error</code> si falla.</p> <pre><code>const result = dotenv.config()\n\nif (result.error) {\n  throw result.error\n}\n\nconsole.log(result.parsed)\n</code></pre> <p>Adicionalmente, puede pasar opciones a <code>configuracion</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#opciones","title":"Opciones","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#ruta","title":"Ruta","text":"<p>Por defecto: <code>path.resolve(process.cwd(), '.env')</code></p> <p>Especifique una ruta personalizada si el archivo que contiene las variables de entorno se encuentra localizado en otro lugar.</p> <pre><code>require('dotenv').config({ path: '/personalizado/ruta/a/.env' })\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#codificacion","title":"Codificaci\u00f3n","text":"<p>Por defecto: <code>utf8</code></p> <p>Especifique la codificaci\u00f3n del archivo que contiene las variables de entorno.</p> <pre><code>require('dotenv').config({ encoding: 'latin1' })\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#depurar","title":"Depurar","text":"<p>Por defecto: <code>false</code></p> <p>Active el registro de ayuda para depurar por qu\u00e9 ciertas claves o valores no se inician como lo esperabas.</p> <pre><code>require('dotenv').config({ debug: process.env.DEBUG })\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#anular","title":"Anular","text":"<p>Por defecto: <code>false</code></p> <p>Anule cualquier variable de entorno que ya se haya configurada en su maquina con los valores de su archivo .env.</p> <pre><code>require('dotenv').config({ override: true })\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#analizar","title":"Analizar","text":"<p>El motor que analiza el contenido del archivo que contiene las variables de entorno est\u00e1 disponible para su uso. Acepta una Cadena o un B\u00fafer y retornar\u00e1 un objecto con los valores analizados.</p> <pre><code>const dotenv = require('dotenv')\nconst buf = Buffer.from('BASICO=basico')\nconst config = dotenv.parse(buf) // devolver\u00e1 un objeto\nconsole.log(typeof config, config) // objeto { BASICO : 'basico' }\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#opciones_1","title":"Opciones","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#depurar_1","title":"Depurar","text":"<p>Por defecto: <code>false</code></p> <p>Active el registro de ayuda para depurar por qu\u00e9 ciertas claves o valores no se inician como lo esperabas.</p> <pre><code>const dotenv = require('dotenv')\nconst buf = Buffer.from('hola mundo')\nconst opt = { debug: true }\nconst config = dotenv.parse(buf, opt)\n// espere por un mensaje de depuraci\u00f3n porque el b\u00fafer no esta listo KEY=VAL\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#faq","title":"FAQ","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#por-que-el-archivo-env-no-carga-mis-variables-de-entorno-correctamente","title":"\u00bfPor qu\u00e9 el archivo <code>.env</code> no carga mis variables de entorno correctamente?","text":"<p>Lo m\u00e1s probable es que su archivo <code>.env</code> no est\u00e9 en el lugar correcto. Vea este stack overflow.</p> <p>Active el modo de depuraci\u00f3n y vuelva a intentarlo...</p> <pre><code>require('dotenv').config({ debug: true })\n</code></pre> <p>Recibir\u00e1 un error apropiado en su consola.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#debo-confirmar-mi-archivo-env","title":"\u00bfDebo confirmar mi archivo <code>.env</code>?","text":"<p>No. Recomendamos enf\u00e1ticamente no enviar su archivo <code>.env</code> a la versi\u00f3n de control. Solo debe incluir los valores especificos del entorno, como la base de datos, contrase\u00f1as o claves API.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#deberia-tener-multiples-archivos-env","title":"\u00bfDeber\u00eda tener multiples archivos <code>.env</code>?","text":"<p>No. Recomendamos enf\u00e1ticamente no tener un archivo <code>.env</code> \"principal\" y un archivo <code>.env</code> de \"entorno\" como <code>.env.test</code>. Su configuraci\u00f3n debe variar entre implementaciones y no debe compartir valores entre entornos.</p> <p>En una Aplicaci\u00f3n de Doce Factores, las variables de entorno son controles diferenciados, cada uno totalmente independiente a otras variables de entorno. Nunca se agrupan como \"entornos\", sino que se gestionan de manera independiente para cada despliegue. Este es un modelo que se escala sin problemas a medida que la aplicaci\u00f3n se expande de forma natural en m\u00e1s despliegues a lo largo de su vida.</p> <p>\u2013 La Apliaci\u00f3n de los Doce Factores</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#que-reglas-sigue-el-motor-de-analisis","title":"\u00bfQu\u00e9 reglas sigue el motor de an\u00e1lisis?","text":"<p>El motor de an\u00e1lisis actualmente admite las siguientes reglas:</p> <ul> <li><code>BASICO=basico</code> se convierte en <code>{BASICO: 'basico'}</code></li> <li>las l\u00edneas vac\u00edas se saltan</li> <li>las l\u00edneas que comienzan con <code>#</code> se tratan como comentarios</li> <li><code>#</code> marca el comienzo de un comentario (a menos que el valor est\u00e9 entre comillas)</li> <li>valores vac\u00edos se convierten en cadenas vac\u00edas (<code>VACIO=</code> se convierte en <code>{VACIO: ''}</code>)</li> <li>las comillas internas se mantienen (piensa en JSON) (<code>JSON={\"foo\": \"bar\"}</code> se convierte en <code>{JSON:\"{\\\"foo\\\": \\\"bar\\\"}\"</code>)</li> <li>los espacios en blanco se eliminan de ambos extremos de los valores no citanos (aprende m\u00e1s en <code>trim</code>) (<code>FOO=  algo</code> se convierte en <code>{FOO: 'algo'}</code>)</li> <li>los valores entre comillas simples y dobles se escapan (<code>CITA_SIMPLE='citado'</code> se convierte en <code>{CITA_SIMPLE: \"citado\"}</code>)</li> <li>los valores entre comillas simples y dobles mantienen los espacios en blanco en ambos extremos  (<code>FOO=\"  algo  \"</code> se convierte en <code>{FOO: '  algo  '}</code>)</li> <li>los valores entre comillas dobles expanden nuevas l\u00edneas (<code>MULTILINEA=\"nueva\\nl\u00ednea\"</code> se convierte en</li> </ul> <pre><code>{MULTILINEA: 'nueva\nl\u00ednea'}\n</code></pre> <ul> <li>se admite la comilla simple invertida (<code>SIGNO_ACENTO=`Esto tiene comillas 'simples' y \"dobles\" en su interior.`</code>)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#que-sucede-con-las-variables-de-entorno-que-ya-estaban-configuradas","title":"\u00bfQu\u00e9 sucede con las variables de entorno que ya estaban configuradas?","text":"<p>Por defecto, nunca modificaremos ninguna variable de entorno que ya haya sido establecida. En particular, si hay una variable en su archivo <code>.env</code> que colisiona con una que ya existe en su entorno, entonces esa variable se omitir\u00e1.</p> <p>Si por el contrario, quieres anular <code>process.env</code> utiliza la opci\u00f3n <code>override</code>.</p> <pre><code>require('dotenv').config({ override: true })\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#por-que-mis-variables-de-entorno-no-aparecen-para-react","title":"\u00bfPor qu\u00e9 mis variables de entorno no aparecen para React?","text":"<p>Su c\u00f3digo React se ejecuta en Webpack, donde el m\u00f3dulo <code>fs</code> o incluso el propio <code>process</code> global no son accesibles fuera-de-la-caja. El m\u00f3dulo <code>process.env</code> s\u00f3lo puede ser inyectado a trav\u00e9s de la configuraci\u00f3n de Webpack.</p> <p>Si est\u00e1s usando <code>react-scripts</code>, el cual se distribuye a trav\u00e9s de <code>create-react-app</code>, tiene dotenv incorporado pero con una singularidad. Escriba sus variables de entorno con <code>REACT_APP_</code>. Vea este stack overflow para m\u00e1s detalles.</p> <p>Si est\u00e1s utilizando otros frameworks (por ejemplo, Next.js, Gatsby...), debes consultar su documentaci\u00f3n para saber c\u00f3mo injectar variables de entorno en el cliente.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#puedo-personalizarescribir-plugins-para-dotenv","title":"\u00bfPuedo personalizar/escribir plugins para dotenv?","text":"<p>S\u00ed! <code>dotenv.config()</code> devuelve un objeto que representa el archivo <code>.env</code> analizado. Esto te da todo lo que necesitas para poder establecer valores en <code>process.env</code>. Por ejemplo:</p> <pre><code>const dotenv = require('dotenv')\nconst variableExpansion = require('dotenv-expand')\nconst miEnv = dotenv.config()\nvariableExpansion(miEnv)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#como-uso-dotnev-con-import","title":"C\u00f3mo uso dotnev con <code>import</code>?","text":"<p>Simplemente..</p> <pre><code>// index.mjs (ESM)\nimport * as dotenv from 'dotenv' // vea https://github.com/motdotla/dotenv#como-uso-dotenv-con-import\ndotenv.config()\nimport express from 'express'\n</code></pre> <p>Un poco de historia...</p> <p>Cuando se ejecuta un m\u00f3dulo que contiene una sentencia <code>import</code>, los m\u00f3dulos que importa ser\u00e1n cargados primero, y luego se ejecuta cada bloque del m\u00f3dulo en un recorrido en profundidad del gr\u00e1fico de dependencias, evitando los ciclos al saltarse todo lo que ya se ha ejecutado.</p> <p>\u2013 ES6 en Profundidad: M\u00f3dulos</p> <p>\u00bfQu\u00e9 significa esto en lenguaje sencillo? Significa que se podr\u00edas pensar que lo siguiente funcionar\u00eda pero no lo har\u00e1.</p> <pre><code>// notificarError.mjs\nimport { Cliente } from 'mejor-servicio-para-notificar-error'\n\nexport default new Client(process.env.CLAVE_API)\n\n// index.mjs\nimport dotenv from 'dotenv'\ndotenv.config()\n\nimport notificarError from './notificarError.mjs'\nnotificarError.report(new Error('ejemplo documentado'))\n</code></pre> <p><code>process.env.CLAVE_API</code> ser\u00e1 vacio.</p> <p>En su lugar, el c\u00f3digo anterior debe ser escrito como...</p> <pre><code>// notificarError.mjs\nimport { Cliente } from 'mejor-servicio-para-notificar-errores'\n\nexport default new Client(process.env.CLAVE_API)\n\n// index.mjs\nimport * as dotenv from 'dotenv'\ndotenv.config()\n\nimport notificarError from './notificarError.mjs'\nnotificarError.report(new Error('ejemplo documentado'))\n</code></pre> <p>\u00bfEsto tiene algo de sentido? Esto es poco poco intuitivo, pero es como funciona la importaci\u00f3n de m\u00f3dulos en ES6. Aqu\u00ed hay un ejemplo ejemplo pr\u00e1ctico de esta trampa.</p> <p>Existen dos arternativas a este planteamiento:</p> <ol> <li>Precarga dotenv: <code>node --require dotenv/config index.js</code> (Nota: no es necesario usar <code>import</code> dotenv con este m\u00e9todo)</li> <li>Cree un archivo separado que ejecutar\u00e1 <code>config</code> primero como se describe en este comentario #133</li> </ol>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#que-pasa-con-la-expansion-de-variable","title":"\u00bfQu\u00e9 pasa con la expansi\u00f3n de variable?","text":"<p>Prueba dotenv-expand</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#que-pasa-con-la-sincronizacion-y-la-seguridad-de-los-archivos-env","title":"\u00bfQu\u00e9 pasa con la sincronizaci\u00f3n y la seguridad de los archivos .env?","text":"<p>Vea dotenv-vault</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#guia-de-contribucion","title":"Gu\u00eda de contribuci\u00f3n","text":"<p>Vea CONTRIBUTING.md</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#registro-de-cambios","title":"REGISTRO DE CAMBIOS","text":"<p>Vea CHANGELOG.md</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dotenv/README-es/#quienes-utilizan-dotenv","title":"\u00bfQui\u00e9nes utilizan dotenv?","text":"<p>Estos m\u00f3dulos npm dependen de \u00e9l.</p> <p>Los proyectos que lo ampl\u00edan suelen utilizar la palabra clave \"dotenv\" en npm.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dunder-proto/","title":"dunder-proto","text":"<p>If available, the <code>Object.prototype.__proto__</code> accessor and mutator, call-bound.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dunder-proto/#getting-started","title":"Getting started","text":"<pre><code>npm install --save dunder-proto\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dunder-proto/#usageexamples","title":"Usage/Examples","text":"<pre><code>const assert = require('assert');\nconst getDunder = require('dunder-proto/get');\nconst setDunder = require('dunder-proto/set');\n\nconst obj = {};\n\nassert.equal('toString' in obj, true);\nassert.equal(getDunder(obj), Object.prototype);\n\nsetDunder(obj, null);\n\nassert.equal('toString' in obj, false);\nassert.equal(getDunder(obj), null);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/dunder-proto/#tests","title":"Tests","text":"<p>Clone the repo, <code>npm install</code>, and run <code>npm test</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dunder-proto/CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/dunder-proto/CHANGELOG/#v101-2024-12-16","title":"v1.0.1 - 2024-12-16","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dunder-proto/CHANGELOG/#commits","title":"Commits","text":"<ul> <li>[Fix] do not crash when <code>--disable-proto=throw</code> <code>6c367d9</code></li> <li>[Tests] ensure noproto tests only use the current version of dunder-proto <code>b02365b</code></li> <li>[Dev Deps] update <code>@arethetypeswrong/cli</code>, <code>@types/tape</code> <code>e3c5c3b</code></li> <li>[Deps] update <code>call-bind-apply-helpers</code> <code>19f1da0</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/dunder-proto/CHANGELOG/#v100-2024-12-06","title":"v1.0.0 - 2024-12-06","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/dunder-proto/CHANGELOG/#commits_1","title":"Commits","text":"<ul> <li>Initial implementation, tests, readme, types <code>a5b74b0</code></li> <li>Initial commit <code>73fb5a3</code></li> <li>npm init <code>80152dc</code></li> <li>Only apps should have lockfiles <code>03e6660</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/ecdsa-sig-formatter/","title":"ecdsa-sig-formatter","text":"<p>Translate between JOSE and ASN.1/DER encodings for ECDSA signatures</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/ecdsa-sig-formatter/#install","title":"Install","text":"<pre><code>npm install ecdsa-sig-formatter --save\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/ecdsa-sig-formatter/#usage","title":"Usage","text":"<pre><code>var format = require('ecdsa-sig-formatter');\n\nvar derSignature = '..'; // asn.1/DER encoded ecdsa signature\n\nvar joseSignature = format.derToJose(derSignature);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/ecdsa-sig-formatter/#api","title":"API","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/ecdsa-sig-formatter/#dertojosebufferstring-signature-string-alg-string","title":"<code>.derToJose(Buffer|String signature, String alg)</code> -&gt; <code>String</code>","text":"<p>Convert the ASN.1/DER encoded signature to a JOSE-style concatenated signature. Returns a base64 url encoded <code>String</code>.</p> <ul> <li>If signature is a <code>String</code>, it should be base64 encoded</li> <li>alg must be one of ES256, ES384 or ES512</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/ecdsa-sig-formatter/#josetoderbufferstring-signature-string-alg-buffer","title":"<code>.joseToDer(Buffer|String signature, String alg)</code> -&gt; <code>Buffer</code>","text":"<p>Convert the JOSE-style concatenated signature to an ASN.1/DER encoded signature. Returns a <code>Buffer</code></p> <ul> <li>If signature is a <code>String</code>, it should be base64 url encoded</li> <li>alg must be one of ES256, ES384 or ES512</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/ecdsa-sig-formatter/#contributing","title":"Contributing","text":"<ol> <li> <p>Fork the repository. Committing directly against this repository is    highly discouraged.</p> </li> <li> <p>Make your modifications in a branch, updating and writing new unit tests    as necessary in the <code>spec</code> directory.</p> </li> <li> <p>Ensure that all tests pass with <code>npm test</code></p> </li> <li> <p><code>rebase</code> your changes against master. Do not merge.</p> </li> <li> <p>Submit a pull request to this repository. Wait for tests to run and someone    to chime in.</p> </li> </ol>"},{"location":"system-desing/crud-app/JS/server/node_modules/ecdsa-sig-formatter/#code-style","title":"Code Style","text":"<p>This repository is configured with EditorConfig and ESLint rules.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/ee-first/","title":"EE First","text":"<p>Get the first event in a set of event emitters and event pairs, then clean up after itself.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/ee-first/#install","title":"Install","text":"<pre><code>$ npm install ee-first\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/ee-first/#api","title":"API","text":"<pre><code>var first = require('ee-first')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/ee-first/#firstarr-listener","title":"first(arr, listener)","text":"<p>Invoke <code>listener</code> on the first event from the list specified in <code>arr</code>. <code>arr</code> is an array of arrays, with each array in the format <code>[ee, ...event]</code>. <code>listener</code> will be called only once, the first time any of the given events are emitted. If <code>error</code> is one of the listened events, then if that fires first, the <code>listener</code> will be given the <code>err</code> argument.</p> <p>The <code>listener</code> is invoked as <code>listener(err, ee, event, args)</code>, where <code>err</code> is the first argument emitted from an <code>error</code> event, if applicable; <code>ee</code> is the event emitter that fired; <code>event</code> is the string event name that fired; and <code>args</code> is an array of the arguments that were emitted on the event.</p> <pre><code>var ee1 = new EventEmitter()\nvar ee2 = new EventEmitter()\n\nfirst([\n  [ee1, 'close', 'end', 'error'],\n  [ee2, 'error']\n], function (err, ee, event, args) {\n  // listener invoked\n})\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/ee-first/#cancel","title":".cancel()","text":"<p>The group of listeners can be cancelled before being invoked and have all the event listeners removed from the underlying event emitters.</p> <pre><code>var thunk = first([\n  [ee1, 'close', 'end', 'error'],\n  [ee2, 'error']\n], function (err, ee, event, args) {\n  // listener invoked\n})\n\n// cancel and clean up\nthunk.cancel()\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/encodeurl/","title":"Encode URL","text":"<p>Encode a URL to a percent-encoded form, excluding already-encoded sequences.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/encodeurl/#installation","title":"Installation","text":"<pre><code>npm install encodeurl\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/encodeurl/#api","title":"API","text":"<pre><code>var encodeUrl = require('encodeurl')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/encodeurl/#encodeurlurl","title":"encodeUrl(url)","text":"<p>Encode a URL to a percent-encoded form, excluding already-encoded sequences.</p> <p>This function accepts a URL and encodes all the non-URL code points (as UTF-8 byte sequences). It will not encode the \"%\" character unless it is not part of a valid sequence (<code>%20</code> will be left as-is, but <code>%foo</code> will be encoded as <code>%25foo</code>).</p> <p>This encode is meant to be \"safe\" and does not throw errors. It will try as hard as it can to properly encode the given URL, including replacing any raw, unpaired surrogate pairs with the Unicode replacement character prior to encoding.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/encodeurl/#examples","title":"Examples","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/encodeurl/#encode-a-url-containing-user-controlled-data","title":"Encode a URL containing user-controlled data","text":"<pre><code>var encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\n\nhttp.createServer(function onRequest (req, res) {\n  // get encoded form of inbound url\n  var url = encodeUrl(req.url)\n\n  // create html message\n  var body = '&lt;p&gt;Location ' + escapeHtml(url) + ' not found&lt;/p&gt;'\n\n  // send a 404\n  res.statusCode = 404\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n  res.setHeader('Content-Length', String(Buffer.byteLength(body, 'utf-8')))\n  res.end(body, 'utf-8')\n})\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/encodeurl/#encode-a-url-for-use-in-a-header-field","title":"Encode a URL for use in a header field","text":"<pre><code>var encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar url = require('url')\n\nhttp.createServer(function onRequest (req, res) {\n  // parse inbound url\n  var href = url.parse(req)\n\n  // set new host for redirect\n  href.host = 'localhost'\n  href.protocol = 'https:'\n  href.slashes = true\n\n  // create location header\n  var location = encodeUrl(url.format(href))\n\n  // create html message\n  var body = '&lt;p&gt;Redirecting to new site: ' + escapeHtml(location) + '&lt;/p&gt;'\n\n  // send a 301\n  res.statusCode = 301\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n  res.setHeader('Content-Length', String(Buffer.byteLength(body, 'utf-8')))\n  res.setHeader('Location', location)\n  res.end(body, 'utf-8')\n})\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/encodeurl/#similarities","title":"Similarities","text":"<p>This function is similar to the intrinsic function <code>encodeURI</code>. However, it will not encode:</p> <ul> <li>The <code>\\</code>, <code>^</code>, or <code>|</code> characters</li> <li>The <code>%</code> character when it's part of a valid sequence</li> <li><code>[</code> and <code>]</code> (for IPv6 hostnames)</li> <li>Replaces raw, unpaired surrogate pairs with the Unicode replacement character</li> </ul> <p>As a result, the encoding aligns closely with the behavior in the WHATWG URL specification. However, this package only encodes strings and does not do any URL parsing or formatting.</p> <p>It is expected that any output from <code>new URL(url)</code> will not change when used with this package, as the output has already been encoded. Additionally, if we were to encode before <code>new URL(url)</code>, we do not expect the before and after encoded formats to be parsed any differently.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/encodeurl/#testing","title":"Testing","text":"<pre><code>$ npm test\n$ npm run lint\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/encodeurl/#references","title":"References","text":"<ul> <li>RFC 3986: Uniform Resource Identifier (URI): Generic Syntax</li> <li>WHATWG URL Living Standard</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/encodeurl/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/es-define-property/","title":"es-define-property","text":"<p><code>Object.defineProperty</code>, but not IE 8's broken one.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/es-define-property/#example","title":"Example","text":"<pre><code>const assert = require('assert');\n\nconst $defineProperty = require('es-define-property');\n\nif ($defineProperty) {\n    assert.equal($defineProperty, Object.defineProperty);\n} else if (Object.defineProperty) {\n    assert.equal($defineProperty, false, 'this is IE 8');\n} else {\n    assert.equal($defineProperty, false, 'this is an ES3 engine');\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/es-define-property/#tests","title":"Tests","text":"<p>Simply clone the repo, <code>npm install</code>, and run <code>npm test</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/es-define-property/#security","title":"Security","text":"<p>Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/es-define-property/CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/es-define-property/CHANGELOG/#v101-2024-12-06","title":"v1.0.1 - 2024-12-06","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/es-define-property/CHANGELOG/#commits","title":"Commits","text":"<ul> <li>[types] use shared tsconfig <code>954a663</code></li> <li>[actions] split out node 10-20, and 20+ <code>3a8e84b</code></li> <li>[Dev Deps] update <code>@ljharb/eslint-config</code>, <code>@ljharb/tsconfig</code>, <code>@types/get-intrinsic</code>, <code>@types/tape</code>, <code>auto-changelog</code>, <code>gopd</code>, <code>tape</code> <code>86ae27b</code></li> <li>[Refactor] avoid using <code>get-intrinsic</code> <code>02480c0</code></li> <li>[Tests] replace <code>aud</code> with <code>npm audit</code> <code>f6093ff</code></li> <li>[Tests] configure testling <code>7139e66</code></li> <li>[Dev Deps] update <code>tape</code> <code>b901b51</code></li> <li>[Tests] fix types in tests <code>469d269</code></li> <li>[Dev Deps] add missing peer dep <code>733acfb</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/es-define-property/CHANGELOG/#v100-2024-02-12","title":"v1.0.0 - 2024-02-12","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/es-define-property/CHANGELOG/#commits_1","title":"Commits","text":"<ul> <li>Initial implementation, tests, readme, types <code>3e154e1</code></li> <li>Initial commit <code>07d98de</code></li> <li>npm init <code>c4eb634</code></li> <li>Only apps should have lockfiles <code>7af86ec</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/","title":"es-errors","text":"<p>A simple cache for a few of the JS Error constructors.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/#example","title":"Example","text":"<pre><code>const assert = require('assert');\n\nconst Base = require('es-errors');\nconst Eval = require('es-errors/eval');\nconst Range = require('es-errors/range');\nconst Ref = require('es-errors/ref');\nconst Syntax = require('es-errors/syntax');\nconst Type = require('es-errors/type');\nconst URI = require('es-errors/uri');\n\nassert.equal(Base, Error);\nassert.equal(Eval, EvalError);\nassert.equal(Range, RangeError);\nassert.equal(Ref, ReferenceError);\nassert.equal(Syntax, SyntaxError);\nassert.equal(Type, TypeError);\nassert.equal(URI, URIError);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/#tests","title":"Tests","text":"<p>Simply clone the repo, <code>npm install</code>, and run <code>npm test</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/#security","title":"Security","text":"<p>Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/CHANGELOG/#v130-2024-02-05","title":"v1.3.0 - 2024-02-05","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/CHANGELOG/#commits","title":"Commits","text":"<ul> <li>[New] add <code>EvalError</code> and <code>URIError</code> <code>1927627</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/CHANGELOG/#v121-2024-02-04","title":"v1.2.1 - 2024-02-04","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/CHANGELOG/#commits_1","title":"Commits","text":"<ul> <li>[Fix] add missing <code>exports</code> entry <code>5bb5f28</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/CHANGELOG/#v120-2024-02-04","title":"v1.2.0 - 2024-02-04","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/CHANGELOG/#commits_2","title":"Commits","text":"<ul> <li>[New] add <code>ReferenceError</code> <code>6d8cf5b</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/CHANGELOG/#v110-2024-02-04","title":"v1.1.0 - 2024-02-04","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/CHANGELOG/#commits_3","title":"Commits","text":"<ul> <li>[New] add base Error <code>2983ab6</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/CHANGELOG/#v100-2024-02-03","title":"v1.0.0 - 2024-02-03","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/es-errors/CHANGELOG/#commits_4","title":"Commits","text":"<ul> <li>Initial implementation, tests, readme, type <code>8f47631</code></li> <li>Initial commit <code>ea5d099</code></li> <li>npm init <code>6f5ebf9</code></li> <li>Only apps should have lockfiles <code>e1a0aeb</code></li> <li>[meta] add <code>sideEffects</code> flag <code>a9c7d46</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/es-object-atoms/","title":"es-object-atoms","text":"<p>ES Object-related atoms: Object, ToObject, RequireObjectCoercible.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/es-object-atoms/#example","title":"Example","text":"<pre><code>const assert = require('assert');\n\nconst $Object = require('es-object-atoms');\nconst isObject = require('es-object-atoms/isObject');\nconst ToObject = require('es-object-atoms/ToObject');\nconst RequireObjectCoercible = require('es-object-atoms/RequireObjectCoercible');\n\nassert.equal($Object, Object);\nassert.throws(() =&gt; ToObject(null), TypeError);\nassert.throws(() =&gt; ToObject(undefined), TypeError);\nassert.throws(() =&gt; RequireObjectCoercible(null), TypeError);\nassert.throws(() =&gt; RequireObjectCoercible(undefined), TypeError);\n\nassert.equal(isObject(undefined), false);\nassert.equal(isObject(null), false);\nassert.equal(isObject({}), true);\nassert.equal(isObject([]), true);\nassert.equal(isObject(function () {}), true);\n\nassert.deepEqual(RequireObjectCoercible(true), true);\nassert.deepEqual(ToObject(true), Object(true));\n\nconst obj = {};\nassert.equal(RequireObjectCoercible(obj), obj);\nassert.equal(ToObject(obj), obj);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/es-object-atoms/#tests","title":"Tests","text":"<p>Simply clone the repo, <code>npm install</code>, and run <code>npm test</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/es-object-atoms/#security","title":"Security","text":"<p>Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/es-object-atoms/CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/es-object-atoms/CHANGELOG/#v111-2025-01-14","title":"v1.1.1 - 2025-01-14","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/es-object-atoms/CHANGELOG/#commits","title":"Commits","text":"<ul> <li>[types] <code>ToObject</code>: improve types <code>cfe8c8a</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/es-object-atoms/CHANGELOG/#v110-2025-01-14","title":"v1.1.0 - 2025-01-14","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/es-object-atoms/CHANGELOG/#commits_1","title":"Commits","text":"<ul> <li>[New] add <code>isObject</code> <code>51e4042</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/es-object-atoms/CHANGELOG/#v101-2025-01-13","title":"v1.0.1 - 2025-01-13","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/es-object-atoms/CHANGELOG/#commits_2","title":"Commits","text":"<ul> <li>[Dev Deps] update <code>@ljharb/eslint-config</code>, <code>@ljharb/tsconfig</code>, <code>@types/tape</code>, <code>auto-changelog</code>, <code>tape</code> <code>38ab9eb</code></li> <li>[types] improve types <code>7d1beb8</code></li> <li>[Tests] replace <code>aud</code> with <code>npm audit</code> <code>25863ba</code></li> <li>[Dev Deps] add missing peer dep <code>c012309</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/es-object-atoms/CHANGELOG/#v100-2024-03-16","title":"v1.0.0 - 2024-03-16","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/es-object-atoms/CHANGELOG/#commits_3","title":"Commits","text":"<ul> <li>Initial implementation, tests, readme, types <code>f1499db</code></li> <li>Initial commit <code>99eedc7</code></li> <li>[meta] rename repo <code>fc851fa</code></li> <li>npm init <code>b909377</code></li> <li>Only apps should have lockfiles <code>7249edd</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/escape-html/Readme/","title":"escape-html","text":"<p>Escape string for use in HTML</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/escape-html/Readme/#example","title":"Example","text":"<pre><code>var escape = require('escape-html');\nvar html = escape('foo &amp; bar');\n// -&gt; foo &amp;amp; bar\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/escape-html/Readme/#benchmark","title":"Benchmark","text":"<pre><code>$ npm run-script bench\n\n&gt; escape-html@1.0.3 bench nodejs-escape-html\n&gt; node benchmark/index.js\n\n\n  http_parser@1.0\n  node@0.10.33\n  v8@3.14.5.9\n  ares@1.9.0-DEV\n  uv@0.10.29\n  zlib@1.2.3\n  modules@11\n  openssl@1.0.1j\n\n  1 test completed.\n  2 tests completed.\n  3 tests completed.\n\n  no special characters    x 19,435,271 ops/sec \u00b10.85% (187 runs sampled)\n  single special character x  6,132,421 ops/sec \u00b10.67% (194 runs sampled)\n  many special characters  x  3,175,826 ops/sec \u00b10.65% (193 runs sampled)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/escape-html/Readme/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/","title":"etag","text":"<p>Create simple HTTP ETags</p> <p>This module generates HTTP ETags (as defined in RFC 7232) for use in HTTP responses.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/#installation","title":"Installation","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install etag\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/#api","title":"API","text":"<pre><code>var etag = require('etag')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/#etagentity-options","title":"etag(entity, [options])","text":"<p>Generate a strong ETag for the given entity. This should be the complete body of the entity. Strings, <code>Buffer</code>s, and <code>fs.Stats</code> are accepted. By default, a strong ETag is generated except for <code>fs.Stats</code>, which will generate a weak ETag (this can be overwritten by <code>options.weak</code>).</p> <pre><code>res.setHeader('ETag', etag(body))\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/#options","title":"Options","text":"<p><code>etag</code> accepts these properties in the options object.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/#weak","title":"weak","text":"<p>Specifies if the generated ETag will include the weak validator mark (that is, the leading <code>W/</code>). The actual entity tag is the same. The default value is <code>false</code>, unless the <code>entity</code> is <code>fs.Stats</code>, in which case it is <code>true</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/#testing","title":"Testing","text":"<pre><code>$ npm test\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/#benchmark","title":"Benchmark","text":"<pre><code>$ npm run-script bench\n\n&gt; etag@1.8.1 bench nodejs-etag\n&gt; node benchmark/index.js\n\n  http_parser@2.7.0\n  node@6.11.1\n  v8@5.1.281.103\n  uv@1.11.0\n  zlib@1.2.11\n  ares@1.10.1-DEV\n  icu@58.2\n  modules@48\n  openssl@1.0.2k\n\n&gt; node benchmark/body0-100b.js\n\n  100B body\n\n  4 tests completed.\n\n  buffer - strong x 258,647 ops/sec \u00b11.07% (180 runs sampled)\n  buffer - weak   x 263,812 ops/sec \u00b10.61% (184 runs sampled)\n  string - strong x 259,955 ops/sec \u00b11.19% (185 runs sampled)\n  string - weak   x 264,356 ops/sec \u00b11.09% (184 runs sampled)\n\n&gt; node benchmark/body1-1kb.js\n\n  1KB body\n\n  4 tests completed.\n\n  buffer - strong x 189,018 ops/sec \u00b11.12% (182 runs sampled)\n  buffer - weak   x 190,586 ops/sec \u00b10.81% (186 runs sampled)\n  string - strong x 144,272 ops/sec \u00b10.96% (188 runs sampled)\n  string - weak   x 145,380 ops/sec \u00b11.43% (187 runs sampled)\n\n&gt; node benchmark/body2-5kb.js\n\n  5KB body\n\n  4 tests completed.\n\n  buffer - strong x 92,435 ops/sec \u00b10.42% (188 runs sampled)\n  buffer - weak   x 92,373 ops/sec \u00b10.58% (189 runs sampled)\n  string - strong x 48,850 ops/sec \u00b10.56% (186 runs sampled)\n  string - weak   x 49,380 ops/sec \u00b10.56% (190 runs sampled)\n\n&gt; node benchmark/body3-10kb.js\n\n  10KB body\n\n  4 tests completed.\n\n  buffer - strong x 55,989 ops/sec \u00b10.93% (188 runs sampled)\n  buffer - weak   x 56,148 ops/sec \u00b10.55% (190 runs sampled)\n  string - strong x 27,345 ops/sec \u00b10.43% (188 runs sampled)\n  string - weak   x 27,496 ops/sec \u00b10.45% (190 runs sampled)\n\n&gt; node benchmark/body4-100kb.js\n\n  100KB body\n\n  4 tests completed.\n\n  buffer - strong x 7,083 ops/sec \u00b10.22% (190 runs sampled)\n  buffer - weak   x 7,115 ops/sec \u00b10.26% (191 runs sampled)\n  string - strong x 3,068 ops/sec \u00b10.34% (190 runs sampled)\n  string - weak   x 3,096 ops/sec \u00b10.35% (190 runs sampled)\n\n&gt; node benchmark/stats.js\n\n  stat\n\n  4 tests completed.\n\n  real - strong x 871,642 ops/sec \u00b10.34% (189 runs sampled)\n  real - weak   x 867,613 ops/sec \u00b10.39% (190 runs sampled)\n  fake - strong x 401,051 ops/sec \u00b10.40% (189 runs sampled)\n  fake - weak   x 400,100 ops/sec \u00b10.47% (188 runs sampled)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/HISTORY/","title":"1.8.1 / 2017-09-12","text":"<ul> <li>perf: replace regular expression with substring</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/HISTORY/#180-2017-02-18","title":"1.8.0 / 2017-02-18","text":"<ul> <li>Use SHA1 instead of MD5 for ETag hashing<ul> <li>Improves performance for larger entities</li> <li>Works with FIPS 140-2 OpenSSL configuration</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/HISTORY/#170-2015-06-08","title":"1.7.0 / 2015-06-08","text":"<ul> <li>Always include entity length in ETags for hash length extensions</li> <li>Generate non-Stats ETags using MD5 only (no longer CRC32)</li> <li>Improve stat performance by removing hashing</li> <li>Remove base64 padding in ETags to shorten</li> <li>Use MD5 instead of MD4 in weak ETags over 1KB</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/HISTORY/#160-2015-05-10","title":"1.6.0 / 2015-05-10","text":"<ul> <li>Improve support for JXcore</li> <li>Remove requirement of <code>atime</code> in the stats object</li> <li>Support \"fake\" stats objects in environments without <code>fs</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/HISTORY/#151-2014-11-19","title":"1.5.1 / 2014-11-19","text":"<ul> <li>deps: crc@3.2.1<ul> <li>Minor fixes</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/HISTORY/#150-2014-10-14","title":"1.5.0 / 2014-10-14","text":"<ul> <li>Improve string performance</li> <li>Slightly improve speed for weak ETags over 1KB</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/HISTORY/#140-2014-09-21","title":"1.4.0 / 2014-09-21","text":"<ul> <li>Support \"fake\" stats objects</li> <li>Support Node.js 0.6</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/HISTORY/#131-2014-09-14","title":"1.3.1 / 2014-09-14","text":"<ul> <li>Use the (new and improved) <code>crc</code> for crc32</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/HISTORY/#130-2014-08-29","title":"1.3.0 / 2014-08-29","text":"<ul> <li>Default strings to strong ETags</li> <li>Improve speed for weak ETags over 1KB</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/HISTORY/#121-2014-08-29","title":"1.2.1 / 2014-08-29","text":"<ul> <li>Use the (much faster) <code>buffer-crc32</code> for crc32</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/HISTORY/#120-2014-08-24","title":"1.2.0 / 2014-08-24","text":"<ul> <li>Add support for file stat objects</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/HISTORY/#110-2014-08-24","title":"1.1.0 / 2014-08-24","text":"<ul> <li>Add fast-path for empty entity</li> <li>Add weak ETag generation</li> <li>Shrink size of generated ETags</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/HISTORY/#101-2014-08-24","title":"1.0.1 / 2014-08-24","text":"<ul> <li>Fix behavior of string containing Unicode</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/etag/HISTORY/#100-2014-05-18","title":"1.0.0 / 2014-05-18","text":"<ul> <li>Initial release</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/","title":"5.1.0 / 2025-03-31","text":"<ul> <li>Add support for <code>Uint8Array</code> in <code>res.send()</code></li> <li>Add support for ETag option in <code>res.sendFile()</code></li> <li>Add support for multiple links with the same rel in <code>res.links()</code></li> <li>Add funding field to package.json</li> <li>perf: use loop for acceptParams</li> <li>refactor: prefix built-in node module imports</li> <li>deps: remove <code>setprototypeof</code></li> <li>deps: remove <code>safe-buffer</code></li> <li>deps: remove <code>utils-merge</code></li> <li>deps: remove <code>methods</code></li> <li>deps: remove <code>depd</code></li> <li>deps: <code>debug@^4.4.0</code></li> <li>deps: <code>body-parser@^2.2.0</code></li> <li>deps: <code>router@^2.2.0</code></li> <li>deps: <code>content-type@^1.0.5</code></li> <li>deps: <code>finalhandler@^2.1.0</code></li> <li>deps: <code>qs@^6.14.0</code></li> <li>deps: <code>server-static@2.2.0</code></li> <li>deps: <code>type-is@2.0.1</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#501-2024-10-08","title":"5.0.1 / 2024-10-08","text":"<ul> <li>Update <code>cookie</code> semver lock to address CVE-2024-47764</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#500-2024-09-10","title":"5.0.0 / 2024-09-10","text":"<ul> <li>remove:</li> <li><code>path-is-absolute</code> dependency - use <code>path.isAbsolute</code> instead</li> <li>breaking:</li> <li><code>res.status()</code> accepts only integers, and input must be greater than 99 and less than 1000<ul> <li>will throw a <code>RangeError: Invalid status code: ${code}. Status code must be greater than 99 and less than 1000.</code> for inputs outside this range</li> <li>will throw a <code>TypeError: Invalid status code: ${code}. Status code must be an integer.</code> for non integer inputs</li> </ul> </li> <li>deps: send@1.0.0</li> <li><code>res.redirect('back')</code> and <code>res.location('back')</code> is no longer a supported magic string, explicitly use <code>req.get('Referrer') || '/'</code>.</li> <li>change:</li> <li><code>res.clearCookie</code> will ignore user provided <code>maxAge</code> and <code>expires</code> options</li> <li>deps: cookie-signature@^1.2.1</li> <li>deps: debug@4.3.6</li> <li>deps: merge-descriptors@^2.0.0</li> <li>deps: serve-static@^2.1.0</li> <li>deps: qs@6.13.0</li> <li>deps: accepts@^2.0.0</li> <li>deps: mime-types@^3.0.0</li> <li><code>application/javascript</code> =&gt; <code>text/javascript</code></li> <li>deps: type-is@^2.0.0</li> <li>deps: content-disposition@^1.0.0</li> <li>deps: finalhandler@^2.0.0</li> <li>deps: fresh@^2.0.0</li> <li>deps: body-parser@^2.0.1</li> <li>deps: send@^1.1.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#500-beta3-2024-03-25","title":"5.0.0-beta.3 / 2024-03-25","text":"<p>This incorporates all changes after 4.19.1 up to 4.19.2.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#500-beta2-2024-03-20","title":"5.0.0-beta.2 / 2024-03-20","text":"<p>This incorporates all changes after 4.17.2 up to 4.19.1.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#500-beta1-2022-02-14","title":"5.0.0-beta.1 / 2022-02-14","text":"<p>This is the first Express 5.0 beta release, based off 4.17.2 and includes changes from 5.0.0-alpha.8.</p> <ul> <li>change:<ul> <li>Default \"query parser\" setting to <code>'simple'</code></li> <li>Requires Node.js 4+</li> <li>Use <code>mime-types</code> for file to content type mapping</li> </ul> </li> <li>deps: array-flatten@3.0.0</li> <li>deps: body-parser@2.0.0-beta.1<ul> <li><code>req.body</code> is no longer always initialized to <code>{}</code></li> <li><code>urlencoded</code> parser now defaults <code>extended</code> to <code>false</code></li> <li>Use <code>on-finished</code> to determine when body read</li> </ul> </li> <li>deps: router@2.0.0-beta.1<ul> <li>Add new <code>?</code>, <code>*</code>, and <code>+</code> parameter modifiers</li> <li>Internalize private <code>router.process_params</code> method</li> <li>Matching group expressions are only RegExp syntax</li> <li>Named matching groups no longer available by position in <code>req.params</code></li> <li>Regular expressions can only be used in a matching group</li> <li>Remove <code>debug</code> dependency</li> <li>Special <code>*</code> path segment behavior removed</li> <li>deps: array-flatten@3.0.0</li> <li>deps: parseurl@~1.3.3</li> <li>deps: path-to-regexp@3.2.0</li> <li>deps: setprototypeof@1.2.0</li> </ul> </li> <li>deps: send@1.0.0-beta.1<ul> <li>Change <code>dotfiles</code> option default to <code>'ignore'</code></li> <li>Remove <code>hidden</code> option; use <code>dotfiles</code> option instead</li> <li>Use <code>mime-types</code> for file to content type mapping</li> <li>deps: debug@3.1.0</li> </ul> </li> <li>deps: serve-static@2.0.0-beta.1<ul> <li>Change <code>dotfiles</code> option default to <code>'ignore'</code></li> <li>Remove <code>hidden</code> option; use <code>dotfiles</code> option instead</li> <li>Use <code>mime-types</code> for file to content type mapping</li> <li>Remove <code>express.static.mime</code> export; use <code>mime-types</code> package instead</li> <li>deps: send@1.0.0-beta.1</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#500-alpha8-2020-03-25","title":"5.0.0-alpha.8 / 2020-03-25","text":"<p>This is the eighth Express 5.0 alpha release, based off 4.17.1 and includes changes from 5.0.0-alpha.7.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#500-alpha7-2018-10-26","title":"5.0.0-alpha.7 / 2018-10-26","text":"<p>This is the seventh Express 5.0 alpha release, based off 4.16.4 and includes changes from 5.0.0-alpha.6.</p> <p>The major change with this alpha is the basic support for returned, rejected Promises in the router.</p> <ul> <li>remove:<ul> <li><code>path-to-regexp</code> dependency</li> </ul> </li> <li>deps: debug@3.1.0<ul> <li>Add <code>DEBUG_HIDE_DATE</code> environment variable</li> <li>Change timer to per-namespace instead of global</li> <li>Change non-TTY date format</li> <li>Remove <code>DEBUG_FD</code> environment variable support</li> <li>Support 256 namespace colors</li> </ul> </li> <li>deps: router@2.0.0-alpha.1<ul> <li>Add basic support for returned, rejected Promises</li> <li>Fix JSDoc for <code>Router</code> constructor</li> <li>deps: debug@3.1.0</li> <li>deps: parseurl@~1.3.2</li> <li>deps: setprototypeof@1.1.0</li> <li>deps: utils-merge@1.0.1</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#500-alpha6-2017-09-24","title":"5.0.0-alpha.6 / 2017-09-24","text":"<p>This is the sixth Express 5.0 alpha release, based off 4.15.5 and includes changes from 5.0.0-alpha.5.</p> <ul> <li>remove:<ul> <li><code>res.redirect(url, status)</code> signature - use <code>res.redirect(status, url)</code></li> <li><code>res.send(status, body)</code> signature - use <code>res.status(status).send(body)</code></li> </ul> </li> <li>deps: router@~1.3.1<ul> <li>deps: debug@2.6.8</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#500-alpha5-2017-03-06","title":"5.0.0-alpha.5 / 2017-03-06","text":"<p>This is the fifth Express 5.0 alpha release, based off 4.15.2 and includes changes from 5.0.0-alpha.4.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#500-alpha4-2017-03-01","title":"5.0.0-alpha.4 / 2017-03-01","text":"<p>This is the fourth Express 5.0 alpha release, based off 4.15.0 and includes changes from 5.0.0-alpha.3.</p> <ul> <li>remove:<ul> <li>Remove Express 3.x middleware error stubs</li> </ul> </li> <li>deps: router@~1.3.0<ul> <li>Add <code>next(\"router\")</code> to exit from router</li> <li>Fix case where <code>router.use</code> skipped requests routes did not</li> <li>Skip routing when <code>req.url</code> is not set</li> <li>Use <code>%o</code> in path debug to tell types apart</li> <li>deps: debug@2.6.1</li> <li>deps: setprototypeof@1.0.3</li> <li>perf: add fast match path for <code>*</code> route</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#500-alpha3-2017-01-28","title":"5.0.0-alpha.3 / 2017-01-28","text":"<p>This is the third Express 5.0 alpha release, based off 4.14.1 and includes changes from 5.0.0-alpha.2.</p> <ul> <li>remove:<ul> <li><code>res.json(status, obj)</code> signature - use <code>res.status(status).json(obj)</code></li> <li><code>res.jsonp(status, obj)</code> signature - use <code>res.status(status).jsonp(obj)</code></li> <li><code>res.vary()</code> (no arguments) -- provide a field name as an argument</li> </ul> </li> <li>deps: array-flatten@2.1.1</li> <li>deps: path-is-absolute@1.0.1</li> <li>deps: router@~1.1.5<ul> <li>deps: array-flatten@2.0.1</li> <li>deps: methods@~1.1.2</li> <li>deps: parseurl@~1.3.1</li> <li>deps: setprototypeof@1.0.2</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#500-alpha2-2015-07-06","title":"5.0.0-alpha.2 / 2015-07-06","text":"<p>This is the second Express 5.0 alpha release, based off 4.13.1 and includes changes from 5.0.0-alpha.1.</p> <ul> <li>remove:<ul> <li><code>app.param(fn)</code></li> <li><code>req.param()</code> -- use <code>req.params</code>, <code>req.body</code>, or <code>req.query</code> instead</li> </ul> </li> <li>change:<ul> <li><code>res.render</code> callback is always async, even for sync view engines</li> <li>The leading <code>:</code> character in <code>name</code> for <code>app.param(name, fn)</code> is no longer removed</li> <li>Use <code>router</code> module for routing</li> <li>Use <code>path-is-absolute</code> module for absolute path detection</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#500-alpha1-2014-11-06","title":"5.0.0-alpha.1 / 2014-11-06","text":"<p>This is the first Express 5.0 alpha release, based off 4.10.1.</p> <ul> <li>remove:<ul> <li><code>app.del</code> - use <code>app.delete</code></li> <li><code>req.acceptsCharset</code> - use <code>req.acceptsCharsets</code></li> <li><code>req.acceptsEncoding</code> - use <code>req.acceptsEncodings</code></li> <li><code>req.acceptsLanguage</code> - use <code>req.acceptsLanguages</code></li> <li><code>res.json(obj, status)</code> signature - use <code>res.json(status, obj)</code></li> <li><code>res.jsonp(obj, status)</code> signature - use <code>res.jsonp(status, obj)</code></li> <li><code>res.send(body, status)</code> signature - use <code>res.send(status, body)</code></li> <li><code>res.send(status)</code> signature - use <code>res.sendStatus(status)</code></li> <li><code>res.sendfile</code> - use <code>res.sendFile</code> instead</li> <li><code>express.query</code> middleware</li> </ul> </li> <li>change:<ul> <li><code>req.host</code> now returns host (<code>hostname:port</code>) - use <code>req.hostname</code> for only hostname</li> <li><code>req.query</code> is now a getter instead of a plain property</li> </ul> </li> <li>add:<ul> <li><code>app.router</code> is a reference to the base router</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4200-2024-09-10","title":"4.20.0 / 2024-09-10","text":"<ul> <li>deps: serve-static@0.16.0<ul> <li>Remove link renderization in html while redirecting</li> </ul> </li> <li>deps: send@0.19.0<ul> <li>Remove link renderization in html while redirecting</li> </ul> </li> <li>deps: body-parser@0.6.0<ul> <li>add <code>depth</code> option to customize the depth level in the parser</li> <li>IMPORTANT: The default <code>depth</code> level for parsing URL-encoded data is now <code>32</code> (previously was <code>Infinity</code>)</li> </ul> </li> <li>Remove link renderization in html while using <code>res.redirect</code></li> <li>deps: path-to-regexp@0.1.10<ul> <li>Adds support for named matching groups in the routes using a regex</li> <li>Adds backtracking protection to parameters without regexes defined</li> </ul> </li> <li>deps: encodeurl@~2.0.0<ul> <li>Removes encoding of <code>\\</code>, <code>|</code>, and <code>^</code> to align better with URL spec</li> </ul> </li> <li>Deprecate passing <code>options.maxAge</code> and <code>options.expires</code> to <code>res.clearCookie</code><ul> <li>Will be ignored in v5, clearCookie will set a cookie with an expires in the past to instruct clients to delete the cookie</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4192-2024-03-25","title":"4.19.2 / 2024-03-25","text":"<ul> <li>Improved fix for open redirect allow list bypass</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4191-2024-03-20","title":"4.19.1 / 2024-03-20","text":"<ul> <li>Allow passing non-strings to res.location with new encoding handling checks</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4190-2024-03-20","title":"4.19.0 / 2024-03-20","text":"<ul> <li>Prevent open redirect allow list bypass due to encodeurl</li> <li>deps: cookie@0.6.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4183-2024-02-29","title":"4.18.3 / 2024-02-29","text":"<ul> <li>Fix routing requests without method</li> <li>deps: body-parser@1.20.2<ul> <li>Fix strict json error message on Node.js 19+</li> <li>deps: content-type@~1.0.5</li> <li>deps: raw-body@2.5.2</li> </ul> </li> <li>deps: cookie@0.6.0<ul> <li>Add <code>partitioned</code> option</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4182-2022-10-08","title":"4.18.2 / 2022-10-08","text":"<ul> <li>Fix regression routing a large stack in a single route</li> <li>deps: body-parser@1.20.1<ul> <li>deps: qs@6.11.0</li> <li>perf: remove unnecessary object clone</li> </ul> </li> <li>deps: qs@6.11.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4181-2022-04-29","title":"4.18.1 / 2022-04-29","text":"<ul> <li>Fix hanging on large stack of sync routes</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4180-2022-04-25","title":"4.18.0 / 2022-04-25","text":"<ul> <li>Add \"root\" option to <code>res.download</code></li> <li>Allow <code>options</code> without <code>filename</code> in <code>res.download</code></li> <li>Deprecate string and non-integer arguments to <code>res.status</code></li> <li>Fix behavior of <code>null</code>/<code>undefined</code> as <code>maxAge</code> in <code>res.cookie</code></li> <li>Fix handling very large stacks of sync middleware</li> <li>Ignore <code>Object.prototype</code> values in settings through <code>app.set</code>/<code>app.get</code></li> <li>Invoke <code>default</code> with same arguments as types in <code>res.format</code></li> <li>Support proper 205 responses using <code>res.send</code></li> <li>Use <code>http-errors</code> for <code>res.format</code> error</li> <li>deps: body-parser@1.20.0<ul> <li>Fix error message for json parse whitespace in <code>strict</code></li> <li>Fix internal error when inflated body exceeds limit</li> <li>Prevent loss of async hooks context</li> <li>Prevent hanging when request already read</li> <li>deps: depd@2.0.0</li> <li>deps: http-errors@2.0.0</li> <li>deps: on-finished@2.4.1</li> <li>deps: qs@6.10.3</li> <li>deps: raw-body@2.5.1</li> </ul> </li> <li>deps: cookie@0.5.0<ul> <li>Add <code>priority</code> option</li> <li>Fix <code>expires</code> option to reject invalid dates</li> </ul> </li> <li>deps: depd@2.0.0<ul> <li>Replace internal <code>eval</code> usage with <code>Function</code> constructor</li> <li>Use instance methods on <code>process</code> to check for listeners</li> </ul> </li> <li>deps: finalhandler@1.2.0<ul> <li>Remove set content headers that break response</li> <li>deps: on-finished@2.4.1</li> <li>deps: statuses@2.0.1</li> </ul> </li> <li>deps: on-finished@2.4.1<ul> <li>Prevent loss of async hooks context</li> </ul> </li> <li>deps: qs@6.10.3</li> <li>deps: send@0.18.0<ul> <li>Fix emitted 416 error missing headers property</li> <li>Limit the headers removed for 304 response</li> <li>deps: depd@2.0.0</li> <li>deps: destroy@1.2.0</li> <li>deps: http-errors@2.0.0</li> <li>deps: on-finished@2.4.1</li> <li>deps: statuses@2.0.1</li> </ul> </li> <li>deps: serve-static@1.15.0<ul> <li>deps: send@0.18.0</li> </ul> </li> <li>deps: statuses@2.0.1<ul> <li>Remove code 306</li> <li>Rename <code>425 Unordered Collection</code> to standard <code>425 Too Early</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4173-2022-02-16","title":"4.17.3 / 2022-02-16","text":"<ul> <li>deps: accepts@~1.3.8<ul> <li>deps: mime-types@~2.1.34</li> <li>deps: negotiator@0.6.3</li> </ul> </li> <li>deps: body-parser@1.19.2<ul> <li>deps: bytes@3.1.2</li> <li>deps: qs@6.9.7</li> <li>deps: raw-body@2.4.3</li> </ul> </li> <li>deps: cookie@0.4.2</li> <li>deps: qs@6.9.7<ul> <li>Fix handling of <code>__proto__</code> keys</li> </ul> </li> <li>pref: remove unnecessary regexp for trust proxy</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4172-2021-12-16","title":"4.17.2 / 2021-12-16","text":"<ul> <li>Fix handling of <code>undefined</code> in <code>res.jsonp</code></li> <li>Fix handling of <code>undefined</code> when <code>\"json escape\"</code> is enabled</li> <li>Fix incorrect middleware execution with unanchored <code>RegExp</code>s</li> <li>Fix <code>res.jsonp(obj, status)</code> deprecation message</li> <li>Fix typo in <code>res.is</code> JSDoc</li> <li>deps: body-parser@1.19.1<ul> <li>deps: bytes@3.1.1</li> <li>deps: http-errors@1.8.1</li> <li>deps: qs@6.9.6</li> <li>deps: raw-body@2.4.2</li> <li>deps: safe-buffer@5.2.1</li> <li>deps: type-is@~1.6.18</li> </ul> </li> <li>deps: content-disposition@0.5.4<ul> <li>deps: safe-buffer@5.2.1</li> </ul> </li> <li>deps: cookie@0.4.1<ul> <li>Fix <code>maxAge</code> option to reject invalid values</li> </ul> </li> <li>deps: proxy-addr@~2.0.7<ul> <li>Use <code>req.socket</code> over deprecated <code>req.connection</code></li> <li>deps: forwarded@0.2.0</li> <li>deps: ipaddr.js@1.9.1</li> </ul> </li> <li>deps: qs@6.9.6</li> <li>deps: safe-buffer@5.2.1</li> <li>deps: send@0.17.2<ul> <li>deps: http-errors@1.8.1</li> <li>deps: ms@2.1.3</li> <li>pref: ignore empty http tokens</li> </ul> </li> <li>deps: serve-static@1.14.2<ul> <li>deps: send@0.17.2</li> </ul> </li> <li>deps: setprototypeof@1.2.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4171-2019-05-25","title":"4.17.1 / 2019-05-25","text":"<ul> <li>Revert \"Improve error message for <code>null</code>/<code>undefined</code> to <code>res.status</code>\"</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4170-2019-05-16","title":"4.17.0 / 2019-05-16","text":"<ul> <li>Add <code>express.raw</code> to parse bodies into <code>Buffer</code></li> <li>Add <code>express.text</code> to parse bodies into string</li> <li>Improve error message for non-strings to <code>res.sendFile</code></li> <li>Improve error message for <code>null</code>/<code>undefined</code> to <code>res.status</code></li> <li>Support multiple hosts in <code>X-Forwarded-Host</code></li> <li>deps: accepts@~1.3.7</li> <li>deps: body-parser@1.19.0<ul> <li>Add encoding MIK</li> <li>Add petabyte (<code>pb</code>) support</li> <li>Fix parsing array brackets after index</li> <li>deps: bytes@3.1.0</li> <li>deps: http-errors@1.7.2</li> <li>deps: iconv-lite@0.4.24</li> <li>deps: qs@6.7.0</li> <li>deps: raw-body@2.4.0</li> <li>deps: type-is@~1.6.17</li> </ul> </li> <li>deps: content-disposition@0.5.3</li> <li>deps: cookie@0.4.0<ul> <li>Add <code>SameSite=None</code> support</li> </ul> </li> <li>deps: finalhandler@~1.1.2<ul> <li>Set stricter <code>Content-Security-Policy</code> header</li> <li>deps: parseurl@~1.3.3</li> <li>deps: statuses@~1.5.0</li> </ul> </li> <li>deps: parseurl@~1.3.3</li> <li>deps: proxy-addr@~2.0.5<ul> <li>deps: ipaddr.js@1.9.0</li> </ul> </li> <li>deps: qs@6.7.0<ul> <li>Fix parsing array brackets after index</li> </ul> </li> <li>deps: range-parser@~1.2.1</li> <li>deps: send@0.17.1<ul> <li>Set stricter CSP header in redirect &amp; error responses</li> <li>deps: http-errors@~1.7.2</li> <li>deps: mime@1.6.0</li> <li>deps: ms@2.1.1</li> <li>deps: range-parser@~1.2.1</li> <li>deps: statuses@~1.5.0</li> <li>perf: remove redundant <code>path.normalize</code> call</li> </ul> </li> <li>deps: serve-static@1.14.1<ul> <li>Set stricter CSP header in redirect response</li> <li>deps: parseurl@~1.3.3</li> <li>deps: send@0.17.1</li> </ul> </li> <li>deps: setprototypeof@1.1.1</li> <li>deps: statuses@~1.5.0<ul> <li>Add <code>103 Early Hints</code></li> </ul> </li> <li>deps: type-is@~1.6.18<ul> <li>deps: mime-types@~2.1.24</li> <li>perf: prevent internal <code>throw</code> on invalid type</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4164-2018-10-10","title":"4.16.4 / 2018-10-10","text":"<ul> <li>Fix issue where <code>\"Request aborted\"</code> may be logged in <code>res.sendfile</code></li> <li>Fix JSDoc for <code>Router</code> constructor</li> <li>deps: body-parser@1.18.3<ul> <li>Fix deprecation warnings on Node.js 10+</li> <li>Fix stack trace for strict json parse error</li> <li>deps: depd@~1.1.2</li> <li>deps: http-errors@~1.6.3</li> <li>deps: iconv-lite@0.4.23</li> <li>deps: qs@6.5.2</li> <li>deps: raw-body@2.3.3</li> <li>deps: type-is@~1.6.16</li> </ul> </li> <li>deps: proxy-addr@~2.0.4<ul> <li>deps: ipaddr.js@1.8.0</li> </ul> </li> <li>deps: qs@6.5.2</li> <li>deps: safe-buffer@5.1.2</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4163-2018-03-12","title":"4.16.3 / 2018-03-12","text":"<ul> <li>deps: accepts@~1.3.5<ul> <li>deps: mime-types@~2.1.18</li> </ul> </li> <li>deps: depd@~1.1.2<ul> <li>perf: remove argument reassignment</li> </ul> </li> <li>deps: encodeurl@~1.0.2<ul> <li>Fix encoding <code>%</code> as last character</li> </ul> </li> <li>deps: finalhandler@1.1.1<ul> <li>Fix 404 output for bad / missing pathnames</li> <li>deps: encodeurl@~1.0.2</li> <li>deps: statuses@~1.4.0</li> </ul> </li> <li>deps: proxy-addr@~2.0.3<ul> <li>deps: ipaddr.js@1.6.0</li> </ul> </li> <li>deps: send@0.16.2<ul> <li>Fix incorrect end tag in default error &amp; redirects</li> <li>deps: depd@~1.1.2</li> <li>deps: encodeurl@~1.0.2</li> <li>deps: statuses@~1.4.0</li> </ul> </li> <li>deps: serve-static@1.13.2<ul> <li>Fix incorrect end tag in redirects</li> <li>deps: encodeurl@~1.0.2</li> <li>deps: send@0.16.2</li> </ul> </li> <li>deps: statuses@~1.4.0</li> <li>deps: type-is@~1.6.16<ul> <li>deps: mime-types@~2.1.18</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4162-2017-10-09","title":"4.16.2 / 2017-10-09","text":"<ul> <li>Fix <code>TypeError</code> in <code>res.send</code> when given <code>Buffer</code> and <code>ETag</code> header set</li> <li>perf: skip parsing of entire <code>X-Forwarded-Proto</code> header</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4161-2017-09-29","title":"4.16.1 / 2017-09-29","text":"<ul> <li>deps: send@0.16.1</li> <li>deps: serve-static@1.13.1<ul> <li>Fix regression when <code>root</code> is incorrectly set to a file</li> <li>deps: send@0.16.1</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4160-2017-09-28","title":"4.16.0 / 2017-09-28","text":"<ul> <li>Add <code>\"json escape\"</code> setting for <code>res.json</code> and <code>res.jsonp</code></li> <li>Add <code>express.json</code> and <code>express.urlencoded</code> to parse bodies</li> <li>Add <code>options</code> argument to <code>res.download</code></li> <li>Improve error message when autoloading invalid view engine</li> <li>Improve error messages when non-function provided as middleware</li> <li>Skip <code>Buffer</code> encoding when not generating ETag for small response</li> <li>Use <code>safe-buffer</code> for improved Buffer API</li> <li>deps: accepts@~1.3.4<ul> <li>deps: mime-types@~2.1.16</li> </ul> </li> <li>deps: content-type@~1.0.4<ul> <li>perf: remove argument reassignment</li> <li>perf: skip parameter parsing when no parameters</li> </ul> </li> <li>deps: etag@~1.8.1<ul> <li>perf: replace regular expression with substring</li> </ul> </li> <li>deps: finalhandler@1.1.0<ul> <li>Use <code>res.headersSent</code> when available</li> </ul> </li> <li>deps: parseurl@~1.3.2<ul> <li>perf: reduce overhead for full URLs</li> <li>perf: unroll the \"fast-path\" <code>RegExp</code></li> </ul> </li> <li>deps: proxy-addr@~2.0.2<ul> <li>Fix trimming leading / trailing OWS in <code>X-Forwarded-For</code></li> <li>deps: forwarded@~0.1.2</li> <li>deps: ipaddr.js@1.5.2</li> <li>perf: reduce overhead when no <code>X-Forwarded-For</code> header</li> </ul> </li> <li>deps: qs@6.5.1<ul> <li>Fix parsing &amp; compacting very deep objects</li> </ul> </li> <li>deps: send@0.16.0<ul> <li>Add 70 new types for file extensions</li> <li>Add <code>immutable</code> option</li> <li>Fix missing <code>&lt;/html&gt;</code> in default error &amp; redirects</li> <li>Set charset as \"UTF-8\" for .js and .json</li> <li>Use instance methods on steam to check for listeners</li> <li>deps: mime@1.4.1</li> <li>perf: improve path validation speed</li> </ul> </li> <li>deps: serve-static@1.13.0<ul> <li>Add 70 new types for file extensions</li> <li>Add <code>immutable</code> option</li> <li>Set charset as \"UTF-8\" for .js and .json</li> <li>deps: send@0.16.0</li> </ul> </li> <li>deps: setprototypeof@1.1.0</li> <li>deps: utils-merge@1.0.1</li> <li>deps: vary@~1.1.2<ul> <li>perf: improve header token parsing speed</li> </ul> </li> <li>perf: re-use options object when generating ETags</li> <li>perf: remove dead <code>.charset</code> set in <code>res.jsonp</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4155-2017-09-24","title":"4.15.5 / 2017-09-24","text":"<ul> <li>deps: debug@2.6.9</li> <li>deps: finalhandler@~1.0.6<ul> <li>deps: debug@2.6.9</li> <li>deps: parseurl@~1.3.2</li> </ul> </li> <li>deps: fresh@0.5.2<ul> <li>Fix handling of modified headers with invalid dates</li> <li>perf: improve ETag match loop</li> <li>perf: improve <code>If-None-Match</code> token parsing</li> </ul> </li> <li>deps: send@0.15.6<ul> <li>Fix handling of modified headers with invalid dates</li> <li>deps: debug@2.6.9</li> <li>deps: etag@~1.8.1</li> <li>deps: fresh@0.5.2</li> <li>perf: improve <code>If-Match</code> token parsing</li> </ul> </li> <li>deps: serve-static@1.12.6<ul> <li>deps: parseurl@~1.3.2</li> <li>deps: send@0.15.6</li> <li>perf: improve slash collapsing</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4154-2017-08-06","title":"4.15.4 / 2017-08-06","text":"<ul> <li>deps: debug@2.6.8</li> <li>deps: depd@~1.1.1<ul> <li>Remove unnecessary <code>Buffer</code> loading</li> </ul> </li> <li>deps: finalhandler@~1.0.4<ul> <li>deps: debug@2.6.8</li> </ul> </li> <li>deps: proxy-addr@~1.1.5<ul> <li>Fix array argument being altered</li> <li>deps: ipaddr.js@1.4.0</li> </ul> </li> <li>deps: qs@6.5.0</li> <li>deps: send@0.15.4<ul> <li>deps: debug@2.6.8</li> <li>deps: depd@~1.1.1</li> <li>deps: http-errors@~1.6.2</li> </ul> </li> <li>deps: serve-static@1.12.4<ul> <li>deps: send@0.15.4</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4153-2017-05-16","title":"4.15.3 / 2017-05-16","text":"<ul> <li>Fix error when <code>res.set</code> cannot add charset to <code>Content-Type</code></li> <li>deps: debug@2.6.7<ul> <li>Fix <code>DEBUG_MAX_ARRAY_LENGTH</code></li> <li>deps: ms@2.0.0</li> </ul> </li> <li>deps: finalhandler@~1.0.3<ul> <li>Fix missing <code>&lt;/html&gt;</code> in HTML document</li> <li>deps: debug@2.6.7</li> </ul> </li> <li>deps: proxy-addr@~1.1.4<ul> <li>deps: ipaddr.js@1.3.0</li> </ul> </li> <li>deps: send@0.15.3<ul> <li>deps: debug@2.6.7</li> <li>deps: ms@2.0.0</li> </ul> </li> <li>deps: serve-static@1.12.3<ul> <li>deps: send@0.15.3</li> </ul> </li> <li>deps: type-is@~1.6.15<ul> <li>deps: mime-types@~2.1.15</li> </ul> </li> <li>deps: vary@~1.1.1<ul> <li>perf: hoist regular expression</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4152-2017-03-06","title":"4.15.2 / 2017-03-06","text":"<ul> <li>deps: qs@6.4.0<ul> <li>Fix regression parsing keys starting with <code>[</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4151-2017-03-05","title":"4.15.1 / 2017-03-05","text":"<ul> <li>deps: send@0.15.1<ul> <li>Fix issue when <code>Date.parse</code> does not return <code>NaN</code> on invalid date</li> <li>Fix strict violation in broken environments</li> </ul> </li> <li>deps: serve-static@1.12.1<ul> <li>Fix issue when <code>Date.parse</code> does not return <code>NaN</code> on invalid date</li> <li>deps: send@0.15.1</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4150-2017-03-01","title":"4.15.0 / 2017-03-01","text":"<ul> <li>Add debug message when loading view engine</li> <li>Add <code>next(\"router\")</code> to exit from router</li> <li>Fix case where <code>router.use</code> skipped requests routes did not</li> <li>Remove usage of <code>res._headers</code> private field<ul> <li>Improves compatibility with Node.js 8 nightly</li> </ul> </li> <li>Skip routing when <code>req.url</code> is not set</li> <li>Use <code>%o</code> in path debug to tell types apart</li> <li>Use <code>Object.create</code> to setup request &amp; response prototypes</li> <li>Use <code>setprototypeof</code> module to replace <code>__proto__</code> setting</li> <li>Use <code>statuses</code> instead of <code>http</code> module for status messages</li> <li>deps: debug@2.6.1<ul> <li>Allow colors in workers</li> <li>Deprecated <code>DEBUG_FD</code> environment variable set to <code>3</code> or higher</li> <li>Fix error when running under React Native</li> <li>Use same color for same namespace</li> <li>deps: ms@0.7.2</li> </ul> </li> <li>deps: etag@~1.8.0<ul> <li>Use SHA1 instead of MD5 for ETag hashing</li> <li>Works with FIPS 140-2 OpenSSL configuration</li> </ul> </li> <li>deps: finalhandler@~1.0.0<ul> <li>Fix exception when <code>err</code> cannot be converted to a string</li> <li>Fully URL-encode the pathname in the 404</li> <li>Only include the pathname in the 404 message</li> <li>Send complete HTML document</li> <li>Set <code>Content-Security-Policy: default-src 'self'</code> header</li> <li>deps: debug@2.6.1</li> </ul> </li> <li>deps: fresh@0.5.0<ul> <li>Fix false detection of <code>no-cache</code> request directive</li> <li>Fix incorrect result when <code>If-None-Match</code> has both <code>*</code> and ETags</li> <li>Fix weak <code>ETag</code> matching to match spec</li> <li>perf: delay reading header values until needed</li> <li>perf: enable strict mode</li> <li>perf: hoist regular expressions</li> <li>perf: remove duplicate conditional</li> <li>perf: remove unnecessary boolean coercions</li> <li>perf: skip checking modified time if ETag check failed</li> <li>perf: skip parsing <code>If-None-Match</code> when no <code>ETag</code> header</li> <li>perf: use <code>Date.parse</code> instead of <code>new Date</code></li> </ul> </li> <li>deps: qs@6.3.1<ul> <li>Fix array parsing from skipping empty values</li> <li>Fix compacting nested arrays</li> </ul> </li> <li>deps: send@0.15.0<ul> <li>Fix false detection of <code>no-cache</code> request directive</li> <li>Fix incorrect result when <code>If-None-Match</code> has both <code>*</code> and ETags</li> <li>Fix weak <code>ETag</code> matching to match spec</li> <li>Remove usage of <code>res._headers</code> private field</li> <li>Support <code>If-Match</code> and <code>If-Unmodified-Since</code> headers</li> <li>Use <code>res.getHeaderNames()</code> when available</li> <li>Use <code>res.headersSent</code> when available</li> <li>deps: debug@2.6.1</li> <li>deps: etag@~1.8.0</li> <li>deps: fresh@0.5.0</li> <li>deps: http-errors@~1.6.1</li> </ul> </li> <li>deps: serve-static@1.12.0<ul> <li>Fix false detection of <code>no-cache</code> request directive</li> <li>Fix incorrect result when <code>If-None-Match</code> has both <code>*</code> and ETags</li> <li>Fix weak <code>ETag</code> matching to match spec</li> <li>Remove usage of <code>res._headers</code> private field</li> <li>Send complete HTML document in redirect response</li> <li>Set default CSP header in redirect response</li> <li>Support <code>If-Match</code> and <code>If-Unmodified-Since</code> headers</li> <li>Use <code>res.getHeaderNames()</code> when available</li> <li>Use <code>res.headersSent</code> when available</li> <li>deps: send@0.15.0</li> </ul> </li> <li>perf: add fast match path for <code>*</code> route</li> <li>perf: improve <code>req.ips</code> performance</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4141-2017-01-28","title":"4.14.1 / 2017-01-28","text":"<ul> <li>deps: content-disposition@0.5.2</li> <li>deps: finalhandler@0.5.1<ul> <li>Fix exception when <code>err.headers</code> is not an object</li> <li>deps: statuses@~1.3.1</li> <li>perf: hoist regular expressions</li> <li>perf: remove duplicate validation path</li> </ul> </li> <li>deps: proxy-addr@~1.1.3<ul> <li>deps: ipaddr.js@1.2.0</li> </ul> </li> <li>deps: send@0.14.2<ul> <li>deps: http-errors@~1.5.1</li> <li>deps: ms@0.7.2</li> <li>deps: statuses@~1.3.1</li> </ul> </li> <li>deps: serve-static@~1.11.2<ul> <li>deps: send@0.14.2</li> </ul> </li> <li>deps: type-is@~1.6.14<ul> <li>deps: mime-types@~2.1.13</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4140-2016-06-16","title":"4.14.0 / 2016-06-16","text":"<ul> <li>Add <code>acceptRanges</code> option to <code>res.sendFile</code>/<code>res.sendfile</code></li> <li>Add <code>cacheControl</code> option to <code>res.sendFile</code>/<code>res.sendfile</code></li> <li>Add <code>options</code> argument to <code>req.range</code><ul> <li>Includes the <code>combine</code> option</li> </ul> </li> <li>Encode URL in <code>res.location</code>/<code>res.redirect</code> if not already encoded</li> <li>Fix some redirect handling in <code>res.sendFile</code>/<code>res.sendfile</code></li> <li>Fix Windows absolute path check using forward slashes</li> <li>Improve error with invalid arguments to <code>req.get()</code></li> <li>Improve performance for <code>res.json</code>/<code>res.jsonp</code> in most cases</li> <li>Improve <code>Range</code> header handling in <code>res.sendFile</code>/<code>res.sendfile</code></li> <li>deps: accepts@~1.3.3<ul> <li>Fix including type extensions in parameters in <code>Accept</code> parsing</li> <li>Fix parsing <code>Accept</code> parameters with quoted equals</li> <li>Fix parsing <code>Accept</code> parameters with quoted semicolons</li> <li>Many performance improvements</li> <li>deps: mime-types@~2.1.11</li> <li>deps: negotiator@0.6.1</li> </ul> </li> <li>deps: content-type@~1.0.2<ul> <li>perf: enable strict mode</li> </ul> </li> <li>deps: cookie@0.3.1<ul> <li>Add <code>sameSite</code> option</li> <li>Fix cookie <code>Max-Age</code> to never be a floating point number</li> <li>Improve error message when <code>encode</code> is not a function</li> <li>Improve error message when <code>expires</code> is not a <code>Date</code></li> <li>Throw better error for invalid argument to parse</li> <li>Throw on invalid values provided to <code>serialize</code></li> <li>perf: enable strict mode</li> <li>perf: hoist regular expression</li> <li>perf: use for loop in parse</li> <li>perf: use string concatenation for serialization</li> </ul> </li> <li>deps: finalhandler@0.5.0<ul> <li>Change invalid or non-numeric status code to 500</li> <li>Overwrite status message to match set status code</li> <li>Prefer <code>err.statusCode</code> if <code>err.status</code> is invalid</li> <li>Set response headers from <code>err.headers</code> object</li> <li>Use <code>statuses</code> instead of <code>http</code> module for status messages</li> </ul> </li> <li>deps: proxy-addr@~1.1.2<ul> <li>Fix accepting various invalid netmasks</li> <li>Fix IPv6-mapped IPv4 validation edge cases</li> <li>IPv4 netmasks must be contiguous</li> <li>IPv6 addresses cannot be used as a netmask</li> <li>deps: ipaddr.js@1.1.1</li> </ul> </li> <li>deps: qs@6.2.0<ul> <li>Add <code>decoder</code> option in <code>parse</code> function</li> </ul> </li> <li>deps: range-parser@~1.2.0<ul> <li>Add <code>combine</code> option to combine overlapping ranges</li> <li>Fix incorrectly returning -1 when there is at least one valid range</li> <li>perf: remove internal function</li> </ul> </li> <li>deps: send@0.14.1<ul> <li>Add <code>acceptRanges</code> option</li> <li>Add <code>cacheControl</code> option</li> <li>Attempt to combine multiple ranges into single range</li> <li>Correctly inherit from <code>Stream</code> class</li> <li>Fix <code>Content-Range</code> header in 416 responses when using <code>start</code>/<code>end</code> options</li> <li>Fix <code>Content-Range</code> header missing from default 416 responses</li> <li>Fix redirect error when <code>path</code> contains raw non-URL characters</li> <li>Fix redirect when <code>path</code> starts with multiple forward slashes</li> <li>Ignore non-byte <code>Range</code> headers</li> <li>deps: http-errors@~1.5.0</li> <li>deps: range-parser@~1.2.0</li> <li>deps: statuses@~1.3.0</li> <li>perf: remove argument reassignment</li> </ul> </li> <li>deps: serve-static@~1.11.1<ul> <li>Add <code>acceptRanges</code> option</li> <li>Add <code>cacheControl</code> option</li> <li>Attempt to combine multiple ranges into single range</li> <li>Fix redirect error when <code>req.url</code> contains raw non-URL characters</li> <li>Ignore non-byte <code>Range</code> headers</li> <li>Use status code 301 for redirects</li> <li>deps: send@0.14.1</li> </ul> </li> <li>deps: type-is@~1.6.13<ul> <li>Fix type error when given invalid type to match against</li> <li>deps: mime-types@~2.1.11</li> </ul> </li> <li>deps: vary@~1.1.0<ul> <li>Only accept valid field names in the <code>field</code> argument</li> </ul> </li> <li>perf: use strict equality when possible</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4134-2016-01-21","title":"4.13.4 / 2016-01-21","text":"<ul> <li>deps: content-disposition@0.5.1<ul> <li>perf: enable strict mode</li> </ul> </li> <li>deps: cookie@0.1.5<ul> <li>Throw on invalid values provided to <code>serialize</code></li> </ul> </li> <li>deps: depd@~1.1.0<ul> <li>Support web browser loading</li> <li>perf: enable strict mode</li> </ul> </li> <li>deps: escape-html@~1.0.3<ul> <li>perf: enable strict mode</li> <li>perf: optimize string replacement</li> <li>perf: use faster string coercion</li> </ul> </li> <li>deps: finalhandler@0.4.1<ul> <li>deps: escape-html@~1.0.3</li> </ul> </li> <li>deps: merge-descriptors@1.0.1<ul> <li>perf: enable strict mode</li> </ul> </li> <li>deps: methods@~1.1.2<ul> <li>perf: enable strict mode</li> </ul> </li> <li>deps: parseurl@~1.3.1<ul> <li>perf: enable strict mode</li> </ul> </li> <li>deps: proxy-addr@~1.0.10<ul> <li>deps: ipaddr.js@1.0.5</li> <li>perf: enable strict mode</li> </ul> </li> <li>deps: range-parser@~1.0.3<ul> <li>perf: enable strict mode</li> </ul> </li> <li>deps: send@0.13.1<ul> <li>deps: depd@~1.1.0</li> <li>deps: destroy@~1.0.4</li> <li>deps: escape-html@~1.0.3</li> <li>deps: range-parser@~1.0.3</li> </ul> </li> <li>deps: serve-static@~1.10.2<ul> <li>deps: escape-html@~1.0.3</li> <li>deps: parseurl@~1.3.0</li> <li>deps: send@0.13.1</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4133-2015-08-02","title":"4.13.3 / 2015-08-02","text":"<ul> <li>Fix infinite loop condition using <code>mergeParams: true</code></li> <li>Fix inner numeric indices incorrectly altering parent <code>req.params</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4132-2015-07-31","title":"4.13.2 / 2015-07-31","text":"<ul> <li>deps: accepts@~1.2.12<ul> <li>deps: mime-types@~2.1.4</li> </ul> </li> <li>deps: array-flatten@1.1.1<ul> <li>perf: enable strict mode</li> </ul> </li> <li>deps: path-to-regexp@0.1.7<ul> <li>Fix regression with escaped round brackets and matching groups</li> </ul> </li> <li>deps: type-is@~1.6.6<ul> <li>deps: mime-types@~2.1.4</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4131-2015-07-05","title":"4.13.1 / 2015-07-05","text":"<ul> <li>deps: accepts@~1.2.10<ul> <li>deps: mime-types@~2.1.2</li> </ul> </li> <li>deps: qs@4.0.0<ul> <li>Fix dropping parameters like <code>hasOwnProperty</code></li> <li>Fix various parsing edge cases</li> </ul> </li> <li>deps: type-is@~1.6.4<ul> <li>deps: mime-types@~2.1.2</li> <li>perf: enable strict mode</li> <li>perf: remove argument reassignment</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4130-2015-06-20","title":"4.13.0 / 2015-06-20","text":"<ul> <li>Add settings to debug output</li> <li>Fix <code>res.format</code> error when only <code>default</code> provided</li> <li>Fix issue where <code>next('route')</code> in <code>app.param</code> would incorrectly skip values</li> <li>Fix hiding platform issues with <code>decodeURIComponent</code><ul> <li>Only <code>URIError</code>s are a 400</li> </ul> </li> <li>Fix using <code>*</code> before params in routes</li> <li>Fix using capture groups before params in routes</li> <li>Simplify <code>res.cookie</code> to call <code>res.append</code></li> <li>Use <code>array-flatten</code> module for flattening arrays</li> <li>deps: accepts@~1.2.9<ul> <li>deps: mime-types@~2.1.1</li> <li>perf: avoid argument reassignment &amp; argument slice</li> <li>perf: avoid negotiator recursive construction</li> <li>perf: enable strict mode</li> <li>perf: remove unnecessary bitwise operator</li> </ul> </li> <li>deps: cookie@0.1.3<ul> <li>perf: deduce the scope of try-catch deopt</li> <li>perf: remove argument reassignments</li> </ul> </li> <li>deps: escape-html@1.0.2</li> <li>deps: etag@~1.7.0<ul> <li>Always include entity length in ETags for hash length extensions</li> <li>Generate non-Stats ETags using MD5 only (no longer CRC32)</li> <li>Improve stat performance by removing hashing</li> <li>Improve support for JXcore</li> <li>Remove base64 padding in ETags to shorten</li> <li>Support \"fake\" stats objects in environments without fs</li> <li>Use MD5 instead of MD4 in weak ETags over 1KB</li> </ul> </li> <li>deps: finalhandler@0.4.0<ul> <li>Fix a false-positive when unpiping in Node.js 0.8</li> <li>Support <code>statusCode</code> property on <code>Error</code> objects</li> <li>Use <code>unpipe</code> module for unpiping requests</li> <li>deps: escape-html@1.0.2</li> <li>deps: on-finished@~2.3.0</li> <li>perf: enable strict mode</li> <li>perf: remove argument reassignment</li> </ul> </li> <li>deps: fresh@0.3.0<ul> <li>Add weak <code>ETag</code> matching support</li> </ul> </li> <li>deps: on-finished@~2.3.0<ul> <li>Add defined behavior for HTTP <code>CONNECT</code> requests</li> <li>Add defined behavior for HTTP <code>Upgrade</code> requests</li> <li>deps: ee-first@1.1.1</li> </ul> </li> <li>deps: path-to-regexp@0.1.6</li> <li>deps: send@0.13.0<ul> <li>Allow Node.js HTTP server to set <code>Date</code> response header</li> <li>Fix incorrectly removing <code>Content-Location</code> on 304 response</li> <li>Improve the default redirect response headers</li> <li>Send appropriate headers on default error response</li> <li>Use <code>http-errors</code> for standard emitted errors</li> <li>Use <code>statuses</code> instead of <code>http</code> module for status messages</li> <li>deps: escape-html@1.0.2</li> <li>deps: etag@~1.7.0</li> <li>deps: fresh@0.3.0</li> <li>deps: on-finished@~2.3.0</li> <li>perf: enable strict mode</li> <li>perf: remove unnecessary array allocations</li> </ul> </li> <li>deps: serve-static@~1.10.0<ul> <li>Add <code>fallthrough</code> option</li> <li>Fix reading options from options prototype</li> <li>Improve the default redirect response headers</li> <li>Malformed URLs now <code>next()</code> instead of 400</li> <li>deps: escape-html@1.0.2</li> <li>deps: send@0.13.0</li> <li>perf: enable strict mode</li> <li>perf: remove argument reassignment</li> </ul> </li> <li>deps: type-is@~1.6.3<ul> <li>deps: mime-types@~2.1.1</li> <li>perf: reduce try block size</li> <li>perf: remove bitwise operations</li> </ul> </li> <li>perf: enable strict mode</li> <li>perf: isolate <code>app.render</code> try block</li> <li>perf: remove argument reassignments in application</li> <li>perf: remove argument reassignments in request prototype</li> <li>perf: remove argument reassignments in response prototype</li> <li>perf: remove argument reassignments in routing</li> <li>perf: remove argument reassignments in <code>View</code></li> <li>perf: skip attempting to decode zero length string</li> <li>perf: use saved reference to <code>http.STATUS_CODES</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4124-2015-05-17","title":"4.12.4 / 2015-05-17","text":"<ul> <li>deps: accepts@~1.2.7<ul> <li>deps: mime-types@~2.0.11</li> <li>deps: negotiator@0.5.3</li> </ul> </li> <li>deps: debug@~2.2.0<ul> <li>deps: ms@0.7.1</li> </ul> </li> <li>deps: depd@~1.0.1</li> <li>deps: etag@~1.6.0<ul> <li>Improve support for JXcore</li> <li>Support \"fake\" stats objects in environments without <code>fs</code></li> </ul> </li> <li>deps: finalhandler@0.3.6<ul> <li>deps: debug@~2.2.0</li> <li>deps: on-finished@~2.2.1</li> </ul> </li> <li>deps: on-finished@~2.2.1<ul> <li>Fix <code>isFinished(req)</code> when data buffered</li> </ul> </li> <li>deps: proxy-addr@~1.0.8<ul> <li>deps: ipaddr.js@1.0.1</li> </ul> </li> <li>deps: qs@2.4.2</li> <li>Fix allowing parameters like <code>constructor</code></li> <li>deps: send@0.12.3<ul> <li>deps: debug@~2.2.0</li> <li>deps: depd@~1.0.1</li> <li>deps: etag@~1.6.0</li> <li>deps: ms@0.7.1</li> <li>deps: on-finished@~2.2.1</li> </ul> </li> <li>deps: serve-static@~1.9.3<ul> <li>deps: send@0.12.3</li> </ul> </li> <li>deps: type-is@~1.6.2<ul> <li>deps: mime-types@~2.0.11</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4123-2015-03-17","title":"4.12.3 / 2015-03-17","text":"<ul> <li>deps: accepts@~1.2.5<ul> <li>deps: mime-types@~2.0.10</li> </ul> </li> <li>deps: debug@~2.1.3<ul> <li>Fix high intensity foreground color for bold</li> <li>deps: ms@0.7.0</li> </ul> </li> <li>deps: finalhandler@0.3.4<ul> <li>deps: debug@~2.1.3</li> </ul> </li> <li>deps: proxy-addr@~1.0.7<ul> <li>deps: ipaddr.js@0.1.9</li> </ul> </li> <li>deps: qs@2.4.1<ul> <li>Fix error when parameter <code>hasOwnProperty</code> is present</li> </ul> </li> <li>deps: send@0.12.2<ul> <li>Throw errors early for invalid <code>extensions</code> or <code>index</code> options</li> <li>deps: debug@~2.1.3</li> </ul> </li> <li>deps: serve-static@~1.9.2<ul> <li>deps: send@0.12.2</li> </ul> </li> <li>deps: type-is@~1.6.1<ul> <li>deps: mime-types@~2.0.10</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4122-2015-03-02","title":"4.12.2 / 2015-03-02","text":"<ul> <li>Fix regression where <code>\"Request aborted\"</code> is logged using <code>res.sendFile</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4121-2015-03-01","title":"4.12.1 / 2015-03-01","text":"<ul> <li>Fix constructing application with non-configurable prototype properties</li> <li>Fix <code>ECONNRESET</code> errors from <code>res.sendFile</code> usage</li> <li>Fix <code>req.host</code> when using \"trust proxy\" hops count</li> <li>Fix <code>req.protocol</code>/<code>req.secure</code> when using \"trust proxy\" hops count</li> <li>Fix wrong <code>code</code> on aborted connections from <code>res.sendFile</code></li> <li>deps: merge-descriptors@1.0.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4120-2015-02-23","title":"4.12.0 / 2015-02-23","text":"<ul> <li>Fix <code>\"trust proxy\"</code> setting to inherit when app is mounted</li> <li>Generate <code>ETag</code>s for all request responses<ul> <li>No longer restricted to only responses for <code>GET</code> and <code>HEAD</code> requests</li> </ul> </li> <li>Use <code>content-type</code> to parse <code>Content-Type</code> headers</li> <li>deps: accepts@~1.2.4<ul> <li>Fix preference sorting to be stable for long acceptable lists</li> <li>deps: mime-types@~2.0.9</li> <li>deps: negotiator@0.5.1</li> </ul> </li> <li>deps: cookie-signature@1.0.6</li> <li>deps: send@0.12.1<ul> <li>Always read the stat size from the file</li> <li>Fix mutating passed-in <code>options</code></li> <li>deps: mime@1.3.4</li> </ul> </li> <li>deps: serve-static@~1.9.1<ul> <li>deps: send@0.12.1</li> </ul> </li> <li>deps: type-is@~1.6.0<ul> <li>fix argument reassignment</li> <li>fix false-positives in <code>hasBody</code> <code>Transfer-Encoding</code> check</li> <li>support wildcard for both type and subtype (<code>*/*</code>)</li> <li>deps: mime-types@~2.0.9</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4112-2015-02-01","title":"4.11.2 / 2015-02-01","text":"<ul> <li>Fix <code>res.redirect</code> double-calling <code>res.end</code> for <code>HEAD</code> requests</li> <li>deps: accepts@~1.2.3<ul> <li>deps: mime-types@~2.0.8</li> </ul> </li> <li>deps: proxy-addr@~1.0.6<ul> <li>deps: ipaddr.js@0.1.8</li> </ul> </li> <li>deps: type-is@~1.5.6<ul> <li>deps: mime-types@~2.0.8</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4111-2015-01-20","title":"4.11.1 / 2015-01-20","text":"<ul> <li>deps: send@0.11.1<ul> <li>Fix root path disclosure</li> </ul> </li> <li>deps: serve-static@~1.8.1<ul> <li>Fix redirect loop in Node.js 0.11.14</li> <li>Fix root path disclosure</li> <li>deps: send@0.11.1</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4110-2015-01-13","title":"4.11.0 / 2015-01-13","text":"<ul> <li>Add <code>res.append(field, val)</code> to append headers</li> <li>Deprecate leading <code>:</code> in <code>name</code> for <code>app.param(name, fn)</code></li> <li>Deprecate <code>req.param()</code> -- use <code>req.params</code>, <code>req.body</code>, or <code>req.query</code> instead</li> <li>Deprecate <code>app.param(fn)</code></li> <li>Fix <code>OPTIONS</code> responses to include the <code>HEAD</code> method properly</li> <li>Fix <code>res.sendFile</code> not always detecting aborted connection</li> <li>Match routes iteratively to prevent stack overflows</li> <li>deps: accepts@~1.2.2<ul> <li>deps: mime-types@~2.0.7</li> <li>deps: negotiator@0.5.0</li> </ul> </li> <li>deps: send@0.11.0<ul> <li>deps: debug@~2.1.1</li> <li>deps: etag@~1.5.1</li> <li>deps: ms@0.7.0</li> <li>deps: on-finished@~2.2.0</li> </ul> </li> <li>deps: serve-static@~1.8.0<ul> <li>deps: send@0.11.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4108-2015-01-13","title":"4.10.8 / 2015-01-13","text":"<ul> <li>Fix crash from error within <code>OPTIONS</code> response handler</li> <li>deps: proxy-addr@~1.0.5<ul> <li>deps: ipaddr.js@0.1.6</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4107-2015-01-04","title":"4.10.7 / 2015-01-04","text":"<ul> <li>Fix <code>Allow</code> header for <code>OPTIONS</code> to not contain duplicate methods</li> <li>Fix incorrect \"Request aborted\" for <code>res.sendFile</code> when <code>HEAD</code> or 304</li> <li>deps: debug@~2.1.1</li> <li>deps: finalhandler@0.3.3<ul> <li>deps: debug@~2.1.1</li> <li>deps: on-finished@~2.2.0</li> </ul> </li> <li>deps: methods@~1.1.1</li> <li>deps: on-finished@~2.2.0</li> <li>deps: serve-static@~1.7.2<ul> <li>Fix potential open redirect when mounted at root</li> </ul> </li> <li>deps: type-is@~1.5.5<ul> <li>deps: mime-types@~2.0.7</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4106-2014-12-12","title":"4.10.6 / 2014-12-12","text":"<ul> <li>Fix exception in <code>req.fresh</code>/<code>req.stale</code> without response headers</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4105-2014-12-10","title":"4.10.5 / 2014-12-10","text":"<ul> <li>Fix <code>res.send</code> double-calling <code>res.end</code> for <code>HEAD</code> requests</li> <li>deps: accepts@~1.1.4<ul> <li>deps: mime-types@~2.0.4</li> </ul> </li> <li>deps: type-is@~1.5.4<ul> <li>deps: mime-types@~2.0.4</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4104-2014-11-24","title":"4.10.4 / 2014-11-24","text":"<ul> <li>Fix <code>res.sendfile</code> logging standard write errors</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4103-2014-11-23","title":"4.10.3 / 2014-11-23","text":"<ul> <li>Fix <code>res.sendFile</code> logging standard write errors</li> <li>deps: etag@~1.5.1</li> <li>deps: proxy-addr@~1.0.4<ul> <li>deps: ipaddr.js@0.1.5</li> </ul> </li> <li>deps: qs@2.3.3<ul> <li>Fix <code>arrayLimit</code> behavior</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4102-2014-11-09","title":"4.10.2 / 2014-11-09","text":"<ul> <li>Correctly invoke async router callback asynchronously</li> <li>deps: accepts@~1.1.3<ul> <li>deps: mime-types@~2.0.3</li> </ul> </li> <li>deps: type-is@~1.5.3<ul> <li>deps: mime-types@~2.0.3</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4101-2014-10-28","title":"4.10.1 / 2014-10-28","text":"<ul> <li>Fix handling of URLs containing <code>://</code> in the path</li> <li>deps: qs@2.3.2<ul> <li>Fix parsing of mixed objects and values</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#4100-2014-10-23","title":"4.10.0 / 2014-10-23","text":"<ul> <li>Add support for <code>app.set('views', array)</code><ul> <li>Views are looked up in sequence in array of directories</li> </ul> </li> <li>Fix <code>res.send(status)</code> to mention <code>res.sendStatus(status)</code></li> <li>Fix handling of invalid empty URLs</li> <li>Use <code>content-disposition</code> module for <code>res.attachment</code>/<code>res.download</code><ul> <li>Sends standards-compliant <code>Content-Disposition</code> header</li> <li>Full Unicode support</li> </ul> </li> <li>Use <code>path.resolve</code> in view lookup</li> <li>deps: debug@~2.1.0<ul> <li>Implement <code>DEBUG_FD</code> env variable support</li> </ul> </li> <li>deps: depd@~1.0.0</li> <li>deps: etag@~1.5.0<ul> <li>Improve string performance</li> <li>Slightly improve speed for weak ETags over 1KB</li> </ul> </li> <li>deps: finalhandler@0.3.2<ul> <li>Terminate in progress response only on error</li> <li>Use <code>on-finished</code> to determine request status</li> <li>deps: debug@~2.1.0</li> <li>deps: on-finished@~2.1.1</li> </ul> </li> <li>deps: on-finished@~2.1.1<ul> <li>Fix handling of pipelined requests</li> </ul> </li> <li>deps: qs@2.3.0<ul> <li>Fix parsing of mixed implicit and explicit arrays</li> </ul> </li> <li>deps: send@0.10.1<ul> <li>deps: debug@~2.1.0</li> <li>deps: depd@~1.0.0</li> <li>deps: etag@~1.5.0</li> <li>deps: on-finished@~2.1.1</li> </ul> </li> <li>deps: serve-static@~1.7.1<ul> <li>deps: send@0.10.1</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#498-2014-10-17","title":"4.9.8 / 2014-10-17","text":"<ul> <li>Fix <code>res.redirect</code> body when redirect status specified</li> <li>deps: accepts@~1.1.2<ul> <li>Fix error when media type has invalid parameter</li> <li>deps: negotiator@0.4.9</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#497-2014-10-10","title":"4.9.7 / 2014-10-10","text":"<ul> <li>Fix using same param name in array of paths</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#496-2014-10-08","title":"4.9.6 / 2014-10-08","text":"<ul> <li>deps: accepts@~1.1.1<ul> <li>deps: mime-types@~2.0.2</li> <li>deps: negotiator@0.4.8</li> </ul> </li> <li>deps: serve-static@~1.6.4<ul> <li>Fix redirect loop when index file serving disabled</li> </ul> </li> <li>deps: type-is@~1.5.2<ul> <li>deps: mime-types@~2.0.2</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#495-2014-09-24","title":"4.9.5 / 2014-09-24","text":"<ul> <li>deps: etag@~1.4.0</li> <li>deps: proxy-addr@~1.0.3<ul> <li>Use <code>forwarded</code> npm module</li> </ul> </li> <li>deps: send@0.9.3<ul> <li>deps: etag@~1.4.0</li> </ul> </li> <li>deps: serve-static@~1.6.3<ul> <li>deps: send@0.9.3</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#494-2014-09-19","title":"4.9.4 / 2014-09-19","text":"<ul> <li>deps: qs@2.2.4<ul> <li>Fix issue with object keys starting with numbers truncated</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#493-2014-09-18","title":"4.9.3 / 2014-09-18","text":"<ul> <li>deps: proxy-addr@~1.0.2<ul> <li>Fix a global leak when multiple subnets are trusted</li> <li>deps: ipaddr.js@0.1.3</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#492-2014-09-17","title":"4.9.2 / 2014-09-17","text":"<ul> <li>Fix regression for empty string <code>path</code> in <code>app.use</code></li> <li>Fix <code>router.use</code> to accept array of middleware without path</li> <li>Improve error message for bad <code>app.use</code> arguments</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#491-2014-09-16","title":"4.9.1 / 2014-09-16","text":"<ul> <li>Fix <code>app.use</code> to accept array of middleware without path</li> <li>deps: depd@0.4.5</li> <li>deps: etag@~1.3.1</li> <li>deps: send@0.9.2<ul> <li>deps: depd@0.4.5</li> <li>deps: etag@~1.3.1</li> <li>deps: range-parser@~1.0.2</li> </ul> </li> <li>deps: serve-static@~1.6.2<ul> <li>deps: send@0.9.2</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#490-2014-09-08","title":"4.9.0 / 2014-09-08","text":"<ul> <li>Add <code>res.sendStatus</code></li> <li>Invoke callback for sendfile when client aborts<ul> <li>Applies to <code>res.sendFile</code>, <code>res.sendfile</code>, and <code>res.download</code></li> <li><code>err</code> will be populated with request aborted error</li> </ul> </li> <li>Support IP address host in <code>req.subdomains</code></li> <li>Use <code>etag</code> to generate <code>ETag</code> headers</li> <li>deps: accepts@~1.1.0<ul> <li>update <code>mime-types</code></li> </ul> </li> <li>deps: cookie-signature@1.0.5</li> <li>deps: debug@~2.0.0</li> <li>deps: finalhandler@0.2.0<ul> <li>Set <code>X-Content-Type-Options: nosniff</code> header</li> <li>deps: debug@~2.0.0</li> </ul> </li> <li>deps: fresh@0.2.4</li> <li>deps: media-typer@0.3.0<ul> <li>Throw error when parameter format invalid on parse</li> </ul> </li> <li>deps: qs@2.2.3<ul> <li>Fix issue where first empty value in array is discarded</li> </ul> </li> <li>deps: range-parser@~1.0.2</li> <li>deps: send@0.9.1<ul> <li>Add <code>lastModified</code> option</li> <li>Use <code>etag</code> to generate <code>ETag</code> header</li> <li>deps: debug@~2.0.0</li> <li>deps: fresh@0.2.4</li> </ul> </li> <li>deps: serve-static@~1.6.1<ul> <li>Add <code>lastModified</code> option</li> <li>deps: send@0.9.1</li> </ul> </li> <li>deps: type-is@~1.5.1<ul> <li>fix <code>hasbody</code> to be true for <code>content-length: 0</code></li> <li>deps: media-typer@0.3.0</li> <li>deps: mime-types@~2.0.1</li> </ul> </li> <li>deps: vary@~1.0.0<ul> <li>Accept valid <code>Vary</code> header string as <code>field</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#488-2014-09-04","title":"4.8.8 / 2014-09-04","text":"<ul> <li>deps: send@0.8.5<ul> <li>Fix a path traversal issue when using <code>root</code></li> <li>Fix malicious path detection for empty string path</li> </ul> </li> <li>deps: serve-static@~1.5.4<ul> <li>deps: send@0.8.5</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#487-2014-08-29","title":"4.8.7 / 2014-08-29","text":"<ul> <li>deps: qs@2.2.2<ul> <li>Remove unnecessary cloning</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#486-2014-08-27","title":"4.8.6 / 2014-08-27","text":"<ul> <li>deps: qs@2.2.0<ul> <li>Array parsing fix</li> <li>Performance improvements</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#485-2014-08-18","title":"4.8.5 / 2014-08-18","text":"<ul> <li>deps: send@0.8.3<ul> <li>deps: destroy@1.0.3</li> <li>deps: on-finished@2.1.0</li> </ul> </li> <li>deps: serve-static@~1.5.3<ul> <li>deps: send@0.8.3</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#484-2014-08-14","title":"4.8.4 / 2014-08-14","text":"<ul> <li>deps: qs@1.2.2</li> <li>deps: send@0.8.2<ul> <li>Work around <code>fd</code> leak in Node.js 0.10 for <code>fs.ReadStream</code></li> </ul> </li> <li>deps: serve-static@~1.5.2<ul> <li>deps: send@0.8.2</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#483-2014-08-10","title":"4.8.3 / 2014-08-10","text":"<ul> <li>deps: parseurl@~1.3.0</li> <li>deps: qs@1.2.1</li> <li>deps: serve-static@~1.5.1<ul> <li>Fix parsing of weird <code>req.originalUrl</code> values</li> <li>deps: parseurl@~1.3.0</li> <li>deps: utils-merge@1.0.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#482-2014-08-07","title":"4.8.2 / 2014-08-07","text":"<ul> <li>deps: qs@1.2.0<ul> <li>Fix parsing array of objects</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#481-2014-08-06","title":"4.8.1 / 2014-08-06","text":"<ul> <li>fix incorrect deprecation warnings on <code>res.download</code></li> <li>deps: qs@1.1.0<ul> <li>Accept urlencoded square brackets</li> <li>Accept empty values in implicit array notation</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#480-2014-08-05","title":"4.8.0 / 2014-08-05","text":"<ul> <li>add <code>res.sendFile</code><ul> <li>accepts a file system path instead of a URL</li> <li>requires an absolute path or <code>root</code> option specified</li> </ul> </li> <li>deprecate <code>res.sendfile</code> -- use <code>res.sendFile</code> instead</li> <li>support mounted app as any argument to <code>app.use()</code></li> <li>deps: qs@1.0.2<ul> <li>Complete rewrite</li> <li>Limits array length to 20</li> <li>Limits object depth to 5</li> <li>Limits parameters to 1,000</li> </ul> </li> <li>deps: send@0.8.1<ul> <li>Add <code>extensions</code> option</li> </ul> </li> <li>deps: serve-static@~1.5.0<ul> <li>Add <code>extensions</code> option</li> <li>deps: send@0.8.1</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#474-2014-08-04","title":"4.7.4 / 2014-08-04","text":"<ul> <li>fix <code>res.sendfile</code> regression for serving directory index files</li> <li>deps: send@0.7.4<ul> <li>Fix incorrect 403 on Windows and Node.js 0.11</li> <li>Fix serving index files without root dir</li> </ul> </li> <li>deps: serve-static@~1.4.4<ul> <li>deps: send@0.7.4</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#473-2014-08-04","title":"4.7.3 / 2014-08-04","text":"<ul> <li>deps: send@0.7.3<ul> <li>Fix incorrect 403 on Windows and Node.js 0.11</li> </ul> </li> <li>deps: serve-static@~1.4.3<ul> <li>Fix incorrect 403 on Windows and Node.js 0.11</li> <li>deps: send@0.7.3</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#472-2014-07-27","title":"4.7.2 / 2014-07-27","text":"<ul> <li>deps: depd@0.4.4<ul> <li>Work-around v8 generating empty stack traces</li> </ul> </li> <li>deps: send@0.7.2<ul> <li>deps: depd@0.4.4</li> </ul> </li> <li>deps: serve-static@~1.4.2</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#471-2014-07-26","title":"4.7.1 / 2014-07-26","text":"<ul> <li>deps: depd@0.4.3<ul> <li>Fix exception when global <code>Error.stackTraceLimit</code> is too low</li> </ul> </li> <li>deps: send@0.7.1<ul> <li>deps: depd@0.4.3</li> </ul> </li> <li>deps: serve-static@~1.4.1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#470-2014-07-25","title":"4.7.0 / 2014-07-25","text":"<ul> <li>fix <code>req.protocol</code> for proxy-direct connections</li> <li>configurable query parser with <code>app.set('query parser', parser)</code><ul> <li><code>app.set('query parser', 'extended')</code> parse with \"qs\" module</li> <li><code>app.set('query parser', 'simple')</code> parse with \"querystring\" core module</li> <li><code>app.set('query parser', false)</code> disable query string parsing</li> <li><code>app.set('query parser', true)</code> enable simple parsing</li> </ul> </li> <li>deprecate <code>res.json(status, obj)</code> -- use <code>res.status(status).json(obj)</code> instead</li> <li>deprecate <code>res.jsonp(status, obj)</code> -- use <code>res.status(status).jsonp(obj)</code> instead</li> <li>deprecate <code>res.send(status, body)</code> -- use <code>res.status(status).send(body)</code> instead</li> <li>deps: debug@1.0.4</li> <li>deps: depd@0.4.2<ul> <li>Add <code>TRACE_DEPRECATION</code> environment variable</li> <li>Remove non-standard grey color from color output</li> <li>Support <code>--no-deprecation</code> argument</li> <li>Support <code>--trace-deprecation</code> argument</li> </ul> </li> <li>deps: finalhandler@0.1.0<ul> <li>Respond after request fully read</li> <li>deps: debug@1.0.4</li> </ul> </li> <li>deps: parseurl@~1.2.0<ul> <li>Cache URLs based on original value</li> <li>Remove no-longer-needed URL mis-parse work-around</li> <li>Simplify the \"fast-path\" <code>RegExp</code></li> </ul> </li> <li>deps: send@0.7.0<ul> <li>Add <code>dotfiles</code> option</li> <li>Cap <code>maxAge</code> value to 1 year</li> <li>deps: debug@1.0.4</li> <li>deps: depd@0.4.2</li> </ul> </li> <li>deps: serve-static@~1.4.0<ul> <li>deps: parseurl@~1.2.0</li> <li>deps: send@0.7.0</li> </ul> </li> <li>perf: prevent multiple <code>Buffer</code> creation in <code>res.send</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#461-2014-07-12","title":"4.6.1 / 2014-07-12","text":"<ul> <li>fix <code>subapp.mountpath</code> regression for <code>app.use(subapp)</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#460-2014-07-11","title":"4.6.0 / 2014-07-11","text":"<ul> <li>accept multiple callbacks to <code>app.use()</code></li> <li>add explicit \"Rosetta Flash JSONP abuse\" protection<ul> <li>previous versions are not vulnerable; this is just explicit protection</li> </ul> </li> <li>catch errors in multiple <code>req.param(name, fn)</code> handlers</li> <li>deprecate <code>res.redirect(url, status)</code> -- use <code>res.redirect(status, url)</code> instead</li> <li>fix <code>res.send(status, num)</code> to send <code>num</code> as json (not error)</li> <li>remove unnecessary escaping when <code>res.jsonp</code> returns JSON response</li> <li>support non-string <code>path</code> in <code>app.use(path, fn)</code><ul> <li>supports array of paths</li> <li>supports <code>RegExp</code></li> </ul> </li> <li>router: fix optimization on router exit</li> <li>router: refactor location of <code>try</code> blocks</li> <li>router: speed up standard <code>app.use(fn)</code></li> <li>deps: debug@1.0.3<ul> <li>Add support for multiple wildcards in namespaces</li> </ul> </li> <li>deps: finalhandler@0.0.3<ul> <li>deps: debug@1.0.3</li> </ul> </li> <li>deps: methods@1.1.0<ul> <li>add <code>CONNECT</code></li> </ul> </li> <li>deps: parseurl@~1.1.3<ul> <li>faster parsing of href-only URLs</li> </ul> </li> <li>deps: path-to-regexp@0.1.3</li> <li>deps: send@0.6.0<ul> <li>deps: debug@1.0.3</li> </ul> </li> <li>deps: serve-static@~1.3.2<ul> <li>deps: parseurl@~1.1.3</li> <li>deps: send@0.6.0</li> </ul> </li> <li>perf: fix arguments reassign deopt in some <code>res</code> methods</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#451-2014-07-06","title":"4.5.1 / 2014-07-06","text":"<ul> <li>fix routing regression when altering <code>req.method</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#450-2014-07-04","title":"4.5.0 / 2014-07-04","text":"<ul> <li>add deprecation message to non-plural <code>req.accepts*</code></li> <li>add deprecation message to <code>res.send(body, status)</code></li> <li>add deprecation message to <code>res.vary()</code></li> <li>add <code>headers</code> option to <code>res.sendfile</code></li> <li>use to set headers on successful file transfer</li> <li>add <code>mergeParams</code> option to <code>Router</code></li> <li>merges <code>req.params</code> from parent routes</li> <li>add <code>req.hostname</code> -- correct name for what <code>req.host</code> returns</li> <li>deprecate things with <code>depd</code> module</li> <li>deprecate <code>req.host</code> -- use <code>req.hostname</code> instead</li> <li>fix behavior when handling request without routes</li> <li>fix handling when <code>route.all</code> is only route</li> <li>invoke <code>router.param()</code> only when route matches</li> <li>restore <code>req.params</code> after invoking router</li> <li>use <code>finalhandler</code> for final response handling</li> <li>use <code>media-typer</code> to alter content-type charset</li> <li>deps: accepts@~1.0.7</li> <li>deps: send@0.5.0</li> <li>Accept string for <code>maxage</code> (converted by <code>ms</code>)</li> <li>Include link in default redirect response</li> <li>deps: serve-static@~1.3.0</li> <li>Accept string for <code>maxAge</code> (converted by <code>ms</code>)</li> <li>Add <code>setHeaders</code> option</li> <li>Include HTML link in redirect response</li> <li>deps: send@0.5.0</li> <li>deps: type-is@~1.3.2</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#445-2014-06-26","title":"4.4.5 / 2014-06-26","text":"<ul> <li>deps: cookie-signature@1.0.4</li> <li>fix for timing attacks</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#444-2014-06-20","title":"4.4.4 / 2014-06-20","text":"<ul> <li>fix <code>res.attachment</code> Unicode filenames in Safari</li> <li>fix \"trim prefix\" debug message in <code>express:router</code></li> <li>deps: accepts@~1.0.5</li> <li>deps: buffer-crc32@0.2.3</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#443-2014-06-11","title":"4.4.3 / 2014-06-11","text":"<ul> <li>fix persistence of modified <code>req.params[name]</code> from <code>app.param()</code></li> <li>deps: accepts@1.0.3</li> <li>deps: negotiator@0.4.6</li> <li>deps: debug@1.0.2</li> <li>deps: send@0.4.3</li> <li>Do not throw uncatchable error on file open race condition</li> <li>Use <code>escape-html</code> for HTML escaping</li> <li>deps: debug@1.0.2</li> <li>deps: finished@1.2.2</li> <li>deps: fresh@0.2.2</li> <li>deps: serve-static@1.2.3</li> <li>Do not throw uncatchable error on file open race condition</li> <li>deps: send@0.4.3</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#442-2014-06-09","title":"4.4.2 / 2014-06-09","text":"<ul> <li>fix catching errors from top-level handlers</li> <li>use <code>vary</code> module for <code>res.vary</code></li> <li>deps: debug@1.0.1</li> <li>deps: proxy-addr@1.0.1</li> <li>deps: send@0.4.2</li> <li>fix \"event emitter leak\" warnings</li> <li>deps: debug@1.0.1</li> <li>deps: finished@1.2.1</li> <li>deps: serve-static@1.2.2</li> <li>fix \"event emitter leak\" warnings</li> <li>deps: send@0.4.2</li> <li>deps: type-is@1.2.1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#441-2014-06-02","title":"4.4.1 / 2014-06-02","text":"<ul> <li>deps: methods@1.0.1</li> <li>deps: send@0.4.1</li> <li>Send <code>max-age</code> in <code>Cache-Control</code> in correct format</li> <li>deps: serve-static@1.2.1</li> <li>use <code>escape-html</code> for escaping</li> <li>deps: send@0.4.1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#440-2014-05-30","title":"4.4.0 / 2014-05-30","text":"<ul> <li>custom etag control with <code>app.set('etag', val)</code></li> <li><code>app.set('etag', function(body, encoding){ return '\"etag\"' })</code> custom etag generation</li> <li><code>app.set('etag', 'weak')</code> weak tag</li> <li><code>app.set('etag', 'strong')</code> strong etag</li> <li><code>app.set('etag', false)</code> turn off</li> <li><code>app.set('etag', true)</code> standard etag</li> <li>mark <code>res.send</code> ETag as weak and reduce collisions</li> <li>update accepts to 1.0.2</li> <li>Fix interpretation when header not in request</li> <li>update send to 0.4.0</li> <li>Calculate ETag with md5 for reduced collisions</li> <li>Ignore stream errors after request ends</li> <li>deps: debug@0.8.1</li> <li>update serve-static to 1.2.0</li> <li>Calculate ETag with md5 for reduced collisions</li> <li>Ignore stream errors after request ends</li> <li>deps: send@0.4.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#432-2014-05-28","title":"4.3.2 / 2014-05-28","text":"<ul> <li>fix handling of errors from <code>router.param()</code> callbacks</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#431-2014-05-23","title":"4.3.1 / 2014-05-23","text":"<ul> <li>revert \"fix behavior of multiple <code>app.VERB</code> for the same path\"</li> <li>this caused a regression in the order of route execution</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#430-2014-05-21","title":"4.3.0 / 2014-05-21","text":"<ul> <li>add <code>req.baseUrl</code> to access the path stripped from <code>req.url</code> in routes</li> <li>fix behavior of multiple <code>app.VERB</code> for the same path</li> <li>fix issue routing requests among sub routers</li> <li>invoke <code>router.param()</code> only when necessary instead of every match</li> <li>proper proxy trust with <code>app.set('trust proxy', trust)</code></li> <li><code>app.set('trust proxy', 1)</code> trust first hop</li> <li><code>app.set('trust proxy', 'loopback')</code> trust loopback addresses</li> <li><code>app.set('trust proxy', '10.0.0.1')</code> trust single IP</li> <li><code>app.set('trust proxy', '10.0.0.1/16')</code> trust subnet</li> <li><code>app.set('trust proxy', '10.0.0.1, 10.0.0.2')</code> trust list</li> <li><code>app.set('trust proxy', false)</code> turn off</li> <li><code>app.set('trust proxy', true)</code> trust everything</li> <li>set proper <code>charset</code> in <code>Content-Type</code> for <code>res.send</code></li> <li>update type-is to 1.2.0</li> <li>support suffix matching</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#420-2014-05-11","title":"4.2.0 / 2014-05-11","text":"<ul> <li>deprecate <code>app.del()</code> -- use <code>app.delete()</code> instead</li> <li>deprecate <code>res.json(obj, status)</code> -- use <code>res.json(status, obj)</code> instead</li> <li>the edge-case <code>res.json(status, num)</code> requires <code>res.status(status).json(num)</code></li> <li>deprecate <code>res.jsonp(obj, status)</code> -- use <code>res.jsonp(status, obj)</code> instead</li> <li>the edge-case <code>res.jsonp(status, num)</code> requires <code>res.status(status).jsonp(num)</code></li> <li>fix <code>req.next</code> when inside router instance</li> <li>include <code>ETag</code> header in <code>HEAD</code> requests</li> <li>keep previous <code>Content-Type</code> for <code>res.jsonp</code></li> <li>support PURGE method</li> <li>add <code>app.purge</code></li> <li>add <code>router.purge</code></li> <li>include PURGE in <code>app.all</code></li> <li>update debug to 0.8.0</li> <li>add <code>enable()</code> method</li> <li>change from stderr to stdout</li> <li>update methods to 1.0.0</li> <li>add PURGE</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#412-2014-05-08","title":"4.1.2 / 2014-05-08","text":"<ul> <li>fix <code>req.host</code> for IPv6 literals</li> <li>fix <code>res.jsonp</code> error if callback param is object</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#411-2014-04-27","title":"4.1.1 / 2014-04-27","text":"<ul> <li>fix package.json to reflect supported node version</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#410-2014-04-24","title":"4.1.0 / 2014-04-24","text":"<ul> <li>pass options from <code>res.sendfile</code> to <code>send</code></li> <li>preserve casing of headers in <code>res.header</code> and <code>res.set</code></li> <li>support unicode file names in <code>res.attachment</code> and <code>res.download</code></li> <li>update accepts to 1.0.1</li> <li>deps: negotiator@0.4.0</li> <li>update cookie to 0.1.2</li> <li>Fix for maxAge == 0</li> <li>made compat with expires field</li> <li>update send to 0.3.0</li> <li>Accept API options in options object</li> <li>Coerce option types</li> <li>Control whether to generate etags</li> <li>Default directory access to 403 when index disabled</li> <li>Fix sending files with dots without root set</li> <li>Include file path in etag</li> <li>Make \"Can't set headers after they are sent.\" catchable</li> <li>Send full entity-body for multi range requests</li> <li>Set etags to \"weak\"</li> <li>Support \"If-Range\" header</li> <li>Support multiple index paths</li> <li>deps: mime@1.2.11</li> <li>update serve-static to 1.1.0</li> <li>Accept options directly to <code>send</code> module</li> <li>Resolve relative paths at middleware setup</li> <li>Use parseurl to parse the URL from request</li> <li>deps: send@0.3.0</li> <li>update type-is to 1.1.0</li> <li>add non-array values support</li> <li>add <code>multipart</code> as a shorthand</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#400-2014-04-09","title":"4.0.0 / 2014-04-09","text":"<ul> <li>remove:</li> <li>node 0.8 support</li> <li>connect and connect's patches except for charset handling</li> <li>express(1) - moved to express-generator</li> <li><code>express.createServer()</code> - it has been deprecated for a long time. Use <code>express()</code></li> <li><code>app.configure</code> - use logic in your own app code</li> <li><code>app.router</code> - is removed</li> <li><code>req.auth</code> - use <code>basic-auth</code> instead</li> <li><code>req.accepted*</code> - use <code>req.accepts*()</code> instead</li> <li><code>res.location</code> - relative URL resolution is removed</li> <li><code>res.charset</code> - include the charset in the content type when using <code>res.set()</code></li> <li>all bundled middleware except <code>static</code></li> <li>change:</li> <li><code>app.route</code> -&gt; <code>app.mountpath</code> when mounting an express app in another express app</li> <li><code>json spaces</code> no longer enabled by default in development</li> <li><code>req.accepts*</code> -&gt; <code>req.accepts*s</code> - i.e. <code>req.acceptsEncoding</code> -&gt; <code>req.acceptsEncodings</code></li> <li><code>req.params</code> is now an object instead of an array</li> <li><code>res.locals</code> is no longer a function. It is a plain js object. Treat it as such.</li> <li><code>res.headerSent</code> -&gt; <code>res.headersSent</code> to match node.js ServerResponse object</li> <li>refactor:</li> <li><code>req.accepts*</code> with accepts</li> <li><code>req.is</code> with type-is</li> <li>path-to-regexp</li> <li>add:</li> <li><code>app.router()</code> - returns the app Router instance</li> <li><code>app.route()</code> - Proxy to the app's <code>Router#route()</code> method to create a new route</li> <li>Router &amp; Route - public API</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3212-2015-07-31","title":"3.21.2 / 2015-07-31","text":"<ul> <li>deps: connect@2.30.2<ul> <li>deps: body-parser@~1.13.3</li> <li>deps: compression@~1.5.2</li> <li>deps: errorhandler@~1.4.2</li> <li>deps: method-override@~2.3.5</li> <li>deps: serve-index@~1.7.2</li> <li>deps: type-is@~1.6.6</li> <li>deps: vhost@~3.0.1</li> </ul> </li> <li>deps: vary@~1.0.1<ul> <li>Fix setting empty header from empty <code>field</code></li> <li>perf: enable strict mode</li> <li>perf: remove argument reassignments</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3211-2015-07-05","title":"3.21.1 / 2015-07-05","text":"<ul> <li>deps: basic-auth@~1.0.3</li> <li>deps: connect@2.30.1<ul> <li>deps: body-parser@~1.13.2</li> <li>deps: compression@~1.5.1</li> <li>deps: errorhandler@~1.4.1</li> <li>deps: morgan@~1.6.1</li> <li>deps: pause@0.1.0</li> <li>deps: qs@4.0.0</li> <li>deps: serve-index@~1.7.1</li> <li>deps: type-is@~1.6.4</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3210-2015-06-18","title":"3.21.0 / 2015-06-18","text":"<ul> <li>deps: basic-auth@1.0.2<ul> <li>perf: enable strict mode</li> <li>perf: hoist regular expression</li> <li>perf: parse with regular expressions</li> <li>perf: remove argument reassignment</li> </ul> </li> <li>deps: connect@2.30.0<ul> <li>deps: body-parser@~1.13.1</li> <li>deps: bytes@2.1.0</li> <li>deps: compression@~1.5.0</li> <li>deps: cookie@0.1.3</li> <li>deps: cookie-parser@~1.3.5</li> <li>deps: csurf@~1.8.3</li> <li>deps: errorhandler@~1.4.0</li> <li>deps: express-session@~1.11.3</li> <li>deps: finalhandler@0.4.0</li> <li>deps: fresh@0.3.0</li> <li>deps: morgan@~1.6.0</li> <li>deps: serve-favicon@~2.3.0</li> <li>deps: serve-index@~1.7.0</li> <li>deps: serve-static@~1.10.0</li> <li>deps: type-is@~1.6.3</li> </ul> </li> <li>deps: cookie@0.1.3<ul> <li>perf: deduce the scope of try-catch deopt</li> <li>perf: remove argument reassignments</li> </ul> </li> <li>deps: escape-html@1.0.2</li> <li>deps: etag@~1.7.0<ul> <li>Always include entity length in ETags for hash length extensions</li> <li>Generate non-Stats ETags using MD5 only (no longer CRC32)</li> <li>Improve stat performance by removing hashing</li> <li>Improve support for JXcore</li> <li>Remove base64 padding in ETags to shorten</li> <li>Support \"fake\" stats objects in environments without fs</li> <li>Use MD5 instead of MD4 in weak ETags over 1KB</li> </ul> </li> <li>deps: fresh@0.3.0<ul> <li>Add weak <code>ETag</code> matching support</li> </ul> </li> <li>deps: mkdirp@0.5.1<ul> <li>Work in global strict mode</li> </ul> </li> <li>deps: send@0.13.0<ul> <li>Allow Node.js HTTP server to set <code>Date</code> response header</li> <li>Fix incorrectly removing <code>Content-Location</code> on 304 response</li> <li>Improve the default redirect response headers</li> <li>Send appropriate headers on default error response</li> <li>Use <code>http-errors</code> for standard emitted errors</li> <li>Use <code>statuses</code> instead of <code>http</code> module for status messages</li> <li>deps: escape-html@1.0.2</li> <li>deps: etag@~1.7.0</li> <li>deps: fresh@0.3.0</li> <li>deps: on-finished@~2.3.0</li> <li>perf: enable strict mode</li> <li>perf: remove unnecessary array allocations</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3203-2015-05-17","title":"3.20.3 / 2015-05-17","text":"<ul> <li>deps: connect@2.29.2<ul> <li>deps: body-parser@~1.12.4</li> <li>deps: compression@~1.4.4</li> <li>deps: connect-timeout@~1.6.2</li> <li>deps: debug@~2.2.0</li> <li>deps: depd@~1.0.1</li> <li>deps: errorhandler@~1.3.6</li> <li>deps: finalhandler@0.3.6</li> <li>deps: method-override@~2.3.3</li> <li>deps: morgan@~1.5.3</li> <li>deps: qs@2.4.2</li> <li>deps: response-time@~2.3.1</li> <li>deps: serve-favicon@~2.2.1</li> <li>deps: serve-index@~1.6.4</li> <li>deps: serve-static@~1.9.3</li> <li>deps: type-is@~1.6.2</li> </ul> </li> <li>deps: debug@~2.2.0<ul> <li>deps: ms@0.7.1</li> </ul> </li> <li>deps: depd@~1.0.1</li> <li>deps: proxy-addr@~1.0.8<ul> <li>deps: ipaddr.js@1.0.1</li> </ul> </li> <li>deps: send@0.12.3<ul> <li>deps: debug@~2.2.0</li> <li>deps: depd@~1.0.1</li> <li>deps: etag@~1.6.0</li> <li>deps: ms@0.7.1</li> <li>deps: on-finished@~2.2.1</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3202-2015-03-16","title":"3.20.2 / 2015-03-16","text":"<ul> <li>deps: connect@2.29.1<ul> <li>deps: body-parser@~1.12.2</li> <li>deps: compression@~1.4.3</li> <li>deps: connect-timeout@~1.6.1</li> <li>deps: debug@~2.1.3</li> <li>deps: errorhandler@~1.3.5</li> <li>deps: express-session@~1.10.4</li> <li>deps: finalhandler@0.3.4</li> <li>deps: method-override@~2.3.2</li> <li>deps: morgan@~1.5.2</li> <li>deps: qs@2.4.1</li> <li>deps: serve-index@~1.6.3</li> <li>deps: serve-static@~1.9.2</li> <li>deps: type-is@~1.6.1</li> </ul> </li> <li>deps: debug@~2.1.3<ul> <li>Fix high intensity foreground color for bold</li> <li>deps: ms@0.7.0</li> </ul> </li> <li>deps: merge-descriptors@1.0.0</li> <li>deps: proxy-addr@~1.0.7<ul> <li>deps: ipaddr.js@0.1.9</li> </ul> </li> <li>deps: send@0.12.2<ul> <li>Throw errors early for invalid <code>extensions</code> or <code>index</code> options</li> <li>deps: debug@~2.1.3</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3201-2015-02-28","title":"3.20.1 / 2015-02-28","text":"<ul> <li>Fix <code>req.host</code> when using \"trust proxy\" hops count</li> <li>Fix <code>req.protocol</code>/<code>req.secure</code> when using \"trust proxy\" hops count</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3200-2015-02-18","title":"3.20.0 / 2015-02-18","text":"<ul> <li>Fix <code>\"trust proxy\"</code> setting to inherit when app is mounted</li> <li>Generate <code>ETag</code>s for all request responses<ul> <li>No longer restricted to only responses for <code>GET</code> and <code>HEAD</code> requests</li> </ul> </li> <li>Use <code>content-type</code> to parse <code>Content-Type</code> headers</li> <li>deps: connect@2.29.0<ul> <li>Use <code>content-type</code> to parse <code>Content-Type</code> headers</li> <li>deps: body-parser@~1.12.0</li> <li>deps: compression@~1.4.1</li> <li>deps: connect-timeout@~1.6.0</li> <li>deps: cookie-parser@~1.3.4</li> <li>deps: cookie-signature@1.0.6</li> <li>deps: csurf@~1.7.0</li> <li>deps: errorhandler@~1.3.4</li> <li>deps: express-session@~1.10.3</li> <li>deps: http-errors@~1.3.1</li> <li>deps: response-time@~2.3.0</li> <li>deps: serve-index@~1.6.2</li> <li>deps: serve-static@~1.9.1</li> <li>deps: type-is@~1.6.0</li> </ul> </li> <li>deps: cookie-signature@1.0.6</li> <li>deps: send@0.12.1<ul> <li>Always read the stat size from the file</li> <li>Fix mutating passed-in <code>options</code></li> <li>deps: mime@1.3.4</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3192-2015-02-01","title":"3.19.2 / 2015-02-01","text":"<ul> <li>deps: connect@2.28.3<ul> <li>deps: compression@~1.3.1</li> <li>deps: csurf@~1.6.6</li> <li>deps: errorhandler@~1.3.3</li> <li>deps: express-session@~1.10.2</li> <li>deps: serve-index@~1.6.1</li> <li>deps: type-is@~1.5.6</li> </ul> </li> <li>deps: proxy-addr@~1.0.6<ul> <li>deps: ipaddr.js@0.1.8</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3191-2015-01-20","title":"3.19.1 / 2015-01-20","text":"<ul> <li>deps: connect@2.28.2<ul> <li>deps: body-parser@~1.10.2</li> <li>deps: serve-static@~1.8.1</li> </ul> </li> <li>deps: send@0.11.1<ul> <li>Fix root path disclosure</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3190-2015-01-09","title":"3.19.0 / 2015-01-09","text":"<ul> <li>Fix <code>OPTIONS</code> responses to include the <code>HEAD</code> method property</li> <li>Use <code>readline</code> for prompt in <code>express(1)</code></li> <li>deps: commander@2.6.0</li> <li>deps: connect@2.28.1<ul> <li>deps: body-parser@~1.10.1</li> <li>deps: compression@~1.3.0</li> <li>deps: connect-timeout@~1.5.0</li> <li>deps: csurf@~1.6.4</li> <li>deps: debug@~2.1.1</li> <li>deps: errorhandler@~1.3.2</li> <li>deps: express-session@~1.10.1</li> <li>deps: finalhandler@0.3.3</li> <li>deps: method-override@~2.3.1</li> <li>deps: morgan@~1.5.1</li> <li>deps: serve-favicon@~2.2.0</li> <li>deps: serve-index@~1.6.0</li> <li>deps: serve-static@~1.8.0</li> <li>deps: type-is@~1.5.5</li> </ul> </li> <li>deps: debug@~2.1.1</li> <li>deps: methods@~1.1.1</li> <li>deps: proxy-addr@~1.0.5<ul> <li>deps: ipaddr.js@0.1.6</li> </ul> </li> <li>deps: send@0.11.0<ul> <li>deps: debug@~2.1.1</li> <li>deps: etag@~1.5.1</li> <li>deps: ms@0.7.0</li> <li>deps: on-finished@~2.2.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3186-2014-12-12","title":"3.18.6 / 2014-12-12","text":"<ul> <li>Fix exception in <code>req.fresh</code>/<code>req.stale</code> without response headers</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3185-2014-12-11","title":"3.18.5 / 2014-12-11","text":"<ul> <li>deps: connect@2.27.6<ul> <li>deps: compression@~1.2.2</li> <li>deps: express-session@~1.9.3</li> <li>deps: http-errors@~1.2.8</li> <li>deps: serve-index@~1.5.3</li> <li>deps: type-is@~1.5.4</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3184-2014-11-23","title":"3.18.4 / 2014-11-23","text":"<ul> <li>deps: connect@2.27.4<ul> <li>deps: body-parser@~1.9.3</li> <li>deps: compression@~1.2.1</li> <li>deps: errorhandler@~1.2.3</li> <li>deps: express-session@~1.9.2</li> <li>deps: qs@2.3.3</li> <li>deps: serve-favicon@~2.1.7</li> <li>deps: serve-static@~1.5.1</li> <li>deps: type-is@~1.5.3</li> </ul> </li> <li>deps: etag@~1.5.1</li> <li>deps: proxy-addr@~1.0.4<ul> <li>deps: ipaddr.js@0.1.5</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3183-2014-11-09","title":"3.18.3 / 2014-11-09","text":"<ul> <li>deps: connect@2.27.3<ul> <li>Correctly invoke async callback asynchronously</li> <li>deps: csurf@~1.6.3</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3182-2014-10-28","title":"3.18.2 / 2014-10-28","text":"<ul> <li>deps: connect@2.27.2<ul> <li>Fix handling of URLs containing <code>://</code> in the path</li> <li>deps: body-parser@~1.9.2</li> <li>deps: qs@2.3.2</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3181-2014-10-22","title":"3.18.1 / 2014-10-22","text":"<ul> <li>Fix internal <code>utils.merge</code> deprecation warnings</li> <li>deps: connect@2.27.1<ul> <li>deps: body-parser@~1.9.1</li> <li>deps: express-session@~1.9.1</li> <li>deps: finalhandler@0.3.2</li> <li>deps: morgan@~1.4.1</li> <li>deps: qs@2.3.0</li> <li>deps: serve-static@~1.7.1</li> </ul> </li> <li>deps: send@0.10.1<ul> <li>deps: on-finished@~2.1.1</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3180-2014-10-17","title":"3.18.0 / 2014-10-17","text":"<ul> <li>Use <code>content-disposition</code> module for <code>res.attachment</code>/<code>res.download</code><ul> <li>Sends standards-compliant <code>Content-Disposition</code> header</li> <li>Full Unicode support</li> </ul> </li> <li>Use <code>etag</code> module to generate <code>ETag</code> headers</li> <li>deps: connect@2.27.0<ul> <li>Use <code>http-errors</code> module for creating errors</li> <li>Use <code>utils-merge</code> module for merging objects</li> <li>deps: body-parser@~1.9.0</li> <li>deps: compression@~1.2.0</li> <li>deps: connect-timeout@~1.4.0</li> <li>deps: debug@~2.1.0</li> <li>deps: depd@~1.0.0</li> <li>deps: express-session@~1.9.0</li> <li>deps: finalhandler@0.3.1</li> <li>deps: method-override@~2.3.0</li> <li>deps: morgan@~1.4.0</li> <li>deps: response-time@~2.2.0</li> <li>deps: serve-favicon@~2.1.6</li> <li>deps: serve-index@~1.5.0</li> <li>deps: serve-static@~1.7.0</li> </ul> </li> <li>deps: debug@~2.1.0<ul> <li>Implement <code>DEBUG_FD</code> env variable support</li> </ul> </li> <li>deps: depd@~1.0.0</li> <li>deps: send@0.10.0<ul> <li>deps: debug@~2.1.0</li> <li>deps: depd@~1.0.0</li> <li>deps: etag@~1.5.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3178-2014-10-15","title":"3.17.8 / 2014-10-15","text":"<ul> <li>deps: connect@2.26.6<ul> <li>deps: compression@~1.1.2</li> <li>deps: csurf@~1.6.2</li> <li>deps: errorhandler@~1.2.2</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3177-2014-10-08","title":"3.17.7 / 2014-10-08","text":"<ul> <li>deps: connect@2.26.5<ul> <li>Fix accepting non-object arguments to <code>logger</code></li> <li>deps: serve-static@~1.6.4</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3176-2014-10-02","title":"3.17.6 / 2014-10-02","text":"<ul> <li>deps: connect@2.26.4<ul> <li>deps: morgan@~1.3.2</li> <li>deps: type-is@~1.5.2</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3175-2014-09-24","title":"3.17.5 / 2014-09-24","text":"<ul> <li>deps: connect@2.26.3<ul> <li>deps: body-parser@~1.8.4</li> <li>deps: serve-favicon@~2.1.5</li> <li>deps: serve-static@~1.6.3</li> </ul> </li> <li>deps: proxy-addr@~1.0.3<ul> <li>Use <code>forwarded</code> npm module</li> </ul> </li> <li>deps: send@0.9.3<ul> <li>deps: etag@~1.4.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3174-2014-09-19","title":"3.17.4 / 2014-09-19","text":"<ul> <li>deps: connect@2.26.2<ul> <li>deps: body-parser@~1.8.3</li> <li>deps: qs@2.2.4</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3173-2014-09-18","title":"3.17.3 / 2014-09-18","text":"<ul> <li>deps: proxy-addr@~1.0.2<ul> <li>Fix a global leak when multiple subnets are trusted</li> <li>deps: ipaddr.js@0.1.3</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3172-2014-09-15","title":"3.17.2 / 2014-09-15","text":"<ul> <li>Use <code>crc</code> instead of <code>buffer-crc32</code> for speed</li> <li>deps: connect@2.26.1<ul> <li>deps: body-parser@~1.8.2</li> <li>deps: depd@0.4.5</li> <li>deps: express-session@~1.8.2</li> <li>deps: morgan@~1.3.1</li> <li>deps: serve-favicon@~2.1.3</li> <li>deps: serve-static@~1.6.2</li> </ul> </li> <li>deps: depd@0.4.5</li> <li>deps: send@0.9.2<ul> <li>deps: depd@0.4.5</li> <li>deps: etag@~1.3.1</li> <li>deps: range-parser@~1.0.2</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3171-2014-09-08","title":"3.17.1 / 2014-09-08","text":"<ul> <li>Fix error in <code>req.subdomains</code> on empty host</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3170-2014-09-08","title":"3.17.0 / 2014-09-08","text":"<ul> <li>Support <code>X-Forwarded-Host</code> in <code>req.subdomains</code></li> <li>Support IP address host in <code>req.subdomains</code></li> <li>deps: connect@2.26.0<ul> <li>deps: body-parser@~1.8.1</li> <li>deps: compression@~1.1.0</li> <li>deps: connect-timeout@~1.3.0</li> <li>deps: cookie-parser@~1.3.3</li> <li>deps: cookie-signature@1.0.5</li> <li>deps: csurf@~1.6.1</li> <li>deps: debug@~2.0.0</li> <li>deps: errorhandler@~1.2.0</li> <li>deps: express-session@~1.8.1</li> <li>deps: finalhandler@0.2.0</li> <li>deps: fresh@0.2.4</li> <li>deps: media-typer@0.3.0</li> <li>deps: method-override@~2.2.0</li> <li>deps: morgan@~1.3.0</li> <li>deps: qs@2.2.3</li> <li>deps: serve-favicon@~2.1.3</li> <li>deps: serve-index@~1.2.1</li> <li>deps: serve-static@~1.6.1</li> <li>deps: type-is@~1.5.1</li> <li>deps: vhost@~3.0.0</li> </ul> </li> <li>deps: cookie-signature@1.0.5</li> <li>deps: debug@~2.0.0</li> <li>deps: fresh@0.2.4</li> <li>deps: media-typer@0.3.0<ul> <li>Throw error when parameter format invalid on parse</li> </ul> </li> <li>deps: range-parser@~1.0.2</li> <li>deps: send@0.9.1<ul> <li>Add <code>lastModified</code> option</li> <li>Use <code>etag</code> to generate <code>ETag</code> header</li> <li>deps: debug@~2.0.0</li> <li>deps: fresh@0.2.4</li> </ul> </li> <li>deps: vary@~1.0.0<ul> <li>Accept valid <code>Vary</code> header string as <code>field</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#31610-2014-09-04","title":"3.16.10 / 2014-09-04","text":"<ul> <li>deps: connect@2.25.10<ul> <li>deps: serve-static@~1.5.4</li> </ul> </li> <li>deps: send@0.8.5<ul> <li>Fix a path traversal issue when using <code>root</code></li> <li>Fix malicious path detection for empty string path</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3169-2014-08-29","title":"3.16.9 / 2014-08-29","text":"<ul> <li>deps: connect@2.25.9<ul> <li>deps: body-parser@~1.6.7</li> <li>deps: qs@2.2.2</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3168-2014-08-27","title":"3.16.8 / 2014-08-27","text":"<ul> <li>deps: connect@2.25.8<ul> <li>deps: body-parser@~1.6.6</li> <li>deps: csurf@~1.4.1</li> <li>deps: qs@2.2.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3167-2014-08-18","title":"3.16.7 / 2014-08-18","text":"<ul> <li>deps: connect@2.25.7<ul> <li>deps: body-parser@~1.6.5</li> <li>deps: express-session@~1.7.6</li> <li>deps: morgan@~1.2.3</li> <li>deps: serve-static@~1.5.3</li> </ul> </li> <li>deps: send@0.8.3<ul> <li>deps: destroy@1.0.3</li> <li>deps: on-finished@2.1.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3166-2014-08-14","title":"3.16.6 / 2014-08-14","text":"<ul> <li>deps: connect@2.25.6<ul> <li>deps: body-parser@~1.6.4</li> <li>deps: qs@1.2.2</li> <li>deps: serve-static@~1.5.2</li> </ul> </li> <li>deps: send@0.8.2<ul> <li>Work around <code>fd</code> leak in Node.js 0.10 for <code>fs.ReadStream</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3165-2014-08-11","title":"3.16.5 / 2014-08-11","text":"<ul> <li>deps: connect@2.25.5<ul> <li>Fix backwards compatibility in <code>logger</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3164-2014-08-10","title":"3.16.4 / 2014-08-10","text":"<ul> <li>Fix original URL parsing in <code>res.location</code></li> <li>deps: connect@2.25.4<ul> <li>Fix <code>query</code> middleware breaking with argument</li> <li>deps: body-parser@~1.6.3</li> <li>deps: compression@~1.0.11</li> <li>deps: connect-timeout@~1.2.2</li> <li>deps: express-session@~1.7.5</li> <li>deps: method-override@~2.1.3</li> <li>deps: on-headers@~1.0.0</li> <li>deps: parseurl@~1.3.0</li> <li>deps: qs@1.2.1</li> <li>deps: response-time@~2.0.1</li> <li>deps: serve-index@~1.1.6</li> <li>deps: serve-static@~1.5.1</li> </ul> </li> <li>deps: parseurl@~1.3.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3163-2014-08-07","title":"3.16.3 / 2014-08-07","text":"<ul> <li>deps: connect@2.25.3<ul> <li>deps: multiparty@3.3.2</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3162-2014-08-07","title":"3.16.2 / 2014-08-07","text":"<ul> <li>deps: connect@2.25.2<ul> <li>deps: body-parser@~1.6.2</li> <li>deps: qs@1.2.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3161-2014-08-06","title":"3.16.1 / 2014-08-06","text":"<ul> <li>deps: connect@2.25.1<ul> <li>deps: body-parser@~1.6.1</li> <li>deps: qs@1.1.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3160-2014-08-05","title":"3.16.0 / 2014-08-05","text":"<ul> <li>deps: connect@2.25.0<ul> <li>deps: body-parser@~1.6.0</li> <li>deps: compression@~1.0.10</li> <li>deps: csurf@~1.4.0</li> <li>deps: express-session@~1.7.4</li> <li>deps: qs@1.0.2</li> <li>deps: serve-static@~1.5.0</li> </ul> </li> <li>deps: send@0.8.1<ul> <li>Add <code>extensions</code> option</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3153-2014-08-04","title":"3.15.3 / 2014-08-04","text":"<ul> <li>fix <code>res.sendfile</code> regression for serving directory index files</li> <li>deps: connect@2.24.3<ul> <li>deps: serve-index@~1.1.5</li> <li>deps: serve-static@~1.4.4</li> </ul> </li> <li>deps: send@0.7.4<ul> <li>Fix incorrect 403 on Windows and Node.js 0.11</li> <li>Fix serving index files without root dir</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3152-2014-07-27","title":"3.15.2 / 2014-07-27","text":"<ul> <li>deps: connect@2.24.2<ul> <li>deps: body-parser@~1.5.2</li> <li>deps: depd@0.4.4</li> <li>deps: express-session@~1.7.2</li> <li>deps: morgan@~1.2.2</li> <li>deps: serve-static@~1.4.2</li> </ul> </li> <li>deps: depd@0.4.4<ul> <li>Work-around v8 generating empty stack traces</li> </ul> </li> <li>deps: send@0.7.2<ul> <li>deps: depd@0.4.4</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3151-2014-07-26","title":"3.15.1 / 2014-07-26","text":"<ul> <li>deps: connect@2.24.1<ul> <li>deps: body-parser@~1.5.1</li> <li>deps: depd@0.4.3</li> <li>deps: express-session@~1.7.1</li> <li>deps: morgan@~1.2.1</li> <li>deps: serve-index@~1.1.4</li> <li>deps: serve-static@~1.4.1</li> </ul> </li> <li>deps: depd@0.4.3<ul> <li>Fix exception when global <code>Error.stackTraceLimit</code> is too low</li> </ul> </li> <li>deps: send@0.7.1<ul> <li>deps: depd@0.4.3</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3150-2014-07-22","title":"3.15.0 / 2014-07-22","text":"<ul> <li>Fix <code>req.protocol</code> for proxy-direct connections</li> <li>Pass options from <code>res.sendfile</code> to <code>send</code></li> <li>deps: connect@2.24.0<ul> <li>deps: body-parser@~1.5.0</li> <li>deps: compression@~1.0.9</li> <li>deps: connect-timeout@~1.2.1</li> <li>deps: debug@1.0.4</li> <li>deps: depd@0.4.2</li> <li>deps: express-session@~1.7.0</li> <li>deps: finalhandler@0.1.0</li> <li>deps: method-override@~2.1.2</li> <li>deps: morgan@~1.2.0</li> <li>deps: multiparty@3.3.1</li> <li>deps: parseurl@~1.2.0</li> <li>deps: serve-static@~1.4.0</li> </ul> </li> <li>deps: debug@1.0.4</li> <li>deps: depd@0.4.2<ul> <li>Add <code>TRACE_DEPRECATION</code> environment variable</li> <li>Remove non-standard grey color from color output</li> <li>Support <code>--no-deprecation</code> argument</li> <li>Support <code>--trace-deprecation</code> argument</li> </ul> </li> <li>deps: parseurl@~1.2.0<ul> <li>Cache URLs based on original value</li> <li>Remove no-longer-needed URL mis-parse work-around</li> <li>Simplify the \"fast-path\" <code>RegExp</code></li> </ul> </li> <li>deps: send@0.7.0<ul> <li>Add <code>dotfiles</code> option</li> <li>Cap <code>maxAge</code> value to 1 year</li> <li>deps: debug@1.0.4</li> <li>deps: depd@0.4.2</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3140-2014-07-11","title":"3.14.0 / 2014-07-11","text":"<ul> <li>add explicit \"Rosetta Flash JSONP abuse\" protection</li> <li>previous versions are not vulnerable; this is just explicit protection</li> <li>deprecate <code>res.redirect(url, status)</code> -- use <code>res.redirect(status, url)</code> instead</li> <li>fix <code>res.send(status, num)</code> to send <code>num</code> as json (not error)</li> <li>remove unnecessary escaping when <code>res.jsonp</code> returns JSON response</li> <li>deps: basic-auth@1.0.0</li> <li>support empty password</li> <li>support empty username</li> <li>deps: connect@2.23.0</li> <li>deps: debug@1.0.3</li> <li>deps: express-session@~1.6.4</li> <li>deps: method-override@~2.1.0</li> <li>deps: parseurl@~1.1.3</li> <li>deps: serve-static@~1.3.1</li> <li>deps: debug@1.0.3<ul> <li>Add support for multiple wildcards in namespaces</li> </ul> </li> <li>deps: methods@1.1.0<ul> <li>add <code>CONNECT</code></li> </ul> </li> <li>deps: parseurl@~1.1.3<ul> <li>faster parsing of href-only URLs</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3130-2014-07-03","title":"3.13.0 / 2014-07-03","text":"<ul> <li>add deprecation message to <code>app.configure</code></li> <li>add deprecation message to <code>req.auth</code></li> <li>use <code>basic-auth</code> to parse <code>Authorization</code> header</li> <li>deps: connect@2.22.0</li> <li>deps: csurf@~1.3.0</li> <li>deps: express-session@~1.6.1</li> <li>deps: multiparty@3.3.0</li> <li>deps: serve-static@~1.3.0</li> <li>deps: send@0.5.0</li> <li>Accept string for <code>maxage</code> (converted by <code>ms</code>)</li> <li>Include link in default redirect response</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3121-2014-06-26","title":"3.12.1 / 2014-06-26","text":"<ul> <li>deps: connect@2.21.1</li> <li>deps: cookie-parser@1.3.2</li> <li>deps: cookie-signature@1.0.4</li> <li>deps: express-session@~1.5.2</li> <li>deps: type-is@~1.3.2</li> <li>deps: cookie-signature@1.0.4</li> <li>fix for timing attacks</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3120-2014-06-21","title":"3.12.0 / 2014-06-21","text":"<ul> <li>use <code>media-typer</code> to alter content-type charset</li> <li>deps: connect@2.21.0</li> <li>deprecate <code>connect(middleware)</code> -- use <code>app.use(middleware)</code> instead</li> <li>deprecate <code>connect.createServer()</code> -- use <code>connect()</code> instead</li> <li>fix <code>res.setHeader()</code> patch to work with get -&gt; append -&gt; set pattern</li> <li>deps: compression@~1.0.8</li> <li>deps: errorhandler@~1.1.1</li> <li>deps: express-session@~1.5.0</li> <li>deps: serve-index@~1.1.3</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3110-2014-06-19","title":"3.11.0 / 2014-06-19","text":"<ul> <li>deprecate things with <code>depd</code> module</li> <li>deps: buffer-crc32@0.2.3</li> <li>deps: connect@2.20.2</li> <li>deprecate <code>verify</code> option to <code>json</code> -- use <code>body-parser</code> npm module instead</li> <li>deprecate <code>verify</code> option to <code>urlencoded</code> -- use <code>body-parser</code> npm module instead</li> <li>deprecate things with <code>depd</code> module</li> <li>use <code>finalhandler</code> for final response handling</li> <li>use <code>media-typer</code> to parse <code>content-type</code> for charset</li> <li>deps: body-parser@1.4.3</li> <li>deps: connect-timeout@1.1.1</li> <li>deps: cookie-parser@1.3.1</li> <li>deps: csurf@1.2.2</li> <li>deps: errorhandler@1.1.0</li> <li>deps: express-session@1.4.0</li> <li>deps: multiparty@3.2.9</li> <li>deps: serve-index@1.1.2</li> <li>deps: type-is@1.3.1</li> <li>deps: vhost@2.0.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3105-2014-06-11","title":"3.10.5 / 2014-06-11","text":"<ul> <li>deps: connect@2.19.6</li> <li>deps: body-parser@1.3.1</li> <li>deps: compression@1.0.7</li> <li>deps: debug@1.0.2</li> <li>deps: serve-index@1.1.1</li> <li>deps: serve-static@1.2.3</li> <li>deps: debug@1.0.2</li> <li>deps: send@0.4.3</li> <li>Do not throw uncatchable error on file open race condition</li> <li>Use <code>escape-html</code> for HTML escaping</li> <li>deps: debug@1.0.2</li> <li>deps: finished@1.2.2</li> <li>deps: fresh@0.2.2</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3104-2014-06-09","title":"3.10.4 / 2014-06-09","text":"<ul> <li>deps: connect@2.19.5</li> <li>fix \"event emitter leak\" warnings</li> <li>deps: csurf@1.2.1</li> <li>deps: debug@1.0.1</li> <li>deps: serve-static@1.2.2</li> <li>deps: type-is@1.2.1</li> <li>deps: debug@1.0.1</li> <li>deps: send@0.4.2</li> <li>fix \"event emitter leak\" warnings</li> <li>deps: finished@1.2.1</li> <li>deps: debug@1.0.1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3103-2014-06-05","title":"3.10.3 / 2014-06-05","text":"<ul> <li>use <code>vary</code> module for <code>res.vary</code></li> <li>deps: connect@2.19.4</li> <li>deps: errorhandler@1.0.2</li> <li>deps: method-override@2.0.2</li> <li>deps: serve-favicon@2.0.1</li> <li>deps: debug@1.0.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3102-2014-06-03","title":"3.10.2 / 2014-06-03","text":"<ul> <li>deps: connect@2.19.3</li> <li>deps: compression@1.0.6</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3101-2014-06-03","title":"3.10.1 / 2014-06-03","text":"<ul> <li>deps: connect@2.19.2</li> <li>deps: compression@1.0.4</li> <li>deps: proxy-addr@1.0.1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#3100-2014-06-02","title":"3.10.0 / 2014-06-02","text":"<ul> <li>deps: connect@2.19.1</li> <li>deprecate <code>methodOverride()</code> -- use <code>method-override</code> npm module instead</li> <li>deps: body-parser@1.3.0</li> <li>deps: method-override@2.0.1</li> <li>deps: multiparty@3.2.8</li> <li>deps: response-time@2.0.0</li> <li>deps: serve-static@1.2.1</li> <li>deps: methods@1.0.1</li> <li>deps: send@0.4.1</li> <li>Send <code>max-age</code> in <code>Cache-Control</code> in correct format</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#390-2014-05-30","title":"3.9.0 / 2014-05-30","text":"<ul> <li>custom etag control with <code>app.set('etag', val)</code></li> <li><code>app.set('etag', function(body, encoding){ return '\"etag\"' })</code> custom etag generation</li> <li><code>app.set('etag', 'weak')</code> weak tag</li> <li><code>app.set('etag', 'strong')</code> strong etag</li> <li><code>app.set('etag', false)</code> turn off</li> <li><code>app.set('etag', true)</code> standard etag</li> <li>Include ETag in HEAD requests</li> <li>mark <code>res.send</code> ETag as weak and reduce collisions</li> <li>update connect to 2.18.0</li> <li>deps: compression@1.0.3</li> <li>deps: serve-index@1.1.0</li> <li>deps: serve-static@1.2.0</li> <li>update send to 0.4.0</li> <li>Calculate ETag with md5 for reduced collisions</li> <li>Ignore stream errors after request ends</li> <li>deps: debug@0.8.1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#381-2014-05-27","title":"3.8.1 / 2014-05-27","text":"<ul> <li>update connect to 2.17.3</li> <li>deps: body-parser@1.2.2</li> <li>deps: express-session@1.2.1</li> <li>deps: method-override@1.0.2</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#380-2014-05-21","title":"3.8.0 / 2014-05-21","text":"<ul> <li>keep previous <code>Content-Type</code> for <code>res.jsonp</code></li> <li>set proper <code>charset</code> in <code>Content-Type</code> for <code>res.send</code></li> <li>update connect to 2.17.1</li> <li>fix <code>res.charset</code> appending charset when <code>content-type</code> has one</li> <li>deps: express-session@1.2.0</li> <li>deps: morgan@1.1.1</li> <li>deps: serve-index@1.0.3</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#370-2014-05-18","title":"3.7.0 / 2014-05-18","text":"<ul> <li>proper proxy trust with <code>app.set('trust proxy', trust)</code></li> <li><code>app.set('trust proxy', 1)</code> trust first hop</li> <li><code>app.set('trust proxy', 'loopback')</code> trust loopback addresses</li> <li><code>app.set('trust proxy', '10.0.0.1')</code> trust single IP</li> <li><code>app.set('trust proxy', '10.0.0.1/16')</code> trust subnet</li> <li><code>app.set('trust proxy', '10.0.0.1, 10.0.0.2')</code> trust list</li> <li><code>app.set('trust proxy', false)</code> turn off</li> <li><code>app.set('trust proxy', true)</code> trust everything</li> <li>update connect to 2.16.2</li> <li>deprecate <code>res.headerSent</code> -- use <code>res.headersSent</code></li> <li>deprecate <code>res.on(\"header\")</code> -- use on-headers module instead</li> <li>fix edge-case in <code>res.appendHeader</code> that would append in wrong order</li> <li>json: use body-parser</li> <li>urlencoded: use body-parser</li> <li>dep: bytes@1.0.0</li> <li>dep: cookie-parser@1.1.0</li> <li>dep: csurf@1.2.0</li> <li>dep: express-session@1.1.0</li> <li>dep: method-override@1.0.1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#360-2014-05-09","title":"3.6.0 / 2014-05-09","text":"<ul> <li>deprecate <code>app.del()</code> -- use <code>app.delete()</code> instead</li> <li>deprecate <code>res.json(obj, status)</code> -- use <code>res.json(status, obj)</code> instead</li> <li>the edge-case <code>res.json(status, num)</code> requires <code>res.status(status).json(num)</code></li> <li>deprecate <code>res.jsonp(obj, status)</code> -- use <code>res.jsonp(status, obj)</code> instead</li> <li>the edge-case <code>res.jsonp(status, num)</code> requires <code>res.status(status).jsonp(num)</code></li> <li>support PURGE method</li> <li>add <code>app.purge</code></li> <li>add <code>router.purge</code></li> <li>include PURGE in <code>app.all</code></li> <li>update connect to 2.15.0</li> <li>Add <code>res.appendHeader</code></li> <li>Call error stack even when response has been sent</li> <li>Patch <code>res.headerSent</code> to return Boolean</li> <li>Patch <code>res.headersSent</code> for node.js 0.8</li> <li>Prevent default 404 handler after response sent</li> <li>dep: compression@1.0.2</li> <li>dep: connect-timeout@1.1.0</li> <li>dep: debug@^0.8.0</li> <li>dep: errorhandler@1.0.1</li> <li>dep: express-session@1.0.4</li> <li>dep: morgan@1.0.1</li> <li>dep: serve-favicon@2.0.0</li> <li>dep: serve-index@1.0.2</li> <li>update debug to 0.8.0</li> <li>add <code>enable()</code> method</li> <li>change from stderr to stdout</li> <li>update methods to 1.0.0</li> <li>add PURGE</li> <li>update mkdirp to 0.5.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#353-2014-05-08","title":"3.5.3 / 2014-05-08","text":"<ul> <li>fix <code>req.host</code> for IPv6 literals</li> <li>fix <code>res.jsonp</code> error if callback param is object</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#352-2014-04-24","title":"3.5.2 / 2014-04-24","text":"<ul> <li>update connect to 2.14.5</li> <li>update cookie to 0.1.2</li> <li>update mkdirp to 0.4.0</li> <li>update send to 0.3.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#351-2014-03-25","title":"3.5.1 / 2014-03-25","text":"<ul> <li>pin less-middleware in generated app</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#350-2014-03-06","title":"3.5.0 / 2014-03-06","text":"<ul> <li>bump deps</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#348-2014-01-13","title":"3.4.8 / 2014-01-13","text":"<ul> <li>prevent incorrect automatic OPTIONS responses #1868 @dpatti</li> <li>update binary and examples for jade 1.0 #1876 @yossi, #1877 @reqshark, #1892 @matheusazzi</li> <li>throw 400 in case of malformed paths @rlidwka</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#347-2013-12-10","title":"3.4.7 / 2013-12-10","text":"<ul> <li>update connect</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#346-2013-12-01","title":"3.4.6 / 2013-12-01","text":"<ul> <li>update connect (raw-body)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#345-2013-11-27","title":"3.4.5 / 2013-11-27","text":"<ul> <li>update connect</li> <li>res.location: remove leading ./ #1802 @kapouer</li> <li>res.redirect: fix `res.redirect('toString') #1829 @michaelficarra</li> <li>res.send: always send ETag when content-length &gt; 0</li> <li>router: add Router.all() method</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#344-2013-10-29","title":"3.4.4 / 2013-10-29","text":"<ul> <li>update connect</li> <li>update supertest</li> <li>update methods</li> <li>express(1): replace bodyParser() with urlencoded() and json() #1795 @chirag04</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#343-2013-10-23","title":"3.4.3 / 2013-10-23","text":"<ul> <li>update connect</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#342-2013-10-18","title":"3.4.2 / 2013-10-18","text":"<ul> <li>update connect</li> <li>downgrade commander</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#341-2013-10-15","title":"3.4.1 / 2013-10-15","text":"<ul> <li>update connect</li> <li>update commander</li> <li>jsonp: check if callback is a function</li> <li>router: wrap encodeURIComponent in a try/catch #1735 (@lxe)</li> <li>res.format: now includes charset @1747 (@sorribas)</li> <li>res.links: allow multiple calls @1746 (@sorribas)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#340-2013-09-07","title":"3.4.0 / 2013-09-07","text":"<ul> <li>add res.vary(). Closes #1682</li> <li>update connect</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#338-2013-09-02","title":"3.3.8 / 2013-09-02","text":"<ul> <li>update connect</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#337-2013-08-28","title":"3.3.7 / 2013-08-28","text":"<ul> <li>update connect</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#336-2013-08-27","title":"3.3.6 / 2013-08-27","text":"<ul> <li>Revert \"remove charset from json responses. Closes #1631\" (causes issues in some clients)</li> <li>add: req.accepts take an argument list</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#334-2013-07-08","title":"3.3.4 / 2013-07-08","text":"<ul> <li>update send and connect</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#333-2013-07-04","title":"3.3.3 / 2013-07-04","text":"<ul> <li>update connect</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#332-2013-07-03","title":"3.3.2 / 2013-07-03","text":"<ul> <li>update connect</li> <li>update send</li> <li>remove .version export</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#331-2013-06-27","title":"3.3.1 / 2013-06-27","text":"<ul> <li>update connect</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#330-2013-06-26","title":"3.3.0 / 2013-06-26","text":"<ul> <li>update connect</li> <li>add support for multiple X-Forwarded-Proto values. Closes #1646</li> <li>change: remove charset from json responses. Closes #1631</li> <li>change: return actual booleans from req.accept* functions</li> <li>fix jsonp callback array throw</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#326-2013-06-02","title":"3.2.6 / 2013-06-02","text":"<ul> <li>update connect</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#325-2013-05-21","title":"3.2.5 / 2013-05-21","text":"<ul> <li>update connect</li> <li>update node-cookie</li> <li>add: throw a meaningful error when there is no default engine</li> <li>change generation of ETags with res.send() to GET requests only. Closes #1619</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#324-2013-05-09","title":"3.2.4 / 2013-05-09","text":"<ul> <li>fix <code>req.subdomains</code> when no Host is present</li> <li>fix <code>req.host</code> when no Host is present, return undefined</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#323-2013-05-07","title":"3.2.3 / 2013-05-07","text":"<ul> <li>update connect / qs</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#322-2013-05-03","title":"3.2.2 / 2013-05-03","text":"<ul> <li>update qs</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#321-2013-04-29","title":"3.2.1 / 2013-04-29","text":"<ul> <li>add app.VERB() paths array deprecation warning</li> <li>update connect</li> <li>update qs and remove all ~ semver crap</li> <li>fix: accept number as value of Signed Cookie</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#320-2013-04-15","title":"3.2.0 / 2013-04-15","text":"<ul> <li>add \"view\" constructor setting to override view behaviour</li> <li>add req.acceptsEncoding(name)</li> <li>add req.acceptedEncodings</li> <li>revert cookie signature change causing session race conditions</li> <li>fix sorting of Accept values of the same quality</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#312-2013-04-12","title":"3.1.2 / 2013-04-12","text":"<ul> <li>add support for custom Accept parameters</li> <li>update cookie-signature</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#311-2013-04-01","title":"3.1.1 / 2013-04-01","text":"<ul> <li>add X-Forwarded-Host support to <code>req.host</code></li> <li>fix relative redirects</li> <li>update mkdirp</li> <li>update buffer-crc32</li> <li>remove legacy app.configure() method from app template.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#310-2013-01-25","title":"3.1.0 / 2013-01-25","text":"<ul> <li>add support for leading \".\" in \"view engine\" setting</li> <li>add array support to <code>res.set()</code></li> <li>add node 0.8.x to travis.yml</li> <li>add \"subdomain offset\" setting for tweaking <code>req.subdomains</code></li> <li>add <code>res.location(url)</code> implementing <code>res.redirect()</code>-like setting of Location</li> <li>use app.get() for x-powered-by setting for inheritance</li> <li>fix colons in passwords for <code>req.auth</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#306-2013-01-04","title":"3.0.6 / 2013-01-04","text":"<ul> <li>add http verb methods to Router</li> <li>update connect</li> <li>fix mangling of the <code>res.cookie()</code> options object</li> <li>fix jsonp whitespace escape. Closes #1132</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#305-2012-12-19","title":"3.0.5 / 2012-12-19","text":"<ul> <li>add throwing when a non-function is passed to a route</li> <li>fix: explicitly remove Transfer-Encoding header from 204 and 304 responses</li> <li>revert \"add 'etag' option\"</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#304-2012-12-05","title":"3.0.4 / 2012-12-05","text":"<ul> <li>add 'etag' option to disable <code>res.send()</code> Etags</li> <li>add escaping of urls in text/plain in <code>res.redirect()</code>     for old browsers interpreting as html</li> <li>change crc32 module for a more liberal license</li> <li>update connect</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#303-2012-11-13","title":"3.0.3 / 2012-11-13","text":"<ul> <li>update connect</li> <li>update cookie module</li> <li>fix cookie max-age</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#302-2012-11-08","title":"3.0.2 / 2012-11-08","text":"<ul> <li>add OPTIONS to cors example. Closes #1398</li> <li>fix route chaining regression. Closes #1397</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#301-2012-11-01","title":"3.0.1 / 2012-11-01","text":"<ul> <li>update connect</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300-2012-10-23","title":"3.0.0 / 2012-10-23","text":"<ul> <li>add <code>make clean</code></li> <li>add \"Basic\" check to req.auth</li> <li>add <code>req.auth</code> test coverage</li> <li>add cb &amp;&amp; cb(payload) to <code>res.jsonp()</code>. Closes #1374</li> <li>add backwards compat for <code>res.redirect()</code> status. Closes #1336</li> <li>add support for <code>res.json()</code> to retain previously defined Content-Types. Closes #1349</li> <li>update connect</li> <li>change <code>res.redirect()</code> to utilize a pathname-relative Location again. Closes #1382</li> <li>remove non-primitive string support for <code>res.send()</code></li> <li>fix view-locals example. Closes #1370</li> <li>fix route-separation example</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300rc5-2012-09-18","title":"3.0.0rc5 / 2012-09-18","text":"<ul> <li>update connect</li> <li>add redis search example</li> <li>add static-files example</li> <li>add \"x-powered-by\" setting (<code>app.disable('x-powered-by')</code>)</li> <li>add \"application/octet-stream\" redirect Accept test case. Closes #1317</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300rc4-2012-08-30","title":"3.0.0rc4 / 2012-08-30","text":"<ul> <li>add <code>res.jsonp()</code>. Closes #1307</li> <li>add \"verbose errors\" option to error-pages example</li> <li>add another route example to express(1) so people are not so confused</li> <li>add redis online user activity tracking example</li> <li>update connect dep</li> <li>fix etag quoting. Closes #1310</li> <li>fix error-pages 404 status</li> <li>fix jsonp callback char restrictions</li> <li>remove old OPTIONS default response</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300rc3-2012-08-13","title":"3.0.0rc3 / 2012-08-13","text":"<ul> <li>update connect dep</li> <li>fix signed cookies to work with <code>connect.cookieParser()</code> (\"s:\" prefix was missing) [tnydwrds]</li> <li>fix <code>res.render()</code> clobbering of \"locals\"</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300rc2-2012-08-03","title":"3.0.0rc2 / 2012-08-03","text":"<ul> <li>add CORS example</li> <li>update connect dep</li> <li>deprecate <code>.createServer()</code> &amp; remove old stale examples</li> <li>fix: escape <code>res.redirect()</code> link</li> <li>fix vhost example</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300rc1-2012-07-24","title":"3.0.0rc1 / 2012-07-24","text":"<ul> <li>add more examples to view-locals</li> <li>add scheme-relative redirects (<code>res.redirect(\"//foo.com\")</code>) support</li> <li>update cookie dep</li> <li>update connect dep</li> <li>update send dep</li> <li>fix <code>express(1)</code> -h flag, use -H for hogan. Closes #1245</li> <li>fix <code>res.sendfile()</code> socket error handling regression</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300beta7-2012-07-16","title":"3.0.0beta7 / 2012-07-16","text":"<ul> <li>update connect dep for <code>send()</code> root normalization regression</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300beta6-2012-07-13","title":"3.0.0beta6 / 2012-07-13","text":"<ul> <li>add <code>err.view</code> property for view errors. Closes #1226</li> <li>add \"jsonp callback name\" setting</li> <li>add support for \"/foo/:bar*\" non-greedy matches</li> <li>change <code>res.sendfile()</code> to use <code>send()</code> module</li> <li>change <code>res.send</code> to use \"response-send\" module</li> <li>remove <code>app.locals.use</code> and <code>res.locals.use</code>, use regular middleware</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300beta5-2012-07-03","title":"3.0.0beta5 / 2012-07-03","text":"<ul> <li>add \"make check\" support</li> <li>add route-map example</li> <li>add <code>res.json(obj, status)</code> support back for BC</li> <li>add \"methods\" dep, remove internal methods module</li> <li>update connect dep</li> <li>update auth example to utilize cores pbkdf2</li> <li>updated tests to use \"supertest\"</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300beta4-2012-06-25","title":"3.0.0beta4 / 2012-06-25","text":"<ul> <li>Added <code>req.auth</code></li> <li>Added <code>req.range(size)</code></li> <li>Added <code>res.links(obj)</code></li> <li>Added <code>res.send(body, status)</code> support back for backwards compat</li> <li>Added <code>.default()</code> support to <code>res.format()</code></li> <li>Added 2xx / 304 check to <code>req.fresh</code></li> <li>Revert \"Added + support to the router\"</li> <li>Fixed <code>res.send()</code> freshness check, respect res.statusCode</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300beta3-2012-06-15","title":"3.0.0beta3 / 2012-06-15","text":"<ul> <li>Added hogan <code>--hjs</code> to express(1) [nullfirm]</li> <li>Added another example to content-negotiation</li> <li>Added <code>fresh</code> dep</li> <li>Changed: <code>res.send()</code> always checks freshness</li> <li>Fixed: expose connects mime module. Closes #1165</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300beta2-2012-06-06","title":"3.0.0beta2 / 2012-06-06","text":"<ul> <li>Added <code>+</code> support to the router</li> <li>Added <code>req.host</code></li> <li>Changed <code>req.param()</code> to check route first</li> <li>Update connect dep</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300beta1-2012-06-01","title":"3.0.0beta1 / 2012-06-01","text":"<ul> <li>Added <code>res.format()</code> callback to override default 406 behaviour</li> <li>Fixed <code>res.redirect()</code> 406. Closes #1154</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300alpha5-2012-05-30","title":"3.0.0alpha5 / 2012-05-30","text":"<ul> <li>Added <code>req.ip</code></li> <li>Added <code>{ signed: true }</code> option to <code>res.cookie()</code></li> <li>Removed <code>res.signedCookie()</code></li> <li>Changed: dont reverse <code>req.ips</code></li> <li>Fixed \"trust proxy\" setting check for <code>req.ips</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300alpha4-2012-05-09","title":"3.0.0alpha4 / 2012-05-09","text":"<ul> <li>Added: allow <code>[]</code> in jsonp callback. Closes #1128</li> <li>Added <code>PORT</code> env var support in generated template. Closes #1118 [benatkin]</li> <li>Updated: connect 2.2.2</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300alpha3-2012-05-04","title":"3.0.0alpha3 / 2012-05-04","text":"<ul> <li>Added public <code>app.routes</code>. Closes #887</li> <li>Added view-locals example</li> <li>Added mvc example</li> <li>Added <code>res.locals.use()</code>. Closes #1120</li> <li>Added conditional-GET support to <code>res.send()</code></li> <li>Added: coerce <code>res.set()</code> values to strings</li> <li>Changed: moved <code>static()</code> in generated apps below router</li> <li>Changed: <code>res.send()</code> only set ETag when not previously set</li> <li>Changed connect 2.2.1 dep</li> <li>Changed: <code>make test</code> now runs unit / acceptance tests</li> <li>Fixed req/res proto inheritance</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300alpha2-2012-04-26","title":"3.0.0alpha2 / 2012-04-26","text":"<ul> <li>Added <code>make benchmark</code> back</li> <li>Added <code>res.send()</code> support for <code>String</code> objects</li> <li>Added client-side data exposing example</li> <li>Added <code>res.header()</code> and <code>req.header()</code> aliases for BC</li> <li>Added <code>express.createServer()</code> for BC</li> <li>Perf: memoize parsed urls</li> <li>Perf: connect 2.2.0 dep</li> <li>Changed: make <code>expressInit()</code> middleware self-aware</li> <li>Fixed: use app.get() for all core settings</li> <li>Fixed redis session example</li> <li>Fixed session example. Closes #1105</li> <li>Fixed generated express dep. Closes #1078</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#300alpha1-2012-04-15","title":"3.0.0alpha1 / 2012-04-15","text":"<ul> <li>Added <code>app.locals.use(callback)</code></li> <li>Added <code>app.locals</code> object</li> <li>Added <code>app.locals(obj)</code></li> <li>Added <code>res.locals</code> object</li> <li>Added <code>res.locals(obj)</code></li> <li>Added <code>res.format()</code> for content-negotiation</li> <li>Added <code>app.engine()</code></li> <li>Added <code>res.cookie()</code> JSON cookie support</li> <li>Added \"trust proxy\" setting</li> <li>Added <code>req.subdomains</code></li> <li>Added <code>req.protocol</code></li> <li>Added <code>req.secure</code></li> <li>Added <code>req.path</code></li> <li>Added <code>req.ips</code></li> <li>Added <code>req.fresh</code></li> <li>Added <code>req.stale</code></li> <li>Added comma-delimited / array support for <code>req.accepts()</code></li> <li>Added debug instrumentation</li> <li>Added <code>res.set(obj)</code></li> <li>Added <code>res.set(field, value)</code></li> <li>Added <code>res.get(field)</code></li> <li>Added <code>app.get(setting)</code>. Closes #842</li> <li>Added <code>req.acceptsLanguage()</code></li> <li>Added <code>req.acceptsCharset()</code></li> <li>Added <code>req.accepted</code></li> <li>Added <code>req.acceptedLanguages</code></li> <li>Added <code>req.acceptedCharsets</code></li> <li>Added \"json replacer\" setting</li> <li>Added \"json spaces\" setting</li> <li>Added X-Forwarded-Proto support to <code>res.redirect()</code>. Closes #92</li> <li>Added <code>--less</code> support to express(1)</li> <li>Added <code>express.response</code> prototype</li> <li>Added <code>express.request</code> prototype</li> <li>Added <code>express.application</code> prototype</li> <li>Added <code>app.path()</code></li> <li>Added <code>app.render()</code></li> <li>Added <code>res.type()</code> to replace <code>res.contentType()</code></li> <li>Changed: <code>res.redirect()</code> to add relative support</li> <li>Changed: enable \"jsonp callback\" by default</li> <li>Changed: renamed \"case sensitive routes\" to \"case sensitive routing\"</li> <li>Rewrite of all tests with mocha</li> <li>Removed \"root\" setting</li> <li>Removed <code>res.redirect('home')</code> support</li> <li>Removed <code>req.notify()</code></li> <li>Removed <code>app.register()</code></li> <li>Removed <code>app.redirect()</code></li> <li>Removed <code>app.is()</code></li> <li>Removed <code>app.helpers()</code></li> <li>Removed <code>app.dynamicHelpers()</code></li> <li>Fixed <code>res.sendfile()</code> with non-GET. Closes #723</li> <li>Fixed express(1) public dir for windows. Closes #866</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#259-2012-04-02","title":"2.5.9/ 2012-04-02","text":"<ul> <li>Added support for PURGE request method [pbuyle]</li> <li>Fixed <code>express(1)</code> generated app <code>app.address()</code> before <code>listening</code> [mmalecki]</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#258-2012-02-08","title":"2.5.8 / 2012-02-08","text":"<ul> <li>Update mkdirp dep. Closes #991</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#257-2012-02-06","title":"2.5.7 / 2012-02-06","text":"<ul> <li>Fixed <code>app.all</code> duplicate DELETE requests [mscdex]</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#256-2012-01-13","title":"2.5.6 / 2012-01-13","text":"<ul> <li>Updated hamljs dev dep. Closes #953</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#255-2012-01-08","title":"2.5.5 / 2012-01-08","text":"<ul> <li>Fixed: set <code>filename</code> on cached templates [matthewleon]</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#254-2012-01-02","title":"2.5.4 / 2012-01-02","text":"<ul> <li>Fixed <code>express(1)</code> eol on 0.4.x. Closes #947</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#253-2011-12-30","title":"2.5.3 / 2011-12-30","text":"<ul> <li>Fixed <code>req.is()</code> when a charset is present</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#252-2011-12-10","title":"2.5.2 / 2011-12-10","text":"<ul> <li>Fixed: express(1) LF -&gt; CRLF for windows</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#251-2011-11-17","title":"2.5.1 / 2011-11-17","text":"<ul> <li>Changed: updated connect to 1.8.x</li> <li>Removed sass.js support from express(1)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#250-2011-10-24","title":"2.5.0 / 2011-10-24","text":"<ul> <li>Added ./routes dir for generated app by default</li> <li>Added npm install reminder to express(1) app gen</li> <li>Added 0.5.x support</li> <li>Removed <code>make test-cov</code> since it wont work with node 0.5.x</li> <li>Fixed express(1) public dir for windows. Closes #866</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#247-2011-10-05","title":"2.4.7 / 2011-10-05","text":"<ul> <li>Added mkdirp to express(1). Closes #795</li> <li>Added simple json-config example</li> <li>Added  shorthand for the parsed request's pathname via <code>req.path</code></li> <li>Changed connect dep to 1.7.x to fix npm issue...</li> <li>Fixed <code>res.redirect()</code> HEAD support. [reported by xerox]</li> <li>Fixed <code>req.flash()</code>, only escape args</li> <li>Fixed absolute path checking on windows. Closes #829 [reported by andrewpmckenzie]</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#246-2011-08-22","title":"2.4.6 / 2011-08-22","text":"<ul> <li>Fixed multiple param callback regression. Closes #824 [reported by TroyGoode]</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#245-2011-08-19","title":"2.4.5 / 2011-08-19","text":"<ul> <li>Added support for routes to handle errors. Closes #809</li> <li>Added <code>app.routes.all()</code>. Closes #803</li> <li>Added \"basepath\" setting to work in conjunction with reverse proxies etc.</li> <li>Refactored <code>Route</code> to use a single array of callbacks</li> <li>Added support for multiple callbacks for <code>app.param()</code>. Closes #801 Closes #805</li> <li>Changed: removed .call(self) for route callbacks</li> <li>Dependency: <code>qs &gt;= 0.3.1</code></li> <li>Fixed <code>res.redirect()</code> on windows due to <code>join()</code> usage. Closes #808</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#244-2011-08-05","title":"2.4.4 / 2011-08-05","text":"<ul> <li>Fixed <code>res.header()</code> intention of a set, even when <code>undefined</code></li> <li>Fixed <code>*</code>, value no longer required</li> <li>Fixed <code>res.send(204)</code> support. Closes #771</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#243-2011-07-14","title":"2.4.3 / 2011-07-14","text":"<ul> <li>Added docs for <code>status</code> option special-case. Closes #739</li> <li>Fixed <code>options.filename</code>, exposing the view path to template engines</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#242-2011-07-06","title":"2.4.2. / 2011-07-06","text":"<ul> <li>Revert \"removed jsonp stripping\" for XSS</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#241-2011-07-06","title":"2.4.1 / 2011-07-06","text":"<ul> <li>Added <code>res.json()</code> JSONP support. Closes #737</li> <li>Added extending-templates example. Closes #730</li> <li>Added \"strict routing\" setting for trailing slashes</li> <li>Added support for multiple envs in <code>app.configure()</code> calls. Closes #735</li> <li>Changed: <code>res.send()</code> using <code>res.json()</code></li> <li>Changed: when cookie <code>path === null</code> don't default it</li> <li>Changed; default cookie path to \"home\" setting. Closes #731</li> <li>Removed pids/logs creation from express(1)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#240-2011-06-28","title":"2.4.0 / 2011-06-28","text":"<ul> <li>Added chainable <code>res.status(code)</code></li> <li>Added <code>res.json()</code>, an explicit version of <code>res.send(obj)</code></li> <li>Added simple web-service example</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#2312-2011-06-22","title":"2.3.12 / 2011-06-22","text":"<ul> <li>#express is now on freenode! come join!</li> <li>Added <code>req.get(field, param)</code></li> <li>Added links to Japanese documentation, thanks @hideyukisaito!</li> <li>Added; the <code>express(1)</code> generated app outputs the env</li> <li>Added <code>content-negotiation</code> example</li> <li>Dependency: connect &gt;= 1.5.1 &lt; 2.0.0</li> <li>Fixed view layout bug. Closes #720</li> <li>Fixed; ignore body on 304. Closes #701</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#2311-2011-06-04","title":"2.3.11 / 2011-06-04","text":"<ul> <li>Added <code>npm test</code></li> <li>Removed generation of dummy test file from <code>express(1)</code></li> <li>Fixed; <code>express(1)</code> adds express as a dep</li> <li>Fixed; prune on <code>prepublish</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#2310-2011-05-27","title":"2.3.10 / 2011-05-27","text":"<ul> <li>Added <code>req.route</code>, exposing the current route</li> <li>Added package.json generation support to <code>express(1)</code></li> <li>Fixed call to <code>app.param()</code> function for optional params. Closes #682</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#239-2011-05-25","title":"2.3.9 / 2011-05-25","text":"<ul> <li>Fixed bug-ish with <code>../' in</code>res.partial()` calls</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#238-2011-05-24","title":"2.3.8 / 2011-05-24","text":"<ul> <li>Fixed <code>app.options()</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#237-2011-05-23","title":"2.3.7 / 2011-05-23","text":"<ul> <li>Added route <code>Collection</code>, ex: <code>app.get('/user/:id').remove();</code></li> <li>Added support for <code>app.param(fn)</code> to define param logic</li> <li>Removed <code>app.param()</code> support for callback with return value</li> <li>Removed module.parent check from express(1) generated app. Closes #670</li> <li>Refactored router. Closes #639</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#236-2011-05-20","title":"2.3.6 / 2011-05-20","text":"<ul> <li>Changed; using devDependencies instead of git submodules</li> <li>Fixed redis session example</li> <li>Fixed markdown example</li> <li>Fixed view caching, should not be enabled in development</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#235-2011-05-20","title":"2.3.5 / 2011-05-20","text":"<ul> <li>Added export <code>.view</code> as alias for <code>.View</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#234-2011-05-08","title":"2.3.4 / 2011-05-08","text":"<ul> <li>Added <code>./examples/say</code></li> <li>Fixed <code>res.sendfile()</code> bug preventing the transfer of files with spaces</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#233-2011-05-03","title":"2.3.3 / 2011-05-03","text":"<ul> <li>Added \"case sensitive routes\" option.</li> <li>Changed; split methods supported per rfc [slaskis]</li> <li>Fixed route-specific middleware when using the same callback function several times</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#232-2011-04-27","title":"2.3.2 / 2011-04-27","text":"<ul> <li>Fixed view hints</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#231-2011-04-26","title":"2.3.1 / 2011-04-26","text":"<ul> <li>Added <code>app.match()</code> as <code>app.match.all()</code></li> <li>Added <code>app.lookup()</code> as <code>app.lookup.all()</code></li> <li>Added <code>app.remove()</code> for <code>app.remove.all()</code></li> <li>Added <code>app.remove.VERB()</code></li> <li>Fixed template caching collision issue. Closes #644</li> <li>Moved router over from connect and started refactor</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#230-2011-04-25","title":"2.3.0 / 2011-04-25","text":"<ul> <li>Added options support to <code>res.clearCookie()</code></li> <li>Added <code>res.helpers()</code> as alias of <code>res.locals()</code></li> <li>Added; json defaults to UTF-8 with <code>res.send()</code>. Closes #632. [Daniel   * Dependency <code>connect &gt;= 1.4.0</code></li> <li>Changed; auto set Content-Type in res.attachement [Aaron Heckmann]</li> <li>Renamed \"cache views\" to \"view cache\". Closes #628</li> <li>Fixed caching of views when using several apps. Closes #637</li> <li>Fixed gotcha invoking <code>app.param()</code> callbacks once per route middleware. Closes #638</li> <li>Fixed partial lookup precedence. Closes #631 Shaw]</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#222-2011-04-12","title":"2.2.2 / 2011-04-12","text":"<ul> <li>Added second callback support for <code>res.download()</code> connection errors</li> <li>Fixed <code>filename</code> option passing to template engine</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#221-2011-04-04","title":"2.2.1 / 2011-04-04","text":"<ul> <li>Added <code>layout(path)</code> helper to change the layout within a view. Closes #610</li> <li> <p>Fixed <code>partial()</code> collection object support.     Previously only anything with <code>.length</code> would work.     When <code>.length</code> is present one must still be aware of holes,     however now <code>{ collection: {foo: 'bar'}}</code> is valid, exposes     <code>keyInCollection</code> and <code>keysInCollection</code>.</p> </li> <li> <p>Performance improved with better view caching</p> </li> <li>Removed <code>request</code> and <code>response</code> locals</li> <li>Changed; errorHandler page title is now <code>Express</code> instead of <code>Connect</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#220-2011-03-30","title":"2.2.0 / 2011-03-30","text":"<ul> <li>Added <code>app.lookup.VERB()</code>, ex <code>app.lookup.put('/user/:id')</code>. Closes #606</li> <li>Added <code>app.match.VERB()</code>, ex <code>app.match.put('/user/12')</code>. Closes #606</li> <li>Added <code>app.VERB(path)</code> as alias of <code>app.lookup.VERB()</code>.</li> <li>Dependency <code>connect &gt;= 1.2.0</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#211-2011-03-29","title":"2.1.1 / 2011-03-29","text":"<ul> <li>Added; expose <code>err.view</code> object when failing to locate a view</li> <li>Fixed <code>res.partial()</code> call <code>next(err)</code> when no callback is given [reported by aheckmann]</li> <li>Fixed; <code>res.send(undefined)</code> responds with 204 [aheckmann]</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#210-2011-03-24","title":"2.1.0 / 2011-03-24","text":"<ul> <li>Added <code>&lt;root&gt;/_?&lt;name&gt;</code> partial lookup support. Closes #447</li> <li>Added <code>request</code>, <code>response</code>, and <code>app</code> local variables</li> <li>Added <code>settings</code> local variable, containing the app's settings</li> <li>Added <code>req.flash()</code> exception if <code>req.session</code> is not available</li> <li>Added <code>res.send(bool)</code> support (json response)</li> <li>Fixed stylus example for latest version</li> <li>Fixed; wrap try/catch around <code>res.render()</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#200-2011-03-17","title":"2.0.0 / 2011-03-17","text":"<ul> <li>Fixed up index view path alternative.</li> <li>Changed; <code>res.locals()</code> without object returns the locals</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#200rc3-2011-03-17","title":"2.0.0rc3 / 2011-03-17","text":"<ul> <li>Added <code>res.locals(obj)</code> to compliment <code>res.local(key, val)</code></li> <li>Added <code>res.partial()</code> callback support</li> <li>Fixed recursive error reporting issue in <code>res.render()</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#200rc2-2011-03-17","title":"2.0.0rc2 / 2011-03-17","text":"<ul> <li>Changed; <code>partial()</code> \"locals\" are now optional</li> <li>Fixed <code>SlowBuffer</code> support. Closes #584 [reported by tyrda01]</li> <li>Fixed .filename view engine option [reported by drudge]</li> <li>Fixed blog example</li> <li>Fixed <code>{req,res}.app</code> reference when mounting [Ben Weaver]</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#200rc-2011-03-14","title":"2.0.0rc / 2011-03-14","text":"<ul> <li>Fixed; expose <code>HTTPSServer</code> constructor</li> <li>Fixed express(1) default test charset. Closes #579 [reported by secoif]</li> <li>Fixed; default charset to utf-8 instead of utf8 for lame IE [reported by NickP]</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#200beta3-2011-03-09","title":"2.0.0beta3 / 2011-03-09","text":"<ul> <li>Added support for <code>res.contentType()</code> literal     The original <code>res.contentType('.json')</code>,     <code>res.contentType('application/json')</code>, and <code>res.contentType('json')</code>     will work now.</li> <li>Added <code>res.render()</code> status option support back</li> <li>Added charset option for <code>res.render()</code></li> <li>Added <code>.charset</code> support (via connect 1.0.4)</li> <li>Added view resolution hints when in development and a lookup fails</li> <li>Added layout lookup support relative to the page view.     For example while rendering <code>./views/user/index.jade</code> if you create     <code>./views/user/layout.jade</code> it will be used in favour of the root layout.</li> <li>Fixed <code>res.redirect()</code>. RFC states absolute url [reported by unlink]</li> <li>Fixed; default <code>res.send()</code> string charset to utf8</li> <li>Removed <code>Partial</code> constructor (not currently used)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#200beta2-2011-03-07","title":"2.0.0beta2 / 2011-03-07","text":"<ul> <li>Added res.render() <code>.locals</code> support back to aid in migration process</li> <li>Fixed flash example</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#200beta-2011-03-03","title":"2.0.0beta / 2011-03-03","text":"<ul> <li>Added HTTPS support</li> <li>Added <code>res.cookie()</code> maxAge support</li> <li>Added <code>req.header()</code> Referrer / Referer special-case, either works</li> <li>Added mount support for <code>res.redirect()</code>, now respects the mount-point</li> <li>Added <code>union()</code> util, taking place of <code>merge(clone())</code> combo</li> <li>Added stylus support to express(1) generated app</li> <li>Added secret to session middleware used in examples and generated app</li> <li>Added <code>res.local(name, val)</code> for progressive view locals</li> <li>Added default param support to <code>req.param(name, default)</code></li> <li>Added <code>app.disabled()</code> and <code>app.enabled()</code></li> <li>Added <code>app.register()</code> support for omitting leading \".\", either works</li> <li>Added <code>res.partial()</code>, using the same interface as <code>partial()</code> within a view. Closes #539</li> <li>Added <code>app.param()</code> to map route params to async/sync logic</li> <li>Added; aliased <code>app.helpers()</code> as <code>app.locals()</code>. Closes #481</li> <li>Added extname with no leading \".\" support to <code>res.contentType()</code></li> <li>Added <code>cache views</code> setting, defaulting to enabled in \"production\" env</li> <li>Added index file partial resolution, eg: partial('user') may try views/user/index.jade.</li> <li>Added <code>req.accepts()</code> support for extensions</li> <li>Changed; <code>res.download()</code> and <code>res.sendfile()</code> now utilize Connect's     static file server <code>connect.static.send()</code>.</li> <li>Changed; replaced <code>connect.utils.mime()</code> with npm mime module</li> <li>Changed; allow <code>req.query</code> to be pre-defined (via middleware or other parent</li> <li>Changed view partial resolution, now relative to parent view</li> <li>Changed view engine signature. no longer <code>engine.render(str, options, callback)</code>, now <code>engine.compile(str, options) -&gt; Function</code>, the returned function accepts <code>fn(locals)</code>.</li> <li>Fixed <code>req.param()</code> bug returning Array.prototype methods. Closes #552</li> <li>Fixed; using <code>Stream#pipe()</code> instead of <code>sys.pump()</code> in <code>res.sendfile()</code></li> <li>Fixed; using qs module instead of querystring</li> <li>Fixed; strip unsafe chars from jsonp callbacks</li> <li>Removed \"stream threshold\" setting</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#108-2011-03-01","title":"1.0.8 / 2011-03-01","text":"<ul> <li>Allow <code>req.query</code> to be pre-defined (via middleware or other parent app)</li> <li>\"connect\": \"&gt;= 0.5.0 &lt; 1.0.0\". Closes #547</li> <li>Removed the long deprecated EXPRESS_ENV support</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#107-2011-02-07","title":"1.0.7 / 2011-02-07","text":"<ul> <li>Fixed <code>render()</code> setting inheritance.     Mounted apps would not inherit \"view engine\"</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#106-2011-02-07","title":"1.0.6 / 2011-02-07","text":"<ul> <li>Fixed <code>view engine</code> setting bug when period is in dirname</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#105-2011-02-05","title":"1.0.5 / 2011-02-05","text":"<ul> <li>Added secret to generated app <code>session()</code> call</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#104-2011-02-05","title":"1.0.4 / 2011-02-05","text":"<ul> <li>Added <code>qs</code> dependency to package.json</li> <li>Fixed namespaced <code>require()</code>s for latest connect support</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#103-2011-01-13","title":"1.0.3 / 2011-01-13","text":"<ul> <li>Remove unsafe characters from JSONP callback names [Ryan Grove]</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#102-2011-01-10","title":"1.0.2 / 2011-01-10","text":"<ul> <li>Removed nested require, using <code>connect.router</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#101-2010-12-29","title":"1.0.1 / 2010-12-29","text":"<ul> <li>Fixed for middleware stacked via <code>createServer()</code>     previously the <code>foo</code> middleware passed to <code>createServer(foo)</code>     would not have access to Express methods such as <code>res.send()</code>     or props like <code>req.query</code> etc.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#100-2010-11-16","title":"1.0.0 / 2010-11-16","text":"<ul> <li>Added; deduce partial object names from the last segment.     For example by default <code>partial('forum/post', postObject)</code> will     give you the post object, providing a meaningful default.</li> <li>Added http status code string representation to <code>res.redirect()</code> body</li> <li>Added; <code>res.redirect()</code> supporting text/plain and text/html via Accept.</li> <li>Added <code>req.is()</code> to aid in content negotiation</li> <li>Added partial local inheritance [suggested by masylum]. Closes #102     providing access to parent template locals.</li> <li>Added -s, --session[s] flag to express(1) to add session related middleware</li> <li>Added --template flag to express(1) to specify the     template engine to use.</li> <li>Added --css flag to express(1) to specify the     stylesheet engine to use (or just plain css by default).</li> <li>Added <code>app.all()</code> support [thanks aheckmann]</li> <li>Added partial direct object support.     You may now <code>partial('user', user)</code> providing the \"user\" local,     vs previously <code>partial('user', { object: user })</code>.</li> <li>Added route-separation example since many people question ways     to do this with CommonJS modules. Also view the blog example for     an alternative.</li> <li>Performance; caching view path derived partial object names</li> <li>Fixed partial local inheritance precedence. [reported by Nick Poulden] Closes #454</li> <li>Fixed jsonp support; text/javascript as per mailinglist discussion</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#100rc4-2010-10-14","title":"1.0.0rc4 / 2010-10-14","text":"<ul> <li>Added NODE_ENV support, EXPRESS_ENV is deprecated and will be removed in 1.0.0</li> <li>Added route-middleware support (very helpful, see the docs)</li> <li>Added jsonp callback setting to enable/disable jsonp autowrapping [Dav Glass]</li> <li>Added callback query check on response.send to autowrap JSON objects for simple webservice implementations [Dav Glass]</li> <li>Added <code>partial()</code> support for array-like collections. Closes #434</li> <li>Added support for swappable querystring parsers</li> <li>Added session usage docs. Closes #443</li> <li>Added dynamic helper caching. Closes #439 [suggested by maritz]</li> <li>Added authentication example</li> <li>Added basic Range support to <code>res.sendfile()</code> (and <code>res.download()</code> etc)</li> <li>Changed; <code>express(1)</code> generated app using 2 spaces instead of 4</li> <li>Default env to \"development\" again [aheckmann]</li> <li>Removed context option is no more, use \"scope\"</li> <li>Fixed; exposing ./support libs to examples so they can run without installs</li> <li>Fixed mvc example</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#100rc3-2010-09-20","title":"1.0.0rc3 / 2010-09-20","text":"<ul> <li>Added confirmation for <code>express(1)</code> app generation. Closes #391</li> <li>Added extending of flash formatters via <code>app.flashFormatters</code></li> <li>Added flash formatter support. Closes #411</li> <li>Added streaming support to <code>res.sendfile()</code> using <code>sys.pump()</code> when &gt;= \"stream threshold\"</li> <li>Added stream threshold setting for <code>res.sendfile()</code></li> <li>Added <code>res.send()</code> HEAD support</li> <li>Added <code>res.clearCookie()</code></li> <li>Added <code>res.cookie()</code></li> <li>Added <code>res.render()</code> headers option</li> <li>Added <code>res.redirect()</code> response bodies</li> <li>Added <code>res.render()</code> status option support. Closes #425 [thanks aheckmann]</li> <li>Fixed <code>res.sendfile()</code> responding with 403 on malicious path</li> <li>Fixed <code>res.download()</code> bug; when an error occurs remove Content-Disposition</li> <li>Fixed; mounted apps settings now inherit from parent app [aheckmann]</li> <li>Fixed; stripping Content-Length / Content-Type when 204</li> <li>Fixed <code>res.send()</code> 204. Closes #419</li> <li>Fixed multiple Set-Cookie headers via <code>res.header()</code>. Closes #402</li> <li>Fixed bug messing with error handlers when <code>listenFD()</code> is called instead of <code>listen()</code>. [thanks guillermo]</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#100rc2-2010-08-17","title":"1.0.0rc2 / 2010-08-17","text":"<ul> <li>Added <code>app.register()</code> for template engine mapping. Closes #390</li> <li>Added <code>res.render()</code> callback support as second argument (no options)</li> <li>Added callback support to <code>res.download()</code></li> <li>Added callback support for <code>res.sendfile()</code></li> <li>Added support for middleware access via <code>express.middlewareName()</code> vs <code>connect.middlewareName()</code></li> <li>Added \"partials\" setting to docs</li> <li>Added default expresso tests to <code>express(1)</code> generated app. Closes #384</li> <li>Fixed <code>res.sendfile()</code> error handling, defer via <code>next()</code></li> <li>Fixed <code>res.render()</code> callback when a layout is used [thanks guillermo]</li> <li>Fixed; <code>make install</code> creating ~/.node_libraries when not present</li> <li>Fixed issue preventing error handlers from being defined anywhere. Closes #387</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#100rc-2010-07-28","title":"1.0.0rc / 2010-07-28","text":"<ul> <li>Added mounted hook. Closes #369</li> <li> <p>Added connect dependency to package.json</p> </li> <li> <p>Removed \"reload views\" setting and support code     development env never caches, production always caches.</p> </li> <li> <p>Removed param in route callbacks, signature is now     simply (req, res, next), previously (req, res, params, next).     Use req.params for path captures, req.query for GET params.</p> </li> <li> <p>Fixed \"home\" setting</p> </li> <li>Fixed middleware/router precedence issue. Closes #366</li> <li>Fixed; configure() callbacks called immediately. Closes #368</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#100beta2-2010-07-23","title":"1.0.0beta2 / 2010-07-23","text":"<ul> <li>Added more examples</li> <li>Added; exporting <code>Server</code> constructor</li> <li>Added <code>Server#helpers()</code> for view locals</li> <li>Added <code>Server#dynamicHelpers()</code> for dynamic view locals. Closes #349</li> <li>Added support for absolute view paths</li> <li>Added; home setting defaults to <code>Server#route</code> for mounted apps. Closes #363</li> <li>Added Guillermo Rauch to the contributor list</li> <li>Added support for \"as\" for non-collection partials. Closes #341</li> <li>Fixed install.sh, ensuring ~/.node_libraries exists. Closes #362 [thanks jf]</li> <li>Fixed <code>res.render()</code> exceptions, now passed to <code>next()</code> when no callback is given [thanks guillermo]</li> <li>Fixed instanceof <code>Array</code> checks, now <code>Array.isArray()</code></li> <li>Fixed express(1) expansion of public dirs. Closes #348</li> <li>Fixed middleware precedence. Closes #345</li> <li>Fixed view watcher, now async [thanks aheckmann]</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#100beta-2010-07-15","title":"1.0.0beta / 2010-07-15","text":"<ul> <li>Re-write<ul> <li>much faster</li> <li>much lighter</li> <li>Check ExpressJS.com for migration guide and updated docs</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#0140-2010-06-15","title":"0.14.0 / 2010-06-15","text":"<ul> <li>Utilize relative requires</li> <li>Added Static bufferSize option [aheckmann]</li> <li>Fixed caching of view and partial subdirectories [aheckmann]</li> <li>Fixed mime.type() comments now that \".ext\" is not supported</li> <li>Updated haml submodule</li> <li>Updated class submodule</li> <li>Removed bin/express</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#0130-2010-06-01","title":"0.13.0 / 2010-06-01","text":"<ul> <li>Added node v0.1.97 compatibility</li> <li>Added support for deleting cookies via Request#cookie('key', null)</li> <li>Updated haml submodule</li> <li>Fixed not-found page, now using charset utf-8</li> <li>Fixed show-exceptions page, now using charset utf-8</li> <li>Fixed view support due to fs.readFile Buffers</li> <li>Changed; mime.type() no longer accepts \".type\" due to node extname() changes</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#0120-2010-05-22","title":"0.12.0 / 2010-05-22","text":"<ul> <li>Added node v0.1.96 compatibility</li> <li>Added view <code>helpers</code> export which act as additional local variables</li> <li>Updated haml submodule</li> <li>Changed ETag; removed inode, modified time only</li> <li>Fixed LF to CRLF for setting multiple cookies</li> <li>Fixed cookie compilation; values are now urlencoded</li> <li>Fixed cookies parsing; accepts quoted values and url escaped cookies</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#0110-2010-05-06","title":"0.11.0 / 2010-05-06","text":"<ul> <li>Added support for layouts using different engines<ul> <li>this.render('page.html.haml', { layout: 'super-cool-layout.html.ejs' })</li> <li>this.render('page.html.haml', { layout: 'foo' }) // assumes 'foo.html.haml'</li> <li>this.render('page.html.haml', { layout: false }) // no layout</li> </ul> </li> <li>Updated ext submodule</li> <li>Updated haml submodule</li> <li>Fixed EJS partial support by passing along the context. Issue #307</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#0101-2010-05-03","title":"0.10.1 / 2010-05-03","text":"<ul> <li>Fixed binary uploads.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#0100-2010-04-30","title":"0.10.0 / 2010-04-30","text":"<ul> <li>Added charset support via Request#charset (automatically assigned to 'UTF-8' when respond()'s     encoding is set to 'utf8' or 'utf-8').</li> <li>Added \"encoding\" option to Request#render(). Closes #299</li> <li>Added \"dump exceptions\" setting, which is enabled by default.</li> <li>Added simple ejs template engine support</li> <li>Added error response support for text/plain, application/json. Closes #297</li> <li>Added callback function param to Request#error()</li> <li>Added Request#sendHead()</li> <li>Added Request#stream()</li> <li>Added support for Request#respond(304, null) for empty response bodies</li> <li>Added ETag support to Request#sendfile()</li> <li>Added options to Request#sendfile(), passed to fs.createReadStream()</li> <li>Added filename arg to Request#download()</li> <li>Performance enhanced due to pre-reversing plugins so that plugins.reverse() is not called on each request</li> <li>Performance enhanced by preventing several calls to toLowerCase() in Router#match()</li> <li>Changed; Request#sendfile() now streams</li> <li>Changed; Renamed Request#halt() to Request#respond(). Closes #289</li> <li>Changed; Using sys.inspect() instead of JSON.encode() for error output</li> <li>Changed; run() returns the http.Server instance. Closes #298</li> <li>Changed; Defaulting Server#host to null (INADDR_ANY)</li> <li>Changed; Logger \"common\" format scale of 0.4f</li> <li>Removed Logger \"request\" format</li> <li>Fixed; Catching ENOENT in view caching, preventing error when \"views/partials\" is not found</li> <li>Fixed several issues with http client</li> <li>Fixed Logger Content-Length output</li> <li>Fixed bug preventing Opera from retaining the generated session id. Closes #292</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#090-2010-04-14","title":"0.9.0 / 2010-04-14","text":"<ul> <li>Added DSL level error() route support</li> <li>Added DSL level notFound() route support</li> <li>Added Request#error()</li> <li>Added Request#notFound()</li> <li>Added Request#render() callback function. Closes #258</li> <li>Added \"max upload size\" setting</li> <li>Added \"magic\" variables to collection partials (__index__, __length__, __isFirst__, __isLast__). Closes #254</li> <li>Added haml.js submodule; removed haml-js</li> <li>Added callback function support to Request#halt() as 3rd/4th arg</li> <li>Added preprocessing of route param wildcards using param(). Closes #251</li> <li>Added view partial support (with collections etc.)</li> <li>Fixed bug preventing falsey params (such as ?page=0). Closes #286</li> <li>Fixed setting of multiple cookies. Closes #199</li> <li>Changed; view naming convention is now NAME.TYPE.ENGINE (for example page.html.haml)</li> <li>Changed; session cookie is now httpOnly</li> <li>Changed; Request is no longer global</li> <li>Changed; Event is no longer global</li> <li>Changed; \"sys\" module is no longer global</li> <li>Changed; moved Request#download to Static plugin where it belongs</li> <li>Changed; Request instance created before body parsing. Closes #262</li> <li>Changed; Pre-caching views in memory when \"cache view contents\" is enabled. Closes #253</li> <li>Changed; Pre-caching view partials in memory when \"cache view partials\" is enabled</li> <li>Updated support to node --version 0.1.90</li> <li>Updated dependencies</li> <li>Removed set(\"session cookie\") in favour of use(Session, { cookie: { ... }})</li> <li>Removed utils.mixin(); use Object#mergeDeep()</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#080-2010-03-19","title":"0.8.0 / 2010-03-19","text":"<ul> <li>Added coffeescript example app. Closes #242</li> <li>Changed; cache api now async friendly. Closes #240</li> <li>Removed deprecated 'express/static' support. Use 'express/plugins/static'</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#076-2010-03-19","title":"0.7.6 / 2010-03-19","text":"<ul> <li>Added Request#isXHR. Closes #229</li> <li>Added <code>make install</code> (for the executable)</li> <li>Added <code>express</code> executable for setting up simple app templates</li> <li>Added \"GET /public/*\" to Static plugin, defaulting to /public <li>Added Static plugin</li> <li>Fixed; Request#render() only calls cache.get() once</li> <li>Fixed; Namespacing View caches with \"view:\"</li> <li>Fixed; Namespacing Static caches with \"static:\"</li> <li>Fixed; Both example apps now use the Static plugin</li> <li>Fixed set(\"views\"). Closes #239</li> <li>Fixed missing space for combined log format</li> <li>Deprecated Request#sendfile() and 'express/static'</li> <li>Removed Server#running</li>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#075-2010-03-16","title":"0.7.5 / 2010-03-16","text":"<ul> <li>Added Request#flash() support without args, now returns all flashes</li> <li>Updated ext submodule</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#074-2010-03-16","title":"0.7.4 / 2010-03-16","text":"<ul> <li>Fixed session reaper</li> <li>Changed; class.js replacing js-oo Class implementation (quite a bit faster, no browser cruft)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#073-2010-03-16","title":"0.7.3 / 2010-03-16","text":"<ul> <li>Added package.json</li> <li>Fixed requiring of haml / sass due to kiwi removal</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#072-2010-03-16","title":"0.7.2 / 2010-03-16","text":"<ul> <li>Fixed GIT submodules (HAH!)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#071-2010-03-16","title":"0.7.1 / 2010-03-16","text":"<ul> <li>Changed; Express now using submodules again until a PM is adopted</li> <li>Changed; chat example using millisecond conversions from ext</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#070-2010-03-15","title":"0.7.0 / 2010-03-15","text":"<ul> <li>Added Request#pass() support (finds the next matching route, or the given path)</li> <li>Added Logger plugin (default \"common\" format replaces CommonLogger)</li> <li>Removed Profiler plugin</li> <li>Removed CommonLogger plugin</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#060-2010-03-11","title":"0.6.0 / 2010-03-11","text":"<ul> <li>Added seed.yml for kiwi package management support</li> <li> <p>Added HTTP client query string support when method is GET. Closes #205</p> </li> <li> <p>Added support for arbitrary view engines.     For example \"foo.engine.html\" will now require('engine'),     the exports from this module are cached after the first require().</p> </li> <li> <p>Added async plugin support</p> </li> <li> <p>Removed usage of RESTful route funcs as http client     get() etc, use http.get() and friends</p> </li> <li> <p>Removed custom exceptions</p> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#050-2010-03-10","title":"0.5.0 / 2010-03-10","text":"<ul> <li>Added ext dependency (library of js extensions)</li> <li>Removed extname() / basename() utils. Use path module</li> <li>Removed toArray() util. Use arguments.values</li> <li>Removed escapeRegexp() util. Use RegExp.escape()</li> <li>Removed process.mixin() dependency. Use utils.mixin()</li> <li>Removed Collection</li> <li>Removed ElementCollection</li> <li>Shameless self promotion of ebook \"Advanced JavaScript\" (http://dev-mag.com)  ;)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#040-2010-02-11","title":"0.4.0 / 2010-02-11","text":"<ul> <li>Added flash() example to sample upload app</li> <li>Added high level restful http client module (express/http)</li> <li>Changed; RESTful route functions double as HTTP clients. Closes #69</li> <li>Changed; throwing error when routes are added at runtime</li> <li>Changed; defaulting render() context to the current Request. Closes #197</li> <li>Updated haml submodule</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#030-2010-02-11","title":"0.3.0 / 2010-02-11","text":"<ul> <li>Updated haml / sass submodules. Closes #200</li> <li>Added flash message support. Closes #64</li> <li>Added accepts() now allows multiple args. fixes #117</li> <li>Added support for plugins to halt. Closes #189</li> <li>Added alternate layout support. Closes #119</li> <li>Removed Route#run(). Closes #188</li> <li>Fixed broken specs due to use(Cookie) missing</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#021-2010-02-05","title":"0.2.1 / 2010-02-05","text":"<ul> <li>Added \"plot\" format option for Profiler (for gnuplot processing)</li> <li>Added request number to Profiler plugin</li> <li>Fixed binary encoding for multipart file uploads, was previously defaulting to UTF8</li> <li>Fixed issue with routes not firing when not files are present. Closes #184</li> <li>Fixed process.Promise -&gt; events.Promise</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#020-2010-02-03","title":"0.2.0 / 2010-02-03","text":"<ul> <li>Added parseParam() support for name[] etc. (allows for file inputs with \"multiple\" attr) Closes #180</li> <li>Added Both Cache and Session option \"reapInterval\" may be \"reapEvery\". Closes #174</li> <li>Added expiration support to cache api with reaper. Closes #133</li> <li>Added cache Store.Memory#reap()</li> <li>Added Cache; cache api now uses first class Cache instances</li> <li>Added abstract session Store. Closes #172</li> <li>Changed; cache Memory.Store#get() utilizing Collection</li> <li>Renamed MemoryStore -&gt; Store.Memory</li> <li>Fixed use() of the same plugin several time will always use latest options. Closes #176</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#010-2010-02-03","title":"0.1.0 / 2010-02-03","text":"<ul> <li>Changed; Hooks (before / after) pass request as arg as well as evaluated in their context</li> <li>Updated node support to 0.1.27 Closes #169</li> <li>Updated dirname(__filename) -&gt; __dirname</li> <li>Updated libxmljs support to v0.2.0</li> <li>Added session support with memory store / reaping</li> <li>Added quick uid() helper</li> <li>Added multi-part upload support</li> <li>Added Sass.js support / submodule</li> <li>Added production env caching view contents and static files</li> <li>Added static file caching. Closes #136</li> <li>Added cache plugin with memory stores</li> <li>Added support to StaticFile so that it works with non-textual files.</li> <li>Removed dirname() helper</li> <li>Removed several globals (now their modules must be required)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#002-2010-01-10","title":"0.0.2 / 2010-01-10","text":"<ul> <li>Added view benchmarks; currently haml vs ejs</li> <li>Added Request#attachment() specs. Closes #116</li> <li>Added use of node's parseQuery() util. Closes #123</li> <li>Added <code>make init</code> for submodules</li> <li>Updated Haml</li> <li>Updated sample chat app to show messages on load</li> <li>Updated libxmljs parseString -&gt; parseHtmlString</li> <li>Fixed <code>make init</code> to work with older versions of git</li> <li>Fixed specs can now run independent specs for those who can't build deps. Closes #127</li> <li>Fixed issues introduced by the node url module changes. Closes 126.</li> <li>Fixed two assertions failing due to Collection#keys() returning strings</li> <li>Fixed faulty Collection#toArray() spec due to keys() returning strings</li> <li>Fixed <code>make test</code> now builds libxmljs.node before testing</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/History/#001-2010-01-03","title":"0.0.1 / 2010-01-03","text":"<ul> <li>Initial release</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/","title":"Readme","text":"<p>Fast, unopinionated, minimalist web framework for Node.js.</p> <p>This project has a Code of Conduct.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/#table-of-contents","title":"Table of contents","text":"<ul> <li>Installation</li> <li>Features</li> <li>Docs &amp; Community</li> <li>Quick Start</li> <li>Running Tests</li> <li>Philosophy</li> <li>Examples</li> <li>Contributing to Express</li> <li>TC (Technical Committee)</li> <li>Triagers</li> <li>License</li> </ul> <pre><code>import express from 'express'\n\nconst app = express()\n\napp.get('/', (req, res) =&gt; {\n  res.send('Hello World')\n})\n\napp.listen(3000)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/#installation","title":"Installation","text":"<p>This is a Node.js module available through the npm registry.</p> <p>Before installing, download and install Node.js. Node.js 18 or higher is required.</p> <p>If this is a brand new project, make sure to create a <code>package.json</code> first with the <code>npm init</code> command.</p> <p>Installation is done using the <code>npm install</code> command:</p> <pre><code>npm install express\n</code></pre> <p>Follow our installing guide for more information.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/#features","title":"Features","text":"<ul> <li>Robust routing</li> <li>Focus on high performance</li> <li>Super-high test coverage</li> <li>HTTP helpers (redirection, caching, etc)</li> <li>View system supporting 14+ template engines</li> <li>Content negotiation</li> <li>Executable for generating applications quickly</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/#docs-community","title":"Docs &amp; Community","text":"<ul> <li>Website and Documentation - [website repo]</li> <li>GitHub Organization for Official Middleware &amp; Modules</li> <li>Github Discussions for discussion on the development and usage of Express</li> </ul> <p>PROTIP Be sure to read the migration guide to v5</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/#quick-start","title":"Quick Start","text":"<p>The quickest way to get started with express is to utilize the executable <code>express(1)</code> to generate an application as shown below:</p> <p>Install the executable. The executable's major version will match Express's:</p> <pre><code>npm install -g express-generator@4\n</code></pre> <p>Create the app:</p> <pre><code>express /tmp/foo &amp;&amp; cd /tmp/foo\n</code></pre> <p>Install dependencies:</p> <pre><code>npm install\n</code></pre> <p>Start the server:</p> <pre><code>npm start\n</code></pre> <p>View the website at: http://localhost:3000</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/#philosophy","title":"Philosophy","text":"<p>The Express philosophy is to provide small, robust tooling for HTTP servers, making   it a great solution for single page applications, websites, hybrids, or public   HTTP APIs.</p> <p>Express does not force you to use any specific ORM or template engine. With support for over   14 template engines via @ladjs/consolidate,   you can quickly craft your perfect framework.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/#examples","title":"Examples","text":"<p>To view the examples, clone the Express repository:</p> <pre><code>git clone https://github.com/expressjs/express.git --depth 1 &amp;&amp; cd express\n</code></pre> <p>Then install the dependencies:</p> <pre><code>npm install\n</code></pre> <p>Then run whichever example you want:</p> <pre><code>node examples/content-negotiation\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/#contributing","title":"Contributing","text":"<p>The Express.js project welcomes all constructive contributions. Contributions take many forms, from code for bug fixes and enhancements, to additions and fixes to documentation, additional tests, triaging incoming pull requests and issues, and more!</p> <p>See the Contributing Guide for more technical details on contributing.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/#security-issues","title":"Security Issues","text":"<p>If you discover a security vulnerability in Express, please see Security Policies and Procedures.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/#running-tests","title":"Running Tests","text":"<p>To run the test suite, first install the dependencies:</p> <pre><code>npm install\n</code></pre> <p>Then run <code>npm test</code>:</p> <pre><code>npm test\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/#people","title":"People","text":"<p>The original author of Express is TJ Holowaychuk</p> <p>List of all contributors</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/#tc-technical-committee","title":"TC (Technical Committee)","text":"<ul> <li>UlisesGascon - Ulises Gasc\u00f3n (he/him)</li> <li>jonchurch - Jon Church</li> <li>wesleytodd - Wes Todd</li> <li>LinusU - Linus Unneb\u00e4ck</li> <li>blakeembrey - Blake Embrey</li> <li>sheplu - Jean Burellier</li> <li>crandmck - Rand McKinney</li> <li>ctcpip - Chris de Almeida</li> </ul> TC emeriti members  #### TC emeriti members    * [dougwilson](https://github.com/dougwilson) - **Douglas Wilson**   * [hacksparrow](https://github.com/hacksparrow) - **Hage Yaapa**   * [jonathanong](https://github.com/jonathanong) - **jongleberry**   * [niftylettuce](https://github.com/niftylettuce) - **niftylettuce**   * [troygoode](https://github.com/troygoode) - **Troy Goode**"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/#triagers","title":"Triagers","text":"<ul> <li>aravindvnair99 - Aravind Nair</li> <li>bjohansebas - Sebastian Beltran</li> <li>carpasse - Carlos Serrano</li> <li>CBID2 - Christine Belzie</li> <li>dpopp07 - Dustin Popp</li> <li>UlisesGascon - Ulises Gasc\u00f3n (he/him)</li> <li>3imed-jaberi - Imed Jaberi</li> <li>IamLizu - S M Mahmudul Hasan (he/him)</li> <li>Phillip9587 - Phillip Barta</li> <li>Sushmeet - Sushmeet Sunger</li> <li>rxmarbles Rick Markins (He/him)</li> </ul> Triagers emeriti members  #### Emeritus Triagers    * [AuggieH](https://github.com/AuggieH) - **Auggie Hudak**   * [G-Rath](https://github.com/G-Rath) - **Gareth Jones**   * [MohammadXroid](https://github.com/MohammadXroid) - **Mohammad Ayashi**   * [NawafSwe](https://github.com/NawafSwe) - **Nawaf Alsharqi**   * [NotMoni](https://github.com/NotMoni) - **Moni**   * [VigneshMurugan](https://github.com/VigneshMurugan) - **Vignesh Murugan**   * [davidmashe](https://github.com/davidmashe) - **David Ashe**   * [digitaIfabric](https://github.com/digitaIfabric) - **David**   * [e-l-i-s-e](https://github.com/e-l-i-s-e) - **Elise Bonner**   * [fed135](https://github.com/fed135) - **Frederic Charette**   * [firmanJS](https://github.com/firmanJS) - **Firman Abdul Hakim**   * [getspooky](https://github.com/getspooky) - **Yasser Ameur**   * [ghinks](https://github.com/ghinks) - **Glenn**   * [ghousemohamed](https://github.com/ghousemohamed) - **Ghouse Mohamed**   * [gireeshpunathil](https://github.com/gireeshpunathil) - **Gireesh Punathil**   * [jake32321](https://github.com/jake32321) - **Jake Reed**   * [jonchurch](https://github.com/jonchurch) - **Jon Church**   * [lekanikotun](https://github.com/lekanikotun) - **Troy Goode**   * [marsonya](https://github.com/marsonya) - **Lekan Ikotun**   * [mastermatt](https://github.com/mastermatt) - **Matt R. Wilson**   * [maxakuru](https://github.com/maxakuru) - **Max Edell**   * [mlrawlings](https://github.com/mlrawlings) - **Michael Rawlings**   * [rodion-arr](https://github.com/rodion-arr) - **Rodion Abdurakhimov**   * [sheplu](https://github.com/sheplu) - **Jean Burellier**   * [tarunyadav1](https://github.com/tarunyadav1) - **Tarun yadav**   * [tunniclm](https://github.com/tunniclm) - **Mike Tunnicliffe**   * [enyoghasim](https://github.com/enyoghasim) - **David Enyoghasim**   * [0ss](https://github.com/0ss) - **Salah**   * [import-brain](https://github.com/import-brain) - **Eric Cheng** (he/him)   * [dakshkhetan](https://github.com/dakshkhetan) - **Daksh Khetan** (he/him)   * [lucasraziel](https://github.com/lucasraziel) - **Lucas Soares Do Rego**   * [mertcanaltin](https://github.com/mertcanaltin) - **Mert Can Altin**"},{"location":"system-desing/crud-app/JS/server/node_modules/express/Readme/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/express-rate-limit/license/","title":"MIT License","text":"<p>Copyright 2023 Nathan Friedly, Vedant K</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/express-rate-limit/readme/","title":"Readme","text":"<code>express-rate-limit</code>   [![tests](https://img.shields.io/github/actions/workflow/status/express-rate-limit/express-rate-limit/ci.yaml)](https://github.com/express-rate-limit/express-rate-limit/actions/workflows/ci.yaml) [![npm version](https://img.shields.io/npm/v/express-rate-limit.svg)](https://npmjs.org/package/express-rate-limit 'View this project on NPM') [![npm downloads](https://img.shields.io/npm/dm/express-rate-limit)](https://www.npmjs.com/package/express-rate-limit) [![license](https://img.shields.io/npm/l/express-rate-limit)](license.md)   <p>Basic rate-limiting middleware for Express. Use to limit repeated requests to public APIs and/or endpoints such as password reset. Plays nice with express-slow-down and ratelimit-header-parser.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/express-rate-limit/readme/#usage","title":"Usage","text":"<p>The full documentation is available on-line.</p> <pre><code>import { rateLimit } from 'express-rate-limit'\n\nconst limiter = rateLimit({\n    windowMs: 15 * 60 * 1000, // 15 minutes\n    limit: 100, // Limit each IP to 100 requests per `window` (here, per 15 minutes).\n    standardHeaders: 'draft-8', // draft-6: `RateLimit-*` headers; draft-7 &amp; draft-8: combined `RateLimit` header\n    legacyHeaders: false, // Disable the `X-RateLimit-*` headers.\n    // store: ... , // Redis, Memcached, etc. See below.\n})\n\n// Apply the rate limiting middleware to all requests.\napp.use(limiter)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/express-rate-limit/readme/#data-stores","title":"Data Stores","text":"<p>The rate limiter comes with a built-in memory store, and supports a variety of external data stores.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/express-rate-limit/readme/#configuration","title":"Configuration","text":"<p>All function options may be async. Click the name for additional info and default values.</p> Option Type Remarks [<code>windowMs</code>] <code>number</code> How long to remember requests for, in milliseconds. [<code>limit</code>] <code>number</code> | <code>function</code> How many requests to allow. [<code>message</code>] <code>string</code> | <code>json</code> | <code>function</code> Response to return after limit is reached. [<code>statusCode</code>] <code>number</code> HTTP status code after limit is reached (default is 429). [<code>handler</code>] <code>function</code> Function to run after limit is reached (overrides <code>message</code> and <code>statusCode</code> settings, if set). [<code>legacyHeaders</code>] <code>boolean</code> Enable the <code>X-Rate-Limit</code> header. [<code>standardHeaders</code>] <code>'draft-6'</code> | <code>'draft-7'</code> | <code>'draft-8'</code> Enable the <code>Ratelimit</code> header. [<code>identifier</code>] <code>string</code> | <code>function</code> Name associated with the quota policy enforced by this rate limiter. [<code>store</code>] <code>Store</code> Use a custom store to share hit counts across multiple nodes. [<code>passOnStoreError</code>] <code>boolean</code> Allow (<code>true</code>) or block (<code>false</code>, default) traffic if the store becomes unavailable. [<code>keyGenerator</code>] <code>function</code> Identify users (defaults to IP address). [<code>requestPropertyName</code>] <code>string</code> Add rate limit info to the <code>req</code> object. [<code>skip</code>] <code>function</code> Return <code>true</code> to bypass the limiter for the given request. [<code>skipSuccessfulRequests</code>] <code>boolean</code> Uncount 1xx/2xx/3xx responses. [<code>skipFailedRequests</code>] <code>boolean</code> Uncount 4xx/5xx responses. [<code>requestWasSuccessful</code>] <code>function</code> Used by <code>skipSuccessfulRequests</code> and <code>skipFailedRequests</code>. [<code>validate</code>] <code>boolean</code> | <code>object</code> Enable or disable built-in validation checks."},{"location":"system-desing/crud-app/JS/server/node_modules/express-rate-limit/readme/#thank-you","title":"Thank You","text":"<p>Sponsored by Zuplo a fully-managed API Gateway for developers. Add dynamic rate-limiting, authentication and more to any API in minutes. Learn more at zuplo.com</p> <p> </p> <p>Thanks to Mintlify for hosting the documentation at express-rate-limit.mintlify.app</p> <p> </p> <p>Finally, thank you to everyone who's contributed to this project in any way! \ud83e\udef6</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/express-rate-limit/readme/#issues-and-contributing","title":"Issues and Contributing","text":"<p>If you encounter a bug or want to see something added/changed, please go ahead and open an issue! If you need help with something, feel free to start a discussion!</p> <p>If you wish to contribute to the library, thanks! First, please read the contributing guide. Then you can pick up any issue and fix/implement it!</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/express-rate-limit/readme/#license","title":"License","text":"<p>MIT \u00a9 Nathan Friedly, Vedant K</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/fill-range/","title":"fill-range","text":"<p>Fill in a range of numbers or letters, optionally passing an increment or <code>step</code> to use, or create a regex-compatible range with <code>options.toRegex</code></p> <p>Please consider following this project's author, Jon Schlinkert, and consider starring the project to show your  and support.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/fill-range/#install","title":"Install","text":"<p>Install with npm:</p> <pre><code>$ npm install --save fill-range\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/fill-range/#usage","title":"Usage","text":"<p>Expands numbers and letters, optionally using a <code>step</code> as the last argument. (Numbers may be defined as JavaScript numbers or strings).</p> <pre><code>const fill = require('fill-range');\n// fill(from, to[, step, options]);\n\nconsole.log(fill('1', '10')); //=&gt; ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']\nconsole.log(fill('1', '10', { toRegex: true })); //=&gt; [1-9]|10\n</code></pre> <p>Params</p> <ul> <li><code>from</code>: {String|Number} the number or letter to start with</li> <li><code>to</code>: {String|Number} the number or letter to end with</li> <li><code>step</code>: {String|Number|Object|Function} Optionally pass a step to use.</li> <li><code>options</code>: {Object|Function}: See all available options</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/fill-range/#examples","title":"Examples","text":"<p>By default, an array of values is returned.</p> <p>Alphabetical ranges</p> <pre><code>console.log(fill('a', 'e')); //=&gt; ['a', 'b', 'c', 'd', 'e']\nconsole.log(fill('A', 'E')); //=&gt; [ 'A', 'B', 'C', 'D', 'E' ]\n</code></pre> <p>Numerical ranges</p> <p>Numbers can be defined as actual numbers or strings.</p> <pre><code>console.log(fill(1, 5));     //=&gt; [ 1, 2, 3, 4, 5 ]\nconsole.log(fill('1', '5')); //=&gt; [ 1, 2, 3, 4, 5 ]\n</code></pre> <p>Negative ranges</p> <p>Numbers can be defined as actual numbers or strings.</p> <pre><code>console.log(fill('-5', '-1')); //=&gt; [ '-5', '-4', '-3', '-2', '-1' ]\nconsole.log(fill('-5', '5')); //=&gt; [ '-5', '-4', '-3', '-2', '-1', '0', '1', '2', '3', '4', '5' ]\n</code></pre> <p>Steps (increments)</p> <pre><code>// numerical ranges with increments\nconsole.log(fill('0', '25', 4)); //=&gt; [ '0', '4', '8', '12', '16', '20', '24' ]\nconsole.log(fill('0', '25', 5)); //=&gt; [ '0', '5', '10', '15', '20', '25' ]\nconsole.log(fill('0', '25', 6)); //=&gt; [ '0', '6', '12', '18', '24' ]\n\n// alphabetical ranges with increments\nconsole.log(fill('a', 'z', 4)); //=&gt; [ 'a', 'e', 'i', 'm', 'q', 'u', 'y' ]\nconsole.log(fill('a', 'z', 5)); //=&gt; [ 'a', 'f', 'k', 'p', 'u', 'z' ]\nconsole.log(fill('a', 'z', 6)); //=&gt; [ 'a', 'g', 'm', 's', 'y' ]\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/fill-range/#options","title":"Options","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/fill-range/#optionsstep","title":"options.step","text":"<p>Type: <code>number</code> (formatted as a string or number)</p> <p>Default: <code>undefined</code></p> <p>Description: The increment to use for the range. Can be used with letters or numbers.</p> <p>Example(s)</p> <pre><code>// numbers\nconsole.log(fill('1', '10', 2)); //=&gt; [ '1', '3', '5', '7', '9' ]\nconsole.log(fill('1', '10', 3)); //=&gt; [ '1', '4', '7', '10' ]\nconsole.log(fill('1', '10', 4)); //=&gt; [ '1', '5', '9' ]\n\n// letters\nconsole.log(fill('a', 'z', 5)); //=&gt; [ 'a', 'f', 'k', 'p', 'u', 'z' ]\nconsole.log(fill('a', 'z', 7)); //=&gt; [ 'a', 'h', 'o', 'v' ]\nconsole.log(fill('a', 'z', 9)); //=&gt; [ 'a', 'j', 's' ]\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/fill-range/#optionsstrictranges","title":"options.strictRanges","text":"<p>Type: <code>boolean</code></p> <p>Default: <code>false</code></p> <p>Description: By default, <code>null</code> is returned when an invalid range is passed. Enable this option to throw a <code>RangeError</code> on invalid ranges.</p> <p>Example(s)</p> <p>The following are all invalid:</p> <pre><code>fill('1.1', '2');   // decimals not supported in ranges\nfill('a', '2');     // incompatible range values\nfill(1, 10, 'foo'); // invalid \"step\" argument\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/fill-range/#optionsstringify","title":"options.stringify","text":"<p>Type: <code>boolean</code></p> <p>Default: <code>undefined</code></p> <p>Description: Cast all returned values to strings. By default, integers are returned as numbers.</p> <p>Example(s)</p> <pre><code>console.log(fill(1, 5));                    //=&gt; [ 1, 2, 3, 4, 5 ]\nconsole.log(fill(1, 5, { stringify: true })); //=&gt; [ '1', '2', '3', '4', '5' ]\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/fill-range/#optionstoregex","title":"options.toRegex","text":"<p>Type: <code>boolean</code></p> <p>Default: <code>undefined</code></p> <p>Description: Create a regex-compatible source string, instead of expanding values to an array.</p> <p>Example(s)</p> <pre><code>// alphabetical range\nconsole.log(fill('a', 'e', { toRegex: true })); //=&gt; '[a-e]'\n// alphabetical with step\nconsole.log(fill('a', 'z', 3, { toRegex: true })); //=&gt; 'a|d|g|j|m|p|s|v|y'\n// numerical range\nconsole.log(fill('1', '100', { toRegex: true })); //=&gt; '[1-9]|[1-9][0-9]|100'\n// numerical range with zero padding\nconsole.log(fill('000001', '100000', { toRegex: true }));\n//=&gt; '0{5}[1-9]|0{4}[1-9][0-9]|0{3}[1-9][0-9]{2}|0{2}[1-9][0-9]{3}|0[1-9][0-9]{4}|100000'\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/fill-range/#optionstransform","title":"options.transform","text":"<p>Type: <code>function</code></p> <p>Default: <code>undefined</code></p> <p>Description: Customize each value in the returned array (or string). (you can also pass this function as the last argument to <code>fill()</code>).</p> <p>Example(s)</p> <pre><code>// add zero padding\nconsole.log(fill(1, 5, value =&gt; String(value).padStart(4, '0')));\n//=&gt; ['0001', '0002', '0003', '0004', '0005']\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/fill-range/#about","title":"About","text":"Contributing  Pull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).   Running Tests  Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:  <pre><code>$ npm install &amp;&amp; npm test\n</code></pre> Building docs  _(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_  To generate the readme, run the following command:  <pre><code>$ npm install -g verbose/verb#dev verb-generate-readme &amp;&amp; verb\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/fill-range/#contributors","title":"Contributors","text":"Commits Contributor 116 jonschlinkert 4 paulmillr 2 realityking 2 bluelovers 1 edorivai 1 wtgtybhertgeghgtwtg"},{"location":"system-desing/crud-app/JS/server/node_modules/fill-range/#author","title":"Author","text":"<p>Jon Schlinkert</p> <ul> <li>GitHub Profile</li> <li>Twitter Profile</li> <li>LinkedIn Profile</li> </ul> <p>Please consider supporting me on Patreon, or start your own Patreon page!</p> <p> </p>"},{"location":"system-desing/crud-app/JS/server/node_modules/fill-range/#license","title":"License","text":"<p>Copyright \u00a9 2019, Jon Schlinkert. Released under the MIT License.</p> <p>This file was generated by verb-generate-readme, v0.8.0, on April 08, 2019.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/","title":"finalhandler","text":"<p>Node.js function to invoke as the final step to respond to HTTP request.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/#installation","title":"Installation","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install finalhandler\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/#api","title":"API","text":"<pre><code>var finalhandler = require('finalhandler')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/#finalhandlerreq-res-options","title":"finalhandler(req, res, [options])","text":"<p>Returns function to be invoked as the final step for the given <code>req</code> and <code>res</code>. This function is to be invoked as <code>fn(err)</code>. If <code>err</code> is falsy, the handler will write out a 404 response to the <code>res</code>. If it is truthy, an error response will be written out to the <code>res</code> or <code>res</code> will be terminated if a response has already started.</p> <p>When an error is written, the following information is added to the response:</p> <ul> <li>The <code>res.statusCode</code> is set from <code>err.status</code> (or <code>err.statusCode</code>). If     this value is outside the 4xx or 5xx range, it will be set to 500.</li> <li>The <code>res.statusMessage</code> is set according to the status code.</li> <li>The body will be the HTML of the status code message if <code>env</code> is     <code>'production'</code>, otherwise will be <code>err.stack</code>.</li> <li>Any headers specified in an <code>err.headers</code> object.</li> </ul> <p>The final handler will also unpipe anything from <code>req</code> when it is invoked.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/#optionsenv","title":"options.env","text":"<p>By default, the environment is determined by <code>NODE_ENV</code> variable, but it can be overridden by this option.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/#optionsonerror","title":"options.onerror","text":"<p>Provide a function to be called with the <code>err</code> when it exists. Can be used for writing errors to a central location without excessive function generation. Called as <code>onerror(err, req, res)</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/#examples","title":"Examples","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/#always-404","title":"always 404","text":"<pre><code>var finalhandler = require('finalhandler')\nvar http = require('http')\n\nvar server = http.createServer(function (req, res) {\n  var done = finalhandler(req, res)\n  done()\n})\n\nserver.listen(3000)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/#perform-simple-action","title":"perform simple action","text":"<pre><code>var finalhandler = require('finalhandler')\nvar fs = require('fs')\nvar http = require('http')\n\nvar server = http.createServer(function (req, res) {\n  var done = finalhandler(req, res)\n\n  fs.readFile('index.html', function (err, buf) {\n    if (err) return done(err)\n    res.setHeader('Content-Type', 'text/html')\n    res.end(buf)\n  })\n})\n\nserver.listen(3000)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/#use-with-middleware-style-functions","title":"use with middleware-style functions","text":"<pre><code>var finalhandler = require('finalhandler')\nvar http = require('http')\nvar serveStatic = require('serve-static')\n\nvar serve = serveStatic('public')\n\nvar server = http.createServer(function (req, res) {\n  var done = finalhandler(req, res)\n  serve(req, res, done)\n})\n\nserver.listen(3000)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/#keep-log-of-all-errors","title":"keep log of all errors","text":"<pre><code>var finalhandler = require('finalhandler')\nvar fs = require('fs')\nvar http = require('http')\n\nvar server = http.createServer(function (req, res) {\n  var done = finalhandler(req, res, { onerror: logerror })\n\n  fs.readFile('index.html', function (err, buf) {\n    if (err) return done(err)\n    res.setHeader('Content-Type', 'text/html')\n    res.end(buf)\n  })\n})\n\nserver.listen(3000)\n\nfunction logerror (err) {\n  console.error(err.stack || err.toString())\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/","title":"v2.1.0 / 2025-03-05","text":"<ul> <li>deps: <ul> <li>use caret notation for dependency versions</li> <li>encodeurl@^2.0.0</li> <li>debug@^4.4.0</li> </ul> </li> <li>remove <code>ServerResponse.headersSent</code> support check</li> <li>remove setImmediate support check</li> <li>update test dependencies</li> <li>remove unnecessary devDependency <code>safe-buffer</code></li> <li>remove <code>unpipe</code> package and use native <code>unpipe()</code> method</li> <li>remove unnecessary devDependency <code>readable-stream</code></li> <li>refactor: use object spread to copy error headers</li> <li>refactor: use replaceAll instead of replace with a regex</li> <li>refactor: replace setHeaders function with optimized inline header setting</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#v200-2024-09-02","title":"v2.0.0 / 2024-09-02","text":"<ul> <li>drop support for node &lt;18</li> <li>ignore status message for HTTP/2 (#53) </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#v131-2024-09-11","title":"v1.3.1 / 2024-09-11","text":"<ul> <li>deps: encodeurl@~2.0.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#v130-2024-09-03","title":"v1.3.0 / 2024-09-03","text":"<ul> <li>ignore status message for HTTP/2 (#53)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#v121-2024-09-02","title":"v1.2.1 / 2024-09-02","text":"<ul> <li>Gracefully handle when handling an error and socket is null</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#120-2022-03-22","title":"1.2.0 / 2022-03-22","text":"<ul> <li>Remove set content headers that break response</li> <li>deps: on-finished@2.4.1</li> <li>deps: statuses@2.0.1<ul> <li>Rename <code>425 Unordered Collection</code> to standard <code>425 Too Early</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#112-2019-05-09","title":"1.1.2 / 2019-05-09","text":"<ul> <li>Set stricter <code>Content-Security-Policy</code> header</li> <li>deps: parseurl@~1.3.3</li> <li>deps: statuses@~1.5.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#111-2018-03-06","title":"1.1.1 / 2018-03-06","text":"<ul> <li>Fix 404 output for bad / missing pathnames</li> <li>deps: encodeurl@~1.0.2<ul> <li>Fix encoding <code>%</code> as last character</li> </ul> </li> <li>deps: statuses@~1.4.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#110-2017-09-24","title":"1.1.0 / 2017-09-24","text":"<ul> <li>Use <code>res.headersSent</code> when available</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#106-2017-09-22","title":"1.0.6 / 2017-09-22","text":"<ul> <li>deps: debug@2.6.9</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#105-2017-09-15","title":"1.0.5 / 2017-09-15","text":"<ul> <li>deps: parseurl@~1.3.2<ul> <li>perf: reduce overhead for full URLs</li> <li>perf: unroll the \"fast-path\" <code>RegExp</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#104-2017-08-03","title":"1.0.4 / 2017-08-03","text":"<ul> <li>deps: debug@2.6.8</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#103-2017-05-16","title":"1.0.3 / 2017-05-16","text":"<ul> <li>deps: debug@2.6.7<ul> <li>deps: ms@2.0.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#102-2017-04-22","title":"1.0.2 / 2017-04-22","text":"<ul> <li>deps: debug@2.6.4<ul> <li>deps: ms@0.7.3</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#101-2017-03-21","title":"1.0.1 / 2017-03-21","text":"<ul> <li>Fix missing <code>&lt;/html&gt;</code> in HTML document</li> <li>deps: debug@2.6.3<ul> <li>Fix: <code>DEBUG_MAX_ARRAY_LENGTH</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#100-2017-02-15","title":"1.0.0 / 2017-02-15","text":"<ul> <li>Fix exception when <code>err</code> cannot be converted to a string</li> <li>Fully URL-encode the pathname in the 404 message</li> <li>Only include the pathname in the 404 message</li> <li>Send complete HTML document</li> <li>Set <code>Content-Security-Policy: default-src 'self'</code> header</li> <li>deps: debug@2.6.1<ul> <li>Allow colors in workers</li> <li>Deprecated <code>DEBUG_FD</code> environment variable set to <code>3</code> or higher</li> <li>Fix error when running under React Native</li> <li>Use same color for same namespace</li> <li>deps: ms@0.7.2</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#051-2016-11-12","title":"0.5.1 / 2016-11-12","text":"<ul> <li>Fix exception when <code>err.headers</code> is not an object</li> <li>deps: statuses@~1.3.1</li> <li>perf: hoist regular expressions</li> <li>perf: remove duplicate validation path</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#050-2016-06-15","title":"0.5.0 / 2016-06-15","text":"<ul> <li>Change invalid or non-numeric status code to 500</li> <li>Overwrite status message to match set status code</li> <li>Prefer <code>err.statusCode</code> if <code>err.status</code> is invalid</li> <li>Set response headers from <code>err.headers</code> object</li> <li>Use <code>statuses</code> instead of <code>http</code> module for status messages<ul> <li>Includes all defined status messages</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#041-2015-12-02","title":"0.4.1 / 2015-12-02","text":"<ul> <li>deps: escape-html@~1.0.3<ul> <li>perf: enable strict mode</li> <li>perf: optimize string replacement</li> <li>perf: use faster string coercion</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#040-2015-06-14","title":"0.4.0 / 2015-06-14","text":"<ul> <li>Fix a false-positive when unpiping in Node.js 0.8</li> <li>Support <code>statusCode</code> property on <code>Error</code> objects</li> <li>Use <code>unpipe</code> module for unpiping requests</li> <li>deps: escape-html@1.0.2</li> <li>deps: on-finished@~2.3.0<ul> <li>Add defined behavior for HTTP <code>CONNECT</code> requests</li> <li>Add defined behavior for HTTP <code>Upgrade</code> requests</li> <li>deps: ee-first@1.1.1</li> </ul> </li> <li>perf: enable strict mode</li> <li>perf: remove argument reassignment</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#036-2015-05-11","title":"0.3.6 / 2015-05-11","text":"<ul> <li>deps: debug@~2.2.0<ul> <li>deps: ms@0.7.1</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#035-2015-04-22","title":"0.3.5 / 2015-04-22","text":"<ul> <li>deps: on-finished@~2.2.1<ul> <li>Fix <code>isFinished(req)</code> when data buffered</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#034-2015-03-15","title":"0.3.4 / 2015-03-15","text":"<ul> <li>deps: debug@~2.1.3<ul> <li>Fix high intensity foreground color for bold</li> <li>deps: ms@0.7.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#033-2015-01-01","title":"0.3.3 / 2015-01-01","text":"<ul> <li>deps: debug@~2.1.1</li> <li>deps: on-finished@~2.2.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#032-2014-10-22","title":"0.3.2 / 2014-10-22","text":"<ul> <li>deps: on-finished@~2.1.1<ul> <li>Fix handling of pipelined requests</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#031-2014-10-16","title":"0.3.1 / 2014-10-16","text":"<ul> <li>deps: debug@~2.1.0<ul> <li>Implement <code>DEBUG_FD</code> env variable support</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#030-2014-09-17","title":"0.3.0 / 2014-09-17","text":"<ul> <li>Terminate in progress response only on error</li> <li>Use <code>on-finished</code> to determine request status</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#020-2014-09-03","title":"0.2.0 / 2014-09-03","text":"<ul> <li>Set <code>X-Content-Type-Options: nosniff</code> header</li> <li>deps: debug@~2.0.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#010-2014-07-16","title":"0.1.0 / 2014-07-16","text":"<ul> <li>Respond after request fully read<ul> <li>prevents hung responses and socket hang ups</li> </ul> </li> <li>deps: debug@1.0.4</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#003-2014-07-11","title":"0.0.3 / 2014-07-11","text":"<ul> <li>deps: debug@1.0.3<ul> <li>Add support for multiple wildcards in namespaces</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#002-2014-06-19","title":"0.0.2 / 2014-06-19","text":"<ul> <li>Handle invalid status codes</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#001-2014-06-05","title":"0.0.1 / 2014-06-05","text":"<ul> <li>deps: debug@1.0.2</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/finalhandler/HISTORY/#000-2014-06-05","title":"0.0.0 / 2014-06-05","text":"<ul> <li>Extracted from connect/express</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/forwarded/","title":"forwarded","text":"<p>Parse HTTP X-Forwarded-For header</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/forwarded/#installation","title":"Installation","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install forwarded\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/forwarded/#api","title":"API","text":"<pre><code>var forwarded = require('forwarded')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/forwarded/#forwardedreq","title":"forwarded(req)","text":"<pre><code>var addresses = forwarded(req)\n</code></pre> <p>Parse the <code>X-Forwarded-For</code> header from the request. Returns an array of the addresses, including the socket address for the <code>req</code>, in reverse order (i.e. index <code>0</code> is the socket address and the last index is the furthest address, typically the end-user).</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/forwarded/#testing","title":"Testing","text":"<pre><code>$ npm test\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/forwarded/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/forwarded/HISTORY/","title":"0.2.0 / 2021-05-31","text":"<ul> <li>Use <code>req.socket</code> over deprecated <code>req.connection</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/forwarded/HISTORY/#012-2017-09-14","title":"0.1.2 / 2017-09-14","text":"<ul> <li>perf: improve header parsing</li> <li>perf: reduce overhead when no <code>X-Forwarded-For</code> header</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/forwarded/HISTORY/#011-2017-09-10","title":"0.1.1 / 2017-09-10","text":"<ul> <li>Fix trimming leading / trailing OWS</li> <li>perf: hoist regular expression</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/forwarded/HISTORY/#010-2014-09-21","title":"0.1.0 / 2014-09-21","text":"<ul> <li>Initial release</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/","title":"fresh","text":"<p>HTTP response freshness testing</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/#installation","title":"Installation","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install fresh\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/#api","title":"API","text":"<pre><code>var fresh = require('fresh')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/#freshreqheaders-resheaders","title":"fresh(reqHeaders, resHeaders)","text":"<p>Check freshness of the response using request and response headers.</p> <p>When the response is still \"fresh\" in the client's cache <code>true</code> is returned, otherwise <code>false</code> is returned to indicate that the client cache is now stale and the full response should be sent.</p> <p>When a client sends the <code>Cache-Control: no-cache</code> request header to indicate an end-to-end reload request, this module will return <code>false</code> to make handling these requests transparent.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/#known-issues","title":"Known Issues","text":"<p>This module is designed to only follow the HTTP specifications, not to work-around all kinda of client bugs (especially since this module typically does not receive enough information to understand what the client actually is).</p> <p>There is a known issue that in certain versions of Safari, Safari will incorrectly make a request that allows this module to validate freshness of the resource even when Safari does not have a representation of the resource in the cache. The module jumanji can be used in an Express application to work-around this issue and also provides links to further reading on this Safari bug.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/#example","title":"Example","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/#api-usage","title":"API usage","text":"<pre><code>var reqHeaders = { 'if-none-match': '\"foo\"' }\nvar resHeaders = { etag: '\"bar\"' }\nfresh(reqHeaders, resHeaders)\n// =&gt; false\n\nvar reqHeaders = { 'if-none-match': '\"foo\"' }\nvar resHeaders = { etag: '\"foo\"' }\nfresh(reqHeaders, resHeaders)\n// =&gt; true\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/#using-with-nodejs-http-server","title":"Using with Node.js http server","text":"<pre><code>var fresh = require('fresh')\nvar http = require('http')\n\nvar server = http.createServer(function (req, res) {\n  // perform server logic\n  // ... including adding ETag / Last-Modified response headers\n\n  if (isFresh(req, res)) {\n    // client has a fresh copy of resource\n    res.statusCode = 304\n    res.end()\n    return\n  }\n\n  // send the resource\n  res.statusCode = 200\n  res.end('hello, world!')\n})\n\nfunction isFresh (req, res) {\n  return fresh(req.headers, {\n    etag: res.getHeader('ETag'),\n    'last-modified': res.getHeader('Last-Modified')\n  })\n}\n\nserver.listen(3000)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/HISTORY/","title":"2.0.0 - 2024-09-04","text":"<ul> <li>Drop support for Node.js &lt;18</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/HISTORY/#100-2024-09-04","title":"1.0.0 - 2024-09-04","text":"<ul> <li>Drop support for Node.js below 0.8</li> <li>Fix: Ignore <code>If-Modified-Since</code> in the presence of <code>If-None-Match</code>, according to spec. Fixes #35</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/HISTORY/#052-2017-09-13","title":"0.5.2 / 2017-09-13","text":"<ul> <li>Fix regression matching multiple ETags in <code>If-None-Match</code></li> <li>perf: improve <code>If-None-Match</code> token parsing</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/HISTORY/#051-2017-09-11","title":"0.5.1 / 2017-09-11","text":"<ul> <li>Fix handling of modified headers with invalid dates</li> <li>perf: improve ETag match loop</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/HISTORY/#050-2017-02-21","title":"0.5.0 / 2017-02-21","text":"<ul> <li>Fix incorrect result when <code>If-None-Match</code> has both <code>*</code> and ETags</li> <li>Fix weak <code>ETag</code> matching to match spec</li> <li>perf: delay reading header values until needed</li> <li>perf: skip checking modified time if ETag check failed</li> <li>perf: skip parsing <code>If-None-Match</code> when no <code>ETag</code> header</li> <li>perf: use <code>Date.parse</code> instead of <code>new Date</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/HISTORY/#040-2017-02-05","title":"0.4.0 / 2017-02-05","text":"<ul> <li>Fix false detection of <code>no-cache</code> request directive</li> <li>perf: enable strict mode</li> <li>perf: hoist regular expressions</li> <li>perf: remove duplicate conditional</li> <li>perf: remove unnecessary boolean coercions</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/HISTORY/#030-2015-05-12","title":"0.3.0 / 2015-05-12","text":"<ul> <li>Add weak <code>ETag</code> matching support</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/HISTORY/#024-2014-09-07","title":"0.2.4 / 2014-09-07","text":"<ul> <li>Support Node.js 0.6</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/HISTORY/#023-2014-09-07","title":"0.2.3 / 2014-09-07","text":"<ul> <li>Move repository to jshttp</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/HISTORY/#022-2014-02-19","title":"0.2.2 / 2014-02-19","text":"<ul> <li>Revert \"Fix for blank page on Safari reload\"</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/HISTORY/#021-2014-01-29","title":"0.2.1 / 2014-01-29","text":"<ul> <li>Fix for blank page on Safari reload</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/HISTORY/#020-2013-08-11","title":"0.2.0 / 2013-08-11","text":"<ul> <li>Return stale for <code>Cache-Control: no-cache</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/HISTORY/#010-2012-06-15","title":"0.1.0 / 2012-06-15","text":"<ul> <li>Add <code>If-None-Match: *</code> support</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/fresh/HISTORY/#001-2012-06-10","title":"0.0.1 / 2012-06-10","text":"<ul> <li>Initial release</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/fsevents/","title":"fsevents","text":"<p>Native access to MacOS FSEvents in Node.js</p> <p>The FSEvents API in MacOS allows applications to register for notifications of changes to a given directory tree. It is a very fast and lightweight alternative to kqueue.</p> <p>This is a low-level library. For a cross-platform file watching module that uses fsevents, check out Chokidar.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/fsevents/#usage","title":"Usage","text":"<pre><code>npm install fsevents\n</code></pre> <p>Supports only Node.js v8.16 and higher.</p> <pre><code>const fsevents = require('fsevents');\n\n// To start observation\nconst stop = fsevents.watch(__dirname, (path, flags, id) =&gt; {\n  const info = fsevents.getInfo(path, flags);\n});\n\n// To end observation\nstop();\n</code></pre> <p>Important note: The API behaviour is slightly different from typical JS APIs. The <code>stop</code> function must be retrieved and stored somewhere, even if you don't plan to stop the watcher. If you forget it, the garbage collector will eventually kick in, the watcher will be unregistered, and your callbacks won't be called anymore.</p> <p>The callback passed as the second parameter to <code>.watch</code> get's called whenever the operating system detects a a change in the file system. It takes three arguments:</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/fsevents/#fseventswatchdirname-string-path-string-flags-number-id-string-void-promiseundefined","title":"<code>fsevents.watch(dirname: string, (path: string, flags: number, id: string) =&gt; void): () =&gt; Promise&lt;undefined&gt;</code>","text":"<ul> <li><code>path: string</code> - the item in the filesystem that have been changed</li> <li><code>flags: number</code> - a numeric value describing what the change was</li> <li><code>id: string</code> - an unique-id identifying this specific event</li> </ul> <p>Returns closer callback which when called returns a Promise resolving when the watcher process has been shut down.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/fsevents/#fseventsgetinfopath-string-flags-number-id-string-fseventinfo","title":"<code>fsevents.getInfo(path: string, flags: number, id: string): FsEventInfo</code>","text":"<p>The <code>getInfo</code> function takes the <code>path</code>, <code>flags</code> and <code>id</code> arguments and converts those parameters into a structure that is easier to digest to determine what the change was.</p> <p>The <code>FsEventsInfo</code> has the following shape:</p> <pre><code>/**\n * @typedef {'created'|'modified'|'deleted'|'moved'|'root-changed'|'cloned'|'unknown'} FsEventsEvent\n * @typedef {'file'|'directory'|'symlink'} FsEventsType\n */\n{\n  \"event\": \"created\", // {FsEventsEvent}\n  \"path\": \"file.txt\",\n  \"type\": \"file\",    // {FsEventsType}\n  \"changes\": {\n    \"inode\": true,   // Had iNode Meta-Information changed\n    \"finder\": false, // Had Finder Meta-Data changed\n    \"access\": false, // Had access permissions changed\n    \"xattrs\": false  // Had xAttributes changed\n  },\n  \"flags\": 0x100000000\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/fsevents/#changelog","title":"Changelog","text":"<ul> <li>v2.3 supports Apple Silicon ARM CPUs</li> <li>v2 supports node 8.16+ and reduces package size massively</li> <li>v1.2.8 supports node 6+</li> <li>v1.2.7 supports node 4+</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/fsevents/#troubleshooting","title":"Troubleshooting","text":"<ul> <li>I'm getting <code>EBADPLATFORM</code> <code>Unsupported platform for fsevents</code> error.</li> <li>It's fine, nothing is broken. fsevents is macos-only. Other platforms are skipped. If you want to hide this warning, report a bug to NPM bugtracker asking them to hide ebadplatform warnings by default.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/fsevents/#license","title":"License","text":"<p>The MIT License Copyright (C) 2010-2020 by Philipp Dunkel, Ben Noordhuis, Elan Shankar, Paul Miller \u2014 see LICENSE file.</p> <p>Visit our GitHub page and NPM Page</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/","title":"function-bind","text":"<p>Implementation of function.prototype.bind</p> <p>Old versions of phantomjs, Internet Explorer &lt; 9, and node &lt; 0.6 don't support <code>Function.prototype.bind</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/#example","title":"Example","text":"<pre><code>Function.prototype.bind = require(\"function-bind\")\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/#installation","title":"Installation","text":"<p><code>npm install function-bind</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/#contributors","title":"Contributors","text":"<ul> <li>Raynos</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/#mit-licenced","title":"MIT Licenced","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#v112-2023-10-12","title":"v1.1.2 - 2023-10-12","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#merged","title":"Merged","text":"<ul> <li>Point to the correct file <code>#16</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#commits","title":"Commits","text":"<ul> <li>[Tests] migrate tests to Github Actions <code>4f8b57c</code></li> <li>[Tests] remove <code>jscs</code> <code>90eb2ed</code></li> <li>[meta] update <code>.gitignore</code> <code>53fcdc3</code></li> <li>[Tests] up to <code>node</code> <code>v11.10</code>, <code>v10.15</code>, <code>v9.11</code>, <code>v8.15</code>, <code>v6.16</code>, <code>v4.9</code>; use <code>nvm install-latest-npm</code>; run audit script in tests <code>1fe8f6e</code></li> <li>[meta] add <code>auto-changelog</code> <code>1921fcb</code></li> <li>[Robustness] remove runtime dependency on all builtins except <code>.apply</code> <code>f743e61</code></li> <li>Docs: enable badges; update wording <code>503cb12</code></li> <li>[readme] update badges <code>290c5db</code></li> <li>[Tests] switch to nyc for coverage <code>ea360ba</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>tape</code> <code>cae5e9e</code></li> <li>[meta] add <code>funding</code> field; create FUNDING.yml <code>c9f4274</code></li> <li>[Tests] fix eslint errors from #15 <code>f69aaa2</code></li> <li>[actions] fix permissions <code>99a0cd9</code></li> <li>[meta] use <code>npmignore</code> to autogenerate an npmignore file <code>f03b524</code></li> <li>[Dev\u00a0Deps] update\u00a0<code>@ljharb/eslint\u2011config</code>, <code>eslint</code>,\u00a0<code>tape</code> <code>7af9300</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>covert</code>, <code>tape</code> <code>64a9127</code></li> <li>[Tests] use <code>aud</code> instead of <code>npm audit</code> <code>e75069c</code></li> <li>[Dev Deps] update <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>tape</code> <code>d03555c</code></li> <li>[meta] add <code>safe-publish-latest</code> <code>9c8f809</code></li> <li>[Dev Deps] update <code>@ljharb/eslint-config</code>, <code>tape</code> <code>baf6893</code></li> <li>[meta] create SECURITY.md <code>4db1779</code></li> <li>[Tests] add <code>npm run audit</code> <code>c8b38ec</code></li> <li>Revert \"Point to the correct file\" <code>05cdf0f</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#v111-2017-08-28","title":"v1.1.1 - 2017-08-28","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#commits_1","title":"Commits","text":"<ul> <li>[Tests] up to <code>node</code> <code>v8</code>; newer npm breaks on older node; fix scripts <code>817f7d2</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>jscs</code>, <code>tape</code>, <code>@ljharb/eslint-config</code> <code>854288b</code></li> <li>[Dev Deps] update <code>tape</code>, <code>jscs</code>, <code>eslint</code>, <code>@ljharb/eslint-config</code> <code>83e639f</code></li> <li>Only apps should have lockfiles <code>5ed97f5</code></li> <li>Use a SPDX-compliant \u201clicense\u201d field. <code>5feefea</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#v110-2016-02-14","title":"v1.1.0 - 2016-02-14","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#commits_2","title":"Commits","text":"<ul> <li>Update <code>eslint</code>, <code>tape</code>; use my personal shared <code>eslint</code> config <code>9c9062a</code></li> <li>Add <code>npm run eslint</code> <code>dd96c56</code></li> <li>[New] return the native <code>bind</code> when available. <code>82186e0</code></li> <li>[Dev Deps] update <code>tape</code>, <code>jscs</code>, <code>eslint</code>, <code>@ljharb/eslint-config</code> <code>a3dd767</code></li> <li>Update <code>eslint</code> <code>3dae2f7</code></li> <li>Update <code>tape</code>, <code>covert</code>, <code>jscs</code> <code>a181eee</code></li> <li>[Tests] up to <code>node</code> <code>v5.6</code>, <code>v4.3</code> <code>964929a</code></li> <li>Test up to <code>io.js</code> <code>v2.1</code> <code>2be7310</code></li> <li>Update <code>tape</code>, <code>jscs</code>, <code>eslint</code>, <code>@ljharb/eslint-config</code> <code>45f3d68</code></li> <li>[Dev Deps] update <code>tape</code>, <code>jscs</code> <code>6e1340d</code></li> <li>[Tests] up to <code>io.js</code> <code>v3.3</code>, <code>node</code> <code>v4.1</code> <code>d9bad2b</code></li> <li>Update <code>eslint</code> <code>935590c</code></li> <li>[Dev Deps] update <code>jscs</code>, <code>eslint</code>, <code>@ljharb/eslint-config</code> <code>8c9a1ef</code></li> <li>Test on <code>io.js</code> <code>v2.2</code> <code>9a3a38c</code></li> <li>Run <code>travis-ci</code> tests on <code>iojs</code> and <code>node</code> v0.12; speed up builds; allow 0.8 failures. <code>69afc26</code></li> <li>[Dev Deps] Update <code>tape</code>, <code>eslint</code> <code>36c1be0</code></li> <li>Update <code>tape</code>, <code>jscs</code> <code>98d8303</code></li> <li>Update <code>jscs</code> <code>9633a4e</code></li> <li>Update <code>tape</code>, <code>jscs</code> <code>c80ef0f</code></li> <li>Test up to <code>io.js</code> <code>v3.0</code> <code>7e2c853</code></li> <li>Test on <code>io.js</code> <code>v2.4</code> <code>5a199a2</code></li> <li>Test on <code>io.js</code> <code>v2.3</code> <code>a511b88</code></li> <li>Fixing a typo from 822b4e1938db02dc9584aa434fd3a45cb20caf43 <code>732d6b6</code></li> <li>Update <code>jscs</code> <code>da52a48</code></li> <li>Lock covert to v1.0.0. <code>d6150fd</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#v102-2014-10-04","title":"v1.0.2 - 2014-10-04","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#v101-2014-10-03","title":"v1.0.1 - 2014-10-03","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#merged_1","title":"Merged","text":"<ul> <li>make CI build faster <code>#3</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#commits_3","title":"Commits","text":"<ul> <li>Using my standard jscs.json <code>d8ee94c</code></li> <li>Adding <code>npm run lint</code> <code>7571ab7</code></li> <li>Using consistent indentation <code>e91a1b1</code></li> <li>Updating jscs <code>7e17892</code></li> <li>Using consistent quotes <code>c50b57f</code></li> <li>Adding keywords <code>cb94631</code></li> <li>Directly export a function expression instead of using a declaration, and relying on hoisting. <code>5a33c5f</code></li> <li>Naming npm URL and badge in README; use SVG <code>2aef8fc</code></li> <li>Naming deps URLs in README <code>04228d7</code></li> <li>Naming travis-ci URLs in README; using SVG <code>62c810c</code></li> <li>Make sure functions are invoked correctly (also passing coverage tests) <code>2b289b4</code></li> <li>Removing the strict mode pragmas; they make tests fail. <code>1aa701d</code></li> <li>Adding myself as a contributor <code>85fd57b</code></li> <li>Adding strict mode pragmas <code>915b08e</code></li> <li>Adding devDeps URLs to README <code>4ccc731</code></li> <li>Fixing the description. <code>a7a472c</code></li> <li>Using a function expression instead of a function declaration. <code>b5d3e4e</code></li> <li>Updating tape <code>f086be6</code></li> <li>Updating jscs <code>5f9bdb3</code></li> <li>Updating jscs <code>9b409ba</code></li> <li>Run coverage as part of tests. <code>8e1b6d4</code></li> <li>Run linter as part of tests <code>c1ca83f</code></li> <li>Updating covert <code>701e837</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#v100-2014-08-09","title":"v1.0.0 - 2014-08-09","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#commits_4","title":"Commits","text":"<ul> <li>Make sure old and unstable nodes don't fail Travis <code>27adca3</code></li> <li>Fixing an issue when the bound function is called as a constructor in ES3. <code>e20122d</code></li> <li>Adding <code>npm run coverage</code> <code>a2e29c4</code></li> <li>Updating tape <code>b741168</code></li> <li>Upgrading tape <code>63631a0</code></li> <li>Updating tape <code>363cb46</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#v020-2014-03-23","title":"v0.2.0 - 2014-03-23","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/function-bind/CHANGELOG/#commits_5","title":"Commits","text":"<ul> <li>Updating test coverage to match es5-shim. <code>aa94d44</code></li> <li>initial <code>942ee07</code></li> <li>Setting the bound function's length properly. <code>079f46a</code></li> <li>Ensuring that some older browsers will throw when given a regex. <code>36ac55b</code></li> <li>Removing npm scripts that don't have dependencies <code>9d2be60</code></li> <li>Updating tape <code>297a4ac</code></li> <li>Skipping length tests for now. <code>d9891ea</code></li> <li>don't take my tea <code>dccd930</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/","title":"get-intrinsic","text":"<p>Get and robustly cache all JS language-level intrinsics at first require time.</p> <p>See the syntax described in the JS spec for reference.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/#example","title":"Example","text":"<pre><code>var GetIntrinsic = require('get-intrinsic');\nvar assert = require('assert');\n\n// static methods\nassert.equal(GetIntrinsic('%Math.pow%'), Math.pow);\nassert.equal(Math.pow(2, 3), 8);\nassert.equal(GetIntrinsic('%Math.pow%')(2, 3), 8);\ndelete Math.pow;\nassert.equal(GetIntrinsic('%Math.pow%')(2, 3), 8);\n\n// instance methods\nvar arr = [1];\nassert.equal(GetIntrinsic('%Array.prototype.push%'), Array.prototype.push);\nassert.deepEqual(arr, [1]);\n\narr.push(2);\nassert.deepEqual(arr, [1, 2]);\n\nGetIntrinsic('%Array.prototype.push%').call(arr, 3);\nassert.deepEqual(arr, [1, 2, 3]);\n\ndelete Array.prototype.push;\nGetIntrinsic('%Array.prototype.push%').call(arr, 4);\nassert.deepEqual(arr, [1, 2, 3, 4]);\n\n// missing features\ndelete JSON.parse; // to simulate a real intrinsic that is missing in the environment\nassert.throws(() =&gt; GetIntrinsic('%JSON.parse%'));\nassert.equal(undefined, GetIntrinsic('%JSON.parse%', true));\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/#tests","title":"Tests","text":"<p>Simply clone the repo, <code>npm install</code>, and run <code>npm test</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/#security","title":"Security","text":"<p>Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v130-2025-02-22","title":"v1.3.0 - 2025-02-22","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits","title":"Commits","text":"<ul> <li>[Dev Deps] update <code>es-abstract</code>, <code>es-value-fixtures</code>, <code>for-each</code>, <code>object-inspect</code> <code>9b61553</code></li> <li>[Deps] update <code>call-bind-apply-helpers</code>, <code>es-object-atoms</code>, <code>get-proto</code> <code>a341fee</code></li> <li>[New] add <code>Float16Array</code> <code>de22116</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v127-2025-01-02","title":"v1.2.7 - 2025-01-02","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_1","title":"Commits","text":"<ul> <li>[Refactor] use <code>get-proto</code> directly <code>00ab955</code></li> <li>[Deps] update <code>math-intrinsics</code> <code>c716cdd</code></li> <li>[Dev Deps] update <code>call-bound</code>, <code>es-abstract</code> <code>dc648a6</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v126-2024-12-11","title":"v1.2.6 - 2024-12-11","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_2","title":"Commits","text":"<ul> <li>[Refactor] use <code>math-intrinsics</code> <code>841be86</code></li> <li>[Refactor] use <code>es-object-atoms</code> <code>42057df</code></li> <li>[Deps] update <code>call-bind-apply-helpers</code> <code>45afa24</code></li> <li>[Dev Deps] update <code>call-bound</code> <code>9cba9c6</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v125-2024-12-06","title":"v1.2.5 - 2024-12-06","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_3","title":"Commits","text":"<ul> <li>[actions] split out node 10-20, and 20+ <code>6e2b9dd</code></li> <li>[Refactor] use <code>dunder-proto</code> and <code>call-bind-apply-helpers</code> instead of <code>has-proto</code> <code>c095d17</code></li> <li>[Refactor] use <code>gopd</code> <code>9841d5b</code></li> <li>[Dev Deps] update <code>@ljharb/eslint-config</code>, <code>auto-changelog</code>, <code>es-abstract</code>, <code>es-value-fixtures</code>, <code>gopd</code>, <code>mock-property</code>, <code>object-inspect</code>, <code>tape</code> <code>2d07e01</code></li> <li>[Deps] update <code>gopd</code>, <code>has-proto</code>, <code>has-symbols</code>, <code>hasown</code> <code>974d8bf</code></li> <li>[Dev Deps] update <code>call-bind</code>, <code>es-abstract</code>, <code>tape</code> <code>df9dde1</code></li> <li>[Refactor] cache <code>es-define-property</code> as well <code>43ef543</code></li> <li>[Deps] update <code>has-proto</code>, <code>has-symbols</code>, <code>hasown</code> <code>ad4949d</code></li> <li>[Tests] use <code>call-bound</code> directly <code>ad5c406</code></li> <li>[Deps] update <code>has-proto</code>, <code>hasown</code> <code>45414ca</code></li> <li>[Tests] replace <code>aud</code> with <code>npm audit</code> <code>18d3509</code></li> <li>[Deps] update <code>es-define-property</code> <code>aadaa3b</code></li> <li>[Dev Deps] add missing peer dep <code>c296a16</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v124-2024-02-05","title":"v1.2.4 - 2024-02-05","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_4","title":"Commits","text":"<ul> <li>[Refactor] use all 7 &lt;+ ES6 Errors from <code>es-errors</code> <code>bcac811</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v123-2024-02-03","title":"v1.2.3 - 2024-02-03","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_5","title":"Commits","text":"<ul> <li>[Refactor] use <code>es-errors</code>, so things that only need those do not need <code>get-intrinsic</code> <code>f11db9c</code></li> <li>[Dev Deps] update <code>aud</code>, <code>es-abstract</code>, <code>mock-property</code>, <code>npmignore</code> <code>b7ac7d1</code></li> <li>[meta] simplify <code>exports</code> <code>faa0cc6</code></li> <li>[meta] add missing <code>engines.node</code> <code>774dd0b</code></li> <li>[Dev Deps] update <code>tape</code> <code>5828e8e</code></li> <li>[Robustness] use null objects for lookups <code>eb9a11f</code></li> <li>[meta] add <code>sideEffects</code> flag <code>89bcc7a</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v122-2023-10-20","title":"v1.2.2 - 2023-10-20","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_6","title":"Commits","text":"<ul> <li>[Dev Deps] update <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>call-bind</code>, <code>es-abstract</code>, <code>mock-property</code>, <code>object-inspect</code>, <code>tape</code> <code>f51bcf2</code></li> <li>[Refactor] use <code>hasown</code> instead of <code>has</code> <code>18d14b7</code></li> <li>[Deps] update <code>function-bind</code> <code>6e109c8</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v121-2023-05-13","title":"v1.2.1 - 2023-05-13","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_7","title":"Commits","text":"<ul> <li>[Fix] avoid a crash in envs without <code>__proto__</code> <code>7bad8d0</code></li> <li>[Dev Deps] update <code>es-abstract</code> <code>c60e6b7</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v120-2023-01-19","title":"v1.2.0 - 2023-01-19","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_8","title":"Commits","text":"<ul> <li>[actions] update checkout action <code>ca6b12f</code></li> <li>[Dev Deps] update <code>@ljharb/eslint-config</code>, <code>es-abstract</code>, <code>object-inspect</code>, <code>tape</code> <code>41a3727</code></li> <li>[Fix] ensure <code>Error.prototype</code> is undeniable <code>c511e97</code></li> <li>[Dev Deps] update <code>aud</code>, <code>es-abstract</code>, <code>tape</code> <code>1bef8a8</code></li> <li>[Dev Deps] update <code>aud</code>, <code>es-abstract</code> <code>0d41f16</code></li> <li>[New] add <code>BigInt64Array</code> and <code>BigUint64Array</code> <code>a6cca25</code></li> <li>[Tests] use <code>gopd</code> <code>ecf7722</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v113-2022-09-12","title":"v1.1.3 - 2022-09-12","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_9","title":"Commits","text":"<ul> <li>[Dev Deps] update <code>es-abstract</code>, <code>es-value-fixtures</code>, <code>tape</code> <code>07ff291</code></li> <li>[Fix] properly check for % signs <code>50ac176</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v112-2022-06-08","title":"v1.1.2 - 2022-06-08","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#fixed","title":"Fixed","text":"<ul> <li>[Fix] properly validate against extra % signs <code>#16</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_10","title":"Commits","text":"<ul> <li>[actions] reuse common workflows <code>0972547</code></li> <li>[meta] use <code>npmignore</code> to autogenerate an npmignore file <code>5ba0b51</code></li> <li>[actions] use <code>node/install</code> instead of <code>node/run</code>; use <code>codecov</code> action <code>c364492</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>auto-changelog</code>, <code>es-abstract</code>, <code>object-inspect</code>, <code>tape</code> <code>dc04dad</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>es-abstract</code>, <code>object-inspect</code>, <code>safe-publish-latest</code>, <code>tape</code> <code>1c14059</code></li> <li>[Tests] use <code>mock-property</code> <code>b396ef0</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>auto-changelog</code>, <code>object-inspect</code>, <code>tape</code> <code>c2c758d</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>es-abstract</code>, <code>es-value-fixtures</code>, <code>object-inspect</code>, <code>tape</code> <code>29e3c09</code></li> <li>[actions] update codecov uploader <code>8cbc141</code></li> <li>[Dev Deps] update <code>@ljharb/eslint-config</code>, <code>es-abstract</code>, <code>es-value-fixtures</code>, <code>object-inspect</code>, <code>tape</code> <code>10b6f5c</code></li> <li>[readme] add github actions/codecov badges <code>4e25400</code></li> <li>[Tests] use <code>for-each</code> instead of <code>foreach</code> <code>c05b957</code></li> <li>[Dev Deps] update <code>es-abstract</code> <code>29b05ae</code></li> <li>[meta] use <code>prepublishOnly</code> script for npm 7+ <code>95c285d</code></li> <li>[Deps] update <code>has-symbols</code> <code>593cb4f</code></li> <li>[readme] fix repo URLs <code>1c8305b</code></li> <li>[Deps] update <code>has-symbols</code> <code>c7138b6</code></li> <li>[Dev Deps] remove unused <code>has-bigints</code> <code>bd63aff</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v111-2021-02-03","title":"v1.1.1 - 2021-02-03","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#fixed_1","title":"Fixed","text":"<ul> <li>[meta] export <code>./package.json</code> <code>#9</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_11","title":"Commits","text":"<ul> <li>[readme] flesh out the readme; use <code>evalmd</code> <code>d12f12c</code></li> <li>[eslint] set up proper globals config <code>5a8c098</code></li> <li>[Dev Deps] update <code>eslint</code> <code>7b9a5c0</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v110-2021-01-25","title":"v1.1.0 - 2021-01-25","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#fixed_2","title":"Fixed","text":"<ul> <li>[Refactor] delay <code>Function</code> eval until syntax-derived values are requested <code>#3</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_12","title":"Commits","text":"<ul> <li>[Tests] migrate tests to Github Actions <code>2ab762b</code></li> <li>[meta] do not publish github action workflow files <code>5e7108e</code></li> <li>[Tests] add some coverage <code>01ac7a8</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>call-bind</code>, <code>es-abstract</code>, <code>tape</code>; add <code>call-bind</code> <code>911b672</code></li> <li>[Refactor] rearrange evalled constructors a bit <code>7e7e4bf</code></li> <li>[meta] add Automatic Rebase and Require Allow Edits workflows <code>0199968</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v102-2020-12-17","title":"v1.0.2 - 2020-12-17","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_13","title":"Commits","text":"<ul> <li>[Fix] Throw\u00a0for non\u2011existent\u00a0intrinsics <code>68f873b</code></li> <li>[Fix] Throw\u00a0for non\u2011existent\u00a0segments in the intrinsic path <code>8325dee</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>has-bigints</code>, <code>object-inspect</code> <code>0c227a7</code></li> <li>[meta] do not lint coverage output <code>70d2419</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v101-2020-10-30","title":"v1.0.1 - 2020-10-30","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_14","title":"Commits","text":"<ul> <li>[Tests] gather coverage data on every job <code>d1d280d</code></li> <li>[Fix] add missing dependencies <code>5031771</code></li> <li>[Tests] use <code>es-value-fixtures</code> <code>af48765</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#v100-2020-10-29","title":"v1.0.0 - 2020-10-29","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/get-intrinsic/CHANGELOG/#commits_15","title":"Commits","text":"<ul> <li>Implementation <code>bbce57c</code></li> <li>Tests <code>17b4f0d</code></li> <li>Initial commit <code>3153294</code></li> <li>npm init <code>fb326c4</code></li> <li>[meta] add Automatic Rebase and Require Allow Edits workflows <code>48862fb</code></li> <li>[meta] add <code>auto-changelog</code> <code>5f28ad0</code></li> <li>[meta] add \"funding\"; create <code>FUNDING.yml</code> <code>c2bbdde</code></li> <li>[Tests] add <code>npm run lint</code> <code>0a84b98</code></li> <li>Only apps should have lockfiles <code>9586c75</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-proto/","title":"get-proto","text":"<p>Robustly get the [[Prototype]] of an object. Uses the best available method.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-proto/#getting-started","title":"Getting started","text":"<pre><code>npm install --save get-proto\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-proto/#usageexamples","title":"Usage/Examples","text":"<pre><code>const assert = require('assert');\nconst getProto = require('get-proto');\n\nconst a = { a: 1, b: 2, [Symbol.toStringTag]: 'foo' };\nconst b = { c: 3, __proto__: a };\n\nassert.equal(getProto(b), a);\nassert.equal(getProto(a), Object.prototype);\nassert.equal(getProto({ __proto__: null }), null);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-proto/#tests","title":"Tests","text":"<p>Clone the repo, <code>npm install</code>, and run <code>npm test</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-proto/CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-proto/CHANGELOG/#v101-2025-01-02","title":"v1.0.1 - 2025-01-02","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/get-proto/CHANGELOG/#commits","title":"Commits","text":"<ul> <li>[Fix] for the <code>Object.getPrototypeOf</code> window, throw for non-objects <code>7fe6508</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/get-proto/CHANGELOG/#v100-2025-01-01","title":"v1.0.0 - 2025-01-01","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/get-proto/CHANGELOG/#commits_1","title":"Commits","text":"<ul> <li>Initial implementation, tests, readme, types <code>5c70775</code></li> <li>Initial commit <code>7c65c2a</code></li> <li>npm init <code>0b8cf82</code></li> <li>Only apps should have lockfiles <code>a6d1bff</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/","title":"Index","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/#glob-parent","title":"glob-parent","text":"<p>Extract the non-magic parent path from a glob string.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/#usage","title":"Usage","text":"<pre><code>var globParent = require('glob-parent');\n\nglobParent('path/to/*.js'); // 'path/to'\nglobParent('/root/path/to/*.js'); // '/root/path/to'\nglobParent('/*.js'); // '/'\nglobParent('*.js'); // '.'\nglobParent('**/*.js'); // '.'\nglobParent('path/{to,from}'); // 'path'\nglobParent('path/!(to|from)'); // 'path'\nglobParent('path/?(to|from)'); // 'path'\nglobParent('path/+(to|from)'); // 'path'\nglobParent('path/*(to|from)'); // 'path'\nglobParent('path/@(to|from)'); // 'path'\nglobParent('path/**/*'); // 'path'\n\n// if provided a non-glob path, returns the nearest dir\nglobParent('path/foo/bar.js'); // 'path/foo'\nglobParent('path/foo/'); // 'path/foo'\nglobParent('path/foo'); // 'path' (see issue #3 for details)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/#api","title":"API","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/#globparentmaybeglobstring-options","title":"<code>globParent(maybeGlobString, [options])</code>","text":"<p>Takes a string and returns the part of the path before the glob begins. Be aware of Escaping rules and Limitations below.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/#options","title":"options","text":"<pre><code>{\n  // Disables the automatic conversion of slashes for Windows\n  flipBackslashes: true\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/#escaping","title":"Escaping","text":"<p>The following characters have special significance in glob patterns and must be escaped if you want them to be treated as regular path characters:</p> <ul> <li><code>?</code> (question mark) unless used as a path segment alone</li> <li><code>*</code> (asterisk)</li> <li><code>|</code> (pipe)</li> <li><code>(</code> (opening parenthesis)</li> <li><code>)</code> (closing parenthesis)</li> <li><code>{</code> (opening curly brace)</li> <li><code>}</code> (closing curly brace)</li> <li><code>[</code> (opening bracket)</li> <li><code>]</code> (closing bracket)</li> </ul> <p>Example</p> <pre><code>globParent('foo/[bar]/') // 'foo'\nglobParent('foo/\\\\[bar]/') // 'foo/[bar]'\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/#limitations","title":"Limitations","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/#braces-brackets","title":"Braces &amp; Brackets","text":"<p>This library attempts a quick and imperfect method of determining which path parts have glob magic without fully parsing/lexing the pattern. There are some advanced use cases that can trip it up, such as nested braces where the outer pair is escaped and the inner one contains a path separator. If you find yourself in the unlikely circumstance of being affected by this or need to ensure higher-fidelity glob handling in your library, it is recommended that you pre-process your input with expand-braces and/or expand-brackets.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/#windows","title":"Windows","text":"<p>Backslashes are not valid path separators for globs. If a path with backslashes is provided anyway, for simple cases, glob-parent will replace the path separator for you and return the non-glob parent path (now with forward-slashes, which are still valid as Windows path separators).</p> <p>This cannot be used in conjunction with escape characters.</p> <pre><code>// BAD\nglobParent('C:\\\\Program Files \\\\(x86\\\\)\\\\*.ext') // 'C:/Program Files /(x86/)'\n\n// GOOD\nglobParent('C:/Program Files\\\\(x86\\\\)/*.ext') // 'C:/Program Files (x86)'\n</code></pre> <p>If you are using escape characters for a pattern without path parts (i.e. relative to <code>cwd</code>), prefix with <code>./</code> to avoid confusing glob-parent.</p> <pre><code>// BAD\nglobParent('foo \\\\[bar]') // 'foo '\nglobParent('foo \\\\[bar]*') // 'foo '\n\n// GOOD\nglobParent('./foo \\\\[bar]') // 'foo [bar]'\nglobParent('./foo \\\\[bar]*') // '.'\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/#license","title":"License","text":"<p>ISC</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/","title":"CHANGELOG","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#512-2021-03-06","title":"5.1.2 (2021-03-06)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>eliminate ReDoS (#36) (f923116)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#511-2021-01-27","title":"5.1.1 (2021-01-27)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#bug-fixes_1","title":"Bug Fixes","text":"<ul> <li>unescape exclamation mark (#26) (a98874f)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#510-2021-01-27","title":"5.1.0 (2021-01-27)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#features","title":"Features","text":"<ul> <li>add <code>flipBackslashes</code> option to disable auto conversion of slashes (closes #24) (#25) (eecf91d)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#500-2021-01-27","title":"5.0.0 (2021-01-27)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#breaking-changes","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>Drop support for node &lt;6 &amp; bump dependencies</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#miscellaneous-chores","title":"Miscellaneous Chores","text":"<ul> <li>Drop support for node &lt;6 &amp; bump dependencies (896c0c0)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#400-2021-01-27","title":"4.0.0 (2021-01-27)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#breaking-changes_1","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>question marks are valid path characters on Windows so avoid flagging as a glob when alone</li> <li>Update is-glob dependency</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#features_1","title":"Features","text":"<ul> <li>hoist regexps and strings for performance gains (4a80667)</li> <li>question marks are valid path characters on Windows so avoid flagging as a glob when alone (2a551dd)</li> <li>Update is-glob dependency (e41fcd8)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#310-2021-01-27","title":"3.1.0 (2021-01-27)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#features_2","title":"Features","text":"<ul> <li>allow basic win32 backslash use (272afa5)</li> <li>handle extglobs (parentheses) containing separators (7db1bdb)</li> <li>new approach to braces/brackets handling (8269bd8)</li> <li>pre-process braces/brackets sections (9ef8a87)</li> <li>preserve escaped brace/bracket at end of string (8cfb0ba)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#bug-fixes_2","title":"Bug Fixes","text":"<ul> <li>trailing escaped square brackets (99ec9fe)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#301-2021-01-27","title":"3.0.1 (2021-01-27)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#features_3","title":"Features","text":"<ul> <li>use path-dirname ponyfill (cdbea5f)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#bug-fixes_3","title":"Bug Fixes","text":"<ul> <li>unescape glob-escaped dirnames on output (598c533)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#300-2021-01-27","title":"3.0.0 (2021-01-27)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#breaking-changes_2","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>update is-glob dependency</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#features_4","title":"Features","text":"<ul> <li>update is-glob dependency (5c5f8ef)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#200-2021-01-27","title":"2.0.0 (2021-01-27)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#features_5","title":"Features","text":"<ul> <li>move up to dirname regardless of glob characters (f97fb83)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#130-2021-01-27","title":"1.3.0 (2021-01-27)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#120-2021-01-27","title":"1.2.0 (2021-01-27)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#reverts","title":"Reverts","text":"<ul> <li>feat: make regex test strings smaller (dc80fa9)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#110-2021-01-27","title":"1.1.0 (2021-01-27)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#features_6","title":"Features","text":"<ul> <li>make regex test strings smaller (cd83220)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/glob-parent/CHANGELOG/#100-2021-01-27","title":"1.0.0 (2021-01-27)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/gopd/","title":"gopd","text":"<p><code>Object.getOwnPropertyDescriptor</code>, but accounts for IE's broken implementation.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/gopd/#usage","title":"Usage","text":"<pre><code>var gOPD = require('gopd');\nvar assert = require('assert');\n\nif (gOPD) {\n    assert.equal(typeof gOPD, 'function', 'descriptors supported');\n    // use gOPD like Object.getOwnPropertyDescriptor here\n} else {\n    assert.ok(!gOPD, 'descriptors not supported');\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/gopd/CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/gopd/CHANGELOG/#v120-2024-12-03","title":"v1.2.0 - 2024-12-03","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/gopd/CHANGELOG/#commits","title":"Commits","text":"<ul> <li>[New] add <code>gOPD</code> entry point; remove <code>get-intrinsic</code> <code>5b61232</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/gopd/CHANGELOG/#v110-2024-11-29","title":"v1.1.0 - 2024-11-29","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/gopd/CHANGELOG/#commits_1","title":"Commits","text":"<ul> <li>[New] add types <code>f585e39</code></li> <li>[Dev Deps] update <code>@ljharb/eslint-config</code>, <code>auto-changelog</code>, <code>tape</code> <code>0b8e4fd</code></li> <li>[Dev Deps] update <code>aud</code>, <code>npmignore</code>, <code>tape</code> <code>48378b2</code></li> <li>[Dev Deps] update <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>tape</code> <code>78099ee</code></li> <li>[Tests] replace <code>aud</code> with <code>npm audit</code> <code>4e0d0ac</code></li> <li>[meta] add missing <code>engines.node</code> <code>1443316</code></li> <li>[Deps] update <code>get-intrinsic</code> <code>eee5f51</code></li> <li>[Deps] update <code>get-intrinsic</code> <code>550c378</code></li> <li>[Dev Deps] add missing peer dep <code>8c2ecf8</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/gopd/CHANGELOG/#v101-2022-11-01","title":"v1.0.1 - 2022-11-01","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/gopd/CHANGELOG/#commits_2","title":"Commits","text":"<ul> <li>[Fix] actually export gOPD instead of dP <code>4b624bf</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/gopd/CHANGELOG/#v100-2022-11-01","title":"v1.0.0 - 2022-11-01","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/gopd/CHANGELOG/#commits_3","title":"Commits","text":"<ul> <li>Initial implementation, tests, readme <code>0911e01</code></li> <li>Initial commit <code>b84e33f</code></li> <li>[actions] add reusable workflows <code>12ae28a</code></li> <li>npm init <code>280118b</code></li> <li>[meta] add <code>auto-changelog</code> <code>bb78de5</code></li> <li>[meta] create FUNDING.yml; add <code>funding</code> in package.json <code>11c22e6</code></li> <li>[meta] use <code>npmignore</code> to autogenerate an npmignore file <code>4f4537a</code></li> <li>Only apps should have lockfiles <code>c567022</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/has-flag/readme/","title":"has-flag","text":"<p>Check if <code>argv</code> has a specific flag</p> <p>Correctly stops looking after an <code>--</code> argument terminator.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/has-flag/readme/#install","title":"Install","text":"<pre><code>$ npm install has-flag\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/has-flag/readme/#usage","title":"Usage","text":"<pre><code>// foo.js\nconst hasFlag = require('has-flag');\n\nhasFlag('unicorn');\n//=&gt; true\n\nhasFlag('--unicorn');\n//=&gt; true\n\nhasFlag('f');\n//=&gt; true\n\nhasFlag('-f');\n//=&gt; true\n\nhasFlag('foo=bar');\n//=&gt; true\n\nhasFlag('foo');\n//=&gt; false\n\nhasFlag('rainbow');\n//=&gt; false\n</code></pre> <pre><code>$ node foo.js -f --unicorn --foo=bar -- --rainbow\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/has-flag/readme/#api","title":"API","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/has-flag/readme/#hasflagflag-argv","title":"hasFlag(flag, [argv])","text":"<p>Returns a boolean for whether the flag exists.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/has-flag/readme/#flag","title":"flag","text":"<p>Type: <code>string</code></p> <p>CLI flag to look for. The <code>--</code> prefix is optional.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/has-flag/readme/#argv","title":"argv","text":"<p>Type: <code>string[]</code> Default: <code>process.argv</code></p> <p>CLI arguments.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/has-flag/readme/#license","title":"License","text":"<p>MIT \u00a9 Sindre Sorhus</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/","title":"has-symbols","text":"<p>Determine if the JS environment has Symbol support. Supports spec, or shams.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/#example","title":"Example","text":"<pre><code>var hasSymbols = require('has-symbols');\n\nhasSymbols() === true; // if the environment has native Symbol support. Not polyfillable, not forgeable.\n\nvar hasSymbolsKinda = require('has-symbols/shams');\nhasSymbolsKinda() === true; // if the environment has a Symbol sham that mostly follows the spec.\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/#supported-symbol-shams","title":"Supported Symbol shams","text":"<ul> <li>get-own-property-symbols npm | github</li> <li>core-js npm | github</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/#tests","title":"Tests","text":"<p>Simply clone the repo, <code>npm install</code>, and run <code>npm test</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/CHANGELOG/#v110-2024-12-02","title":"v1.1.0 - 2024-12-02","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/CHANGELOG/#commits","title":"Commits","text":"<ul> <li>[actions] update workflows <code>548c0bf</code></li> <li>[actions] further shard; update action deps <code>bec56bb</code></li> <li>[meta] use <code>npmignore</code> to autogenerate an npmignore file <code>ac81032</code></li> <li>[New] add types <code>6469cbf</code></li> <li>[actions] update rebase action to use reusable workflow <code>9c9d4d0</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>tape</code> <code>adb5887</code></li> <li>[Dev Deps] update <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>tape</code> <code>13ec198</code></li> <li>[Dev Deps] update <code>auto-changelog</code>, <code>core-js</code>, <code>tape</code> <code>941be52</code></li> <li>[Tests] replace <code>aud</code> with <code>npm audit</code> <code>74f49e9</code></li> <li>[Dev Deps] update <code>npmignore</code> <code>9c0ac04</code></li> <li>[Dev Deps] add missing peer dep <code>52337a5</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/CHANGELOG/#v103-2022-03-01","title":"v1.0.3 - 2022-03-01","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/CHANGELOG/#commits_1","title":"Commits","text":"<ul> <li>[actions] use <code>node/install</code> instead of <code>node/run</code>; use <code>codecov</code> action <code>518b28f</code></li> <li>[meta] add <code>bugs</code> and <code>homepage</code> fields; reorder package.json <code>c480b13</code></li> <li>[actions] reuse common workflows <code>01d0ee0</code></li> <li>[actions] update codecov uploader <code>6424ebe</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>auto-changelog</code>, <code>tape</code> <code>dfa7e7f</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>safe-publish-latest</code>, <code>tape</code> <code>0c8d436</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>tape</code> <code>9026554</code></li> <li>[readme] add actions and codecov badges <code>eaa9682</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>tape</code> <code>bc7a3ba</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>auto-changelog</code> <code>0ace00a</code></li> <li>[meta] use <code>prepublishOnly</code> script for npm 7+ <code>093f72b</code></li> <li>[Tests] test on all 16 minors <code>9b80d3d</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/CHANGELOG/#v102-2021-02-27","title":"v1.0.2 - 2021-02-27","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/CHANGELOG/#fixed","title":"Fixed","text":"<ul> <li>[Fix] use a universal way to get the original Symbol <code>#11</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/CHANGELOG/#commits_2","title":"Commits","text":"<ul> <li>[Tests] migrate tests to Github Actions <code>90ae798</code></li> <li>[meta] do not publish github action workflow files <code>29e60a1</code></li> <li>[Tests] run <code>nyc</code> on all tests <code>8476b91</code></li> <li>[readme] fix repo URLs, remove defunct badges <code>126288e</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>auto-changelog</code>, <code>core-js</code>, <code>get-own-property-symbols</code> <code>d84bdfa</code></li> <li>[Tests] fix linting errors <code>0df3070</code></li> <li>[actions] add \"Allow Edits\" workflow <code>1e6bc29</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>tape</code> <code>36cea2a</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>tape</code> <code>1278338</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>tape</code> <code>1493254</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>core-js</code> <code>b090bf2</code></li> <li>[actions] switch Automatic Rebase workflow to <code>pull_request_target</code> event <code>4addb7a</code></li> <li>[Dev Deps] update <code>auto-changelog</code>, <code>tape</code> <code>81d0baf</code></li> <li>[Dev Deps] update <code>auto-changelog</code>; add <code>aud</code> <code>1a4e561</code></li> <li>[readme] remove unused testling URLs <code>3000941</code></li> <li>[Tests] only audit prod deps <code>692e974</code></li> <li>[Dev Deps] update <code>@ljharb/eslint-config</code> <code>51c946c</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/CHANGELOG/#v101-2019-11-16","title":"v1.0.1 - 2019-11-16","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/CHANGELOG/#commits_3","title":"Commits","text":"<ul> <li>[Tests] use shared travis-ci configs <code>ce396c9</code></li> <li>[Tests] up to <code>node</code> <code>v12.4</code>, <code>v11.15</code>, <code>v10.15</code>, <code>v9.11</code>, <code>v8.15</code>, <code>v7.10</code>, <code>v6.17</code>, <code>v4.9</code>; use <code>nvm install-latest-npm</code> <code>0690732</code></li> <li>[meta] add <code>auto-changelog</code> <code>2163d0b</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>core-js</code>, <code>safe-publish-latest</code>, <code>tape</code> <code>8e0951f</code></li> <li>[actions] add automatic rebasing / merge commit blocking <code>b09cdb7</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>safe-publish-latest</code>, <code>core-js</code>, <code>get-own-property-symbols</code>, <code>tape</code> <code>1dd42cd</code></li> <li>[meta] create FUNDING.yml <code>aa57a17</code></li> <li>Only apps should have lockfiles <code>a2d8bea</code></li> <li>[Tests] use <code>npx aud</code> instead of <code>nsp</code> or <code>npm audit</code> with hoops <code>9e96cb7</code></li> <li>[meta] add <code>funding</code> field <code>a0b32cf</code></li> <li>[Dev Deps] update <code>safe-publish-latest</code> <code>cb9f0a5</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/CHANGELOG/#v100-2016-09-19","title":"v1.0.0 - 2016-09-19","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/has-symbols/CHANGELOG/#commits_4","title":"Commits","text":"<ul> <li>Tests. <code>ecb6eb9</code></li> <li>package.json <code>88a337c</code></li> <li>Initial commit <code>42e1e55</code></li> <li>Initial implementation. <code>33f5cc6</code></li> <li>read me <code>01f1170</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/hasown/","title":"hasown","text":"<p>A robust, ES3 compatible, \"has own property\" predicate.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/hasown/#example","title":"Example","text":"<pre><code>const assert = require('assert');\nconst hasOwn = require('hasown');\n\nassert.equal(hasOwn({}, 'toString'), false);\nassert.equal(hasOwn([], 'length'), true);\nassert.equal(hasOwn({ a: 42 }, 'a'), true);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/hasown/#tests","title":"Tests","text":"<p>Simply clone the repo, <code>npm install</code>, and run <code>npm test</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/hasown/CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/hasown/CHANGELOG/#v202-2024-03-10","title":"v2.0.2 - 2024-03-10","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/hasown/CHANGELOG/#commits","title":"Commits","text":"<ul> <li>[types] use shared config <code>68e9d4d</code></li> <li>[actions] remove redundant finisher; use reusable workflow <code>241a68e</code></li> <li>[Tests] increase coverage <code>4125c0d</code></li> <li>[Tests] skip <code>npm ls</code> in old node due to TS <code>01b9282</code></li> <li>[types] improve predicate type <code>d340f85</code></li> <li>[Dev Deps] update <code>tape</code> <code>70089fc</code></li> <li>[Tests] use <code>@arethetypeswrong/cli</code> <code>50b272c</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/hasown/CHANGELOG/#v201-2024-02-10","title":"v2.0.1 - 2024-02-10","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/hasown/CHANGELOG/#commits_1","title":"Commits","text":"<ul> <li>[types] use a handwritten d.ts file; fix exported type <code>012b989</code></li> <li>[Dev Deps] update <code>@types/function-bind</code>, <code>@types/mock-property</code>, <code>@types/tape</code>, <code>aud</code>, <code>mock-property</code>, <code>npmignore</code>, <code>tape</code>, <code>typescript</code> <code>977a56f</code></li> <li>[meta] add <code>sideEffects</code> flag <code>3a60b7b</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/hasown/CHANGELOG/#v200-2023-10-19","title":"v2.0.0 - 2023-10-19","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/hasown/CHANGELOG/#commits_2","title":"Commits","text":"<ul> <li>revamped implementation, tests, readme <code>72bf8b3</code></li> <li>[meta] revamp package.json <code>079775f</code></li> <li>Only apps should have lockfiles <code>6640e23</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/hasown/CHANGELOG/#v101-2023-10-10","title":"v1.0.1 - 2023-10-10","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/hasown/CHANGELOG/#commits_3","title":"Commits","text":"<ul> <li>Initial commit <code>8dbfde6</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/","title":"http-errors","text":"<p>Create HTTP errors for Express, Koa, Connect, etc. with ease.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/#install","title":"Install","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install http-errors\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/#example","title":"Example","text":"<pre><code>var createError = require('http-errors')\nvar express = require('express')\nvar app = express()\n\napp.use(function (req, res, next) {\n  if (!req.user) return next(createError(401, 'Please login to view this page.'))\n  next()\n})\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/#api","title":"API","text":"<p>This is the current API, currently extracted from Koa and subject to change.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/#error-properties","title":"Error Properties","text":"<ul> <li><code>expose</code> - can be used to signal if <code>message</code> should be sent to the client,   defaulting to <code>false</code> when <code>status</code> &gt;= 500</li> <li><code>headers</code> - can be an object of header names to values to be sent to the   client, defaulting to <code>undefined</code>. When defined, the key names should all   be lower-cased</li> <li><code>message</code> - the traditional error message, which should be kept short and all   single line</li> <li><code>status</code> - the status code of the error, mirroring <code>statusCode</code> for general   compatibility</li> <li><code>statusCode</code> - the status code of the error, defaulting to <code>500</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/#createerrorstatus-message-properties","title":"createError([status], [message], [properties])","text":"<p>Create a new error object with the given message <code>msg</code>. The error object inherits from <code>createError.HttpError</code>.</p> <pre><code>var err = createError(404, 'This video does not exist!')\n</code></pre> <ul> <li><code>status: 500</code> - the status code as a number</li> <li><code>message</code> - the message of the error, defaulting to node's text for that status code.</li> <li><code>properties</code> - custom properties to attach to the object</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/#createerrorstatus-error-properties","title":"createError([status], [error], [properties])","text":"<p>Extend the given <code>error</code> object with <code>createError.HttpError</code> properties. This will not alter the inheritance of the given <code>error</code> object, and the modified <code>error</code> object is the return value.</p> <pre><code>fs.readFile('foo.txt', function (err, buf) {\n  if (err) {\n    if (err.code === 'ENOENT') {\n      var httpError = createError(404, err, { expose: false })\n    } else {\n      var httpError = createError(500, err)\n    }\n  }\n})\n</code></pre> <ul> <li><code>status</code> - the status code as a number</li> <li><code>error</code> - the error object to extend</li> <li><code>properties</code> - custom properties to attach to the object</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/#createerrorishttperrorval","title":"createError.isHttpError(val)","text":"<p>Determine if the provided <code>val</code> is an <code>HttpError</code>. This will return <code>true</code> if the error inherits from the <code>HttpError</code> constructor of this module or matches the \"duck type\" for an error this module creates. All outputs from the <code>createError</code> factory will return <code>true</code> for this function, including if an non-<code>HttpError</code> was passed into the factory.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/#new-createerrorcode-namemsg","title":"new createError[code || name]([msg]))","text":"<p>Create a new error object with the given message <code>msg</code>. The error object inherits from <code>createError.HttpError</code>.</p> <pre><code>var err = new createError.NotFound()\n</code></pre> <ul> <li><code>code</code> - the status code as a number</li> <li><code>name</code> - the name of the error as a \"bumpy case\", i.e. <code>NotFound</code> or <code>InternalServerError</code>.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/#list-of-all-constructors","title":"List of all constructors","text":"Status Code Constructor Name 400 BadRequest 401 Unauthorized 402 PaymentRequired 403 Forbidden 404 NotFound 405 MethodNotAllowed 406 NotAcceptable 407 ProxyAuthenticationRequired 408 RequestTimeout 409 Conflict 410 Gone 411 LengthRequired 412 PreconditionFailed 413 PayloadTooLarge 414 URITooLong 415 UnsupportedMediaType 416 RangeNotSatisfiable 417 ExpectationFailed 418 ImATeapot 421 MisdirectedRequest 422 UnprocessableEntity 423 Locked 424 FailedDependency 425 TooEarly 426 UpgradeRequired 428 PreconditionRequired 429 TooManyRequests 431 RequestHeaderFieldsTooLarge 451 UnavailableForLegalReasons 500 InternalServerError 501 NotImplemented 502 BadGateway 503 ServiceUnavailable 504 GatewayTimeout 505 HTTPVersionNotSupported 506 VariantAlsoNegotiates 507 InsufficientStorage 508 LoopDetected 509 BandwidthLimitExceeded 510 NotExtended 511 NetworkAuthenticationRequired"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/","title":"2.0.0 / 2021-12-17","text":"<ul> <li>Drop support for Node.js 0.6</li> <li>Remove <code>I'mateapot</code> export; use <code>ImATeapot</code> instead</li> <li>Remove support for status being non-first argument</li> <li>Rename <code>UnorderedCollection</code> constructor to <code>TooEarly</code></li> <li>deps: depd@2.0.0<ul> <li>Replace internal <code>eval</code> usage with <code>Function</code> constructor</li> <li>Use instance methods on <code>process</code> to check for listeners</li> </ul> </li> <li>deps: statuses@2.0.1<ul> <li>Fix messaging casing of <code>418 I'm a Teapot</code></li> <li>Remove code 306</li> <li>Rename <code>425 Unordered Collection</code> to standard <code>425 Too Early</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2021-11-14-181","title":"2021-11-14 / 1.8.1","text":"<ul> <li>deps: toidentifier@1.0.1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2020-06-29-180","title":"2020-06-29 / 1.8.0","text":"<ul> <li>Add <code>isHttpError</code> export to determine if value is an HTTP error</li> <li>deps: setprototypeof@1.2.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2019-06-24-173","title":"2019-06-24 / 1.7.3","text":"<ul> <li>deps: inherits@2.0.4</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2019-02-18-172","title":"2019-02-18 / 1.7.2","text":"<ul> <li>deps: setprototypeof@1.1.1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2018-09-08-171","title":"2018-09-08 / 1.7.1","text":"<ul> <li>Fix error creating objects in some environments</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2018-07-30-170","title":"2018-07-30 / 1.7.0","text":"<ul> <li>Set constructor name when possible</li> <li>Use <code>toidentifier</code> module to make class names</li> <li>deps: statuses@'&gt;= 1.5.0 &lt; 2'</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2018-03-29-163","title":"2018-03-29 / 1.6.3","text":"<ul> <li>deps: depd@~1.1.2<ul> <li>perf: remove argument reassignment</li> </ul> </li> <li>deps: setprototypeof@1.1.0</li> <li>deps: statuses@'&gt;= 1.4.0 &lt; 2'</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2017-08-04-162","title":"2017-08-04 / 1.6.2","text":"<ul> <li>deps: depd@1.1.1<ul> <li>Remove unnecessary <code>Buffer</code> loading</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2017-02-20-161","title":"2017-02-20 / 1.6.1","text":"<ul> <li>deps: setprototypeof@1.0.3<ul> <li>Fix shim for old browsers</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2017-02-14-160","title":"2017-02-14 / 1.6.0","text":"<ul> <li>Accept custom 4xx and 5xx status codes in factory</li> <li>Add deprecation message to <code>\"I'mateapot\"</code> export</li> <li>Deprecate passing status code as anything except first argument in factory</li> <li>Deprecate using non-error status codes</li> <li>Make <code>message</code> property enumerable for <code>HttpError</code>s</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2016-11-16-151","title":"2016-11-16 / 1.5.1","text":"<ul> <li>deps: inherits@2.0.3<ul> <li>Fix issue loading in browser</li> </ul> </li> <li>deps: setprototypeof@1.0.2</li> <li>deps: statuses@'&gt;= 1.3.1 &lt; 2'</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2016-05-18-150","title":"2016-05-18 / 1.5.0","text":"<ul> <li>Support new code <code>421 Misdirected Request</code></li> <li>Use <code>setprototypeof</code> module to replace <code>__proto__</code> setting</li> <li>deps: statuses@'&gt;= 1.3.0 &lt; 2'<ul> <li>Add <code>421 Misdirected Request</code></li> <li>perf: enable strict mode</li> </ul> </li> <li>perf: enable strict mode</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2016-01-28-140","title":"2016-01-28 / 1.4.0","text":"<ul> <li>Add <code>HttpError</code> export, for <code>err instanceof createError.HttpError</code></li> <li>deps: inherits@2.0.1</li> <li>deps: statuses@'&gt;= 1.2.1 &lt; 2'<ul> <li>Fix message for status 451</li> <li>Remove incorrect nginx status code</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2015-02-02-131","title":"2015-02-02 / 1.3.1","text":"<ul> <li>Fix regression where status can be overwritten in <code>createError</code> <code>props</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2015-02-01-130","title":"2015-02-01 / 1.3.0","text":"<ul> <li>Construct errors using defined constructors from <code>createError</code></li> <li>Fix error names that are not identifiers<ul> <li><code>createError[\"I'mateapot\"]</code> is now <code>createError.ImATeapot</code></li> </ul> </li> <li>Set a meaningful <code>name</code> property on constructed errors</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2014-12-09-128","title":"2014-12-09 / 1.2.8","text":"<ul> <li>Fix stack trace from exported function</li> <li>Remove <code>arguments.callee</code> usage</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2014-10-14-127","title":"2014-10-14 / 1.2.7","text":"<ul> <li>Remove duplicate line</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2014-10-02-126","title":"2014-10-02 / 1.2.6","text":"<ul> <li>Fix <code>expose</code> to be <code>true</code> for <code>ClientError</code> constructor</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2014-09-28-125","title":"2014-09-28 / 1.2.5","text":"<ul> <li>deps: statuses@1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2014-09-21-124","title":"2014-09-21 / 1.2.4","text":"<ul> <li>Fix dependency version to work with old <code>npm</code>s</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2014-09-21-123","title":"2014-09-21 / 1.2.3","text":"<ul> <li>deps: statuses@~1.1.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2014-09-21-122","title":"2014-09-21 / 1.2.2","text":"<ul> <li>Fix publish error</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2014-09-21-121","title":"2014-09-21 / 1.2.1","text":"<ul> <li>Support Node.js 0.6</li> <li>Use <code>inherits</code> instead of <code>util</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2014-09-09-120","title":"2014-09-09 / 1.2.0","text":"<ul> <li>Fix the way inheriting functions</li> <li>Support <code>expose</code> being provided in properties argument</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2014-09-08-110","title":"2014-09-08 / 1.1.0","text":"<ul> <li>Default status to 500</li> <li>Support provided <code>error</code> to extend</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2014-09-08-101","title":"2014-09-08 / 1.0.1","text":"<ul> <li>Fix accepting string message</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/http-errors/HISTORY/#2014-09-08-100","title":"2014-09-08 / 1.0.0","text":"<ul> <li>Initial release</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/","title":"Index","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/#iconv-lite-pure-js-character-encoding-conversion","title":"iconv-lite: Pure JS character encoding conversion","text":"<ul> <li>No need for native code compilation. Quick to install, works on Windows and in sandboxed environments like Cloud9.</li> <li>Used in popular projects like Express.js (body_parser),     Grunt, Nodemailer, Yeoman and others.</li> <li>Faster than node-iconv (see below for performance comparison).</li> <li>Intuitive encode/decode API, including Streaming support.</li> <li>In-browser usage via browserify or webpack (~180kb gzip compressed with Buffer shim included).</li> <li>Typescript type definition file included.</li> <li>React Native is supported (need to install <code>stream</code> module to enable Streaming API).</li> <li>License: MIT.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/#usage","title":"Usage","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/#basic-api","title":"Basic API","text":"<pre><code>var iconv = require('iconv-lite');\n\n// Convert from an encoded buffer to a js string.\nstr = iconv.decode(Buffer.from([0x68, 0x65, 0x6c, 0x6c, 0x6f]), 'win1251');\n\n// Convert from a js string to an encoded buffer.\nbuf = iconv.encode(\"Sample input string\", 'win1251');\n\n// Check if encoding is supported\niconv.encodingExists(\"us-ascii\")\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/#streaming-api","title":"Streaming API","text":"<pre><code>// Decode stream (from binary data stream to js strings)\nhttp.createServer(function(req, res) {\n    var converterStream = iconv.decodeStream('win1251');\n    req.pipe(converterStream);\n\n    converterStream.on('data', function(str) {\n        console.log(str); // Do something with decoded strings, chunk-by-chunk.\n    });\n});\n\n// Convert encoding streaming example\nfs.createReadStream('file-in-win1251.txt')\n    .pipe(iconv.decodeStream('win1251'))\n    .pipe(iconv.encodeStream('ucs2'))\n    .pipe(fs.createWriteStream('file-in-ucs2.txt'));\n\n// Sugar: all encode/decode streams have .collect(cb) method to accumulate data.\nhttp.createServer(function(req, res) {\n    req.pipe(iconv.decodeStream('win1251')).collect(function(err, body) {\n        assert(typeof body == 'string');\n        console.log(body); // full request body string\n    });\n});\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/#supported-encodings","title":"Supported encodings","text":"<ul> <li>All node.js native encodings: utf8, ucs2 / utf16-le, ascii, binary, base64, hex.</li> <li>Additional unicode encodings: utf16, utf16-be, utf-7, utf-7-imap, utf32, utf32-le, and utf32-be.</li> <li>All widespread singlebyte encodings: Windows 125x family, ISO-8859 family,      IBM/DOS codepages, Macintosh family, KOI8 family, all others supported by iconv library.      Aliases like 'latin1', 'us-ascii' also supported.</li> <li>All widespread multibyte encodings: CP932, CP936, CP949, CP950, GB2312, GBK, GB18030, Big5, Shift_JIS, EUC-JP.</li> </ul> <p>See all supported encodings on wiki.</p> <p>Most singlebyte encodings are generated automatically from node-iconv. Thank you Ben Noordhuis and libiconv authors!</p> <p>Multibyte encodings are generated from Unicode.org mappings and WHATWG Encoding Standard mappings. Thank you, respective authors!</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/#encodingdecoding-speed","title":"Encoding/decoding speed","text":"<p>Comparison with node-iconv module (1000x256kb, on MacBook Pro, Core i5/2.6 GHz, Node v0.12.0).  Note: your results may vary, so please always check on your hardware.</p> <pre><code>operation             iconv@2.1.4   iconv-lite@0.4.7\n----------------------------------------------------------\nencode('win1251')     ~96 Mb/s      ~320 Mb/s\ndecode('win1251')     ~95 Mb/s      ~246 Mb/s\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/#bom-handling","title":"BOM handling","text":"<ul> <li>Decoding: BOM is stripped by default, unless overridden by passing <code>stripBOM: false</code> in options    (f.ex. <code>iconv.decode(buf, enc, {stripBOM: false})</code>).    A callback might also be given as a <code>stripBOM</code> parameter - it'll be called if BOM character was actually found.</li> <li>If you want to detect UTF-8 BOM when decoding other encodings, use node-autodetect-decoder-stream module.</li> <li>Encoding: No BOM added, unless overridden by <code>addBOM: true</code> option.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/#utf-16-encodings","title":"UTF-16 Encodings","text":"<p>This library supports UTF-16LE, UTF-16BE and UTF-16 encodings. First two are straightforward, but UTF-16 is trying to be smart about endianness in the following ways:  * Decoding: uses BOM and 'spaces heuristic' to determine input endianness. Default is UTF-16LE, but can be     overridden with <code>defaultEncoding: 'utf-16be'</code> option. Strips BOM unless <code>stripBOM: false</code>.  * Encoding: uses UTF-16LE and writes BOM by default. Use <code>addBOM: false</code> to override.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/#utf-32-encodings","title":"UTF-32 Encodings","text":"<p>This library supports UTF-32LE, UTF-32BE and UTF-32 encodings. Like the UTF-16 encoding above, UTF-32 defaults to UTF-32LE, but uses BOM and 'spaces heuristics' to determine input endianness.   * The default of UTF-32LE can be overridden with the <code>defaultEncoding: 'utf-32be'</code> option. Strips BOM unless <code>stripBOM: false</code>.  * Encoding: uses UTF-32LE and writes BOM by default. Use <code>addBOM: false</code> to override. (<code>defaultEncoding: 'utf-32be'</code> can also be used here to change encoding.)</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/#other-notes","title":"Other notes","text":"<p>When decoding, be sure to supply a Buffer to decode() method, otherwise bad things usually happen. Untranslatable characters are set to \ufffd or ?. No transliteration is currently supported. Node versions 0.10.31 and 0.11.13 are buggy, don't use them (see #65, #77).  </p>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/#testing","title":"Testing","text":"<pre><code>$ git clone git@github.com:ashtuchkin/iconv-lite.git\n$ cd iconv-lite\n$ npm install\n$ npm test\n\n$ # To view performance:\n$ node test/performance.js\n\n$ # To view test coverage:\n$ npm run coverage\n$ open coverage/lcov-report/index.html\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/","title":"Changelog","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#063-2021-05-23","title":"0.6.3 / 2021-05-23","text":"<ul> <li>Fix HKSCS encoding to prefer Big5 codes if both Big5 and HKSCS codes are possible (#264)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#062-2020-07-08","title":"0.6.2 / 2020-07-08","text":"<ul> <li>Support Uint8Array-s decoding without conversion to Buffers, plus fix an edge case.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#061-2020-06-28","title":"0.6.1 / 2020-06-28","text":"<ul> <li>Support Uint8Array-s directly when decoding (#246, by @gyzerok)</li> <li>Unify package.json version ranges to be strictly semver-compatible (#241)</li> <li>Fix minor issue in UTF-32 decoder's endianness detection code.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#060-2020-06-08","title":"0.6.0 / 2020-06-08","text":"<ul> <li>Updated 'gb18030' encoding to :2005 edition (see https://github.com/whatwg/encoding/issues/22).</li> <li>Removed <code>iconv.extendNodeEncodings()</code> mechanism. It was deprecated 5 years ago and didn't work      in recent Node versions.</li> <li>Reworked Streaming API behavior in browser environments to fix #204. Streaming API will be      excluded by default in browser packs, saving ~100Kb bundle size, unless enabled explicitly using      <code>iconv.enableStreamingAPI(require('stream'))</code>.</li> <li>Updates to development environment &amp; tests:<ul> <li>Added ./test/webpack private package to test complex new use cases that need custom environment.    It's tested as a separate job in Travis CI.</li> <li>Updated generation code for the new EUC-KR index file format from Encoding Standard.</li> <li>Removed Buffer() constructor in tests (#197 by @gabrielschulhof).</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#052-2020-06-08","title":"0.5.2 / 2020-06-08","text":"<ul> <li>Added <code>iconv.getEncoder()</code> and <code>iconv.getDecoder()</code> methods to typescript definitions (#229).</li> <li>Fixed semver version to 6.1.2 to support Node 8.x (by @tanandara).</li> <li>Capped iconv version to 2.x as 3.x has dropped support for older Node versions.</li> <li>Switched from instanbul to c8 for code coverage.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#051-2020-01-18","title":"0.5.1 / 2020-01-18","text":"<ul> <li>Added cp720 encoding (#221, by @kr-deps)</li> <li>(minor) Changed Changelog.md formatting to use h2. </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#050-2019-06-26","title":"0.5.0 / 2019-06-26","text":"<ul> <li>Added UTF-32 encoding, both little-endian and big-endian variants (UTF-32LE, UTF32-BE). If endianness     is not provided for decoding, it's deduced automatically from the stream using a heuristic similar to     what we use in UTF-16. (great work in #216 by @kshetline)</li> <li>Several minor updates to README (#217 by @oldj, plus some more)</li> <li>Added Node versions 10 and 12 to Travis test harness.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0424-2018-08-22","title":"0.4.24 / 2018-08-22","text":"<ul> <li>Added MIK encoding (#196, by @Ivan-Kalatchev)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0423-2018-05-07","title":"0.4.23 / 2018-05-07","text":"<ul> <li>Fix deprecation warning in Node v10 due to the last usage of <code>new Buffer</code> (#185, by @felixbuenemann)</li> <li>Switched from NodeBuffer to Buffer in typings (#155 by @felixfbecker, #186 by @larssn)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0422-2018-05-05","title":"0.4.22 / 2018-05-05","text":"<ul> <li>Use older semver style for dependencies to be compatible with Node version 0.10 (#182, by @dougwilson)</li> <li>Fix tests to accomodate fixes in Node v10 (#182, by @dougwilson)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0421-2018-04-06","title":"0.4.21 / 2018-04-06","text":"<ul> <li>Fix encoding canonicalization (#156)</li> <li>Fix the paths in the \"browser\" field in package.json (#174 by @LMLB)</li> <li>Removed \"contributors\" section in package.json - see Git history instead.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0420-2018-04-06","title":"0.4.20 / 2018-04-06","text":"<ul> <li>Updated <code>new Buffer()</code> usages with recommended replacements as it's being deprecated in Node v10 (#176, #178 by @ChALkeR)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0419-2017-09-09","title":"0.4.19 / 2017-09-09","text":"<ul> <li>Fixed iso8859-1 codec regression in handling untranslatable characters (#162, caused by #147)</li> <li>Re-generated windows1255 codec, because it was updated in iconv project</li> <li>Fixed grammar in error message when iconv-lite is loaded with encoding other than utf8</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0418-2017-06-13","title":"0.4.18 / 2017-06-13","text":"<ul> <li>Fixed CESU-8 regression in Node v8.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0417-2017-04-22","title":"0.4.17 / 2017-04-22","text":"<ul> <li>Updated typescript definition file to support Angular 2 AoT mode (#153 by @larssn)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0416-2017-04-22","title":"0.4.16 / 2017-04-22","text":"<ul> <li>Added support for React Native (#150)</li> <li>Changed iso8859-1 encoding to usine internal 'binary' encoding, as it's the same thing (#147 by @mscdex)</li> <li>Fixed typo in Readme (#138 by @jiangzhuo)</li> <li>Fixed build for Node v6.10+ by making correct version comparison</li> <li>Added a warning if iconv-lite is loaded not as utf-8 (see #142)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0415-2016-11-21","title":"0.4.15 / 2016-11-21","text":"<ul> <li>Fixed typescript type definition (#137)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0414-2016-11-20","title":"0.4.14 / 2016-11-20","text":"<ul> <li>Preparation for v1.0</li> <li>Added Node v6 and latest Node versions to Travis CI test rig</li> <li>Deprecated Node v0.8 support</li> <li>Typescript typings (@larssn)</li> <li>Fix encoding of Euro character in GB 18030 (inspired by @lygstate)</li> <li>Add ms prefix to dbcs windows encodings (@rokoroku)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0413-2015-10-01","title":"0.4.13 / 2015-10-01","text":"<ul> <li>Fix silly mistake in deprecation notice.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0412-2015-09-26","title":"0.4.12 / 2015-09-26","text":"<ul> <li>Node v4 support:</li> <li>Added CESU-8 decoding (#106)</li> <li>Added deprecation notice for <code>extendNodeEncodings</code></li> <li>Added Travis tests for Node v4 and io.js latest (#105 by @Mithgol)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0411-2015-07-03","title":"0.4.11 / 2015-07-03","text":"<ul> <li>Added CESU-8 encoding.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#0410-2015-05-26","title":"0.4.10 / 2015-05-26","text":"<ul> <li>Changed UTF-16 endianness heuristic to take into account any ASCII chars, not    just spaces. This should minimize the importance of \"default\" endianness.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#049-2015-05-24","title":"0.4.9 / 2015-05-24","text":"<ul> <li>Streamlined BOM handling: strip BOM by default, add BOM when encoding if     addBOM: true. Added docs to Readme.</li> <li>UTF16 now uses UTF16-LE by default.</li> <li>Fixed minor issue with big5 encoding.</li> <li>Added io.js testing on Travis; updated node-iconv version to test against.    Now we just skip testing SBCS encodings that node-iconv doesn't support.</li> <li>(internal refactoring) Updated codec interface to use classes.</li> <li>Use strict mode in all files.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#048-2015-04-14","title":"0.4.8 / 2015-04-14","text":"<ul> <li>added alias UNICODE-1-1-UTF-7 for UTF-7 encoding (#94)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#047-2015-02-05","title":"0.4.7 / 2015-02-05","text":"<ul> <li>stop official support of Node.js v0.8. Should still work, but no guarantees.    reason: Packages needed for testing are hard to get on Travis CI.</li> <li>work in environment where Object.prototype is monkey patched with enumerable     props (#89).</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#046-2015-01-12","title":"0.4.6 / 2015-01-12","text":"<ul> <li>fix rare aliases of single-byte encodings (thanks @mscdex)</li> <li>double the timeout for dbcs tests to make them less flaky on travis</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#045-2014-11-20","title":"0.4.5 / 2014-11-20","text":"<ul> <li>fix windows-31j and x-sjis encoding support (@nleush)</li> <li>minor fix: undefined variable reference when internal error happens</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#044-2014-07-16","title":"0.4.4 / 2014-07-16","text":"<ul> <li>added encodings UTF-7 (RFC2152) and UTF-7-IMAP (RFC3501 Section 5.1.3)</li> <li>fixed streaming base64 encoding</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#043-2014-06-14","title":"0.4.3 / 2014-06-14","text":"<ul> <li>added encodings UTF-16BE and UTF-16 with BOM</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#042-2014-06-12","title":"0.4.2 / 2014-06-12","text":"<ul> <li>don't throw exception if <code>extendNodeEncodings()</code> is called more than once</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#041-2014-06-11","title":"0.4.1 / 2014-06-11","text":"<ul> <li>codepage 808 added</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/iconv-lite/Changelog/#040-2014-06-10","title":"0.4.0 / 2014-06-10","text":"<ul> <li>code is rewritten from scratch</li> <li>all widespread encodings are supported</li> <li>streaming interface added</li> <li>browserify compatibility added</li> <li>(optional) extend core primitive encodings to make usage even simpler</li> <li>moved from vows to mocha as the testing framework</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/ignore-by-default/","title":"ignore-by-default","text":"<p>This is a package aimed at Node.js development tools. It provides a list of directories that should probably be ignored by such tools, e.g. when watching for file changes.</p> <p>It's used by AVA and nodemon.</p> <p>Please contribute!</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/ignore-by-default/#installation","title":"Installation","text":"<pre><code>npm install --save ignore-by-default\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/ignore-by-default/#usage","title":"Usage","text":"<p>The <code>ignore-by-default</code> module exports a <code>directories()</code> function, which will return an array of directory names. These are the ones you should ignore.</p> <pre><code>// ['.git', '.sass_cache', \u2026]\nvar ignoredDirectories = require('ignore-by-default').directories()\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/inherits/","title":"Index","text":"<p>Browser-friendly inheritance fully compatible with standard node.js inherits.</p> <p>This package exports standard <code>inherits</code> from node.js <code>util</code> module in node environment, but also provides alternative browser-friendly implementation through browser field. Alternative implementation is a literal copy of standard one located in standalone module to avoid requiring of <code>util</code>. It also has a shim for old browsers with no <code>Object.create</code> support.</p> <p>While keeping you sure you are using standard <code>inherits</code> implementation in node.js environment, it allows bundlers such as browserify to not include full <code>util</code> package to your client code if all you need is just <code>inherits</code> function. It worth, because browser shim for <code>util</code> package is large and <code>inherits</code> is often the single function you need from it.</p> <p>It's recommended to use this package instead of <code>require('util').inherits</code> for any code that has chances to be used not only in node.js but in browser too.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/inherits/#usage","title":"usage","text":"<pre><code>var inherits = require('inherits');\n// then use exactly as the standard one\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/inherits/#note-on-version-10","title":"note on version ~1.0","text":"<p>Version ~1.0 had completely different motivation and is not compatible neither with 2.0 nor with standard node.js <code>inherits</code>.</p> <p>If you are using version ~1.0 and planning to switch to ~2.0, be careful:</p> <ul> <li>new version uses <code>super_</code> instead of <code>super</code> for referencing   superclass</li> <li>new version overwrites current prototype while old one preserves any   existing fields on it</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/ipaddr.js/","title":"ipaddr.js \u2014 an IPv6 and IPv4 address manipulation library","text":"<p>ipaddr.js is a small (1.9K minified and gzipped) library for manipulating IP addresses in JavaScript environments. It runs on both CommonJS runtimes (e.g. nodejs) and in a web browser.</p> <p>ipaddr.js allows you to verify and parse string representation of an IP address, match it against a CIDR range or range list, determine if it falls into some reserved ranges (examples include loopback and private ranges), and convert between IPv4 and IPv4-mapped IPv6 addresses.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/ipaddr.js/#installation","title":"Installation","text":"<p><code>npm install ipaddr.js</code></p> <p>or</p> <p><code>bower install ipaddr.js</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/ipaddr.js/#api","title":"API","text":"<p>ipaddr.js defines one object in the global scope: <code>ipaddr</code>. In CommonJS, it is exported from the module:</p> <pre><code>var ipaddr = require('ipaddr.js');\n</code></pre> <p>The API consists of several global methods and two classes: ipaddr.IPv6 and ipaddr.IPv4.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/ipaddr.js/#global-methods","title":"Global methods","text":"<p>There are three global methods defined: <code>ipaddr.isValid</code>, <code>ipaddr.parse</code> and <code>ipaddr.process</code>. All of them receive a string as a single parameter.</p> <p>The <code>ipaddr.isValid</code> method returns <code>true</code> if the address is a valid IPv4 or IPv6 address, and <code>false</code> otherwise. It does not throw any exceptions.</p> <p>The <code>ipaddr.parse</code> method returns an object representing the IP address, or throws an <code>Error</code> if the passed string is not a valid representation of an IP address.</p> <p>The <code>ipaddr.process</code> method works just like the <code>ipaddr.parse</code> one, but it automatically converts IPv4-mapped IPv6 addresses to their IPv4 counterparts before returning. It is useful when you have a Node.js instance listening on an IPv6 socket, and the <code>net.ivp6.bindv6only</code> sysctl parameter (or its equivalent on non-Linux OS) is set to 0. In this case, you can accept IPv4 connections on your IPv6-only socket, but the remote address will be mangled. Use <code>ipaddr.process</code> method to automatically demangle it.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/ipaddr.js/#object-representation","title":"Object representation","text":"<p>Parsing methods return an object which descends from <code>ipaddr.IPv6</code> or <code>ipaddr.IPv4</code>. These objects share some properties, but most of them differ.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/ipaddr.js/#shared-properties","title":"Shared properties","text":"<p>One can determine the type of address by calling <code>addr.kind()</code>. It will return either <code>\"ipv6\"</code> or <code>\"ipv4\"</code>.</p> <p>An address can be converted back to its string representation with <code>addr.toString()</code>. Note that this method:  * does not return the original string used to create the object (in fact, there is    no way of getting that string)  * returns a compact representation (when it is applicable)</p> <p>A <code>match(range, bits)</code> method can be used to check if the address falls into a certain CIDR range. Note that an address can be (obviously) matched only against an address of the same type.</p> <p>For example:</p> <pre><code>var addr = ipaddr.parse(\"2001:db8:1234::1\");\nvar range = ipaddr.parse(\"2001:db8::\");\n\naddr.match(range, 32); // =&gt; true\n</code></pre> <p>Alternatively, <code>match</code> can also be called as <code>match([range, bits])</code>. In this way, it can be used together with the <code>parseCIDR(string)</code> method, which parses an IP address together with a CIDR range.</p> <p>For example:</p> <pre><code>var addr = ipaddr.parse(\"2001:db8:1234::1\");\n\naddr.match(ipaddr.parseCIDR(\"2001:db8::/32\")); // =&gt; true\n</code></pre> <p>A <code>range()</code> method returns one of predefined names for several special ranges defined by IP protocols. The exact names (and their respective CIDR ranges) can be looked up in the source: IPv6 ranges and IPv4 ranges. Some common ones include <code>\"unicast\"</code> (the default one) and <code>\"reserved\"</code>.</p> <p>You can match against your own range list by using <code>ipaddr.subnetMatch(address, rangeList, defaultName)</code> method. It can work with a mix of IPv6 or IPv4 addresses, and accepts a name-to-subnet map as the range list. For example:</p> <pre><code>var rangeList = {\n  documentationOnly: [ ipaddr.parse('2001:db8::'), 32 ],\n  tunnelProviders: [\n    [ ipaddr.parse('2001:470::'), 32 ], // he.net\n    [ ipaddr.parse('2001:5c0::'), 32 ]  // freenet6\n  ]\n};\nipaddr.subnetMatch(ipaddr.parse('2001:470:8:66::1'), rangeList, 'unknown'); // =&gt; \"tunnelProviders\"\n</code></pre> <p>The addresses can be converted to their byte representation with <code>toByteArray()</code>. (Actually, JavaScript mostly does not know about byte buffers. They are emulated with arrays of numbers, each in range of 0..255.)</p> <pre><code>var bytes = ipaddr.parse('2a00:1450:8007::68').toByteArray(); // ipv6.google.com\nbytes // =&gt; [42, 0x00, 0x14, 0x50, 0x80, 0x07, 0x00, &lt;zeroes...&gt;, 0x00, 0x68 ]\n</code></pre> <p>The <code>ipaddr.IPv4</code> and <code>ipaddr.IPv6</code> objects have some methods defined, too. All of them have the same interface for both protocols, and are similar to global methods.</p> <p><code>ipaddr.IPvX.isValid(string)</code> can be used to check if the string is a valid address for particular protocol, and <code>ipaddr.IPvX.parse(string)</code> is the error-throwing parser.</p> <p><code>ipaddr.IPvX.isValid(string)</code> uses the same format for parsing as the POSIX <code>inet_ntoa</code> function, which accepts unusual formats like <code>0xc0.168.1.1</code> or <code>0x10000000</code>. The function <code>ipaddr.IPv4.isValidFourPartDecimal(string)</code> validates the IPv4 address and also ensures that it is written in four-part decimal format.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/ipaddr.js/#ipv6-properties","title":"IPv6 properties","text":"<p>Sometimes you will want to convert IPv6 not to a compact string representation (with the <code>::</code> substitution); the <code>toNormalizedString()</code> method will return an address where all zeroes are explicit.</p> <p>For example:</p> <pre><code>var addr = ipaddr.parse(\"2001:0db8::0001\");\naddr.toString(); // =&gt; \"2001:db8::1\"\naddr.toNormalizedString(); // =&gt; \"2001:db8:0:0:0:0:0:1\"\n</code></pre> <p>The <code>isIPv4MappedAddress()</code> method will return <code>true</code> if this address is an IPv4-mapped one, and <code>toIPv4Address()</code> will return an IPv4 object address.</p> <p>To access the underlying binary representation of the address, use <code>addr.parts</code>.</p> <pre><code>var addr = ipaddr.parse(\"2001:db8:10::1234:DEAD\");\naddr.parts // =&gt; [0x2001, 0xdb8, 0x10, 0, 0, 0, 0x1234, 0xdead]\n</code></pre> <p>A IPv6 zone index can be accessed via <code>addr.zoneId</code>:</p> <pre><code>var addr = ipaddr.parse(\"2001:db8::%eth0\");\naddr.zoneId // =&gt; 'eth0'\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/ipaddr.js/#ipv4-properties","title":"IPv4 properties","text":"<p><code>toIPv4MappedAddress()</code> will return a corresponding IPv4-mapped IPv6 address.</p> <p>To access the underlying representation of the address, use <code>addr.octets</code>.</p> <pre><code>var addr = ipaddr.parse(\"192.168.1.1\");\naddr.octets // =&gt; [192, 168, 1, 1]\n</code></pre> <p><code>prefixLengthFromSubnetMask()</code> will return a CIDR prefix length for a valid IPv4 netmask or null if the netmask is not valid.</p> <pre><code>ipaddr.IPv4.parse('255.255.255.240').prefixLengthFromSubnetMask() == 28\nipaddr.IPv4.parse('255.192.164.0').prefixLengthFromSubnetMask()  == null\n</code></pre> <p><code>subnetMaskFromPrefixLength()</code> will return an IPv4 netmask for a valid CIDR prefix length.</p> <pre><code>ipaddr.IPv4.subnetMaskFromPrefixLength(24) == \"255.255.255.0\"\nipaddr.IPv4.subnetMaskFromPrefixLength(29) == \"255.255.255.248\"\n</code></pre> <p><code>broadcastAddressFromCIDR()</code> will return the broadcast address for a given IPv4 interface and netmask in CIDR notation. <pre><code>ipaddr.IPv4.broadcastAddressFromCIDR(\"172.0.0.1/24\") == \"172.0.0.255\"\n</code></pre> <code>networkAddressFromCIDR()</code> will return the network address for a given IPv4 interface and netmask in CIDR notation. <pre><code>ipaddr.IPv4.networkAddressFromCIDR(\"172.0.0.1/24\") == \"172.0.0.0\"\n</code></pre></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/ipaddr.js/#conversion","title":"Conversion","text":"<p>IPv4 and IPv6 can be converted bidirectionally to and from network byte order (MSB) byte arrays.</p> <p>The <code>fromByteArray()</code> method will take an array and create an appropriate IPv4 or IPv6 object if the input satisfies the requirements. For IPv4 it has to be an array of four 8-bit values, while for IPv6 it has to be an array of sixteen 8-bit values.</p> <p>For example: <pre><code>var addr = ipaddr.fromByteArray([0x7f, 0, 0, 1]);\naddr.toString(); // =&gt; \"127.0.0.1\"\n</code></pre></p> <p>or</p> <pre><code>var addr = ipaddr.fromByteArray([0x20, 1, 0xd, 0xb8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])\naddr.toString(); // =&gt; \"2001:db8::1\"\n</code></pre> <p>Both objects also offer a <code>toByteArray()</code> method, which returns an array in network byte order (MSB).</p> <p>For example: <pre><code>var addr = ipaddr.parse(\"127.0.0.1\");\naddr.toByteArray(); // =&gt; [0x7f, 0, 0, 1]\n</code></pre></p> <p>or</p> <pre><code>var addr = ipaddr.parse(\"2001:db8::1\");\naddr.toByteArray(); // =&gt; [0x20, 1, 0xd, 0xb8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-binary-path/readme/","title":"is-binary-path","text":"<p>Check if a file path is a binary file</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-binary-path/readme/#install","title":"Install","text":"<pre><code>$ npm install is-binary-path\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-binary-path/readme/#usage","title":"Usage","text":"<pre><code>const isBinaryPath = require('is-binary-path');\n\nisBinaryPath('source/unicorn.png');\n//=&gt; true\n\nisBinaryPath('source/unicorn.txt');\n//=&gt; false\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-binary-path/readme/#related","title":"Related","text":"<ul> <li>binary-extensions - List of binary file extensions</li> <li>is-text-path - Check if a filepath is a text file</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-binary-path/readme/#license","title":"License","text":"<p>MIT \u00a9 Sindre Sorhus, Paul Miller</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-extglob/","title":"is-extglob","text":"<p>Returns true if a string has an extglob.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-extglob/#install","title":"Install","text":"<p>Install with npm:</p> <pre><code>$ npm install --save is-extglob\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-extglob/#usage","title":"Usage","text":"<pre><code>var isExtglob = require('is-extglob');\n</code></pre> <p>True</p> <pre><code>isExtglob('?(abc)');\nisExtglob('@(abc)');\nisExtglob('!(abc)');\nisExtglob('*(abc)');\nisExtglob('+(abc)');\n</code></pre> <p>False</p> <p>Escaped extglobs:</p> <pre><code>isExtglob('\\\\?(abc)');\nisExtglob('\\\\@(abc)');\nisExtglob('\\\\!(abc)');\nisExtglob('\\\\*(abc)');\nisExtglob('\\\\+(abc)');\n</code></pre> <p>Everything else...</p> <pre><code>isExtglob('foo.js');\nisExtglob('!foo.js');\nisExtglob('*.js');\nisExtglob('**/abc.js');\nisExtglob('abc/*.js');\nisExtglob('abc/(aaa|bbb).js');\nisExtglob('abc/[a-z].js');\nisExtglob('abc/{a,b}.js');\nisExtglob('abc/?.js');\nisExtglob('abc.js');\nisExtglob('abc/def/ghi.js');\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-extglob/#history","title":"History","text":"<p>v2.0</p> <p>Adds support for escaping. Escaped exglobs no longer return true.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-extglob/#about","title":"About","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/is-extglob/#related-projects","title":"Related projects","text":"<ul> <li>has-glob: Returns <code>true</code> if an array has a glob pattern. | homepage</li> <li>is-glob: Returns <code>true</code> if the given string looks like a glob pattern or an extglob pattern\u2026 more | homepage</li> <li>micromatch: Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch. | homepage</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-extglob/#contributing","title":"Contributing","text":"<p>Pull requests and stars are always welcome. For bugs and feature requests, please create an issue.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-extglob/#building-docs","title":"Building docs","text":"<p>(This document was generated by verb-generate-readme (a verb generator), please don't edit the readme directly. Any changes to the readme must be made in .verb.md.)</p> <p>To generate the readme and API documentation with verb:</p> <pre><code>$ npm install -g verb verb-generate-readme &amp;&amp; verb\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-extglob/#running-tests","title":"Running tests","text":"<p>Install dev dependencies:</p> <pre><code>$ npm install -d &amp;&amp; npm test\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-extglob/#author","title":"Author","text":"<p>Jon Schlinkert</p> <ul> <li>github/jonschlinkert</li> <li>twitter/jonschlinkert</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-extglob/#license","title":"License","text":"<p>Copyright \u00a9 2016, Jon Schlinkert. Released under the MIT license.</p> <p>This file was generated by verb-generate-readme, v0.1.31, on October 12, 2016.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-glob/","title":"is-glob","text":"<p>Returns <code>true</code> if the given string looks like a glob pattern or an extglob pattern. This makes it easy to create code that only uses external modules like node-glob when necessary, resulting in much faster code execution and initialization time, and a better user experience.</p> <p>Please consider following this project's author, Jon Schlinkert, and consider starring the project to show your  and support.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-glob/#install","title":"Install","text":"<p>Install with npm:</p> <pre><code>$ npm install --save is-glob\n</code></pre> <p>You might also be interested in is-valid-glob and has-glob.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-glob/#usage","title":"Usage","text":"<pre><code>var isGlob = require('is-glob');\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-glob/#default-behavior","title":"Default behavior","text":"<p>True</p> <p>Patterns that have glob characters or regex patterns will return <code>true</code>:</p> <pre><code>isGlob('!foo.js');\nisGlob('*.js');\nisGlob('**/abc.js');\nisGlob('abc/*.js');\nisGlob('abc/(aaa|bbb).js');\nisGlob('abc/[a-z].js');\nisGlob('abc/{a,b}.js');\n//=&gt; true\n</code></pre> <p>Extglobs</p> <pre><code>isGlob('abc/@(a).js');\nisGlob('abc/!(a).js');\nisGlob('abc/+(a).js');\nisGlob('abc/*(a).js');\nisGlob('abc/?(a).js');\n//=&gt; true\n</code></pre> <p>False</p> <p>Escaped globs or extglobs return <code>false</code>:</p> <pre><code>isGlob('abc/\\\\@(a).js');\nisGlob('abc/\\\\!(a).js');\nisGlob('abc/\\\\+(a).js');\nisGlob('abc/\\\\*(a).js');\nisGlob('abc/\\\\?(a).js');\nisGlob('\\\\!foo.js');\nisGlob('\\\\*.js');\nisGlob('\\\\*\\\\*/abc.js');\nisGlob('abc/\\\\*.js');\nisGlob('abc/\\\\(aaa|bbb).js');\nisGlob('abc/\\\\[a-z].js');\nisGlob('abc/\\\\{a,b}.js');\n//=&gt; false\n</code></pre> <p>Patterns that do not have glob patterns return <code>false</code>:</p> <pre><code>isGlob('abc.js');\nisGlob('abc/def/ghi.js');\nisGlob('foo.js');\nisGlob('abc/@.js');\nisGlob('abc/+.js');\nisGlob('abc/?.js');\nisGlob();\nisGlob(null);\n//=&gt; false\n</code></pre> <p>Arrays are also <code>false</code> (If you want to check if an array has a glob pattern, use has-glob):</p> <pre><code>isGlob(['**/*.js']);\nisGlob(['foo.js']);\n//=&gt; false\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-glob/#option-strict","title":"Option strict","text":"<p>When <code>options.strict === false</code> the behavior is less strict in determining if a pattern is a glob. Meaning that some patterns that would return <code>false</code> may return <code>true</code>. This is done so that matching libraries like micromatch have a chance at determining if the pattern is a glob or not.</p> <p>True</p> <p>Patterns that have glob characters or regex patterns will return <code>true</code>:</p> <pre><code>isGlob('!foo.js', {strict: false});\nisGlob('*.js', {strict: false});\nisGlob('**/abc.js', {strict: false});\nisGlob('abc/*.js', {strict: false});\nisGlob('abc/(aaa|bbb).js', {strict: false});\nisGlob('abc/[a-z].js', {strict: false});\nisGlob('abc/{a,b}.js', {strict: false});\n//=&gt; true\n</code></pre> <p>Extglobs</p> <pre><code>isGlob('abc/@(a).js', {strict: false});\nisGlob('abc/!(a).js', {strict: false});\nisGlob('abc/+(a).js', {strict: false});\nisGlob('abc/*(a).js', {strict: false});\nisGlob('abc/?(a).js', {strict: false});\n//=&gt; true\n</code></pre> <p>False</p> <p>Escaped globs or extglobs return <code>false</code>:</p> <pre><code>isGlob('\\\\!foo.js', {strict: false});\nisGlob('\\\\*.js', {strict: false});\nisGlob('\\\\*\\\\*/abc.js', {strict: false});\nisGlob('abc/\\\\*.js', {strict: false});\nisGlob('abc/\\\\(aaa|bbb).js', {strict: false});\nisGlob('abc/\\\\[a-z].js', {strict: false});\nisGlob('abc/\\\\{a,b}.js', {strict: false});\n//=&gt; false\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-glob/#about","title":"About","text":"Contributing  Pull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).   Running Tests  Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:  <pre><code>$ npm install &amp;&amp; npm test\n</code></pre> Building docs  _(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_  To generate the readme, run the following command:  <pre><code>$ npm install -g verbose/verb#dev verb-generate-readme &amp;&amp; verb\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-glob/#related-projects","title":"Related projects","text":"<p>You might also be interested in these projects:</p> <ul> <li>assemble: Get the rocks out of your socks! Assemble makes you fast at creating web projects\u2026 more | homepage</li> <li>base: Framework for rapidly creating high quality, server-side node.js applications, using plugins like building blocks | homepage</li> <li>update: Be scalable! Update is a new, open source developer framework and CLI for automating updates\u2026 more | homepage</li> <li>verb: Documentation generator for GitHub projects. Verb is extremely powerful, easy to use, and is used\u2026 more | homepage</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-glob/#contributors","title":"Contributors","text":"Commits Contributor 47 jonschlinkert 5 doowb 1 phated 1 danhper 1 paulmillr"},{"location":"system-desing/crud-app/JS/server/node_modules/is-glob/#author","title":"Author","text":"<p>Jon Schlinkert</p> <ul> <li>GitHub Profile</li> <li>Twitter Profile</li> <li>LinkedIn Profile</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-glob/#license","title":"License","text":"<p>Copyright \u00a9 2019, Jon Schlinkert. Released under the MIT License.</p> <p>This file was generated by verb-generate-readme, v0.8.0, on March 27, 2019.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/","title":"is-number","text":"<p>Returns true if the value is a finite number.</p> <p>Please consider following this project's author, Jon Schlinkert, and consider starring the project to show your  and support.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#install","title":"Install","text":"<p>Install with npm:</p> <pre><code>$ npm install --save is-number\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#why-is-this-needed","title":"Why is this needed?","text":"<p>In JavaScript, it's not always as straightforward as it should be to reliably check if a value is a number. It's common for devs to use <code>+</code>, <code>-</code>, or <code>Number()</code> to cast a string value to a number (for example, when values are returned from user input, regex matches, parsers, etc). But there are many non-intuitive edge cases that yield unexpected results:</p> <pre><code>console.log(+[]); //=&gt; 0\nconsole.log(+''); //=&gt; 0\nconsole.log(+'   '); //=&gt; 0\nconsole.log(typeof NaN); //=&gt; 'number'\n</code></pre> <p>This library offers a performant way to smooth out edge cases like these.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#usage","title":"Usage","text":"<pre><code>const isNumber = require('is-number');\n</code></pre> <p>See the tests for more examples.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#true","title":"true","text":"<pre><code>isNumber(5e3);               // true\nisNumber(0xff);              // true\nisNumber(-1.1);              // true\nisNumber(0);                 // true\nisNumber(1);                 // true\nisNumber(1.1);               // true\nisNumber(10);                // true\nisNumber(10.10);             // true\nisNumber(100);               // true\nisNumber('-1.1');            // true\nisNumber('0');               // true\nisNumber('012');             // true\nisNumber('0xff');            // true\nisNumber('1');               // true\nisNumber('1.1');             // true\nisNumber('10');              // true\nisNumber('10.10');           // true\nisNumber('100');             // true\nisNumber('5e3');             // true\nisNumber(parseInt('012'));   // true\nisNumber(parseFloat('012')); // true\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#false","title":"False","text":"<p>Everything else is false, as you would expect:</p> <pre><code>isNumber(Infinity);          // false\nisNumber(NaN);               // false\nisNumber(null);              // false\nisNumber(undefined);         // false\nisNumber('');                // false\nisNumber('   ');             // false\nisNumber('foo');             // false\nisNumber([1]);               // false\nisNumber([]);                // false\nisNumber(function () {});    // false\nisNumber({});                // false\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#release-history","title":"Release history","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#700","title":"7.0.0","text":"<ul> <li>Refactor. Now uses <code>.isFinite</code> if it exists.</li> <li>Performance is about the same as v6.0 when the value is a string or number. But it's now 3x-4x faster when the value is not a string or number.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#600","title":"6.0.0","text":"<ul> <li>Optimizations, thanks to @benaadams.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#500","title":"5.0.0","text":"<p>Breaking changes</p> <ul> <li>removed support for <code>instanceof Number</code> and <code>instanceof String</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#benchmarks","title":"Benchmarks","text":"<p>As with all benchmarks, take these with a grain of salt. See the benchmarks for more detail.</p> <pre><code># all\nv7.0 x 413,222 ops/sec \u00b12.02% (86 runs sampled)\nv6.0 x 111,061 ops/sec \u00b11.29% (85 runs sampled)\nparseFloat x 317,596 ops/sec \u00b11.36% (86 runs sampled)\nfastest is 'v7.0'\n\n# string\nv7.0 x 3,054,496 ops/sec \u00b11.05% (89 runs sampled)\nv6.0 x 2,957,781 ops/sec \u00b10.98% (88 runs sampled)\nparseFloat x 3,071,060 ops/sec \u00b11.13% (88 runs sampled)\nfastest is 'parseFloat,v7.0'\n\n# number\nv7.0 x 3,146,895 ops/sec \u00b10.89% (89 runs sampled)\nv6.0 x 3,214,038 ops/sec \u00b11.07% (89 runs sampled)\nparseFloat x 3,077,588 ops/sec \u00b11.07% (87 runs sampled)\nfastest is 'v6.0'\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#about","title":"About","text":"Contributing  Pull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).   Running Tests  Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:  <pre><code>$ npm install &amp;&amp; npm test\n</code></pre> Building docs  _(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_  To generate the readme, run the following command:  <pre><code>$ npm install -g verbose/verb#dev verb-generate-readme &amp;&amp; verb\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#related-projects","title":"Related projects","text":"<p>You might also be interested in these projects:</p> <ul> <li>is-plain-object: Returns true if an object was created by the <code>Object</code> constructor. | homepage</li> <li>is-primitive: Returns <code>true</code> if the value is a primitive.  | homepage</li> <li>isobject: Returns true if the value is an object and not an array or null. | homepage</li> <li>kind-of: Get the native type of a value. | homepage</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#contributors","title":"Contributors","text":"Commits Contributor 49 jonschlinkert 5 charlike-old 1 benaadams 1 realityking"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#author","title":"Author","text":"<p>Jon Schlinkert</p> <ul> <li>LinkedIn Profile</li> <li>GitHub Profile</li> <li>Twitter Profile</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-number/#license","title":"License","text":"<p>Copyright \u00a9 2018, Jon Schlinkert. Released under the MIT License.</p> <p>This file was generated by verb-generate-readme, v0.6.0, on June 15, 2018.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-promise/readme/","title":"Readme","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/is-promise/readme/#is-promise","title":"is-promise","text":"<p>Test whether an object looks like a promises-a+ promise</p> <p> </p>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-promise/readme/#installation","title":"Installation","text":"<pre><code>$ npm install is-promise\n</code></pre> <p>You can also use it client side via npm.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-promise/readme/#api","title":"API","text":"<pre><code>import isPromise from 'is-promise';\n\nisPromise(Promise.resolve());//=&gt;true\nisPromise({then:function () {...}});//=&gt;true\nisPromise(null);//=&gt;false\nisPromise({});//=&gt;false\nisPromise({then: true})//=&gt;false\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/is-promise/readme/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/","title":"jsonwebtoken","text":"Build Dependency <p>An implementation of JSON Web Tokens.</p> <p>This was developed against <code>draft-ietf-oauth-json-web-token-08</code>. It makes use of node-jws</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#install","title":"Install","text":"<pre><code>$ npm install jsonwebtoken\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#migration-notes","title":"Migration notes","text":"<ul> <li>From v8 to v9</li> <li>From v7 to v8</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#usage","title":"Usage","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#jwtsignpayload-secretorprivatekey-options-callback","title":"jwt.sign(payload, secretOrPrivateKey, [options, callback])","text":"<p>(Asynchronous) If a callback is supplied, the callback is called with the <code>err</code> or the JWT.</p> <p>(Synchronous) Returns the JsonWebToken as string</p> <p><code>payload</code> could be an object literal, buffer or string representing valid JSON. </p> <p>Please note that <code>exp</code> or any other claim is only set if the payload is an object literal. Buffer or string payloads are not checked for JSON validity.</p> <p>If <code>payload</code> is not a buffer or a string, it will be coerced into a string using <code>JSON.stringify</code>.</p> <p><code>secretOrPrivateKey</code> is a string (utf-8 encoded), buffer, object, or KeyObject containing either the secret for HMAC algorithms or the PEM encoded private key for RSA and ECDSA. In case of a private key with passphrase an object <code>{ key, passphrase }</code> can be used (based on crypto documentation), in this case be sure you pass the <code>algorithm</code> option. When signing with RSA algorithms the minimum modulus length is 2048 except when the allowInsecureKeySizes option is set to true. Private keys below this size will be rejected with an error.</p> <p><code>options</code>:</p> <ul> <li><code>algorithm</code> (default: <code>HS256</code>)</li> <li><code>expiresIn</code>: expressed in seconds or a string describing a time span vercel/ms.  <p>Eg: <code>60</code>, <code>\"2 days\"</code>, <code>\"10h\"</code>, <code>\"7d\"</code>. A numeric value is interpreted as a seconds count. If you use a string be sure you provide the time units (days, hours, etc), otherwise milliseconds unit is used by default (<code>\"120\"</code> is equal to <code>\"120ms\"</code>).</p> </li> <li><code>notBefore</code>: expressed in seconds or a string describing a time span vercel/ms.  <p>Eg: <code>60</code>, <code>\"2 days\"</code>, <code>\"10h\"</code>, <code>\"7d\"</code>. A numeric value is interpreted as a seconds count. If you use a string be sure you provide the time units (days, hours, etc), otherwise milliseconds unit is used by default (<code>\"120\"</code> is equal to <code>\"120ms\"</code>).</p> </li> <li><code>audience</code></li> <li><code>issuer</code></li> <li><code>jwtid</code></li> <li><code>subject</code></li> <li><code>noTimestamp</code></li> <li><code>header</code></li> <li><code>keyid</code></li> <li><code>mutatePayload</code>: if true, the sign function will modify the payload object directly. This is useful if you need a raw reference to the payload after claims have been applied to it but before it has been encoded into a token.</li> <li><code>allowInsecureKeySizes</code>: if true allows private keys with a modulus below 2048 to be used for RSA</li> <li><code>allowInvalidAsymmetricKeyTypes</code>: if true, allows asymmetric keys which do not match the specified algorithm. This option is intended only for backwards compatability and should be avoided.</li> </ul> <p>There are no default values for <code>expiresIn</code>, <code>notBefore</code>, <code>audience</code>, <code>subject</code>, <code>issuer</code>.  These claims can also be provided in the payload directly with <code>exp</code>, <code>nbf</code>, <code>aud</code>, <code>sub</code> and <code>iss</code> respectively, but you can't include in both places.</p> <p>Remember that <code>exp</code>, <code>nbf</code> and <code>iat</code> are NumericDate, see related Token Expiration (exp claim)</p> <p>The header can be customized via the <code>options.header</code> object.</p> <p>Generated jwts will include an <code>iat</code> (issued at) claim by default unless <code>noTimestamp</code> is specified. If <code>iat</code> is inserted in the payload, it will be used instead of the real timestamp for calculating other things like <code>exp</code> given a timespan in <code>options.expiresIn</code>.</p> <p>Synchronous Sign with default (HMAC SHA256)</p> <pre><code>var jwt = require('jsonwebtoken');\nvar token = jwt.sign({ foo: 'bar' }, 'shhhhh');\n</code></pre> <p>Synchronous Sign with RSA SHA256 <pre><code>// sign with RSA SHA256\nvar privateKey = fs.readFileSync('private.key');\nvar token = jwt.sign({ foo: 'bar' }, privateKey, { algorithm: 'RS256' });\n</code></pre></p> <p>Sign asynchronously <pre><code>jwt.sign({ foo: 'bar' }, privateKey, { algorithm: 'RS256' }, function(err, token) {\n  console.log(token);\n});\n</code></pre></p> <p>Backdate a jwt 30 seconds <pre><code>var older_token = jwt.sign({ foo: 'bar', iat: Math.floor(Date.now() / 1000) - 30 }, 'shhhhh');\n</code></pre></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#token-expiration-exp-claim","title":"Token Expiration (exp claim)","text":"<p>The standard for JWT defines an <code>exp</code> claim for expiration. The expiration is represented as a NumericDate:</p> <p>A JSON numeric value representing the number of seconds from 1970-01-01T00:00:00Z UTC until the specified UTC date/time, ignoring leap seconds.  This is equivalent to the IEEE Std 1003.1, 2013 Edition [POSIX.1] definition \"Seconds Since the Epoch\", in which each day is accounted for by exactly 86400 seconds, other than that non-integer values can be represented.  See RFC 3339 [RFC3339] for details regarding date/times in general and UTC in particular.</p> <p>This means that the <code>exp</code> field should contain the number of seconds since the epoch.</p> <p>Signing a token with 1 hour of expiration:</p> <pre><code>jwt.sign({\n  exp: Math.floor(Date.now() / 1000) + (60 * 60),\n  data: 'foobar'\n}, 'secret');\n</code></pre> <p>Another way to generate a token like this with this library is:</p> <pre><code>jwt.sign({\n  data: 'foobar'\n}, 'secret', { expiresIn: 60 * 60 });\n\n//or even better:\n\njwt.sign({\n  data: 'foobar'\n}, 'secret', { expiresIn: '1h' });\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#jwtverifytoken-secretorpublickey-options-callback","title":"jwt.verify(token, secretOrPublicKey, [options, callback])","text":"<p>(Asynchronous) If a callback is supplied, function acts asynchronously. The callback is called with the decoded payload if the signature is valid and optional expiration, audience, or issuer are valid. If not, it will be called with the error.</p> <p>(Synchronous) If a callback is not supplied, function acts synchronously. Returns the payload decoded if the signature is valid and optional expiration, audience, or issuer are valid. If not, it will throw the error.</p> <p>Warning: When the token comes from an untrusted source (e.g. user input or external requests), the returned decoded payload should be treated like any other user input; please make sure to sanitize and only work with properties that are expected</p> <p><code>token</code> is the JsonWebToken string</p> <p><code>secretOrPublicKey</code> is a string (utf-8 encoded), buffer, or KeyObject containing either the secret for HMAC algorithms, or the PEM encoded public key for RSA and ECDSA. If <code>jwt.verify</code> is called asynchronous, <code>secretOrPublicKey</code> can be a function that should fetch the secret or public key. See below for a detailed example</p> <p>As mentioned in this comment, there are other libraries that expect base64 encoded secrets (random bytes encoded using base64), if that is your case you can pass <code>Buffer.from(secret, 'base64')</code>, by doing this the secret will be decoded using base64 and the token verification will use the original random bytes.</p> <p><code>options</code></p> <ul> <li><code>algorithms</code>: List of strings with the names of the allowed algorithms. For instance, <code>[\"HS256\", \"HS384\"]</code>.  <p>If not specified a defaults will be used based on the type of key provided * secret - ['HS256', 'HS384', 'HS512'] * rsa - ['RS256', 'RS384', 'RS512'] * ec - ['ES256', 'ES384', 'ES512'] * default - ['RS256', 'RS384', 'RS512']</p> </li> <li><code>audience</code>: if you want to check audience (<code>aud</code>), provide a value here. The audience can be checked against a string, a regular expression or a list of strings and/or regular expressions.  <p>Eg: <code>\"urn:foo\"</code>, <code>/urn:f[o]{2}/</code>, <code>[/urn:f[o]{2}/, \"urn:bar\"]</code></p> </li> <li><code>complete</code>: return an object with the decoded <code>{ payload, header, signature }</code> instead of only the usual content of the payload.</li> <li><code>issuer</code> (optional): string or array of strings of valid values for the <code>iss</code> field.</li> <li><code>jwtid</code> (optional): if you want to check JWT ID (<code>jti</code>), provide a string value here.</li> <li><code>ignoreExpiration</code>: if <code>true</code> do not validate the expiration of the token.</li> <li><code>ignoreNotBefore</code>...</li> <li><code>subject</code>: if you want to check subject (<code>sub</code>), provide a value here</li> <li><code>clockTolerance</code>: number of seconds to tolerate when checking the <code>nbf</code> and <code>exp</code> claims, to deal with small clock differences among different servers</li> <li><code>maxAge</code>: the maximum allowed age for tokens to still be valid. It is expressed in seconds or a string describing a time span vercel/ms.  <p>Eg: <code>1000</code>, <code>\"2 days\"</code>, <code>\"10h\"</code>, <code>\"7d\"</code>. A numeric value is interpreted as a seconds count. If you use a string be sure you provide the time units (days, hours, etc), otherwise milliseconds unit is used by default (<code>\"120\"</code> is equal to <code>\"120ms\"</code>).</p> </li> <li><code>clockTimestamp</code>: the time in seconds that should be used as the current time for all necessary comparisons.</li> <li><code>nonce</code>: if you want to check <code>nonce</code> claim, provide a string value here. It is used on Open ID for the ID Tokens. (Open ID implementation notes)</li> <li><code>allowInvalidAsymmetricKeyTypes</code>: if true, allows asymmetric keys which do not match the specified algorithm. This option is intended only for backwards compatability and should be avoided.</li> </ul> <pre><code>// verify a token symmetric - synchronous\nvar decoded = jwt.verify(token, 'shhhhh');\nconsole.log(decoded.foo) // bar\n\n// verify a token symmetric\njwt.verify(token, 'shhhhh', function(err, decoded) {\n  console.log(decoded.foo) // bar\n});\n\n// invalid token - synchronous\ntry {\n  var decoded = jwt.verify(token, 'wrong-secret');\n} catch(err) {\n  // err\n}\n\n// invalid token\njwt.verify(token, 'wrong-secret', function(err, decoded) {\n  // err\n  // decoded undefined\n});\n\n// verify a token asymmetric\nvar cert = fs.readFileSync('public.pem');  // get public key\njwt.verify(token, cert, function(err, decoded) {\n  console.log(decoded.foo) // bar\n});\n\n// verify audience\nvar cert = fs.readFileSync('public.pem');  // get public key\njwt.verify(token, cert, { audience: 'urn:foo' }, function(err, decoded) {\n  // if audience mismatch, err == invalid audience\n});\n\n// verify issuer\nvar cert = fs.readFileSync('public.pem');  // get public key\njwt.verify(token, cert, { audience: 'urn:foo', issuer: 'urn:issuer' }, function(err, decoded) {\n  // if issuer mismatch, err == invalid issuer\n});\n\n// verify jwt id\nvar cert = fs.readFileSync('public.pem');  // get public key\njwt.verify(token, cert, { audience: 'urn:foo', issuer: 'urn:issuer', jwtid: 'jwtid' }, function(err, decoded) {\n  // if jwt id mismatch, err == invalid jwt id\n});\n\n// verify subject\nvar cert = fs.readFileSync('public.pem');  // get public key\njwt.verify(token, cert, { audience: 'urn:foo', issuer: 'urn:issuer', jwtid: 'jwtid', subject: 'subject' }, function(err, decoded) {\n  // if subject mismatch, err == invalid subject\n});\n\n// alg mismatch\nvar cert = fs.readFileSync('public.pem'); // get public key\njwt.verify(token, cert, { algorithms: ['RS256'] }, function (err, payload) {\n  // if token alg != RS256,  err == invalid signature\n});\n\n// Verify using getKey callback\n// Example uses https://github.com/auth0/node-jwks-rsa as a way to fetch the keys.\nvar jwksClient = require('jwks-rsa');\nvar client = jwksClient({\n  jwksUri: 'https://sandrino.auth0.com/.well-known/jwks.json'\n});\nfunction getKey(header, callback){\n  client.getSigningKey(header.kid, function(err, key) {\n    var signingKey = key.publicKey || key.rsaPublicKey;\n    callback(null, signingKey);\n  });\n}\n\njwt.verify(token, getKey, options, function(err, decoded) {\n  console.log(decoded.foo) // bar\n});\n</code></pre> Need to peek into a JWT without verifying it? (Click to expand)  ### jwt.decode(token [, options])  (Synchronous) Returns the decoded payload without verifying if the signature is valid.  &gt; __Warning:__ This will __not__ verify whether the signature is valid. You should __not__ use this for untrusted messages. You most likely want to use `jwt.verify` instead.  &gt; __Warning:__ When the token comes from an untrusted source (e.g. user input or external request), the returned decoded payload should be treated like any other user input; please make sure to sanitize and only work with properties that are expected   `token` is the JsonWebToken string  `options`:  * `json`: force JSON.parse on the payload even if the header doesn't contain `\"typ\":\"JWT\"`. * `complete`: return an object with the decoded payload and header.  Example  <pre><code>// get the decoded payload ignoring signature, no secretOrPrivateKey needed\nvar decoded = jwt.decode(token);\n\n// get the decoded payload and header\nvar decoded = jwt.decode(token, {complete: true});\nconsole.log(decoded.header);\nconsole.log(decoded.payload)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#errors-codes","title":"Errors &amp; Codes","text":"<p>Possible thrown errors during verification. Error is the first argument of the verification callback.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#tokenexpirederror","title":"TokenExpiredError","text":"<p>Thrown error if the token is expired.</p> <p>Error object:</p> <ul> <li>name: 'TokenExpiredError'</li> <li>message: 'jwt expired'</li> <li>expiredAt: [ExpDate]</li> </ul> <pre><code>jwt.verify(token, 'shhhhh', function(err, decoded) {\n  if (err) {\n    /*\n      err = {\n        name: 'TokenExpiredError',\n        message: 'jwt expired',\n        expiredAt: 1408621000\n      }\n    */\n  }\n});\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#jsonwebtokenerror","title":"JsonWebTokenError","text":"<p>Error object:</p> <ul> <li>name: 'JsonWebTokenError'</li> <li>message:</li> <li>'invalid token' - the header or payload could not be parsed</li> <li>'jwt malformed' - the token does not have three components (delimited by a <code>.</code>)</li> <li>'jwt signature is required'</li> <li>'invalid signature'</li> <li>'jwt audience invalid. expected: [OPTIONS AUDIENCE]'</li> <li>'jwt issuer invalid. expected: [OPTIONS ISSUER]'</li> <li>'jwt id invalid. expected: [OPTIONS JWT ID]'</li> <li>'jwt subject invalid. expected: [OPTIONS SUBJECT]'</li> </ul> <pre><code>jwt.verify(token, 'shhhhh', function(err, decoded) {\n  if (err) {\n    /*\n      err = {\n        name: 'JsonWebTokenError',\n        message: 'jwt malformed'\n      }\n    */\n  }\n});\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#notbeforeerror","title":"NotBeforeError","text":"<p>Thrown if current time is before the nbf claim.</p> <p>Error object:</p> <ul> <li>name: 'NotBeforeError'</li> <li>message: 'jwt not active'</li> <li>date: 2018-10-04T16:10:44.000Z</li> </ul> <pre><code>jwt.verify(token, 'shhhhh', function(err, decoded) {\n  if (err) {\n    /*\n      err = {\n        name: 'NotBeforeError',\n        message: 'jwt not active',\n        date: 2018-10-04T16:10:44.000Z\n      }\n    */\n  }\n});\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#algorithms-supported","title":"Algorithms supported","text":"<p>Array of supported algorithms. The following algorithms are currently supported.</p> alg Parameter Value Digital Signature or MAC Algorithm HS256 HMAC using SHA-256 hash algorithm HS384 HMAC using SHA-384 hash algorithm HS512 HMAC using SHA-512 hash algorithm RS256 RSASSA-PKCS1-v1_5 using SHA-256 hash algorithm RS384 RSASSA-PKCS1-v1_5 using SHA-384 hash algorithm RS512 RSASSA-PKCS1-v1_5 using SHA-512 hash algorithm PS256 RSASSA-PSS using SHA-256 hash algorithm (only node ^6.12.0 OR &gt;=8.0.0) PS384 RSASSA-PSS using SHA-384 hash algorithm (only node ^6.12.0 OR &gt;=8.0.0) PS512 RSASSA-PSS using SHA-512 hash algorithm (only node ^6.12.0 OR &gt;=8.0.0) ES256 ECDSA using P-256 curve and SHA-256 hash algorithm ES384 ECDSA using P-384 curve and SHA-384 hash algorithm ES512 ECDSA using P-521 curve and SHA-512 hash algorithm none No digital signature or MAC value included"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#refreshing-jwts","title":"Refreshing JWTs","text":"<p>First of all, we recommend you to think carefully if auto-refreshing a JWT will not introduce any vulnerability in your system.</p> <p>We are not comfortable including this as part of the library, however, you can take a look at this example to show how this could be accomplished. Apart from that example there are an issue and a pull request to get more knowledge about this topic.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#todo","title":"TODO","text":"<ul> <li>X.509 certificate chain is not checked</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#issue-reporting","title":"Issue Reporting","text":"<p>If you have found a bug or if you have a feature request, please report them at this repository issues section. Please do not report security vulnerabilities on the public GitHub issue tracker. The Responsible Disclosure Program details the procedure for disclosing security issues.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#author","title":"Author","text":"<p>Auth0</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/jsonwebtoken/#license","title":"License","text":"<p>This project is licensed under the MIT license. See the LICENSE file for more info.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/jwa/","title":"node-jwa","text":"<p>A JSON Web Algorithms implementation focusing (exclusively, at this point) on the algorithms necessary for JSON Web Signatures.</p> <p>This library supports all of the required, recommended and optional cryptographic algorithms for JWS:</p> alg Parameter Value Digital Signature or MAC Algorithm HS256 HMAC using SHA-256 hash algorithm HS384 HMAC using SHA-384 hash algorithm HS512 HMAC using SHA-512 hash algorithm RS256 RSASSA using SHA-256 hash algorithm RS384 RSASSA using SHA-384 hash algorithm RS512 RSASSA using SHA-512 hash algorithm PS256 RSASSA-PSS using SHA-256 hash algorithm PS384 RSASSA-PSS using SHA-384 hash algorithm PS512 RSASSA-PSS using SHA-512 hash algorithm ES256 ECDSA using P-256 curve and SHA-256 hash algorithm ES384 ECDSA using P-384 curve and SHA-384 hash algorithm ES512 ECDSA using P-521 curve and SHA-512 hash algorithm none No digital signature or MAC value included <p>Please note that PS* only works on Node 6.12+ (excluding 7.x).</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/jwa/#requirements","title":"Requirements","text":"<p>In order to run the tests, a recent version of OpenSSL is required. The version that comes with OS X (OpenSSL 0.9.8r 8 Feb 2011) is not recent enough, as it does not fully support ECDSA keys. You'll need to use a version &gt; 1.0.0; I tested with OpenSSL 1.0.1c 10 May 2012.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/jwa/#testing","title":"Testing","text":"<p>To run the tests, do</p> <pre><code>$ npm test\n</code></pre> <p>This will generate a bunch of keypairs to use in testing. If you want to generate new keypairs, do <code>make clean</code> before running <code>npm test</code> again.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/jwa/#methodology","title":"Methodology","text":"<p>I spawn <code>openssl dgst -sign</code> to test OpenSSL sign \u2192 JS verify and <code>openssl dgst -verify</code> to test JS sign \u2192 OpenSSL verify for each of the RSA and ECDSA algorithms.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/jwa/#usage","title":"Usage","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/jwa/#jwaalgorithm","title":"jwa(algorithm)","text":"<p>Creates a new <code>jwa</code> object with <code>sign</code> and <code>verify</code> methods for the algorithm. Valid values for algorithm can be found in the table above (<code>'HS256'</code>, <code>'HS384'</code>, etc) and are case-insensitive. Passing an invalid algorithm value will throw a <code>TypeError</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/jwa/#jwasigninput-secretorprivatekey","title":"jwa#sign(input, secretOrPrivateKey)","text":"<p>Sign some input with either a secret for HMAC algorithms, or a private key for RSA and ECDSA algorithms.</p> <p>If input is not already a string or buffer, <code>JSON.stringify</code> will be called on it to attempt to coerce it.</p> <p>For the HMAC algorithm, <code>secretOrPrivateKey</code> should be a string or a buffer. For ECDSA and RSA, the value should be a string representing a PEM encoded private key.</p> <p>Output base64url formatted. This is for convenience as JWS expects the signature in this format. If your application needs the output in a different format, please open an issue. In the meantime, you can use brianloveswords/base64url to decode the signature.</p> <p>As of nodejs v0.11.8, SPKAC support was introduce. If your nodeJs version satisfies, then you can pass an object <code>{ key: '..', passphrase: '...' }</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/jwa/#jwaverifyinput-signature-secretorpublickey","title":"jwa#verify(input, signature, secretOrPublicKey)","text":"<p>Verify a signature. Returns <code>true</code> or <code>false</code>.</p> <p><code>signature</code> should be a base64url encoded string.</p> <p>For the HMAC algorithm, <code>secretOrPublicKey</code> should be a string or a buffer. For ECDSA and RSA, the value should be a string represented a PEM encoded public key.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/jwa/#example","title":"Example","text":"<p>HMAC <pre><code>const jwa = require('jwa');\n\nconst hmac = jwa('HS256');\nconst input = 'super important stuff';\nconst secret = 'shhhhhh';\n\nconst signature = hmac.sign(input, secret);\nhmac.verify(input, signature, secret) // === true\nhmac.verify(input, signature, 'trickery!') // === false\n</code></pre></p> <p>With keys <pre><code>const fs = require('fs');\nconst jwa = require('jwa');\nconst privateKey = fs.readFileSync(__dirname + '/ecdsa-p521-private.pem');\nconst publicKey = fs.readFileSync(__dirname + '/ecdsa-p521-public.pem');\n\nconst ecdsa = jwa('ES512');\nconst input = 'very important stuff';\n\nconst signature = ecdsa.sign(input, privateKey);\necdsa.verify(input, signature, publicKey) // === true\n</code></pre></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/jwa/#license","title":"License","text":"<p>MIT</p> <pre><code>Copyright (c) 2013 Brian J. Brennan\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/CHANGELOG/","title":"Change Log","text":"<p>All notable changes to this project will be documented in this file.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/CHANGELOG/#300","title":"[3.0.0]","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/jws/CHANGELOG/#changed","title":"Changed","text":"<ul> <li>BREAKING: <code>jwt.verify</code> now requires an <code>algorithm</code> parameter, and   <code>jws.createVerify</code> requires an <code>algorithm</code> option. The <code>\"alg\"</code> field   signature headers is ignored. This mitigates a critical security flaw   in the library which would allow an attacker to generate signatures with   arbitrary contents that would be accepted by <code>jwt.verify</code>. See   https://auth0.com/blog/2015/03/31/critical-vulnerabilities-in-json-web-token-libraries/   for details.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/CHANGELOG/#200-2015-01-30","title":"2.0.0 - 2015-01-30","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/jws/CHANGELOG/#changed_1","title":"Changed","text":"<ul> <li> <p>BREAKING: Default payload encoding changed from <code>binary</code> to   <code>utf8</code>. <code>utf8</code> is a is a more sensible default than <code>binary</code> because   many payloads, as far as I can tell, will contain user-facing   strings that could be in any language. (<code>6b6de48</code>)</p> </li> <li> <p>Code reorganization, thanks @fearphage! (<code>7880050</code>)</p> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/CHANGELOG/#added","title":"Added","text":"<ul> <li>Option in all relevant methods for <code>encoding</code>. For those few users   that might be depending on a <code>binary</code> encoding of the messages, this   is for them. (<code>6b6de48</code>)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/","title":"node-jws","text":"<p>An implementation of JSON Web Signatures.</p> <p>This was developed against <code>draft-ietf-jose-json-web-signature-08</code> and implements the entire spec except X.509 Certificate Chain signing/verifying (patches welcome).</p> <p>There are both synchronous (<code>jws.sign</code>, <code>jws.verify</code>) and streaming (<code>jws.createSign</code>, <code>jws.createVerify</code>) APIs.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#install","title":"Install","text":"<pre><code>$ npm install jws\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#usage","title":"Usage","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#jwsalgorithms","title":"jws.ALGORITHMS","text":"<p>Array of supported algorithms. The following algorithms are currently supported.</p> alg Parameter Value Digital Signature or MAC Algorithm HS256 HMAC using SHA-256 hash algorithm HS384 HMAC using SHA-384 hash algorithm HS512 HMAC using SHA-512 hash algorithm RS256 RSASSA using SHA-256 hash algorithm RS384 RSASSA using SHA-384 hash algorithm RS512 RSASSA using SHA-512 hash algorithm PS256 RSASSA-PSS using SHA-256 hash algorithm PS384 RSASSA-PSS using SHA-384 hash algorithm PS512 RSASSA-PSS using SHA-512 hash algorithm ES256 ECDSA using P-256 curve and SHA-256 hash algorithm ES384 ECDSA using P-384 curve and SHA-384 hash algorithm ES512 ECDSA using P-521 curve and SHA-512 hash algorithm none No digital signature or MAC value included"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#jwssignoptions","title":"jws.sign(options)","text":"<p>(Synchronous) Return a JSON Web Signature for a header and a payload.</p> <p>Options:</p> <ul> <li><code>header</code></li> <li><code>payload</code></li> <li><code>secret</code> or <code>privateKey</code></li> <li><code>encoding</code> (Optional, defaults to 'utf8')</li> </ul> <p><code>header</code> must be an object with an <code>alg</code> property. <code>header.alg</code> must be one a value found in <code>jws.ALGORITHMS</code>. See above for a table of supported algorithms.</p> <p>If <code>payload</code> is not a buffer or a string, it will be coerced into a string using <code>JSON.stringify</code>.</p> <p>Example</p> <pre><code>const signature = jws.sign({\n  header: { alg: 'HS256' },\n  payload: 'h. jon benjamin',\n  secret: 'has a van',\n});\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#jwsverifysignature-algorithm-secretorkey","title":"jws.verify(signature, algorithm, secretOrKey)","text":"<p>(Synchronous) Returns <code>true</code> or <code>false</code> for whether a signature matches a secret or key.</p> <p><code>signature</code> is a JWS Signature. <code>header.alg</code> must be a value found in <code>jws.ALGORITHMS</code>. See above for a table of supported algorithms. <code>secretOrKey</code> is a string or buffer containing either the secret for HMAC algorithms, or the PEM encoded public key for RSA and ECDSA.</p> <p>Note that the <code>\"alg\"</code> value from the signature header is ignored.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#jwsdecodesignature","title":"jws.decode(signature)","text":"<p>(Synchronous) Returns the decoded header, decoded payload, and signature parts of the JWS Signature.</p> <p>Returns an object with three properties, e.g. <pre><code>{ header: { alg: 'HS256' },\n  payload: 'h. jon benjamin',\n  signature: 'YOWPewyGHKu4Y_0M_vtlEnNlqmFOclqp4Hy6hVHfFT4'\n}\n</code></pre></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#jwscreatesignoptions","title":"jws.createSign(options)","text":"<p>Returns a new SignStream object.</p> <p>Options:</p> <ul> <li><code>header</code> (required)</li> <li><code>payload</code></li> <li><code>key</code> || <code>privateKey</code> || <code>secret</code></li> <li><code>encoding</code> (Optional, defaults to 'utf8')</li> </ul> <p>Other than <code>header</code>, all options expect a string or a buffer when the value is known ahead of time, or a stream for convenience. <code>key</code>/<code>privateKey</code>/<code>secret</code> may also be an object when using an encrypted private key, see the crypto documentation.</p> <p>Example:</p> <pre><code>// This...\njws.createSign({\n  header: { alg: 'RS256' },\n  privateKey: privateKeyStream,\n  payload: payloadStream,\n}).on('done', function(signature) {\n  // ...\n});\n\n// is equivalent to this:\nconst signer = jws.createSign({\n  header: { alg: 'RS256' },\n});\nprivateKeyStream.pipe(signer.privateKey);\npayloadStream.pipe(signer.payload);\nsigner.on('done', function(signature) {\n  // ...\n});\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#jwscreateverifyoptions","title":"jws.createVerify(options)","text":"<p>Returns a new VerifyStream object.</p> <p>Options:</p> <ul> <li><code>signature</code></li> <li><code>algorithm</code></li> <li><code>key</code> || <code>publicKey</code> || <code>secret</code></li> <li><code>encoding</code> (Optional, defaults to 'utf8')</li> </ul> <p>All options expect a string or a buffer when the value is known ahead of time, or a stream for convenience.</p> <p>Example:</p> <pre><code>// This...\njws.createVerify({\n  publicKey: pubKeyStream,\n  signature: sigStream,\n}).on('done', function(verified, obj) {\n  // ...\n});\n\n// is equivilant to this:\nconst verifier = jws.createVerify();\npubKeyStream.pipe(verifier.publicKey);\nsigStream.pipe(verifier.signature);\nverifier.on('done', function(verified, obj) {\n  // ...\n});\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#class-signstream","title":"Class: SignStream","text":"<p>A <code>Readable Stream</code> that emits a single data event (the calculated signature) when done.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#event-done","title":"Event: 'done'","text":"<p><code>function (signature) { }</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#signerpayload","title":"signer.payload","text":"<p>A <code>Writable Stream</code> that expects the JWS payload. Do not use if you passed a <code>payload</code> option to the constructor.</p> <p>Example:</p> <pre><code>payloadStream.pipe(signer.payload);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#signersecretsignerkeysignerprivatekey","title":"signer.secretsigner.keysigner.privateKey","text":"<p>A <code>Writable Stream</code>. Expects the JWS secret for HMAC, or the privateKey for ECDSA and RSA. Do not use if you passed a <code>secret</code> or <code>key</code> option to the constructor.</p> <p>Example:</p> <pre><code>privateKeyStream.pipe(signer.privateKey);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#class-verifystream","title":"Class: VerifyStream","text":"<p>This is a <code>Readable Stream</code> that emits a single data event, the result of whether or not that signature was valid.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#event-done_1","title":"Event: 'done'","text":"<p><code>function (valid, obj) { }</code></p> <p><code>valid</code> is a boolean for whether or not the signature is valid.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#verifiersignature","title":"verifier.signature","text":"<p>A <code>Writable Stream</code> that expects a JWS Signature. Do not use if you passed a <code>signature</code> option to the constructor.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#verifiersecretverifierkeyverifierpublickey","title":"verifier.secretverifier.keyverifier.publicKey","text":"<p>A <code>Writable Stream</code> that expects a public key or secret. Do not use if you passed a <code>key</code> or <code>secret</code> option to the constructor.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#todo","title":"TODO","text":"<ul> <li> <p>It feels like there should be some convenience options/APIs for   defining the algorithm rather than having to define a header object   with <code>{ alg: 'ES512' }</code> or whatever every time.</p> </li> <li> <p>X.509 support, ugh</p> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/jws/readme/#license","title":"License","text":"<p>MIT</p> <pre><code>Copyright (c) 2013-2015 Brian J. Brennan\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/","title":"kareem","text":"<p>Re-imagined take on the hooks module, meant to offer additional flexibility in allowing you to execute hooks whenever necessary, as opposed to simply wrapping a single function.</p> <p>Named for the NBA's all-time leading scorer Kareem Abdul-Jabbar, known for his mastery of the hook shot</p> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#api","title":"API","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#pre-hooks","title":"pre hooks","text":"<p>Much like hooks, kareem lets you define pre and post hooks: pre hooks are called before a given function executes. Unlike hooks, kareem stores hooks and other internal state in a separate object, rather than relying on inheritance. Furthermore, kareem exposes an <code>execPre()</code> function that allows you to execute your pre hooks when appropriate, giving you more fine-grained control over your function hooks.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-runs-without-any-hooks-specified","title":"It runs without any hooks specified","text":"<pre><code>hooks.execPre('cook', null, function() {\n  // ...\n});\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-runs-basic-serial-pre-hooks","title":"It runs basic serial pre hooks","text":"<p>pre hook functions take one parameter, a \"done\" function that you execute when your pre hook is finished.</p> <pre><code>var count = 0;\n\nhooks.pre('cook', function(done) {\n  ++count;\n  done();\n});\n\nhooks.execPre('cook', null, function() {\n  assert.equal(1, count);\n});\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-can-run-multipe-pre-hooks","title":"It can run multipe pre hooks","text":"<pre><code>var count1 = 0;\nvar count2 = 0;\n\nhooks.pre('cook', function(done) {\n  ++count1;\n  done();\n});\n\nhooks.pre('cook', function(done) {\n  ++count2;\n  done();\n});\n\nhooks.execPre('cook', null, function() {\n  assert.equal(1, count1);\n  assert.equal(1, count2);\n});\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-can-run-fully-synchronous-pre-hooks","title":"It can run fully synchronous pre hooks","text":"<p>If your pre hook function takes no parameters, its assumed to be fully synchronous.</p> <pre><code>var count1 = 0;\nvar count2 = 0;\n\nhooks.pre('cook', function() {\n  ++count1;\n});\n\nhooks.pre('cook', function() {\n  ++count2;\n});\n\nhooks.execPre('cook', null, function(error) {\n  assert.equal(null, error);\n  assert.equal(1, count1);\n  assert.equal(1, count2);\n});\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-properly-attaches-context-to-pre-hooks","title":"It properly attaches context to pre hooks","text":"<p>Pre save hook functions are bound to the second parameter to <code>execPre()</code></p> <pre><code>hooks.pre('cook', function(done) {\n  this.bacon = 3;\n  done();\n});\n\nhooks.pre('cook', function(done) {\n  this.eggs = 4;\n  done();\n});\n\nvar obj = { bacon: 0, eggs: 0 };\n\n// In the pre hooks, `this` will refer to `obj`\nhooks.execPre('cook', obj, function(error) {\n  assert.equal(null, error);\n  assert.equal(3, obj.bacon);\n  assert.equal(4, obj.eggs);\n});\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-can-execute-parallel-async-pre-hooks","title":"It can execute parallel (async) pre hooks","text":"<p>Like the hooks module, you can declare \"async\" pre hooks - these take two parameters, the functions <code>next()</code> and <code>done()</code>. <code>next()</code> passes control to the next pre hook, but the underlying function won't be called until all async pre hooks have called <code>done()</code>.</p> <pre><code>hooks.pre('cook', true, function(next, done) {\n  this.bacon = 3;\n  next();\n  setTimeout(function() {\n    done();\n  }, 5);\n});\n\nhooks.pre('cook', true, function(next, done) {\n  next();\n  var _this = this;\n  setTimeout(function() {\n    _this.eggs = 4;\n    done();\n  }, 10);\n});\n\nhooks.pre('cook', function(next) {\n  this.waffles = false;\n  next();\n});\n\nvar obj = { bacon: 0, eggs: 0 };\n\nhooks.execPre('cook', obj, function() {\n  assert.equal(3, obj.bacon);\n  assert.equal(4, obj.eggs);\n  assert.equal(false, obj.waffles);\n});\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-supports-returning-a-promise","title":"It supports returning a promise","text":"<p>You can also return a promise from your pre hooks instead of calling <code>next()</code>. When the returned promise resolves, kareem will kick off the next middleware.</p> <pre><code>hooks.pre('cook', function() {\n  return new Promise(resolve =&gt; {\n    setTimeout(() =&gt; {\n      this.bacon = 3;\n      resolve();\n    }, 100);\n  });\n});\n\nvar obj = { bacon: 0 };\n\nhooks.execPre('cook', obj, function() {\n  assert.equal(3, obj.bacon);\n});\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#post-hooks","title":"post hooks","text":"<p>acquit:ignore:end</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-runs-without-any-hooks-specified_1","title":"It runs without any hooks specified","text":"<pre><code>hooks.execPost('cook', null, [1], function(error, eggs) {\n  assert.ifError(error);\n  assert.equal(1, eggs);\n  done();\n});\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-executes-with-parameters-passed-in","title":"It executes with parameters passed in","text":"<pre><code>hooks.post('cook', function(eggs, bacon, callback) {\n  assert.equal(1, eggs);\n  assert.equal(2, bacon);\n  callback();\n});\n\nhooks.execPost('cook', null, [1, 2], function(error, eggs, bacon) {\n  assert.ifError(error);\n  assert.equal(1, eggs);\n  assert.equal(2, bacon);\n});\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-can-use-synchronous-post-hooks","title":"It can use synchronous post hooks","text":"<pre><code>var execed = {};\n\nhooks.post('cook', function(eggs, bacon) {\n  execed.first = true;\n  assert.equal(1, eggs);\n  assert.equal(2, bacon);\n});\n\nhooks.post('cook', function(eggs, bacon, callback) {\n  execed.second = true;\n  assert.equal(1, eggs);\n  assert.equal(2, bacon);\n  callback();\n});\n\nhooks.execPost('cook', null, [1, 2], function(error, eggs, bacon) {\n  assert.ifError(error);\n  assert.equal(2, Object.keys(execed).length);\n  assert.ok(execed.first);\n  assert.ok(execed.second);\n  assert.equal(1, eggs);\n  assert.equal(2, bacon);\n});\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-supports-returning-a-promise_1","title":"It supports returning a promise","text":"<p>You can also return a promise from your post hooks instead of calling <code>next()</code>. When the returned promise resolves, kareem will kick off the next middleware.</p> <pre><code>hooks.post('cook', function(bacon) {\n  return new Promise(resolve =&gt; {\n    setTimeout(() =&gt; {\n      this.bacon = 3;\n      resolve();\n    }, 100);\n  });\n});\n\nvar obj = { bacon: 0 };\n\nhooks.execPost('cook', obj, obj, function() {\n  assert.equal(obj.bacon, 3);\n});\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#wrap","title":"wrap()","text":"<p>acquit:ignore:end</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-wraps-pre-and-post-calls-into-one-call","title":"It wraps pre and post calls into one call","text":"<pre><code>hooks.pre('cook', true, function(next, done) {\n  this.bacon = 3;\n  next();\n  setTimeout(function() {\n    done();\n  }, 5);\n});\n\nhooks.pre('cook', true, function(next, done) {\n  next();\n  var _this = this;\n  setTimeout(function() {\n    _this.eggs = 4;\n    done();\n  }, 10);\n});\n\nhooks.pre('cook', function(next) {\n  this.waffles = false;\n  next();\n});\n\nhooks.post('cook', function(obj) {\n  obj.tofu = 'no';\n});\n\nvar obj = { bacon: 0, eggs: 0 };\n\nvar args = [obj];\nargs.push(function(error, result) {\n  assert.ifError(error);\n  assert.equal(null, error);\n  assert.equal(3, obj.bacon);\n  assert.equal(4, obj.eggs);\n  assert.equal(false, obj.waffles);\n  assert.equal('no', obj.tofu);\n\n  assert.equal(obj, result);\n});\n\nhooks.wrap(\n  'cook',\n  function(o, callback) {\n    assert.equal(3, obj.bacon);\n    assert.equal(4, obj.eggs);\n    assert.equal(false, obj.waffles);\n    assert.equal(undefined, obj.tofu);\n    callback(null, o);\n  },\n  obj,\n  args);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#createwrapper","title":"createWrapper()","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-wraps-wrap-into-a-callable-function","title":"It wraps wrap() into a callable function","text":"<pre><code>hooks.pre('cook', true, function(next, done) {\n  this.bacon = 3;\n  next();\n  setTimeout(function() {\n    done();\n  }, 5);\n});\n\nhooks.pre('cook', true, function(next, done) {\n  next();\n  var _this = this;\n  setTimeout(function() {\n    _this.eggs = 4;\n    done();\n  }, 10);\n});\n\nhooks.pre('cook', function(next) {\n  this.waffles = false;\n  next();\n});\n\nhooks.post('cook', function(obj) {\n  obj.tofu = 'no';\n});\n\nvar obj = { bacon: 0, eggs: 0 };\n\nvar cook = hooks.createWrapper(\n  'cook',\n  function(o, callback) {\n    assert.equal(3, obj.bacon);\n    assert.equal(4, obj.eggs);\n    assert.equal(false, obj.waffles);\n    assert.equal(undefined, obj.tofu);\n    callback(null, o);\n  },\n  obj);\n\ncook(obj, function(error, result) {\n  assert.ifError(error);\n  assert.equal(3, obj.bacon);\n  assert.equal(4, obj.eggs);\n  assert.equal(false, obj.waffles);\n  assert.equal('no', obj.tofu);\n\n  assert.equal(obj, result);\n});\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#clone","title":"clone()","text":"<p>acquit:ignore:end</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-clones-a-kareem-object","title":"It clones a Kareem object","text":"<pre><code>var k1 = new Kareem();\nk1.pre('cook', function() {});\nk1.post('cook', function() {});\n\nvar k2 = k1.clone();\nassert.deepEqual(Array.from(k2._pres.keys()), ['cook']);\nassert.deepEqual(Array.from(k2._posts.keys()), ['cook']);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#merge","title":"merge()","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/#it-pulls-hooks-from-another-kareem-object","title":"It pulls hooks from another Kareem object","text":"<pre><code>var k1 = new Kareem();\nvar test1 = function() {};\nk1.pre('cook', test1);\nk1.post('cook', function() {});\n\nvar k2 = new Kareem();\nvar test2 = function() {};\nk2.pre('cook', test2);\nvar k3 = k2.merge(k1);\nassert.equal(k3._pres.get('cook').length, 2);\nassert.equal(k3._pres.get('cook')[0].fn, test2);\nassert.equal(k3._pres.get('cook')[1].fn, test1);\nassert.equal(k3._posts.get('cook').length, 1);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/","title":"Changelog","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#260-2024-03-04","title":"2.6.0 (2024-03-04)","text":"<ul> <li>feat: add TypeScript types</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#251-2023-01-06","title":"2.5.1 (2023-01-06)","text":"<ul> <li>fix: avoid passing final callback to pre hook, because calling the callback can mess up hook execution #36 Automattic/mongoose#12836</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#250-2022-12-01","title":"2.5.0 (2022-12-01)","text":"<ul> <li>feat: add errorHandler option to <code>post()</code> #34</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#240-2022-06-13","title":"2.4.0 (2022-06-13)","text":"<ul> <li>feat: add <code>overwriteResult()</code> and <code>skipWrappedFunction()</code> for more advanced control flow</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#234-2022-02-10","title":"2.3.4 (2022-02-10)","text":"<ul> <li>perf: various performance improvements #27 #24 #23 #22 #21 #20</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#233-2021-12-26","title":"2.3.3 (2021-12-26)","text":"<ul> <li>fix: handle sync errors in <code>wrap()</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#232-2020-12-08","title":"2.3.2 (2020-12-08)","text":"<ul> <li>fix: handle sync errors in pre hooks if there are multiple hooks</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#230-2018-09-24","title":"2.3.0 (2018-09-24)","text":"<ul> <li>chore(release): 2.2.3 (c8f2695)</li> <li>chore(release): 2.2.4 (a377a4f)</li> <li>chore(release): 2.2.5 (5a495e3)</li> <li>fix(filter): copy async pres correctly with <code>filter()</code> (1b1ed8a), closes Automattic/mongoose#3054</li> <li>feat: add filter() function (1f641f4)</li> <li>feat: support storing options on pre and post hooks (59220b9)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#223-2018-09-10","title":"2.2.3 (2018-09-10)","text":"<ul> <li>chore: release 2.2.3 (af653a3)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#222-2018-09-10","title":"2.2.2 (2018-09-10)","text":"<ul> <li>chore: release 2.2.2 (3f0144d)</li> <li>fix: allow merge() to not clone (e628d65)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#221-2018-06-05","title":"2.2.1 (2018-06-05)","text":"<ul> <li>chore: release 2.2.1 (4625a64)</li> <li>chore: remove lockfile from git (7f3e4e6)</li> <li>fix: handle numAsync correctly when merging (fef8e7e)</li> <li>test: repro issue with not copying numAsync (952d9db)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#220-2018-06-05","title":"2.2.0 (2018-06-05)","text":"<ul> <li>chore: release 2.2.0 (ff9ad03)</li> <li>fix: use maps instead of objects for _pres and _posts so <code>toString()</code> doesn't get reported as having (55df303), closes Automattic/mongoose#6538</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#210-2018-05-16","title":"2.1.0 (2018-05-16)","text":"<ul> <li>chore: release 2.1.0 (ba5f1bc)</li> <li>feat: add option to check wrapped function return value for promises (c9d7dd1)</li> <li>refactor: use const in wrap() (0fc21f9)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#207-2018-04-28","title":"2.0.7 (2018-04-28)","text":"<ul> <li>chore: release 2.0.7 (0bf91e6)</li> <li>feat: add <code>hasHooks()</code> (225f18d), closes Automattic/mongoose#6385</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#206-2018-03-22","title":"2.0.6 (2018-03-22)","text":"<ul> <li>chore: release 2.0.6 (f3d406b)</li> <li>fix(wrap): ensure fast path still wraps function in <code>nextTick()</code> for chaining (7000494), closes Automattic/mongoose#6250 dsanel/mongoose-delete#36</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#205-2018-02-22","title":"2.0.5 (2018-02-22)","text":"<ul> <li>chore: release 2.0.5 (3286612)</li> <li>perf(createWrapper): don't create wrapper if there are no hooks (5afc5b9), closes Automattic/mongoose#6126</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#204-2018-02-08","title":"2.0.4 (2018-02-08)","text":"<ul> <li>chore: release 2.0.4 (2ab0293)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#203-2018-02-01","title":"2.0.3 (2018-02-01)","text":"<ul> <li>chore: release 2.0.3 (3c1abe5)</li> <li>fix: use process.nextTick() re: Automattic/mongoose#6074 (e5bfe33), closes Automattic/mongoose#6074</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#202-2018-01-24","title":"2.0.2 (2018-01-24)","text":"<ul> <li>chore: fix license (a9d755c), closes #10</li> <li>chore: release 2.0.2 (fe87ab6)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#201-2018-01-09","title":"2.0.1 (2018-01-09)","text":"<ul> <li>chore: release 2.0.1 with lockfile bump (09c44fb)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#200-2018-01-09","title":"2.0.0 (2018-01-09)","text":"<ul> <li>chore: bump marked re: security (cc564a9)</li> <li>chore: release 2.0.0 (f511d1c)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#200-rc5-2017-12-23","title":"2.0.0-rc5 (2017-12-23)","text":"<ul> <li>chore: fix build on node 4+5 (6dac5a4)</li> <li>chore: fix built on node 4 + 5 again (434ef0a)</li> <li>chore: release 2.0.0-rc5 (25a32ee)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#200-rc4-2017-12-22","title":"2.0.0-rc4 (2017-12-22)","text":"<ul> <li>chore: release 2.0.0-rc4 (49fc083)</li> <li>BREAKING CHANGE: deduplicate when merging hooks re: Automattic/mongoose#2945 (d458573), closes Automattic/mongoose#2945</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#200-rc3-2017-12-22","title":"2.0.0-rc3 (2017-12-22)","text":"<ul> <li>chore: release 2.0.0-rc3 (adaaa00)</li> <li>feat: support returning promises from middleware functions (05b4480), closes Automattic/mongoose#3779</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#200-rc2-2017-12-21","title":"2.0.0-rc2 (2017-12-21)","text":"<ul> <li>chore: release 2.0.0-rc2 (76325fa)</li> <li>fix: ensure next() and done() run in next tick (6c20684)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#200-rc1-2017-12-21","title":"2.0.0-rc1 (2017-12-21)","text":"<ul> <li>chore: improve test coverage re: Automattic/mongoose#3232 (7b45cf0), closes Automattic/mongoose#3232</li> <li>chore: release 2.0.0-rc1 (9b83f52)</li> <li>BREAKING CHANGE: report sync exceptions as errors, only allow calling next() and done() once (674adcc), closes Automattic/mongoose#3483</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#200-rc0-2017-12-17","title":"2.0.0-rc0 (2017-12-17)","text":"<ul> <li>chore: release 2.0.0-rc0 (16b44b5)</li> <li>BREAKING CHANGE: drop support for node &lt; 4 (9cbb8c7)</li> <li>BREAKING CHANGE: remove useLegacyPost and add several new features (6dd8531), closes Automattic/mongoose#3232</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#150-2017-07-20","title":"1.5.0 (2017-07-20)","text":"<ul> <li>chore: release 1.5.0 (9c491a0)</li> <li>fix: improve post error handlers results (9928dd5), closes Automattic/mongoose#5466</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#142-2017-07-06","title":"1.4.2 (2017-07-06)","text":"<ul> <li>chore: release 1.4.2 (8d14ac5)</li> <li>fix: correct args re: Automattic/mongoose#5405 (3f28ae6), closes Automattic/mongoose#5405</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#141-2017-04-25","title":"1.4.1 (2017-04-25)","text":"<ul> <li>chore: release 1.4.1 (5ecf0c2)</li> <li>fix: handle numAsyncPres with clone() (c72e857), closes #8</li> <li>test: repro #8 (9b4d6b2), closes #8</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#140-2017-04-19","title":"1.4.0 (2017-04-19)","text":"<ul> <li>chore: release 1.4.0 (101c5f5)</li> <li>feat: add merge() function (285325e)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#130-2017-03-26","title":"1.3.0 (2017-03-26)","text":"<ul> <li>chore: release 1.3.0 (f3a9e50)</li> <li>feat: pass function args to execPre (4dd466d)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#121-2017-02-03","title":"1.2.1 (2017-02-03)","text":"<ul> <li>chore: release 1.2.1 (d97081f)</li> <li>fix: filter out _kareemIgnored args for error handlers re: Automattic/mongoose#4925 (ddc7aeb), closes Automattic/mongoose#4925</li> <li>fix: make error handlers handle errors in pre hooks (af38033), closes Automattic/mongoose#4927</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#120-2017-01-02","title":"1.2.0 (2017-01-02)","text":"<ul> <li>chore: release 1.2.0 (033225c)</li> <li>chore: upgrade deps (f9e9a09)</li> <li>feat: add _kareemIgnore re: Automattic/mongoose#4836 (7957771), closes Automattic/mongoose#4836</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#115-2016-12-13","title":"1.1.5 (2016-12-13)","text":"<ul> <li>chore: release 1.1.5 (1a9f684)</li> <li>fix: correct field name (04a0e9d)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#114-2016-12-09","title":"1.1.4 (2016-12-09)","text":"<ul> <li>chore: release 1.1.4 (ece401c)</li> <li>chore: run tests on node 6 (e0cb1cb)</li> <li>fix: only copy own properties in clone() (dfe28ce), closes #7</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#113-2016-06-27","title":"1.1.3 (2016-06-27)","text":"<ul> <li>chore: release 1.1.3 (87171c8)</li> <li>fix: couple more issues with arg processing (c65f523)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#112-2016-06-27","title":"1.1.2 (2016-06-27)","text":"<ul> <li>chore: release 1.1.2 (8e102b6)</li> <li>fix: add early return (4feda4e)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#111-2016-06-27","title":"1.1.1 (2016-06-27)","text":"<ul> <li>chore: release 1.1.1 (8bb3050)</li> <li>fix: skip error handlers if no error (0eb3a44)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#110-2016-05-11","title":"1.1.0 (2016-05-11)","text":"<ul> <li>chore: release 1.1.0 (85332d9)</li> <li>chore: test on node 4 and node 5 (1faefa1)</li> <li>100% coverage again (c9aee4e)</li> <li>add support for error post hooks (d378113)</li> <li>basic setup for sync hooks #4 (55aa081), closes #4</li> <li>proof of concept for error handlers (e4a07d9)</li> <li>refactor out handleWrapError helper (b19af38)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#101-2015-05-10","title":"1.0.1 (2015-05-10)","text":"<ul> <li>Fix #1 (de60dc6), closes #1</li> <li>release 1.0.1 (6971088)</li> <li>Run tests on iojs in travis (adcd201)</li> <li>support legacy post hook behavior in wrap() (23fa74c)</li> <li>Use node 0.12 in travis (834689d)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#100-2015-01-28","title":"1.0.0 (2015-01-28)","text":"<ul> <li>Tag 1.0.0 (4c5a35a)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#008-2015-01-27","title":"0.0.8 (2015-01-27)","text":"<ul> <li>Add clone function (688bba7)</li> <li>Add jscs for style checking (5c93149)</li> <li>Bump 0.0.8 (03c0d2f)</li> <li>Fix jscs config, add gulp rules (9989abf)</li> <li>fix Makefile typo (1f7e61a)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#007-2015-01-04","title":"0.0.7 (2015-01-04)","text":"<ul> <li>Bump 0.0.7 (98ef173)</li> <li>fix LearnBoost/mongoose#2553 - use null instead of undefined for err (9157b48), closes LearnBoost/mongoose#2553</li> <li>Regenerate docs (2331cdf)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#006-2015-01-01","title":"0.0.6 (2015-01-01)","text":"<ul> <li>Update docs and bump 0.0.6 (92c12a7)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#005-2015-01-01","title":"0.0.5 (2015-01-01)","text":"<ul> <li>Add coverage rule to Makefile (825a91c)</li> <li>Add coveralls to README (fb52369)</li> <li>Add coveralls to travis (93f6f15)</li> <li>Add createWrapper() function (ea77741)</li> <li>Add istanbul code coverage (6eceeef)</li> <li>Add some more comments for examples (c5b0c6f)</li> <li>Add travis (e6dcb06)</li> <li>Add travis badge to docs (ad8c9b3)</li> <li>Add wrap() tests, 100% coverage (6945be4)</li> <li>Better test coverage for execPost (d9ad539)</li> <li>Bump 0.0.5 (69875b1)</li> <li>Docs fix (15b7098)</li> <li>Fix silly mistake in docs generation (50373eb)</li> <li>Fix typo in readme (fec4925)</li> <li>Linkify travis badge (92b25fe)</li> <li>Make travis run coverage (747157b)</li> <li>Move travis status badge (d52e89b)</li> <li>Quick fix for coverage (50bbddb)</li> <li>Typo fix (adea794)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#004-2014-12-13","title":"0.0.4 (2014-12-13)","text":"<ul> <li>Bump 0.0.4, run docs generation (51a15fe)</li> <li>Use correct post parameters in wrap() (9bb5da3)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#003-2014-12-12","title":"0.0.3 (2014-12-12)","text":"<ul> <li>Add npm test script, fix small bug with args not getting passed through post (49e3e68)</li> <li>Bump 0.0.3 (65621d8)</li> <li>Update readme (901388b)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#002-2014-12-12","title":"0.0.2 (2014-12-12)","text":"<ul> <li>Add github repo and bump 0.0.2 (59db8be)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#001-2014-12-12","title":"0.0.1 (2014-12-12)","text":"<ul> <li>Add basic docs (ad29ea4)</li> <li>Add pre hooks (2ffc356)</li> <li>Add wrap function (68c540c)</li> <li>Bump to version 0.0.1 (a4bfd68)</li> <li>Initial commit (4002458)</li> <li>Initial deposit (98fc489)</li> <li>Post hooks (395b67c)</li> <li>Some basic setup work (82df75e)</li> <li>Support sync pre hooks (1cc1b9f)</li> <li>Update package.json description (978da18)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#225-2018-09-24","title":"2.2.5 (2018-09-24)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#224-2018-09-24","title":"2.2.4 (2018-09-24)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#223-2018-09-24","title":"2.2.3 (2018-09-24)","text":"<ul> <li>fix(filter): copy async pres correctly with <code>filter()</code> (1b1ed8a), closes Automattic/mongoose#3054</li> <li>feat: add filter() function (1f641f4)</li> <li>feat: support storing options on pre and post hooks (59220b9)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#223-2018-09-10_1","title":"2.2.3 (2018-09-10)","text":"<ul> <li>chore: release 2.2.3 (af653a3)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#222-2018-09-10_1","title":"2.2.2 (2018-09-10)","text":"<ul> <li>chore: release 2.2.2 (3f0144d)</li> <li>fix: allow merge() to not clone (e628d65)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#221-2018-06-05_1","title":"2.2.1 (2018-06-05)","text":"<ul> <li>chore: release 2.2.1 (4625a64)</li> <li>chore: remove lockfile from git (7f3e4e6)</li> <li>fix: handle numAsync correctly when merging (fef8e7e)</li> <li>test: repro issue with not copying numAsync (952d9db)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#220-2018-06-05_1","title":"2.2.0 (2018-06-05)","text":"<ul> <li>chore: release 2.2.0 (ff9ad03)</li> <li>fix: use maps instead of objects for _pres and _posts so <code>toString()</code> doesn't get reported as having (55df303), closes Automattic/mongoose#6538</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#210-2018-05-16_1","title":"2.1.0 (2018-05-16)","text":"<ul> <li>chore: release 2.1.0 (ba5f1bc)</li> <li>feat: add option to check wrapped function return value for promises (c9d7dd1)</li> <li>refactor: use const in wrap() (0fc21f9)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#207-2018-04-28_1","title":"2.0.7 (2018-04-28)","text":"<ul> <li>chore: release 2.0.7 (0bf91e6)</li> <li>feat: add <code>hasHooks()</code> (225f18d), closes Automattic/mongoose#6385</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#206-2018-03-22_1","title":"2.0.6 (2018-03-22)","text":"<ul> <li>chore: release 2.0.6 (f3d406b)</li> <li>fix(wrap): ensure fast path still wraps function in <code>nextTick()</code> for chaining (7000494), closes Automattic/mongoose#6250 dsanel/mongoose-delete#36</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#205-2018-02-22_1","title":"2.0.5 (2018-02-22)","text":"<ul> <li>chore: release 2.0.5 (3286612)</li> <li>perf(createWrapper): don't create wrapper if there are no hooks (5afc5b9), closes Automattic/mongoose#6126</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#204-2018-02-08_1","title":"2.0.4 (2018-02-08)","text":"<ul> <li>chore: release 2.0.4 (2ab0293)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#203-2018-02-01_1","title":"2.0.3 (2018-02-01)","text":"<ul> <li>chore: release 2.0.3 (3c1abe5)</li> <li>fix: use process.nextTick() re: Automattic/mongoose#6074 (e5bfe33), closes Automattic/mongoose#6074</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#202-2018-01-24_1","title":"2.0.2 (2018-01-24)","text":"<ul> <li>chore: fix license (a9d755c), closes #10</li> <li>chore: release 2.0.2 (fe87ab6)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#201-2018-01-09_1","title":"2.0.1 (2018-01-09)","text":"<ul> <li>chore: release 2.0.1 with lockfile bump (09c44fb)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#200-2018-01-09_1","title":"2.0.0 (2018-01-09)","text":"<ul> <li>chore: bump marked re: security (cc564a9)</li> <li>chore: release 2.0.0 (f511d1c)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#200-rc5-2017-12-23_1","title":"2.0.0-rc5 (2017-12-23)","text":"<ul> <li>chore: fix build on node 4+5 (6dac5a4)</li> <li>chore: fix built on node 4 + 5 again (434ef0a)</li> <li>chore: release 2.0.0-rc5 (25a32ee)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#200-rc4-2017-12-22_1","title":"2.0.0-rc4 (2017-12-22)","text":"<ul> <li>chore: release 2.0.0-rc4 (49fc083)</li> <li>BREAKING CHANGE: deduplicate when merging hooks re: Automattic/mongoose#2945 (d458573), closes Automattic/mongoose#2945</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#200-rc3-2017-12-22_1","title":"2.0.0-rc3 (2017-12-22)","text":"<ul> <li>chore: release 2.0.0-rc3 (adaaa00)</li> <li>feat: support returning promises from middleware functions (05b4480), closes Automattic/mongoose#3779</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#200-rc2-2017-12-21_1","title":"2.0.0-rc2 (2017-12-21)","text":"<ul> <li>chore: release 2.0.0-rc2 (76325fa)</li> <li>fix: ensure next() and done() run in next tick (6c20684)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#200-rc1-2017-12-21_1","title":"2.0.0-rc1 (2017-12-21)","text":"<ul> <li>chore: improve test coverage re: Automattic/mongoose#3232 (7b45cf0), closes Automattic/mongoose#3232</li> <li>chore: release 2.0.0-rc1 (9b83f52)</li> <li>BREAKING CHANGE: report sync exceptions as errors, only allow calling next() and done() once (674adcc), closes Automattic/mongoose#3483</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#200-rc0-2017-12-17_1","title":"2.0.0-rc0 (2017-12-17)","text":"<ul> <li>chore: release 2.0.0-rc0 (16b44b5)</li> <li>BREAKING CHANGE: drop support for node &lt; 4 (9cbb8c7)</li> <li>BREAKING CHANGE: remove useLegacyPost and add several new features (6dd8531), closes Automattic/mongoose#3232</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#150-2017-07-20_1","title":"1.5.0 (2017-07-20)","text":"<ul> <li>chore: release 1.5.0 (9c491a0)</li> <li>fix: improve post error handlers results (9928dd5), closes Automattic/mongoose#5466</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#142-2017-07-06_1","title":"1.4.2 (2017-07-06)","text":"<ul> <li>chore: release 1.4.2 (8d14ac5)</li> <li>fix: correct args re: Automattic/mongoose#5405 (3f28ae6), closes Automattic/mongoose#5405</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#141-2017-04-25_1","title":"1.4.1 (2017-04-25)","text":"<ul> <li>chore: release 1.4.1 (5ecf0c2)</li> <li>fix: handle numAsyncPres with clone() (c72e857), closes #8</li> <li>test: repro #8 (9b4d6b2), closes #8</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#140-2017-04-19_1","title":"1.4.0 (2017-04-19)","text":"<ul> <li>chore: release 1.4.0 (101c5f5)</li> <li>feat: add merge() function (285325e)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#130-2017-03-26_1","title":"1.3.0 (2017-03-26)","text":"<ul> <li>chore: release 1.3.0 (f3a9e50)</li> <li>feat: pass function args to execPre (4dd466d)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#121-2017-02-03_1","title":"1.2.1 (2017-02-03)","text":"<ul> <li>chore: release 1.2.1 (d97081f)</li> <li>fix: filter out _kareemIgnored args for error handlers re: Automattic/mongoose#4925 (ddc7aeb), closes Automattic/mongoose#4925</li> <li>fix: make error handlers handle errors in pre hooks (af38033), closes Automattic/mongoose#4927</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#120-2017-01-02_1","title":"1.2.0 (2017-01-02)","text":"<ul> <li>chore: release 1.2.0 (033225c)</li> <li>chore: upgrade deps (f9e9a09)</li> <li>feat: add _kareemIgnore re: Automattic/mongoose#4836 (7957771), closes Automattic/mongoose#4836</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#115-2016-12-13_1","title":"1.1.5 (2016-12-13)","text":"<ul> <li>chore: release 1.1.5 (1a9f684)</li> <li>fix: correct field name (04a0e9d)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#114-2016-12-09_1","title":"1.1.4 (2016-12-09)","text":"<ul> <li>chore: release 1.1.4 (ece401c)</li> <li>chore: run tests on node 6 (e0cb1cb)</li> <li>fix: only copy own properties in clone() (dfe28ce), closes #7</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#113-2016-06-27_1","title":"1.1.3 (2016-06-27)","text":"<ul> <li>chore: release 1.1.3 (87171c8)</li> <li>fix: couple more issues with arg processing (c65f523)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#112-2016-06-27_1","title":"1.1.2 (2016-06-27)","text":"<ul> <li>chore: release 1.1.2 (8e102b6)</li> <li>fix: add early return (4feda4e)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#111-2016-06-27_1","title":"1.1.1 (2016-06-27)","text":"<ul> <li>chore: release 1.1.1 (8bb3050)</li> <li>fix: skip error handlers if no error (0eb3a44)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#110-2016-05-11_1","title":"1.1.0 (2016-05-11)","text":"<ul> <li>chore: release 1.1.0 (85332d9)</li> <li>chore: test on node 4 and node 5 (1faefa1)</li> <li>100% coverage again (c9aee4e)</li> <li>add support for error post hooks (d378113)</li> <li>basic setup for sync hooks #4 (55aa081), closes #4</li> <li>proof of concept for error handlers (e4a07d9)</li> <li>refactor out handleWrapError helper (b19af38)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#101-2015-05-10_1","title":"1.0.1 (2015-05-10)","text":"<ul> <li>Fix #1 (de60dc6), closes #1</li> <li>release 1.0.1 (6971088)</li> <li>Run tests on iojs in travis (adcd201)</li> <li>support legacy post hook behavior in wrap() (23fa74c)</li> <li>Use node 0.12 in travis (834689d)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#100-2015-01-28_1","title":"1.0.0 (2015-01-28)","text":"<ul> <li>Tag 1.0.0 (4c5a35a)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#008-2015-01-27_1","title":"0.0.8 (2015-01-27)","text":"<ul> <li>Add clone function (688bba7)</li> <li>Add jscs for style checking (5c93149)</li> <li>Bump 0.0.8 (03c0d2f)</li> <li>Fix jscs config, add gulp rules (9989abf)</li> <li>fix Makefile typo (1f7e61a)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#007-2015-01-04_1","title":"0.0.7 (2015-01-04)","text":"<ul> <li>Bump 0.0.7 (98ef173)</li> <li>fix LearnBoost/mongoose#2553 - use null instead of undefined for err (9157b48), closes LearnBoost/mongoose#2553</li> <li>Regenerate docs (2331cdf)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#006-2015-01-01_1","title":"0.0.6 (2015-01-01)","text":"<ul> <li>Update docs and bump 0.0.6 (92c12a7)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#005-2015-01-01_1","title":"0.0.5 (2015-01-01)","text":"<ul> <li>Add coverage rule to Makefile (825a91c)</li> <li>Add coveralls to README (fb52369)</li> <li>Add coveralls to travis (93f6f15)</li> <li>Add createWrapper() function (ea77741)</li> <li>Add istanbul code coverage (6eceeef)</li> <li>Add some more comments for examples (c5b0c6f)</li> <li>Add travis (e6dcb06)</li> <li>Add travis badge to docs (ad8c9b3)</li> <li>Add wrap() tests, 100% coverage (6945be4)</li> <li>Better test coverage for execPost (d9ad539)</li> <li>Bump 0.0.5 (69875b1)</li> <li>Docs fix (15b7098)</li> <li>Fix silly mistake in docs generation (50373eb)</li> <li>Fix typo in readme (fec4925)</li> <li>Linkify travis badge (92b25fe)</li> <li>Make travis run coverage (747157b)</li> <li>Move travis status badge (d52e89b)</li> <li>Quick fix for coverage (50bbddb)</li> <li>Typo fix (adea794)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#004-2014-12-13_1","title":"0.0.4 (2014-12-13)","text":"<ul> <li>Bump 0.0.4, run docs generation (51a15fe)</li> <li>Use correct post parameters in wrap() (9bb5da3)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#003-2014-12-12_1","title":"0.0.3 (2014-12-12)","text":"<ul> <li>Add npm test script, fix small bug with args not getting passed through post (49e3e68)</li> <li>Bump 0.0.3 (65621d8)</li> <li>Update readme (901388b)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#002-2014-12-12_1","title":"0.0.2 (2014-12-12)","text":"<ul> <li>Add github repo and bump 0.0.2 (59db8be)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/CHANGELOG/#001-2014-12-12_1","title":"0.0.1 (2014-12-12)","text":"<ul> <li>Add basic docs (ad29ea4)</li> <li>Add pre hooks (2ffc356)</li> <li>Add wrap function (68c540c)</li> <li>Bump to version 0.0.1 (a4bfd68)</li> <li>Initial commit (4002458)</li> <li>Initial deposit (98fc489)</li> <li>Post hooks (395b67c)</li> <li>Some basic setup work (82df75e)</li> <li>Support sync pre hooks (1cc1b9f)</li> <li>Update package.json description (978da18)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/SECURITY/","title":"SECURITY","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/kareem/SECURITY/#security-contact-information","title":"Security contact information","text":"<p>To report a security vulnerability, please use the Tidelift security contact. Tidelift will coordinate the fix and disclosure.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.includes/","title":"lodash.includes v4.3.0","text":"<p>The lodash method <code>_.includes</code> exported as a Node.js module.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.includes/#installation","title":"Installation","text":"<p>Using npm: <pre><code>$ {sudo -H} npm i -g npm\n$ npm i --save lodash.includes\n</code></pre></p> <p>In Node.js: <pre><code>var includes = require('lodash.includes');\n</code></pre></p> <p>See the documentation or package source for more details.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.isboolean/","title":"lodash.isboolean v3.0.3","text":"<p>The lodash method <code>_.isBoolean</code> exported as a Node.js module.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.isboolean/#installation","title":"Installation","text":"<p>Using npm: <pre><code>$ {sudo -H} npm i -g npm\n$ npm i --save lodash.isboolean\n</code></pre></p> <p>In Node.js: <pre><code>var isBoolean = require('lodash.isboolean');\n</code></pre></p> <p>See the documentation or package source for more details.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.isinteger/","title":"lodash.isinteger v4.0.4","text":"<p>The lodash method <code>_.isInteger</code> exported as a Node.js module.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.isinteger/#installation","title":"Installation","text":"<p>Using npm: <pre><code>$ {sudo -H} npm i -g npm\n$ npm i --save lodash.isinteger\n</code></pre></p> <p>In Node.js: <pre><code>var isInteger = require('lodash.isinteger');\n</code></pre></p> <p>See the documentation or package source for more details.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.isnumber/","title":"lodash.isnumber v3.0.3","text":"<p>The lodash method <code>_.isNumber</code> exported as a Node.js module.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.isnumber/#installation","title":"Installation","text":"<p>Using npm: <pre><code>$ {sudo -H} npm i -g npm\n$ npm i --save lodash.isnumber\n</code></pre></p> <p>In Node.js: <pre><code>var isNumber = require('lodash.isnumber');\n</code></pre></p> <p>See the documentation or package source for more details.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.isplainobject/","title":"lodash.isplainobject v4.0.6","text":"<p>The lodash method <code>_.isPlainObject</code> exported as a Node.js module.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.isplainobject/#installation","title":"Installation","text":"<p>Using npm: <pre><code>$ {sudo -H} npm i -g npm\n$ npm i --save lodash.isplainobject\n</code></pre></p> <p>In Node.js: <pre><code>var isPlainObject = require('lodash.isplainobject');\n</code></pre></p> <p>See the documentation or package source for more details.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.isstring/","title":"lodash.isstring v4.0.1","text":"<p>The lodash method <code>_.isString</code> exported as a Node.js module.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.isstring/#installation","title":"Installation","text":"<p>Using npm: <pre><code>$ {sudo -H} npm i -g npm\n$ npm i --save lodash.isstring\n</code></pre></p> <p>In Node.js: <pre><code>var isString = require('lodash.isstring');\n</code></pre></p> <p>See the documentation or package source for more details.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.once/","title":"lodash.once v4.1.1","text":"<p>The lodash method <code>_.once</code> exported as a Node.js module.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/lodash.once/#installation","title":"Installation","text":"<p>Using npm: <pre><code>$ {sudo -H} npm i -g npm\n$ npm i --save lodash.once\n</code></pre></p> <p>In Node.js: <pre><code>var once = require('lodash.once');\n</code></pre></p> <p>See the documentation or package source for more details.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/math-intrinsics/","title":"math-intrinsics","text":"<p>ES Math-related intrinsics and helpers, robustly cached.</p> <ul> <li><code>abs</code></li> <li><code>floor</code></li> <li><code>isFinite</code></li> <li><code>isInteger</code></li> <li><code>isNaN</code></li> <li><code>isNegativeZero</code></li> <li><code>max</code></li> <li><code>min</code></li> <li><code>mod</code></li> <li><code>pow</code></li> <li><code>round</code></li> <li><code>sign</code></li> <li><code>constants/maxArrayLength</code></li> <li><code>constants/maxSafeInteger</code></li> <li><code>constants/maxValue</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/math-intrinsics/#tests","title":"Tests","text":"<p>Simply clone the repo, <code>npm install</code>, and run <code>npm test</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/math-intrinsics/#security","title":"Security","text":"<p>Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/math-intrinsics/CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/math-intrinsics/CHANGELOG/#v110-2024-12-18","title":"v1.1.0 - 2024-12-18","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/math-intrinsics/CHANGELOG/#commits","title":"Commits","text":"<ul> <li>[New] add <code>round</code> <code>7cfb044</code></li> <li>[Tests] add attw <code>e96be8f</code></li> <li>[Dev Deps] update <code>@types/tape</code> <code>30d0023</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/math-intrinsics/CHANGELOG/#v100-2024-12-11","title":"v1.0.0 - 2024-12-11","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/math-intrinsics/CHANGELOG/#commits_1","title":"Commits","text":"<ul> <li>Initial implementation, tests, readme, types <code>b898caa</code></li> <li>Initial commit <code>02745b0</code></li> <li>[New] add <code>constants/maxArrayLength</code>, <code>mod</code> <code>b978178</code></li> <li>npm init <code>a39fc57</code></li> <li>Only apps should have lockfiles <code>9451580</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/","title":"media-typer","text":"<p>Simple RFC 6838 media type parser.</p> <p>This module will parse a given media type into it's component parts, like type, subtype, and suffix. A formatter is also provided to put them back together and the two can be combined to normalize media types into a canonical form.</p> <p>If you are looking to parse the string that represents a media type and it's parameters in HTTP (for example, the <code>Content-Type</code> header), use the content-type module.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/#installation","title":"Installation","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install media-typer\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/#api","title":"API","text":"<pre><code>var typer = require('media-typer')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/#typerparsestring","title":"typer.parse(string)","text":"<pre><code>var obj = typer.parse('image/svg+xml')\n</code></pre> <p>Parse a media type string. This will return an object with the following properties (examples are shown for the string <code>'image/svg+xml; charset=utf-8'</code>):</p> <ul> <li> <p><code>type</code>: The type of the media type (always lower case). Example: <code>'image'</code></p> </li> <li> <p><code>subtype</code>: The subtype of the media type (always lower case). Example: <code>'svg'</code></p> </li> <li> <p><code>suffix</code>: The suffix of the media type (always lower case). Example: <code>'xml'</code></p> </li> </ul> <p>If the given type string is invalid, then a <code>TypeError</code> is thrown.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/#typerformatobj","title":"typer.format(obj)","text":"<pre><code>var obj = typer.format({ type: 'image', subtype: 'svg', suffix: 'xml' })\n</code></pre> <p>Format an object into a media type string. This will return a string of the mime type for the given object. For the properties of the object, see the documentation for <code>typer.parse(string)</code>.</p> <p>If any of the given object values are invalid, then a <code>TypeError</code> is thrown.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/#typerteststring","title":"typer.test(string)","text":"<pre><code>var valid = typer.test('image/svg+xml')\n</code></pre> <p>Validate a media type string. This will return <code>true</code> is the string is a well- formatted media type, or <code>false</code> otherwise.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/HISTORY/","title":"1.1.0 / 2019-04-24","text":"<ul> <li>Add <code>test(string)</code> function</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/HISTORY/#102-2019-04-19","title":"1.0.2 / 2019-04-19","text":"<ul> <li>Fix JSDoc comment for <code>parse</code> function</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/HISTORY/#101-2018-10-20","title":"1.0.1 / 2018-10-20","text":"<ul> <li>Remove left over <code>parameters</code> property from class</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/HISTORY/#100-2018-10-20","title":"1.0.0 / 2018-10-20","text":"<p>This major release brings the module back to it's RFC 6838 roots. If you want a module to parse the <code>Content-Type</code> or similar HTTP headers, use the <code>content-type</code> module instead.</p> <ul> <li>Drop support for Node.js below 0.8</li> <li>Remove parameter handling, which is outside RFC 6838 scope</li> <li>Remove <code>parse(req)</code> and <code>parse(res)</code> signatures</li> <li>perf: enable strict mode</li> <li>perf: use a class for object creation</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/HISTORY/#030-2014-09-07","title":"0.3.0 / 2014-09-07","text":"<ul> <li>Support Node.js 0.6</li> <li>Throw error when parameter format invalid on parse</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/HISTORY/#020-2014-06-18","title":"0.2.0 / 2014-06-18","text":"<ul> <li>Add <code>typer.format()</code> to format media types</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/HISTORY/#010-2014-06-17","title":"0.1.0 / 2014-06-17","text":"<ul> <li>Accept <code>req</code> as argument to <code>parse</code></li> <li>Accept <code>res</code> as argument to <code>parse</code></li> <li>Parse media type with extra LWS between type and first parameter</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/media-typer/HISTORY/#000-2014-06-13","title":"0.0.0 / 2014-06-13","text":"<ul> <li>Initial implementation</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/memory-pager/","title":"memory-pager","text":"<p>Access memory using small fixed sized buffers instead of allocating a huge buffer. Useful if you are implementing sparse data structures (such as large bitfield).</p> <p></p> <pre><code>npm install memory-pager\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/memory-pager/#usage","title":"Usage","text":"<pre><code>var pager = require('paged-memory')\n\nvar pages = pager(1024) // use 1kb per page\n\nvar page = pages.get(10) // get page #10\n\nconsole.log(page.offset) // 10240\nconsole.log(page.buffer) // a blank 1kb buffer\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/memory-pager/#api","title":"API","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/memory-pager/#var-pages-pagerpagesize","title":"<code>var pages = pager(pageSize)</code>","text":"<p>Create a new pager. <code>pageSize</code> defaults to <code>1024</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/memory-pager/#var-page-pagesgetpagenumber-noallocate","title":"<code>var page = pages.get(pageNumber, [noAllocate])</code>","text":"<p>Get a page. The page will be allocated at first access.</p> <p>Optionally you can set the <code>noAllocate</code> flag which will make the method return undefined if no page has been allocated already</p> <p>A page looks like this</p> <pre><code>{\n  offset: byteOffset,\n  buffer: bufferWithPageSize\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/memory-pager/#pagessetpagenumber-buffer","title":"<code>pages.set(pageNumber, buffer)</code>","text":"<p>Explicitly set the buffer for a page.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/memory-pager/#pagesupdatedpage","title":"<code>pages.updated(page)</code>","text":"<p>Mark a page as updated.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/memory-pager/#pageslastupdate","title":"<code>pages.lastUpdate()</code>","text":"<p>Get the last page that was updated.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/memory-pager/#var-buf-pagestobuffer","title":"<code>var buf = pages.toBuffer()</code>","text":"<p>Concat all pages allocated pages into a single buffer</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/memory-pager/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/merge-descriptors/readme/","title":"merge-descriptors","text":"<p>Merge objects using their property descriptors</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/merge-descriptors/readme/#install","title":"Install","text":"<pre><code>npm install merge-descriptors\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/merge-descriptors/readme/#usage","title":"Usage","text":"<pre><code>import mergeDescriptors from 'merge-descriptors';\n\nconst thing = {\n    get name() {\n        return 'John'\n    }\n}\n\nconst animal = {};\n\nmergeDescriptors(animal, thing);\n\nconsole.log(animal.name);\n//=&gt; 'John'\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/merge-descriptors/readme/#api","title":"API","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/merge-descriptors/readme/#mergedestination-source-overwrite","title":"merge(destination, source, overwrite?)","text":"<p>Merges \"own\" properties from a source to a destination object, including non-enumerable and accessor-defined properties. It retains original values and descriptors, ensuring the destination receives a complete and accurate copy of the source's properties.</p> <p>Returns the modified destination object.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/merge-descriptors/readme/#destination","title":"destination","text":"<p>Type: <code>object</code></p> <p>The object to receive properties.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/merge-descriptors/readme/#source","title":"source","text":"<p>Type: <code>object</code></p> <p>The object providing properties.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/merge-descriptors/readme/#overwrite","title":"overwrite","text":"<p>Type: <code>boolean</code>\\ Default: <code>true</code></p> <p>A boolean to control overwriting of existing properties.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/","title":"mime-db","text":"<p>This is a large database of mime types and information about them. It consists of a single, public JSON file and does not include any logic, allowing it to remain as un-opinionated as possible with an API. It aggregates data from the following sources:</p> <ul> <li>https://www.iana.org/assignments/media-types/media-types.xhtml</li> <li>https://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types</li> <li>https://hg.nginx.org/nginx/raw-file/default/conf/mime.types</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/#installation","title":"Installation","text":"<pre><code>npm install mime-db\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/#database-download","title":"Database Download","text":"<p>If you intend to use this in a web browser, you can conveniently access the JSON file via jsDelivr, a popular CDN (Content Delivery Network). To ensure stability and compatibility, it is advisable to specify a release tag instead of using the 'master' branch. This is because the JSON file's format might change in future updates, and relying on a specific release tag will prevent potential issues arising from these changes.</p> <pre><code>https://cdn.jsdelivr.net/gh/jshttp/mime-db@master/db.json\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/#usage","title":"Usage","text":"<pre><code>var db = require('mime-db')\n\n// grab data on .js files\nvar data = db['application/javascript']\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/#data-structure","title":"Data Structure","text":"<p>The JSON file is a map lookup for lowercased mime types. Each mime type has the following properties:</p> <ul> <li><code>.source</code> - where the mime type is defined.     If not set, it's probably a custom media type.<ul> <li><code>apache</code> - Apache common media types</li> <li><code>iana</code> - IANA-defined media types</li> <li><code>nginx</code> - nginx media types</li> </ul> </li> <li><code>.extensions[]</code> - known extensions associated with this mime type.</li> <li><code>.compressible</code> - whether a file of this type can be gzipped.</li> <li><code>.charset</code> - the default charset associated with this type, if any.</li> </ul> <p>If unknown, every property could be <code>undefined</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/#note-on-mime-type-data-and-semver","title":"Note on MIME Type Data and Semver","text":"<p>This package considers the programmatic api as the semver compatibility. This means the MIME type resolution is not considered in the semver bumps. This means that if you want to pin your <code>mime-db</code> data you will need to do it in your application. While this expectation was not set in docs until now, it is how the pacakge operated, so we do not feel this is a breaking change.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/#contributing","title":"Contributing","text":"<p>The primary way to contribute to this database is by updating the data in one of the upstream sources. The database is updated from the upstreams periodically and will pull in any changes.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/#registering-media-types","title":"Registering Media Types","text":"<p>The best way to get new media types included in this library is to register them with the IANA. The community registration procedure is outlined in RFC 6838 section 5. Types registered with the IANA are automatically pulled into this library.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/#direct-inclusion","title":"Direct Inclusion","text":"<p>If that is not possible / feasible, they can be added directly here as a \"custom\" type. To do this, it is required to have a primary source that definitively lists the media type. If an extension is going to be listed as associated with this media type, the source must definitively link the media type and extension as well.</p> <p>To edit the database, only make PRs against <code>src/custom-types.json</code> or <code>src/custom-suffix.json</code>.</p> <p>The <code>src/custom-types.json</code> file is a JSON object with the MIME type as the keys and the values being an object with the following keys:</p> <ul> <li><code>compressible</code> - leave out if you don't know, otherwise <code>true</code>/<code>false</code> to   indicate whether the data represented by the type is typically compressible.</li> <li><code>extensions</code> - include an array of file extensions that are associated with   the type.</li> <li><code>notes</code> - human-readable notes about the type, typically what the type is.</li> <li><code>sources</code> - include an array of URLs of where the MIME type and the associated   extensions are sourced from. This needs to be a primary source;   links to type aggregating sites and Wikipedia are not acceptable.</li> </ul> <p>To update the build, run <code>npm run build</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/","title":"1.54.0 / 2025-03-17","text":"<ul> <li>Update mime type for DCM format (#362)</li> <li>mark application/octet-stream as compressible (#163)</li> <li>Fix typo in application/x-zip-compressed mimetype (#359)</li> <li>Add mime-type for Jupyter notebooks (#282)</li> <li>Add Google Drive MIME types (#311)</li> <li>Add .blend file type (#338)</li> <li>Add support for the FBX file extension (#342)</li> <li>Add Adobe DNG file (#340)</li> <li>Add Procreate Brush and Brush Set file Types (#339)</li> <li>Add support for Procreate Dreams  (#341)</li> <li>replace got with undici (#352)</li> <li>Added extensions list for model/step (#293)</li> <li>Add m4b as a type of audio/mp4 (#357)</li> <li>windows 11 application/x-zip-compressed (#346)</li> <li>add dotLottie mime type (#351)</li> <li>Add some MS-related extensions and types (#336)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1530-2024-07-12","title":"1.53.0 / 2024-07-12","text":"<ul> <li>Add extension <code>.sql</code> to <code>application/sql</code></li> <li>Add extensions <code>.aac</code> and <code>.adts</code> to <code>audio/aac</code></li> <li>Add extensions <code>.js</code> and <code>.mjs</code> to <code>text/javascript</code></li> <li>Add extensions for <code>application/mp4</code> from IANA</li> <li>Add extensions from IANA for more MIME types</li> <li>Add Microsoft app installer types and extensions</li> <li>Add new upstream MIME types</li> <li>Fix extensions for <code>text/markdown</code> to match IANA</li> <li>Remove extension <code>.mjs</code> from <code>application/javascript</code></li> <li>Remove obsolete MIME types from IANA data</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1520-2022-02-21","title":"1.52.0 / 2022-02-21","text":"<ul> <li>Add extensions from IANA for more <code>image/*</code> types</li> <li>Add extension <code>.asc</code> to <code>application/pgp-keys</code></li> <li>Add extensions to various XML types</li> <li>Add new upstream MIME types</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1510-2021-11-08","title":"1.51.0 / 2021-11-08","text":"<ul> <li>Add new upstream MIME types</li> <li>Mark <code>image/vnd.microsoft.icon</code> as compressible</li> <li>Mark <code>image/vnd.ms-dds</code> as compressible</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1500-2021-09-15","title":"1.50.0 / 2021-09-15","text":"<ul> <li>Add deprecated iWorks mime types and extensions</li> <li>Add new upstream MIME types</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1490-2021-07-26","title":"1.49.0 / 2021-07-26","text":"<ul> <li>Add extension <code>.trig</code> to <code>application/trig</code></li> <li>Add new upstream MIME types</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1480-2021-05-30","title":"1.48.0 / 2021-05-30","text":"<ul> <li>Add extension <code>.mvt</code> to <code>application/vnd.mapbox-vector-tile</code></li> <li>Add new upstream MIME types</li> <li>Mark <code>text/yaml</code> as compressible</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1470-2021-04-01","title":"1.47.0 / 2021-04-01","text":"<ul> <li>Add new upstream MIME types</li> <li>Remove ambiguous extensions from IANA for <code>application/*+xml</code> types</li> <li>Update primary extension to <code>.es</code> for <code>application/ecmascript</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1460-2021-02-13","title":"1.46.0 / 2021-02-13","text":"<ul> <li>Add extension <code>.amr</code> to <code>audio/amr</code></li> <li>Add extension <code>.m4s</code> to <code>video/iso.segment</code></li> <li>Add extension <code>.opus</code> to <code>audio/ogg</code></li> <li>Add new upstream MIME types</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1450-2020-09-22","title":"1.45.0 / 2020-09-22","text":"<ul> <li>Add <code>application/ubjson</code> with extension <code>.ubj</code></li> <li>Add <code>image/avif</code> with extension <code>.avif</code></li> <li>Add <code>image/ktx2</code> with extension <code>.ktx2</code></li> <li>Add extension <code>.dbf</code> to <code>application/vnd.dbf</code></li> <li>Add extension <code>.rar</code> to <code>application/vnd.rar</code></li> <li>Add extension <code>.td</code> to <code>application/urc-targetdesc+xml</code></li> <li>Add new upstream MIME types</li> <li>Fix extension of <code>application/vnd.apple.keynote</code> to be <code>.key</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1440-2020-04-22","title":"1.44.0 / 2020-04-22","text":"<ul> <li>Add charsets from IANA</li> <li>Add extension <code>.cjs</code> to <code>application/node</code></li> <li>Add new upstream MIME types</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1430-2020-01-05","title":"1.43.0 / 2020-01-05","text":"<ul> <li>Add <code>application/x-keepass2</code> with extension <code>.kdbx</code></li> <li>Add extension <code>.mxmf</code> to <code>audio/mobile-xmf</code></li> <li>Add extensions from IANA for <code>application/*+xml</code> types</li> <li>Add new upstream MIME types</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1420-2019-09-25","title":"1.42.0 / 2019-09-25","text":"<ul> <li>Add <code>image/vnd.ms-dds</code> with extension <code>.dds</code></li> <li>Add new upstream MIME types</li> <li>Remove compressible from <code>multipart/mixed</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1410-2019-08-30","title":"1.41.0 / 2019-08-30","text":"<ul> <li>Add new upstream MIME types</li> <li>Add <code>application/toml</code> with extension <code>.toml</code></li> <li>Mark <code>font/ttf</code> as compressible</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1400-2019-04-20","title":"1.40.0 / 2019-04-20","text":"<ul> <li>Add extensions from IANA for <code>model/*</code> types</li> <li>Add <code>text/mdx</code> with extension <code>.mdx</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1390-2019-04-04","title":"1.39.0 / 2019-04-04","text":"<ul> <li>Add extensions <code>.siv</code> and <code>.sieve</code> to <code>application/sieve</code></li> <li>Add new upstream MIME types</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1380-2019-02-04","title":"1.38.0 / 2019-02-04","text":"<ul> <li>Add extension <code>.nq</code> to <code>application/n-quads</code></li> <li>Add extension <code>.nt</code> to <code>application/n-triples</code></li> <li>Add new upstream MIME types</li> <li>Mark <code>text/less</code> as compressible</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1370-2018-10-19","title":"1.37.0 / 2018-10-19","text":"<ul> <li>Add extensions to HEIC image types</li> <li>Add new upstream MIME types</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1360-2018-08-20","title":"1.36.0 / 2018-08-20","text":"<ul> <li>Add Apple file extensions from IANA</li> <li>Add extensions from IANA for <code>image/*</code> types</li> <li>Add new upstream MIME types</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1350-2018-07-15","title":"1.35.0 / 2018-07-15","text":"<ul> <li>Add extension <code>.owl</code> to <code>application/rdf+xml</code></li> <li>Add new upstream MIME types<ul> <li>Removes extension <code>.woff</code> from <code>application/font-woff</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1340-2018-06-03","title":"1.34.0 / 2018-06-03","text":"<ul> <li>Add extension <code>.csl</code> to <code>application/vnd.citationstyles.style+xml</code></li> <li>Add extension <code>.es</code> to <code>application/ecmascript</code></li> <li>Add new upstream MIME types</li> <li>Add <code>UTF-8</code> as default charset for <code>text/turtle</code></li> <li>Mark all XML-derived types as compressible</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1330-2018-02-15","title":"1.33.0 / 2018-02-15","text":"<ul> <li>Add extensions from IANA for <code>message/*</code> types</li> <li>Add new upstream MIME types</li> <li>Fix some incorrect OOXML types</li> <li>Remove <code>application/font-woff2</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1320-2017-11-29","title":"1.32.0 / 2017-11-29","text":"<ul> <li>Add new upstream MIME types</li> <li>Update <code>text/hjson</code> to registered <code>application/hjson</code></li> <li>Add <code>text/shex</code> with extension <code>.shex</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1310-2017-10-25","title":"1.31.0 / 2017-10-25","text":"<ul> <li>Add <code>application/raml+yaml</code> with extension <code>.raml</code></li> <li>Add <code>application/wasm</code> with extension <code>.wasm</code></li> <li>Add new <code>font</code> type from IANA</li> <li>Add new upstream font extensions</li> <li>Add new upstream MIME types</li> <li>Add extensions for JPEG-2000 images</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1300-2017-08-27","title":"1.30.0 / 2017-08-27","text":"<ul> <li>Add <code>application/vnd.ms-outlook</code></li> <li>Add <code>application/x-arj</code></li> <li>Add extension <code>.mjs</code> to <code>application/javascript</code></li> <li>Add glTF types and extensions</li> <li>Add new upstream MIME types</li> <li>Add <code>text/x-org</code></li> <li>Add VirtualBox MIME types</li> <li>Fix <code>source</code> records for <code>video/*</code> types that are IANA</li> <li>Update <code>font/opentype</code> to registered <code>font/otf</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1290-2017-07-10","title":"1.29.0 / 2017-07-10","text":"<ul> <li>Add <code>application/fido.trusted-apps+json</code></li> <li>Add extension <code>.wadl</code> to <code>application/vnd.sun.wadl+xml</code></li> <li>Add new upstream MIME types</li> <li>Add <code>UTF-8</code> as default charset for <code>text/css</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1280-2017-05-14","title":"1.28.0 / 2017-05-14","text":"<ul> <li>Add new upstream MIME types</li> <li>Add extension <code>.gz</code> to <code>application/gzip</code></li> <li>Update extensions <code>.md</code> and <code>.markdown</code> to be <code>text/markdown</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1270-2017-03-16","title":"1.27.0 / 2017-03-16","text":"<ul> <li>Add new upstream MIME types</li> <li>Add <code>image/apng</code> with extension <code>.apng</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1260-2017-01-14","title":"1.26.0 / 2017-01-14","text":"<ul> <li>Add new upstream MIME types</li> <li>Add extension <code>.geojson</code> to <code>application/geo+json</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1250-2016-11-11","title":"1.25.0 / 2016-11-11","text":"<ul> <li>Add new upstream MIME types</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1240-2016-09-18","title":"1.24.0 / 2016-09-18","text":"<ul> <li>Add <code>audio/mp3</code></li> <li>Add new upstream MIME types</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1230-2016-05-01","title":"1.23.0 / 2016-05-01","text":"<ul> <li>Add new upstream MIME types</li> <li>Add extension <code>.3gpp</code> to <code>audio/3gpp</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1220-2016-02-15","title":"1.22.0 / 2016-02-15","text":"<ul> <li>Add <code>text/slim</code></li> <li>Add extension <code>.rng</code> to <code>application/xml</code></li> <li>Add new upstream MIME types</li> <li>Fix extension of <code>application/dash+xml</code> to be <code>.mpd</code></li> <li>Update primary extension to <code>.m4a</code> for <code>audio/mp4</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1210-2016-01-06","title":"1.21.0 / 2016-01-06","text":"<ul> <li>Add Google document types</li> <li>Add new upstream MIME types</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1200-2015-11-10","title":"1.20.0 / 2015-11-10","text":"<ul> <li>Add <code>text/x-suse-ymp</code></li> <li>Add new upstream MIME types</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1190-2015-09-17","title":"1.19.0 / 2015-09-17","text":"<ul> <li>Add <code>application/vnd.apple.pkpass</code></li> <li>Add new upstream MIME types</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1180-2015-09-03","title":"1.18.0 / 2015-09-03","text":"<ul> <li>Add new upstream MIME types</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1170-2015-08-13","title":"1.17.0 / 2015-08-13","text":"<ul> <li>Add <code>application/x-msdos-program</code></li> <li>Add <code>audio/g711-0</code></li> <li>Add <code>image/vnd.mozilla.apng</code></li> <li>Add extension <code>.exe</code> to <code>application/x-msdos-program</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1160-2015-07-29","title":"1.16.0 / 2015-07-29","text":"<ul> <li>Add <code>application/vnd.uri-map</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1150-2015-07-13","title":"1.15.0 / 2015-07-13","text":"<ul> <li>Add <code>application/x-httpd-php</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1140-2015-06-25","title":"1.14.0 / 2015-06-25","text":"<ul> <li>Add <code>application/scim+json</code></li> <li>Add <code>application/vnd.3gpp.ussd+xml</code></li> <li>Add <code>application/vnd.biopax.rdf+xml</code></li> <li>Add <code>text/x-processing</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1130-2015-06-07","title":"1.13.0 / 2015-06-07","text":"<ul> <li>Add nginx as a source</li> <li>Add <code>application/x-cocoa</code></li> <li>Add <code>application/x-java-archive-diff</code></li> <li>Add <code>application/x-makeself</code></li> <li>Add <code>application/x-perl</code></li> <li>Add <code>application/x-pilot</code></li> <li>Add <code>application/x-redhat-package-manager</code></li> <li>Add <code>application/x-sea</code></li> <li>Add <code>audio/x-m4a</code></li> <li>Add <code>audio/x-realaudio</code></li> <li>Add <code>image/x-jng</code></li> <li>Add <code>text/mathml</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1120-2015-06-05","title":"1.12.0 / 2015-06-05","text":"<ul> <li>Add <code>application/bdoc</code></li> <li>Add <code>application/vnd.hyperdrive+json</code></li> <li>Add <code>application/x-bdoc</code></li> <li>Add extension <code>.rtf</code> to <code>text/rtf</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1110-2015-05-31","title":"1.11.0 / 2015-05-31","text":"<ul> <li>Add <code>audio/wav</code></li> <li>Add <code>audio/wave</code></li> <li>Add extension <code>.litcoffee</code> to <code>text/coffeescript</code></li> <li>Add extension <code>.sfd-hdstx</code> to <code>application/vnd.hydrostatix.sof-data</code></li> <li>Add extension <code>.n-gage</code> to <code>application/vnd.nokia.n-gage.symbian.install</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#1100-2015-05-19","title":"1.10.0 / 2015-05-19","text":"<ul> <li>Add <code>application/vnd.balsamiq.bmpr</code></li> <li>Add <code>application/vnd.microsoft.portable-executable</code></li> <li>Add <code>application/x-ns-proxy-autoconfig</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#191-2015-04-19","title":"1.9.1 / 2015-04-19","text":"<ul> <li>Remove <code>.json</code> extension from <code>application/manifest+json</code><ul> <li>This is causing bugs downstream</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#190-2015-04-19","title":"1.9.0 / 2015-04-19","text":"<ul> <li>Add <code>application/manifest+json</code></li> <li>Add <code>application/vnd.micro+json</code></li> <li>Add <code>image/vnd.zbrush.pcx</code></li> <li>Add <code>image/x-ms-bmp</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#180-2015-03-13","title":"1.8.0 / 2015-03-13","text":"<ul> <li>Add <code>application/vnd.citationstyles.style+xml</code></li> <li>Add <code>application/vnd.fastcopy-disk-image</code></li> <li>Add <code>application/vnd.gov.sk.xmldatacontainer+xml</code></li> <li>Add extension <code>.jsonld</code> to <code>application/ld+json</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#170-2015-02-08","title":"1.7.0 / 2015-02-08","text":"<ul> <li>Add <code>application/vnd.gerber</code></li> <li>Add <code>application/vnd.msa-disk-image</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#161-2015-02-05","title":"1.6.1 / 2015-02-05","text":"<ul> <li>Community extensions ownership transferred from <code>node-mime</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#160-2015-01-29","title":"1.6.0 / 2015-01-29","text":"<ul> <li>Add <code>application/jose</code></li> <li>Add <code>application/jose+json</code></li> <li>Add <code>application/json-seq</code></li> <li>Add <code>application/jwk+json</code></li> <li>Add <code>application/jwk-set+json</code></li> <li>Add <code>application/jwt</code></li> <li>Add <code>application/rdap+json</code></li> <li>Add <code>application/vnd.gov.sk.e-form+xml</code></li> <li>Add <code>application/vnd.ims.imsccv1p3</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#150-2014-12-30","title":"1.5.0 / 2014-12-30","text":"<ul> <li>Add <code>application/vnd.oracle.resource+json</code></li> <li>Fix various invalid MIME type entries<ul> <li><code>application/mbox+xml</code></li> <li><code>application/oscp-response</code></li> <li><code>application/vwg-multiplexed</code></li> <li><code>audio/g721</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#140-2014-12-21","title":"1.4.0 / 2014-12-21","text":"<ul> <li>Add <code>application/vnd.ims.imsccv1p2</code></li> <li>Fix various invalid MIME type entries<ul> <li><code>application/vnd-acucobol</code></li> <li><code>application/vnd-curl</code></li> <li><code>application/vnd-dart</code></li> <li><code>application/vnd-dxr</code></li> <li><code>application/vnd-fdf</code></li> <li><code>application/vnd-mif</code></li> <li><code>application/vnd-sema</code></li> <li><code>application/vnd-wap-wmlc</code></li> <li><code>application/vnd.adobe.flash-movie</code></li> <li><code>application/vnd.dece-zip</code></li> <li><code>application/vnd.dvb_service</code></li> <li><code>application/vnd.micrografx-igx</code></li> <li><code>application/vnd.sealed-doc</code></li> <li><code>application/vnd.sealed-eml</code></li> <li><code>application/vnd.sealed-mht</code></li> <li><code>application/vnd.sealed-ppt</code></li> <li><code>application/vnd.sealed-tiff</code></li> <li><code>application/vnd.sealed-xls</code></li> <li><code>application/vnd.sealedmedia.softseal-html</code></li> <li><code>application/vnd.sealedmedia.softseal-pdf</code></li> <li><code>application/vnd.wap-slc</code></li> <li><code>application/vnd.wap-wbxml</code></li> <li><code>audio/vnd.sealedmedia.softseal-mpeg</code></li> <li><code>image/vnd-djvu</code></li> <li><code>image/vnd-svf</code></li> <li><code>image/vnd-wap-wbmp</code></li> <li><code>image/vnd.sealed-png</code></li> <li><code>image/vnd.sealedmedia.softseal-gif</code></li> <li><code>image/vnd.sealedmedia.softseal-jpg</code></li> <li><code>model/vnd-dwf</code></li> <li><code>model/vnd.parasolid.transmit-binary</code></li> <li><code>model/vnd.parasolid.transmit-text</code></li> <li><code>text/vnd-a</code></li> <li><code>text/vnd-curl</code></li> <li><code>text/vnd.wap-wml</code></li> </ul> </li> <li>Remove example template MIME types<ul> <li><code>application/example</code></li> <li><code>audio/example</code></li> <li><code>image/example</code></li> <li><code>message/example</code></li> <li><code>model/example</code></li> <li><code>multipart/example</code></li> <li><code>text/example</code></li> <li><code>video/example</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#131-2014-12-16","title":"1.3.1 / 2014-12-16","text":"<ul> <li>Fix missing extensions<ul> <li><code>application/json5</code></li> <li><code>text/hjson</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#130-2014-12-07","title":"1.3.0 / 2014-12-07","text":"<ul> <li>Add <code>application/a2l</code></li> <li>Add <code>application/aml</code></li> <li>Add <code>application/atfx</code></li> <li>Add <code>application/atxml</code></li> <li>Add <code>application/cdfx+xml</code></li> <li>Add <code>application/dii</code></li> <li>Add <code>application/json5</code></li> <li>Add <code>application/lxf</code></li> <li>Add <code>application/mf4</code></li> <li>Add <code>application/vnd.apache.thrift.compact</code></li> <li>Add <code>application/vnd.apache.thrift.json</code></li> <li>Add <code>application/vnd.coffeescript</code></li> <li>Add <code>application/vnd.enphase.envoy</code></li> <li>Add <code>application/vnd.ims.imsccv1p1</code></li> <li>Add <code>text/csv-schema</code></li> <li>Add <code>text/hjson</code></li> <li>Add <code>text/markdown</code></li> <li>Add <code>text/yaml</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#120-2014-11-09","title":"1.2.0 / 2014-11-09","text":"<ul> <li>Add <code>application/cea</code></li> <li>Add <code>application/dit</code></li> <li>Add <code>application/vnd.gov.sk.e-form+zip</code></li> <li>Add <code>application/vnd.tmd.mediaflex.api+xml</code></li> <li>Type <code>application/epub+zip</code> is now IANA-registered</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#112-2014-10-23","title":"1.1.2 / 2014-10-23","text":"<ul> <li>Rebuild database for <code>application/x-www-form-urlencoded</code> change</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#111-2014-10-20","title":"1.1.1 / 2014-10-20","text":"<ul> <li>Mark <code>application/x-www-form-urlencoded</code> as compressible.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#110-2014-09-28","title":"1.1.0 / 2014-09-28","text":"<ul> <li>Add <code>application/font-woff2</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#103-2014-09-25","title":"1.0.3 / 2014-09-25","text":"<ul> <li>Fix engine requirement in package</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#102-2014-09-25","title":"1.0.2 / 2014-09-25","text":"<ul> <li>Add <code>application/coap-group+json</code></li> <li>Add <code>application/dcd</code></li> <li>Add <code>application/vnd.apache.thrift.binary</code></li> <li>Add <code>image/vnd.tencent.tap</code></li> <li>Mark all JSON-derived types as compressible</li> <li>Update <code>text/vtt</code> data</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#101-2014-08-30","title":"1.0.1 / 2014-08-30","text":"<ul> <li>Fix extension ordering</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-db/HISTORY/#100-2014-08-30","title":"1.0.0 / 2014-08-30","text":"<ul> <li>Add <code>application/atf</code></li> <li>Add <code>application/merge-patch+json</code></li> <li>Add <code>multipart/x-mixed-replace</code></li> <li>Add <code>source: 'apache'</code> metadata</li> <li>Add <code>source: 'iana'</code> metadata</li> <li>Remove badly-assumed charset data</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/","title":"mime-types","text":"<p>The ultimate javascript content-type utility.</p> <p>Similar to the <code>mime@1.x</code> module, except:</p> <ul> <li>No fallbacks. Instead of naively returning the first available type,   <code>mime-types</code> simply returns <code>false</code>, so do   <code>var type = mime.lookup('unrecognized') || 'application/octet-stream'</code>.</li> <li>No <code>new Mime()</code> business, so you could do <code>var lookup = require('mime-types').lookup</code>.</li> <li>No <code>.define()</code> functionality</li> <li>Bug fixes for <code>.lookup(path)</code></li> </ul> <p>Otherwise, the API is compatible with <code>mime</code> 1.x.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/#install","title":"Install","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install mime-types\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/#note-on-mime-type-data-and-semver","title":"Note on MIME Type Data and Semver","text":"<p>This package considers the programmatic api as the semver compatibility. Additionally, the package which provides the MIME data for this package (<code>mime-db</code>) also considers it's programmatic api as the semver contract. This means the MIME type resolution is not considered in the semver bumps.</p> <p>In the past the version of <code>mime-db</code> was pinned to give two decision points when adopting MIME data changes. This is no longer true. We still update the <code>mime-db</code> package here as a <code>minor</code> release when necessary, but will use a <code>^</code> range going forward. This means that if you want to pin your <code>mime-db</code> data you will need to do it in your application. While this expectation was not set in docs until now, it is how the pacakge operated, so we do not feel this is a breaking change.</p> <p>If you wish to pin your <code>mime-db</code> version you can do that with overrides via your package manager of choice. See their documentation for how to correctly configure that.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/#adding-types","title":"Adding Types","text":"<p>All mime types are based on mime-db, so open a PR there if you'd like to add mime types.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/#api","title":"API","text":"<pre><code>var mime = require('mime-types')\n</code></pre> <p>All functions return <code>false</code> if input is invalid or not found.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/#mimelookuppath","title":"mime.lookup(path)","text":"<p>Lookup the content-type associated with a file.</p> <pre><code>mime.lookup('json') // 'application/json'\nmime.lookup('.md') // 'text/markdown'\nmime.lookup('file.html') // 'text/html'\nmime.lookup('folder/file.js') // 'application/javascript'\nmime.lookup('folder/.htaccess') // false\n\nmime.lookup('cats') // false\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/#mimecontenttypetype","title":"mime.contentType(type)","text":"<p>Create a full content-type header given a content-type or extension. When given an extension, <code>mime.lookup</code> is used to get the matching content-type, otherwise the given content-type is used. Then if the content-type does not already have a <code>charset</code> parameter, <code>mime.charset</code> is used to get the default charset and add to the returned content-type.</p> <pre><code>mime.contentType('markdown') // 'text/x-markdown; charset=utf-8'\nmime.contentType('file.json') // 'application/json; charset=utf-8'\nmime.contentType('text/html') // 'text/html; charset=utf-8'\nmime.contentType('text/html; charset=iso-8859-1') // 'text/html; charset=iso-8859-1'\n\n// from a full path\nmime.contentType(path.extname('/path/to/file.json')) // 'application/json; charset=utf-8'\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/#mimeextensiontype","title":"mime.extension(type)","text":"<p>Get the default extension for a content-type.</p> <pre><code>mime.extension('application/octet-stream') // 'bin'\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/#mimecharsettype","title":"mime.charset(type)","text":"<p>Lookup the implied default charset of a content-type.</p> <pre><code>mime.charset('text/markdown') // 'UTF-8'\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/#var-type-mimetypesextension","title":"var type = mime.types[extension]","text":"<p>A map of content-types by extension.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/#extensions-mimeextensionstype","title":"[extensions...] = mime.extensions[type]","text":"<p>A map of extensions by content-type.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/","title":"3.0.1 / 2025-03-26","text":"<ul> <li>deps: mime-db@1.54.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#300-2024-08-31","title":"3.0.0 / 2024-08-31","text":"<ul> <li>Drop support for node &lt;18</li> <li>deps: mime-db@1.53.0</li> <li>resolve extension conflicts with mime-score (#119)</li> <li>asc -&gt; application/pgp-signature is now application/pgp-keys</li> <li>mpp -&gt; application/vnd.ms-project is now application/dash-patch+xml</li> <li>ac -&gt; application/vnd.nokia.n-gage.ac+xml is now application/pkix-attr-cert</li> <li>bdoc -&gt; application/x-bdoc is now application/bdoc</li> <li>wmz -&gt; application/x-msmetafile is now application/x-ms-wmz</li> <li>xsl -&gt; application/xslt+xml is now application/xml</li> <li>wav -&gt; audio/wave is now audio/wav</li> <li>rtf -&gt; text/rtf is now application/rtf</li> <li>xml -&gt; text/xml is now application/xml</li> <li>mp4 -&gt; video/mp4 is now application/mp4</li> <li>mpg4 -&gt; video/mp4 is now application/mp4</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2135-2022-03-12","title":"2.1.35 / 2022-03-12","text":"<ul> <li>deps: mime-db@1.52.0<ul> <li>Add extensions from IANA for more <code>image/*</code> types</li> <li>Add extension <code>.asc</code> to <code>application/pgp-keys</code></li> <li>Add extensions to various XML types</li> <li>Add new upstream MIME types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2134-2021-11-08","title":"2.1.34 / 2021-11-08","text":"<ul> <li>deps: mime-db@1.51.0<ul> <li>Add new upstream MIME types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2133-2021-10-01","title":"2.1.33 / 2021-10-01","text":"<ul> <li>deps: mime-db@1.50.0<ul> <li>Add deprecated iWorks mime types and extensions</li> <li>Add new upstream MIME types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2132-2021-07-27","title":"2.1.32 / 2021-07-27","text":"<ul> <li>deps: mime-db@1.49.0<ul> <li>Add extension <code>.trig</code> to <code>application/trig</code></li> <li>Add new upstream MIME types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2131-2021-06-01","title":"2.1.31 / 2021-06-01","text":"<ul> <li>deps: mime-db@1.48.0<ul> <li>Add extension <code>.mvt</code> to <code>application/vnd.mapbox-vector-tile</code></li> <li>Add new upstream MIME types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2130-2021-04-02","title":"2.1.30 / 2021-04-02","text":"<ul> <li>deps: mime-db@1.47.0<ul> <li>Add extension <code>.amr</code> to <code>audio/amr</code></li> <li>Remove ambigious extensions from IANA for <code>application/*+xml</code> types</li> <li>Update primary extension to <code>.es</code> for <code>application/ecmascript</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2129-2021-02-17","title":"2.1.29 / 2021-02-17","text":"<ul> <li>deps: mime-db@1.46.0<ul> <li>Add extension <code>.amr</code> to <code>audio/amr</code></li> <li>Add extension <code>.m4s</code> to <code>video/iso.segment</code></li> <li>Add extension <code>.opus</code> to <code>audio/ogg</code></li> <li>Add new upstream MIME types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2128-2021-01-01","title":"2.1.28 / 2021-01-01","text":"<ul> <li>deps: mime-db@1.45.0<ul> <li>Add <code>application/ubjson</code> with extension <code>.ubj</code></li> <li>Add <code>image/avif</code> with extension <code>.avif</code></li> <li>Add <code>image/ktx2</code> with extension <code>.ktx2</code></li> <li>Add extension <code>.dbf</code> to <code>application/vnd.dbf</code></li> <li>Add extension <code>.rar</code> to <code>application/vnd.rar</code></li> <li>Add extension <code>.td</code> to <code>application/urc-targetdesc+xml</code></li> <li>Add new upstream MIME types</li> <li>Fix extension of <code>application/vnd.apple.keynote</code> to be <code>.key</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2127-2020-04-23","title":"2.1.27 / 2020-04-23","text":"<ul> <li>deps: mime-db@1.44.0<ul> <li>Add charsets from IANA</li> <li>Add extension <code>.cjs</code> to <code>application/node</code></li> <li>Add new upstream MIME types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2126-2020-01-05","title":"2.1.26 / 2020-01-05","text":"<ul> <li>deps: mime-db@1.43.0<ul> <li>Add <code>application/x-keepass2</code> with extension <code>.kdbx</code></li> <li>Add extension <code>.mxmf</code> to <code>audio/mobile-xmf</code></li> <li>Add extensions from IANA for <code>application/*+xml</code> types</li> <li>Add new upstream MIME types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2125-2019-11-12","title":"2.1.25 / 2019-11-12","text":"<ul> <li>deps: mime-db@1.42.0<ul> <li>Add new upstream MIME types</li> <li>Add <code>application/toml</code> with extension <code>.toml</code></li> <li>Add <code>image/vnd.ms-dds</code> with extension <code>.dds</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2124-2019-04-20","title":"2.1.24 / 2019-04-20","text":"<ul> <li>deps: mime-db@1.40.0<ul> <li>Add extensions from IANA for <code>model/*</code> types</li> <li>Add <code>text/mdx</code> with extension <code>.mdx</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2123-2019-04-17","title":"2.1.23 / 2019-04-17","text":"<ul> <li>deps: mime-db@~1.39.0<ul> <li>Add extensions <code>.siv</code> and <code>.sieve</code> to <code>application/sieve</code></li> <li>Add new upstream MIME types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2122-2019-02-14","title":"2.1.22 / 2019-02-14","text":"<ul> <li>deps: mime-db@~1.38.0<ul> <li>Add extension <code>.nq</code> to <code>application/n-quads</code></li> <li>Add extension <code>.nt</code> to <code>application/n-triples</code></li> <li>Add new upstream MIME types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2121-2018-10-19","title":"2.1.21 / 2018-10-19","text":"<ul> <li>deps: mime-db@~1.37.0<ul> <li>Add extensions to HEIC image types</li> <li>Add new upstream MIME types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2120-2018-08-26","title":"2.1.20 / 2018-08-26","text":"<ul> <li>deps: mime-db@~1.36.0<ul> <li>Add Apple file extensions from IANA</li> <li>Add extensions from IANA for <code>image/*</code> types</li> <li>Add new upstream MIME types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2119-2018-07-17","title":"2.1.19 / 2018-07-17","text":"<ul> <li>deps: mime-db@~1.35.0<ul> <li>Add extension <code>.csl</code> to <code>application/vnd.citationstyles.style+xml</code></li> <li>Add extension <code>.es</code> to <code>application/ecmascript</code></li> <li>Add extension <code>.owl</code> to <code>application/rdf+xml</code></li> <li>Add new upstream MIME types</li> <li>Add UTF-8 as default charset for <code>text/turtle</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2118-2018-02-16","title":"2.1.18 / 2018-02-16","text":"<ul> <li>deps: mime-db@~1.33.0<ul> <li>Add <code>application/raml+yaml</code> with extension <code>.raml</code></li> <li>Add <code>application/wasm</code> with extension <code>.wasm</code></li> <li>Add <code>text/shex</code> with extension <code>.shex</code></li> <li>Add extensions for JPEG-2000 images</li> <li>Add extensions from IANA for <code>message/*</code> types</li> <li>Add new upstream MIME types</li> <li>Update font MIME types</li> <li>Update <code>text/hjson</code> to registered <code>application/hjson</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2117-2017-09-01","title":"2.1.17 / 2017-09-01","text":"<ul> <li>deps: mime-db@~1.30.0<ul> <li>Add <code>application/vnd.ms-outlook</code></li> <li>Add <code>application/x-arj</code></li> <li>Add extension <code>.mjs</code> to <code>application/javascript</code></li> <li>Add glTF types and extensions</li> <li>Add new upstream MIME types</li> <li>Add <code>text/x-org</code></li> <li>Add VirtualBox MIME types</li> <li>Fix <code>source</code> records for <code>video/*</code> types that are IANA</li> <li>Update <code>font/opentype</code> to registered <code>font/otf</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2116-2017-07-24","title":"2.1.16 / 2017-07-24","text":"<ul> <li>deps: mime-db@~1.29.0<ul> <li>Add <code>application/fido.trusted-apps+json</code></li> <li>Add extension <code>.wadl</code> to <code>application/vnd.sun.wadl+xml</code></li> <li>Add extension <code>.gz</code> to <code>application/gzip</code></li> <li>Add new upstream MIME types</li> <li>Update extensions <code>.md</code> and <code>.markdown</code> to be <code>text/markdown</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2115-2017-03-23","title":"2.1.15 / 2017-03-23","text":"<ul> <li>deps: mime-db@~1.27.0<ul> <li>Add new mime types</li> <li>Add <code>image/apng</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2114-2017-01-14","title":"2.1.14 / 2017-01-14","text":"<ul> <li>deps: mime-db@~1.26.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2113-2016-11-18","title":"2.1.13 / 2016-11-18","text":"<ul> <li>deps: mime-db@~1.25.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2112-2016-09-18","title":"2.1.12 / 2016-09-18","text":"<ul> <li>deps: mime-db@~1.24.0<ul> <li>Add new mime types</li> <li>Add <code>audio/mp3</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2111-2016-05-01","title":"2.1.11 / 2016-05-01","text":"<ul> <li>deps: mime-db@~1.23.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2110-2016-02-15","title":"2.1.10 / 2016-02-15","text":"<ul> <li>deps: mime-db@~1.22.0<ul> <li>Add new mime types</li> <li>Fix extension of <code>application/dash+xml</code></li> <li>Update primary extension for <code>audio/mp4</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#219-2016-01-06","title":"2.1.9 / 2016-01-06","text":"<ul> <li>deps: mime-db@~1.21.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#218-2015-11-30","title":"2.1.8 / 2015-11-30","text":"<ul> <li>deps: mime-db@~1.20.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#217-2015-09-20","title":"2.1.7 / 2015-09-20","text":"<ul> <li>deps: mime-db@~1.19.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#216-2015-09-03","title":"2.1.6 / 2015-09-03","text":"<ul> <li>deps: mime-db@~1.18.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#215-2015-08-20","title":"2.1.5 / 2015-08-20","text":"<ul> <li>deps: mime-db@~1.17.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#214-2015-07-30","title":"2.1.4 / 2015-07-30","text":"<ul> <li>deps: mime-db@~1.16.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#213-2015-07-13","title":"2.1.3 / 2015-07-13","text":"<ul> <li>deps: mime-db@~1.15.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#212-2015-06-25","title":"2.1.2 / 2015-06-25","text":"<ul> <li>deps: mime-db@~1.14.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#211-2015-06-08","title":"2.1.1 / 2015-06-08","text":"<ul> <li>perf: fix deopt during mapping</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#210-2015-06-07","title":"2.1.0 / 2015-06-07","text":"<ul> <li>Fix incorrectly treating extension-less file name as extension<ul> <li>i.e. <code>'path/to/json'</code> will no longer return <code>application/json</code></li> </ul> </li> <li>Fix <code>.charset(type)</code> to accept parameters</li> <li>Fix <code>.charset(type)</code> to match case-insensitive</li> <li>Improve generation of extension to MIME mapping</li> <li>Refactor internals for readability and no argument reassignment</li> <li>Prefer <code>application/*</code> MIME types from the same source</li> <li>Prefer any type over <code>application/octet-stream</code></li> <li>deps: mime-db@~1.13.0<ul> <li>Add nginx as a source</li> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2014-2015-06-06","title":"2.0.14 / 2015-06-06","text":"<ul> <li>deps: mime-db@~1.12.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2013-2015-05-31","title":"2.0.13 / 2015-05-31","text":"<ul> <li>deps: mime-db@~1.11.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2012-2015-05-19","title":"2.0.12 / 2015-05-19","text":"<ul> <li>deps: mime-db@~1.10.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2011-2015-05-05","title":"2.0.11 / 2015-05-05","text":"<ul> <li>deps: mime-db@~1.9.1<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#2010-2015-03-13","title":"2.0.10 / 2015-03-13","text":"<ul> <li>deps: mime-db@~1.8.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#209-2015-02-09","title":"2.0.9 / 2015-02-09","text":"<ul> <li>deps: mime-db@~1.7.0<ul> <li>Add new mime types</li> <li>Community extensions ownership transferred from <code>node-mime</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#208-2015-01-29","title":"2.0.8 / 2015-01-29","text":"<ul> <li>deps: mime-db@~1.6.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#207-2014-12-30","title":"2.0.7 / 2014-12-30","text":"<ul> <li>deps: mime-db@~1.5.0<ul> <li>Add new mime types</li> <li>Fix various invalid MIME type entries</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#206-2014-12-30","title":"2.0.6 / 2014-12-30","text":"<ul> <li>deps: mime-db@~1.4.0<ul> <li>Add new mime types</li> <li>Fix various invalid MIME type entries</li> <li>Remove example template MIME types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#205-2014-12-29","title":"2.0.5 / 2014-12-29","text":"<ul> <li>deps: mime-db@~1.3.1<ul> <li>Fix missing extensions</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#204-2014-12-10","title":"2.0.4 / 2014-12-10","text":"<ul> <li>deps: mime-db@~1.3.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#203-2014-11-09","title":"2.0.3 / 2014-11-09","text":"<ul> <li>deps: mime-db@~1.2.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#202-2014-09-28","title":"2.0.2 / 2014-09-28","text":"<ul> <li>deps: mime-db@~1.1.0<ul> <li>Add new mime types</li> <li>Update charsets</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#201-2014-09-07","title":"2.0.1 / 2014-09-07","text":"<ul> <li>Support Node.js 0.6</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#200-2014-09-02","title":"2.0.0 / 2014-09-02","text":"<ul> <li>Use <code>mime-db</code></li> <li>Remove <code>.define()</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#102-2014-08-04","title":"1.0.2 / 2014-08-04","text":"<ul> <li>Set charset=utf-8 for <code>text/javascript</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#101-2014-06-24","title":"1.0.1 / 2014-06-24","text":"<ul> <li>Add <code>text/jsx</code> type</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#100-2014-05-12","title":"1.0.0 / 2014-05-12","text":"<ul> <li>Return <code>false</code> for unknown types</li> <li>Set charset=utf-8 for <code>application/json</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mime-types/HISTORY/#010-2014-05-02","title":"0.1.0 / 2014-05-02","text":"<ul> <li>Initial release</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/","title":"minimatch","text":"<p>A minimal matching utility.</p> <p></p> <p>This is the matching library used internally by npm.</p> <p>It works by converting glob expressions into JavaScript <code>RegExp</code> objects.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#usage","title":"Usage","text":"<pre><code>var minimatch = require(\"minimatch\")\n\nminimatch(\"bar.foo\", \"*.foo\") // true!\nminimatch(\"bar.foo\", \"*.bar\") // false!\nminimatch(\"bar.foo\", \"*.+(bar|foo)\", { debug: true }) // true, and noisy!\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#features","title":"Features","text":"<p>Supports these glob features:</p> <ul> <li>Brace Expansion</li> <li>Extended glob matching</li> <li>\"Globstar\" <code>**</code> matching</li> </ul> <p>See:</p> <ul> <li><code>man sh</code></li> <li><code>man bash</code></li> <li><code>man 3 fnmatch</code></li> <li><code>man 5 gitignore</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#minimatch-class","title":"Minimatch Class","text":"<p>Create a minimatch object by instantiating the <code>minimatch.Minimatch</code> class.</p> <pre><code>var Minimatch = require(\"minimatch\").Minimatch\nvar mm = new Minimatch(pattern, options)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#properties","title":"Properties","text":"<ul> <li><code>pattern</code> The original pattern the minimatch object represents.</li> <li><code>options</code> The options supplied to the constructor.</li> <li> <p><code>set</code> A 2-dimensional array of regexp or string expressions.   Each row in the   array corresponds to a brace-expanded pattern.  Each item in the row   corresponds to a single path-part.  For example, the pattern   <code>{a,b/c}/d</code> would expand to a set of patterns like:</p> <pre><code>[ [ a, d ]\n, [ b, c, d ] ]\n</code></pre> <p>If a portion of the pattern doesn't have any \"magic\" in it (that is, it's something like <code>\"foo\"</code> rather than <code>fo*o?</code>), then it will be left as a string rather than converted to a regular expression.</p> </li> <li> <p><code>regexp</code> Created by the <code>makeRe</code> method.  A single regular expression   expressing the entire pattern.  This is useful in cases where you wish   to use the pattern somewhat like <code>fnmatch(3)</code> with <code>FNM_PATH</code> enabled.</p> </li> <li><code>negate</code> True if the pattern is negated.</li> <li><code>comment</code> True if the pattern is a comment.</li> <li><code>empty</code> True if the pattern is <code>\"\"</code>.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#methods","title":"Methods","text":"<ul> <li><code>makeRe</code> Generate the <code>regexp</code> member if necessary, and return it.   Will return <code>false</code> if the pattern is invalid.</li> <li><code>match(fname)</code> Return true if the filename matches the pattern, or   false otherwise.</li> <li><code>matchOne(fileArray, patternArray, partial)</code> Take a <code>/</code>-split   filename, and match it against a single row in the <code>regExpSet</code>.  This   method is mainly for internal use, but is exposed so that it can be   used by a glob-walker that needs to avoid excessive filesystem calls.</li> </ul> <p>All other methods are internal, and will be called as necessary.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#minimatchpath-pattern-options","title":"minimatch(path, pattern, options)","text":"<p>Main export.  Tests a path against the pattern using the options.</p> <pre><code>var isJS = minimatch(file, \"*.js\", { matchBase: true })\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#minimatchfilterpattern-options","title":"minimatch.filter(pattern, options)","text":"<p>Returns a function that tests its supplied argument, suitable for use with <code>Array.filter</code>.  Example:</p> <pre><code>var javascripts = fileList.filter(minimatch.filter(\"*.js\", {matchBase: true}))\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#minimatchmatchlist-pattern-options","title":"minimatch.match(list, pattern, options)","text":"<p>Match against the list of files, in the style of fnmatch or glob.  If nothing is matched, and options.nonull is set, then return a list containing the pattern itself.</p> <pre><code>var javascripts = minimatch.match(fileList, \"*.js\", {matchBase: true}))\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#minimatchmakerepattern-options","title":"minimatch.makeRe(pattern, options)","text":"<p>Make a regular expression object from the pattern.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#options","title":"Options","text":"<p>All options are <code>false</code> by default.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#debug","title":"debug","text":"<p>Dump a ton of stuff to stderr.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#nobrace","title":"nobrace","text":"<p>Do not expand <code>{a,b}</code> and <code>{1..3}</code> brace sets.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#noglobstar","title":"noglobstar","text":"<p>Disable <code>**</code> matching against multiple folder names.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#dot","title":"dot","text":"<p>Allow patterns to match filenames starting with a period, even if the pattern does not explicitly have a period in that spot.</p> <p>Note that by default, <code>a/**/b</code> will not match <code>a/.d/b</code>, unless <code>dot</code> is set.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#noext","title":"noext","text":"<p>Disable \"extglob\" style patterns like <code>+(a|b)</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#nocase","title":"nocase","text":"<p>Perform a case-insensitive match.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#nonull","title":"nonull","text":"<p>When a match is not found by <code>minimatch.match</code>, return a list containing the pattern itself if this option is set.  When not set, an empty list is returned if there are no matches.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#matchbase","title":"matchBase","text":"<p>If set, then patterns without slashes will be matched against the basename of the path if it contains slashes.  For example, <code>a?b</code> would match the path <code>/xyz/123/acb</code>, but not <code>/xyz/acb/123</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#nocomment","title":"nocomment","text":"<p>Suppress the behavior of treating <code>#</code> at the start of a pattern as a comment.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#nonegate","title":"nonegate","text":"<p>Suppress the behavior of treating a leading <code>!</code> character as negation.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#flipnegate","title":"flipNegate","text":"<p>Returns from negate expressions the same as if they were not negated. (Ie, true on a hit, false on a miss.)</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#partial","title":"partial","text":"<p>Compare a partial path to a pattern.  As long as the parts of the path that are present are not contradicted by the pattern, it will be treated as a match.  This is useful in applications where you're walking through a folder structure, and don't yet have the full path, but want to ensure that you do not walk down paths that can never be a match.</p> <p>For example,</p> <pre><code>minimatch('/a/b', '/a/*/c/d', { partial: true })  // true, might be /a/b/c/d\nminimatch('/a/b', '/**/d', { partial: true })     // true, might be /a/b/.../d\nminimatch('/x/y/z', '/a/**/z', { partial: true }) // false, because x !== a\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#allowwindowsescape","title":"allowWindowsEscape","text":"<p>Windows path separator <code>\\</code> is by default converted to <code>/</code>, which prohibits the usage of <code>\\</code> as a escape character. This flag skips that behavior and allows using the escape character.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/minimatch/#comparisons-to-other-fnmatchglob-implementations","title":"Comparisons to other fnmatch/glob implementations","text":"<p>While strict compliance with the existing standards is a worthwhile goal, some discrepancies exist between minimatch and other implementations, and are intentional.</p> <p>If the pattern starts with a <code>!</code> character, then it is negated.  Set the <code>nonegate</code> flag to suppress this behavior, and treat leading <code>!</code> characters normally.  This is perhaps relevant if you wish to start the pattern with a negative extglob pattern like <code>!(a|B)</code>.  Multiple <code>!</code> characters at the start of a pattern will negate the pattern multiple times.</p> <p>If a pattern starts with <code>#</code>, then it is treated as a comment, and will not match anything.  Use <code>\\#</code> to match a literal <code>#</code> at the start of a line, or set the <code>nocomment</code> flag to suppress this behavior.</p> <p>The double-star character <code>**</code> is supported by default, unless the <code>noglobstar</code> flag is set.  This is supported in the manner of bsdglob and bash 4.1, where <code>**</code> only has special significance if it is the only thing in a path part.  That is, <code>a/**/b</code> will match <code>a/x/y/b</code>, but <code>a/**b</code> will not.</p> <p>If an escaped pattern has no matches, and the <code>nonull</code> flag is set, then minimatch.match returns the pattern as-provided, rather than interpreting the character escapes.  For example, <code>minimatch.match([], \"\\\\*a\\\\?\")</code> will return <code>\"\\\\*a\\\\?\"</code> rather than <code>\"*a?\"</code>.  This is akin to setting the <code>nullglob</code> option in bash, except that it does not resolve escaped pattern characters.</p> <p>If brace expansion is not disabled, then it is performed before any other interpretation of the glob pattern.  Thus, a pattern like <code>+(a|{b),c)}</code>, which would not be valid in bash or zsh, is expanded first into the set of <code>+(a|b)</code> and <code>+(a|c)</code>, and those patterns are checked for validity.  Since those two are valid, matching proceeds.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/","title":"MongoDB Node.js Driver","text":"<p>The official MongoDB driver for Node.js.</p> <p>Upgrading to version 6? Take a look at our upgrade guide here!</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#quick-links","title":"Quick Links","text":"Site Link Documentation www.mongodb.com/docs/drivers/node API Docs mongodb.github.io/node-mongodb-native <code>npm</code> package www.npmjs.com/package/mongodb MongoDB www.mongodb.com MongoDB University learn.mongodb.com MongoDB Developer Center www.mongodb.com/developer Stack Overflow stackoverflow.com Source Code github.com/mongodb/node-mongodb-native Upgrade to v6 etc/notes/CHANGES_6.0.0.md Contributing CONTRIBUTING.md Changelog HISTORY.md"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#release-integrity","title":"Release Integrity","text":"<p>Releases are created automatically and signed using the Node team's GPG key. This applies to the git tag as well as all release packages provided as part of a GitHub release. To verify the provided packages, download the key and import it using gpg:</p> <pre><code>gpg --import node-driver.asc\n</code></pre> <p>The GitHub release contains a detached signature file for the NPM package (named <code>mongodb-X.Y.Z.tgz.sig</code>).</p> <p>The following command returns the link npm package. <pre><code>npm view mongodb@vX.Y.Z dist.tarball\n</code></pre></p> <p>Using the result of the above command, a <code>curl</code> command can return the official npm package for the release.</p> <p>To verify the integrity of the downloaded package, run the following command: <pre><code>gpg --verify mongodb-X.Y.Z.tgz.sig mongodb-X.Y.Z.tgz\n</code></pre></p> <p>[!Note] No verification is done when using npm to install the package. The contents of the Github tarball and npm's tarball are identical.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#bugs-feature-requests","title":"Bugs / Feature Requests","text":"<p>Think you\u2019ve found a bug? Want to see a new feature in <code>node-mongodb-native</code>? Please open a case in our issue management tool, JIRA:</p> <ul> <li>Create an account and login jira.mongodb.org.</li> <li>Navigate to the NODE project jira.mongodb.org/browse/NODE.</li> <li>Click Create Issue - Please provide as much information as possible about the issue type and how to reproduce it.</li> </ul> <p>Bug reports in JIRA for all driver projects (i.e. NODE, PYTHON, CSHARP, JAVA) and the Core Server (i.e. SERVER) project are public.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#support-feedback","title":"Support / Feedback","text":"<p>For issues with, questions about, or feedback for the Node.js driver, please look into our support channels. Please do not email any of the driver developers directly with issues or questions - you're more likely to get an answer on the MongoDB Community Forums.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#change-log","title":"Change Log","text":"<p>Change history can be found in <code>HISTORY.md</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#compatibility","title":"Compatibility","text":"<p>The driver currently supports 4.0+ servers.</p> <p>For exhaustive server and runtime version compatibility matrices, please refer to the following links:</p> <ul> <li>MongoDB</li> <li>NodeJS</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#component-support-matrix","title":"Component Support Matrix","text":"<p>The following table describes add-on component version compatibility for the Node.js driver. Only packages with versions in these supported ranges are stable when used in combination.</p> Component <code>mongodb@3.x</code> <code>mongodb@4.x</code> <code>mongodb@5.x</code> <code>mongodb@&lt;6.12</code> <code>mongodb@&gt;=6.12</code> bson ^1.0.0 ^4.0.0 ^5.0.0 ^6.0.0 ^6.0.0 bson-ext ^1.0.0 || ^2.0.0 ^4.0.0 N/A N/A N/A kerberos ^1.0.0 ^1.0.0 || ^2.0.0 ^1.0.0 || ^2.0.0 ^2.0.1 ^2.0.1 mongodb-client-encryption ^1.0.0 ^1.0.0 || ^2.0.0 ^2.3.0 ^6.0.0 ^6.0.0 mongodb-legacy N/A ^4.0.0 ^5.0.0 ^6.0.0 ^6.0.0 @mongodb-js/zstd N/A ^1.0.0 ^1.0.0 ^1.1.0 ^1.1.0 || ^2.0.0"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#typescript-version","title":"Typescript Version","text":"<p>We recommend using the latest version of typescript, however we currently ensure the driver's public types compile against <code>typescript@4.4.0</code>. This is the lowest typescript version guaranteed to work with our driver: older versions may or may not work - use at your own risk. Since typescript does not restrict breaking changes to major versions, we consider this support best effort. If you run into any unexpected compiler failures against our supported TypeScript versions, please let us know by filing an issue on our JIRA.</p> <p>Additionally, our Typescript types are compatible with the ECMAScript standard for our minimum supported Node version.  Currently, our Typescript targets es2021.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#installation","title":"Installation","text":"<p>The recommended way to get started using the Node.js 5.x driver is by using the <code>npm</code> (Node Package Manager) to install the dependency in your project.</p> <p>After you've created your own project using <code>npm init</code>, you can run:</p> <pre><code>npm install mongodb\n</code></pre> <p>This will download the MongoDB driver and add a dependency entry in your <code>package.json</code> file.</p> <p>If you are a Typescript user, you will need the Node.js type definitions to use the driver's definitions:</p> <pre><code>npm install -D @types/node\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#driver-extensions","title":"Driver Extensions","text":"<p>The MongoDB driver can optionally be enhanced by the following feature packages:</p> <p>Maintained by MongoDB:</p> <ul> <li>Zstd network compression - @mongodb-js/zstd</li> <li>MongoDB field level and queryable encryption - mongodb-client-encryption</li> <li>GSSAPI / SSPI / Kerberos authentication - kerberos</li> </ul> <p>Some of these packages include native C++ extensions. Consult the trouble shooting guide here if you run into compilation issues.</p> <p>Third party:</p> <ul> <li>Snappy network compression - snappy</li> <li>AWS authentication - @aws-sdk/credential-providers</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#quick-start","title":"Quick Start","text":"<p>This guide will show you how to set up a simple application using Node.js and MongoDB. Its scope is only how to set up the driver and perform the simple CRUD operations. For more in-depth coverage, see the official documentation.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#create-the-packagejson-file","title":"Create the <code>package.json</code> file","text":"<p>First, create a directory where your application will live.</p> <pre><code>mkdir myProject\ncd myProject\n</code></pre> <p>Enter the following command and answer the questions to create the initial structure for your new project:</p> <pre><code>npm init -y\n</code></pre> <p>Next, install the driver as a dependency.</p> <pre><code>npm install mongodb\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#start-a-mongodb-server","title":"Start a MongoDB Server","text":"<p>For complete MongoDB installation instructions, see the manual.</p> <ol> <li>Download the right MongoDB version from MongoDB</li> <li>Create a database directory (in this case under /data).</li> <li>Install and start a <code>mongod</code> process.</li> </ol> <pre><code>mongod --dbpath=/data\n</code></pre> <p>You should see the mongod process start up and print some status information.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#connect-to-mongodb","title":"Connect to MongoDB","text":"<p>Create a new app.js file and add the following code to try out some basic CRUD operations using the MongoDB driver.</p> <p>Add code to connect to the server and the database myProject:</p> <p>NOTE: Resolving DNS Connection issues</p> <p>Node.js 18 changed the default DNS resolution ordering from always prioritizing IPv4 to the ordering returned by the DNS provider. In some environments, this can result in <code>localhost</code> resolving to an IPv6 address instead of IPv4 and a consequent failure to connect to the server.</p> <p>This can be resolved by:</p> <ul> <li>specifying the IP address family using the MongoClient <code>family</code> option (<code>MongoClient(&lt;uri&gt;, { family: 4 } )</code>)</li> <li>launching mongod or mongos with the ipv6 flag enabled (--ipv6 mongod option documentation)</li> <li>using a host of <code>127.0.0.1</code> in place of localhost</li> <li>specifying the DNS resolution ordering with the <code>--dns-resolution-order</code> Node.js command line argument (e.g. <code>node --dns-resolution-order=ipv4first</code>)</li> </ul> <pre><code>const { MongoClient } = require('mongodb');\n// or as an es module:\n// import { MongoClient } from 'mongodb'\n\n// Connection URL\nconst url = 'mongodb://localhost:27017';\nconst client = new MongoClient(url);\n\n// Database Name\nconst dbName = 'myProject';\n\nasync function main() {\n  // Use connect method to connect to the server\n  await client.connect();\n  console.log('Connected successfully to server');\n  const db = client.db(dbName);\n  const collection = db.collection('documents');\n\n  // the following code examples can be pasted here...\n\n  return 'done.';\n}\n\nmain()\n  .then(console.log)\n  .catch(console.error)\n  .finally(() =&gt; client.close());\n</code></pre> <p>Run your app from the command line with:</p> <pre><code>node app.js\n</code></pre> <p>The application should print Connected successfully to server to the console.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#insert-a-document","title":"Insert a Document","text":"<p>Add to app.js the following function which uses the insertMany method to add three documents to the documents collection.</p> <pre><code>const insertResult = await collection.insertMany([{ a: 1 }, { a: 2 }, { a: 3 }]);\nconsole.log('Inserted documents =&gt;', insertResult);\n</code></pre> <p>The insertMany command returns an object with information about the insert operations.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#find-all-documents","title":"Find All Documents","text":"<p>Add a query that returns all the documents.</p> <pre><code>const findResult = await collection.find({}).toArray();\nconsole.log('Found documents =&gt;', findResult);\n</code></pre> <p>This query returns all the documents in the documents collection. If you add this below the insertMany example, you'll see the documents you've inserted.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#find-documents-with-a-query-filter","title":"Find Documents with a Query Filter","text":"<p>Add a query filter to find only documents which meet the query criteria.</p> <pre><code>const filteredDocs = await collection.find({ a: 3 }).toArray();\nconsole.log('Found documents filtered by { a: 3 } =&gt;', filteredDocs);\n</code></pre> <p>Only the documents which match <code>'a' : 3</code> should be returned.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#update-a-document","title":"Update a document","text":"<p>The following operation updates a document in the documents collection.</p> <pre><code>const updateResult = await collection.updateOne({ a: 3 }, { $set: { b: 1 } });\nconsole.log('Updated documents =&gt;', updateResult);\n</code></pre> <p>The method updates the first document where the field a is equal to 3 by adding a new field b to the document set to 1. <code>updateResult</code> contains information about whether there was a matching document to update or not.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#remove-a-document","title":"Remove a document","text":"<p>Remove the document where the field a is equal to 3.</p> <pre><code>const deleteResult = await collection.deleteMany({ a: 3 });\nconsole.log('Deleted documents =&gt;', deleteResult);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#index-a-collection","title":"Index a Collection","text":"<p>Indexes can improve your application's performance. The following function creates an index on the a field in the documents collection.</p> <pre><code>const indexName = await collection.createIndex({ a: 1 });\nconsole.log('index name =', indexName);\n</code></pre> <p>For more detailed information, see the indexing strategies page.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#error-handling","title":"Error Handling","text":"<p>If you need to filter certain errors from our driver, we have a helpful tree of errors described in etc/notes/errors.md.</p> <p>It is our recommendation to use <code>instanceof</code> checks on errors and to avoid relying on parsing <code>error.message</code> and <code>error.name</code> strings in your code. We guarantee <code>instanceof</code> checks will pass according to semver guidelines, but errors may be sub-classed or their messages may change at any time, even patch releases, as we see fit to increase the helpfulness of the errors.</p> <p>Any new errors we add to the driver will directly extend an existing error class and no existing error will be moved to a different parent class outside of a major release. This means <code>instanceof</code> will always be able to accurately capture the errors that our driver throws.</p> <pre><code>const client = new MongoClient(url);\nawait client.connect();\nconst collection = client.db().collection('collection');\n\ntry {\n  await collection.insertOne({ _id: 1 });\n  await collection.insertOne({ _id: 1 }); // duplicate key error\n} catch (error) {\n  if (error instanceof MongoServerError) {\n    console.log(`Error worth logging: ${error}`); // special case for some reason\n  }\n  throw error; // still want to crash\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#nightly-releases","title":"Nightly releases","text":"<p>If you need to test with a change from the latest <code>main</code> branch, our <code>mongodb</code> npm package has nightly versions released under the <code>nightly</code> tag.</p> <pre><code>npm install mongodb@nightly\n</code></pre> <p>Nightly versions are published regardless of testing outcome. This means there could be semantic breakages or partially implemented features. The nightly build is not suitable for production use.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#next-steps","title":"Next Steps","text":"<ul> <li>MongoDB Documentation</li> <li>MongoDB Node Driver Documentation</li> <li>Read about Schemas</li> <li>Star us on GitHub</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/#license","title":"License","text":"<p>Apache 2.0</p> <p>\u00a9 2012-present MongoDB Contributors \\ \u00a9 2009-2012 Christian Amor Kvalheim</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb/LICENSE/","title":"LICENSE","text":"<p>Apache License                            Version 2.0, January 2004                         http://www.apache.org/licenses/</p> <p>TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION</p> <ol> <li> <p>Definitions.</p> <p>\"License\" shall mean the terms and conditions for use, reproduction,   and distribution as defined by Sections 1 through 9 of this document.</p> <p>\"Licensor\" shall mean the copyright owner or entity authorized by   the copyright owner that is granting the License.</p> <p>\"Legal Entity\" shall mean the union of the acting entity and all   other entities that control, are controlled by, or are under common   control with that entity. For the purposes of this definition,   \"control\" means (i) the power, direct or indirect, to cause the   direction or management of such entity, whether by contract or   otherwise, or (ii) ownership of fifty percent (50%) or more of the   outstanding shares, or (iii) beneficial ownership of such entity.</p> <p>\"You\" (or \"Your\") shall mean an individual or Legal Entity   exercising permissions granted by this License.</p> <p>\"Source\" form shall mean the preferred form for making modifications,   including but not limited to software source code, documentation   source, and configuration files.</p> <p>\"Object\" form shall mean any form resulting from mechanical   transformation or translation of a Source form, including but   not limited to compiled object code, generated documentation,   and conversions to other media types.</p> <p>\"Work\" shall mean the work of authorship, whether in Source or   Object form, made available under the License, as indicated by a   copyright notice that is included in or attached to the work   (an example is provided in the Appendix below).</p> <p>\"Derivative Works\" shall mean any work, whether in Source or Object   form, that is based on (or derived from) the Work and for which the   editorial revisions, annotations, elaborations, or other modifications   represent, as a whole, an original work of authorship. For the purposes   of this License, Derivative Works shall not include works that remain   separable from, or merely link (or bind by name) to the interfaces of,   the Work and Derivative Works thereof.</p> <p>\"Contribution\" shall mean any work of authorship, including   the original version of the Work and any modifications or additions   to that Work or Derivative Works thereof, that is intentionally   submitted to Licensor for inclusion in the Work by the copyright owner   or by an individual or Legal Entity authorized to submit on behalf of   the copyright owner. For the purposes of this definition, \"submitted\"   means any form of electronic, verbal, or written communication sent   to the Licensor or its representatives, including but not limited to   communication on electronic mailing lists, source code control systems,   and issue tracking systems that are managed by, or on behalf of, the   Licensor for the purpose of discussing and improving the Work, but   excluding communication that is conspicuously marked or otherwise   designated in writing by the copyright owner as \"Not a Contribution.\"</p> <p>\"Contributor\" shall mean Licensor and any individual or Legal Entity   on behalf of whom a Contribution has been received by Licensor and   subsequently incorporated within the Work.</p> </li> <li> <p>Grant of Copyright License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       copyright license to reproduce, prepare Derivative Works of,       publicly display, publicly perform, sublicense, and distribute the       Work and such Derivative Works in Source or Object form.</p> </li> <li> <p>Grant of Patent License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       (except as stated in this section) patent license to make, have made,       use, offer to sell, sell, import, and otherwise transfer the Work,       where such license applies only to those patent claims licensable       by such Contributor that are necessarily infringed by their       Contribution(s) alone or by combination of their Contribution(s)       with the Work to which such Contribution(s) was submitted. If You       institute patent litigation against any entity (including a       cross-claim or counterclaim in a lawsuit) alleging that the Work       or a Contribution incorporated within the Work constitutes direct       or contributory patent infringement, then any patent licenses       granted to You under this License for that Work shall terminate       as of the date such litigation is filed.</p> </li> <li> <p>Redistribution. You may reproduce and distribute copies of the       Work or Derivative Works thereof in any medium, with or without       modifications, and in Source or Object form, provided that You       meet the following conditions:</p> <p>(a) You must give any other recipients of the Work or       Derivative Works a copy of this License; and</p> <p>(b) You must cause any modified files to carry prominent notices       stating that You changed the files; and</p> <p>(c) You must retain, in the Source form of any Derivative Works       that You distribute, all copyright, patent, trademark, and       attribution notices from the Source form of the Work,       excluding those notices that do not pertain to any part of       the Derivative Works; and</p> <p>(d) If the Work includes a \"NOTICE\" text file as part of its       distribution, then any Derivative Works that You distribute must       include a readable copy of the attribution notices contained       within such NOTICE file, excluding those notices that do not       pertain to any part of the Derivative Works, in at least one       of the following places: within a NOTICE text file distributed       as part of the Derivative Works; within the Source form or       documentation, if provided along with the Derivative Works; or,       within a display generated by the Derivative Works, if and       wherever such third-party notices normally appear. The contents       of the NOTICE file are for informational purposes only and       do not modify the License. You may add Your own attribution       notices within Derivative Works that You distribute, alongside       or as an addendum to the NOTICE text from the Work, provided       that such additional attribution notices cannot be construed       as modifying the License.</p> <p>You may add Your own copyright statement to Your modifications and   may provide additional or different license terms and conditions   for use, reproduction, or distribution of Your modifications, or   for any such Derivative Works as a whole, provided Your use,   reproduction, and distribution of the Work otherwise complies with   the conditions stated in this License.</p> </li> <li> <p>Submission of Contributions. Unless You explicitly state otherwise,       any Contribution intentionally submitted for inclusion in the Work       by You to the Licensor shall be under the terms and conditions of       this License, without any additional terms or conditions.       Notwithstanding the above, nothing herein shall supersede or modify       the terms of any separate license agreement you may have executed       with Licensor regarding such Contributions.</p> </li> <li> <p>Trademarks. This License does not grant permission to use the trade       names, trademarks, service marks, or product names of the Licensor,       except as required for reasonable and customary use in describing the       origin of the Work and reproducing the content of the NOTICE file.</p> </li> <li> <p>Disclaimer of Warranty. Unless required by applicable law or       agreed to in writing, Licensor provides the Work (and each       Contributor provides its Contributions) on an \"AS IS\" BASIS,       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or       implied, including, without limitation, any warranties or conditions       of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A       PARTICULAR PURPOSE. You are solely responsible for determining the       appropriateness of using or redistributing the Work and assume any       risks associated with Your exercise of permissions under this License.</p> </li> <li> <p>Limitation of Liability. In no event and under no legal theory,       whether in tort (including negligence), contract, or otherwise,       unless required by applicable law (such as deliberate and grossly       negligent acts) or agreed to in writing, shall any Contributor be       liable to You for damages, including any direct, indirect, special,       incidental, or consequential damages of any character arising as a       result of this License or out of the use or inability to use the       Work (including but not limited to damages for loss of goodwill,       work stoppage, computer failure or malfunction, or any and all       other commercial damages or losses), even if such Contributor       has been advised of the possibility of such damages.</p> </li> <li> <p>Accepting Warranty or Additional Liability. While redistributing       the Work or Derivative Works thereof, You may choose to offer,       and charge a fee for, acceptance of support, warranty, indemnity,       or other liability obligations and/or rights consistent with this       License. However, in accepting such obligations, You may act only       on Your own behalf and on Your sole responsibility, not on behalf       of any other Contributor, and only if You agree to indemnify,       defend, and hold each Contributor harmless for any liability       incurred by, or claims asserted against, such Contributor by reason       of your accepting any such warranty or additional liability.</p> </li> </ol> <p>END OF TERMS AND CONDITIONS</p> <p>APPENDIX: How to apply the Apache License to your work.</p> <pre><code>  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"{}\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.\n</code></pre> <p>Copyright {yyyy} {name of copyright owner}</p> <p>Licensed under the Apache License, Version 2.0 (the \"License\");    you may not use this file except in compliance with the License.    You may obtain a copy of the License at</p> <pre><code>   http://www.apache.org/licenses/LICENSE-2.0\n</code></pre> <p>Unless required by applicable law or agreed to in writing, software    distributed under the License is distributed on an \"AS IS\" BASIS,    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.    See the License for the specific language governing permissions and    limitations under the License.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb-connection-string-url/","title":"mongodb-connection-string-url","text":"<p>MongoDB connection strings, based on the WhatWG URL API</p> <pre><code>import ConnectionString from 'mongodb-connection-string-url';\n\nconst cs = new ConnectionString('mongodb://localhost');\ncs.searchParams.set('readPreference', 'secondary');\nconsole.log(cs.href); // 'mongodb://localhost/?readPreference=secondary'\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb-connection-string-url/#deviations-from-the-whatwg-url-package","title":"Deviations from the WhatWG URL package","text":"<ul> <li>URL parameters are case-insensitive</li> <li>The <code>.host</code>, <code>.hostname</code> and <code>.port</code> properties cannot be set, and reading   them does not return meaningful results (and are typed as <code>never</code>in TypeScript)</li> <li>The <code>.hosts</code> property contains a list of all hosts in the connection string</li> <li>The <code>.href</code> property cannot be set, only read</li> <li>There is an additional <code>.isSRV</code> property, set to <code>true</code> for <code>mongodb+srv://</code></li> <li>There is an additional <code>.clone()</code> utility method on the prototype</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongodb-connection-string-url/#license","title":"LICENSE","text":"<p>Apache-2.0</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/","title":"Mongoose","text":"<p>Mongoose is a MongoDB object modeling tool designed to work in an asynchronous environment. Mongoose supports Node.js and Deno (alpha).</p> <p> </p> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#documentation","title":"Documentation","text":"<p>The official documentation website is mongoosejs.com.</p> <p>Mongoose 8.0.0 was released on October 31, 2023. You can find more details on backwards breaking changes in 8.0.0 on our docs site.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#support","title":"Support","text":"<ul> <li>Stack Overflow</li> <li>Bug Reports</li> <li>Mongoose Slack Channel</li> <li>Help Forum</li> <li>MongoDB Support</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#plugins","title":"Plugins","text":"<p>Check out the plugins search site to see hundreds of related modules from the community. Next, learn how to write your own plugin from the docs or this blog post.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#contributors","title":"Contributors","text":"<p>Pull requests are always welcome! Please base pull requests against the <code>master</code> branch and follow the contributing guide.</p> <p>If your pull requests makes documentation changes, please do not modify any <code>.html</code> files. The <code>.html</code> files are compiled code, so please make your changes in <code>docs/*.pug</code>, <code>lib/*.js</code>, or <code>test/docs/*.js</code>.</p> <p>View all 400+ contributors.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#installation","title":"Installation","text":"<p>First install Node.js and MongoDB. Then:</p> <pre><code>npm install mongoose\n</code></pre> <p>Mongoose 6.8.0 also includes alpha support for Deno.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#importing","title":"Importing","text":"<pre><code>// Using Node.js `require()`\nconst mongoose = require('mongoose');\n\n// Using ES6 imports\nimport mongoose from 'mongoose';\n</code></pre> <p>Or, using Deno's <code>createRequire()</code> for CommonJS support as follows.</p> <pre><code>import { createRequire } from 'https://deno.land/std@0.177.0/node/module.ts';\nconst require = createRequire(import.meta.url);\n\nconst mongoose = require('mongoose');\n\nmongoose.connect('mongodb://127.0.0.1:27017/test')\n  .then(() =&gt; console.log('Connected!'));\n</code></pre> <p>You can then run the above script using the following.</p> <pre><code>deno run --allow-net --allow-read --allow-sys --allow-env mongoose-test.js\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#mongoose-for-enterprise","title":"Mongoose for Enterprise","text":"<p>Available as part of the Tidelift Subscription</p> <p>The maintainers of mongoose and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. Learn more.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#overview","title":"Overview","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#connecting-to-mongodb","title":"Connecting to MongoDB","text":"<p>First, we need to define a connection. If your app uses only one database, you should use <code>mongoose.connect</code>. If you need to create additional connections, use <code>mongoose.createConnection</code>.</p> <p>Both <code>connect</code> and <code>createConnection</code> take a <code>mongodb://</code> URI, or the parameters <code>host, database, port, options</code>.</p> <pre><code>await mongoose.connect('mongodb://127.0.0.1/my_database');\n</code></pre> <p>Once connected, the <code>open</code> event is fired on the <code>Connection</code> instance. If you're using <code>mongoose.connect</code>, the <code>Connection</code> is <code>mongoose.connection</code>. Otherwise, <code>mongoose.createConnection</code> return value is a <code>Connection</code>.</p> <p>Note: If the local connection fails then try using 127.0.0.1 instead of localhost. Sometimes issues may arise when the local hostname has been changed.</p> <p>Important! Mongoose buffers all the commands until it's connected to the database. This means that you don't have to wait until it connects to MongoDB in order to define models, run queries, etc.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#defining-a-model","title":"Defining a Model","text":"<p>Models are defined through the <code>Schema</code> interface.</p> <pre><code>const Schema = mongoose.Schema;\nconst ObjectId = Schema.ObjectId;\n\nconst BlogPost = new Schema({\n  author: ObjectId,\n  title: String,\n  body: String,\n  date: Date\n});\n</code></pre> <p>Aside from defining the structure of your documents and the types of data you're storing, a Schema handles the definition of:</p> <ul> <li>Validators (async and sync)</li> <li>Defaults</li> <li>Getters</li> <li>Setters</li> <li>Indexes</li> <li>Middleware</li> <li>Methods definition</li> <li>Statics definition</li> <li>Plugins</li> <li>pseudo-JOINs</li> </ul> <p>The following example shows some of these features:</p> <pre><code>const Comment = new Schema({\n  name: { type: String, default: 'hahaha' },\n  age: { type: Number, min: 18, index: true },\n  bio: { type: String, match: /[a-z]/ },\n  date: { type: Date, default: Date.now },\n  buff: Buffer\n});\n\n// a setter\nComment.path('name').set(function(v) {\n  return capitalize(v);\n});\n\n// middleware\nComment.pre('save', function(next) {\n  notify(this.get('email'));\n  next();\n});\n</code></pre> <p>Take a look at the example in <code>examples/schema/schema.js</code> for an end-to-end example of a typical setup.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#accessing-a-model","title":"Accessing a Model","text":"<p>Once we define a model through <code>mongoose.model('ModelName', mySchema)</code>, we can access it through the same function</p> <pre><code>const MyModel = mongoose.model('ModelName');\n</code></pre> <p>Or just do it all at once</p> <pre><code>const MyModel = mongoose.model('ModelName', mySchema);\n</code></pre> <p>The first argument is the singular name of the collection your model is for. Mongoose automatically looks for the plural version of your model name. For example, if you use</p> <pre><code>const MyModel = mongoose.model('Ticket', mySchema);\n</code></pre> <p>Then <code>MyModel</code> will use the tickets collection, not the ticket collection. For more details read the model docs.</p> <p>Once we have our model, we can then instantiate it, and save it:</p> <pre><code>const instance = new MyModel();\ninstance.my.key = 'hello';\nawait instance.save();\n</code></pre> <p>Or we can find documents from the same collection</p> <pre><code>await MyModel.find({});\n</code></pre> <p>You can also <code>findOne</code>, <code>findById</code>, <code>update</code>, etc.</p> <pre><code>const instance = await MyModel.findOne({ /* ... */ });\nconsole.log(instance.my.key); // 'hello'\n</code></pre> <p>For more details check out the docs.</p> <p>Important! If you opened a separate connection using <code>mongoose.createConnection()</code> but attempt to access the model through <code>mongoose.model('ModelName')</code> it will not work as expected since it is not hooked up to an active db connection. In this case access your model through the connection you created:</p> <pre><code>const conn = mongoose.createConnection('your connection string');\nconst MyModel = conn.model('ModelName', schema);\nconst m = new MyModel();\nawait m.save(); // works\n</code></pre> <p>vs</p> <pre><code>const conn = mongoose.createConnection('your connection string');\nconst MyModel = mongoose.model('ModelName', schema);\nconst m = new MyModel();\nawait m.save(); // does not work b/c the default connection object was never connected\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#embedded-documents","title":"Embedded Documents","text":"<p>In the first example snippet, we defined a key in the Schema that looks like:</p> <pre><code>comments: [Comment]\n</code></pre> <p>Where <code>Comment</code> is a <code>Schema</code> we created. This means that creating embedded documents is as simple as:</p> <pre><code>// retrieve my model\nconst BlogPost = mongoose.model('BlogPost');\n\n// create a blog post\nconst post = new BlogPost();\n\n// create a comment\npost.comments.push({ title: 'My comment' });\n\nawait post.save();\n</code></pre> <p>The same goes for removing them:</p> <pre><code>const post = await BlogPost.findById(myId);\npost.comments[0].deleteOne();\nawait post.save();\n</code></pre> <p>Embedded documents enjoy all the same features as your models. Defaults, validators, middleware.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#middleware","title":"Middleware","text":"<p>See the docs page.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#intercepting-and-mutating-method-arguments","title":"Intercepting and mutating method arguments","text":"<p>You can intercept method arguments via middleware.</p> <p>For example, this would allow you to broadcast changes about your Documents every time someone <code>set</code>s a path in your Document to a new value:</p> <pre><code>schema.pre('set', function(next, path, val, typel) {\n  // `this` is the current Document\n  this.emit('set', path, val);\n\n  // Pass control to the next pre\n  next();\n});\n</code></pre> <p>Moreover, you can mutate the incoming <code>method</code> arguments so that subsequent middleware see different values for those arguments. To do so, just pass the new values to <code>next</code>:</p> <pre><code>schema.pre(method, function firstPre(next, methodArg1, methodArg2) {\n  // Mutate methodArg1\n  next('altered-' + methodArg1.toString(), methodArg2);\n});\n\n// pre declaration is chainable\nschema.pre(method, function secondPre(next, methodArg1, methodArg2) {\n  console.log(methodArg1);\n  // =&gt; 'altered-originalValOfMethodArg1'\n\n  console.log(methodArg2);\n  // =&gt; 'originalValOfMethodArg2'\n\n  // Passing no arguments to `next` automatically passes along the current argument values\n  // i.e., the following `next()` is equivalent to `next(methodArg1, methodArg2)`\n  // and also equivalent to, with the example method arg\n  // values, `next('altered-originalValOfMethodArg1', 'originalValOfMethodArg2')`\n  next();\n});\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#schema-gotcha","title":"Schema gotcha","text":"<p><code>type</code>, when used in a schema has special meaning within Mongoose. If your schema requires using <code>type</code> as a nested property you must use object notation:</p> <pre><code>new Schema({\n  broken: { type: Boolean },\n  asset: {\n    name: String,\n    type: String // uh oh, it broke. asset will be interpreted as String\n  }\n});\n\nnew Schema({\n  works: { type: Boolean },\n  asset: {\n    name: String,\n    type: { type: String } // works. asset is an object with a type property\n  }\n});\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#driver-access","title":"Driver Access","text":"<p>Mongoose is built on top of the official MongoDB Node.js driver. Each mongoose model keeps a reference to a native MongoDB driver collection. The collection object can be accessed using <code>YourModel.collection</code>. However, using the collection object directly bypasses all mongoose features, including hooks, validation, etc. The one notable exception that <code>YourModel.collection</code> still buffers commands. As such, <code>YourModel.collection.find()</code> will not return a cursor.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#api-docs","title":"API Docs","text":"<p>Find the API docs here, generated using dox and acquit.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#related-projects","title":"Related Projects","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#mongodb-runners","title":"MongoDB Runners","text":"<ul> <li>run-rs</li> <li>mongodb-memory-server</li> <li>mongodb-topology-manager</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#unofficial-clis","title":"Unofficial CLIs","text":"<ul> <li>mongoosejs-cli</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#data-seeding","title":"Data Seeding","text":"<ul> <li>dookie</li> <li>seedgoose</li> <li>mongoose-data-seed</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#express-session-stores","title":"Express Session Stores","text":"<ul> <li>connect-mongodb-session</li> <li>connect-mongo</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/#license","title":"License","text":"<p>Copyright (c) 2010 LearnBoost &lt;dev@learnboost.com&gt;</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/LICENSE/","title":"MIT License","text":"<p>Copyright (c) 2010-2013 LearnBoost dev@learnboost.com Copyright (c) 2013-2021 Automattic</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/SECURITY/","title":"SECURITY","text":"<p>Please follow the instructions on Tidelift's security page to report a security issue.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mongoose/lib/drivers/SPEC/","title":"Driver Spec","text":"<p>TODO</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/","title":"morgan","text":"<p>HTTP request logger middleware for node.js</p> <p>Named after Dexter, a show you should not watch until completion.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#api","title":"API","text":"<pre><code>var morgan = require('morgan')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#morganformat-options","title":"morgan(format, options)","text":"<p>Create a new morgan logger middleware function using the given <code>format</code> and <code>options</code>. The <code>format</code> argument may be a string of a predefined name (see below for the names), a string of a format string, or a function that will produce a log entry.</p> <p>The <code>format</code> function will be called with three arguments <code>tokens</code>, <code>req</code>, and <code>res</code>, where <code>tokens</code> is an object with all defined tokens, <code>req</code> is the HTTP request and <code>res</code> is the HTTP response. The function is expected to return a string that will be the log line, or <code>undefined</code> / <code>null</code> to skip logging.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#using-a-predefined-format-string","title":"Using a predefined format string","text":"<pre><code>morgan('tiny')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#using-format-string-of-predefined-tokens","title":"Using format string of predefined tokens","text":"<pre><code>morgan(':method :url :status :res[content-length] - :response-time ms')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#using-a-custom-format-function","title":"Using a custom format function","text":"<pre><code>morgan(function (tokens, req, res) {\n  return [\n    tokens.method(req, res),\n    tokens.url(req, res),\n    tokens.status(req, res),\n    tokens.res(req, res, 'content-length'), '-',\n    tokens['response-time'](req, res), 'ms'\n  ].join(' ')\n})\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#options","title":"Options","text":"<p>Morgan accepts these properties in the options object.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#immediate","title":"immediate","text":"<p>Write log line on request instead of response. This means that a requests will be logged even if the server crashes, but data from the response (like the response code, content length, etc.) cannot be logged.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#skip","title":"skip","text":"<p>Function to determine if logging is skipped, defaults to <code>false</code>. This function will be called as <code>skip(req, res)</code>.</p> <pre><code>// EXAMPLE: only log error responses\nmorgan('combined', {\n  skip: function (req, res) { return res.statusCode &lt; 400 }\n})\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#stream","title":"stream","text":"<p>Output stream for writing log lines, defaults to <code>process.stdout</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#predefined-formats","title":"Predefined Formats","text":"<p>There are various pre-defined formats provided:</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#combined","title":"combined","text":"<p>Standard Apache combined log output.</p> <pre><code>:remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length] \":referrer\" \":user-agent\"\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#common","title":"common","text":"<p>Standard Apache common log output.</p> <pre><code>:remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length]\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#dev","title":"dev","text":"<p>Concise output colored by response status for development use. The <code>:status</code> token will be colored green for success codes, red for server error codes, yellow for client error codes, cyan for redirection codes, and uncolored for information codes.</p> <pre><code>:method :url :status :response-time ms - :res[content-length]\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#short","title":"short","text":"<p>Shorter than default, also including response time.</p> <pre><code>:remote-addr :remote-user :method :url HTTP/:http-version :status :res[content-length] - :response-time ms\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#tiny","title":"tiny","text":"<p>The minimal output.</p> <pre><code>:method :url :status :res[content-length] - :response-time ms\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#tokens","title":"Tokens","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#creating-new-tokens","title":"Creating new tokens","text":"<p>To define a token, simply invoke <code>morgan.token()</code> with the name and a callback function. This callback function is expected to return a string value. The value returned is then available as \":type\" in this case:</p> <pre><code>morgan.token('type', function (req, res) { return req.headers['content-type'] })\n</code></pre> <p>Calling <code>morgan.token()</code> using the same name as an existing token will overwrite that token definition.</p> <p>The token function is expected to be called with the arguments <code>req</code> and <code>res</code>, representing the HTTP request and HTTP response. Additionally, the token can accept further arguments of it's choosing to customize behavior.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#dateformat","title":":date[format]","text":"<p>The current date and time in UTC. The available formats are:</p> <ul> <li><code>clf</code> for the common log format (<code>\"10/Oct/2000:13:55:36 +0000\"</code>)</li> <li><code>iso</code> for the common ISO 8601 date time format (<code>2000-10-10T13:55:36.000Z</code>)</li> <li><code>web</code> for the common RFC 1123 date time format (<code>Tue, 10 Oct 2000 13:55:36 GMT</code>)</li> </ul> <p>If no format is given, then the default is <code>web</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#http-version","title":":http-version","text":"<p>The HTTP version of the request.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#method","title":":method","text":"<p>The HTTP method of the request.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#referrer","title":":referrer","text":"<p>The Referrer header of the request. This will use the standard mis-spelled Referer header if exists, otherwise Referrer.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#remote-addr","title":":remote-addr","text":"<p>The remote address of the request. This will use <code>req.ip</code>, otherwise the standard <code>req.connection.remoteAddress</code> value (socket address).</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#remote-user","title":":remote-user","text":"<p>The user authenticated as part of Basic auth for the request.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#reqheader","title":":req[header]","text":"<p>The given <code>header</code> of the request. If the header is not present, the value will be displayed as <code>\"-\"</code> in the log.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#resheader","title":":res[header]","text":"<p>The given <code>header</code> of the response. If the header is not present, the value will be displayed as <code>\"-\"</code> in the log.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#response-timedigits","title":":response-time[digits]","text":"<p>The time between the request coming into <code>morgan</code> and when the response headers are written, in milliseconds.</p> <p>The <code>digits</code> argument is a number that specifies the number of digits to include on the number, defaulting to <code>3</code>, which provides microsecond precision.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#status","title":":status","text":"<p>The status code of the response.</p> <p>If the request/response cycle completes before a response was sent to the client (for example, the TCP socket closed prematurely by a client aborting the request), then the status will be empty (displayed as <code>\"-\"</code> in the log).</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#total-timedigits","title":":total-time[digits]","text":"<p>The time between the request coming into <code>morgan</code> and when the response has finished being written out to the connection, in milliseconds.</p> <p>The <code>digits</code> argument is a number that specifies the number of digits to include on the number, defaulting to <code>3</code>, which provides microsecond precision.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#url","title":":url","text":"<p>The URL of the request. This will use <code>req.originalUrl</code> if exists, otherwise <code>req.url</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#user-agent","title":":user-agent","text":"<p>The contents of the User-Agent header of the request.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#morgancompileformat","title":"morgan.compile(format)","text":"<p>Compile a format string into a <code>format</code> function for use by <code>morgan</code>. A format string is a string that represents a single log line and can utilize token syntax. Tokens are references by <code>:token-name</code>. If tokens accept arguments, they can be passed using <code>[]</code>, for example: <code>:token-name[pretty]</code> would pass the string <code>'pretty'</code> as an argument to the token <code>token-name</code>.</p> <p>The function returned from <code>morgan.compile</code> takes three arguments <code>tokens</code>, <code>req</code>, and <code>res</code>, where <code>tokens</code> is object with all defined tokens, <code>req</code> is the HTTP request and <code>res</code> is the HTTP response. The function will return a string that will be the log line, or <code>undefined</code> / <code>null</code> to skip logging.</p> <p>Normally formats are defined using <code>morgan.format(name, format)</code>, but for certain advanced uses, this compile function is directly available.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#examples","title":"Examples","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#expressconnect","title":"express/connect","text":"<p>Simple app that will log all request in the Apache combined format to STDOUT</p> <pre><code>var express = require('express')\nvar morgan = require('morgan')\n\nvar app = express()\n\napp.use(morgan('combined'))\n\napp.get('/', function (req, res) {\n  res.send('hello, world!')\n})\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#vanilla-http-server","title":"vanilla http server","text":"<p>Simple app that will log all request in the Apache combined format to STDOUT</p> <pre><code>var finalhandler = require('finalhandler')\nvar http = require('http')\nvar morgan = require('morgan')\n\n// create \"middleware\"\nvar logger = morgan('combined')\n\nhttp.createServer(function (req, res) {\n  var done = finalhandler(req, res)\n  logger(req, res, function (err) {\n    if (err) return done(err)\n\n    // respond to request\n    res.setHeader('content-type', 'text/plain')\n    res.end('hello, world!')\n  })\n})\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#write-logs-to-a-file","title":"write logs to a file","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#single-file","title":"single file","text":"<p>Simple app that will log all requests in the Apache combined format to the file <code>access.log</code>.</p> <pre><code>var express = require('express')\nvar fs = require('fs')\nvar morgan = require('morgan')\nvar path = require('path')\n\nvar app = express()\n\n// create a write stream (in append mode)\nvar accessLogStream = fs.createWriteStream(path.join(__dirname, 'access.log'), { flags: 'a' })\n\n// setup the logger\napp.use(morgan('combined', { stream: accessLogStream }))\n\napp.get('/', function (req, res) {\n  res.send('hello, world!')\n})\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#log-file-rotation","title":"log file rotation","text":"<p>Simple app that will log all requests in the Apache combined format to one log file per day in the <code>log/</code> directory using the rotating-file-stream module.</p> <pre><code>var express = require('express')\nvar morgan = require('morgan')\nvar path = require('path')\nvar rfs = require('rotating-file-stream') // version 2.x\n\nvar app = express()\n\n// create a rotating write stream\nvar accessLogStream = rfs.createStream('access.log', {\n  interval: '1d', // rotate daily\n  path: path.join(__dirname, 'log')\n})\n\n// setup the logger\napp.use(morgan('combined', { stream: accessLogStream }))\n\napp.get('/', function (req, res) {\n  res.send('hello, world!')\n})\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#split-dual-logging","title":"split / dual logging","text":"<p>The <code>morgan</code> middleware can be used as many times as needed, enabling combinations like:</p> <ul> <li>Log entry on request and one on response</li> <li>Log all requests to file, but errors to console</li> <li>... and more!</li> </ul> <p>Sample app that will log all requests to a file using Apache format, but error responses are logged to the console:</p> <pre><code>var express = require('express')\nvar fs = require('fs')\nvar morgan = require('morgan')\nvar path = require('path')\n\nvar app = express()\n\n// log only 4xx and 5xx responses to console\napp.use(morgan('dev', {\n  skip: function (req, res) { return res.statusCode &lt; 400 }\n}))\n\n// log all requests to access.log\napp.use(morgan('common', {\n  stream: fs.createWriteStream(path.join(__dirname, 'access.log'), { flags: 'a' })\n}))\n\napp.get('/', function (req, res) {\n  res.send('hello, world!')\n})\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#use-custom-token-formats","title":"use custom token formats","text":"<p>Sample app that will use custom token formats. This adds an ID to all requests and displays it using the <code>:id</code> token.</p> <pre><code>var express = require('express')\nvar morgan = require('morgan')\nvar uuid = require('node-uuid')\n\nmorgan.token('id', function getId (req) {\n  return req.id\n})\n\nvar app = express()\n\napp.use(assignId)\napp.use(morgan(':id :method :url :response-time'))\n\napp.get('/', function (req, res) {\n  res.send('hello, world!')\n})\n\nfunction assignId (req, res, next) {\n  req.id = uuid.v4()\n  next()\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/","title":"1.10.0 / 2020-03-20","text":"<ul> <li>Add <code>:total-time</code> token</li> <li>Fix trailing space in colored status code for <code>dev</code> format</li> <li>deps: basic-auth@~2.0.1<ul> <li>deps: safe-buffer@5.1.2</li> </ul> </li> <li>deps: depd@~2.0.0<ul> <li>Replace internal <code>eval</code> usage with <code>Function</code> constructor</li> <li>Use instance methods on <code>process</code> to check for listeners</li> </ul> </li> <li>deps: on-headers@~1.0.2<ul> <li>Fix <code>res.writeHead</code> patch missing return value</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#191-2018-09-10","title":"1.9.1 / 2018-09-10","text":"<ul> <li>Fix using special characters in format</li> <li>deps: depd@~1.1.2<ul> <li>perf: remove argument reassignment</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#190-2017-09-26","title":"1.9.0 / 2017-09-26","text":"<ul> <li>Use <code>res.headersSent</code> when available</li> <li>deps: basic-auth@~2.0.0<ul> <li>Use <code>safe-buffer</code> for improved Buffer API</li> </ul> </li> <li>deps: debug@2.6.9</li> <li>deps: depd@~1.1.1<ul> <li>Remove unnecessary <code>Buffer</code> loading</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#182-2017-05-23","title":"1.8.2 / 2017-05-23","text":"<ul> <li>deps: debug@2.6.8<ul> <li>Fix <code>DEBUG_MAX_ARRAY_LENGTH</code></li> <li>deps: ms@2.0.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#181-2017-02-04","title":"1.8.1 / 2017-02-04","text":"<ul> <li>deps: debug@2.6.1<ul> <li>Fix deprecation messages in WebStorm and other editors</li> <li>Undeprecate <code>DEBUG_FD</code> set to <code>1</code> or <code>2</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#180-2017-02-04","title":"1.8.0 / 2017-02-04","text":"<ul> <li>Fix sending unnecessary <code>undefined</code> argument to token functions</li> <li>deps: basic-auth@~1.1.0</li> <li>deps: debug@2.6.0<ul> <li>Allow colors in workers</li> <li>Deprecated <code>DEBUG_FD</code> environment variable</li> <li>Fix error when running under React Native</li> <li>Use same color for same namespace</li> <li>deps: ms@0.7.2</li> </ul> </li> <li>perf: enable strict mode in compiled functions</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#170-2016-02-18","title":"1.7.0 / 2016-02-18","text":"<ul> <li>Add <code>digits</code> argument to <code>response-time</code> token</li> <li>deps: depd@~1.1.0<ul> <li>Enable strict mode in more places</li> <li>Support web browser loading</li> </ul> </li> <li>deps: on-headers@~1.0.1<ul> <li>perf: enable strict mode</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#161-2015-07-03","title":"1.6.1 / 2015-07-03","text":"<ul> <li>deps: basic-auth@~1.0.3</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#160-2015-06-12","title":"1.6.0 / 2015-06-12","text":"<ul> <li>Add <code>morgan.compile(format)</code> export</li> <li>Do not color 1xx status codes in <code>dev</code> format</li> <li>Fix <code>response-time</code> token to not include response latency</li> <li>Fix <code>status</code> token incorrectly displaying before response in <code>dev</code> format</li> <li>Fix token return values to be <code>undefined</code> or a string</li> <li>Improve representation of multiple headers in <code>req</code> and <code>res</code> tokens</li> <li>Use <code>res.getHeader</code> in <code>res</code> token</li> <li>deps: basic-auth@~1.0.2<ul> <li>perf: enable strict mode</li> <li>perf: hoist regular expression</li> <li>perf: parse with regular expressions</li> <li>perf: remove argument reassignment</li> </ul> </li> <li>deps: on-finished@~2.3.0<ul> <li>Add defined behavior for HTTP <code>CONNECT</code> requests</li> <li>Add defined behavior for HTTP <code>Upgrade</code> requests</li> <li>deps: ee-first@1.1.1</li> </ul> </li> <li>pref: enable strict mode</li> <li>pref: reduce function closure scopes</li> <li>pref: remove dynamic compile on every request for <code>dev</code> format</li> <li>pref: remove an argument reassignment</li> <li>pref: skip function call without <code>skip</code> option</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#153-2015-05-10","title":"1.5.3 / 2015-05-10","text":"<ul> <li>deps: basic-auth@~1.0.1</li> <li>deps: debug@~2.2.0<ul> <li>deps: ms@0.7.1</li> </ul> </li> <li>deps: depd@~1.0.1</li> <li>deps: on-finished@~2.2.1<ul> <li>Fix <code>isFinished(req)</code> when data buffered</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#152-2015-03-15","title":"1.5.2 / 2015-03-15","text":"<ul> <li>deps: debug@~2.1.3<ul> <li>Fix high intensity foreground color for bold</li> <li>deps: ms@0.7.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#151-2014-12-31","title":"1.5.1 / 2014-12-31","text":"<ul> <li>deps: debug@~2.1.1</li> <li>deps: on-finished@~2.2.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#150-2014-11-06","title":"1.5.0 / 2014-11-06","text":"<ul> <li>Add multiple date formats<ul> <li><code>clf</code> for the common log format</li> <li><code>iso</code> for the common ISO 8601 date time format</li> <li><code>web</code> for the common RFC 1123 date time format</li> </ul> </li> <li>Deprecate <code>buffer</code> option</li> <li>Fix date format in <code>common</code> and <code>combined</code> formats</li> <li>Fix token arguments to accept values with <code>\"</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#141-2014-10-22","title":"1.4.1 / 2014-10-22","text":"<ul> <li>deps: on-finished@~2.1.1<ul> <li>Fix handling of pipelined requests</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#140-2014-10-16","title":"1.4.0 / 2014-10-16","text":"<ul> <li>Add <code>debug</code> messages</li> <li>deps: depd@~1.0.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#132-2014-09-27","title":"1.3.2 / 2014-09-27","text":"<ul> <li>Fix <code>req.ip</code> integration when <code>immediate: false</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#131-2014-09-14","title":"1.3.1 / 2014-09-14","text":"<ul> <li>Remove un-used <code>bytes</code> dependency</li> <li>deps: depd@0.4.5</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#130-2014-09-01","title":"1.3.0 / 2014-09-01","text":"<ul> <li>Assert if <code>format</code> is not a function or string</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#123-2014-08-16","title":"1.2.3 / 2014-08-16","text":"<ul> <li>deps: on-finished@2.1.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#122-2014-07-27","title":"1.2.2 / 2014-07-27","text":"<ul> <li>deps: depd@0.4.4<ul> <li>Work-around v8 generating empty stack traces</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#121-2014-07-26","title":"1.2.1 / 2014-07-26","text":"<ul> <li>deps: depd@0.4.3<ul> <li>Fix exception when global <code>Error.stackTraceLimit</code> is too low</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#120-2014-07-19","title":"1.2.0 / 2014-07-19","text":"<ul> <li>Add <code>:remote-user</code> token</li> <li>Add <code>combined</code> log format</li> <li>Add <code>common</code> log format</li> <li>Add <code>morgan(format, options)</code> function signature</li> <li>Deprecate <code>default</code> format -- use <code>combined</code> format instead</li> <li>Deprecate not providing a format</li> <li>Remove non-standard grey color from <code>dev</code> format</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#111-2014-05-20","title":"1.1.1 / 2014-05-20","text":"<ul> <li>simplify method to get remote address</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#110-2014-05-18","title":"1.1.0 / 2014-05-18","text":"<ul> <li>\"dev\" format will use same tokens as other formats</li> <li><code>:response-time</code> token is now empty when immediate used</li> <li><code>:response-time</code> token is now monotonic</li> <li><code>:response-time</code> token has precision to 1 \u03bcs</li> <li>fix <code>:status</code> + immediate output in node.js 0.8</li> <li>improve <code>buffer</code> option to prevent indefinite event loop holding</li> <li>deps: bytes@1.0.0<ul> <li>add negative support</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#101-2014-05-04","title":"1.0.1 / 2014-05-04","text":"<ul> <li>Make buffer unique per morgan instance</li> <li>deps: bytes@0.3.0<ul> <li>added terabyte support</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/HISTORY/#100-2014-02-08","title":"1.0.0 / 2014-02-08","text":"<ul> <li>Initial release</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/","title":"debug","text":"<p>A tiny node.js debugging utility modelled after node core's debugging technique.</p> <p>Discussion around the V3 API is under way here</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#installation","title":"Installation","text":"<pre><code>$ npm install debug\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#usage","title":"Usage","text":"<p><code>debug</code> exposes a function; simply pass this function the name of your module, and it will return a decorated version of <code>console.error</code> for you to pass debug statements to. This will allow you to toggle the debug output for different parts of your module as well as the module as a whole.</p> <p>Example app.js:</p> <pre><code>var debug = require('debug')('http')\n  , http = require('http')\n  , name = 'My App';\n\n// fake app\n\ndebug('booting %s', name);\n\nhttp.createServer(function(req, res){\n  debug(req.method + ' ' + req.url);\n  res.end('hello\\n');\n}).listen(3000, function(){\n  debug('listening');\n});\n\n// fake worker of some kind\n\nrequire('./worker');\n</code></pre> <p>Example worker.js:</p> <pre><code>var debug = require('debug')('worker');\n\nsetInterval(function(){\n  debug('doing some work');\n}, 1000);\n</code></pre> <p>The DEBUG environment variable is then used to enable these based on space or comma-delimited names. Here are some examples:</p> <p></p> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#windows-note","title":"Windows note","text":"<p>On Windows the environment variable is set using the <code>set</code> command.</p> <pre><code>set DEBUG=*,-not_this\n</code></pre> <p>Note that PowerShell uses different syntax to set environment variables.</p> <p><code>cmd  $env:DEBUG = \"*,-not_this\"</code></p> <p>Then, run the program to be debugged as usual.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#millisecond-diff","title":"Millisecond diff","text":"<p>When actively developing an application it can be useful to see when the time spent between one <code>debug()</code> call and the next. Suppose for example you invoke <code>debug()</code> before requesting a resource, and after as well, the \"+NNNms\" will show you how much time was spent between calls.</p> <p></p> <p>When stdout is not a TTY, <code>Date#toUTCString()</code> is used, making it more useful for logging the debug information as shown below:</p> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#conventions","title":"Conventions","text":"<p>If you're using this in one or more of your libraries, you should use the name of your library so that developers may toggle debugging as desired without guessing names. If you have more than one debuggers you should prefix them with your library name and use \":\" to separate features. For example \"bodyParser\" from Connect would then be \"connect:bodyParser\".</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#wildcards","title":"Wildcards","text":"<p>The <code>*</code> character may be used as a wildcard. Suppose for example your library has debuggers named \"connect:bodyParser\", \"connect:compress\", \"connect:session\", instead of listing all three with <code>DEBUG=connect:bodyParser,connect:compress,connect:session</code>, you may simply do <code>DEBUG=connect:*</code>, or to run everything using this module simply use <code>DEBUG=*</code>.</p> <p>You can also exclude specific debuggers by prefixing them with a \"-\" character.  For example, <code>DEBUG=*,-connect:*</code> would include all debuggers except those starting with \"connect:\".</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#environment-variables","title":"Environment Variables","text":"<p>When running through Node.js, you can set a few environment variables that will   change the behavior of the debug logging:</p> Name Purpose <code>DEBUG</code> Enables/disables specific debugging namespaces. <code>DEBUG_COLORS</code> Whether or not to use colors in the debug output. <code>DEBUG_DEPTH</code> Object inspection depth. <code>DEBUG_SHOW_HIDDEN</code> Shows hidden properties on inspected objects. <p>Note: The environment variables beginning with <code>DEBUG_</code> end up being   converted into an Options object that gets used with <code>%o</code>/<code>%O</code> formatters.   See the Node.js documentation for   <code>util.inspect()</code>   for the complete list.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#formatters","title":"Formatters","text":"<p>Debug uses printf-style formatting. Below are the officially supported formatters:</p> Formatter Representation <code>%O</code> Pretty-print an Object on multiple lines. <code>%o</code> Pretty-print an Object all on a single line. <code>%s</code> String. <code>%d</code> Number (both integer and float). <code>%j</code> JSON. Replaced with the string '[Circular]' if the argument contains circular references. <code>%%</code> Single percent sign ('%'). This does not consume an argument."},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#custom-formatters","title":"Custom formatters","text":"<p>You can add custom formatters by extending the <code>debug.formatters</code> object. For example, if you wanted to add support for rendering a Buffer as hex with <code>%h</code>, you could do something like:</p> <pre><code>const createDebug = require('debug')\ncreateDebug.formatters.h = (v) =&gt; {\n  return v.toString('hex')\n}\n\n// \u2026elsewhere\nconst debug = createDebug('foo')\ndebug('this is hex: %h', new Buffer('hello world'))\n//   foo this is hex: 68656c6c6f20776f726c6421 +0ms\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#browser-support","title":"Browser support","text":"<p>You can build a browser-ready script using browserify,   or just use the browserify-as-a-service build,   if you don't want to build it yourself.</p> <p>Debug's enable state is currently persisted by <code>localStorage</code>.   Consider the situation shown below where you have <code>worker:a</code> and <code>worker:b</code>,   and wish to debug both. You can enable this using <code>localStorage.debug</code>:</p> <pre><code>localStorage.debug = 'worker:*'\n</code></pre> <p>And then refresh the page.</p> <pre><code>a = debug('worker:a');\nb = debug('worker:b');\n\nsetInterval(function(){\n  a('doing some work');\n}, 1000);\n\nsetInterval(function(){\n  b('doing some work');\n}, 1200);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#web-inspector-colors","title":"Web Inspector Colors","text":"<p>Colors are also enabled on \"Web Inspectors\" that understand the <code>%c</code> formatting   option. These are WebKit web inspectors, Firefox (since version   31)   and the Firebug plugin for Firefox (any version).</p> <p>Colored output looks something like:</p> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#output-streams","title":"Output streams","text":"<p>By default <code>debug</code> will log to stderr, however this can be configured per-namespace by overriding the <code>log</code> method:</p> <p>Example stdout.js:</p> <pre><code>var debug = require('debug');\nvar error = debug('app:error');\n\n// by default stderr is used\nerror('goes to stderr!');\n\nvar log = debug('app:log');\n// set this namespace to log via console.log\nlog.log = console.log.bind(console); // don't forget to bind to console!\nlog('goes to stdout');\nerror('still goes to stderr!');\n\n// set all output to go via console.info\n// overrides all per-namespace log settings\ndebug.log = console.info.bind(console);\nerror('now goes to stdout via console.info');\nlog('still goes to stdout, but via console.info now');\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#authors","title":"Authors","text":"<ul> <li>TJ Holowaychuk</li> <li>Nathan Rajlich</li> <li>Andrew Rhyne</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#backers","title":"Backers","text":"<p>Support us with a monthly donation and help us continue our activities. [Become a backer]</p> <p> </p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#sponsors","title":"Sponsors","text":"<p>Become a sponsor and get your logo on our README on Github with a link to your site. [Become a sponsor]</p> <p> </p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/#license","title":"License","text":"<p>(The MIT License)</p> <p>Copyright (c) 2014-2016 TJ Holowaychuk &lt;tj@vision-media.ca&gt;</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/","title":"2.6.9 / 2017-09-22","text":"<ul> <li>remove ReDoS regexp in %o formatter (#504)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#268-2017-05-18","title":"2.6.8 / 2017-05-18","text":"<ul> <li>Fix: Check for undefined on browser globals (#462, @marbemac)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#267-2017-05-16","title":"2.6.7 / 2017-05-16","text":"<ul> <li>Fix: Update ms to 2.0.0 to fix regular expression denial of service vulnerability (#458, @hubdotcom)</li> <li>Fix: Inline extend function in node implementation (#452, @dougwilson)</li> <li>Docs: Fix typo (#455, @msasad)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#265-2017-04-27","title":"2.6.5 / 2017-04-27","text":"<ul> <li>Fix: null reference check on window.documentElement.style.WebkitAppearance (#447, @thebigredgeek)</li> <li>Misc: clean up browser reference checks (#447, @thebigredgeek)</li> <li>Misc: add npm-debug.log to .gitignore (@thebigredgeek)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#264-2017-04-20","title":"2.6.4 / 2017-04-20","text":"<ul> <li>Fix: bug that would occure if process.env.DEBUG is a non-string value. (#444, @LucianBuzzo)</li> <li>Chore: ignore bower.json in npm installations. (#437, @joaovieira)</li> <li>Misc: update \"ms\" to v0.7.3 (@tootallnate)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#263-2017-03-13","title":"2.6.3 / 2017-03-13","text":"<ul> <li>Fix: Electron reference to <code>process.env.DEBUG</code> (#431, @paulcbetts)</li> <li>Docs: Changelog fix (@thebigredgeek)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#262-2017-03-10","title":"2.6.2 / 2017-03-10","text":"<ul> <li>Fix: DEBUG_MAX_ARRAY_LENGTH (#420, @slavaGanzin)</li> <li>Docs: Add backers and sponsors from Open Collective (#422, @piamancini)</li> <li>Docs: Add Slackin invite badge (@tootallnate)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#261-2017-02-10","title":"2.6.1 / 2017-02-10","text":"<ul> <li>Fix: Module's <code>export default</code> syntax fix for IE8 <code>Expected identifier</code> error</li> <li>Fix: Whitelist DEBUG_FD for values 1 and 2 only (#415, @pi0)</li> <li>Fix: IE8 \"Expected identifier\" error (#414, @vgoma)</li> <li>Fix: Namespaces would not disable once enabled (#409, @musikov)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#260-2016-12-28","title":"2.6.0 / 2016-12-28","text":"<ul> <li>Fix: added better null pointer checks for browser useColors (@thebigredgeek)</li> <li>Improvement: removed explicit <code>window.debug</code> export (#404, @tootallnate)</li> <li>Improvement: deprecated <code>DEBUG_FD</code> environment variable (#405, @tootallnate)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#252-2016-12-25","title":"2.5.2 / 2016-12-25","text":"<ul> <li>Fix: reference error on window within webworkers (#393, @KlausTrainer)</li> <li>Docs: fixed README typo (#391, @lurch)</li> <li>Docs: added notice about v3 api discussion (@thebigredgeek)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#251-2016-12-20","title":"2.5.1 / 2016-12-20","text":"<ul> <li>Fix: babel-core compatibility</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#250-2016-12-20","title":"2.5.0 / 2016-12-20","text":"<ul> <li>Fix: wrong reference in bower file (@thebigredgeek)</li> <li>Fix: webworker compatibility (@thebigredgeek)</li> <li>Fix: output formatting issue (#388, @kribblo)</li> <li>Fix: babel-loader compatibility (#383, @escwald)</li> <li>Misc: removed built asset from repo and publications (@thebigredgeek)</li> <li>Misc: moved source files to /src (#378, @yamikuronue)</li> <li>Test: added karma integration and replaced babel with browserify for browser tests (#378, @yamikuronue)</li> <li>Test: coveralls integration (#378, @yamikuronue)</li> <li>Docs: simplified language in the opening paragraph (#373, @yamikuronue)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#245-2016-12-17","title":"2.4.5 / 2016-12-17","text":"<ul> <li>Fix: <code>navigator</code> undefined in Rhino (#376, @jochenberger)</li> <li>Fix: custom log function (#379, @hsiliev)</li> <li>Improvement: bit of cleanup + linting fixes (@thebigredgeek)</li> <li>Improvement: rm non-maintainted <code>dist/</code> dir (#375, @freewil)</li> <li>Docs: simplified language in the opening paragraph. (#373, @yamikuronue)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#244-2016-12-14","title":"2.4.4 / 2016-12-14","text":"<ul> <li>Fix: work around debug being loaded in preload scripts for electron (#368, @paulcbetts)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#243-2016-12-14","title":"2.4.3 / 2016-12-14","text":"<ul> <li>Fix: navigation.userAgent error for react native (#364, @escwald)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#242-2016-12-14","title":"2.4.2 / 2016-12-14","text":"<ul> <li>Fix: browser colors (#367, @tootallnate)</li> <li>Misc: travis ci integration (@thebigredgeek)</li> <li>Misc: added linting and testing boilerplate with sanity check (@thebigredgeek)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#241-2016-12-13","title":"2.4.1 / 2016-12-13","text":"<ul> <li>Fix: typo that broke the package (#356)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#240-2016-12-13","title":"2.4.0 / 2016-12-13","text":"<ul> <li>Fix: bower.json references unbuilt src entry point (#342, @justmatt)</li> <li>Fix: revert \"handle regex special characters\" (@tootallnate)</li> <li>Feature: configurable util.inspect()`options for NodeJS (#327, @tootallnate)</li> <li>Feature: %O`(big O) pretty-prints objects (#322, @tootallnate)</li> <li>Improvement: allow colors in workers (#335, @botverse)</li> <li>Improvement: use same color for same namespace. (#338, @lchenay)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#233-2016-11-09","title":"2.3.3 / 2016-11-09","text":"<ul> <li>Fix: Catch <code>JSON.stringify()</code> errors (#195, Jovan Alleyne)</li> <li>Fix: Returning <code>localStorage</code> saved values (#331, Levi Thomason)</li> <li>Improvement: Don't create an empty object when no <code>process</code> (Nathan Rajlich)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#232-2016-11-09","title":"2.3.2 / 2016-11-09","text":"<ul> <li>Fix: be super-safe in index.js as well (@TooTallNate)</li> <li>Fix: should check whether process exists (Tom Newby)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#231-2016-11-09","title":"2.3.1 / 2016-11-09","text":"<ul> <li>Fix: Added electron compatibility (#324, @paulcbetts)</li> <li>Improvement: Added performance optimizations (@tootallnate)</li> <li>Readme: Corrected PowerShell environment variable example (#252, @gimre)</li> <li>Misc: Removed yarn lock file from source control (#321, @fengmk2)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#230-2016-11-07","title":"2.3.0 / 2016-11-07","text":"<ul> <li>Fix: Consistent placement of ms diff at end of output (#215, @gorangajic)</li> <li>Fix: Escaping of regex special characters in namespace strings (#250, @zacronos)</li> <li>Fix: Fixed bug causing crash on react-native (#282, @vkarpov15)</li> <li>Feature: Enabled ES6+ compatible import via default export (#212 @bucaran)</li> <li>Feature: Added %O formatter to reflect Chrome's console.log capability (#279, @oncletom)</li> <li>Package: Update \"ms\" to 0.7.2 (#315, @DevSide)</li> <li>Package: removed superfluous version property from bower.json (#207 @kkirsche)</li> <li>Readme: fix USE_COLORS to DEBUG_COLORS</li> <li>Readme: Doc fixes for format string sugar (#269, @mlucool)</li> <li>Readme: Updated docs for DEBUG_FD and DEBUG_COLORS environment variables (#232, @mattlyons0)</li> <li>Readme: doc fixes for PowerShell (#271 #243, @exoticknight @unreadable)</li> <li>Readme: better docs for browser support (#224, @matthewmueller)</li> <li>Tooling: Added yarn integration for development (#317, @thebigredgeek)</li> <li>Misc: Renamed History.md to CHANGELOG.md (@thebigredgeek)</li> <li>Misc: Added license file (#226 #274, @CantemoInternal @sdaitzman)</li> <li>Misc: Updated contributors (@thebigredgeek)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#220-2015-05-09","title":"2.2.0 / 2015-05-09","text":"<ul> <li>package: update \"ms\" to v0.7.1 (#202, @dougwilson)</li> <li>README: add logging to file example (#193, @DanielOchoa)</li> <li>README: fixed a typo (#191, @amir-s)</li> <li>browser: expose <code>storage</code> (#190, @stephenmathieson)</li> <li>Makefile: add a <code>distclean</code> target (#189, @stephenmathieson)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#213-2015-03-13","title":"2.1.3 / 2015-03-13","text":"<ul> <li>Updated stdout/stderr example (#186)</li> <li>Updated example/stdout.js to match debug current behaviour</li> <li>Renamed example/stderr.js to stdout.js</li> <li>Update Readme.md (#184)</li> <li>replace high intensity foreground color for bold (#182, #183)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#212-2015-03-01","title":"2.1.2 / 2015-03-01","text":"<ul> <li>dist: recompile</li> <li>update \"ms\" to v0.7.0</li> <li>package: update \"browserify\" to v9.0.3</li> <li>component: fix \"ms.js\" repo location</li> <li>changed bower package name</li> <li>updated documentation about using debug in a browser</li> <li>fix: security error on safari (#167, #168, @yields)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#211-2014-12-29","title":"2.1.1 / 2014-12-29","text":"<ul> <li>browser: use <code>typeof</code> to check for <code>console</code> existence</li> <li>browser: check for <code>console.log</code> truthiness (fix IE 8/9)</li> <li>browser: add support for Chrome apps</li> <li>Readme: added Windows usage remarks</li> <li>Add <code>bower.json</code> to properly support bower install</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#210-2014-10-15","title":"2.1.0 / 2014-10-15","text":"<ul> <li>node: implement <code>DEBUG_FD</code> env variable support</li> <li>package: update \"browserify\" to v6.1.0</li> <li>package: add \"license\" field to package.json (#135, @panuhorsmalahti)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#200-2014-09-01","title":"2.0.0 / 2014-09-01","text":"<ul> <li>package: update \"browserify\" to v5.11.0</li> <li>node: use stderr rather than stdout for logging (#29, @stephenmathieson)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#104-2014-07-15","title":"1.0.4 / 2014-07-15","text":"<ul> <li>dist: recompile</li> <li>example: remove <code>console.info()</code> log usage</li> <li>example: add \"Content-Type\" UTF-8 header to browser example</li> <li>browser: place %c marker after the space character</li> <li>browser: reset the \"content\" color via <code>color: inherit</code></li> <li>browser: add colors support for Firefox &gt;= v31</li> <li>debug: prefer an instance <code>log()</code> function over the global one (#119)</li> <li>Readme: update documentation about styled console logs for FF v31 (#116, @wryk)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#103-2014-07-09","title":"1.0.3 / 2014-07-09","text":"<ul> <li>Add support for multiple wildcards in namespaces (#122, @seegno)</li> <li>browser: fix lint</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#102-2014-06-10","title":"1.0.2 / 2014-06-10","text":"<ul> <li>browser: update color palette (#113, @gscottolson)</li> <li>common: make console logging function configurable (#108, @timoxley)</li> <li>node: fix %o colors on old node &lt;= 0.8.x</li> <li>Makefile: find node path using shell/which (#109, @timoxley)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#101-2014-06-06","title":"1.0.1 / 2014-06-06","text":"<ul> <li>browser: use <code>removeItem()</code> to clear localStorage</li> <li>browser, node: don't set DEBUG if namespaces is undefined (#107, @leedm777)</li> <li>package: add \"contributors\" section</li> <li>node: fix comment typo</li> <li>README: list authors</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#100-2014-06-04","title":"1.0.0 / 2014-06-04","text":"<ul> <li>make ms diff be global, not be scope</li> <li>debug: ignore empty strings in enable()</li> <li>node: make DEBUG_COLORS able to disable coloring</li> <li>*: export the <code>colors</code> array</li> <li>npmignore: don't publish the <code>dist</code> dir</li> <li>Makefile: refactor to use browserify</li> <li>package: add \"browserify\" as a dev dependency</li> <li>Readme: add Web Inspector Colors section</li> <li>node: reset terminal color for the debug content</li> <li>node: map \"%o\" to <code>util.inspect()</code></li> <li>browser: map \"%j\" to <code>JSON.stringify()</code></li> <li>debug: add custom \"formatters\"</li> <li>debug: use \"ms\" module for humanizing the diff</li> <li>Readme: add \"bash\" syntax highlighting</li> <li>browser: add Firebug color support</li> <li>browser: add colors for WebKit browsers</li> <li>node: apply log to <code>console</code></li> <li>rewrite: abstract common logic for Node &amp; browsers</li> <li>add .jshintrc file</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#081-2014-04-14","title":"0.8.1 / 2014-04-14","text":"<ul> <li>package: re-add the \"component\" section</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#080-2014-03-30","title":"0.8.0 / 2014-03-30","text":"<ul> <li>add <code>enable()</code> method for nodejs. Closes #27</li> <li>change from stderr to stdout</li> <li>remove unnecessary index.js file</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#074-2013-11-13","title":"0.7.4 / 2013-11-13","text":"<ul> <li>remove \"browserify\" key from package.json (fixes something in browserify)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#073-2013-10-30","title":"0.7.3 / 2013-10-30","text":"<ul> <li>fix: catch localStorage security error when cookies are blocked (Chrome)</li> <li>add debug(err) support. Closes #46</li> <li>add .browser prop to package.json. Closes #42</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#072-2013-02-06","title":"0.7.2 / 2013-02-06","text":"<ul> <li>fix package.json</li> <li>fix: Mobile Safari (private mode) is broken with debug</li> <li>fix: Use unicode to send escape character to shell instead of octal to work with strict mode javascript</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#071-2013-02-05","title":"0.7.1 / 2013-02-05","text":"<ul> <li>add repository URL to package.json</li> <li>add DEBUG_COLORED to force colored output</li> <li>add browserify support</li> <li>fix component. Closes #24</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#070-2012-05-04","title":"0.7.0 / 2012-05-04","text":"<ul> <li>Added .component to package.json</li> <li>Added debug.component.js build</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#060-2012-03-16","title":"0.6.0 / 2012-03-16","text":"<ul> <li>Added support for \"-\" prefix in DEBUG [Vinay Pulim]</li> <li>Added <code>.enabled</code> flag to the node version [TooTallNate]</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#050-2012-02-02","title":"0.5.0 / 2012-02-02","text":"<ul> <li>Added: humanize diffs. Closes #8</li> <li>Added <code>debug.disable()</code> to the CS variant</li> <li>Removed padding. Closes #10</li> <li>Fixed: persist client-side variant again. Closes #9</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#040-2012-02-01","title":"0.4.0 / 2012-02-01","text":"<ul> <li>Added browser variant support for older browsers [TooTallNate]</li> <li>Added <code>debug.enable('project:*')</code> to browser variant [TooTallNate]</li> <li>Added padding to diff (moved it to the right)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#030-2012-01-26","title":"0.3.0 / 2012-01-26","text":"<ul> <li>Added millisecond diff when isatty, otherwise UTC string</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#020-2012-01-22","title":"0.2.0 / 2012-01-22","text":"<ul> <li>Added wildcard support</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#010-2011-12-02","title":"0.1.0 / 2011-12-02","text":"<ul> <li>Added: remove colors unless stderr isatty [TooTallNate]</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/debug/CHANGELOG/#001-2010-01-03","title":"0.0.1 / 2010-01-03","text":"<ul> <li>Initial release</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/ms/license/","title":"License","text":"<p>The MIT License (MIT)</p> <p>Copyright (c) 2016 Zeit, Inc.</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/ms/readme/","title":"ms","text":"<p>Use this package to easily convert various time formats to milliseconds.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/ms/readme/#examples","title":"Examples","text":"<pre><code>ms('2 days')  // 172800000\nms('1d')      // 86400000\nms('10h')     // 36000000\nms('2.5 hrs') // 9000000\nms('2h')      // 7200000\nms('1m')      // 60000\nms('5s')      // 5000\nms('1y')      // 31557600000\nms('100')     // 100\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/ms/readme/#convert-from-milliseconds","title":"Convert from milliseconds","text":"<pre><code>ms(60000)             // \"1m\"\nms(2 * 60000)         // \"2m\"\nms(ms('10 hours'))    // \"10h\"\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/ms/readme/#time-format-written-out","title":"Time format written-out","text":"<pre><code>ms(60000, { long: true })             // \"1 minute\"\nms(2 * 60000, { long: true })         // \"2 minutes\"\nms(ms('10 hours'), { long: true })    // \"10 hours\"\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/ms/readme/#features","title":"Features","text":"<ul> <li>Works both in node and in the browser.</li> <li>If a number is supplied to <code>ms</code>, a string with a unit is returned.</li> <li>If a string that contains the number is supplied, it returns it as a number (e.g.: it returns <code>100</code> for <code>'100'</code>).</li> <li>If you pass a string with a number and a valid unit, the number of equivalent ms is returned.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/ms/readme/#caught-a-bug","title":"Caught a bug?","text":"<ol> <li>Fork this repository to your own GitHub account and then clone it to your local device</li> <li>Link the package to the global module directory: <code>npm link</code></li> <li>Within the module you want to test your local development instance of ms, just link it to the dependencies: <code>npm link ms</code>. Instead of the default one from npm, node will now use your clone of ms!</li> </ol> <p>As always, you can run the tests using: <code>npm test</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/","title":"on-finished","text":"<p>Execute a callback when a HTTP request closes, finishes, or errors.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/#install","title":"Install","text":"<pre><code>$ npm install on-finished\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/#api","title":"API","text":"<pre><code>var onFinished = require('on-finished')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/#onfinishedres-listener","title":"onFinished(res, listener)","text":"<p>Attach a listener to listen for the response to finish. The listener will be invoked only once when the response finished. If the response finished to an error, the first argument will contain the error. If the response has already finished, the listener will be invoked.</p> <p>Listening to the end of a response would be used to close things associated with the response, like open files.</p> <p>Listener is invoked as <code>listener(err, res)</code>.</p> <pre><code>onFinished(res, function (err, res) {\n  // clean up open fds, etc.\n  // err contains the error is request error'd\n})\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/#onfinishedreq-listener","title":"onFinished(req, listener)","text":"<p>Attach a listener to listen for the request to finish. The listener will be invoked only once when the request finished. If the request finished to an error, the first argument will contain the error. If the request has already finished, the listener will be invoked.</p> <p>Listening to the end of a request would be used to know when to continue after reading the data.</p> <p>Listener is invoked as <code>listener(err, req)</code>.</p> <pre><code>var data = ''\n\nreq.setEncoding('utf8')\nres.on('data', function (str) {\n  data += str\n})\n\nonFinished(req, function (err, req) {\n  // data is read unless there is err\n})\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/#onfinishedisfinishedres","title":"onFinished.isFinished(res)","text":"<p>Determine if <code>res</code> is already finished. This would be useful to check and not even start certain operations if the response has already finished.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/#onfinishedisfinishedreq","title":"onFinished.isFinished(req)","text":"<p>Determine if <code>req</code> is already finished. This would be useful to check and not even start certain operations if the request has already finished.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/#special-nodejs-requests","title":"Special Node.js requests","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/#http-connect-method","title":"HTTP CONNECT method","text":"<p>The meaning of the <code>CONNECT</code> method from RFC 7231, section 4.3.6:</p> <p>The CONNECT method requests that the recipient establish a tunnel to the destination origin server identified by the request-target and, if successful, thereafter restrict its behavior to blind forwarding of packets, in both directions, until the tunnel is closed.  Tunnels are commonly used to create an end-to-end virtual connection, through one or more proxies, which can then be secured using TLS (Transport Layer Security, [RFC5246]).</p> <p>In Node.js, these request objects come from the <code>'connect'</code> event on the HTTP server.</p> <p>When this module is used on a HTTP <code>CONNECT</code> request, the request is considered \"finished\" immediately, due to limitations in the Node.js interface. This means if the <code>CONNECT</code> request contains a request entity, the request will be considered \"finished\" even before it has been read.</p> <p>There is no such thing as a response object to a <code>CONNECT</code> request in Node.js, so there is no support for for one.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/#http-upgrade-request","title":"HTTP Upgrade request","text":"<p>The meaning of the <code>Upgrade</code> header from RFC 7230, section 6.1:</p> <p>The \"Upgrade\" header field is intended to provide a simple mechanism for transitioning from HTTP/1.1 to some other protocol on the same connection.</p> <p>In Node.js, these request objects come from the <code>'upgrade'</code> event on the HTTP server.</p> <p>When this module is used on a HTTP request with an <code>Upgrade</code> header, the request is considered \"finished\" immediately, due to limitations in the Node.js interface. This means if the <code>Upgrade</code> request contains a request entity, the request will be considered \"finished\" even before it has been read.</p> <p>There is no such thing as a response object to a <code>Upgrade</code> request in Node.js, so there is no support for for one.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/#example","title":"Example","text":"<p>The following code ensures that file descriptors are always closed once the response finishes.</p> <pre><code>var destroy = require('destroy')\nvar http = require('http')\nvar onFinished = require('on-finished')\n\nhttp.createServer(function onRequest(req, res) {\n  var stream = fs.createReadStream('package.json')\n  stream.pipe(res)\n  onFinished(res, function (err) {\n    destroy(stream)\n  })\n})\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/","title":"2.3.0 / 2015-05-26","text":"<ul> <li>Add defined behavior for HTTP <code>CONNECT</code> requests</li> <li>Add defined behavior for HTTP <code>Upgrade</code> requests</li> <li>deps: ee-first@1.1.1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#221-2015-04-22","title":"2.2.1 / 2015-04-22","text":"<ul> <li>Fix <code>isFinished(req)</code> when data buffered</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#220-2014-12-22","title":"2.2.0 / 2014-12-22","text":"<ul> <li>Add message object to callback arguments</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#211-2014-10-22","title":"2.1.1 / 2014-10-22","text":"<ul> <li>Fix handling of pipelined requests</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#210-2014-08-16","title":"2.1.0 / 2014-08-16","text":"<ul> <li>Check if <code>socket</code> is detached</li> <li>Return <code>undefined</code> for <code>isFinished</code> if state unknown</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#200-2014-08-16","title":"2.0.0 / 2014-08-16","text":"<ul> <li>Add <code>isFinished</code> function</li> <li>Move to <code>jshttp</code> organization</li> <li>Remove support for plain socket argument</li> <li>Rename to <code>on-finished</code></li> <li>Support both <code>req</code> and <code>res</code> as arguments</li> <li>deps: ee-first@1.0.5</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#122-2014-06-10","title":"1.2.2 / 2014-06-10","text":"<ul> <li>Reduce listeners added to emitters<ul> <li>avoids \"event emitter leak\" warnings when used multiple times on same request</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#121-2014-06-08","title":"1.2.1 / 2014-06-08","text":"<ul> <li>Fix returned value when already finished</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#120-2014-06-05","title":"1.2.0 / 2014-06-05","text":"<ul> <li>Call callback when called on already-finished socket</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#114-2014-05-27","title":"1.1.4 / 2014-05-27","text":"<ul> <li>Support node.js 0.8</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#113-2014-04-30","title":"1.1.3 / 2014-04-30","text":"<ul> <li>Make sure errors passed as instanceof <code>Error</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#112-2014-04-18","title":"1.1.2 / 2014-04-18","text":"<ul> <li>Default the <code>socket</code> to passed-in object</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#111-2014-01-16","title":"1.1.1 / 2014-01-16","text":"<ul> <li>Rename module to <code>finished</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#110-2013-12-25","title":"1.1.0 / 2013-12-25","text":"<ul> <li>Call callback when called on already-errored socket</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#101-2013-12-20","title":"1.0.1 / 2013-12-20","text":"<ul> <li>Actually pass the error to the callback</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/morgan/node_modules/on-finished/HISTORY/#100-2013-12-20","title":"1.0.0 / 2013-12-20","text":"<ul> <li>Initial release</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/","title":"mpath","text":"<p>{G,S}et javascript object values using MongoDB-like path notation.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/#getting","title":"Getting","text":"<pre><code>var mpath = require('mpath');\n\nvar obj = {\n    comments: [\n      { title: 'funny' },\n      { title: 'exciting!' }\n    ]\n}\n\nmpath.get('comments.1.title', obj) // 'exciting!'\n</code></pre> <p><code>mpath.get</code> supports array property notation as well.</p> <pre><code>var obj = {\n    comments: [\n      { title: 'funny' },\n      { title: 'exciting!' }\n    ]\n}\n\nmpath.get('comments.title', obj) // ['funny', 'exciting!']\n</code></pre> <p>Array property and indexing syntax, when used together, are very powerful.</p> <pre><code>var obj = {\n  array: [\n      { o: { array: [{x: {b: [4,6,8]}}, { y: 10} ] }}\n    , { o: { array: [{x: {b: [1,2,3]}}, { x: {z: 10 }}, { x: 'Turkey Day' }] }}\n    , { o: { array: [{x: {b: null }}, { x: { b: [null, 1]}}] }}\n    , { o: { array: [{x: null }] }}\n    , { o: { array: [{y: 3 }] }}\n    , { o: { array: [3, 0, null] }}\n    , { o: { name: 'ha' }}\n  ];\n}\n\nvar found = mpath.get('array.o.array.x.b.1', obj);\n\nconsole.log(found); // prints..\n\n    [ [6, undefined]\n    , [2, undefined, undefined]\n    , [null, 1]\n    , [null]\n    , [undefined]\n    , [undefined, undefined, undefined]\n    , undefined\n    ]\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/#field-selection-rules","title":"Field selection rules:","text":"<p>The following rules are iteratively applied to each <code>segment</code> in the passed <code>path</code>. For example:</p> <pre><code>var path = 'one.two.14'; // path\n'one' // segment 0\n'two' // segment 1\n14    // segment 2\n</code></pre> <ul> <li>1) when value of the segment parent is not an array, return the value of <code>parent.segment</code></li> <li>2) when value of the segment parent is an array</li> <li>a) if the segment is an integer, replace the parent array with the value at <code>parent[segment]</code></li> <li>b) if not an integer, keep the array but replace each array <code>item</code> with the value returned from calling <code>get(remainingSegments, item)</code> or undefined if falsey.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/#maps","title":"Maps","text":"<p><code>mpath.get</code> also accepts an optional <code>map</code> argument which receives each individual found value. The value returned from the <code>map</code> function will be used in the original found values place.</p> <pre><code>var obj = {\n    comments: [\n      { title: 'funny' },\n      { title: 'exciting!' }\n    ]\n}\n\nmpath.get('comments.title', obj, function (val) {\n  return 'funny' == val\n    ? 'amusing'\n    : val;\n});\n// ['amusing', 'exciting!']\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/#setting","title":"Setting","text":"<pre><code>var obj = {\n    comments: [\n      { title: 'funny' },\n      { title: 'exciting!' }\n    ]\n}\n\nmpath.set('comments.1.title', 'hilarious', obj)\nconsole.log(obj.comments[1].title) // 'hilarious'\n</code></pre> <p><code>mpath.set</code> supports the same array property notation as <code>mpath.get</code>.</p> <pre><code>var obj = {\n    comments: [\n      { title: 'funny' },\n      { title: 'exciting!' }\n    ]\n}\n\nmpath.set('comments.title', ['hilarious', 'fruity'], obj);\n\nconsole.log(obj); // prints..\n\n  { comments: [\n      { title: 'hilarious' },\n      { title: 'fruity' }\n  ]}\n</code></pre> <p>Array property and indexing syntax can be used together also when setting.</p> <pre><code>var obj = {\n  array: [\n      { o: { array: [{x: {b: [4,6,8]}}, { y: 10} ] }}\n    , { o: { array: [{x: {b: [1,2,3]}}, { x: {z: 10 }}, { x: 'Turkey Day' }] }}\n    , { o: { array: [{x: {b: null }}, { x: { b: [null, 1]}}] }}\n    , { o: { array: [{x: null }] }}\n    , { o: { array: [{y: 3 }] }}\n    , { o: { array: [3, 0, null] }}\n    , { o: { name: 'ha' }}\n  ]\n}\n\nmpath.set('array.1.o', 'this was changed', obj);\n\nconsole.log(require('util').inspect(obj, false, 1000)); // prints..\n\n{\n  array: [\n      { o: { array: [{x: {b: [4,6,8]}}, { y: 10} ] }}\n    , { o: 'this was changed' }\n    , { o: { array: [{x: {b: null }}, { x: { b: [null, 1]}}] }}\n    , { o: { array: [{x: null }] }}\n    , { o: { array: [{y: 3 }] }}\n    , { o: { array: [3, 0, null] }}\n    , { o: { name: 'ha' }}\n  ];\n}\n\nmpath.set('array.o.array.x', 'this was changed too', obj);\n\nconsole.log(require('util').inspect(obj, false, 1000)); // prints..\n\n{\n  array: [\n      { o: { array: [{x: 'this was changed too'}, { y: 10, x: 'this was changed too'} ] }}\n    , { o: 'this was changed' }\n    , { o: { array: [{x: 'this was changed too'}, { x: 'this was changed too'}] }}\n    , { o: { array: [{x: 'this was changed too'}] }}\n    , { o: { array: [{x: 'this was changed too', y: 3 }] }}\n    , { o: { array: [3, 0, null] }}\n    , { o: { name: 'ha' }}\n  ];\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/#setting-arrays","title":"Setting arrays","text":"<p>By default, setting a property within an array to another array results in each element of the new array being set to the item in the destination array at the matching index. An example is helpful.</p> <pre><code>var obj = {\n    comments: [\n      { title: 'funny' },\n      { title: 'exciting!' }\n    ]\n}\n\nmpath.set('comments.title', ['hilarious', 'fruity'], obj);\n\nconsole.log(obj); // prints..\n\n  { comments: [\n      { title: 'hilarious' },\n      { title: 'fruity' }\n  ]}\n</code></pre> <p>If we do not desire this destructuring-like assignment behavior we may instead specify the <code>$</code> operator in the path being set to force the array to be copied directly.</p> <pre><code>var obj = {\n    comments: [\n      { title: 'funny' },\n      { title: 'exciting!' }\n    ]\n}\n\nmpath.set('comments.$.title', ['hilarious', 'fruity'], obj);\n\nconsole.log(obj); // prints..\n\n  { comments: [\n      { title: ['hilarious', 'fruity'] },\n      { title: ['hilarious', 'fruity'] }\n  ]}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/#field-assignment-rules","title":"Field assignment rules","text":"<p>The rules utilized mirror those used on <code>mpath.get</code>, meaning we can take values returned from <code>mpath.get</code>, update them, and reassign them using <code>mpath.set</code>. Note that setting nested arrays of arrays can get unweildy quickly. Check out the tests for more extreme examples.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/#maps_1","title":"Maps","text":"<p><code>mpath.set</code> also accepts an optional <code>map</code> argument which receives each individual value being set. The value returned from the <code>map</code> function will be used in the original values place.</p> <pre><code>var obj = {\n    comments: [\n      { title: 'funny' },\n      { title: 'exciting!' }\n    ]\n}\n\nmpath.set('comments.title', ['hilarious', 'fruity'], obj, function (val) {\n  return val.length;\n});\n\nconsole.log(obj); // prints..\n\n  { comments: [\n      { title: 9 },\n      { title: 6 }\n  ]}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/#custom-object-types","title":"Custom object types","text":"<p>Sometimes you may want to enact the same functionality on custom object types that store all their real data internally, say for an ODM type object. No fear, <code>mpath</code> has you covered. Simply pass the name of the property being used to store the internal data and it will be traversed instead:</p> <pre><code>var mpath = require('mpath');\n\nvar obj = {\n    comments: [\n      { title: 'exciting!', _doc: { title: 'great!' }}\n    ]\n}\n\nmpath.get('comments.0.title', obj, '_doc')            // 'great!'\nmpath.set('comments.0.title', 'nov 3rd', obj, '_doc')\nmpath.get('comments.0.title', obj, '_doc')            // 'nov 3rd'\nmpath.get('comments.0.title', obj)                    // 'exciting'\n</code></pre> <p>When used with a <code>map</code>, the <code>map</code> argument comes last.</p> <pre><code>mpath.get(path, obj, '_doc', map);\nmpath.set(path, val, obj, '_doc', map);\n</code></pre> <p>LICENSE</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/","title":"0.9.0 / 2022-04-17","text":"<ul> <li>feat: export <code>stringToParts()</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#084-2021-09-01","title":"0.8.4 / 2021-09-01","text":"<ul> <li>fix: throw error if <code>parts</code> contains an element that isn't a string or number #13</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#083-2020-12-30","title":"0.8.3 / 2020-12-30","text":"<ul> <li>fix: use var instead of let/const for Node.js 4.x support</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#082-2020-12-30","title":"0.8.2 / 2020-12-30","text":"<ul> <li>fix(stringToParts): fall back to legacy treatment for square brackets if square brackets contents aren't a number Automattic/mongoose#9640</li> <li>chore: add eslint</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#081-2020-12-10","title":"0.8.1 / 2020-12-10","text":"<ul> <li>fix(stringToParts): handle empty string and trailing dot the same way that <code>split()</code> does for backwards compat</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#080-2020-11-14","title":"0.8.0 / 2020-11-14","text":"<ul> <li>feat: support square bracket indexing for <code>get()</code>, <code>set()</code>, <code>has()</code>, and <code>unset()</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#070-2020-03-24","title":"0.7.0 / 2020-03-24","text":"<ul> <li>BREAKING CHANGE: remove <code>component.json</code> #9 AlexeyGrigorievBoost</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#060-2019-05-01","title":"0.6.0 / 2019-05-01","text":"<ul> <li>feat: support setting dotted paths within nested arrays</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#052-2019-04-25","title":"0.5.2 / 2019-04-25","text":"<ul> <li>fix: avoid using subclassed array constructor when doing <code>map()</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#051-2018-08-30","title":"0.5.1 / 2018-08-30","text":"<ul> <li>fix: prevent writing to constructor and prototype as well as proto</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#050-2018-08-30","title":"0.5.0 / 2018-08-30","text":"<ul> <li>BREAKING CHANGE: disallow setting/unsetting proto properties</li> <li>feat: re-add support for Node &lt; 4 for this release</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#041-2018-04-08","title":"0.4.1 / 2018-04-08","text":"<ul> <li>fix: allow opting out of weird <code>$</code> set behavior re: Automattic/mongoose#6273</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#040-2018-03-27","title":"0.4.0 / 2018-03-27","text":"<ul> <li>feat: add support for ES6 maps</li> <li>BREAKING CHANGE: drop support for Node &lt; 4</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#030-2017-06-05","title":"0.3.0 / 2017-06-05","text":"<ul> <li>feat: add has() and unset() functions</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#021-2013-03-22","title":"0.2.1 / 2013-03-22","text":"<ul> <li>test; added for #5</li> <li>fix typo that breaks set #5 Contra</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#020-2013-03-15","title":"0.2.0 / 2013-03-15","text":"<ul> <li>added; adapter support for set</li> <li>added; adapter support for get</li> <li>add basic benchmarks</li> <li>add support for using module as a component #2 Contra</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#011-2012-12-21","title":"0.1.1 / 2012-12-21","text":"<ul> <li>added; map support</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#010-2012-12-13","title":"0.1.0 / 2012-12-13","text":"<ul> <li>added; set('array.property', val, object) support</li> <li>added; get('array.property', object) support</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/History/#001-2012-11-03","title":"0.0.1 / 2012-11-03","text":"<ul> <li>initial release</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mpath/SECURITY/","title":"Reporting a Vulnerability","text":"<p>Please report suspected security vulnerabilities to val [at] karpov [dot] io. You will receive a response from us within 72 hours. If the issue is confirmed, we will release a patch as soon as possible depending on complexity.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/","title":"mquery","text":"<p><code>mquery</code> is a fluent mongodb query builder designed to run in multiple environments.</p> <p> </p> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#features","title":"Features","text":"<ul> <li>fluent query builder api</li> <li>custom base query support</li> <li>MongoDB 2.4 geoJSON support</li> <li>method + option combinations validation</li> <li>node.js driver compatibility</li> <li>environment detection</li> <li>debug support</li> <li>separated collection implementations for maximum flexibility</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#use","title":"Use","text":"<pre><code>const mongo = require('mongodb');\n\nconst client = new mongo.MongoClient(uri);\nawait client.connect();\n// get a collection\nconst collection = client.collection('artists');\n\n// pass it to the constructor\nawait mquery(collection).find({...});\n\n// or pass it to the collection method\nconst docs = await mquery().find({...}).collection(collection);\n\n// or better yet, create a custom query constructor that has it always set\nconst Artist = mquery(collection).toConstructor();\nconst docs = await Artist().find(...).where(...);\n</code></pre> <p><code>mquery</code> requires a collection object to work with. In the example above we just pass the collection object created using the official MongoDB driver.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#fluent-api","title":"Fluent API","text":"<ul> <li>mquery</li> <li>Features</li> <li>Use</li> <li>Fluent API</li> <li>Helpers<ul> <li>find()</li> <li>findOne()</li> <li>count()</li> <li>findOneAndUpdate()<ul> <li>findOneAndUpdate() options</li> </ul> </li> <li>findOneAndRemove()<ul> <li>findOneAndRemove() options</li> </ul> </li> <li>distinct()</li> <li>exec()</li> <li>stream()</li> <li>all()</li> <li>and()</li> <li>box()</li> <li>circle()</li> <li>elemMatch()</li> <li>equals()</li> <li>exists()</li> <li>geometry()</li> <li>gt()</li> <li>gte()</li> <li>in()</li> <li>intersects()</li> <li>lt()</li> <li>lte()</li> <li>maxDistance()</li> <li>mod()</li> <li>ne()</li> <li>nin()</li> <li>nor()</li> <li>near()</li> <li>Example</li> <li>or()</li> <li>polygon()</li> <li>regex()</li> <li>select()<ul> <li>String syntax</li> </ul> </li> <li>selected()</li> <li>selectedInclusively()</li> <li>selectedExclusively()</li> <li>size()</li> <li>slice()</li> <li>within()</li> <li>where()</li> <li>$where()</li> <li>batchSize()</li> <li>collation()</li> <li>comment()</li> <li>hint()</li> <li>j()</li> <li>limit()</li> <li>maxTime()</li> <li>skip()</li> <li>sort()</li> <li>read()<ul> <li>Preferences:</li> <li>Preference Tags:</li> </ul> </li> <li>readConcern()<ul> <li>Read Concern Level:</li> </ul> </li> <li>writeConcern()<ul> <li>Write Concern:</li> </ul> </li> <li>slaveOk()</li> <li>tailable()</li> <li>wtimeout()</li> </ul> </li> <li>Helpers<ul> <li>collection()</li> <li>then()</li> <li>merge(object)</li> <li>setOptions(options)<ul> <li>setOptions() options</li> </ul> </li> <li>setTraceFunction(func)</li> <li>mquery.setGlobalTraceFunction(func)</li> <li>mquery.canMerge(conditions)</li> </ul> </li> <li>mquery.use$geoWithin</li> <li>Custom Base Queries</li> <li>Validation</li> <li>Debug support</li> <li>General compatibility<ul> <li>ObjectIds</li> <li>Read Preferences</li> </ul> </li> <li>Future goals</li> <li>Installation</li> <li>License</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#helpers","title":"Helpers","text":"<ul> <li>collection</li> <li>then</li> <li>merge</li> <li>setOptions</li> <li>setTraceFunction</li> <li>mquery.setGlobalTraceFunction</li> <li>mquery.canMerge</li> <li>mquery.use$geoWithin</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#find","title":"find()","text":"<p>Declares this query a find query. Optionally pass a match clause.</p> <pre><code>mquery().find()\nmquery().find(match)\nawait mquery().find()\nconst docs = await mquery().find(match);\nassert(Array.isArray(docs));\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#findone","title":"findOne()","text":"<p>Declares this query a findOne query. Optionally pass a match clause.</p> <pre><code>mquery().findOne()\nmquery().findOne(match)\nawait mquery().findOne()\nconst doc = await mquery().findOne(match);\nif (doc) {\n  // the document may not be found\n  console.log(doc);\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#count","title":"count()","text":"<p>Declares this query a count query. Optionally pass a match clause.</p> <pre><code>mquery().count()\nmquery().count(match)\nawait mquery().count()\nconst number = await mquery().count(match);\nconsole.log('we found %d matching documents', number);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#findoneandupdate","title":"findOneAndUpdate()","text":"<p>Declares this query a findAndModify with update query. Optionally pass a match clause, update document, options.</p> <p>When executed, the first matching document (if found) is modified according to the update document and passed back.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#findoneandupdate-options","title":"findOneAndUpdate() options","text":"<p>Options are passed to the <code>setOptions()</code> method.</p> <ul> <li><code>returnDocument</code>: string - <code>'after'</code> to return the modified document rather than the original. defaults to <code>'before'</code></li> <li><code>upsert</code>: boolean - creates the object if it doesn't exist. defaults to false</li> <li><code>sort</code>: if multiple docs are found by the match condition, sets the sort order to choose which doc to update</li> </ul> <pre><code>query.findOneAndUpdate()\nquery.findOneAndUpdate(updateDocument)\nquery.findOneAndUpdate(match, updateDocument)\nquery.findOneAndUpdate(match, updateDocument, options)\n\n// the following all execute the command\nawait query.findOneAndUpdate()\nawait query.findOneAndUpdate(updateDocument)\nawait query.findOneAndUpdate(match, updateDocument)\nconst doc = await await query.findOneAndUpdate(match, updateDocument, options);\nif (doc) {\n  // the document may not be found\n  console.log(doc);\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#findoneandremove","title":"findOneAndRemove()","text":"<p>Declares this query a findAndModify with remove query. Alias of findOneAndDelete. Optionally pass a match clause, options.</p> <p>When executed, the first matching document (if found) is modified according to the update document, removed from the collection and passed as a result.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#findoneandremove-options","title":"findOneAndRemove() options","text":"<p>Options are passed to the <code>setOptions()</code> method.</p> <ul> <li><code>sort</code>: if multiple docs are found by the condition, sets the sort order to choose which doc to modify and remove</li> </ul> <pre><code>A.where().findOneAndDelete()\nA.where().findOneAndRemove()\nA.where().findOneAndRemove(match)\nA.where().findOneAndRemove(match, options)\n\n// the following all execute the command\nawait A.where().findOneAndRemove()\nawait A.where().findOneAndRemove(match)\nconst doc = await A.where().findOneAndRemove(match, options);\nif (doc) {\n  // the document may not be found\n  console.log(doc);\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#distinct","title":"distinct()","text":"<p>Declares this query a distinct query. Optionally pass the distinct field, a match clause.</p> <pre><code>mquery().distinct()\nmquery().distinct(match)\nmquery().distinct(match, field)\nmquery().distinct(field)\n\n// the following all execute the command\nawait mquery().distinct()\nawait mquery().distinct(field)\nawait mquery().distinct(match)\nconst result = await mquery().distinct(match, field);\nconsole.log(result);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#exec","title":"exec()","text":"<p>Executes the query.</p> <pre><code>const docs = await mquery().findOne().where('route').intersects(polygon).exec()\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#stream","title":"stream()","text":"<p>Executes the query and returns a stream.</p> <pre><code>var stream = mquery().find().stream(options);\nstream.on('data', cb);\nstream.on('close', fn);\n</code></pre> <p>Note: this only works with <code>find()</code> operations.</p> <p>Note: returns the stream object directly from the node-mongodb-native driver. (currently streams1 type stream). Any options will be passed along to the driver method.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#all","title":"all()","text":"<p>Specifies an <code>$all</code> query condition</p> <pre><code>mquery().where('permission').all(['read', 'write'])\n</code></pre> <p>MongoDB documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#and","title":"and()","text":"<p>Specifies arguments for an <code>$and</code> condition</p> <pre><code>mquery().and([{ color: 'green' }, { status: 'ok' }])\n</code></pre> <p>MongoDB documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#box","title":"box()","text":"<p>Specifies a <code>$box</code> condition</p> <pre><code>var lowerLeft = [40.73083, -73.99756]\nvar upperRight= [40.741404,  -73.988135]\n\nmquery().where('location').within().box(lowerLeft, upperRight)\n</code></pre> <p>MongoDB Documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#circle","title":"circle()","text":"<p>Specifies a <code>$center</code> or <code>$centerSphere</code> condition.</p> <pre><code>var area = { center: [50, 50], radius: 10, unique: true }\nquery.where('loc').within().circle(area)\nquery.circle('loc', area);\n\n// for spherical calculations\nvar area = { center: [50, 50], radius: 10, unique: true, spherical: true }\nquery.where('loc').within().circle(area)\nquery.circle('loc', area);\n</code></pre> <ul> <li>MongoDB Documentation - center</li> <li>MongoDB Documentation - centerSphere</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#elemmatch","title":"elemMatch()","text":"<p>Specifies an <code>$elemMatch</code> condition</p> <pre><code>query.where('comment').elemMatch({ author: 'autobot', votes: {$gte: 5}})\n\nquery.elemMatch('comment', function (elem) {\n  elem.where('author').equals('autobot');\n  elem.where('votes').gte(5);\n})\n</code></pre> <p>MongoDB Documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#equals","title":"equals()","text":"<p>Specifies the complementary comparison value for the path specified with <code>where()</code>.</p> <pre><code>mquery().where('age').equals(49);\n\n// is the same as\n\nmquery().where({ 'age': 49 });\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#exists","title":"exists()","text":"<p>Specifies an <code>$exists</code> condition</p> <pre><code>// { name: { $exists: true }}\nmquery().where('name').exists()\nmquery().where('name').exists(true)\nmquery().exists('name')\n\n// { name: { $exists: false }}\nmquery().where('name').exists(false);\nmquery().exists('name', false);\n</code></pre> <p>MongoDB Documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#geometry","title":"geometry()","text":"<p>Specifies a <code>$geometry</code> condition</p> <pre><code>var polyA = [[[ 10, 20 ], [ 10, 40 ], [ 30, 40 ], [ 30, 20 ]]]\nquery.where('loc').within().geometry({ type: 'Polygon', coordinates: polyA })\n\n// or\nvar polyB = [[ 0, 0 ], [ 1, 1 ]]\nquery.where('loc').within().geometry({ type: 'LineString', coordinates: polyB })\n\n// or\nvar polyC = [ 0, 0 ]\nquery.where('loc').within().geometry({ type: 'Point', coordinates: polyC })\n\n// or\nquery.where('loc').intersects().geometry({ type: 'Point', coordinates: polyC })\n\n// or\nquery.where('loc').near().geometry({ type: 'Point', coordinates: [3,5] })\n</code></pre> <p><code>geometry()</code> must come after <code>intersects()</code>, <code>within()</code>, or <code>near()</code>.</p> <p>The <code>object</code> argument must contain <code>type</code> and <code>coordinates</code> properties.</p> <ul> <li>type <code>String</code></li> <li>coordinates <code>Array</code></li> </ul> <p>MongoDB Documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#gt","title":"gt()","text":"<p>Specifies a <code>$gt</code> query condition.</p> <pre><code>mquery().where('clicks').gt(999)\n</code></pre> <p>MongoDB Documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#gte","title":"gte()","text":"<p>Specifies a <code>$gte</code> query condition.</p> <p>MongoDB Documentation</p> <pre><code>mquery().where('clicks').gte(1000)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#in","title":"in()","text":"<p>Specifies an <code>$in</code> query condition.</p> <pre><code>mquery().where('author_id').in([3, 48901, 761])\n</code></pre> <p>MongoDB Documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#intersects","title":"intersects()","text":"<p>Declares an <code>$geoIntersects</code> query for <code>geometry()</code>.</p> <pre><code>query.where('path').intersects().geometry({\n    type: 'LineString'\n  , coordinates: [[180.0, 11.0], [180, 9.0]]\n})\n\n// geometry arguments are supported\nquery.where('path').intersects({\n    type: 'LineString'\n  , coordinates: [[180.0, 11.0], [180, 9.0]]\n})\n</code></pre> <p>Must be used after <code>where()</code>.</p> <p>MongoDB Documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#lt","title":"lt()","text":"<p>Specifies a <code>$lt</code> query condition.</p> <pre><code>mquery().where('clicks').lt(50)\n</code></pre> <p>MongoDB Documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#lte","title":"lte()","text":"<p>Specifies a <code>$lte</code> query condition.</p> <pre><code>mquery().where('clicks').lte(49)\n</code></pre> <p>MongoDB Documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#maxdistance","title":"maxDistance()","text":"<p>Specifies a <code>$maxDistance</code> query condition.</p> <pre><code>mquery().where('location').near({ center: [139, 74.3] }).maxDistance(5)\n</code></pre> <p>MongoDB Documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#mod","title":"mod()","text":"<p>Specifies a <code>$mod</code> condition</p> <pre><code>mquery().where('count').mod(2, 0)\n</code></pre> <p>MongoDB Documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#ne","title":"ne()","text":"<p>Specifies a <code>$ne</code> query condition.</p> <pre><code>mquery().where('status').ne('ok')\n</code></pre> <p>MongoDB Documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#nin","title":"nin()","text":"<p>Specifies an <code>$nin</code> query condition.</p> <pre><code>mquery().where('author_id').nin([3, 48901, 761])\n</code></pre> <p>MongoDB Documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#nor","title":"nor()","text":"<p>Specifies arguments for an <code>$nor</code> condition.</p> <pre><code>mquery().nor([{ color: 'green' }, { status: 'ok' }])\n</code></pre> <p>MongoDB Documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#near","title":"near()","text":"<p>Specifies arguments for a <code>$near</code> or <code>$nearSphere</code> condition.</p> <p>These operators return documents sorted by distance.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#example","title":"Example","text":"<pre><code>query.where('loc').near({ center: [10, 10] });\nquery.where('loc').near({ center: [10, 10], maxDistance: 5 });\nquery.near('loc', { center: [10, 10], maxDistance: 5 });\n\n// GeoJSON\nquery.where('loc').near({ center: { type: 'Point', coordinates: [10, 10] }});\nquery.where('loc').near({ center: { type: 'Point', coordinates: [10, 10] }, maxDistance: 5, spherical: true });\nquery.where('loc').near().geometry({ type: 'Point', coordinates: [10, 10] });\n\n// For a $nearSphere condition, pass the `spherical` option.\nquery.near({ center: [10, 10], maxDistance: 5, spherical: true });\n</code></pre> <p>MongoDB Documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#or","title":"or()","text":"<p>Specifies arguments for an <code>$or</code> condition.</p> <pre><code>mquery().or([{ color: 'red' }, { status: 'emergency' }])\n</code></pre> <p>MongoDB Documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#polygon","title":"polygon()","text":"<p>Specifies a <code>$polygon</code> condition</p> <pre><code>mquery().where('loc').within().polygon([10,20], [13, 25], [7,15])\nmquery().polygon('loc', [10,20], [13, 25], [7,15])\n</code></pre> <p>MongoDB Documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#regex","title":"regex()","text":"<p>Specifies a <code>$regex</code> query condition.</p> <pre><code>mquery().where('name').regex(/^sixstepsrecords/)\n</code></pre> <p>MongoDB Documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#select","title":"select()","text":"<p>Specifies which document fields to include or exclude</p> <pre><code>// 1 means include, 0 means exclude\nmquery().select({ name: 1, address: 1, _id: 0 })\n\n// or\n\nmquery().select('name address -_id')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#string-syntax","title":"String syntax","text":"<p>When passing a string, prefixing a path with <code>-</code> will flag that path as excluded. When a path does not have the <code>-</code> prefix, it is included.</p> <pre><code>// include a and b, exclude c\nquery.select('a b -c');\n\n// or you may use object notation, useful when\n// you have keys already prefixed with a \"-\"\nquery.select({a: 1, b: 1, c: 0});\n</code></pre> <p>Cannot be used with <code>distinct()</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#selected","title":"selected()","text":"<p>Determines if the query has selected any fields.</p> <pre><code>var query = mquery();\nquery.selected() // false\nquery.select('-name');\nquery.selected() // true\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#selectedinclusively","title":"selectedInclusively()","text":"<p>Determines if the query has selected any fields inclusively.</p> <pre><code>var query = mquery().select('name');\nquery.selectedInclusively() // true\n\nvar query = mquery();\nquery.selected() // false\nquery.select('-name');\nquery.selectedInclusively() // false\nquery.selectedExclusively() // true\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#selectedexclusively","title":"selectedExclusively()","text":"<p>Determines if the query has selected any fields exclusively.</p> <pre><code>var query = mquery().select('-name');\nquery.selectedExclusively() // true\n\nvar query = mquery();\nquery.selected() // false\nquery.select('name');\nquery.selectedExclusively() // false\nquery.selectedInclusively() // true\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#size","title":"size()","text":"<p>Specifies a <code>$size</code> query condition.</p> <pre><code>mquery().where('someArray').size(6)\n</code></pre> <p>MongoDB Documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#slice","title":"slice()","text":"<p>Specifies a <code>$slice</code> projection for a <code>path</code></p> <pre><code>mquery().where('comments').slice(5)\nmquery().where('comments').slice(-5)\nmquery().where('comments').slice([-10, 5])\n</code></pre> <p>MongoDB Documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#within","title":"within()","text":"<p>Sets a <code>$geoWithin</code> or <code>$within</code> argument for geo-spatial queries.</p> <pre><code>mquery().within().box()\nmquery().within().circle()\nmquery().within().geometry()\n\nmquery().where('loc').within({ center: [50,50], radius: 10, unique: true, spherical: true });\nmquery().where('loc').within({ box: [[40.73, -73.9], [40.7, -73.988]] });\nmquery().where('loc').within({ polygon: [[],[],[],[]] });\n\nmquery().where('loc').within([], [], []) // polygon\nmquery().where('loc').within([], []) // box\nmquery().where('loc').within({ type: 'LineString', coordinates: [...] }); // geometry\n</code></pre> <p>As of mquery 2.0, <code>$geoWithin</code> is used by default. This impacts you if running MongoDB &lt; 2.4. To alter this behavior, see mquery.use$geoWithin.</p> <p>Must be used after <code>where()</code>.</p> <p>MongoDB Documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#where","title":"where()","text":"<p>Specifies a <code>path</code> for use with chaining</p> <pre><code>// instead of writing:\nmquery().find({age: {$gte: 21, $lte: 65}});\n\n// we can instead write:\nmquery().where('age').gte(21).lte(65);\n\n// passing query conditions is permitted too\nmquery().find().where({ name: 'vonderful' })\n\n// chaining\nawait mquery()\n  .where('age').gte(21).lte(65)\n  .where({ 'name': /^vonderful/i })\n  .where('friends').slice(10)\n  .exec()\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#where_1","title":"$where()","text":"<p>Specifies a <code>$where</code> condition.</p> <p>Use <code>$where</code> when you need to select documents using a JavaScript expression.</p> <pre><code>await query.$where('this.comments.length &gt; 10 || this.name.length &gt; 5').exec()\n\nquery.$where(function () {\n  return this.comments.length &gt; 10 || this.name.length &gt; 5;\n})\n</code></pre> <p>Only use <code>$where</code> when you have a condition that cannot be met using other MongoDB operators like <code>$lt</code>. Be sure to read about all of its caveats before using.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#batchsize","title":"batchSize()","text":"<p>Specifies the batchSize option.</p> <pre><code>query.batchSize(100)\n</code></pre> <p>Cannot be used with <code>distinct()</code>.</p> <p>MongoDB documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#collation","title":"collation()","text":"<p>Specifies the collation option.</p> <pre><code>query.collation({ locale: \"en_US\", strength: 1 })\n</code></pre> <p>MongoDB documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#comment","title":"comment()","text":"<p>Specifies the comment option.</p> <pre><code>query.comment('login query');\n</code></pre> <p>Cannot be used with <code>distinct()</code>.</p> <p>MongoDB documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#hint","title":"hint()","text":"<p>Sets query hints.</p> <pre><code>mquery().hint({ indexA: 1, indexB: -1 })\n</code></pre> <p>Cannot be used with <code>distinct()</code>.</p> <p>MongoDB documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#j","title":"j()","text":"<p>Requests acknowledgement that this operation has been persisted to MongoDB's on-disk journal.</p> <p>This option is only valid for operations that write to the database:</p> <ul> <li><code>deleteOne()</code></li> <li><code>deleteMany()</code></li> <li><code>findOneAndDelete()</code></li> <li><code>findOneAndUpdate()</code></li> <li><code>updateOne()</code></li> <li><code>updateMany()</code></li> </ul> <p>Defaults to the <code>j</code> value if it is specified in writeConcern</p> <pre><code>mquery().j(true);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#limit","title":"limit()","text":"<p>Specifies the limit option.</p> <pre><code>query.limit(20)\n</code></pre> <p>Cannot be used with <code>distinct()</code>.</p> <p>MongoDB documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#maxtime","title":"maxTime()","text":"<p>Specifies the maxTimeMS option.</p> <pre><code>query.maxTime(100)\nquery.maxTimeMS(100)\n</code></pre> <p>MongoDB documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#skip","title":"skip()","text":"<p>Specifies the skip option.</p> <pre><code>query.skip(100).limit(20)\n</code></pre> <p>Cannot be used with <code>distinct()</code>.</p> <p>MongoDB documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#sort","title":"sort()","text":"<p>Sets the query sort order.</p> <p>If an object is passed, key values allowed are <code>asc</code>, <code>desc</code>, <code>ascending</code>, <code>descending</code>, <code>1</code>, and <code>-1</code>.</p> <p>If a string is passed, it must be a space delimited list of path names. The sort order of each path is ascending unless the path name is prefixed with <code>-</code> which will be treated as descending.</p> <pre><code>// these are equivalent\nquery.sort({ field: 'asc', test: -1 });\nquery.sort('field -test');\n</code></pre> <p>Cannot be used with <code>distinct()</code>.</p> <p>MongoDB documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#read","title":"read()","text":"<p>Sets the readPreference option for the query.</p> <pre><code>mquery().read('primary')\nmquery().read('p')  // same as primary\n\nmquery().read('primaryPreferred')\nmquery().read('pp') // same as primaryPreferred\n\nmquery().read('secondary')\nmquery().read('s')  // same as secondary\n\nmquery().read('secondaryPreferred')\nmquery().read('sp') // same as secondaryPreferred\n\nmquery().read('nearest')\nmquery().read('n')  // same as nearest\n\nmquery().setReadPreference('primary') // alias of .read()\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#preferences","title":"Preferences:","text":"<ul> <li><code>primary</code> - (default) Read from primary only. Operations will produce an error if primary is unavailable. Cannot be combined with tags.</li> <li><code>secondary</code> - Read from secondary if available, otherwise error.</li> <li><code>primaryPreferred</code> - Read from primary if available, otherwise a secondary.</li> <li><code>secondaryPreferred</code> - Read from a secondary if available, otherwise read from the primary.</li> <li><code>nearest</code> - All operations read from among the nearest candidates, but unlike other modes, this option will include both the primary and all secondaries in the random selection.</li> </ul> <p>Aliases</p> <ul> <li><code>p</code>   primary</li> <li><code>pp</code>  primaryPreferred</li> <li><code>s</code>   secondary</li> <li><code>sp</code>  secondaryPreferred</li> <li><code>n</code>   nearest</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#preference-tags","title":"Preference Tags:","text":"<p>To keep the separation of concerns between <code>mquery</code> and your driver clean, <code>mquery#read()</code> no longer handles specifying a second <code>tags</code> argument as of version 0.5. If you need to specify tags, pass any non-string argument as the first argument. <code>mquery</code> will pass this argument untouched to your collections methods later. For example:</p> <pre><code>// example of specifying tags using the Node.js driver\nvar ReadPref = require('mongodb').ReadPreference;\nvar preference = new ReadPref('secondary', [{ dc:'sf', s: 1 },{ dc:'ma', s: 2 }]);\nmquery(...).read(preference).exec();\n</code></pre> <p>Read more about how to use read preferences here and here.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#readconcern","title":"readConcern()","text":"<p>Sets the readConcern option for the query.</p> <pre><code>// local\nmquery().readConcern('local')\nmquery().readConcern('l')\nmquery().r('l')\n\n// available\nmquery().readConcern('available')\nmquery().readConcern('a')\nmquery().r('a')\n\n// majority\nmquery().readConcern('majority')\nmquery().readConcern('m')\nmquery().r('m')\n\n// linearizable\nmquery().readConcern('linearizable')\nmquery().readConcern('lz')\nmquery().r('lz')\n\n// snapshot\nmquery().readConcern('snapshot')\nmquery().readConcern('s')\nmquery().r('s')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#read-concern-level","title":"Read Concern Level:","text":"<ul> <li><code>local</code> - The query returns from the instance with no guarantee guarantee that the data has been written to a majority of the replica set members (i.e. may be rolled back). (MongoDB 3.2+)</li> <li><code>available</code> - The query returns from the instance with no guarantee guarantee that the data has been written to a majority of the replica set members (i.e. may be rolled back). (MongoDB 3.6+)</li> <li><code>majority</code> - The query returns the data that has been acknowledged by a majority of the replica set members. The documents returned by the read operation are durable, even in the event of failure. (MongoDB 3.2+)</li> <li><code>linearizable</code> - The query returns data that reflects all successful majority-acknowledged writes that completed prior to the start of the read operation. The query may wait for concurrently executing writes to propagate to a majority of replica set members before returning results. (MongoDB 3.4+)</li> <li><code>snapshot</code> - Only available for operations within multi-document transactions. Upon transaction commit with write concern \"majority\", the transaction operations are guaranteed to have read from a snapshot of majority-committed data. (MongoDB 4.0+)</li> </ul> <p>Aliases</p> <ul> <li><code>l</code>   local</li> <li><code>a</code>   available</li> <li><code>m</code>   majority</li> <li><code>lz</code>  linearizable</li> <li><code>s</code>   snapshot</li> </ul> <p>Read more about how to use read concern here.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#writeconcern","title":"writeConcern()","text":"<p>Sets the writeConcern option for the query.</p> <p>This option is only valid for operations that write to the database:</p> <ul> <li><code>deleteOne()</code></li> <li><code>deleteMany()</code></li> <li><code>findOneAndDelete()</code></li> <li><code>findOneAndUpdate()</code></li> <li><code>updateOne()</code></li> <li><code>updateMany()</code></li> </ul> <pre><code>mquery().writeConcern(0)\nmquery().writeConcern(1)\nmquery().writeConcern({ w: 1, j: true, wtimeout: 2000 })\nmquery().writeConcern('majority')\nmquery().writeConcern('m') // same as majority\nmquery().writeConcern('tagSetName') // if the tag set is 'm', use .writeConcern({ w: 'm' }) instead\nmquery().w(1) // w is alias of writeConcern\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#write-concern","title":"Write Concern:","text":"<p>writeConcern({ w: <code>&lt;value&gt;</code>, j: <code>&lt;boolean&gt;</code>, wtimeout: <code>&lt;number&gt;</code> }`)</p> <ul> <li>the w option to request acknowledgement that the write operation has propagated to a specified number of mongod instances or to mongod instances with specified tags</li> <li>the j option to request acknowledgement that the write operation has been written to the journal</li> <li>the wtimeout option to specify a time limit to prevent write operations from blocking indefinitely</li> </ul> <p>Can be break down to use the following syntax:</p> <p>mquery().w(<code>&lt;value&gt;</code>).j(<code>&lt;boolean&gt;</code>).wtimeout(<code>&lt;number&gt;</code>)</p> <p>Read more about how to use write concern here</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#slaveok","title":"slaveOk()","text":"<p>Sets the slaveOk option. <code>true</code> allows reading from secondaries.</p> <p>deprecated use read() preferences instead if on mongodb &gt;= 2.2</p> <pre><code>query.slaveOk() // true\nquery.slaveOk(true)\nquery.slaveOk(false)\n</code></pre> <p>MongoDB documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#tailable","title":"tailable()","text":"<p>Sets tailable option.</p> <pre><code>mquery().tailable() &lt;== true\nmquery().tailable(true)\nmquery().tailable(false)\n</code></pre> <p>Cannot be used with <code>distinct()</code>.</p> <p>MongoDB Documentation</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#wtimeout","title":"wtimeout()","text":"<p>Specifies a time limit, in milliseconds, for the write concern. If <code>w &gt; 1</code>, it is maximum amount of time to wait for this write to propagate through the replica set before this operation fails. The default is <code>0</code>, which means no timeout.</p> <p>This option is only valid for operations that write to the database:</p> <ul> <li><code>deleteOne()</code></li> <li><code>deleteMany()</code></li> <li><code>findOneAndDelete()</code></li> <li><code>findOneAndUpdate()</code></li> <li><code>updateOne()</code></li> <li><code>updateMany()</code></li> </ul> <p>Defaults to <code>wtimeout</code> value if it is specified in writeConcern</p> <pre><code>mquery().wtimeout(2000)\nmquery().wTimeout(2000)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#helpers_1","title":"Helpers","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#collection","title":"collection()","text":"<p>Sets the querys collection.</p> <pre><code>mquery().collection(aCollection)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#then","title":"then()","text":"<p>Executes the query and returns a promise which will be resolved with the query results or rejected if the query responds with an error.</p> <pre><code>mquery().find(..).then(success, error);\n</code></pre> <p>This is very useful when combined with co or koa, which automatically resolve promise-like objects for you.</p> <pre><code>co(function*(){\n  var doc = yield mquery().findOne({ _id: 499 });\n  console.log(doc); // { _id: 499, name: 'amazing', .. }\n})();\n</code></pre> <p>NOTE: The returned promise is a bluebird promise but this is customizable. If you want to use your favorite promise library, simply set <code>mquery.Promise = YourPromiseConstructor</code>. Your <code>Promise</code> must be promises A+ compliant.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#mergeobject","title":"merge(object)","text":"<p>Merges other mquery or match condition objects into this one. When an mquery instance is passed, its match conditions, field selection and options are merged.</p> <pre><code>const drum = mquery({ type: 'drum' }).collection(instruments);\nconst redDrum = mquery({ color: 'red' }).merge(drum);\nconst n = await redDrum.count();\nconsole.log('there are %d red drums', n);\n</code></pre> <p>Internally uses <code>mquery.canMerge</code> to determine validity.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#setoptionsoptions","title":"setOptions(options)","text":"<p>Sets query options.</p> <pre><code>mquery().setOptions({ collection: coll, limit: 20 })\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#setoptions-options","title":"setOptions() options","text":"<ul> <li>tailable *</li> <li>sort *</li> <li>limit *</li> <li>skip *</li> <li>maxTime *</li> <li>batchSize *</li> <li>comment *</li> <li>hint *</li> <li>collection: the collection to query against</li> </ul> <p>* denotes a query helper method is also available</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#settracefunctionfunc","title":"setTraceFunction(func)","text":"<p>Set a function to trace this query. Useful for profiling or logging.</p> <pre><code>function traceFunction (method, queryInfo, query) {\n  console.log('starting ' + method + ' query');\n\n  return function (err, result, millis) {\n    console.log('finished ' + method + ' query in ' + millis + 'ms');\n  };\n}\n\nmquery().setTraceFunction(traceFunction).findOne({name: 'Joe'}, cb);\n</code></pre> <p>The trace function is passed (method, queryInfo, query)</p> <ul> <li>method is the name of the method being called (e.g. findOne)</li> <li>queryInfo contains information about the query:</li> <li>conditions: query conditions/criteria</li> <li>options: options such as sort, fields, etc</li> <li>doc: document being updated</li> <li>query is the query object</li> </ul> <p>The trace function should return a callback function which accepts: - err: error, if any - result: result, if any - millis: time spent waiting for query result</p> <p>NOTE: stream requests are not traced.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#mquerysetglobaltracefunctionfunc","title":"mquery.setGlobalTraceFunction(func)","text":"<p>Similar to <code>setTraceFunction()</code> but automatically applied to all queries.</p> <pre><code>mquery.setTraceFunction(traceFunction);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#mquerycanmergeconditions","title":"mquery.canMerge(conditions)","text":"<p>Determines if <code>conditions</code> can be merged using <code>mquery().merge()</code>.</p> <pre><code>var query = mquery({ type: 'drum' });\nvar okToMerge = mquery.canMerge(anObject)\nif (okToMerge) {\n  query.merge(anObject);\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#mqueryusegeowithin","title":"mquery.use$geoWithin","text":"<p>MongoDB 2.4 introduced the <code>$geoWithin</code> operator which replaces and is 100% backward compatible with <code>$within</code>. As of mquery 0.2, we default to using <code>$geoWithin</code> for all <code>within()</code> calls.</p> <p>If you are running MongoDB &lt; 2.4 this will be problematic. To force <code>mquery</code> to be backward compatible and always use <code>$within</code>, set the <code>mquery.use$geoWithin</code> flag to <code>false</code>.</p> <pre><code>mquery.use$geoWithin = false;\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#custom-base-queries","title":"Custom Base Queries","text":"<p>Often times we want custom base queries that encapsulate predefined criteria. With <code>mquery</code> this is easy. First create the query you want to reuse and call its <code>toConstructor()</code> method which returns a new subclass of <code>mquery</code> that retains all options and criteria of the original.</p> <pre><code>var greatMovies = mquery(movieCollection).where('rating').gte(4.5).toConstructor();\n\n// use it!\nconst n = await greatMovies().count();\nconsole.log('There are %d great movies', n);\n\nconst docs = await greatMovies().where({ name: /^Life/ }).select('name').find();\nconsole.log(docs);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#validation","title":"Validation","text":"<p>Method and options combinations are checked for validity at runtime to prevent creation of invalid query constructs. For example, a <code>distinct</code> query does not support specifying options like <code>hint</code> or field selection. In this case an error will be thrown so you can catch these mistakes in development.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#debug-support","title":"Debug support","text":"<p>Debug mode is provided through the use of the debug module. To enable:</p> <pre><code>DEBUG=mquery node yourprogram.js\n</code></pre> <p>Read the debug module documentation for more details.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#general-compatibility","title":"General compatibility","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#objectids","title":"ObjectIds","text":"<p><code>mquery</code> clones query arguments before passing them to a <code>collection</code> method for execution. This prevents accidental side-affects to the objects you pass. To clone <code>ObjectIds</code> we need to make some assumptions.</p> <p>First, to check if an object is an <code>ObjectId</code>, we check its constructors name. If it matches either <code>ObjectId</code> or <code>ObjectID</code> we clone it.</p> <p>To clone <code>ObjectIds</code>, we call its optional <code>clone</code> method. If a <code>clone</code> method does not exist, we fall back to calling <code>new obj.constructor(obj.id)</code>. We assume, for compatibility with the Node.js driver, that the <code>ObjectId</code> instance has a public <code>id</code> property and that when creating an <code>ObjectId</code> instance we can pass that <code>id</code> as an argument.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#read-preferences","title":"Read Preferences","text":"<p><code>mquery</code> supports specifying Read Preferences to control from which MongoDB node your query will read. The Read Preferences spec also support specifying tags. To pass tags, some drivers (Node.js driver) require passing a special constructor that handles both the read preference and its tags. If you need to specify tags, pass an instance of your drivers ReadPreference constructor or roll your own. <code>mquery</code> will store whatever you provide and pass later to your collection during execution.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#future-goals","title":"Future goals","text":"<ul> <li>mongo shell compatibility</li> <li>browser compatibility</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#installation","title":"Installation","text":"<pre><code>npm install mquery\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/","title":"5.0.0 / 2023-02-23","text":"<ul> <li>BREAKING CHANGE: drop callback support #137 hasezoey</li> <li>BREAKING CHANGE: remove custom promise library support #137 hasezoey</li> <li>BREAKING CHANGE: remove long deprecated <code>update</code>, <code>remove</code> functions #136 hasezoey</li> <li>BREAKING CHANGE: remove collection ducktyping: first param to <code>mquery()</code> is now always the query filter #138</li> <li>feat: support MongoDB Node driver 5 #137 hasezoey</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#403-2022-05-17","title":"4.0.3 / 2022-05-17","text":"<ul> <li>fix: allow using <code>comment</code> with <code>findOneAndUpdate()</code>, <code>count()</code>, <code>distinct()</code> and <code>hint</code> with <code>findOneAndUpdate()</code> Automattic/mongoose#11793</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#402-2022-01-23","title":"4.0.2 / 2022-01-23","text":"<ul> <li>perf: replace regexp-clone with native functionality #131 Uzlopak</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#401-2022-01-20","title":"4.0.1 / 2022-01-20","text":"<ul> <li>perf: remove sliced, add various microoptimizations #130 Uzlopak</li> <li>refactor: convert NodeCollection to a class #128 jimmywarting</li> </ul> <p>4.0.0 / 2021-08-24</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#400-rc0-2021-08-19","title":"4.0.0-rc0 / 2021-08-19","text":"<ul> <li>BREAKING CHANGE: drop support for Node &lt; 12 #123</li> <li>BREAKING CHANGE: upgrade to mongodb driver 4.x: drop support for <code>findAndModify()</code>, use native <code>findOneAndUpdate/Delete</code> #124</li> <li>BREAKING CHANGE: rename findStream -&gt; findCursor #124</li> <li>BREAKING CHANGE: use native ES6 promises by default, remove bluebird dependency #123</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#325-2021-03-29","title":"3.2.5 / 2021-03-29","text":"<ul> <li>fix(utils): make <code>mergeClone()</code> skip special properties like <code>__proto__</code> #121 zpbrent</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#324-2021-02-12","title":"3.2.4 / 2021-02-12","text":"<ul> <li>fix(utils): make clone() only copy own properties Automattic/mongoose#9876</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#323-2020-12-10","title":"3.2.3 / 2020-12-10","text":"<ul> <li>fix(utils): avoid copying special properties like <code>__proto__</code> when merging and cloning. Fix CVE-2020-35149</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#322-2019-09-22","title":"3.2.2 / 2019-09-22","text":"<ul> <li>fix: dont re-call setOptions() when pulling base class options Automattic/mongoose#8159</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#321-2018-08-24","title":"3.2.1 / 2018-08-24","text":"<ul> <li>chore: upgrade deps</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#320-2018-08-24","title":"3.2.0 / 2018-08-24","text":"<ul> <li>feat: add $useProjection to opt in to using <code>projection</code> instead of <code>fields</code> re: MongoDB deprecation warnings Automattic/mongoose#6880</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#312-2018-08-01","title":"3.1.2 / 2018-08-01","text":"<ul> <li>chore: move eslint to devDependencies #110 jakesjews</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#311-2018-07-30","title":"3.1.1 / 2018-07-30","text":"<ul> <li>chore: add eslint #107 Fonger</li> <li>docs: clean up readConcern docs #106 Fonger</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#310-2018-07-29","title":"3.1.0 / 2018-07-29","text":"<ul> <li>feat: add <code>readConcern()</code> helper #105 Fonger</li> <li>feat: add <code>maxTimeMS()</code> as alias of <code>maxTime()</code> #105 Fonger</li> <li>feat: add <code>collation()</code> helper #105 Fonger</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#301-2018-07-02","title":"3.0.1 / 2018-07-02","text":"<ul> <li>fix: parse sort array options correctly #103 #102 Fonger</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#300-2018-01-20","title":"3.0.0 / 2018-01-20","text":"<ul> <li>chore: upgrade deps and add nsp</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#300-rc0-2017-12-06","title":"3.0.0-rc0 / 2017-12-06","text":"<ul> <li>BREAKING CHANGE: remove support for node &lt; 4</li> <li>BREAKING CHANGE: remove support for retainKeyOrder, will always be true by default re: Automattic/mongoose#2749</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#233-2017-11-19","title":"2.3.3 / 2017-11-19","text":"<ul> <li>fixed; catch sync errors in cursor.toArray() re: Automattic/mongoose#5812</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#232-2017-09-27","title":"2.3.2 / 2017-09-27","text":"<ul> <li>fixed; bumped debug -&gt; 2.6.9 re: #89</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#231-2017-05-22","title":"2.3.1 / 2017-05-22","text":"<ul> <li>fixed; bumped debug -&gt; 2.6.7 re: #86</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#230-2017-03-05","title":"2.3.0 / 2017-03-05","text":"<ul> <li>added; replaceOne function</li> <li>added; deleteOne and deleteMany functions</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#223-2017-01-31","title":"2.2.3 / 2017-01-31","text":"<ul> <li>fixed; throw correct error when passing incorrectly formatted array to sort()</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#222-2017-01-31","title":"2.2.2 / 2017-01-31","text":"<ul> <li>fixed; allow passing maps to sort()</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#221-2017-01-29","title":"2.2.1 / 2017-01-29","text":"<ul> <li>fixed; allow passing string to hint()</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#220-2017-01-08","title":"2.2.0 / 2017-01-08","text":"<ul> <li>added; updateOne and updateMany functions</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#210-2016-12-22","title":"2.1.0 / 2016-12-22","text":"<ul> <li>added; ability to pass an array to select() #81 dciccale</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#200-2016-09-25","title":"2.0.0 / 2016-09-25","text":"<ul> <li>added; support for mongodb driver 2.0 streams</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#1120-2016-09-25","title":"1.12.0 / 2016-09-25","text":"<ul> <li>added; <code>retainKeyOrder</code> option re: Automattic/mongoose#4542</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#1110-2016-06-04","title":"1.11.0 / 2016-06-04","text":"<ul> <li>added; <code>.minDistance()</code> helper and minDistance for <code>.near()</code> Automattic/mongoose#4179</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#1101-2016-04-26","title":"1.10.1 / 2016-04-26","text":"<ul> <li>fixed; ensure conditions is an object before assigning #75</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#1100-2016-03-16","title":"1.10.0 / 2016-03-16","text":"<ul> <li>updated; bluebird to latest 2.10.2 version #74 matskiv</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#190-2016-03-15","title":"1.9.0 / 2016-03-15","text":"<ul> <li>added; <code>.eq</code> as a shortcut for <code>.equals</code> #72 Fonger</li> <li>added; ability to use array syntax for sort re: https://jira.mongodb.org/browse/NODE-578 #67</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#180-2016-03-01","title":"1.8.0 / 2016-03-01","text":"<ul> <li>fixed; dont throw an error if count used with sort or select Automattic/mongoose#3914</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#170-2016-02-23","title":"1.7.0 / 2016-02-23","text":"<ul> <li>fixed; don't treat objects with a length property as argument objects #70</li> <li>added; <code>.findCursor()</code> method #69 nswbmw</li> <li>added; <code>_compiledUpdate</code> property #68 nswbmw</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#162-2015-07-12","title":"1.6.2 / 2015-07-12","text":"<ul> <li>fixed; support exec cb being called synchronously #66</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#161-2015-06-16","title":"1.6.1 / 2015-06-16","text":"<ul> <li>fixed; do not treat $meta projection as inclusive vkarpov15</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#160-2015-05-27","title":"1.6.0 / 2015-05-27","text":"<ul> <li>update dependencies #65 bachp</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#150-2015-03-31","title":"1.5.0 / 2015-03-31","text":"<ul> <li>fixed; debug output</li> <li>fixed; allow hint usage with count #61 trueinsider</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#140-2015-03-29","title":"1.4.0 / 2015-03-29","text":"<ul> <li>added; object support to slice() #60 vkarpov15</li> <li>debug; improved output #57 flyvictor</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#130-2014-11-06","title":"1.3.0 / 2014-11-06","text":"<ul> <li>added; setTraceFunction() #53 from jlai</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#121-2014-09-26","title":"1.2.1 / 2014-09-26","text":"<ul> <li>fixed; distinct assignment in toConstructor() #51 from esco</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#120-2014-09-18","title":"1.2.0 / 2014-09-18","text":"<ul> <li>added; stream() support for find()</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#110-2014-09-15","title":"1.1.0 / 2014-09-15","text":"<ul> <li>add #then for co / koa support</li> <li>start checking code coverage</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#100-2014-07-07","title":"1.0.0 / 2014-07-07","text":"<ul> <li>Remove broken require() calls until they're actually implemented #48 vkarpov15</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#090-2014-05-22","title":"0.9.0 / 2014-05-22","text":"<ul> <li>added; thunk() support</li> <li>release 0.8.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#080-2014-05-15","title":"0.8.0 / 2014-05-15","text":"<ul> <li>added; support for maxTimeMS #44 yoitsro</li> <li>updated; devDependency (driver to 1.4.4)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#070-2014-05-02","title":"0.7.0 / 2014-05-02","text":"<ul> <li>fixed; pass $maxDistance in $near object as described in docs #43 vkarpov15</li> <li>fixed; cloning buffers #42 gjohnson</li> <li>tests; a little bit more <code>mongodb</code> agnostic #34 refack</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#060-2014-04-01","title":"0.6.0 / 2014-04-01","text":"<ul> <li>fixed; Allow $meta args in sort() so text search sorting works #37 vkarpov15</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#053-2014-02-22","title":"0.5.3 / 2014-02-22","text":"<ul> <li>fixed; cloning mongodb.Binary</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#052-2014-01-30","title":"0.5.2 / 2014-01-30","text":"<ul> <li>fixed; cloning ObjectId constructors</li> <li>fixed; cloning of ReadPreferences #30 ashtuchkin</li> <li>tests; use specific mongodb version #29 AvianFlu</li> <li>tests; remove dependency on ObjectId #28 refack</li> <li>tests; add failing ReadPref test</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#051-2014-01-17","title":"0.5.1 / 2014-01-17","text":"<ul> <li>added; deprecation notice to tags parameter #27 ashtuchkin</li> <li>readme; add links</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#050-2014-01-16","title":"0.5.0 / 2014-01-16","text":"<ul> <li>removed; mongodb driver dependency #26 ashtuchkin</li> <li>removed; first class support of read preference tags #26 (still supported though) ashtuchkin</li> <li>added; better ObjectId clone support</li> <li>fixed; cloning objects that have no constructor #21</li> <li>docs; cleaned up ashtuchkin</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#042-2014-01-08","title":"0.4.2 / 2014-01-08","text":"<ul> <li>updated; debug module 0.7.4 refack</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#041-2014-01-07","title":"0.4.1 / 2014-01-07","text":"<ul> <li>fixed; inclusive/exclusive logic</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#040-2014-01-06","title":"0.4.0 / 2014-01-06","text":"<ul> <li>added; selected()</li> <li>added; selectedInclusively()</li> <li>added; selectedExclusively()</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#033-2013-11-14","title":"0.3.3 / 2013-11-14","text":"<ul> <li>Fix Mongo DB Dependency #20 rschmukler</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#032-2013-09-06","title":"0.3.2 / 2013-09-06","text":"<ul> <li>added; geometry support for near()</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#031-2013-08-22","title":"0.3.1 / 2013-08-22","text":"<ul> <li>fixed; update retains key order #19</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#030-2013-08-22","title":"0.3.0 / 2013-08-22","text":"<ul> <li>less hardcoded isNode env detection #18 vshulyak</li> <li>added; validation of findAndModify varients</li> <li>clone update doc before execution</li> <li>stricter env checks</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#027-2013-08-2","title":"0.2.7 / 2013-08-2","text":"<ul> <li>Now support GeoJSON point values for Query#near</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#026-2013-07-30","title":"0.2.6 / 2013-07-30","text":"<ul> <li>internally, 'asc' and 'desc' for sorts are now converted into 1 and -1, respectively</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#025-2013-07-30","title":"0.2.5 / 2013-07-30","text":"<ul> <li>updated docs</li> <li>changed internal representation of <code>sort</code> to use objects instead of arrays</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#024-2013-07-25","title":"0.2.4 / 2013-07-25","text":"<ul> <li>updated; sliced to 0.0.5</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#023-2013-07-09","title":"0.2.3 / 2013-07-09","text":"<ul> <li>now using a callback in collection.find instead of directly calling toArray() on the cursor ebensing</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#022-2013-07-09","title":"0.2.2 / 2013-07-09","text":"<ul> <li>now exposing mongodb export to allow for better testing ebensing</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#021-2013-07-08","title":"0.2.1 / 2013-07-08","text":"<ul> <li>select no longer accepts arrays as parameters ebensing</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#020-2013-07-05","title":"0.2.0 / 2013-07-05","text":"<ul> <li>use $geoWithin by default</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#012-2013-07-02","title":"0.1.2 / 2013-07-02","text":"<ul> <li>added use$geoWithin flag ebensing</li> <li>fix read preferences typo ebensing</li> <li>fix reference to old param name in exists() ebensing</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#011-2013-06-24","title":"0.1.1 / 2013-06-24","text":"<ul> <li>fixed; $intersects -&gt; $geoIntersects #14 ebensing</li> <li>fixed; Retain key order when copying objects #15 ebensing</li> <li>bump mongodb dev dep</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#010-2013-05-06","title":"0.1.0 / 2013-05-06","text":"<ul> <li>findAndModify; return the query</li> <li>move mquery.proto.canMerge to mquery.canMerge</li> <li>overwrite option now works with non-empty objects</li> <li>use strict mode</li> <li>validate count options</li> <li>validate distinct options</li> <li>add aggregate to base collection methods</li> <li>clone merge arguments</li> <li>clone merged update arguments</li> <li>move subclass to mquery.prototype.toConstructor</li> <li>fixed; maxScan casing</li> <li>use regexp-clone</li> <li>added; geometry/intersects support</li> <li>support $and</li> <li>near: do not use \"radius\"</li> <li>callbacks always fire on next turn of loop</li> <li>defined collection interface</li> <li>remove time from tests</li> <li>clarify goals</li> <li>updated docs;</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/History/#001-2012-12-15","title":"0.0.1 / 2012-12-15","text":"<ul> <li>initial release</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/mquery/SECURITY/","title":"SECURITY","text":"<p>Please follow the instructions on Tidelift's security page to report a security issue.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/ms/license/","title":"License","text":"<p>The MIT License (MIT)</p> <p>Copyright (c) 2020 Vercel, Inc.</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/ms/readme/","title":"ms","text":"<p>Use this package to easily convert various time formats to milliseconds.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/ms/readme/#examples","title":"Examples","text":"<pre><code>ms('2 days')  // 172800000\nms('1d')      // 86400000\nms('10h')     // 36000000\nms('2.5 hrs') // 9000000\nms('2h')      // 7200000\nms('1m')      // 60000\nms('5s')      // 5000\nms('1y')      // 31557600000\nms('100')     // 100\nms('-3 days') // -259200000\nms('-1h')     // -3600000\nms('-200')    // -200\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/ms/readme/#convert-from-milliseconds","title":"Convert from Milliseconds","text":"<pre><code>ms(60000)             // \"1m\"\nms(2 * 60000)         // \"2m\"\nms(-3 * 60000)        // \"-3m\"\nms(ms('10 hours'))    // \"10h\"\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/ms/readme/#time-format-written-out","title":"Time Format Written-Out","text":"<pre><code>ms(60000, { long: true })             // \"1 minute\"\nms(2 * 60000, { long: true })         // \"2 minutes\"\nms(-3 * 60000, { long: true })        // \"-3 minutes\"\nms(ms('10 hours'), { long: true })    // \"10 hours\"\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/ms/readme/#features","title":"Features","text":"<ul> <li>Works both in Node.js and in the browser</li> <li>If a number is supplied to <code>ms</code>, a string with a unit is returned</li> <li>If a string that contains the number is supplied, it returns it as a number (e.g.: it returns <code>100</code> for <code>'100'</code>)</li> <li>If you pass a string with a number and a valid unit, the number of equivalent milliseconds is returned</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/ms/readme/#related-packages","title":"Related Packages","text":"<ul> <li>ms.macro - Run <code>ms</code> as a macro at build-time.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/ms/readme/#caught-a-bug","title":"Caught a Bug?","text":"<ol> <li>Fork this repository to your own GitHub account and then clone it to your local device</li> <li>Link the package to the global module directory: <code>npm link</code></li> <li>Within the module you want to test your local development instance of ms, just link it to the dependencies: <code>npm link ms</code>. Instead of the default one from npm, Node.js will now use your clone of ms!</li> </ol> <p>As always, you can run the tests using: <code>npm test</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/","title":"negotiator","text":"<p>An HTTP content negotiator for Node.js</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#installation","title":"Installation","text":"<pre><code>$ npm install negotiator\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#api","title":"API","text":"<pre><code>var Negotiator = require('negotiator')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#accept-negotiation","title":"Accept Negotiation","text":"<pre><code>availableMediaTypes = ['text/html', 'text/plain', 'application/json']\n\n// The negotiator constructor receives a request object\nnegotiator = new Negotiator(request)\n\n// Let's say Accept header is 'text/html, application/*;q=0.2, image/jpeg;q=0.8'\n\nnegotiator.mediaTypes()\n// -&gt; ['text/html', 'image/jpeg', 'application/*']\n\nnegotiator.mediaTypes(availableMediaTypes)\n// -&gt; ['text/html', 'application/json']\n\nnegotiator.mediaType(availableMediaTypes)\n// -&gt; 'text/html'\n</code></pre> <p>You can check a working example at <code>examples/accept.js</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#methods","title":"Methods","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#mediatype","title":"mediaType()","text":"<p>Returns the most preferred media type from the client.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#mediatypeavailablemediatype","title":"mediaType(availableMediaType)","text":"<p>Returns the most preferred media type from a list of available media types.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#mediatypes","title":"mediaTypes()","text":"<p>Returns an array of preferred media types ordered by the client preference.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#mediatypesavailablemediatypes","title":"mediaTypes(availableMediaTypes)","text":"<p>Returns an array of preferred media types ordered by priority from a list of available media types.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#accept-language-negotiation","title":"Accept-Language Negotiation","text":"<pre><code>negotiator = new Negotiator(request)\n\navailableLanguages = ['en', 'es', 'fr']\n\n// Let's say Accept-Language header is 'en;q=0.8, es, pt'\n\nnegotiator.languages()\n// -&gt; ['es', 'pt', 'en']\n\nnegotiator.languages(availableLanguages)\n// -&gt; ['es', 'en']\n\nlanguage = negotiator.language(availableLanguages)\n// -&gt; 'es'\n</code></pre> <p>You can check a working example at <code>examples/language.js</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#methods_1","title":"Methods","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#language","title":"language()","text":"<p>Returns the most preferred language from the client.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#languageavailablelanguages","title":"language(availableLanguages)","text":"<p>Returns the most preferred language from a list of available languages.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#languages","title":"languages()","text":"<p>Returns an array of preferred languages ordered by the client preference.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#languagesavailablelanguages","title":"languages(availableLanguages)","text":"<p>Returns an array of preferred languages ordered by priority from a list of available languages.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#accept-charset-negotiation","title":"Accept-Charset Negotiation","text":"<pre><code>availableCharsets = ['utf-8', 'iso-8859-1', 'iso-8859-5']\n\nnegotiator = new Negotiator(request)\n\n// Let's say Accept-Charset header is 'utf-8, iso-8859-1;q=0.8, utf-7;q=0.2'\n\nnegotiator.charsets()\n// -&gt; ['utf-8', 'iso-8859-1', 'utf-7']\n\nnegotiator.charsets(availableCharsets)\n// -&gt; ['utf-8', 'iso-8859-1']\n\nnegotiator.charset(availableCharsets)\n// -&gt; 'utf-8'\n</code></pre> <p>You can check a working example at <code>examples/charset.js</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#methods_2","title":"Methods","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#charset","title":"charset()","text":"<p>Returns the most preferred charset from the client.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#charsetavailablecharsets","title":"charset(availableCharsets)","text":"<p>Returns the most preferred charset from a list of available charsets.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#charsets","title":"charsets()","text":"<p>Returns an array of preferred charsets ordered by the client preference.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#charsetsavailablecharsets","title":"charsets(availableCharsets)","text":"<p>Returns an array of preferred charsets ordered by priority from a list of available charsets.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#accept-encoding-negotiation","title":"Accept-Encoding Negotiation","text":"<pre><code>availableEncodings = ['identity', 'gzip']\n\nnegotiator = new Negotiator(request)\n\n// Let's say Accept-Encoding header is 'gzip, compress;q=0.2, identity;q=0.5'\n\nnegotiator.encodings()\n// -&gt; ['gzip', 'identity', 'compress']\n\nnegotiator.encodings(availableEncodings)\n// -&gt; ['gzip', 'identity']\n\nnegotiator.encoding(availableEncodings)\n// -&gt; 'gzip'\n</code></pre> <p>You can check a working example at <code>examples/encoding.js</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#methods_3","title":"Methods","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#encoding","title":"encoding()","text":"<p>Returns the most preferred encoding from the client.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#encodingavailableencodings","title":"encoding(availableEncodings)","text":"<p>Returns the most preferred encoding from a list of available encodings.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#encodingavailableencodings-preferred","title":"encoding(availableEncodings, { preferred })","text":"<p>Returns the most preferred encoding from a list of available encodings, while prioritizing based on <code>preferred</code> array between same-quality encodings.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#encodings","title":"encodings()","text":"<p>Returns an array of preferred encodings ordered by the client preference.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#encodingsavailableencodings","title":"encodings(availableEncodings)","text":"<p>Returns an array of preferred encodings ordered by priority from a list of available encodings.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#encodingsavailableencodings-preferred","title":"encodings(availableEncodings, { preferred })","text":"<p>Returns an array of preferred encodings ordered by priority from a list of available encodings, while prioritizing based on <code>preferred</code> array between same-quality encodings.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#see-also","title":"See Also","text":"<p>The accepts module builds on this module and provides an alternative interface, mime type validation, and more.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/","title":"1.0.0 / 2024-08-31","text":"<ul> <li>Drop support for node &lt;18</li> <li>Added an option preferred encodings array #59</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#063-2022-01-22","title":"0.6.3 / 2022-01-22","text":"<ul> <li>Revert \"Lazy-load modules from main entry point\"</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#062-2019-04-29","title":"0.6.2 / 2019-04-29","text":"<ul> <li>Fix sorting charset, encoding, and language with extra parameters</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#061-2016-05-02","title":"0.6.1 / 2016-05-02","text":"<ul> <li>perf: improve <code>Accept</code> parsing speed</li> <li>perf: improve <code>Accept-Charset</code> parsing speed</li> <li>perf: improve <code>Accept-Encoding</code> parsing speed</li> <li>perf: improve <code>Accept-Language</code> parsing speed</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#060-2015-09-29","title":"0.6.0 / 2015-09-29","text":"<ul> <li>Fix including type extensions in parameters in <code>Accept</code> parsing</li> <li>Fix parsing <code>Accept</code> parameters with quoted equals</li> <li>Fix parsing <code>Accept</code> parameters with quoted semicolons</li> <li>Lazy-load modules from main entry point</li> <li>perf: delay type concatenation until needed</li> <li>perf: enable strict mode</li> <li>perf: hoist regular expressions</li> <li>perf: remove closures getting spec properties</li> <li>perf: remove a closure from media type parsing</li> <li>perf: remove property delete from media type parsing</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#053-2015-05-10","title":"0.5.3 / 2015-05-10","text":"<ul> <li>Fix media type parameter matching to be case-insensitive</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#052-2015-05-06","title":"0.5.2 / 2015-05-06","text":"<ul> <li>Fix comparing media types with quoted values</li> <li>Fix splitting media types with quoted commas</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#051-2015-02-14","title":"0.5.1 / 2015-02-14","text":"<ul> <li>Fix preference sorting to be stable for long acceptable lists</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#050-2014-12-18","title":"0.5.0 / 2014-12-18","text":"<ul> <li>Fix list return order when large accepted list</li> <li>Fix missing identity encoding when q=0 exists</li> <li>Remove dynamic building of Negotiator class</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#049-2014-10-14","title":"0.4.9 / 2014-10-14","text":"<ul> <li>Fix error when media type has invalid parameter</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#048-2014-09-28","title":"0.4.8 / 2014-09-28","text":"<ul> <li>Fix all negotiations to be case-insensitive</li> <li>Stable sort preferences of same quality according to client order</li> <li>Support Node.js 0.6</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#047-2014-06-24","title":"0.4.7 / 2014-06-24","text":"<ul> <li>Handle invalid provided languages</li> <li>Handle invalid provided media types</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#046-2014-06-11","title":"0.4.6 / 2014-06-11","text":"<ul> <li>Order by specificity when quality is the same</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#045-2014-05-29","title":"0.4.5 / 2014-05-29","text":"<ul> <li>Fix regression in empty header handling</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#044-2014-05-29","title":"0.4.4 / 2014-05-29","text":"<ul> <li>Fix behaviors when headers are not present</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#043-2014-04-16","title":"0.4.3 / 2014-04-16","text":"<ul> <li>Handle slashes on media params correctly</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#042-2014-02-28","title":"0.4.2 / 2014-02-28","text":"<ul> <li>Fix media type sorting</li> <li>Handle media types params strictly</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#041-2014-01-16","title":"0.4.1 / 2014-01-16","text":"<ul> <li>Use most specific matches</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/negotiator/HISTORY/#040-2014-01-09","title":"0.4.0 / 2014-01-09","text":"<ul> <li>Remove preferred prefix from methods</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/","title":"Index","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#nodemon","title":"nodemon","text":"<p>nodemon is a tool that helps develop Node.js based applications by automatically restarting the node application when file changes in the directory are detected.</p> <p>nodemon does not require any additional changes to your code or method of development. nodemon is a replacement wrapper for <code>node</code>. To use <code>nodemon</code>, replace the word <code>node</code> on the command line when executing your script.</p> <p> </p>"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#installation","title":"Installation","text":"<p>Either through cloning with git or by using npm (the recommended way):</p> <pre><code>npm install -g nodemon # or using yarn: yarn global add nodemon\n</code></pre> <p>And nodemon will be installed globally to your system path.</p> <p>You can also install nodemon as a development dependency:</p> <pre><code>npm install --save-dev nodemon # or using yarn: yarn add nodemon -D\n</code></pre> <p>With a local installation, nodemon will not be available in your system path or you can't use it directly from the command line. Instead, the local installation of nodemon can be run by calling it from within an npm script (such as <code>npm start</code>) or using <code>npx nodemon</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#usage","title":"Usage","text":"<p>nodemon wraps your application, so you can pass all the arguments you would normally pass to your app:</p> <pre><code>nodemon [your node app]\n</code></pre> <p>For CLI options, use the <code>-h</code> (or <code>--help</code>) argument:</p> <pre><code>nodemon -h\n</code></pre> <p>Using nodemon is simple, if my application accepted a host and port as the arguments, I would start it as so:</p> <pre><code>nodemon ./server.js localhost 8080\n</code></pre> <p>Any output from this script is prefixed with <code>[nodemon]</code>, otherwise all output from your application, errors included, will be echoed out as expected.</p> <p>You can also pass the <code>inspect</code> flag to node through the command line as you would normally:</p> <pre><code>nodemon --inspect ./server.js 80\n</code></pre> <p>If you have a <code>package.json</code> file for your app, you can omit the main script entirely and nodemon will read the <code>package.json</code> for the <code>main</code> property and use that value as the app (ref).</p> <p>nodemon will also search for the <code>scripts.start</code> property in <code>package.json</code> (as of nodemon 1.1.x).</p> <p>Also check out the FAQ or issues for nodemon.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#automatic-re-running","title":"Automatic re-running","text":"<p>nodemon was originally written to restart hanging processes such as web servers, but now supports apps that cleanly exit. If your script exits cleanly, nodemon will continue to monitor the directory (or directories) and restart the script if there are any changes.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#manual-restarting","title":"Manual restarting","text":"<p>Whilst nodemon is running, if you need to manually restart your application, instead of stopping and restart nodemon, you can type <code>rs</code> with a carriage return, and nodemon will restart your process.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#config-files","title":"Config files","text":"<p>nodemon supports local and global configuration files. These are usually named <code>nodemon.json</code> and can be located in the current working directory or in your home directory. An alternative local configuration file can be specified with the <code>--config &lt;file&gt;</code> option.</p> <p>The specificity is as follows, so that a command line argument will always override the config file settings:</p> <ul> <li>command line arguments</li> <li>local config</li> <li>global config</li> </ul> <p>A config file can take any of the command line arguments as JSON key values, for example:</p> <pre><code>{\n  \"verbose\": true,\n  \"ignore\": [\"*.test.js\", \"**/fixtures/**\"],\n  \"execMap\": {\n    \"rb\": \"ruby\",\n    \"pde\": \"processing --sketch={{pwd}} --run\"\n  }\n}\n</code></pre> <p>The above <code>nodemon.json</code> file might be my global config so that I have support for ruby files and processing files, and I can run <code>nodemon demo.pde</code> and nodemon will automatically know how to run the script even though out of the box support for processing scripts.</p> <p>A further example of options can be seen in sample-nodemon.md</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#packagejson","title":"package.json","text":"<p>If you want to keep all your package configurations in one place, nodemon supports using <code>package.json</code> for configuration. Specify the config in the same format as you would for a config file but under <code>nodemonConfig</code> in the <code>package.json</code> file, for example, take the following <code>package.json</code>:</p> <pre><code>{\n  \"name\": \"nodemon\",\n  \"homepage\": \"http://nodemon.io\",\n  \"...\": \"... other standard package.json values\",\n  \"nodemonConfig\": {\n    \"ignore\": [\"**/test/**\", \"**/docs/**\"],\n    \"delay\": 2500\n  }\n}\n</code></pre> <p>Note that if you specify a <code>--config</code> file or provide a local <code>nodemon.json</code> any <code>package.json</code> config is ignored.</p> <p>This section needs better documentation, but for now you can also see <code>nodemon --help config</code> (also here).</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#using-nodemon-as-a-module","title":"Using nodemon as a module","text":"<p>Please see doc/requireable.md</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#using-nodemon-as-child-process","title":"Using nodemon as child process","text":"<p>Please see doc/events.md</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#running-non-node-scripts","title":"Running non-node scripts","text":"<p>nodemon can also be used to execute and monitor other programs. nodemon will read the file extension of the script being run and monitor that extension instead of <code>.js</code> if there's no <code>nodemon.json</code>:</p> <pre><code>nodemon --exec \"python -v\" ./app.py\n</code></pre> <p>Now nodemon will run <code>app.py</code> with python in verbose mode (note that if you're not passing args to the exec program, you don't need the quotes), and look for new or modified files with the <code>.py</code> extension.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#default-executables","title":"Default executables","text":"<p>Using the <code>nodemon.json</code> config file, you can define your own default executables using the <code>execMap</code> property. This is particularly useful if you're working with a language that isn't supported by default by nodemon.</p> <p>To add support for nodemon to know about the <code>.pl</code> extension (for Perl), the <code>nodemon.json</code> file would add:</p> <pre><code>{\n  \"execMap\": {\n    \"pl\": \"perl\"\n  }\n}\n</code></pre> <p>Now running the following, nodemon will know to use <code>perl</code> as the executable:</p> <pre><code>nodemon script.pl\n</code></pre> <p>It's generally recommended to use the global <code>nodemon.json</code> to add your own <code>execMap</code> options. However, if there's a common default that's missing, this can be merged in to the project so that nodemon supports it by default, by changing default.js and sending a pull request.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#monitoring-multiple-directories","title":"Monitoring multiple directories","text":"<p>By default nodemon monitors the current working directory. If you want to take control of that option, use the <code>--watch</code> option to add specific paths:</p> <pre><code>nodemon --watch app --watch libs app/server.js\n</code></pre> <p>Now nodemon will only restart if there are changes in the <code>./app</code> or <code>./libs</code> directory. By default nodemon will traverse sub-directories, so there's no need in explicitly including sub-directories.</p> <p>Nodemon also supports unix globbing, e.g <code>--watch './lib/*'</code>. The globbing pattern must be quoted. For advanced globbing, see <code>picomatch</code> documentation, the library that nodemon uses through <code>chokidar</code> (which in turn uses it through <code>anymatch</code>).</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#specifying-extension-watch-list","title":"Specifying extension watch list","text":"<p>By default, nodemon looks for files with the <code>.js</code>, <code>.mjs</code>, <code>.coffee</code>, <code>.litcoffee</code>, and <code>.json</code> extensions. If you use the <code>--exec</code> option and monitor <code>app.py</code> nodemon will monitor files with the extension of <code>.py</code>. However, you can specify your own list with the <code>-e</code> (or <code>--ext</code>) switch like so:</p> <pre><code>nodemon -e js,pug\n</code></pre> <p>Now nodemon will restart on any changes to files in the directory (or subdirectories) with the extensions <code>.js</code>, <code>.pug</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#ignoring-files","title":"Ignoring files","text":"<p>By default, nodemon will only restart when a <code>.js</code> JavaScript file changes. In some cases you will want to ignore some specific files, directories or file patterns, to prevent nodemon from prematurely restarting your application.</p> <p>This can be done via the command line:</p> <pre><code>nodemon --ignore lib/ --ignore tests/\n</code></pre> <p>Or specific files can be ignored:</p> <pre><code>nodemon --ignore lib/app.js\n</code></pre> <p>Patterns can also be ignored (but be sure to quote the arguments):</p> <pre><code>nodemon --ignore 'lib/*.js'\n</code></pre> <p>Important the ignore rules are patterns matched to the full absolute path, and this determines how many files are monitored. If using a wild card glob pattern, it needs to be used as <code>**</code> or omitted entirely. For example, <code>nodemon --ignore '**/test/**'</code> will work, whereas <code>--ignore '*/test/*'</code> will not.</p> <p>Note that by default, nodemon will ignore the <code>.git</code>, <code>node_modules</code>, <code>bower_components</code>, <code>.nyc_output</code>, <code>coverage</code> and <code>.sass-cache</code> directories and add your ignored patterns to the list. If you want to indeed watch a directory like <code>node_modules</code>, you need to override the underlying default ignore rules.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#application-isnt-restarting","title":"Application isn't restarting","text":"<p>In some networked environments (such as a container running nodemon reading across a mounted drive), you will need to use the <code>legacyWatch: true</code> which enables Chokidar's polling.</p> <p>Via the CLI, use either <code>--legacy-watch</code> or <code>-L</code> for short:</p> <pre><code>nodemon -L\n</code></pre> <p>Though this should be a last resort as it will poll every file it can find.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#delaying-restarting","title":"Delaying restarting","text":"<p>In some situations, you may want to wait until a number of files have changed. The timeout before checking for new file changes is 1 second. If you're uploading a number of files and it's taking some number of seconds, this could cause your app to restart multiple times unnecessarily.</p> <p>To add an extra throttle, or delay restarting, use the <code>--delay</code> command:</p> <pre><code>nodemon --delay 10 server.js\n</code></pre> <p>For more precision, milliseconds can be specified.  Either as a float:</p> <pre><code>nodemon --delay 2.5 server.js\n</code></pre> <p>Or using the time specifier (ms):</p> <pre><code>nodemon --delay 2500ms server.js\n</code></pre> <p>The delay figure is number of seconds (or milliseconds, if specified) to delay before restarting. So nodemon will only restart your app the given number of seconds after the last file change.</p> <p>If you are setting this value in <code>nodemon.json</code>, the value will always be interpreted in milliseconds. E.g., the following are equivalent:</p> <pre><code>nodemon --delay 2.5\n\n{\n  \"delay\": 2500\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#gracefully-reloading-down-your-script","title":"Gracefully reloading down your script","text":"<p>It is possible to have nodemon send any signal that you specify to your application.</p> <pre><code>nodemon --signal SIGHUP server.js\n</code></pre> <p>Your application can handle the signal as follows.</p> <pre><code>process.on(\"SIGHUP\", function () {\n  reloadSomeConfiguration();\n  process.kill(process.pid, \"SIGTERM\");\n})\n</code></pre> <p>Please note that nodemon will send this signal to every process in the process tree.</p> <p>If you are using <code>cluster</code>, then each workers (as well as the master) will receive the signal. If you wish to terminate all workers on receiving a <code>SIGHUP</code>, a common pattern is to catch the <code>SIGHUP</code> in the master, and forward <code>SIGTERM</code> to all workers, while ensuring that all workers ignore <code>SIGHUP</code>.</p> <pre><code>if (cluster.isMaster) {\n  process.on(\"SIGHUP\", function () {\n    for (const worker of Object.values(cluster.workers)) {\n      worker.process.kill(\"SIGTERM\");\n    }\n  });\n} else {\n  process.on(\"SIGHUP\", function() {})\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#controlling-shutdown-of-your-script","title":"Controlling shutdown of your script","text":"<p>nodemon sends a kill signal to your application when it sees a file update. If you need to clean up on shutdown inside your script you can capture the kill signal and handle it yourself.</p> <p>The following example will listen once for the <code>SIGUSR2</code> signal (used by nodemon to restart), run the clean up process and then kill itself for nodemon to continue control:</p> <pre><code>// important to use `on` and not `once` as nodemon can re-send the kill signal\nprocess.on('SIGUSR2', function () {\n  gracefulShutdown(function () {\n    process.kill(process.pid, 'SIGTERM');\n  });\n});\n</code></pre> <p>Note that the <code>process.kill</code> is only called once your shutdown jobs are complete. Hat tip to Benjie Gillam for writing this technique up.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#triggering-events-when-nodemon-state-changes","title":"Triggering events when nodemon state changes","text":"<p>If you want growl like notifications when nodemon restarts or to trigger an action when an event happens, then you can either <code>require</code> nodemon or add event actions to your <code>nodemon.json</code> file.</p> <p>For example, to trigger a notification on a Mac when nodemon restarts, <code>nodemon.json</code> looks like this:</p> <pre><code>{\n  \"events\": {\n    \"restart\": \"osascript -e 'display notification \\\"app restarted\\\" with title \\\"nodemon\\\"'\"\n  }\n}\n</code></pre> <p>A full list of available events is listed on the event states wiki. Note that you can bind to both states and messages.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#pipe-output-to-somewhere-else","title":"Pipe output to somewhere else","text":"<pre><code>nodemon({\n  script: ...,\n  stdout: false // important: this tells nodemon not to output to console\n}).on('readable', function() { // the `readable` event indicates that data is ready to pick up\n  this.stdout.pipe(fs.createWriteStream('output.txt'));\n  this.stderr.pipe(fs.createWriteStream('err.txt'));\n});\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#using-nodemon-in-your-gulp-workflow","title":"Using nodemon in your gulp workflow","text":"<p>Check out the gulp-nodemon plugin to integrate nodemon with the rest of your project's gulp workflow.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#using-nodemon-in-your-grunt-workflow","title":"Using nodemon in your Grunt workflow","text":"<p>Check out the grunt-nodemon plugin to integrate nodemon with the rest of your project's grunt workflow.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#pronunciation","title":"Pronunciation","text":"<p>nodemon, is it pronounced: node-mon, no-demon or node-e-mon (like pok\u00e9mon)?</p> <p>Well...I've been asked this many times before. I like that I've been asked this before. There's been bets as to which one it actually is.</p> <p>The answer is simple, but possibly frustrating. I'm not saying (how I pronounce it). It's up to you to call it as you like. All answers are correct :)</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#design-principles","title":"Design principles","text":"<ul> <li>Fewer flags is better</li> <li>Works across all platforms</li> <li>Fewer features</li> <li>Let individuals build on top of nodemon</li> <li>Offer all CLI functionality as an API</li> <li>Contributions must have and pass tests</li> </ul> <p>Nodemon is not perfect, and CLI arguments has sprawled beyond where I'm completely happy, but perhaps it can be reduced a little one day.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#faq","title":"FAQ","text":"<p>See the FAQ and please add your own questions if you think they would help others.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#backers","title":"Backers","text":"<p>Thank you to all our backers! \ud83d\ude4f</p> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#sponsors","title":"Sponsors","text":"<p>Support this project by becoming a sponsor. Your logo will show up here with a link to your website. Sponsor this project today \u2764\ufe0f</p> <p>Please note that links to the sponsors above are not direct endorsements nor affiliated with any of contributors of the nodemon project.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/nodemon/#license","title":"License","text":"<p>MIT http://rem.mit-license.org</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/normalize-path/","title":"normalize-path","text":"<p>Normalize slashes in a file path to be posix/unix-like forward slashes. Also condenses repeat slashes to a single slash and removes and trailing slashes, unless disabled.</p> <p>Please consider following this project's author, Jon Schlinkert, and consider starring the project to show your  and support.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/normalize-path/#install","title":"Install","text":"<p>Install with npm:</p> <pre><code>$ npm install --save normalize-path\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/normalize-path/#usage","title":"Usage","text":"<pre><code>const normalize = require('normalize-path');\n\nconsole.log(normalize('\\\\foo\\\\bar\\\\baz\\\\')); \n//=&gt; '/foo/bar/baz'\n</code></pre> <p>win32 namespaces</p> <pre><code>console.log(normalize('\\\\\\\\?\\\\UNC\\\\Server01\\\\user\\\\docs\\\\Letter.txt')); \n//=&gt; '//?/UNC/Server01/user/docs/Letter.txt'\n\nconsole.log(normalize('\\\\\\\\.\\\\CdRomX')); \n//=&gt; '//./CdRomX'\n</code></pre> <p>Consecutive slashes</p> <p>Condenses multiple consecutive forward slashes (except for leading slashes in win32 namespaces) to a single slash.</p> <pre><code>console.log(normalize('.//foo//bar///////baz/')); \n//=&gt; './foo/bar/baz'\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/normalize-path/#trailing-slashes","title":"Trailing slashes","text":"<p>By default trailing slashes are removed. Pass <code>false</code> as the last argument to disable this behavior and keep trailing slashes:</p> <pre><code>console.log(normalize('foo\\\\bar\\\\baz\\\\', false)); //=&gt; 'foo/bar/baz/'\nconsole.log(normalize('./foo/bar/baz/', false)); //=&gt; './foo/bar/baz/'\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/normalize-path/#release-history","title":"Release history","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/normalize-path/#v30","title":"v3.0","text":"<p>No breaking changes in this release.</p> <ul> <li>a check was added to ensure that win32 namespaces are handled properly by win32 <code>path.parse()</code> after a path has been normalized by this library.</li> <li>a minor optimization was made to simplify how the trailing separator was handled</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/normalize-path/#about","title":"About","text":"Contributing  Pull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).   Running Tests  Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:  <pre><code>$ npm install &amp;&amp; npm test\n</code></pre> Building docs  _(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_  To generate the readme, run the following command:  <pre><code>$ npm install -g verbose/verb#dev verb-generate-readme &amp;&amp; verb\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/normalize-path/#related-projects","title":"Related projects","text":"<p>Other useful path-related libraries:</p> <ul> <li>contains-path: Return true if a file path contains the given path. | homepage</li> <li>is-absolute: Returns true if a file path is absolute. Does not rely on the path module\u2026 more | homepage</li> <li>is-relative: Returns <code>true</code> if the path appears to be relative. | homepage</li> <li>parse-filepath: Pollyfill for node.js <code>path.parse</code>, parses a filepath into an object. | homepage</li> <li>path-ends-with: Return <code>true</code> if a file path ends with the given string/suffix. | homepage</li> <li>unixify: Convert Windows file paths to unix paths. | homepage</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/normalize-path/#contributors","title":"Contributors","text":"Commits Contributor 35 jonschlinkert 1 phated"},{"location":"system-desing/crud-app/JS/server/node_modules/normalize-path/#author","title":"Author","text":"<p>Jon Schlinkert</p> <ul> <li>LinkedIn Profile</li> <li>GitHub Profile</li> <li>Twitter Profile</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/normalize-path/#license","title":"License","text":"<p>Copyright \u00a9 2018, Jon Schlinkert. Released under the MIT License.</p> <p>This file was generated by verb-generate-readme, v0.6.0, on April 19, 2018.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1134-2025-02-04","title":"v1.13.4 - 2025-02-04","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits","title":"Commits","text":"<ul> <li>[Fix] avoid being fooled by a <code>Symbol.toStringTag</code> <code>fa5870d</code></li> <li>[Tests] fix tests in node v6.0 - v6.4 <code>2abfe1b</code></li> <li>[Dev Deps] update <code>es-value-fixtures</code>, <code>for-each</code>, <code>has-symbols</code> <code>3edfb01</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1133-2024-11-09","title":"v1.13.3 - 2024-11-09","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_1","title":"Commits","text":"<ul> <li>[actions] split out node 10-20, and 20+ <code>44395a8</code></li> <li>[Fix] <code>quoteStyle</code>: properly escape only the containing quotes <code>5137f8f</code></li> <li>[Refactor] clean up <code>quoteStyle</code> code <code>450680c</code></li> <li>[Tests] add <code>quoteStyle</code> escaping tests <code>e997c59</code></li> <li>[Dev Deps] update <code>auto-changelog</code>, <code>es-value-fixtures</code>, <code>tape</code> <code>d5a469c</code></li> <li>[Tests] replace <code>aud</code> with <code>npm audit</code> <code>fb7815f</code></li> <li>[Dev Deps] update <code>mock-property</code> <code>11c817b</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1132-2024-06-21","title":"v1.13.2 - 2024-06-21","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_2","title":"Commits","text":"<ul> <li>[readme] update badges <code>8a51e6b</code></li> <li>[Dev Deps] update <code>@ljharb/eslint-config</code>, <code>tape</code> <code>ef05f58</code></li> <li>[Dev Deps] update <code>error-cause</code>, <code>has-tostringtag</code>, <code>tape</code> <code>c0c6c26</code></li> <li>[Fix] Don't throw when <code>global</code> is not defined <code>d4d0965</code></li> <li>[meta] add missing <code>engines.node</code> <code>17a352a</code></li> <li>[Dev Deps] update <code>globalthis</code> <code>9c08884</code></li> <li>[Dev Deps] update <code>error-cause</code> <code>6af352d</code></li> <li>[Dev Deps] update <code>npmignore</code> <code>94e617d</code></li> <li>[Dev Deps] update <code>mock-property</code> <code>2ac24d7</code></li> <li>[Dev Deps] update <code>tape</code> <code>46125e5</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1131-2023-10-19","title":"v1.13.1 - 2023-10-19","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_3","title":"Commits","text":"<ul> <li>[Fix] in IE 8, global can !== window despite them being prototypes of each other <code>30d0859</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1130-2023-10-14","title":"v1.13.0 - 2023-10-14","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_4","title":"Commits","text":"<ul> <li>[New] add special handling for the global object <code>431bab2</code></li> <li>[Dev Deps] update <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>tape</code> <code>fd4f619</code></li> <li>[Dev Deps] update <code>mock-property</code>, <code>tape</code> <code>b453f6c</code></li> <li>[Dev Deps] update <code>error-cause</code> <code>e8ffc57</code></li> <li>[Dev Deps] update <code>tape</code> <code>054b8b9</code></li> <li>[Dev Deps] temporarily remove <code>aud</code> due to breaking change in transitive deps <code>2476845</code></li> <li>[Dev Deps] pin <code>glob</code>, since v10.3.8+ requires a broken <code>jackspeak</code> <code>383fa5e</code></li> <li>[Dev Deps] pin <code>jackspeak</code> since 2.1.2+ depends on npm aliases, which kill the install process in npm &lt; 6 <code>68c244c</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1123-2023-01-12","title":"v1.12.3 - 2023-01-12","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_5","title":"Commits","text":"<ul> <li>[Fix] in eg FF 24, collections lack forEach <code>75fc226</code></li> <li>[actions] update rebase action to use reusable workflow <code>250a277</code></li> <li>[Dev Deps] update <code>aud</code>, <code>es-value-fixtures</code>, <code>tape</code> <code>66a19b3</code></li> <li>[Dev Deps] update <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>error-cause</code> <code>c43d332</code></li> <li>[Tests] add <code>@pkgjs/support</code> to <code>postlint</code> <code>e2618d2</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1122-2022-05-26","title":"v1.12.2 - 2022-05-26","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_6","title":"Commits","text":"<ul> <li>[Fix] use <code>util.inspect</code> for a custom inspection symbol method <code>e243bf2</code></li> <li>[meta] add support info <code>ca20ba3</code></li> <li>[Fix] ignore <code>cause</code> in node v16.9 and v16.10 where it has a bug <code>86aa553</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1121-2022-05-21","title":"v1.12.1 - 2022-05-21","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_7","title":"Commits","text":"<ul> <li>[Tests] use <code>mock-property</code> <code>4ec8893</code></li> <li>[meta] use <code>npmignore</code> to autogenerate an npmignore file <code>07f868c</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>auto-changelog</code>, <code>tape</code> <code>b05244b</code></li> <li>[Dev Deps] update <code>@ljharb/eslint-config</code>, <code>error-cause</code>, <code>es-value-fixtures</code>, <code>functions-have-names</code>, <code>tape</code> <code>d037398</code></li> <li>[Fix] properly handle callable regexes in older engines <code>848fe48</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1120-2021-12-18","title":"v1.12.0 - 2021-12-18","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_8","title":"Commits","text":"<ul> <li>[New] add <code>numericSeparator</code> boolean option <code>2d2d537</code></li> <li>[Robustness] cache more prototype methods <code>191533d</code></li> <li>[New] ensure an Error\u2019s <code>cause</code> is displayed <code>53bc2ce</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code> <code>bc164b6</code></li> <li>[Robustness] cache <code>RegExp.prototype.test</code> <code>a314ab8</code></li> <li>[meta] fix auto-changelog settings <code>5ed0983</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1111-2021-12-05","title":"v1.11.1 - 2021-12-05","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_9","title":"Commits","text":"<ul> <li>[meta] add <code>auto-changelog</code> <code>7dbdd22</code></li> <li>[actions] reuse common workflows <code>c8823bc</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>safe-publish-latest</code>, <code>tape</code> <code>7532b12</code></li> <li>[Refactor] use <code>has-tostringtag</code> to behave correctly in the presence of symbol shams <code>94abb5d</code></li> <li>[actions] update codecov uploader <code>5ed5102</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>tape</code> <code>37b2ad2</code></li> <li>[meta] add <code>sideEffects</code> flag <code>d341f90</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1110-2021-07-12","title":"v1.11.0 - 2021-07-12","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_10","title":"Commits","text":"<ul> <li>[New] <code>customInspect</code>: add <code>symbol</code> option, to mimic modern util.inspect behavior <code>e973a6e</code></li> <li>[Dev Deps] update <code>eslint</code> <code>05f1cb3</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1103-2021-05-07","title":"v1.10.3 - 2021-05-07","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_11","title":"Commits","text":"<ul> <li>[Fix] handle core-js Symbol shams <code>4acfc2c</code></li> <li>[readme] update badges <code>95c323a</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>aud</code> <code>cb38f48</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1102-2021-04-17","title":"v1.10.2 - 2021-04-17","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_12","title":"Commits","text":"<ul> <li>[Fix] use a robust check for a boxed Symbol <code>87f12d6</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1101-2021-04-17","title":"v1.10.1 - 2021-04-17","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_13","title":"Commits","text":"<ul> <li>[Fix] use a robust check for a boxed bigint <code>d5ca829</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v1100-2021-04-17","title":"v1.10.0 - 2021-04-17","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_14","title":"Commits","text":"<ul> <li>[Tests] increase coverage <code>d8abb8a</code></li> <li>[actions] use <code>node/install</code> instead of <code>node/run</code>; use <code>codecov</code> action <code>4bfec2e</code></li> <li>[New] respect <code>Symbol.toStringTag</code> on objects <code>799b58f</code></li> <li>[Fix] do not allow Symbol.toStringTag to masquerade as builtins <code>d6c5b37</code></li> <li>[New] add <code>WeakRef</code> support <code>b6d898e</code></li> <li>[meta] do not publish github action workflow files <code>918cdfc</code></li> <li>[meta] create <code>FUNDING.yml</code> <code>0bb5fc5</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>tape</code> <code>22c8dc0</code></li> <li>[meta] use <code>prepublishOnly</code> script for npm 7+ <code>e52ee09</code></li> <li>[Dev Deps] update <code>eslint</code> <code>7c4e6fd</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v190-2020-11-30","title":"v1.9.0 - 2020-11-30","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_15","title":"Commits","text":"<ul> <li>[Tests] migrate tests to Github Actions <code>d262251</code></li> <li>[New] add enumerable own Symbols to plain object output <code>ee60c03</code></li> <li>[Tests] add passing tests <code>01ac3e4</code></li> <li>[actions] add \"Require Allow Edits\" action <code>c2d7746</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>core-js</code> <code>70058de</code></li> <li>[Fix] hex characters in strings should be uppercased, to match node <code>assert</code> <code>6ab8faa</code></li> <li>[Tests] run <code>nyc</code> on all tests <code>4c47372</code></li> <li>[Tests] node 0.8 has an unpredictable property order; fix <code>groups</code> test by removing property <code>f192069</code></li> <li>[New] add enumerable properties to Function inspect result, per node\u2019s <code>assert</code> <code>fd38e1b</code></li> <li>[Tests] fix tests for node &lt; 10, due to regex match <code>groups</code> <code>2ac6462</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code> <code>44b59e2</code></li> <li>[Robustness] cache <code>Symbol.prototype.toString</code> <code>f3c2074</code></li> <li>[Dev Deps] update <code>eslint</code> <code>9411294</code></li> <li>[meta] <code>require-allow-edits</code> no longer requires an explicit github token <code>36c0220</code></li> <li>[actions] update rebase checkout action to v2 <code>55a39a6</code></li> <li>[actions] switch Automatic Rebase workflow to <code>pull_request_target</code> event <code>f59fd3c</code></li> <li>[Dev Deps] update <code>eslint</code> <code>a492bec</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v180-2020-06-18","title":"v1.8.0 - 2020-06-18","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#fixed","title":"Fixed","text":"<ul> <li>[New] add <code>indent</code> option <code>#27</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_16","title":"Commits","text":"<ul> <li>[Tests] add codecov <code>4324cbb</code></li> <li>[New] add <code>maxStringLength</code> option <code>b3995cb</code></li> <li>[New] add <code>customInspect</code> option, to disable custom inspect methods <code>28b9179</code></li> <li>[Tests] add Date and RegExp tests <code>3b28eca</code></li> <li>[actions] add automatic rebasing / merge commit blocking <code>0d9c6c0</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>core-js</code>, <code>tape</code>; add <code>aud</code> <code>7c204f2</code></li> <li>[readme] fix repo URLs, remove testling <code>34ca9a0</code></li> <li>[Fix] when truncating a deep array, note it as <code>[Array]</code> instead of just <code>[Object]</code> <code>f74c82d</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>tape</code> <code>1a8a5ea</code></li> <li>[Fix] do not be fooled by a function\u2019s own <code>toString</code> method <code>7cb5c65</code></li> <li>[patch] indicate explicitly that anon functions are anonymous, to match node <code>81ebdd4</code></li> <li>[Dev Deps] loosen the <code>core-js</code> dep <code>e7472e8</code></li> <li>[Dev Deps] update <code>tape</code> <code>699827e</code></li> <li>[meta] add <code>safe-publish-latest</code> <code>c5d2868</code></li> <li>[Dev Deps] update <code>@ljharb/eslint-config</code> <code>9199501</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v170-2019-11-10","title":"v1.7.0 - 2019-11-10","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_17","title":"Commits","text":"<ul> <li>[Tests] use shared travis-ci configs <code>19899ed</code></li> <li>[Tests] add linting <code>a00f057</code></li> <li>[Tests] lint last file <code>2698047</code></li> <li>[Tests] up to <code>node</code> <code>v12.7</code>, <code>v11.15</code>, <code>v10.16</code>, <code>v8.16</code>, <code>v6.17</code> <code>589e87a</code></li> <li>[New] add support for <code>WeakMap</code> and <code>WeakSet</code> <code>3ddb3e4</code></li> <li>[meta] clean up license so github can detect it properly <code>27527bb</code></li> <li>[Tests] cover <code>util.inspect.custom</code> <code>36d47b9</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>core-js</code>, <code>tape</code> <code>b614eaa</code></li> <li>[Tests] fix coverage thresholds <code>7b7b176</code></li> <li>[Tests] bigint tests now can run on unflagged node <code>063af31</code></li> <li>[Refactor] add early bailout to <code>isMap</code> and <code>isSet</code> checks <code>fc51047</code></li> <li>[meta] add <code>funding</code> field <code>7f9953a</code></li> <li>[Tests] Fix invalid strict-mode syntax with hexadecimal <code>a8b5425</code></li> <li>[Dev Deps] update <code>@ljharb/eslint-config</code> <code>98df157</code></li> <li>add copyright to LICENSE <code>bb69fd0</code></li> <li>[Tests] use <code>npx aud</code> in <code>posttest</code> <code>4838353</code></li> <li>[Tests] move <code>0.6</code> to allowed failures, because it won\u2018t build on travis <code>1bff32a</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v160-2018-05-02","title":"v1.6.0 - 2018-05-02","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_18","title":"Commits","text":"<ul> <li>[New] add support for boxed BigInt primitives <code>356c66a</code></li> <li>[Tests] up to <code>node</code> <code>v10.0</code>, <code>v9.11</code>, <code>v8.11</code>, <code>v6.14</code>, <code>v4.9</code> <code>c77b65b</code></li> <li>[New] Add support for upcoming <code>BigInt</code> <code>1ac548e</code></li> <li>[Tests] run bigint tests in CI with --harmony-bigint flag <code>d31b738</code></li> <li>[Dev Deps] update <code>core-js</code>, <code>tape</code> <code>ff9eff6</code></li> <li>[Docs] fix example to use <code>safer-buffer</code> <code>48cae12</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v150-2017-12-25","title":"v1.5.0 - 2017-12-25","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_19","title":"Commits","text":"<ul> <li>[New] add <code>quoteStyle</code> option <code>f5a72d2</code></li> <li>[Tests] add more test coverage <code>30ebe4e</code></li> <li>[Tests] require 0.6 to pass <code>99a008c</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v141-2017-12-19","title":"v1.4.1 - 2017-12-19","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_20","title":"Commits","text":"<ul> <li>[Tests] up to <code>node</code> <code>v9.3</code>, <code>v8.9</code>, <code>v6.12</code> <code>6674476</code></li> <li>[Fix] <code>inspect(Object(-0))</code> should be \u201cObject(-0)\u201d, not \u201cObject(0)\u201d <code>d0a031f</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v140-2017-10-24","title":"v1.4.0 - 2017-10-24","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_21","title":"Commits","text":"<ul> <li>[Tests] add <code>npm run coverage</code> <code>3b48fb2</code></li> <li>[Tests] remove commented-out osx builds <code>71e24db</code></li> <li>[New] add support for <code>util.inspect.custom</code>, in node only. <code>20cca77</code></li> <li>[Tests] up to <code>node</code> <code>v8.6</code>; use <code>nvm install-latest-npm</code> to ensure new npm doesn\u2019t break old node <code>252952d</code></li> <li>[Tests] up to <code>node</code> <code>v8.8</code> <code>4aa868d</code></li> <li>[Dev Deps] update <code>core-js</code>, <code>tape</code> <code>59483d1</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v130-2017-07-31","title":"v1.3.0 - 2017-07-31","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#fixed_1","title":"Fixed","text":"<ul> <li>[Fix] Map/Set: work around core-js bug &lt; v2.5.0 <code>#9</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_22","title":"Commits","text":"<ul> <li>[New] add support for arrays with additional object keys <code>0d19937</code></li> <li>[Tests] up to <code>node</code> <code>v8.2</code>, <code>v7.10</code>, <code>v6.11</code>; fix new npm breaking on older nodes <code>e24784a</code></li> <li>Only apps should have lockfiles <code>c6faebc</code></li> <li>[Dev Deps] update <code>tape</code> <code>7345a0a</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v122-2017-03-24","title":"v1.2.2 - 2017-03-24","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_23","title":"Commits","text":"<ul> <li>[Tests] up to <code>node</code> <code>v7.7</code>, <code>v6.10</code>, <code>v4.8</code>; improve test matrix <code>a2ddc15</code></li> <li>[Tests] up to <code>node</code> <code>v7.0</code>, <code>v6.9</code>, <code>v5.12</code>, <code>v4.6</code>, <code>io.js</code> <code>v3.3</code>; improve test matrix <code>a48949f</code></li> <li>[Performance] check for primitive types as early as possible. <code>3b8092a</code></li> <li>[Refactor] remove unneeded <code>else</code>s. <code>7255034</code></li> <li>[Refactor] avoid recreating <code>lowbyte</code> function every time. <code>81edd34</code></li> <li>[Fix] differentiate -0 from 0 <code>521d345</code></li> <li>[Refactor] move object key gathering into separate function <code>aca6265</code></li> <li>[Refactor] consolidate wrapping logic for boxed primitives into a function. <code>4e440cd</code></li> <li>[Robustness] use <code>typeof</code> instead of comparing to literal <code>undefined</code> <code>5ca6f60</code></li> <li>[Refactor] consolidate Map/Set notations. <code>4e576e5</code></li> <li>[Tests] ensure that this function remains anonymous, despite ES6 name inference. <code>7540ae5</code></li> <li>[Refactor] explicitly coerce Error objects to strings. <code>7f4ca84</code></li> <li>[Refactor] split up <code>var</code> declarations for debuggability <code>6f2c11e</code></li> <li>[Robustness] cache <code>Object.prototype.toString</code> <code>df44a20</code></li> <li>[Dev Deps] update <code>tape</code> <code>3ec714e</code></li> <li>[Dev Deps] update <code>tape</code> <code>beb72d9</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v121-2016-04-09","title":"v1.2.1 - 2016-04-09","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#fixed_2","title":"Fixed","text":"<ul> <li>[Fix] fix Boolean <code>false</code> object inspection. <code>#7</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v120-2016-04-09","title":"v1.2.0 - 2016-04-09","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#fixed_3","title":"Fixed","text":"<ul> <li>[New] add support for inspecting String/Number/Boolean objects. <code>#6</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_24","title":"Commits","text":"<ul> <li>[Dev Deps] update <code>tape</code> <code>742caa2</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#v110-2015-12-14","title":"v1.1.0 - 2015-12-14","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#merged","title":"Merged","text":"<ul> <li>[New] add ES6 Map/Set support. <code>#4</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#fixed_4","title":"Fixed","text":"<ul> <li>[New] add ES6 Map/Set support. <code>#3</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_25","title":"Commits","text":"<ul> <li>Update <code>travis.yml</code> to test on bunches of <code>iojs</code> and <code>node</code> versions. <code>4c1fd65</code></li> <li>[Dev Deps] update <code>tape</code> <code>88a907e</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#102-2015-08-07","title":"1.0.2 - 2015-08-07","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_26","title":"Commits","text":"<ul> <li>[Fix] Cache <code>Object.prototype.hasOwnProperty</code> in case it's deleted later. <code>1d0075d</code></li> <li>[Dev Deps] Update <code>tape</code> <code>ca8d5d7</code></li> <li>gitignore node_modules since this is a reusable modules. <code>ed41407</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#101-2015-07-19","title":"1.0.1 - 2015-07-19","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_27","title":"Commits","text":"<ul> <li>Make <code>inspect</code> work with symbol primitives and objects, including in node 0.11 and 0.12. <code>ddf1b94</code></li> <li>bump tape <code>103d674</code></li> <li>use newer travis config <code>d497276</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#100-2014-08-05","title":"1.0.0 - 2014-08-05","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_28","title":"Commits","text":"<ul> <li>error inspect works properly <code>260a22d</code></li> <li>seen coverage <code>57269e8</code></li> <li>htmlelement instance coverage <code>397ffe1</code></li> <li>more element coverage <code>6905cc2</code></li> <li>failing test for type errors <code>385b615</code></li> <li>fn name coverage <code>edc906d</code></li> <li>server-side element test <code>362d1d3</code></li> <li>custom inspect fn <code>e89b0f6</code></li> <li>fixed browser test <code>b530882</code></li> <li>depth test, matches node <code>1cfd9e0</code></li> <li>exercise hasOwnProperty path <code>8d753fb</code></li> <li>more cases covered for errors <code>c5c46a5</code></li> <li>\\W obj key test case <code>b0eceee</code></li> <li>coverage for explicit depth param <code>e12b91c</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#040-2014-03-21","title":"0.4.0 - 2014-03-21","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_29","title":"Commits","text":"<ul> <li>passing lowbyte interpolation test <code>b847511</code></li> <li>lowbyte test <code>4a2b0e1</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#031-2014-03-04","title":"0.3.1 - 2014-03-04","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_30","title":"Commits","text":"<ul> <li>sort keys <code>a07b19c</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#030-2014-03-04","title":"0.3.0 - 2014-03-04","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_31","title":"Commits","text":"<ul> <li>[] and {} instead of [ ] and { } <code>654c44b</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#020-2014-03-04","title":"0.2.0 - 2014-03-04","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_32","title":"Commits","text":"<ul> <li>failing holes test <code>99cdfad</code></li> <li>regex already work <code>e324033</code></li> <li>failing undef/null test <code>1f88a00</code></li> <li>holes in the all example <code>7d345f3</code></li> <li>check for .inspect(), fixes Buffer use-case <code>c3f7546</code></li> <li>fixes for holes <code>ce25f73</code></li> <li>weird null behavior <code>405c1ea</code></li> <li>tape is actually a devDependency, upgrade <code>703b0ce</code></li> <li>put date in the example <code>a342219</code></li> <li>passing the null test <code>4ab737e</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#013-2013-07-26","title":"0.1.3 - 2013-07-26","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_33","title":"Commits","text":"<ul> <li>special isElement() check <code>882768a</code></li> <li>oh right old IEs don't have indexOf either <code>36d1275</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#011-2013-07-26","title":"0.1.1 - 2013-07-26","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_34","title":"Commits","text":"<ul> <li>tests! <code>4422fd9</code></li> <li>fix for ie&lt;9, doesn't have hasOwnProperty <code>6b7d611</code></li> <li>fix for all IEs: no f.name <code>4e0c2f6</code></li> <li>badges <code>5ed0d88</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#010-2013-07-26","title":"0.1.0 - 2013-07-26","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_35","title":"Commits","text":"<ul> <li>[Function] for functions <code>ad5c485</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#000-2013-07-26","title":"0.0.0 - 2013-07-26","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/CHANGELOG/#commits_36","title":"Commits","text":"<ul> <li>working browser example <code>34be6b6</code></li> <li>package.json etc <code>cad51f2</code></li> <li>docs complete <code>b80cce2</code></li> <li>circular example <code>4b4a7b9</code></li> <li>string rep <code>7afb479</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/readme/","title":"object-inspect","text":"<p>string representations of objects in node and the browser</p> <p> </p> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/readme/#example","title":"example","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/readme/#circular","title":"circular","text":"<pre><code>var inspect = require('object-inspect');\nvar obj = { a: 1, b: [3,4] };\nobj.c = obj;\nconsole.log(inspect(obj));\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/readme/#dom-element","title":"dom element","text":"<pre><code>var inspect = require('object-inspect');\n\nvar d = document.createElement('div');\nd.setAttribute('id', 'beep');\nd.innerHTML = '&lt;b&gt;wooo&lt;/b&gt;&lt;i&gt;iiiii&lt;/i&gt;';\n\nconsole.log(inspect([ d, { a: 3, b : 4, c: [5,6,[7,[8,[9]]]] } ]));\n</code></pre> <p>output:</p> <pre><code>[ &lt;div id=\"beep\"&gt;...&lt;/div&gt;, { a: 3, b: 4, c: [ 5, 6, [ 7, [ 8, [ ... ] ] ] ] } ]\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/readme/#methods","title":"methods","text":"<pre><code>var inspect = require('object-inspect')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/readme/#var-s-inspectobj-opts","title":"var s = inspect(obj, opts={})","text":"<p>Return a string <code>s</code> with the string representation of <code>obj</code> up to a depth of <code>opts.depth</code>.</p> <p>Additional options:   - <code>quoteStyle</code>: must be \"single\" or \"double\", if present. Default <code>'single'</code> for strings, <code>'double'</code> for HTML elements.   - <code>maxStringLength</code>: must be <code>0</code>, a positive integer, <code>Infinity</code>, or <code>null</code>, if present. Default <code>Infinity</code>.   - <code>customInspect</code>: When <code>true</code>, a custom inspect method function will be invoked (either undere the <code>util.inspect.custom</code> symbol, or the <code>inspect</code> property). When the string <code>'symbol'</code>, only the symbol method will be invoked. Default <code>true</code>.   - <code>indent</code>: must be \"\\t\", <code>null</code>, or a positive integer. Default <code>null</code>.   - <code>numericSeparator</code>: must be a boolean, if present. Default <code>false</code>. If <code>true</code>, all numbers will be printed with numeric separators (eg, <code>1234.5678</code> will be printed as <code>'1_234.567_8'</code>)</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/readme/#install","title":"install","text":"<p>With npm do:</p> <pre><code>npm install object-inspect\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/object-inspect/readme/#license","title":"license","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/","title":"on-finished","text":"<p>Execute a callback when a HTTP request closes, finishes, or errors.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/#install","title":"Install","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install on-finished\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/#api","title":"API","text":"<pre><code>var onFinished = require('on-finished')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/#onfinishedres-listener","title":"onFinished(res, listener)","text":"<p>Attach a listener to listen for the response to finish. The listener will be invoked only once when the response finished. If the response finished to an error, the first argument will contain the error. If the response has already finished, the listener will be invoked.</p> <p>Listening to the end of a response would be used to close things associated with the response, like open files.</p> <p>Listener is invoked as <code>listener(err, res)</code>.</p> <pre><code>onFinished(res, function (err, res) {\n  // clean up open fds, etc.\n  // err contains the error if request error'd\n})\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/#onfinishedreq-listener","title":"onFinished(req, listener)","text":"<p>Attach a listener to listen for the request to finish. The listener will be invoked only once when the request finished. If the request finished to an error, the first argument will contain the error. If the request has already finished, the listener will be invoked.</p> <p>Listening to the end of a request would be used to know when to continue after reading the data.</p> <p>Listener is invoked as <code>listener(err, req)</code>.</p> <pre><code>var data = ''\n\nreq.setEncoding('utf8')\nreq.on('data', function (str) {\n  data += str\n})\n\nonFinished(req, function (err, req) {\n  // data is read unless there is err\n})\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/#onfinishedisfinishedres","title":"onFinished.isFinished(res)","text":"<p>Determine if <code>res</code> is already finished. This would be useful to check and not even start certain operations if the response has already finished.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/#onfinishedisfinishedreq","title":"onFinished.isFinished(req)","text":"<p>Determine if <code>req</code> is already finished. This would be useful to check and not even start certain operations if the request has already finished.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/#special-nodejs-requests","title":"Special Node.js requests","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/#http-connect-method","title":"HTTP CONNECT method","text":"<p>The meaning of the <code>CONNECT</code> method from RFC 7231, section 4.3.6:</p> <p>The CONNECT method requests that the recipient establish a tunnel to the destination origin server identified by the request-target and, if successful, thereafter restrict its behavior to blind forwarding of packets, in both directions, until the tunnel is closed.  Tunnels are commonly used to create an end-to-end virtual connection, through one or more proxies, which can then be secured using TLS (Transport Layer Security, [RFC5246]).</p> <p>In Node.js, these request objects come from the <code>'connect'</code> event on the HTTP server.</p> <p>When this module is used on a HTTP <code>CONNECT</code> request, the request is considered \"finished\" immediately, due to limitations in the Node.js interface. This means if the <code>CONNECT</code> request contains a request entity, the request will be considered \"finished\" even before it has been read.</p> <p>There is no such thing as a response object to a <code>CONNECT</code> request in Node.js, so there is no support for one.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/#http-upgrade-request","title":"HTTP Upgrade request","text":"<p>The meaning of the <code>Upgrade</code> header from RFC 7230, section 6.1:</p> <p>The \"Upgrade\" header field is intended to provide a simple mechanism for transitioning from HTTP/1.1 to some other protocol on the same connection.</p> <p>In Node.js, these request objects come from the <code>'upgrade'</code> event on the HTTP server.</p> <p>When this module is used on a HTTP request with an <code>Upgrade</code> header, the request is considered \"finished\" immediately, due to limitations in the Node.js interface. This means if the <code>Upgrade</code> request contains a request entity, the request will be considered \"finished\" even before it has been read.</p> <p>There is no such thing as a response object to a <code>Upgrade</code> request in Node.js, so there is no support for one.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/#example","title":"Example","text":"<p>The following code ensures that file descriptors are always closed once the response finishes.</p> <pre><code>var destroy = require('destroy')\nvar fs = require('fs')\nvar http = require('http')\nvar onFinished = require('on-finished')\n\nhttp.createServer(function onRequest (req, res) {\n  var stream = fs.createReadStream('package.json')\n  stream.pipe(res)\n  onFinished(res, function () {\n    destroy(stream)\n  })\n})\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/","title":"2.4.1 / 2022-02-22","text":"<ul> <li>Fix error on early async hooks implementations</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#240-2022-02-21","title":"2.4.0 / 2022-02-21","text":"<ul> <li>Prevent loss of async hooks context</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#230-2015-05-26","title":"2.3.0 / 2015-05-26","text":"<ul> <li>Add defined behavior for HTTP <code>CONNECT</code> requests</li> <li>Add defined behavior for HTTP <code>Upgrade</code> requests</li> <li>deps: ee-first@1.1.1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#221-2015-04-22","title":"2.2.1 / 2015-04-22","text":"<ul> <li>Fix <code>isFinished(req)</code> when data buffered</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#220-2014-12-22","title":"2.2.0 / 2014-12-22","text":"<ul> <li>Add message object to callback arguments</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#211-2014-10-22","title":"2.1.1 / 2014-10-22","text":"<ul> <li>Fix handling of pipelined requests</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#210-2014-08-16","title":"2.1.0 / 2014-08-16","text":"<ul> <li>Check if <code>socket</code> is detached</li> <li>Return <code>undefined</code> for <code>isFinished</code> if state unknown</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#200-2014-08-16","title":"2.0.0 / 2014-08-16","text":"<ul> <li>Add <code>isFinished</code> function</li> <li>Move to <code>jshttp</code> organization</li> <li>Remove support for plain socket argument</li> <li>Rename to <code>on-finished</code></li> <li>Support both <code>req</code> and <code>res</code> as arguments</li> <li>deps: ee-first@1.0.5</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#122-2014-06-10","title":"1.2.2 / 2014-06-10","text":"<ul> <li>Reduce listeners added to emitters<ul> <li>avoids \"event emitter leak\" warnings when used multiple times on same request</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#121-2014-06-08","title":"1.2.1 / 2014-06-08","text":"<ul> <li>Fix returned value when already finished</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#120-2014-06-05","title":"1.2.0 / 2014-06-05","text":"<ul> <li>Call callback when called on already-finished socket</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#114-2014-05-27","title":"1.1.4 / 2014-05-27","text":"<ul> <li>Support node.js 0.8</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#113-2014-04-30","title":"1.1.3 / 2014-04-30","text":"<ul> <li>Make sure errors passed as instanceof <code>Error</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#112-2014-04-18","title":"1.1.2 / 2014-04-18","text":"<ul> <li>Default the <code>socket</code> to passed-in object</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#111-2014-01-16","title":"1.1.1 / 2014-01-16","text":"<ul> <li>Rename module to <code>finished</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#110-2013-12-25","title":"1.1.0 / 2013-12-25","text":"<ul> <li>Call callback when called on already-errored socket</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#101-2013-12-20","title":"1.0.1 / 2013-12-20","text":"<ul> <li>Actually pass the error to the callback</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-finished/HISTORY/#100-2013-12-20","title":"1.0.0 / 2013-12-20","text":"<ul> <li>Initial release</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-headers/","title":"on-headers","text":"<p>Execute a listener when a response is about to write headers.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-headers/#installation","title":"Installation","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install on-headers\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-headers/#api","title":"API","text":"<pre><code>var onHeaders = require('on-headers')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-headers/#onheadersres-listener","title":"onHeaders(res, listener)","text":"<p>This will add the listener <code>listener</code> to fire when headers are emitted for <code>res</code>. The listener is passed the <code>response</code> object as it's context (<code>this</code>). Headers are considered to be emitted only once, right before they are sent to the client.</p> <p>When this is called multiple times on the same <code>res</code>, the <code>listener</code>s are fired in the reverse order they were added.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-headers/#examples","title":"Examples","text":"<pre><code>var http = require('http')\nvar onHeaders = require('on-headers')\n\nhttp\n  .createServer(onRequest)\n  .listen(3000)\n\nfunction addPoweredBy () {\n  // set if not set by end of request\n  if (!this.getHeader('X-Powered-By')) {\n    this.setHeader('X-Powered-By', 'Node.js')\n  }\n}\n\nfunction onRequest (req, res) {\n  onHeaders(res, addPoweredBy)\n\n  res.setHeader('Content-Type', 'text/plain')\n  res.end('hello!')\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-headers/#testing","title":"Testing","text":"<pre><code>$ npm test\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-headers/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-headers/HISTORY/","title":"1.0.2 / 2019-02-21","text":"<ul> <li>Fix <code>res.writeHead</code> patch missing return value</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-headers/HISTORY/#101-2015-09-29","title":"1.0.1 / 2015-09-29","text":"<ul> <li>perf: enable strict mode</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-headers/HISTORY/#100-2014-08-10","title":"1.0.0 / 2014-08-10","text":"<ul> <li>Honor <code>res.statusCode</code> change in <code>listener</code></li> <li>Move to <code>jshttp</code> organization</li> <li>Prevent <code>arguments</code>-related de-opt</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/on-headers/HISTORY/#000-2014-05-13","title":"0.0.0 / 2014-05-13","text":"<ul> <li>Initial implementation</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/once/","title":"once","text":"<p>Only call a function once.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/once/#usage","title":"usage","text":"<pre><code>var once = require('once')\n\nfunction load (file, cb) {\n  cb = once(cb)\n  loader.load('file')\n  loader.once('load', cb)\n  loader.once('error', cb)\n}\n</code></pre> <p>Or add to the Function.prototype in a responsible way:</p> <pre><code>// only has to be done once\nrequire('once').proto()\n\nfunction load (file, cb) {\n  cb = cb.once()\n  loader.load('file')\n  loader.once('load', cb)\n  loader.once('error', cb)\n}\n</code></pre> <p>Ironically, the prototype feature makes this module twice as complicated as necessary.</p> <p>To check whether you function has been called, use <code>fn.called</code>. Once the function is called for the first time the return value of the original function is saved in <code>fn.value</code> and subsequent calls will continue to return this value.</p> <pre><code>var once = require('once')\n\nfunction load (cb) {\n  cb = once(cb)\n  var stream = createStream()\n  stream.once('data', cb)\n  stream.once('end', function () {\n    if (!cb.called) cb(new Error('not found'))\n  })\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/once/#oncestrictfunc","title":"<code>once.strict(func)</code>","text":"<p>Throw an error if the function is called twice.</p> <p>Some functions are expected to be called only once. Using <code>once</code> for them would potentially hide logical errors.</p> <p>In the example below, the <code>greet</code> function has to call the callback only once:</p> <pre><code>function greet (name, cb) {\n  // return is missing from the if statement\n  // when no name is passed, the callback is called twice\n  if (!name) cb('Hello anonymous')\n  cb('Hello ' + name)\n}\n\nfunction log (msg) {\n  console.log(msg)\n}\n\n// this will print 'Hello anonymous' but the logical error will be missed\ngreet(null, once(msg))\n\n// once.strict will print 'Hello anonymous' and throw an error when the callback will be called the second time\ngreet(null, once.strict(msg))\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/","title":"parseurl","text":"<p>Parse a URL with memoization.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/#install","title":"Install","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install parseurl\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/#api","title":"API","text":"<pre><code>var parseurl = require('parseurl')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/#parseurlreq","title":"parseurl(req)","text":"<p>Parse the URL of the given request object (looks at the <code>req.url</code> property) and return the result. The result is the same as <code>url.parse</code> in Node.js core. Calling this function multiple times on the same <code>req</code> where <code>req.url</code> does not change will return a cached parsed object, rather than parsing again.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/#parseurloriginalreq","title":"parseurl.original(req)","text":"<p>Parse the original URL of the given request object and return the result. This works by trying to parse <code>req.originalUrl</code> if it is a string, otherwise parses <code>req.url</code>. The result is the same as <code>url.parse</code> in Node.js core. Calling this function multiple times on the same <code>req</code> where <code>req.originalUrl</code> does not change will return a cached parsed object, rather than parsing again.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/#benchmark","title":"Benchmark","text":"<pre><code>$ npm run-script bench\n\n&gt; parseurl@1.3.3 bench nodejs-parseurl\n&gt; node benchmark/index.js\n\n  http_parser@2.8.0\n  node@10.6.0\n  v8@6.7.288.46-node.13\n  uv@1.21.0\n  zlib@1.2.11\n  ares@1.14.0\n  modules@64\n  nghttp2@1.32.0\n  napi@3\n  openssl@1.1.0h\n  icu@61.1\n  unicode@10.0\n  cldr@33.0\n  tz@2018c\n\n&gt; node benchmark/fullurl.js\n\n  Parsing URL \"http://localhost:8888/foo/bar?user=tj&amp;pet=fluffy\"\n\n  4 tests completed.\n\n  fasturl            x 2,207,842 ops/sec \u00b13.76% (184 runs sampled)\n  nativeurl - legacy x   507,180 ops/sec \u00b10.82% (191 runs sampled)\n  nativeurl - whatwg x   290,044 ops/sec \u00b11.96% (189 runs sampled)\n  parseurl           x   488,907 ops/sec \u00b12.13% (192 runs sampled)\n\n&gt; node benchmark/pathquery.js\n\n  Parsing URL \"/foo/bar?user=tj&amp;pet=fluffy\"\n\n  4 tests completed.\n\n  fasturl            x 3,812,564 ops/sec \u00b13.15% (188 runs sampled)\n  nativeurl - legacy x 2,651,631 ops/sec \u00b11.68% (189 runs sampled)\n  nativeurl - whatwg x   161,837 ops/sec \u00b12.26% (189 runs sampled)\n  parseurl           x 4,166,338 ops/sec \u00b12.23% (184 runs sampled)\n\n&gt; node benchmark/samerequest.js\n\n  Parsing URL \"/foo/bar?user=tj&amp;pet=fluffy\" on same request object\n\n  4 tests completed.\n\n  fasturl            x  3,821,651 ops/sec \u00b12.42% (185 runs sampled)\n  nativeurl - legacy x  2,651,162 ops/sec \u00b11.90% (187 runs sampled)\n  nativeurl - whatwg x    175,166 ops/sec \u00b11.44% (188 runs sampled)\n  parseurl           x 14,912,606 ops/sec \u00b13.59% (183 runs sampled)\n\n&gt; node benchmark/simplepath.js\n\n  Parsing URL \"/foo/bar\"\n\n  4 tests completed.\n\n  fasturl            x 12,421,765 ops/sec \u00b12.04% (191 runs sampled)\n  nativeurl - legacy x  7,546,036 ops/sec \u00b11.41% (188 runs sampled)\n  nativeurl - whatwg x    198,843 ops/sec \u00b11.83% (189 runs sampled)\n  parseurl           x 24,244,006 ops/sec \u00b10.51% (194 runs sampled)\n\n&gt; node benchmark/slash.js\n\n  Parsing URL \"/\"\n\n  4 tests completed.\n\n  fasturl            x 17,159,456 ops/sec \u00b13.25% (188 runs sampled)\n  nativeurl - legacy x 11,635,097 ops/sec \u00b13.79% (184 runs sampled)\n  nativeurl - whatwg x    240,693 ops/sec \u00b10.83% (189 runs sampled)\n  parseurl           x 42,279,067 ops/sec \u00b10.55% (190 runs sampled)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/HISTORY/","title":"1.3.3 / 2019-04-15","text":"<ul> <li>Fix Node.js 0.8 return value inconsistencies</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/HISTORY/#132-2017-09-09","title":"1.3.2 / 2017-09-09","text":"<ul> <li>perf: reduce overhead for full URLs</li> <li>perf: unroll the \"fast-path\" <code>RegExp</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/HISTORY/#131-2016-01-17","title":"1.3.1 / 2016-01-17","text":"<ul> <li>perf: enable strict mode</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/HISTORY/#130-2014-08-09","title":"1.3.0 / 2014-08-09","text":"<ul> <li>Add <code>parseurl.original</code> for parsing <code>req.originalUrl</code> with fallback</li> <li>Return <code>undefined</code> if <code>req.url</code> is <code>undefined</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/HISTORY/#120-2014-07-21","title":"1.2.0 / 2014-07-21","text":"<ul> <li>Cache URLs based on original value</li> <li>Remove no-longer-needed URL mis-parse work-around</li> <li>Simplify the \"fast-path\" <code>RegExp</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/HISTORY/#113-2014-07-08","title":"1.1.3 / 2014-07-08","text":"<ul> <li>Fix typo</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/HISTORY/#112-2014-07-08","title":"1.1.2 / 2014-07-08","text":"<ul> <li>Seriously fix Node.js 0.8 compatibility</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/HISTORY/#111-2014-07-08","title":"1.1.1 / 2014-07-08","text":"<ul> <li>Fix Node.js 0.8 compatibility</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/HISTORY/#110-2014-07-08","title":"1.1.0 / 2014-07-08","text":"<ul> <li>Incorporate URL href-only parse fast-path</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/HISTORY/#101-2014-03-08","title":"1.0.1 / 2014-03-08","text":"<ul> <li>Add missing <code>require</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/parseurl/HISTORY/#100-2014-03-08","title":"1.0.0 / 2014-03-08","text":"<ul> <li>Genesis from <code>connect</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/","title":"Path-to-RegExp","text":"<p>Turn a path string such as <code>/user/:name</code> into a regular expression.</p> <p> </p>"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#installation","title":"Installation","text":"<pre><code>npm install path-to-regexp --save\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#usage","title":"Usage","text":"<pre><code>const {\n  match,\n  pathToRegexp,\n  compile,\n  parse,\n  stringify,\n} = require(\"path-to-regexp\");\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#parameters","title":"Parameters","text":"<p>Parameters match arbitrary strings in a path by matching up to the end of the segment, or up to any proceeding tokens. They are defined by prefixing a colon to the parameter name (<code>:foo</code>). Parameter names can use any valid JavaScript identifier, or be double quoted to use other characters (<code>:\"param-name\"</code>).</p> <pre><code>const fn = match(\"/:foo/:bar\");\n\nfn(\"/test/route\");\n//=&gt; { path: '/test/route', params: { foo: 'test', bar: 'route' } }\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#wildcard","title":"Wildcard","text":"<p>Wildcard parameters match one or more characters across multiple segments. They are defined the same way as regular parameters, but are prefixed with an asterisk (<code>*foo</code>).</p> <pre><code>const fn = match(\"/*splat\");\n\nfn(\"/bar/baz\");\n//=&gt; { path: '/bar/baz', params: { splat: [ 'bar', 'baz' ] } }\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#optional","title":"Optional","text":"<p>Braces can be used to define parts of the path that are optional.</p> <pre><code>const fn = match(\"/users{/:id}/delete\");\n\nfn(\"/users/delete\");\n//=&gt; { path: '/users/delete', params: {} }\n\nfn(\"/users/123/delete\");\n//=&gt; { path: '/users/123/delete', params: { id: '123' } }\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#match","title":"Match","text":"<p>The <code>match</code> function returns a function for matching strings against a path:</p> <ul> <li>path String or array of strings.</li> <li>options (optional) (Extends pathToRegexp options)</li> <li>decode Function for decoding strings to params, or <code>false</code> to disable all processing. (default: <code>decodeURIComponent</code>)</li> </ul> <pre><code>const fn = match(\"/foo/:bar\");\n</code></pre> <p>Please note: <code>path-to-regexp</code> is intended for ordered data (e.g. paths, hosts). It can not handle arbitrarily ordered data (e.g. query strings, URL fragments, JSON, etc).</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#pathtoregexp","title":"PathToRegexp","text":"<p>The <code>pathToRegexp</code> function returns a regular expression for matching strings against paths. It</p> <ul> <li>path String or array of strings.</li> <li>options (optional) (See parse for more options)</li> <li>sensitive Regexp will be case sensitive. (default: <code>false</code>)</li> <li>end Validate the match reaches the end of the string. (default: <code>true</code>)</li> <li>delimiter The default delimiter for segments, e.g. <code>[^/]</code> for <code>:named</code> parameters. (default: <code>'/'</code>)</li> <li>trailing Allows optional trailing delimiter to match. (default: <code>true</code>)</li> </ul> <pre><code>const { regexp, keys } = pathToRegexp(\"/foo/:bar\");\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#compile-reverse-path-to-regexp","title":"Compile (\"Reverse\" Path-To-RegExp)","text":"<p>The <code>compile</code> function will return a function for transforming parameters into a valid path:</p> <ul> <li>path A string.</li> <li>options (See parse for more options)</li> <li>delimiter The default delimiter for segments, e.g. <code>[^/]</code> for <code>:named</code> parameters. (default: <code>'/'</code>)</li> <li>encode Function for encoding input strings for output into the path, or <code>false</code> to disable entirely. (default: <code>encodeURIComponent</code>)</li> </ul> <pre><code>const toPath = compile(\"/user/:id\");\n\ntoPath({ id: \"name\" }); //=&gt; \"/user/name\"\ntoPath({ id: \"caf\u00e9\" }); //=&gt; \"/user/caf%C3%A9\"\n\nconst toPathRepeated = compile(\"/*segment\");\n\ntoPathRepeated({ segment: [\"foo\"] }); //=&gt; \"/foo\"\ntoPathRepeated({ segment: [\"a\", \"b\", \"c\"] }); //=&gt; \"/a/b/c\"\n\n// When disabling `encode`, you need to make sure inputs are encoded correctly. No arrays are accepted.\nconst toPathRaw = compile(\"/user/:id\", { encode: false });\n\ntoPathRaw({ id: \"%3A%2F\" }); //=&gt; \"/user/%3A%2F\"\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#stringify","title":"Stringify","text":"<p>Transform <code>TokenData</code> (a sequence of tokens) back into a Path-to-RegExp string.</p> <ul> <li>data A <code>TokenData</code> instance</li> </ul> <pre><code>const data = new TokenData([\n  { type: \"text\", value: \"/\" },\n  { type: \"param\", name: \"foo\" },\n]);\n\nconst path = stringify(data); //=&gt; \"/:foo\"\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#developers","title":"Developers","text":"<ul> <li>If you are rewriting paths with match and compile, consider using <code>encode: false</code> and <code>decode: false</code> to keep raw paths passed around.</li> <li>To ensure matches work on paths containing characters usually encoded, such as emoji, consider using encodeurl for <code>encodePath</code>.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#parse","title":"Parse","text":"<p>The <code>parse</code> function accepts a string and returns <code>TokenData</code>, the set of tokens and other metadata parsed from the input string. <code>TokenData</code> is can used with <code>match</code> and <code>compile</code>.</p> <ul> <li>path A string.</li> <li>options (optional)</li> <li>encodePath A function for encoding input strings. (default: <code>x =&gt; x</code>, recommended: <code>encodeurl</code>)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#tokens","title":"Tokens","text":"<p><code>TokenData</code> is a sequence of tokens, currently of types <code>text</code>, <code>parameter</code>, <code>wildcard</code>, or <code>group</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#custom-path","title":"Custom path","text":"<p>In some applications, you may not be able to use the <code>path-to-regexp</code> syntax, but still want to use this library for <code>match</code> and <code>compile</code>. For example:</p> <pre><code>import { TokenData, match } from \"path-to-regexp\";\n\nconst tokens = [\n  { type: \"text\", value: \"/\" },\n  { type: \"parameter\", name: \"foo\" },\n];\nconst path = new TokenData(tokens);\nconst fn = match(path);\n\nfn(\"/test\"); //=&gt; { path: '/test', index: 0, params: { foo: 'test' } }\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#errors","title":"Errors","text":"<p>An effort has been made to ensure ambiguous paths from previous releases throw an error. This means you might be seeing an error when things worked before.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#unexpected-or","title":"Unexpected <code>?</code> or <code>+</code>","text":"<p>In past releases, <code>?</code>, <code>*</code>, and <code>+</code> were used to denote optional or repeating parameters. As an alternative, try these:</p> <ul> <li>For optional (<code>?</code>), use an empty segment in a group such as <code>/:file{.:ext}</code>.</li> <li>For repeating (<code>+</code>), only wildcard matching is supported, such as <code>/*path</code>.</li> <li>For optional repeating (<code>*</code>), use a group and a wildcard parameter such as <code>/files{/*path}</code>.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#unexpected-etc","title":"Unexpected <code>(</code>, <code>)</code>, <code>[</code>, <code>]</code>, etc.","text":"<p>Previous versions of Path-to-RegExp used these for RegExp features. This version no longer supports them so they've been reserved to avoid ambiguity. To use these characters literally, escape them with a backslash, e.g. <code>\"\\\\(\"</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#missing-parameter-name","title":"Missing parameter name","text":"<p>Parameter names must be provided after <code>:</code> or <code>*</code>, and they must be a valid JavaScript identifier. If you want an parameter name that isn't a JavaScript identifier, such as starting with a number, you can wrap the name in quotes like <code>:\"my-name\"</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#unterminated-quote","title":"Unterminated quote","text":"<p>Parameter names can be wrapped in double quote characters, and this error means you forgot to close the quote character.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#express-4x","title":"Express &lt;= 4.x","text":"<p>Path-To-RegExp breaks compatibility with Express &lt;= <code>4.x</code> in the following ways:</p> <ul> <li>The wildcard <code>*</code> must have a name, matching the behavior of parameters <code>:</code>.</li> <li>The optional character <code>?</code> is no longer supported, use braces instead: <code>/:file{.:ext}</code>.</li> <li>Regexp characters are not supported.</li> <li>Some characters have been reserved to avoid confusion during upgrade (<code>()[]?+!</code>).</li> <li>Parameter names now support valid JavaScript identifiers, or quoted like <code>:\"this\"</code>.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/path-to-regexp/Readme/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/","title":"Index","text":"Picomatch <p> Blazing fast and accurate glob matcher written in JavaScript. No dependencies and full support for standard and extended Bash glob features, including braces, extglobs, POSIX brackets, and regular expressions. </p> <p> </p>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#why-picomatch","title":"Why picomatch?","text":"<ul> <li>Lightweight - No dependencies</li> <li>Minimal - Tiny API surface. Main export is a function that takes a glob pattern and returns a matcher function.</li> <li>Fast - Loads in about 2ms (that's several times faster than a single frame of a HD movie at 60fps)</li> <li>Performant - Use the returned matcher function to speed up repeat matching (like when watching files)</li> <li>Accurate matching - Using wildcards (<code>*</code> and <code>?</code>), globstars (<code>**</code>) for nested directories, advanced globbing with extglobs, braces, and POSIX brackets, and support for escaping special characters with <code>\\</code> or quotes.</li> <li>Well tested - Thousands of unit tests</li> </ul> <p>See the library comparison to other libraries.</p> <p> </p>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#table-of-contents","title":"Table of Contents","text":"Click to expand   - [Install](#install) - [Usage](#usage) - [API](#api)   * [picomatch](#picomatch)   * [.test](#test)   * [.matchBase](#matchbase)   * [.isMatch](#ismatch)   * [.parse](#parse)   * [.scan](#scan)   * [.compileRe](#compilere)   * [.makeRe](#makere)   * [.toRegex](#toregex) - [Options](#options)   * [Picomatch options](#picomatch-options)   * [Scan Options](#scan-options)   * [Options Examples](#options-examples) - [Globbing features](#globbing-features)   * [Basic globbing](#basic-globbing)   * [Advanced globbing](#advanced-globbing)   * [Braces](#braces)   * [Matching special characters as literals](#matching-special-characters-as-literals) - [Library Comparisons](#library-comparisons) - [Benchmarks](#benchmarks) - [Philosophies](#philosophies) - [About](#about)   * [Author](#author)   * [License](#license)  _(TOC generated by [verb](https://github.com/verbose/verb) using [markdown-toc](https://github.com/jonschlinkert/markdown-toc))_"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#install","title":"Install","text":"<p>Install with npm:</p> <pre><code>npm install --save picomatch\n</code></pre> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#usage","title":"Usage","text":"<p>The main export is a function that takes a glob pattern and an options object and returns a function for matching strings.</p> <pre><code>const pm = require('picomatch');\nconst isMatch = pm('*.js');\n\nconsole.log(isMatch('abcd')); //=&gt; false\nconsole.log(isMatch('a.js')); //=&gt; true\nconsole.log(isMatch('a.md')); //=&gt; false\nconsole.log(isMatch('a/b.js')); //=&gt; false\n</code></pre> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#api","title":"API","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#picomatch","title":"picomatch","text":"<p>Creates a matcher function from one or more glob patterns. The returned function takes a string to match as its first argument, and returns true if the string is a match. The returned matcher function also takes a boolean as the second argument that, when true, returns an object with additional information.</p> <p>Params</p> <ul> <li><code>globs</code> {String|Array}: One or more glob patterns.</li> <li><code>options</code> {Object=}</li> <li><code>returns</code> {Function=}: Returns a matcher function.</li> </ul> <p>Example</p> <pre><code>const picomatch = require('picomatch');\n// picomatch(glob[, options]);\n\nconst isMatch = picomatch('*.!(*a)');\nconsole.log(isMatch('a.a')); //=&gt; false\nconsole.log(isMatch('a.b')); //=&gt; true\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#test","title":".test","text":"<p>Test <code>input</code> with the given <code>regex</code>. This is used by the main <code>picomatch()</code> function to test the input string.</p> <p>Params</p> <ul> <li><code>input</code> {String}: String to test.</li> <li><code>regex</code> {RegExp}</li> <li><code>returns</code> {Object}: Returns an object with matching info.</li> </ul> <p>Example</p> <pre><code>const picomatch = require('picomatch');\n// picomatch.test(input, regex[, options]);\n\nconsole.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\n// { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#matchbase","title":".matchBase","text":"<p>Match the basename of a filepath.</p> <p>Params</p> <ul> <li><code>input</code> {String}: String to test.</li> <li><code>glob</code> {RegExp|String}: Glob pattern or regex created by .makeRe.</li> <li><code>returns</code> {Boolean}</li> </ul> <p>Example</p> <pre><code>const picomatch = require('picomatch');\n// picomatch.matchBase(input, glob[, options]);\nconsole.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#ismatch","title":".isMatch","text":"<p>Returns true if any of the given glob <code>patterns</code> match the specified <code>string</code>.</p> <p>Params</p> <ul> <li>{String|Array}: str The string to test.</li> <li>{String|Array}: patterns One or more glob patterns to use for matching.</li> <li>{Object}: See available options.</li> <li><code>returns</code> {Boolean}: Returns true if any patterns match <code>str</code></li> </ul> <p>Example</p> <pre><code>const picomatch = require('picomatch');\n// picomatch.isMatch(string, patterns[, options]);\n\nconsole.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=&gt; true\nconsole.log(picomatch.isMatch('a.a', 'b.*')); //=&gt; false\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#parse","title":".parse","text":"<p>Parse a glob pattern to create the source string for a regular expression.</p> <p>Params</p> <ul> <li><code>pattern</code> {String}</li> <li><code>options</code> {Object}</li> <li><code>returns</code> {Object}: Returns an object with useful properties and output to be used as a regex source string.</li> </ul> <p>Example</p> <pre><code>const picomatch = require('picomatch');\nconst result = picomatch.parse(pattern[, options]);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#scan","title":".scan","text":"<p>Scan a glob pattern to separate the pattern into segments.</p> <p>Params</p> <ul> <li><code>input</code> {String}: Glob pattern to scan.</li> <li><code>options</code> {Object}</li> <li><code>returns</code> {Object}: Returns an object with</li> </ul> <p>Example</p> <pre><code>const picomatch = require('picomatch');\n// picomatch.scan(input[, options]);\n\nconst result = picomatch.scan('!./foo/*.js');\nconsole.log(result);\n{ prefix: '!./',\n  input: '!./foo/*.js',\n  start: 3,\n  base: 'foo',\n  glob: '*.js',\n  isBrace: false,\n  isBracket: false,\n  isGlob: true,\n  isExtglob: false,\n  isGlobstar: false,\n  negated: true }\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#compilere","title":".compileRe","text":"<p>Compile a regular expression from the <code>state</code> object returned by the parse() method.</p> <p>Params</p> <ul> <li><code>state</code> {Object}</li> <li><code>options</code> {Object}</li> <li><code>returnOutput</code> {Boolean}: Intended for implementors, this argument allows you to return the raw output from the parser.</li> <li><code>returnState</code> {Boolean}: Adds the state to a <code>state</code> property on the returned regex. Useful for implementors and debugging.</li> <li><code>returns</code> {RegExp}</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#makere","title":".makeRe","text":"<p>Create a regular expression from a parsed glob pattern.</p> <p>Params</p> <ul> <li><code>state</code> {String}: The object returned from the <code>.parse</code> method.</li> <li><code>options</code> {Object}</li> <li><code>returnOutput</code> {Boolean}: Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result.</li> <li><code>returnState</code> {Boolean}: Implementors may use this argument to return the state from the parsed glob with the returned regular expression.</li> <li><code>returns</code> {RegExp}: Returns a regex created from the given pattern.</li> </ul> <p>Example</p> <pre><code>const picomatch = require('picomatch');\nconst state = picomatch.parse('*.js');\n// picomatch.compileRe(state[, options]);\n\nconsole.log(picomatch.compileRe(state));\n//=&gt; /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#toregex","title":".toRegex","text":"<p>Create a regular expression from the given regex source string.</p> <p>Params</p> <ul> <li><code>source</code> {String}: Regular expression source string.</li> <li><code>options</code> {Object}</li> <li><code>returns</code> {RegExp}</li> </ul> <p>Example</p> <pre><code>const picomatch = require('picomatch');\n// picomatch.toRegex(source[, options]);\n\nconst { output } = picomatch.parse('*.js');\nconsole.log(picomatch.toRegex(output));\n//=&gt; /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n</code></pre> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#options","title":"Options","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#picomatch-options","title":"Picomatch options","text":"<p>The following options may be used with the main <code>picomatch()</code> function or any of the methods on the picomatch API.</p> Option Type Default value Description <code>basename</code> <code>boolean</code> <code>false</code> If set, then patterns without slashes will be matched against the basename of the path if it contains slashes.  For example, <code>a?b</code> would match the path <code>/xyz/123/acb</code>, but not <code>/xyz/acb/123</code>. <code>bash</code> <code>boolean</code> <code>false</code> Follow bash matching rules more strictly - disallows backslashes as escape characters, and treats single stars as globstars (<code>**</code>). <code>capture</code> <code>boolean</code> <code>undefined</code> Return regex matches in supporting methods. <code>contains</code> <code>boolean</code> <code>undefined</code> Allows glob to match any part of the given string(s). <code>cwd</code> <code>string</code> <code>process.cwd()</code> Current working directory. Used by <code>picomatch.split()</code> <code>debug</code> <code>boolean</code> <code>undefined</code> Debug regular expressions when an error is thrown. <code>dot</code> <code>boolean</code> <code>false</code> Enable dotfile matching. By default, dotfiles are ignored unless a <code>.</code> is explicitly defined in the pattern, or <code>options.dot</code> is true <code>expandRange</code> <code>function</code> <code>undefined</code> Custom function for expanding ranges in brace patterns, such as <code>{a..z}</code>. The function receives the range values as two arguments, and it must return a string to be used in the generated regex. It's recommended that returned strings be wrapped in parentheses. <code>failglob</code> <code>boolean</code> <code>false</code> Throws an error if no matches are found. Based on the bash option of the same name. <code>fastpaths</code> <code>boolean</code> <code>true</code> To speed up processing, full parsing is skipped for a handful common glob patterns. Disable this behavior by setting this option to <code>false</code>. <code>flags</code> <code>string</code> <code>undefined</code> Regex flags to use in the generated regex. If defined, the <code>nocase</code> option will be overridden. format <code>function</code> <code>undefined</code> Custom function for formatting the returned string. This is useful for removing leading slashes, converting Windows paths to Posix paths, etc. <code>ignore</code> <code>array\\|string</code> <code>undefined</code> One or more glob patterns for excluding strings that should not be matched from the result. <code>keepQuotes</code> <code>boolean</code> <code>false</code> Retain quotes in the generated regex, since quotes may also be used as an alternative to backslashes. <code>literalBrackets</code> <code>boolean</code> <code>undefined</code> When <code>true</code>, brackets in the glob pattern will be escaped so that only literal brackets will be matched. <code>matchBase</code> <code>boolean</code> <code>false</code> Alias for <code>basename</code> <code>maxLength</code> <code>boolean</code> <code>65536</code> Limit the max length of the input string. An error is thrown if the input string is longer than this value. <code>nobrace</code> <code>boolean</code> <code>false</code> Disable brace matching, so that <code>{a,b}</code> and <code>{1..3}</code> would be treated as literal characters. <code>nobracket</code> <code>boolean</code> <code>undefined</code> Disable matching with regex brackets. <code>nocase</code> <code>boolean</code> <code>false</code> Make matching case-insensitive. Equivalent to the regex <code>i</code> flag. Note that this option is overridden by the <code>flags</code> option. <code>nodupes</code> <code>boolean</code> <code>true</code> Deprecated, use <code>nounique</code> instead. This option will be removed in a future major release. By default duplicates are removed. Disable uniquification by setting this option to false. <code>noext</code> <code>boolean</code> <code>false</code> Alias for <code>noextglob</code> <code>noextglob</code> <code>boolean</code> <code>false</code> Disable support for matching with extglobs (like <code>+(a\\|b)</code>) <code>noglobstar</code> <code>boolean</code> <code>false</code> Disable support for matching nested directories with globstars (<code>**</code>) <code>nonegate</code> <code>boolean</code> <code>false</code> Disable support for negating with leading <code>!</code> <code>noquantifiers</code> <code>boolean</code> <code>false</code> Disable support for regex quantifiers (like <code>a{1,2}</code>) and treat them as brace patterns to be expanded. onIgnore <code>function</code> <code>undefined</code> Function to be called on ignored items. onMatch <code>function</code> <code>undefined</code> Function to be called on matched items. onResult <code>function</code> <code>undefined</code> Function to be called on all items, regardless of whether or not they are matched or ignored. <code>posix</code> <code>boolean</code> <code>false</code> Support POSIX character classes (\"posix brackets\"). <code>posixSlashes</code> <code>boolean</code> <code>undefined</code> Convert all slashes in file paths to forward slashes. This does not convert slashes in the glob pattern itself <code>prepend</code> <code>boolean</code> <code>undefined</code> String to prepend to the generated regex used for matching. <code>regex</code> <code>boolean</code> <code>false</code> Use regular expression rules for <code>+</code> (instead of matching literal <code>+</code>), and for stars that follow closing parentheses or brackets (as in <code>)*</code> and <code>]*</code>). <code>strictBrackets</code> <code>boolean</code> <code>undefined</code> Throw an error if brackets, braces, or parens are imbalanced. <code>strictSlashes</code> <code>boolean</code> <code>undefined</code> When true, picomatch won't match trailing slashes with single stars. <code>unescape</code> <code>boolean</code> <code>undefined</code> Remove backslashes preceding escaped characters in the glob pattern. By default, backslashes are retained. <code>unixify</code> <code>boolean</code> <code>undefined</code> Alias for <code>posixSlashes</code>, for backwards compatibility. <p>picomatch has automatic detection for regex positive and negative lookbehinds. If the pattern contains a negative lookbehind, you must be using Node.js &gt;= 8.10 or else picomatch will throw an error.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#scan-options","title":"Scan Options","text":"<p>In addition to the main picomatch options, the following options may also be used with the .scan method.</p> Option Type Default value Description <code>tokens</code> <code>boolean</code> <code>false</code> When <code>true</code>, the returned object will include an array of tokens (objects), representing each path \"segment\" in the scanned glob pattern <code>parts</code> <code>boolean</code> <code>false</code> When <code>true</code>, the returned object will include an array of strings representing each path \"segment\" in the scanned glob pattern. This is automatically enabled when <code>options.tokens</code> is true <p>Example</p> <pre><code>const picomatch = require('picomatch');\nconst result = picomatch.scan('!./foo/*.js', { tokens: true });\nconsole.log(result);\n// {\n//   prefix: '!./',\n//   input: '!./foo/*.js',\n//   start: 3,\n//   base: 'foo',\n//   glob: '*.js',\n//   isBrace: false,\n//   isBracket: false,\n//   isGlob: true,\n//   isExtglob: false,\n//   isGlobstar: false,\n//   negated: true,\n//   maxDepth: 2,\n//   tokens: [\n//     { value: '!./', depth: 0, isGlob: false, negated: true, isPrefix: true },\n//     { value: 'foo', depth: 1, isGlob: false },\n//     { value: '*.js', depth: 1, isGlob: true }\n//   ],\n//   slashes: [ 2, 6 ],\n//   parts: [ 'foo', '*.js' ]\n// }\n</code></pre> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#options-examples","title":"Options Examples","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#optionsexpandrange","title":"options.expandRange","text":"<p>Type: <code>function</code></p> <p>Default: <code>undefined</code></p> <p>Custom function for expanding ranges in brace patterns. The fill-range library is ideal for this purpose, or you can use custom code to do whatever you need.</p> <p>Example</p> <p>The following example shows how to create a glob that matches a folder</p> <pre><code>const fill = require('fill-range');\nconst regex = pm.makeRe('foo/{01..25}/bar', {\n  expandRange(a, b) {\n    return `(${fill(a, b, { toRegex: true })})`;\n  }\n});\n\nconsole.log(regex);\n//=&gt; /^(?:foo\\/((?:0[1-9]|1[0-9]|2[0-5]))\\/bar)$/\n\nconsole.log(regex.test('foo/00/bar'))  // false\nconsole.log(regex.test('foo/01/bar'))  // true\nconsole.log(regex.test('foo/10/bar')) // true\nconsole.log(regex.test('foo/22/bar')) // true\nconsole.log(regex.test('foo/25/bar')) // true\nconsole.log(regex.test('foo/26/bar')) // false\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#optionsformat","title":"options.format","text":"<p>Type: <code>function</code></p> <p>Default: <code>undefined</code></p> <p>Custom function for formatting strings before they're matched.</p> <p>Example</p> <pre><code>// strip leading './' from strings\nconst format = str =&gt; str.replace(/^\\.\\//, '');\nconst isMatch = picomatch('foo/*.js', { format });\nconsole.log(isMatch('./foo/bar.js')); //=&gt; true\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#optionsonmatch","title":"options.onMatch","text":"<pre><code>const onMatch = ({ glob, regex, input, output }) =&gt; {\n  console.log({ glob, regex, input, output });\n};\n\nconst isMatch = picomatch('*', { onMatch });\nisMatch('foo');\nisMatch('bar');\nisMatch('baz');\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#optionsonignore","title":"options.onIgnore","text":"<pre><code>const onIgnore = ({ glob, regex, input, output }) =&gt; {\n  console.log({ glob, regex, input, output });\n};\n\nconst isMatch = picomatch('*', { onIgnore, ignore: 'f*' });\nisMatch('foo');\nisMatch('bar');\nisMatch('baz');\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#optionsonresult","title":"options.onResult","text":"<pre><code>const onResult = ({ glob, regex, input, output }) =&gt; {\n  console.log({ glob, regex, input, output });\n};\n\nconst isMatch = picomatch('*', { onResult, ignore: 'f*' });\nisMatch('foo');\nisMatch('bar');\nisMatch('baz');\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#globbing-features","title":"Globbing features","text":"<ul> <li>Basic globbing (Wildcard matching)</li> <li>Advanced globbing (extglobs, posix brackets, brace matching)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#basic-globbing","title":"Basic globbing","text":"Character Description <code>*</code> Matches any character zero or more times, excluding path separators. Does not match path separators or hidden files or directories (\"dotfiles\"), unless explicitly enabled by setting the <code>dot</code> option to <code>true</code>. <code>**</code> Matches any character zero or more times, including path separators. Note that <code>**</code> will only match path separators (<code>/</code>, and <code>\\\\</code> on Windows) when they are the only characters in a path segment. Thus, <code>foo**/bar</code> is equivalent to <code>foo*/bar</code>, and <code>foo/a**b/bar</code> is equivalent to <code>foo/a*b/bar</code>, and more than two consecutive stars in a glob path segment are regarded as a single star. Thus, <code>foo/***/bar</code> is equivalent to <code>foo/*/bar</code>. <code>?</code> Matches any character excluding path separators one time. Does not match path separators or leading dots. <code>[abc]</code> Matches any characters inside the brackets. For example, <code>[abc]</code> would match the characters <code>a</code>, <code>b</code> or <code>c</code>, and nothing else."},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#matching-behavior-vs-bash","title":"Matching behavior vs. Bash","text":"<p>Picomatch's matching features and expected results in unit tests are based on Bash's unit tests and the Bash 4.3 specification, with the following exceptions:</p> <ul> <li>Bash will match <code>foo/bar/baz</code> with <code>*</code>. Picomatch only matches nested directories with <code>**</code>.</li> <li>Bash greedily matches with negated extglobs. For example, Bash 4.3 says that <code>!(foo)*</code> should match <code>foo</code> and <code>foobar</code>, since the trailing <code>*</code> bracktracks to match the preceding pattern. This is very memory-inefficient, and IMHO, also incorrect. Picomatch would return <code>false</code> for both <code>foo</code> and <code>foobar</code>.</li> </ul> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#advanced-globbing","title":"Advanced globbing","text":"<ul> <li>extglobs</li> <li>POSIX brackets</li> <li>Braces</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#extglobs","title":"Extglobs","text":"Pattern Description <code>@(pattern)</code> Match only one consecutive occurrence of <code>pattern</code> <code>*(pattern)</code> Match zero or more consecutive occurrences of <code>pattern</code> <code>+(pattern)</code> Match one or more consecutive occurrences of <code>pattern</code> <code>?(pattern)</code> Match zero or one consecutive occurrences of <code>pattern</code> <code>!(pattern)</code> Match anything but <code>pattern</code> <p>Examples</p> <pre><code>const pm = require('picomatch');\n\n// *(pattern) matches ZERO or more of \"pattern\"\nconsole.log(pm.isMatch('a', 'a*(z)')); // true\nconsole.log(pm.isMatch('az', 'a*(z)')); // true\nconsole.log(pm.isMatch('azzz', 'a*(z)')); // true\n\n// +(pattern) matches ONE or more of \"pattern\"\nconsole.log(pm.isMatch('a', 'a*(z)')); // true\nconsole.log(pm.isMatch('az', 'a*(z)')); // true\nconsole.log(pm.isMatch('azzz', 'a*(z)')); // true\n\n// supports multiple extglobs\nconsole.log(pm.isMatch('foo.bar', '!(foo).!(bar)')); // false\n\n// supports nested extglobs\nconsole.log(pm.isMatch('foo.bar', '!(!(foo)).!(!(bar))')); // true\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#posix-brackets","title":"POSIX brackets","text":"<p>POSIX classes are disabled by default. Enable this feature by setting the <code>posix</code> option to true.</p> <p>Enable POSIX bracket support</p> <pre><code>console.log(pm.makeRe('[[:word:]]+', { posix: true }));\n//=&gt; /^(?:(?=.)[A-Za-z0-9_]+\\/?)$/\n</code></pre> <p>Supported POSIX classes</p> <p>The following named POSIX bracket expressions are supported:</p> <ul> <li><code>[:alnum:]</code> - Alphanumeric characters, equ <code>[a-zA-Z0-9]</code></li> <li><code>[:alpha:]</code> - Alphabetical characters, equivalent to <code>[a-zA-Z]</code>.</li> <li><code>[:ascii:]</code> - ASCII characters, equivalent to <code>[\\\\x00-\\\\x7F]</code>.</li> <li><code>[:blank:]</code> - Space and tab characters, equivalent to <code>[ \\\\t]</code>.</li> <li><code>[:cntrl:]</code> - Control characters, equivalent to <code>[\\\\x00-\\\\x1F\\\\x7F]</code>.</li> <li><code>[:digit:]</code> - Numerical digits, equivalent to <code>[0-9]</code>.</li> <li><code>[:graph:]</code> - Graph characters, equivalent to <code>[\\\\x21-\\\\x7E]</code>.</li> <li><code>[:lower:]</code> - Lowercase letters, equivalent to <code>[a-z]</code>.</li> <li><code>[:print:]</code> - Print characters, equivalent to <code>[\\\\x20-\\\\x7E ]</code>.</li> <li><code>[:punct:]</code> - Punctuation and symbols, equivalent to <code>[\\\\-!\"#$%&amp;\\'()\\\\*+,./:;&lt;=&gt;?@[\\\\]^_</code>~]`.</li> <li><code>[:space:]</code> - Extended space characters, equivalent to <code>[ \\\\t\\\\r\\\\n\\\\v\\\\f]</code>.</li> <li><code>[:upper:]</code> - Uppercase letters, equivalent to <code>[A-Z]</code>.</li> <li><code>[:word:]</code> -  Word characters (letters, numbers and underscores), equivalent to <code>[A-Za-z0-9_]</code>.</li> <li><code>[:xdigit:]</code> - Hexadecimal digits, equivalent to <code>[A-Fa-f0-9]</code>.</li> </ul> <p>See the Bash Reference Manual for more information.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#braces","title":"Braces","text":"<p>Picomatch does not do brace expansion. For brace expansion and advanced matching with braces, use micromatch instead. Picomatch has very basic support for braces.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#matching-special-characters-as-literals","title":"Matching special characters as literals","text":"<p>If you wish to match the following special characters in a filepath, and you want to use these characters in your glob pattern, they must be escaped with backslashes or quotes:</p> <p>Special Characters</p> <p>Some characters that are used for matching in regular expressions are also regarded as valid file path characters on some platforms.</p> <p>To match any of the following characters as literals: `$^*+?()[]</p> <p>Examples:</p> <pre><code>console.log(pm.makeRe('foo/bar \\\\(1\\\\)'));\nconsole.log(pm.makeRe('foo/bar \\\\(1\\\\)'));\n</code></pre> <p> </p>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#library-comparisons","title":"Library Comparisons","text":"<p>The following table shows which features are supported by minimatch, micromatch, picomatch, nanomatch, extglob, braces, and expand-brackets.</p> Feature <code>minimatch</code> <code>micromatch</code> <code>picomatch</code> <code>nanomatch</code> <code>extglob</code> <code>braces</code> <code>expand-brackets</code> Wildcard matching (<code>*?+</code>) \u2714 \u2714 \u2714 \u2714 - - - Advancing globbing \u2714 \u2714 \u2714 - - - - Brace matching \u2714 \u2714 \u2714 - - \u2714 - Brace expansion \u2714 \u2714 - - - \u2714 - Extglobs partial \u2714 \u2714 - \u2714 - - Posix brackets - \u2714 \u2714 - - - \u2714 Regular expression syntax - \u2714 \u2714 \u2714 \u2714 - \u2714 File system operations - - - - - - - <p> </p>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#benchmarks","title":"Benchmarks","text":"<p>Performance comparison of picomatch and minimatch.</p> <pre><code># .makeRe star\n  picomatch x 1,993,050 ops/sec \u00b10.51% (91 runs sampled)\n  minimatch x 627,206 ops/sec \u00b11.96% (87 runs sampled))\n\n# .makeRe star; dot=true\n  picomatch x 1,436,640 ops/sec \u00b10.62% (91 runs sampled)\n  minimatch x 525,876 ops/sec \u00b10.60% (88 runs sampled)\n\n# .makeRe globstar\n  picomatch x 1,592,742 ops/sec \u00b10.42% (90 runs sampled)\n  minimatch x 962,043 ops/sec \u00b11.76% (91 runs sampled)d)\n\n# .makeRe globstars\n  picomatch x 1,615,199 ops/sec \u00b10.35% (94 runs sampled)\n  minimatch x 477,179 ops/sec \u00b11.33% (91 runs sampled)\n\n# .makeRe with leading star\n  picomatch x 1,220,856 ops/sec \u00b10.40% (92 runs sampled)\n  minimatch x 453,564 ops/sec \u00b11.43% (94 runs sampled)\n\n# .makeRe - basic braces\n  picomatch x 392,067 ops/sec \u00b10.70% (90 runs sampled)\n  minimatch x 99,532 ops/sec \u00b12.03% (87 runs sampled))\n</code></pre> <p> </p>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#philosophies","title":"Philosophies","text":"<p>The goal of this library is to be blazing fast, without compromising on accuracy.</p> <p>Accuracy</p> <p>The number one of goal of this library is accuracy. However, it's not unusual for different glob implementations to have different rules for matching behavior, even with simple wildcard matching. It gets increasingly more complicated when combinations of different features are combined, like when extglobs are combined with globstars, braces, slashes, and so on: <code>!(**/{a,b,*/c})</code>.</p> <p>Thus, given that there is no canonical glob specification to use as a single source of truth when differences of opinion arise regarding behavior, sometimes we have to implement our best judgement and rely on feedback from users to make improvements.</p> <p>Performance</p> <p>Although this library performs well in benchmarks, and in most cases it's faster than other popular libraries we benchmarked against, we will always choose accuracy over performance. It's not helpful to anyone if our library is faster at returning the wrong answer.</p> <p> </p>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#about","title":"About","text":"Contributing  Pull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).  Please read the [contributing guide](.github/contributing.md) for advice on opening issues, pull requests, and coding standards.   Running Tests  Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:  <pre><code>npm install &amp;&amp; npm test\n</code></pre> Building docs  _(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_  To generate the readme, run the following command:  <pre><code>npm install -g verbose/verb#dev verb-generate-readme &amp;&amp; verb\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#author","title":"Author","text":"<p>Jon Schlinkert</p> <ul> <li>GitHub Profile</li> <li>Twitter Profile</li> <li>LinkedIn Profile</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/#license","title":"License","text":"<p>Copyright \u00a9 2017-present, Jon Schlinkert. Released under the MIT License.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/","title":"Release history","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p> Guiding Principles  - Changelogs are for humans, not machines. - There should be an entry for every single version. - The same types of changes should be grouped. - Versions and sections should be linkable. - The latest version comes first. - The release date of each versions is displayed. - Mention whether you follow Semantic Versioning.   Types of changes  Changelog entries are classified using the following labels _(from [keep-a-changelog](http://keepachangelog.com/)_):  - `Added` for new features. - `Changed` for changes in existing functionality. - `Deprecated` for soon-to-be removed features. - `Removed` for now removed features. - `Fixed` for any bug fixes. - `Security` in case of vulnerabilities."},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#231-2022-01-02","title":"2.3.1 (2022-01-02)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#fixed","title":"Fixed","text":"<ul> <li>Fixes bug when a pattern containing an expression after the closing parenthesis (<code>/!(*.d).{ts,tsx}</code>) was incorrectly converted to regexp (9f241ef).</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#changed","title":"Changed","text":"<ul> <li>Some documentation improvements (f81d236, 421e0e7).</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#230-2021-05-21","title":"2.3.0 (2021-05-21)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#fixed_1","title":"Fixed","text":"<ul> <li>Fixes bug where file names with two dots were not being matched consistently with negation extglobs containing a star (56083ef)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#223-2021-04-10","title":"2.2.3 (2021-04-10)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#fixed_2","title":"Fixed","text":"<ul> <li>Do not skip pattern seperator for square brackets (fb08a30).</li> <li>Set negatedExtGlob also if it does not span the whole pattern (032e3f5).</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#222-2020-03-21","title":"2.2.2 (2020-03-21)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#fixed_3","title":"Fixed","text":"<ul> <li>Correctly handle parts of the pattern after parentheses in the <code>scan</code> method (e15b920).</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#221-2020-01-04","title":"2.2.1 (2020-01-04)","text":"<ul> <li>Fixes #49, so that braces with no sets or ranges are now propertly treated as literals.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#220-2020-01-04","title":"2.2.0 (2020-01-04)","text":"<ul> <li>Disable fastpaths mode for the parse method (5b8d33f)</li> <li>Add <code>tokens</code>, <code>slashes</code>, and <code>parts</code> to the object returned by <code>picomatch.scan()</code>.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#210-2019-10-31","title":"2.1.0 (2019-10-31)","text":"<ul> <li>add benchmarks for scan (4793b92)</li> <li>Add eslint object-curly-spacing rule (707c650)</li> <li>Add prefer-const eslint rule (5c7501c)</li> <li>Add support for nonegate in scan API (275c9b9)</li> <li>Change lets to consts. Move root import up. (4840625)</li> <li>closes https://github.com/micromatch/picomatch/issues/21 (766bcb0)</li> <li>Fix \"Extglobs\" table in readme (eb19da8)</li> <li>fixes https://github.com/micromatch/picomatch/issues/20 (9caca07)</li> <li>fixes https://github.com/micromatch/picomatch/issues/26 (fa58f45)</li> <li>Lint test (d433a34)</li> <li>lint unit tests (0159b55)</li> <li>Make scan work with noext (6c02e03)</li> <li>minor linting (c2a2b87)</li> <li>minor parser improvements (197671d)</li> <li>remove eslint since it... (07876fa)</li> <li>remove funding file (8ebe96d)</li> <li>Remove unused funks (cbc6d54)</li> <li>Run eslint during pretest, fix existing eslint findings (0682367)</li> <li>support <code>noparen</code> in scan (3d37569)</li> <li>update changelog (7b34e77)</li> <li>update travis (777f038)</li> <li>Use eslint-disable-next-line instead of eslint-disable (4e7c1fd)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#207-2019-05-14","title":"2.0.7 (2019-05-14)","text":"<ul> <li>2.0.7 (9eb9a71)</li> <li>supports lookbehinds (1f63f7e)</li> <li>update .verb.md file with typo change (2741279)</li> <li>fix: typo in README (0753e44)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#204-2019-04-10","title":"2.0.4 (2019-04-10)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#fixed_4","title":"Fixed","text":"<ul> <li>Readme link fixed by @danez.</li> <li><code>options.capture</code> now works as expected when fastpaths are enabled. See https://github.com/micromatch/picomatch/pull/12/commits/26aefd71f1cfaf95c37f1c1fcab68a693b037304. Thanks to @DrPizza.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#200-2019-04-10","title":"2.0.0 (2019-04-10)","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#added","title":"Added","text":"<ul> <li>Adds support for <code>options.onIgnore</code>. See the readme for details</li> <li>Adds support for <code>options.onResult</code>. See the readme for details</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#breaking-changes","title":"Breaking changes","text":"<ul> <li>The unixify option was renamed to <code>windows</code></li> <li>caching and all related options and methods have been removed</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#100-2018-11-05","title":"1.0.0 (2018-11-05)","text":"<ul> <li>adds <code>.onMatch</code> option</li> <li>improvements to <code>.scan</code> method</li> <li>numerous improvements and optimizations for matching and parsing</li> <li>better windows path handling</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/picomatch/CHANGELOG/#010-2017-04-13","title":"0.1.0 - 2017-04-13","text":"<p>First release.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/","title":"proxy-addr","text":"<p>Determine address of proxied request</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/#install","title":"Install","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install proxy-addr\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/#api","title":"API","text":"<pre><code>var proxyaddr = require('proxy-addr')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/#proxyaddrreq-trust","title":"proxyaddr(req, trust)","text":"<p>Return the address of the request, using the given <code>trust</code> parameter.</p> <p>The <code>trust</code> argument is a function that returns <code>true</code> if you trust the address, <code>false</code> if you don't. The closest untrusted address is returned.</p> <pre><code>proxyaddr(req, function (addr) { return addr === '127.0.0.1' })\nproxyaddr(req, function (addr, i) { return i &lt; 1 })\n</code></pre> <p>The <code>trust</code> arugment may also be a single IP address string or an array of trusted addresses, as plain IP addresses, CIDR-formatted strings, or IP/netmask strings.</p> <pre><code>proxyaddr(req, '127.0.0.1')\nproxyaddr(req, ['127.0.0.0/8', '10.0.0.0/8'])\nproxyaddr(req, ['127.0.0.0/255.0.0.0', '192.168.0.0/255.255.0.0'])\n</code></pre> <p>This module also supports IPv6. Your IPv6 addresses will be normalized automatically (i.e. <code>fe80::00ed:1</code> equals <code>fe80:0:0:0:0:0:ed:1</code>).</p> <pre><code>proxyaddr(req, '::1')\nproxyaddr(req, ['::1/128', 'fe80::/10'])\n</code></pre> <p>This module will automatically work with IPv4-mapped IPv6 addresses as well to support node.js in IPv6-only mode. This means that you do not have to specify both <code>::ffff:a00:1</code> and <code>10.0.0.1</code>.</p> <p>As a convenience, this module also takes certain pre-defined names in addition to IP addresses, which expand into IP addresses:</p> <pre><code>proxyaddr(req, 'loopback')\nproxyaddr(req, ['loopback', 'fc00:ac:1ab5:fff::1/64'])\n</code></pre> <ul> <li><code>loopback</code>: IPv4 and IPv6 loopback addresses (like <code>::1</code> and     <code>127.0.0.1</code>).</li> <li><code>linklocal</code>: IPv4 and IPv6 link-local addresses (like     <code>fe80::1:1:1:1</code> and <code>169.254.0.1</code>).</li> <li><code>uniquelocal</code>: IPv4 private addresses and IPv6 unique-local     addresses (like <code>fc00:ac:1ab5:fff::1</code> and <code>192.168.0.1</code>).</li> </ul> <p>When <code>trust</code> is specified as a function, it will be called for each address to determine if it is a trusted address. The function is given two arguments: <code>addr</code> and <code>i</code>, where <code>addr</code> is a string of the address to check and <code>i</code> is a number that represents the distance from the socket address.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/#proxyaddrallreq-trust","title":"proxyaddr.all(req, [trust])","text":"<p>Return all the addresses of the request, optionally stopping at the first untrusted. This array is ordered from closest to furthest (i.e. <code>arr[0] === req.connection.remoteAddress</code>).</p> <pre><code>proxyaddr.all(req)\n</code></pre> <p>The optional <code>trust</code> argument takes the same arguments as <code>trust</code> does in <code>proxyaddr(req, trust)</code>.</p> <pre><code>proxyaddr.all(req, 'loopback')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/#proxyaddrcompileval","title":"proxyaddr.compile(val)","text":"<p>Compiles argument <code>val</code> into a <code>trust</code> function. This function takes the same arguments as <code>trust</code> does in <code>proxyaddr(req, trust)</code> and returns a function suitable for <code>proxyaddr(req, trust)</code>.</p> <pre><code>var trust = proxyaddr.compile('loopback')\nvar addr = proxyaddr(req, trust)\n</code></pre> <p>This function is meant to be optimized for use against every request. It is recommend to compile a trust function up-front for the trusted configuration and pass that to <code>proxyaddr(req, trust)</code> for each request.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/#testing","title":"Testing","text":"<pre><code>$ npm test\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/#benchmarks","title":"Benchmarks","text":"<pre><code>$ npm run-script bench\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/","title":"2.0.7 / 2021-05-31","text":"<ul> <li>deps: forwarded@0.2.0<ul> <li>Use <code>req.socket</code> over deprecated <code>req.connection</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#206-2020-02-24","title":"2.0.6 / 2020-02-24","text":"<ul> <li>deps: ipaddr.js@1.9.1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#205-2019-04-16","title":"2.0.5 / 2019-04-16","text":"<ul> <li>deps: ipaddr.js@1.9.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#204-2018-07-26","title":"2.0.4 / 2018-07-26","text":"<ul> <li>deps: ipaddr.js@1.8.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#203-2018-02-19","title":"2.0.3 / 2018-02-19","text":"<ul> <li>deps: ipaddr.js@1.6.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#202-2017-09-24","title":"2.0.2 / 2017-09-24","text":"<ul> <li>deps: forwarded@~0.1.2<ul> <li>perf: improve header parsing</li> <li>perf: reduce overhead when no <code>X-Forwarded-For</code> header</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#201-2017-09-10","title":"2.0.1 / 2017-09-10","text":"<ul> <li>deps: forwarded@~0.1.1<ul> <li>Fix trimming leading / trailing OWS</li> <li>perf: hoist regular expression</li> </ul> </li> <li>deps: ipaddr.js@1.5.2</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#200-2017-08-08","title":"2.0.0 / 2017-08-08","text":"<ul> <li>Drop support for Node.js below 0.10</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#115-2017-07-25","title":"1.1.5 / 2017-07-25","text":"<ul> <li>Fix array argument being altered</li> <li>deps: ipaddr.js@1.4.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#114-2017-03-24","title":"1.1.4 / 2017-03-24","text":"<ul> <li>deps: ipaddr.js@1.3.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#113-2017-01-14","title":"1.1.3 / 2017-01-14","text":"<ul> <li>deps: ipaddr.js@1.2.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#112-2016-05-29","title":"1.1.2 / 2016-05-29","text":"<ul> <li>deps: ipaddr.js@1.1.1<ul> <li>Fix IPv6-mapped IPv4 validation edge cases</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#111-2016-05-03","title":"1.1.1 / 2016-05-03","text":"<ul> <li>Fix regression matching mixed versions against multiple subnets</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#110-2016-05-01","title":"1.1.0 / 2016-05-01","text":"<ul> <li>Fix accepting various invalid netmasks<ul> <li>IPv4 netmasks must be contingous</li> <li>IPv6 addresses cannot be used as a netmask</li> </ul> </li> <li>deps: ipaddr.js@1.1.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#1010-2015-12-09","title":"1.0.10 / 2015-12-09","text":"<ul> <li>deps: ipaddr.js@1.0.5<ul> <li>Fix regression in <code>isValid</code> with non-string arguments</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#109-2015-12-01","title":"1.0.9 / 2015-12-01","text":"<ul> <li>deps: ipaddr.js@1.0.4<ul> <li>Fix accepting some invalid IPv6 addresses</li> <li>Reject CIDRs with negative or overlong masks</li> </ul> </li> <li>perf: enable strict mode</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#108-2015-05-10","title":"1.0.8 / 2015-05-10","text":"<ul> <li>deps: ipaddr.js@1.0.1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#107-2015-03-16","title":"1.0.7 / 2015-03-16","text":"<ul> <li>deps: ipaddr.js@0.1.9<ul> <li>Fix OOM on certain inputs to <code>isValid</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#106-2015-02-01","title":"1.0.6 / 2015-02-01","text":"<ul> <li>deps: ipaddr.js@0.1.8</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#105-2015-01-08","title":"1.0.5 / 2015-01-08","text":"<ul> <li>deps: ipaddr.js@0.1.6</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#104-2014-11-23","title":"1.0.4 / 2014-11-23","text":"<ul> <li>deps: ipaddr.js@0.1.5<ul> <li>Fix edge cases with <code>isValid</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#103-2014-09-21","title":"1.0.3 / 2014-09-21","text":"<ul> <li>Use <code>forwarded</code> npm module</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#102-2014-09-18","title":"1.0.2 / 2014-09-18","text":"<ul> <li>Fix a global leak when multiple subnets are trusted</li> <li>Support Node.js 0.6</li> <li>deps: ipaddr.js@0.1.3</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#101-2014-06-03","title":"1.0.1 / 2014-06-03","text":"<ul> <li>Fix links in npm package</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#100-2014-05-08","title":"1.0.0 / 2014-05-08","text":"<ul> <li>Add <code>trust</code> argument to determine proxy trust on<ul> <li>Accepts custom function</li> <li>Accepts IPv4/IPv6 address(es)</li> <li>Accepts subnets</li> <li>Accepts pre-defined names</li> </ul> </li> <li>Add optional <code>trust</code> argument to <code>proxyaddr.all</code> to     stop at first untrusted</li> <li>Add <code>proxyaddr.compile</code> to pre-compile <code>trust</code> function     to make subsequent calls faster</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#001-2014-05-04","title":"0.0.1 / 2014-05-04","text":"<ul> <li>Fix bad npm publish</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/proxy-addr/HISTORY/#000-2014-05-04","title":"0.0.0 / 2014-05-04","text":"<ul> <li>Initial release</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/pstree.remy/","title":"pstree.remy","text":"<p>Cross platform ps-tree (including unix flavours without ps)</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/pstree.remy/#installation","title":"Installation","text":"<pre><code>npm install pstree.remy\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/pstree.remy/#usage","title":"Usage","text":"<pre><code>const psTree = psTree require('pstree.remy');\n\npsTree(PID, (err, pids) =&gt; {\n  if (err) {\n    console.error(err);\n  }\n  console.log(pids)\n});\n\nconsole.log(psTree.hasPS\n  ? \"This platform has the ps shell command\"\n  : \"This platform does not have the ps shell command\");\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/","title":"Punycode.js","text":"<p>Punycode.js is a robust Punycode converter that fully complies to RFC 3492 and RFC 5891.</p> <p>This JavaScript library is the result of comparing, optimizing and documenting different open-source implementations of the Punycode algorithm:</p> <ul> <li>The C example code from RFC 3492</li> <li><code>punycode.c</code> by Markus W. Scherer (IBM)</li> <li><code>punycode.c</code> by Ben Noordhuis</li> <li>JavaScript implementation by some</li> <li><code>punycode.js</code> by Ben Noordhuis (note: not fully compliant)</li> </ul> <p>This project was bundled with Node.js from v0.6.2+ until v7 (soft-deprecated).</p> <p>This project provides a CommonJS module that uses ES2015+ features and JavaScript module, which work in modern Node.js versions and browsers. For the old Punycode.js version that offers the same functionality in a UMD build with support for older pre-ES2015 runtimes, including Rhino, Ringo, and Narwhal, see v1.4.1.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/#installation","title":"Installation","text":"<p>Via npm:</p> <pre><code>npm install punycode --save\n</code></pre> <p>In Node.js:</p> <p>\u26a0\ufe0f Note that userland modules don't hide core modules. For example, <code>require('punycode')</code> still imports the deprecated core module even if you executed <code>npm install punycode</code>. Use <code>require('punycode/')</code> to import userland modules rather than core modules.</p> <pre><code>const punycode = require('punycode/');\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/#api","title":"API","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/#punycodedecodestring","title":"<code>punycode.decode(string)</code>","text":"<p>Converts a Punycode string of ASCII symbols to a string of Unicode symbols.</p> <pre><code>// decode domain name parts\npunycode.decode('maana-pta'); // 'ma\u00f1ana'\npunycode.decode('--dqo34k'); // '\u2603-\u2318'\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/#punycodeencodestring","title":"<code>punycode.encode(string)</code>","text":"<p>Converts a string of Unicode symbols to a Punycode string of ASCII symbols.</p> <pre><code>// encode domain name parts\npunycode.encode('ma\u00f1ana'); // 'maana-pta'\npunycode.encode('\u2603-\u2318'); // '--dqo34k'\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/#punycodetounicodeinput","title":"<code>punycode.toUnicode(input)</code>","text":"<p>Converts a Punycode string representing a domain name or an email address to Unicode. Only the Punycoded parts of the input will be converted, i.e. it doesn\u2019t matter if you call it on a string that has already been converted to Unicode.</p> <pre><code>// decode domain names\npunycode.toUnicode('xn--maana-pta.com');\n// \u2192 'ma\u00f1ana.com'\npunycode.toUnicode('xn----dqo34k.com');\n// \u2192 '\u2603-\u2318.com'\n\n// decode email addresses\npunycode.toUnicode('\u0434\u0436\u0443\u043c\u043b\u0430@xn--p-8sbkgc5ag7bhce.xn--ba-lmcq');\n// \u2192 '\u0434\u0436\u0443\u043c\u043b\u0430@\u0434\u0436p\u0443\u043c\u043b\u0430\u0442\u0435\u0441\u0442.b\u0440\u0444a'\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/#punycodetoasciiinput","title":"<code>punycode.toASCII(input)</code>","text":"<p>Converts a lowercased Unicode string representing a domain name or an email address to Punycode. Only the non-ASCII parts of the input will be converted, i.e. it doesn\u2019t matter if you call it with a domain that\u2019s already in ASCII.</p> <pre><code>// encode domain names\npunycode.toASCII('ma\u00f1ana.com');\n// \u2192 'xn--maana-pta.com'\npunycode.toASCII('\u2603-\u2318.com');\n// \u2192\u00a0'xn----dqo34k.com'\n\n// encode email addresses\npunycode.toASCII('\u0434\u0436\u0443\u043c\u043b\u0430@\u0434\u0436p\u0443\u043c\u043b\u0430\u0442\u0435\u0441\u0442.b\u0440\u0444a');\n// \u2192 '\u0434\u0436\u0443\u043c\u043b\u0430@xn--p-8sbkgc5ag7bhce.xn--ba-lmcq'\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/#punycodeucs2","title":"<code>punycode.ucs2</code>","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/#punycodeucs2decodestring","title":"<code>punycode.ucs2.decode(string)</code>","text":"<p>Creates an array containing the numeric code point values of each Unicode symbol in the string. While JavaScript uses UCS-2 internally, this function will convert a pair of surrogate halves (each of which UCS-2 exposes as separate characters) into a single code point, matching UTF-16.</p> <pre><code>punycode.ucs2.decode('abc');\n// \u2192 [0x61, 0x62, 0x63]\n// surrogate pair for U+1D306 TETRAGRAM FOR CENTRE:\npunycode.ucs2.decode('\\uD834\\uDF06');\n// \u2192 [0x1D306]\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/#punycodeucs2encodecodepoints","title":"<code>punycode.ucs2.encode(codePoints)</code>","text":"<p>Creates a string based on an array of numeric code point values.</p> <pre><code>punycode.ucs2.encode([0x61, 0x62, 0x63]);\n// \u2192 'abc'\npunycode.ucs2.encode([0x1D306]);\n// \u2192 '\\uD834\\uDF06'\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/#punycodeversion","title":"<code>punycode.version</code>","text":"<p>A string representing the current Punycode.js version number.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/#for-maintainers","title":"For maintainers","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/#how-to-publish-a-new-release","title":"How to publish a new release","text":"<ol> <li> <p>On the <code>main</code> branch, bump the version number in <code>package.json</code>:</p> <pre><code>npm version patch -m 'Release v%s'\n</code></pre> <p>Instead of <code>patch</code>, use <code>minor</code> or <code>major</code> as needed.</p> <p>Note that this produces a Git commit + tag.</p> </li> <li> <p>Push the release commit and tag:</p> <pre><code>git push &amp;&amp; git push --tags\n</code></pre> <p>Our CI then automatically publishes the new release to npm, under both the <code>punycode</code> and <code>punycode.js</code> names.</p> </li> </ol>"},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/#author","title":"Author","text":"Mathias Bynens"},{"location":"system-desing/crud-app/JS/server/node_modules/punycode/#license","title":"License","text":"<p>Punycode.js is available under the MIT license.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/","title":"Index","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/qs/#qs","title":"qs","text":"<p>A querystring parsing and stringifying library with some added security.</p> <p>Lead Maintainer: Jordan Harband</p> <p>The qs module was originally created and maintained by TJ Holowaychuk.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/#usage","title":"Usage","text":"<pre><code>var qs = require('qs');\nvar assert = require('assert');\n\nvar obj = qs.parse('a=c');\nassert.deepEqual(obj, { a: 'c' });\n\nvar str = qs.stringify(obj);\nassert.equal(str, 'a=c');\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/#parsing-objects","title":"Parsing Objects","text":"<p> <pre><code>qs.parse(string, [options]);\n</code></pre></p> <p>qs allows you to create nested objects within your query strings, by surrounding the name of sub-keys with square brackets <code>[]</code>. For example, the string <code>'foo[bar]=baz'</code> converts to:</p> <pre><code>assert.deepEqual(qs.parse('foo[bar]=baz'), {\n    foo: {\n        bar: 'baz'\n    }\n});\n</code></pre> <p>When using the <code>plainObjects</code> option the parsed value is returned as a null object, created via <code>{ __proto__: null }</code> and as such you should be aware that prototype methods will not exist on it and a user may set those names to whatever value they like:</p> <pre><code>var nullObject = qs.parse('a[hasOwnProperty]=b', { plainObjects: true });\nassert.deepEqual(nullObject, { a: { hasOwnProperty: 'b' } });\n</code></pre> <p>By default parameters that would overwrite properties on the object prototype are ignored, if you wish to keep the data from those fields either use <code>plainObjects</code> as mentioned above, or set <code>allowPrototypes</code> to <code>true</code> which will allow user input to overwrite those properties. WARNING It is generally a bad idea to enable this option as it can cause problems when attempting to use the properties that have been overwritten. Always be careful with this option.</p> <pre><code>var protoObject = qs.parse('a[hasOwnProperty]=b', { allowPrototypes: true });\nassert.deepEqual(protoObject, { a: { hasOwnProperty: 'b' } });\n</code></pre> <p>URI encoded strings work too:</p> <pre><code>assert.deepEqual(qs.parse('a%5Bb%5D=c'), {\n    a: { b: 'c' }\n});\n</code></pre> <p>You can also nest your objects, like <code>'foo[bar][baz]=foobarbaz'</code>:</p> <pre><code>assert.deepEqual(qs.parse('foo[bar][baz]=foobarbaz'), {\n    foo: {\n        bar: {\n            baz: 'foobarbaz'\n        }\n    }\n});\n</code></pre> <p>By default, when nesting objects qs will only parse up to 5 children deep. This means if you attempt to parse a string like <code>'a[b][c][d][e][f][g][h][i]=j'</code> your resulting object will be:</p> <pre><code>var expected = {\n    a: {\n        b: {\n            c: {\n                d: {\n                    e: {\n                        f: {\n                            '[g][h][i]': 'j'\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nvar string = 'a[b][c][d][e][f][g][h][i]=j';\nassert.deepEqual(qs.parse(string), expected);\n</code></pre> <p>This depth can be overridden by passing a <code>depth</code> option to <code>qs.parse(string, [options])</code>:</p> <pre><code>var deep = qs.parse('a[b][c][d][e][f][g][h][i]=j', { depth: 1 });\nassert.deepEqual(deep, { a: { b: { '[c][d][e][f][g][h][i]': 'j' } } });\n</code></pre> <p>You can configure qs to throw an error when parsing nested input beyond this depth using the <code>strictDepth</code> option (defaulted to false):</p> <pre><code>try {\n    qs.parse('a[b][c][d][e][f][g][h][i]=j', { depth: 1, strictDepth: true });\n} catch (err) {\n    assert(err instanceof RangeError);\n    assert.strictEqual(err.message, 'Input depth exceeded depth option of 1 and strictDepth is true');\n}\n</code></pre> <p>The depth limit helps mitigate abuse when qs is used to parse user input, and it is recommended to keep it a reasonably small number. The strictDepth option adds a layer of protection by throwing an error when the limit is exceeded, allowing you to catch and handle such cases.</p> <p>For similar reasons, by default qs will only parse up to 1000 parameters. This can be overridden by passing a <code>parameterLimit</code> option:</p> <pre><code>var limited = qs.parse('a=b&amp;c=d', { parameterLimit: 1 });\nassert.deepEqual(limited, { a: 'b' });\n</code></pre> <p>If you want an error to be thrown whenever the a limit is exceeded (eg, <code>parameterLimit</code>, <code>arrayLimit</code>), set the <code>throwOnLimitExceeded</code> option to <code>true</code>. This option will generate a descriptive error if the query string exceeds a configured limit. <pre><code>try {\n    qs.parse('a=1&amp;b=2&amp;c=3&amp;d=4', { parameterLimit: 3, throwOnLimitExceeded: true });\n} catch (err) {\n    assert(err instanceof Error);\n    assert.strictEqual(err.message, 'Parameter limit exceeded. Only 3 parameters allowed.');\n}\n</code></pre></p> <p>When <code>throwOnLimitExceeded</code> is set to <code>false</code> (default), qs will parse up to the specified <code>parameterLimit</code> and ignore the rest without throwing an error.</p> <p>To bypass the leading question mark, use <code>ignoreQueryPrefix</code>:</p> <pre><code>var prefixed = qs.parse('?a=b&amp;c=d', { ignoreQueryPrefix: true });\nassert.deepEqual(prefixed, { a: 'b', c: 'd' });\n</code></pre> <p>An optional delimiter can also be passed:</p> <pre><code>var delimited = qs.parse('a=b;c=d', { delimiter: ';' });\nassert.deepEqual(delimited, { a: 'b', c: 'd' });\n</code></pre> <p>Delimiters can be a regular expression too:</p> <pre><code>var regexed = qs.parse('a=b;c=d,e=f', { delimiter: /[;,]/ });\nassert.deepEqual(regexed, { a: 'b', c: 'd', e: 'f' });\n</code></pre> <p>Option <code>allowDots</code> can be used to enable dot notation:</p> <pre><code>var withDots = qs.parse('a.b=c', { allowDots: true });\nassert.deepEqual(withDots, { a: { b: 'c' } });\n</code></pre> <p>Option <code>decodeDotInKeys</code> can be used to decode dots in keys Note: it implies <code>allowDots</code>, so <code>parse</code> will error if you set <code>decodeDotInKeys</code> to <code>true</code>, and <code>allowDots</code> to <code>false</code>.</p> <pre><code>var withDots = qs.parse('name%252Eobj.first=John&amp;name%252Eobj.last=Doe', { decodeDotInKeys: true });\nassert.deepEqual(withDots, { 'name.obj': { first: 'John', last: 'Doe' }});\n</code></pre> <p>Option <code>allowEmptyArrays</code> can be used to allowing empty array values in object <pre><code>var withEmptyArrays = qs.parse('foo[]&amp;bar=baz', { allowEmptyArrays: true });\nassert.deepEqual(withEmptyArrays, { foo: [], bar: 'baz' });\n</code></pre></p> <p>Option <code>duplicates</code> can be used to change the behavior when duplicate keys are encountered <pre><code>assert.deepEqual(qs.parse('foo=bar&amp;foo=baz'), { foo: ['bar', 'baz'] });\nassert.deepEqual(qs.parse('foo=bar&amp;foo=baz', { duplicates: 'combine' }), { foo: ['bar', 'baz'] });\nassert.deepEqual(qs.parse('foo=bar&amp;foo=baz', { duplicates: 'first' }), { foo: 'bar' });\nassert.deepEqual(qs.parse('foo=bar&amp;foo=baz', { duplicates: 'last' }), { foo: 'baz' });\n</code></pre></p> <p>If you have to deal with legacy browsers or services, there's also support for decoding percent-encoded octets as iso-8859-1:</p> <pre><code>var oldCharset = qs.parse('a=%A7', { charset: 'iso-8859-1' });\nassert.deepEqual(oldCharset, { a: '\u00a7' });\n</code></pre> <p>Some services add an initial <code>utf8=\u2713</code> value to forms so that old Internet Explorer versions are more likely to submit the form as utf-8. Additionally, the server can check the value against wrong encodings of the checkmark character and detect that a query string or <code>application/x-www-form-urlencoded</code> body was not sent as utf-8, eg. if the form had an <code>accept-charset</code> parameter or the containing page had a different character set.</p> <p>qs supports this mechanism via the <code>charsetSentinel</code> option. If specified, the <code>utf8</code> parameter will be omitted from the returned object. It will be used to switch to <code>iso-8859-1</code>/<code>utf-8</code> mode depending on how the checkmark is encoded.</p> <p>Important: When you specify both the <code>charset</code> option and the <code>charsetSentinel</code> option, the <code>charset</code> will be overridden when the request contains a <code>utf8</code> parameter from which the actual charset can be deduced. In that sense the <code>charset</code> will behave as the default charset rather than the authoritative charset.</p> <pre><code>var detectedAsUtf8 = qs.parse('utf8=%E2%9C%93&amp;a=%C3%B8', {\n    charset: 'iso-8859-1',\n    charsetSentinel: true\n});\nassert.deepEqual(detectedAsUtf8, { a: '\u00f8' });\n\n// Browsers encode the checkmark as &amp;#10003; when submitting as iso-8859-1:\nvar detectedAsIso8859_1 = qs.parse('utf8=%26%2310003%3B&amp;a=%F8', {\n    charset: 'utf-8',\n    charsetSentinel: true\n});\nassert.deepEqual(detectedAsIso8859_1, { a: '\u00f8' });\n</code></pre> <p>If you want to decode the <code>&amp;#...;</code> syntax to the actual character, you can specify the <code>interpretNumericEntities</code> option as well:</p> <pre><code>var detectedAsIso8859_1 = qs.parse('a=%26%239786%3B', {\n    charset: 'iso-8859-1',\n    interpretNumericEntities: true\n});\nassert.deepEqual(detectedAsIso8859_1, { a: '\u263a' });\n</code></pre> <p>It also works when the charset has been detected in <code>charsetSentinel</code> mode.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/#parsing-arrays","title":"Parsing Arrays","text":"<p>qs can also parse arrays using a similar <code>[]</code> notation:</p> <pre><code>var withArray = qs.parse('a[]=b&amp;a[]=c');\nassert.deepEqual(withArray, { a: ['b', 'c'] });\n</code></pre> <p>You may specify an index as well:</p> <pre><code>var withIndexes = qs.parse('a[1]=c&amp;a[0]=b');\nassert.deepEqual(withIndexes, { a: ['b', 'c'] });\n</code></pre> <p>Note that the only difference between an index in an array and a key in an object is that the value between the brackets must be a number to create an array. When creating arrays with specific indices, qs will compact a sparse array to only the existing values preserving their order:</p> <pre><code>var noSparse = qs.parse('a[1]=b&amp;a[15]=c');\nassert.deepEqual(noSparse, { a: ['b', 'c'] });\n</code></pre> <p>You may also use <code>allowSparse</code> option to parse sparse arrays:</p> <pre><code>var sparseArray = qs.parse('a[1]=2&amp;a[3]=5', { allowSparse: true });\nassert.deepEqual(sparseArray, { a: [, '2', , '5'] });\n</code></pre> <p>Note that an empty string is also a value, and will be preserved:</p> <pre><code>var withEmptyString = qs.parse('a[]=&amp;a[]=b');\nassert.deepEqual(withEmptyString, { a: ['', 'b'] });\n\nvar withIndexedEmptyString = qs.parse('a[0]=b&amp;a[1]=&amp;a[2]=c');\nassert.deepEqual(withIndexedEmptyString, { a: ['b', '', 'c'] });\n</code></pre> <p>qs will also limit specifying indices in an array to a maximum index of <code>20</code>. Any array members with an index of greater than <code>20</code> will instead be converted to an object with the index as the key. This is needed to handle cases when someone sent, for example, <code>a[999999999]</code> and it will take significant time to iterate over this huge array.</p> <pre><code>var withMaxIndex = qs.parse('a[100]=b');\nassert.deepEqual(withMaxIndex, { a: { '100': 'b' } });\n</code></pre> <p>This limit can be overridden by passing an <code>arrayLimit</code> option:</p> <pre><code>var withArrayLimit = qs.parse('a[1]=b', { arrayLimit: 0 });\nassert.deepEqual(withArrayLimit, { a: { '1': 'b' } });\n</code></pre> <p>If you want to throw an error whenever the array limit is exceeded, set the <code>throwOnLimitExceeded</code> option to <code>true</code>. This option will generate a descriptive error if the query string exceeds a configured limit. <pre><code>try {\n    qs.parse('a[1]=b', { arrayLimit: 0, throwOnLimitExceeded: true });\n} catch (err) {\n    assert(err instanceof Error);\n    assert.strictEqual(err.message, 'Array limit exceeded. Only 0 elements allowed in an array.');\n}\n</code></pre></p> <p>When <code>throwOnLimitExceeded</code> is set to <code>false</code> (default), qs will parse up to the specified <code>arrayLimit</code> and if the limit is exceeded, the array will instead be converted to an object with the index as the key</p> <p>To disable array parsing entirely, set <code>parseArrays</code> to <code>false</code>.</p> <pre><code>var noParsingArrays = qs.parse('a[]=b', { parseArrays: false });\nassert.deepEqual(noParsingArrays, { a: { '0': 'b' } });\n</code></pre> <p>If you mix notations, qs will merge the two items into an object:</p> <pre><code>var mixedNotation = qs.parse('a[0]=b&amp;a[b]=c');\nassert.deepEqual(mixedNotation, { a: { '0': 'b', b: 'c' } });\n</code></pre> <p>You can also create arrays of objects:</p> <pre><code>var arraysOfObjects = qs.parse('a[][b]=c');\nassert.deepEqual(arraysOfObjects, { a: [{ b: 'c' }] });\n</code></pre> <p>Some people use comma to join array, qs can parse it: <pre><code>var arraysOfObjects = qs.parse('a=b,c', { comma: true })\nassert.deepEqual(arraysOfObjects, { a: ['b', 'c'] })\n</code></pre> (this cannot convert nested objects, such as <code>a={b:1},{c:d}</code>)</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/#parsing-primitivescalar-values-numbers-booleans-null-etc","title":"Parsing primitive/scalar values (numbers, booleans, null, etc)","text":"<p>By default, all values are parsed as strings. This behavior will not change and is explained in issue #91.</p> <pre><code>var primitiveValues = qs.parse('a=15&amp;b=true&amp;c=null');\nassert.deepEqual(primitiveValues, { a: '15', b: 'true', c: 'null' });\n</code></pre> <p>If you wish to auto-convert values which look like numbers, booleans, and other values into their primitive counterparts, you can use the query-types Express JS middleware which will auto-convert all request query parameters.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/#stringifying","title":"Stringifying","text":"<p> <pre><code>qs.stringify(object, [options]);\n</code></pre></p> <p>When stringifying, qs by default URI encodes output. Objects are stringified as you would expect:</p> <pre><code>assert.equal(qs.stringify({ a: 'b' }), 'a=b');\nassert.equal(qs.stringify({ a: { b: 'c' } }), 'a%5Bb%5D=c');\n</code></pre> <p>This encoding can be disabled by setting the <code>encode</code> option to <code>false</code>:</p> <pre><code>var unencoded = qs.stringify({ a: { b: 'c' } }, { encode: false });\nassert.equal(unencoded, 'a[b]=c');\n</code></pre> <p>Encoding can be disabled for keys by setting the <code>encodeValuesOnly</code> option to <code>true</code>: <pre><code>var encodedValues = qs.stringify(\n    { a: 'b', c: ['d', 'e=f'], f: [['g'], ['h']] },\n    { encodeValuesOnly: true }\n);\nassert.equal(encodedValues,'a=b&amp;c[0]=d&amp;c[1]=e%3Df&amp;f[0][0]=g&amp;f[1][0]=h');\n</code></pre></p> <p>This encoding can also be replaced by a custom encoding method set as <code>encoder</code> option:</p> <pre><code>var encoded = qs.stringify({ a: { b: 'c' } }, { encoder: function (str) {\n    // Passed in values `a`, `b`, `c`\n    return // Return encoded string\n}})\n</code></pre> <p>(Note: the <code>encoder</code> option does not apply if <code>encode</code> is <code>false</code>)</p> <p>Analogue to the <code>encoder</code> there is a <code>decoder</code> option for <code>parse</code> to override decoding of properties and values:</p> <pre><code>var decoded = qs.parse('x=z', { decoder: function (str) {\n    // Passed in values `x`, `z`\n    return // Return decoded string\n}})\n</code></pre> <p>You can encode keys and values using different logic by using the type argument provided to the encoder:</p> <pre><code>var encoded = qs.stringify({ a: { b: 'c' } }, { encoder: function (str, defaultEncoder, charset, type) {\n    if (type === 'key') {\n        return // Encoded key\n    } else if (type === 'value') {\n        return // Encoded value\n    }\n}})\n</code></pre> <p>The type argument is also provided to the decoder:</p> <pre><code>var decoded = qs.parse('x=z', { decoder: function (str, defaultDecoder, charset, type) {\n    if (type === 'key') {\n        return // Decoded key\n    } else if (type === 'value') {\n        return // Decoded value\n    }\n}})\n</code></pre> <p>Examples beyond this point will be shown as though the output is not URI encoded for clarity. Please note that the return values in these cases will be URI encoded during real usage.</p> <p>When arrays are stringified, they follow the <code>arrayFormat</code> option, which defaults to <code>indices</code>:</p> <pre><code>qs.stringify({ a: ['b', 'c', 'd'] });\n// 'a[0]=b&amp;a[1]=c&amp;a[2]=d'\n</code></pre> <p>You may override this by setting the <code>indices</code> option to <code>false</code>, or to be more explicit, the <code>arrayFormat</code> option to <code>repeat</code>:</p> <pre><code>qs.stringify({ a: ['b', 'c', 'd'] }, { indices: false });\n// 'a=b&amp;a=c&amp;a=d'\n</code></pre> <p>You may use the <code>arrayFormat</code> option to specify the format of the output array:</p> <pre><code>qs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'indices' })\n// 'a[0]=b&amp;a[1]=c'\nqs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'brackets' })\n// 'a[]=b&amp;a[]=c'\nqs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'repeat' })\n// 'a=b&amp;a=c'\nqs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'comma' })\n// 'a=b,c'\n</code></pre> <p>Note: when using <code>arrayFormat</code> set to <code>'comma'</code>, you can also pass the <code>commaRoundTrip</code> option set to <code>true</code> or <code>false</code>, to append <code>[]</code> on single-item arrays, so that they can round trip through a parse.</p> <p>When objects are stringified, by default they use bracket notation:</p> <pre><code>qs.stringify({ a: { b: { c: 'd', e: 'f' } } });\n// 'a[b][c]=d&amp;a[b][e]=f'\n</code></pre> <p>You may override this to use dot notation by setting the <code>allowDots</code> option to <code>true</code>:</p> <pre><code>qs.stringify({ a: { b: { c: 'd', e: 'f' } } }, { allowDots: true });\n// 'a.b.c=d&amp;a.b.e=f'\n</code></pre> <p>You may encode the dot notation in the keys of object with option <code>encodeDotInKeys</code> by setting it to <code>true</code>: Note: it implies <code>allowDots</code>, so <code>stringify</code> will error if you set <code>decodeDotInKeys</code> to <code>true</code>, and <code>allowDots</code> to <code>false</code>. Caveat: when <code>encodeValuesOnly</code> is <code>true</code> as well as <code>encodeDotInKeys</code>, only dots in keys and nothing else will be encoded. <pre><code>qs.stringify({ \"name.obj\": { \"first\": \"John\", \"last\": \"Doe\" } }, { allowDots: true, encodeDotInKeys: true })\n// 'name%252Eobj.first=John&amp;name%252Eobj.last=Doe'\n</code></pre></p> <p>You may allow empty array values by setting the <code>allowEmptyArrays</code> option to <code>true</code>: <pre><code>qs.stringify({ foo: [], bar: 'baz' }, { allowEmptyArrays: true });\n// 'foo[]&amp;bar=baz'\n</code></pre></p> <p>Empty strings and null values will omit the value, but the equals sign (=) remains in place:</p> <pre><code>assert.equal(qs.stringify({ a: '' }), 'a=');\n</code></pre> <p>Key with no values (such as an empty object or array) will return nothing:</p> <pre><code>assert.equal(qs.stringify({ a: [] }), '');\nassert.equal(qs.stringify({ a: {} }), '');\nassert.equal(qs.stringify({ a: [{}] }), '');\nassert.equal(qs.stringify({ a: { b: []} }), '');\nassert.equal(qs.stringify({ a: { b: {}} }), '');\n</code></pre> <p>Properties that are set to <code>undefined</code> will be omitted entirely:</p> <pre><code>assert.equal(qs.stringify({ a: null, b: undefined }), 'a=');\n</code></pre> <p>The query string may optionally be prepended with a question mark:</p> <pre><code>assert.equal(qs.stringify({ a: 'b', c: 'd' }, { addQueryPrefix: true }), '?a=b&amp;c=d');\n</code></pre> <p>The delimiter may be overridden with stringify as well:</p> <pre><code>assert.equal(qs.stringify({ a: 'b', c: 'd' }, { delimiter: ';' }), 'a=b;c=d');\n</code></pre> <p>If you only want to override the serialization of <code>Date</code> objects, you can provide a <code>serializeDate</code> option:</p> <pre><code>var date = new Date(7);\nassert.equal(qs.stringify({ a: date }), 'a=1970-01-01T00:00:00.007Z'.replace(/:/g, '%3A'));\nassert.equal(\n    qs.stringify({ a: date }, { serializeDate: function (d) { return d.getTime(); } }),\n    'a=7'\n);\n</code></pre> <p>You may use the <code>sort</code> option to affect the order of parameter keys:</p> <pre><code>function alphabeticalSort(a, b) {\n    return a.localeCompare(b);\n}\nassert.equal(qs.stringify({ a: 'c', z: 'y', b : 'f' }, { sort: alphabeticalSort }), 'a=c&amp;b=f&amp;z=y');\n</code></pre> <p>Finally, you can use the <code>filter</code> option to restrict which keys will be included in the stringified output. If you pass a function, it will be called for each key to obtain the replacement value. Otherwise, if you pass an array, it will be used to select properties and array indices for stringification:</p> <pre><code>function filterFunc(prefix, value) {\n    if (prefix == 'b') {\n        // Return an `undefined` value to omit a property.\n        return;\n    }\n    if (prefix == 'e[f]') {\n        return value.getTime();\n    }\n    if (prefix == 'e[g][0]') {\n        return value * 2;\n    }\n    return value;\n}\nqs.stringify({ a: 'b', c: 'd', e: { f: new Date(123), g: [2] } }, { filter: filterFunc });\n// 'a=b&amp;c=d&amp;e[f]=123&amp;e[g][0]=4'\nqs.stringify({ a: 'b', c: 'd', e: 'f' }, { filter: ['a', 'e'] });\n// 'a=b&amp;e=f'\nqs.stringify({ a: ['b', 'c', 'd'], e: 'f' }, { filter: ['a', 0, 2] });\n// 'a[0]=b&amp;a[2]=d'\n</code></pre> <p>You could also use <code>filter</code> to inject custom serialization for user defined types. Consider you're working with some api that expects query strings of the format for ranges:</p> <pre><code>https://domain.com/endpoint?range=30...70\n</code></pre> <p>For which you model as:</p> <pre><code>class Range {\n    constructor(from, to) {\n        this.from = from;\n        this.to = to;\n    }\n}\n</code></pre> <p>You could inject a custom serializer to handle values of this type:</p> <pre><code>qs.stringify(\n    {\n        range: new Range(30, 70),\n    },\n    {\n        filter: (prefix, value) =&gt; {\n            if (value instanceof Range) {\n                return `${value.from}...${value.to}`;\n            }\n            // serialize the usual way\n            return value;\n        },\n    }\n);\n// range=30...70\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/#handling-of-null-values","title":"Handling of <code>null</code> values","text":"<p>By default, <code>null</code> values are treated like empty strings:</p> <pre><code>var withNull = qs.stringify({ a: null, b: '' });\nassert.equal(withNull, 'a=&amp;b=');\n</code></pre> <p>Parsing does not distinguish between parameters with and without equal signs. Both are converted to empty strings.</p> <pre><code>var equalsInsensitive = qs.parse('a&amp;b=');\nassert.deepEqual(equalsInsensitive, { a: '', b: '' });\n</code></pre> <p>To distinguish between <code>null</code> values and empty strings use the <code>strictNullHandling</code> flag. In the result string the <code>null</code> values have no <code>=</code> sign:</p> <pre><code>var strictNull = qs.stringify({ a: null, b: '' }, { strictNullHandling: true });\nassert.equal(strictNull, 'a&amp;b=');\n</code></pre> <p>To parse values without <code>=</code> back to <code>null</code> use the <code>strictNullHandling</code> flag:</p> <pre><code>var parsedStrictNull = qs.parse('a&amp;b=', { strictNullHandling: true });\nassert.deepEqual(parsedStrictNull, { a: null, b: '' });\n</code></pre> <p>To completely skip rendering keys with <code>null</code> values, use the <code>skipNulls</code> flag:</p> <pre><code>var nullsSkipped = qs.stringify({ a: 'b', c: null}, { skipNulls: true });\nassert.equal(nullsSkipped, 'a=b');\n</code></pre> <p>If you're communicating with legacy systems, you can switch to <code>iso-8859-1</code> using the <code>charset</code> option:</p> <pre><code>var iso = qs.stringify({ \u00e6: '\u00e6' }, { charset: 'iso-8859-1' });\nassert.equal(iso, '%E6=%E6');\n</code></pre> <p>Characters that don't exist in <code>iso-8859-1</code> will be converted to numeric entities, similar to what browsers do:</p> <pre><code>var numeric = qs.stringify({ a: '\u263a' }, { charset: 'iso-8859-1' });\nassert.equal(numeric, 'a=%26%239786%3B');\n</code></pre> <p>You can use the <code>charsetSentinel</code> option to announce the character by including an <code>utf8=\u2713</code> parameter with the proper encoding if the checkmark, similar to what Ruby on Rails and others do when submitting forms.</p> <pre><code>var sentinel = qs.stringify({ a: '\u263a' }, { charsetSentinel: true });\nassert.equal(sentinel, 'utf8=%E2%9C%93&amp;a=%E2%98%BA');\n\nvar isoSentinel = qs.stringify({ a: '\u00e6' }, { charsetSentinel: true, charset: 'iso-8859-1' });\nassert.equal(isoSentinel, 'utf8=%26%2310003%3B&amp;a=%E6');\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/#dealing-with-special-character-sets","title":"Dealing with special character sets","text":"<p>By default the encoding and decoding of characters is done in <code>utf-8</code>, and <code>iso-8859-1</code> support is also built in via the <code>charset</code> parameter.</p> <p>If you wish to encode querystrings to a different character set (i.e. Shift JIS) you can use the <code>qs-iconv</code> library:</p> <pre><code>var encoder = require('qs-iconv/encoder')('shift_jis');\nvar shiftJISEncoded = qs.stringify({ a: '\u3053\u3093\u306b\u3061\u306f\uff01' }, { encoder: encoder });\nassert.equal(shiftJISEncoded, 'a=%82%B1%82%F1%82%C9%82%BF%82%CD%81I');\n</code></pre> <p>This also works for decoding of query strings:</p> <pre><code>var decoder = require('qs-iconv/decoder')('shift_jis');\nvar obj = qs.parse('a=%82%B1%82%F1%82%C9%82%BF%82%CD%81I', { decoder: decoder });\nassert.deepEqual(obj, { a: '\u3053\u3093\u306b\u3061\u306f\uff01' });\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/#rfc-3986-and-rfc-1738-space-encoding","title":"RFC 3986 and RFC 1738 space encoding","text":"<p>RFC3986 used as default option and encodes ' ' to %20 which is backward compatible. In the same time, output can be stringified as per RFC1738 with ' ' equal to '+'.</p> <pre><code>assert.equal(qs.stringify({ a: 'b c' }), 'a=b%20c');\nassert.equal(qs.stringify({ a: 'b c' }, { format : 'RFC3986' }), 'a=b%20c');\nassert.equal(qs.stringify({ a: 'b c' }, { format : 'RFC1738' }), 'a=b+c');\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/#security","title":"Security","text":"<p>Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/#qs-for-enterprise","title":"qs for enterprise","text":"<p>Available as part of the Tidelift Subscription</p> <p>The maintainers of qs and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. Learn more.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/#acknowledgements","title":"Acknowledgements","text":"<p>qs logo by NUMI:</p> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/","title":"CHANGELOG","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6140","title":"6.14.0","text":"<ul> <li>[New] <code>parse</code>: add <code>throwOnParameterLimitExceeded</code> option (#517)</li> <li>[Refactor] <code>parse</code>: use <code>utils.combine</code> more</li> <li>[patch] <code>parse</code>: add explicit <code>throwOnLimitExceeded</code> default</li> <li>[actions] use shared action; re-add finishers</li> <li>[meta] Fix changelog formatting bug</li> <li>[Deps] update <code>side-channel</code></li> <li>[Dev Deps] update <code>es-value-fixtures</code>, <code>has-bigints</code>, <code>has-proto</code>, <code>has-symbols</code></li> <li>[Tests] increase coverage</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6131","title":"6.13.1","text":"<ul> <li>[Fix] <code>stringify</code>: avoid a crash when a <code>filter</code> key is <code>null</code></li> <li>[Fix] <code>utils.merge</code>: functions should not be stringified into keys</li> <li>[Fix] <code>parse</code>: avoid a crash with interpretNumericEntities: true, comma: true, and iso charset</li> <li>[Fix] <code>stringify</code>: ensure a non-string <code>filter</code> does not crash</li> <li>[Refactor] use <code>__proto__</code> syntax instead of <code>Object.create</code> for null objects</li> <li>[Refactor] misc cleanup</li> <li>[Tests] <code>utils.merge</code>: add some coverage</li> <li>[Tests] fix a test case</li> <li>[actions] split out node 10-20, and 20+</li> <li>[Dev Deps] update <code>es-value-fixtures</code>, <code>mock-property</code>, <code>object-inspect</code>, <code>tape</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6130","title":"6.13.0","text":"<ul> <li>[New] <code>parse</code>: add <code>strictDepth</code> option (#511)</li> <li>[Tests] use <code>npm audit</code> instead of <code>aud</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6123","title":"6.12.3","text":"<ul> <li>[Fix] <code>parse</code>: properly account for <code>strictNullHandling</code> when <code>allowEmptyArrays</code></li> <li>[meta] fix changelog indentation</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6122","title":"6.12.2","text":"<ul> <li>[Fix] <code>parse</code>: parse encoded square brackets (#506)</li> <li>[readme] add CII best practices badge</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6121","title":"6.12.1","text":"<ul> <li>[Fix] <code>parse</code>: Disable <code>decodeDotInKeys</code> by default to restore previous behavior (#501)</li> <li>[Performance] <code>utils</code>: Optimize performance under large data volumes, reduce memory usage, and speed up processing (#502)</li> <li>[Refactor] <code>utils</code>: use <code>+=</code></li> <li>[Tests] increase coverage</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6120","title":"6.12.0","text":"<ul> <li>[New] <code>parse</code>/<code>stringify</code>: add <code>decodeDotInKeys</code>/<code>encodeDotKeys</code> options (#488)</li> <li>[New] <code>parse</code>: add <code>duplicates</code> option</li> <li>[New] <code>parse</code>/<code>stringify</code>: add <code>allowEmptyArrays</code> option to allow [] in object values (#487)</li> <li>[Refactor] <code>parse</code>/<code>stringify</code>: move allowDots config logic to its own variable</li> <li>[Refactor] <code>stringify</code>: move option-handling code into <code>normalizeStringifyOptions</code></li> <li>[readme] update readme, add logos (#484)</li> <li>[readme] <code>stringify</code>: clarify default <code>arrayFormat</code> behavior</li> <li>[readme] fix line wrapping</li> <li>[readme] remove dead badges</li> <li>[Deps] update <code>side-channel</code></li> <li>[meta] make the dist build 50% smaller</li> <li>[meta] add <code>sideEffects</code> flag</li> <li>[meta] run build in prepack, not prepublish</li> <li>[Tests] <code>parse</code>: remove useless tests; add coverage</li> <li>[Tests] <code>stringify</code>: increase coverage</li> <li>[Tests] use <code>mock-property</code></li> <li>[Tests] <code>stringify</code>: improve coverage</li> <li>[Dev Deps] update <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>has-override-mistake</code>, <code>has-property-descriptors</code>, <code>mock-property</code>, <code>npmignore</code>, <code>object-inspect</code>, <code>tape</code></li> <li>[Dev Deps] pin <code>glob</code>, since v10.3.8+ requires a broken <code>jackspeak</code></li> <li>[Dev Deps] pin <code>jackspeak</code> since 2.1.2+ depends on npm aliases, which kill the install process in npm &lt; 6</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6112","title":"6.11.2","text":"<ul> <li>[Fix] <code>parse</code>: Fix parsing when the global Object prototype is frozen (#473)</li> <li>[Tests] add passing test cases with empty keys (#473)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6111","title":"6.11.1","text":"<ul> <li>[Fix] <code>stringify</code>: encode comma values more consistently (#463)</li> <li>[readme] add usage of <code>filter</code> option for injecting custom serialization, i.e. of custom types (#447)</li> <li>[meta] remove extraneous code backticks (#457)</li> <li>[meta] fix changelog markdown</li> <li>[actions] update checkout action</li> <li>[actions] restrict action permissions</li> <li>[Dev Deps] update <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>object-inspect</code>, <code>tape</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6110","title":"6.11.0","text":"<ul> <li>[New] [Fix] <code>stringify</code>: revert 0e903c0; add <code>commaRoundTrip</code> option (#442)</li> <li>[readme] fix version badge</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6105","title":"6.10.5","text":"<ul> <li>[Fix] <code>stringify</code>: with <code>arrayFormat: comma</code>, properly include an explicit <code>[]</code> on a single-item array (#434)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6104","title":"6.10.4","text":"<ul> <li>[Fix] <code>stringify</code>: with <code>arrayFormat: comma</code>, include an explicit <code>[]</code> on a single-item array (#441)</li> <li>[meta] use <code>npmignore</code> to autogenerate an npmignore file</li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>has-symbol</code>, <code>object-inspect</code>, <code>tape</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6103","title":"6.10.3","text":"<ul> <li>[Fix] <code>parse</code>: ignore <code>__proto__</code> keys (#428)</li> <li>[Robustness] <code>stringify</code>: avoid relying on a global <code>undefined</code> (#427)</li> <li>[actions] reuse common workflows</li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>object-inspect</code>, <code>tape</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6102","title":"6.10.2","text":"<ul> <li>[Fix] <code>stringify</code>: actually fix cyclic references (#426)</li> <li>[Fix] <code>stringify</code>: avoid encoding arrayformat comma when <code>encodeValuesOnly = true</code> (#424)</li> <li>[readme] remove travis badge; add github actions/codecov badges; update URLs</li> <li>[Docs] add note and links for coercing primitive values (#408)</li> <li>[actions] update codecov uploader</li> <li>[actions] update workflows</li> <li>[Tests] clean up stringify tests slightly</li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>object-inspect</code>, <code>safe-publish-latest</code>, <code>tape</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6101","title":"6.10.1","text":"<ul> <li>[Fix] <code>stringify</code>: avoid exception on repeated object values (#402)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#6100","title":"6.10.0","text":"<ul> <li>[New] <code>stringify</code>: throw on cycles, instead of an infinite loop (#395, #394, #393)</li> <li>[New] <code>parse</code>: add <code>allowSparse</code> option for collapsing arrays with missing indices (#312)</li> <li>[meta] fix README.md (#399)</li> <li>[meta] only run <code>npm run dist</code> in publish, not install</li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>has-symbols</code>, <code>tape</code></li> <li>[Tests] fix tests on node v0.6</li> <li>[Tests] use <code>ljharb/actions/node/install</code> instead of <code>ljharb/actions/node/run</code></li> <li>[Tests] Revert \"[meta] ignore eclint transitive audit warning\"</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#697","title":"6.9.7","text":"<ul> <li>[Fix] <code>parse</code>: ignore <code>__proto__</code> keys (#428)</li> <li>[Fix] <code>stringify</code>: avoid encoding arrayformat comma when <code>encodeValuesOnly = true</code> (#424)</li> <li>[Robustness] <code>stringify</code>: avoid relying on a global <code>undefined</code> (#427)</li> <li>[readme] remove travis badge; add github actions/codecov badges; update URLs</li> <li>[Docs] add note and links for coercing primitive values (#408)</li> <li>[Tests] clean up stringify tests slightly</li> <li>[meta] fix README.md (#399)</li> <li>Revert \"[meta] ignore eclint transitive audit warning\"</li> <li>[actions] backport actions from main</li> <li>[Dev Deps] backport updates from main</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#696","title":"6.9.6","text":"<ul> <li>[Fix] restore <code>dist</code> dir; mistakenly removed in d4f6c32</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#695","title":"6.9.5","text":"<ul> <li>[Fix] <code>stringify</code>: do not encode parens for RFC1738</li> <li>[Fix] <code>stringify</code>: fix arrayFormat comma with empty array/objects (#350)</li> <li>[Refactor] <code>format</code>: remove <code>util.assign</code> call</li> <li>[meta] add \"Allow Edits\" workflow; update rebase workflow</li> <li>[actions] switch Automatic Rebase workflow to <code>pull_request_target</code> event</li> <li>[Tests] <code>stringify</code>: add tests for #378</li> <li>[Tests] migrate tests to Github Actions</li> <li>[Tests] run <code>nyc</code> on all tests; use <code>tape</code> runner</li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>browserify</code>, <code>mkdirp</code>, <code>object-inspect</code>, <code>tape</code>; add <code>aud</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#694","title":"6.9.4","text":"<ul> <li>[Fix] <code>stringify</code>: when <code>arrayFormat</code> is <code>comma</code>, respect <code>serializeDate</code> (#364)</li> <li>[Refactor] <code>stringify</code>: reduce branching (part of #350)</li> <li>[Refactor] move <code>maybeMap</code> to <code>utils</code></li> <li>[Dev Deps] update <code>browserify</code>, <code>tape</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#693","title":"6.9.3","text":"<ul> <li>[Fix] proper comma parsing of URL-encoded commas (#361)</li> <li>[Fix] parses comma delimited array while having percent-encoded comma treated as normal text (#336)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#692","title":"6.9.2","text":"<ul> <li>[Fix] <code>parse</code>: Fix parsing array from object with <code>comma</code> true (#359)</li> <li>[Fix] <code>parse</code>: throw a TypeError instead of an Error for bad charset (#349)</li> <li>[meta] ignore eclint transitive audit warning</li> <li>[meta] fix indentation in package.json</li> <li>[meta] add tidelift marketing copy</li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>object-inspect</code>, <code>has-symbols</code>, <code>tape</code>, <code>mkdirp</code>, <code>iconv-lite</code></li> <li>[actions] add automatic rebasing / merge commit blocking</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#691","title":"6.9.1","text":"<ul> <li>[Fix] <code>parse</code>: with comma true, handle field that holds an array of arrays (#335)</li> <li>[Fix] <code>parse</code>: with comma true, do not split non-string values (#334)</li> <li>[meta] add <code>funding</code> field</li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code></li> <li>[Tests] use shared travis-ci config</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#690","title":"6.9.0","text":"<ul> <li>[New] <code>parse</code>/<code>stringify</code>: Pass extra key/value argument to <code>decoder</code> (#333)</li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>evalmd</code></li> <li>[Tests] <code>parse</code>: add passing <code>arrayFormat</code> tests</li> <li>[Tests] add <code>posttest</code> using <code>npx aud</code> to run <code>npm audit</code> without a lockfile</li> <li>[Tests] up to <code>node</code> <code>v12.10</code>, <code>v11.15</code>, <code>v10.16</code>, <code>v8.16</code></li> <li>[Tests] <code>Buffer.from</code> in node v5.0-v5.9 and v4.0-v4.4 requires a TypedArray</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#683","title":"6.8.3","text":"<ul> <li>[Fix] <code>parse</code>: ignore <code>__proto__</code> keys (#428)</li> <li>[Robustness] <code>stringify</code>: avoid relying on a global <code>undefined</code> (#427)</li> <li>[Fix] <code>stringify</code>: avoid encoding arrayformat comma when <code>encodeValuesOnly = true</code> (#424)</li> <li>[readme] remove travis badge; add github actions/codecov badges; update URLs</li> <li>[Tests] clean up stringify tests slightly</li> <li>[Docs] add note and links for coercing primitive values (#408)</li> <li>[meta] fix README.md (#399)</li> <li>[actions] backport actions from main</li> <li>[Dev Deps] backport updates from main</li> <li>[Refactor] <code>stringify</code>: reduce branching</li> <li>[meta] do not publish workflow files</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#682","title":"6.8.2","text":"<ul> <li>[Fix] proper comma parsing of URL-encoded commas (#361)</li> <li>[Fix] parses comma delimited array while having percent-encoded comma treated as normal text (#336)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#681","title":"6.8.1","text":"<ul> <li>[Fix] <code>parse</code>: Fix parsing array from object with <code>comma</code> true (#359)</li> <li>[Fix] <code>parse</code>: throw a TypeError instead of an Error for bad charset (#349)</li> <li>[Fix] <code>parse</code>: with comma true, handle field that holds an array of arrays (#335)</li> <li>[fix] <code>parse</code>: with comma true, do not split non-string values (#334)</li> <li>[meta] add tidelift marketing copy</li> <li>[meta] add <code>funding</code> field</li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>tape</code>, <code>safe-publish-latest</code>, <code>evalmd</code>, <code>has-symbols</code>, <code>iconv-lite</code>, <code>mkdirp</code>, <code>object-inspect</code></li> <li>[Tests] <code>parse</code>: add passing <code>arrayFormat</code> tests</li> <li>[Tests] use shared travis-ci configs</li> <li>[Tests] <code>Buffer.from</code> in node v5.0-v5.9 and v4.0-v4.4 requires a TypedArray</li> <li>[actions] add automatic rebasing / merge commit blocking</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#680","title":"6.8.0","text":"<ul> <li>[New] add <code>depth=false</code> to preserve the original key; [Fix] <code>depth=0</code> should preserve the original key (#326)</li> <li>[New] [Fix] stringify symbols and bigints</li> <li>[Fix] ensure node 0.12 can stringify Symbols</li> <li>[Fix] fix for an impossible situation: when the formatter is called with a non-string value</li> <li>[Refactor] <code>formats</code>: tiny bit of cleanup.</li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>browserify</code>, <code>safe-publish-latest</code>, <code>iconv-lite</code>, <code>tape</code></li> <li>[Tests] add tests for <code>depth=0</code> and <code>depth=false</code> behavior, both current and intuitive/intended (#326)</li> <li>[Tests] use <code>eclint</code> instead of <code>editorconfig-tools</code></li> <li>[docs] readme: add security note</li> <li>[meta] add github sponsorship</li> <li>[meta] add FUNDING.yml</li> <li>[meta] Clean up license text so it\u2019s properly detected as BSD-3-Clause</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#673","title":"6.7.3","text":"<ul> <li>[Fix] <code>parse</code>: ignore <code>__proto__</code> keys (#428)</li> <li>[Fix] <code>stringify</code>: avoid encoding arrayformat comma when <code>encodeValuesOnly = true</code> (#424)</li> <li>[Robustness] <code>stringify</code>: avoid relying on a global <code>undefined</code> (#427)</li> <li>[readme] remove travis badge; add github actions/codecov badges; update URLs</li> <li>[Docs] add note and links for coercing primitive values (#408)</li> <li>[meta] fix README.md (#399)</li> <li>[meta] do not publish workflow files</li> <li>[actions] backport actions from main</li> <li>[Dev Deps] backport updates from main</li> <li>[Tests] use <code>nyc</code> for coverage</li> <li>[Tests] clean up stringify tests slightly</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#672","title":"6.7.2","text":"<ul> <li>[Fix] proper comma parsing of URL-encoded commas (#361)</li> <li>[Fix] parses comma delimited array while having percent-encoded comma treated as normal text (#336)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#671","title":"6.7.1","text":"<ul> <li>[Fix] <code>parse</code>: Fix parsing array from object with <code>comma</code> true (#359)</li> <li>[Fix] <code>parse</code>: with comma true, handle field that holds an array of arrays (#335)</li> <li>[fix] <code>parse</code>: with comma true, do not split non-string values (#334)</li> <li>[Fix] <code>parse</code>: throw a TypeError instead of an Error for bad charset (#349)</li> <li>[Fix] fix for an impossible situation: when the formatter is called with a non-string value</li> <li>[Refactor] <code>formats</code>: tiny bit of cleanup.</li> <li>readme: add security note</li> <li>[meta] add tidelift marketing copy</li> <li>[meta] add <code>funding</code> field</li> <li>[meta] add FUNDING.yml</li> <li>[meta] Clean up license text so it\u2019s properly detected as BSD-3-Clause</li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>tape</code>, <code>safe-publish-latest</code>, <code>evalmd</code>, <code>iconv-lite</code>, <code>mkdirp</code>, <code>object-inspect</code>, <code>browserify</code></li> <li>[Tests] <code>parse</code>: add passing <code>arrayFormat</code> tests</li> <li>[Tests] use shared travis-ci configs</li> <li>[Tests] <code>Buffer.from</code> in node v5.0-v5.9 and v4.0-v4.4 requires a TypedArray</li> <li>[Tests] add tests for <code>depth=0</code> and <code>depth=false</code> behavior, both current and intuitive/intended</li> <li>[Tests] use <code>eclint</code> instead of <code>editorconfig-tools</code></li> <li>[actions] add automatic rebasing / merge commit blocking</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#670","title":"6.7.0","text":"<ul> <li>[New] <code>stringify</code>/<code>parse</code>: add <code>comma</code> as an <code>arrayFormat</code> option (#276, #219)</li> <li>[Fix] correctly parse nested arrays (#212)</li> <li>[Fix] <code>utils.merge</code>: avoid a crash with a null target and a truthy non-array source, also with an array source</li> <li>[Robustness] <code>stringify</code>: cache <code>Object.prototype.hasOwnProperty</code></li> <li>[Refactor] <code>utils</code>: <code>isBuffer</code>: small tweak; add tests</li> <li>[Refactor] use cached <code>Array.isArray</code></li> <li>[Refactor] <code>parse</code>/<code>stringify</code>: make a function to normalize the options</li> <li>[Refactor] <code>utils</code>: reduce observable [[Get]]s</li> <li>[Refactor] <code>stringify</code>/<code>utils</code>: cache <code>Array.isArray</code></li> <li>[Tests] always use <code>String(x)</code> over <code>x.toString()</code></li> <li>[Tests] fix Buffer tests to work in node &lt; 4.5 and node &lt; 5.10</li> <li>[Tests] temporarily allow coverage to fail</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#661","title":"6.6.1","text":"<ul> <li>[Fix] <code>parse</code>: ignore <code>__proto__</code> keys (#428)</li> <li>[Fix] fix for an impossible situation: when the formatter is called with a non-string value</li> <li>[Fix] <code>utils.merge</code>: avoid a crash with a null target and an array source</li> <li>[Fix] <code>utils.merge</code>: avoid a crash with a null target and a truthy non-array source</li> <li>[Fix] correctly parse nested arrays</li> <li>[Robustness] <code>stringify</code>: avoid relying on a global <code>undefined</code> (#427)</li> <li>[Robustness] <code>stringify</code>: cache <code>Object.prototype.hasOwnProperty</code></li> <li>[Refactor] <code>formats</code>: tiny bit of cleanup.</li> <li>[Refactor] <code>utils</code>: <code>isBuffer</code>: small tweak; add tests</li> <li>[Refactor]: <code>stringify</code>/<code>utils</code>: cache <code>Array.isArray</code></li> <li>[Refactor] <code>utils</code>: reduce observable [[Get]]s</li> <li>[Refactor] use cached <code>Array.isArray</code></li> <li>[Refactor] <code>parse</code>/<code>stringify</code>: make a function to normalize the options</li> <li>[readme] remove travis badge; add github actions/codecov badges; update URLs</li> <li>[Docs] Clarify the need for \"arrayLimit\" option</li> <li>[meta] fix README.md (#399)</li> <li>[meta] do not publish workflow files</li> <li>[meta] Clean up license text so it\u2019s properly detected as BSD-3-Clause</li> <li>[meta] add FUNDING.yml</li> <li>[meta] Fixes typo in CHANGELOG.md</li> <li>[actions] backport actions from main</li> <li>[Tests] fix Buffer tests to work in node &lt; 4.5 and node &lt; 5.10</li> <li>[Tests] always use <code>String(x)</code> over <code>x.toString()</code></li> <li>[Dev Deps] backport from main</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#660","title":"6.6.0","text":"<ul> <li>[New] Add support for iso-8859-1, utf8 \"sentinel\" and numeric entities (#268)</li> <li>[New] move two-value combine to a <code>utils</code> function (#189)</li> <li>[Fix] <code>stringify</code>: fix a crash with <code>strictNullHandling</code> and a custom <code>filter</code>/<code>serializeDate</code> (#279)</li> <li>[Fix] when <code>parseArrays</code> is false, properly handle keys ending in <code>[]</code> (#260)</li> <li>[Fix] <code>stringify</code>: do not crash in an obscure combo of <code>interpretNumericEntities</code>, a bad custom <code>decoder</code>, &amp; <code>iso-8859-1</code></li> <li>[Fix] <code>utils</code>: <code>merge</code>: fix crash when <code>source</code> is a truthy primitive &amp; no options are provided</li> <li>[refactor] <code>stringify</code>: Avoid arr = arr.concat(...), push to the existing instance (#269)</li> <li>[Refactor] <code>parse</code>: only need to reassign the var once</li> <li>[Refactor] <code>parse</code>/<code>stringify</code>: clean up <code>charset</code> options checking; fix defaults</li> <li>[Refactor] add missing defaults</li> <li>[Refactor] <code>parse</code>: one less <code>concat</code> call</li> <li>[Refactor] <code>utils</code>: <code>compactQueue</code>: make it explicitly side-effecting</li> <li>[Dev Deps] update <code>browserify</code>, <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>iconv-lite</code>, <code>safe-publish-latest</code>, <code>tape</code></li> <li>[Tests] up to <code>node</code> <code>v10.10</code>, <code>v9.11</code>, <code>v8.12</code>, <code>v6.14</code>, <code>v4.9</code>; pin included builds to LTS</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#653","title":"6.5.3","text":"<ul> <li>[Fix] <code>parse</code>: ignore <code>__proto__</code> keys (#428)</li> <li>[Fix] <code>utils.merge</code>: avoid a crash with a null target and a truthy non-array source</li> <li>[Fix] correctly parse nested arrays</li> <li>[Fix] <code>stringify</code>: fix a crash with <code>strictNullHandling</code> and a custom <code>filter</code>/<code>serializeDate</code> (#279)</li> <li>[Fix] <code>utils</code>: <code>merge</code>: fix crash when <code>source</code> is a truthy primitive &amp; no options are provided</li> <li>[Fix] when <code>parseArrays</code> is false, properly handle keys ending in <code>[]</code></li> <li>[Fix] fix for an impossible situation: when the formatter is called with a non-string value</li> <li>[Fix] <code>utils.merge</code>: avoid a crash with a null target and an array source</li> <li>[Refactor] <code>utils</code>: reduce observable [[Get]]s</li> <li>[Refactor] use cached <code>Array.isArray</code></li> <li>[Refactor] <code>stringify</code>: Avoid arr = arr.concat(...), push to the existing instance (#269)</li> <li>[Refactor] <code>parse</code>: only need to reassign the var once</li> <li>[Robustness] <code>stringify</code>: avoid relying on a global <code>undefined</code> (#427)</li> <li>[readme] remove travis badge; add github actions/codecov badges; update URLs</li> <li>[Docs] Clean up license text so it\u2019s properly detected as BSD-3-Clause</li> <li>[Docs] Clarify the need for \"arrayLimit\" option</li> <li>[meta] fix README.md (#399)</li> <li>[meta] add FUNDING.yml</li> <li>[actions] backport actions from main</li> <li>[Tests] always use <code>String(x)</code> over <code>x.toString()</code></li> <li>[Tests] remove nonexistent tape option</li> <li>[Dev Deps] backport from main</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#652","title":"6.5.2","text":"<ul> <li>[Fix] use <code>safer-buffer</code> instead of <code>Buffer</code> constructor</li> <li>[Refactor] utils: <code>module.exports</code> one thing, instead of mutating <code>exports</code> (#230)</li> <li>[Dev Deps] update <code>browserify</code>, <code>eslint</code>, <code>iconv-lite</code>, <code>safer-buffer</code>, <code>tape</code>, <code>browserify</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#651","title":"6.5.1","text":"<ul> <li>[Fix] Fix parsing &amp; compacting very deep objects (#224)</li> <li>[Refactor] name utils functions</li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>tape</code></li> <li>[Tests] up to <code>node</code> <code>v8.4</code>; use <code>nvm install-latest-npm</code> so newer npm doesn\u2019t break older node</li> <li>[Tests] Use precise dist for Node.js 0.6 runtime (#225)</li> <li>[Tests] make 0.6 required, now that it\u2019s passing</li> <li>[Tests] on <code>node</code> <code>v8.2</code>; fix npm on node 0.6</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#650","title":"6.5.0","text":"<ul> <li>[New] add <code>utils.assign</code></li> <li>[New] pass default encoder/decoder to custom encoder/decoder functions (#206)</li> <li>[New] <code>parse</code>/<code>stringify</code>: add <code>ignoreQueryPrefix</code>/<code>addQueryPrefix</code> options, respectively (#213)</li> <li>[Fix] Handle stringifying empty objects with addQueryPrefix (#217)</li> <li>[Fix] do not mutate <code>options</code> argument (#207)</li> <li>[Refactor] <code>parse</code>: cache index to reuse in else statement (#182)</li> <li>[Docs] add various badges to readme (#208)</li> <li>[Dev Deps] update <code>eslint</code>, <code>browserify</code>, <code>iconv-lite</code>, <code>tape</code></li> <li>[Tests] up to <code>node</code> <code>v8.1</code>, <code>v7.10</code>, <code>v6.11</code>; npm v4.6 breaks on node &lt; v1; npm v5+ breaks on node &lt; v4</li> <li>[Tests] add <code>editorconfig-tools</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#641","title":"6.4.1","text":"<ul> <li>[Fix] <code>parse</code>: ignore <code>__proto__</code> keys (#428)</li> <li>[Fix] fix for an impossible situation: when the formatter is called with a non-string value</li> <li>[Fix] use <code>safer-buffer</code> instead of <code>Buffer</code> constructor</li> <li>[Fix] <code>utils.merge</code>: avoid a crash with a null target and an array source</li> <li>[Fix] <code>utils.merge</code>: avoid a crash with a null target and a truthy non-array source</li> <li>[Fix] <code>stringify</code>: fix a crash with <code>strictNullHandling</code> and a custom <code>filter</code>/<code>serializeDate</code> (#279)</li> <li>[Fix] <code>utils</code>: <code>merge</code>: fix crash when <code>source</code> is a truthy primitive &amp; no options are provided</li> <li>[Fix] when <code>parseArrays</code> is false, properly handle keys ending in <code>[]</code></li> <li>[Robustness] <code>stringify</code>: avoid relying on a global <code>undefined</code> (#427)</li> <li>[Refactor] use cached <code>Array.isArray</code></li> <li>[Refactor] <code>stringify</code>: Avoid arr = arr.concat(...), push to the existing instance (#269)</li> <li>[readme] remove travis badge; add github actions/codecov badges; update URLs</li> <li>[Docs] Clarify the need for \"arrayLimit\" option</li> <li>[meta] fix README.md (#399)</li> <li>[meta] Clean up license text so it\u2019s properly detected as BSD-3-Clause</li> <li>[meta] add FUNDING.yml</li> <li>[actions] backport actions from main</li> <li>[Tests] remove nonexistent tape option</li> <li>[Dev Deps] backport from main</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#640","title":"6.4.0","text":"<ul> <li>[New] <code>qs.stringify</code>: add <code>encodeValuesOnly</code> option</li> <li>[Fix] follow <code>allowPrototypes</code> option during merge (#201, #201)</li> <li>[Fix] support keys starting with brackets (#202, #200)</li> <li>[Fix] chmod a-x</li> <li>[Dev Deps] update <code>eslint</code></li> <li>[Tests] up to <code>node</code> <code>v7.7</code>, <code>v6.10</code>,<code>v4.8</code>; disable osx builds since they block linux builds</li> <li>[eslint] reduce warnings</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#633","title":"6.3.3","text":"<ul> <li>[Fix] <code>parse</code>: ignore <code>__proto__</code> keys (#428)</li> <li>[Fix] fix for an impossible situation: when the formatter is called with a non-string value</li> <li>[Fix] <code>utils.merge</code>: avoid a crash with a null target and an array source</li> <li>[Fix] <code>utils.merge</code>: avoid a crash with a null target and a truthy non-array source</li> <li>[Fix] <code>stringify</code>: fix a crash with <code>strictNullHandling</code> and a custom <code>filter</code>/<code>serializeDate</code> (#279)</li> <li>[Fix] <code>utils</code>: <code>merge</code>: fix crash when <code>source</code> is a truthy primitive &amp; no options are provided</li> <li>[Fix] when <code>parseArrays</code> is false, properly handle keys ending in <code>[]</code></li> <li>[Robustness] <code>stringify</code>: avoid relying on a global <code>undefined</code> (#427)</li> <li>[Refactor] use cached <code>Array.isArray</code></li> <li>[Refactor] <code>stringify</code>: Avoid arr = arr.concat(...), push to the existing instance (#269)</li> <li>[Docs] Clarify the need for \"arrayLimit\" option</li> <li>[meta] fix README.md (#399)</li> <li>[meta] Clean up license text so it\u2019s properly detected as BSD-3-Clause</li> <li>[meta] add FUNDING.yml</li> <li>[actions] backport actions from main</li> <li>[Tests] use <code>safer-buffer</code> instead of <code>Buffer</code> constructor</li> <li>[Tests] remove nonexistent tape option</li> <li>[Dev Deps] backport from main</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#632","title":"6.3.2","text":"<ul> <li>[Fix] follow <code>allowPrototypes</code> option during merge (#201, #200)</li> <li>[Dev Deps] update <code>eslint</code></li> <li>[Fix] chmod a-x</li> <li>[Fix] support keys starting with brackets (#202, #200)</li> <li>[Tests] up to <code>node</code> <code>v7.7</code>, <code>v6.10</code>,<code>v4.8</code>; disable osx builds since they block linux builds</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#631","title":"6.3.1","text":"<ul> <li>[Fix] ensure that <code>allowPrototypes: false</code> does not ever shadow Object.prototype properties (thanks, @snyk!)</li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>browserify</code>, <code>iconv-lite</code>, <code>qs-iconv</code>, <code>tape</code></li> <li>[Tests] on all node minors; improve test matrix</li> <li>[Docs] document stringify option <code>allowDots</code> (#195)</li> <li>[Docs] add empty object and array values example (#195)</li> <li>[Docs] Fix minor inconsistency/typo (#192)</li> <li>[Docs] document stringify option <code>sort</code> (#191)</li> <li>[Refactor] <code>stringify</code>: throw faster with an invalid encoder</li> <li>[Refactor] remove unnecessary escapes (#184)</li> <li>Remove contributing.md, since <code>qs</code> is no longer part of <code>hapi</code> (#183)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#630","title":"6.3.0","text":"<ul> <li>[New] Add support for RFC 1738 (#174, #173)</li> <li>[New] <code>stringify</code>: Add <code>serializeDate</code> option to customize Date serialization (#159)</li> <li>[Fix] ensure <code>utils.merge</code> handles merging two arrays</li> <li>[Refactor] only constructors should be capitalized</li> <li>[Refactor] capitalized var names are for constructors only</li> <li>[Refactor] avoid using a sparse array</li> <li>[Robustness] <code>formats</code>: cache <code>String#replace</code></li> <li>[Dev Deps] update <code>browserify</code>, <code>eslint</code>, <code>@ljharb/eslint-config</code>; add <code>safe-publish-latest</code></li> <li>[Tests] up to <code>node</code> <code>v6.8</code>, <code>v4.6</code>; improve test matrix</li> <li>[Tests] flesh out arrayLimit/arrayFormat tests (#107)</li> <li>[Tests] skip Object.create tests when null objects are not available</li> <li>[Tests] Turn on eslint for test files (#175)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#624","title":"6.2.4","text":"<ul> <li>[Fix] <code>parse</code>: ignore <code>__proto__</code> keys (#428)</li> <li>[Fix] <code>utils.merge</code>: avoid a crash with a null target and an array source</li> <li>[Fix] <code>utils.merge</code>: avoid a crash with a null target and a truthy non-array source</li> <li>[Fix] <code>utils</code>: <code>merge</code>: fix crash when <code>source</code> is a truthy primitive &amp; no options are provided</li> <li>[Fix] when <code>parseArrays</code> is false, properly handle keys ending in <code>[]</code></li> <li>[Robustness] <code>stringify</code>: avoid relying on a global <code>undefined</code> (#427)</li> <li>[Refactor] use cached <code>Array.isArray</code></li> <li>[Docs] Clarify the need for \"arrayLimit\" option</li> <li>[meta] fix README.md (#399)</li> <li>[meta] Clean up license text so it\u2019s properly detected as BSD-3-Clause</li> <li>[meta] add FUNDING.yml</li> <li>[actions] backport actions from main</li> <li>[Tests] use <code>safer-buffer</code> instead of <code>Buffer</code> constructor</li> <li>[Tests] remove nonexistent tape option</li> <li>[Dev Deps] backport from main</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#623","title":"6.2.3","text":"<ul> <li>[Fix] follow <code>allowPrototypes</code> option during merge (#201, #200)</li> <li>[Fix] chmod a-x</li> <li>[Fix] support keys starting with brackets (#202, #200)</li> <li>[Tests] up to <code>node</code> <code>v7.7</code>, <code>v6.10</code>,<code>v4.8</code>; disable osx builds since they block linux builds</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#622","title":"6.2.2","text":"<ul> <li>[Fix] ensure that <code>allowPrototypes: false</code> does not ever shadow Object.prototype properties</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#621","title":"6.2.1","text":"<ul> <li>[Fix] ensure <code>key[]=x&amp;key[]&amp;key[]=y</code> results in 3, not 2, values</li> <li>[Refactor] Be explicit and use <code>Object.prototype.hasOwnProperty.call</code></li> <li>[Tests] remove <code>parallelshell</code> since it does not reliably report failures</li> <li>[Tests] up to <code>node</code> <code>v6.3</code>, <code>v5.12</code></li> <li>[Dev Deps] update <code>tape</code>, <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>qs-iconv</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#620","title":"6.2.0","text":"<ul> <li>[New] pass Buffers to the encoder/decoder directly (#161)</li> <li>[New] add \"encoder\" and \"decoder\" options, for custom param encoding/decoding (#160)</li> <li>[Fix] fix compacting of nested sparse arrays (#150)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#612","title":"6.1.2","text":"<ul> <li>[Fix] follow <code>allowPrototypes</code> option during merge (#201, #200)</li> <li>[Fix] chmod a-x</li> <li>[Fix] support keys starting with brackets (#202, #200)</li> <li>[Tests] up to <code>node</code> <code>v7.7</code>, <code>v6.10</code>,<code>v4.8</code>; disable osx builds since they block linux builds</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#611","title":"6.1.1","text":"<ul> <li>[Fix] ensure that <code>allowPrototypes: false</code> does not ever shadow Object.prototype properties</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#610","title":"6.1.0","text":"<ul> <li>[New] allowDots option for <code>stringify</code> (#151)</li> <li>[Fix] \"sort\" option should work at a depth of 3 or more (#151)</li> <li>[Fix] Restore <code>dist</code> directory; will be removed in v7 (#148)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#604","title":"6.0.4","text":"<ul> <li>[Fix] follow <code>allowPrototypes</code> option during merge (#201, #200)</li> <li>[Fix] chmod a-x</li> <li>[Fix] support keys starting with brackets (#202, #200)</li> <li>[Tests] up to <code>node</code> <code>v7.7</code>, <code>v6.10</code>,<code>v4.8</code>; disable osx builds since they block linux builds</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#603","title":"6.0.3","text":"<ul> <li>[Fix] ensure that <code>allowPrototypes: false</code> does not ever shadow Object.prototype properties</li> <li>[Fix] Restore <code>dist</code> directory; will be removed in v7 (#148)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#602","title":"6.0.2","text":"<ul> <li>Revert ES6 requirement and restore support for node down to v0.8.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#601","title":"6.0.1","text":"<ul> <li>#127 Fix engines definition in package.json</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#600","title":"6.0.0","text":"<ul> <li>#124 Use ES6 and drop support for node &lt; v4</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#521","title":"5.2.1","text":"<ul> <li>[Fix] ensure <code>key[]=x&amp;key[]&amp;key[]=y</code> results in 3, not 2, values</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#520","title":"5.2.0","text":"<ul> <li>#64 Add option to sort object keys in the query string</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#510","title":"5.1.0","text":"<ul> <li>#117 make URI encoding stringified results optional</li> <li>#106 Add flag <code>skipNulls</code> to optionally skip null values in stringify</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#500","title":"5.0.0","text":"<ul> <li>#114 default allowDots to false</li> <li>#100 include dist to npm</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#400","title":"4.0.0","text":"<ul> <li>#98 make returning plain objects and allowing prototype overwriting properties optional</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#310","title":"3.1.0","text":"<ul> <li>#89 Add option to disable \"Transform dot notation to bracket notation\"</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#300","title":"3.0.0","text":"<ul> <li>#80 qs.parse silently drops properties</li> <li>#77 Perf boost</li> <li>#60 Add explicit option to disable array parsing</li> <li>#74 Bad parse when turning array into object</li> <li>#81 Add a <code>filter</code> option</li> <li>#68 Fixed issue with recursion and passing strings into objects.</li> <li>#66 Add mixed array and object dot notation support Closes: #47</li> <li>#76 RFC 3986</li> <li>#85 No equal sign</li> <li>#84 update license attribute</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#241","title":"2.4.1","text":"<ul> <li>#73 Property 'hasOwnProperty' of object #"},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#240","title":"CHANGELOG","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#233","title":"CHANGELOG","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#232","title":"CHANGELOG","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#231","title":"CHANGELOG","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#230","title":"CHANGELOG","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#225","title":"CHANGELOG","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#224","title":"CHANGELOG","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#223","title":"CHANGELOG","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#222","title":"CHANGELOG","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#221","title":"CHANGELOG","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#220","title":"CHANGELOG","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#210","title":"CHANGELOG","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#200","title":"CHANGELOG","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#122","title":"CHANGELOG","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#121","title":"CHANGELOG","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#120","title":"CHANGELOG","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#110","title":"CHANGELOG","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/qs/CHANGELOG/#102","title":"CHANGELOG","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/qs/LICENSE/","title":"LICENSE","text":"<p>BSD 3-Clause License</p> <p>Copyright (c) 2014, Nathan LaFreniere and other contributors All rights reserved.</p> <p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p> <ol> <li> <p>Redistributions of source code must retain the above copyright notice, this    list of conditions and the following disclaimer.</p> </li> <li> <p>Redistributions in binary form must reproduce the above copyright notice,    this list of conditions and the following disclaimer in the documentation    and/or other materials provided with the distribution.</p> </li> <li> <p>Neither the name of the copyright holder nor the names of its    contributors may be used to endorse or promote products derived from    this software without specific prior written permission.</p> </li> </ol> <p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/","title":"range-parser","text":"<p>Range header field parser.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/#installation","title":"Installation","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install range-parser\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/#api","title":"API","text":"<pre><code>var parseRange = require('range-parser')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/#parserangesize-header-options","title":"parseRange(size, header, options)","text":"<p>Parse the given <code>header</code> string where <code>size</code> is the maximum size of the resource. An array of ranges will be returned or negative numbers indicating an error parsing.</p> <ul> <li><code>-2</code> signals a malformed header string</li> <li><code>-1</code> signals an unsatisfiable range</li> </ul> <pre><code>// parse header from request\nvar range = parseRange(size, req.headers.range)\n\n// the type of the range\nif (range.type === 'bytes') {\n  // the ranges\n  range.forEach(function (r) {\n    // do something with r.start and r.end\n  })\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/#options","title":"Options","text":"<p>These properties are accepted in the options object.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/#combine","title":"combine","text":"<p>Specifies if overlapping &amp; adjacent ranges should be combined, defaults to <code>false</code>. When <code>true</code>, ranges will be combined and returned as if they were specified that way in the header.</p> <pre><code>parseRange(100, 'bytes=50-55,0-10,5-10,56-60', { combine: true })\n// =&gt; [\n//      { start: 0,  end: 10 },\n//      { start: 50, end: 60 }\n//    ]\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/HISTORY/","title":"1.2.1 / 2019-05-10","text":"<ul> <li>Improve error when <code>str</code> is not a string</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/HISTORY/#120-2016-06-01","title":"1.2.0 / 2016-06-01","text":"<ul> <li>Add <code>combine</code> option to combine overlapping ranges</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/HISTORY/#110-2016-05-13","title":"1.1.0 / 2016-05-13","text":"<ul> <li>Fix incorrectly returning -1 when there is at least one valid range</li> <li>perf: remove internal function</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/HISTORY/#103-2015-10-29","title":"1.0.3 / 2015-10-29","text":"<ul> <li>perf: enable strict mode</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/HISTORY/#102-2014-09-08","title":"1.0.2 / 2014-09-08","text":"<ul> <li>Support Node.js 0.6</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/HISTORY/#101-2014-09-07","title":"1.0.1 / 2014-09-07","text":"<ul> <li>Move repository to jshttp</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/HISTORY/#100-2013-12-11","title":"1.0.0 / 2013-12-11","text":"<ul> <li>Add repository to package.json</li> <li>Add MIT license</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/HISTORY/#004-2012-06-17","title":"0.0.4 / 2012-06-17","text":"<ul> <li>Change ret -1 for unsatisfiable and -2 when invalid</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/HISTORY/#003-2012-06-17","title":"0.0.3 / 2012-06-17","text":"<ul> <li>Fix last-byte-pos default to len - 1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/HISTORY/#002-2012-06-14","title":"0.0.2 / 2012-06-14","text":"<ul> <li>Add <code>.type</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/range-parser/HISTORY/#001-2012-06-11","title":"0.0.1 / 2012-06-11","text":"<ul> <li>Initial release</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/","title":"raw-body","text":"<p>Gets the entire buffer of a stream either as a <code>Buffer</code> or a string. Validates the stream's length against an expected length and maximum limit. Ideal for parsing request bodies.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#install","title":"Install","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install raw-body\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#typescript","title":"TypeScript","text":"<p>This module includes a TypeScript declaration file to enable auto complete in compatible editors and type information for TypeScript projects. This module depends on the Node.js types, so install <code>@types/node</code>:</p> <pre><code>$ npm install @types/node\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#api","title":"API","text":"<pre><code>var getRawBody = require('raw-body')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#getrawbodystream-options-callback","title":"getRawBody(stream, [options], [callback])","text":"<p>Returns a promise if no callback specified and global <code>Promise</code> exists.</p> <p>Options:</p> <ul> <li><code>length</code> - The length of the stream.   If the contents of the stream do not add up to this length,   an <code>400</code> error code is returned.</li> <li><code>limit</code> - The byte limit of the body.   This is the number of bytes or any string format supported by   bytes,   for example <code>1000</code>, <code>'500kb'</code> or <code>'3mb'</code>.   If the body ends up being larger than this limit,   a <code>413</code> error code is returned.</li> <li><code>encoding</code> - The encoding to use to decode the body into a string.   By default, a <code>Buffer</code> instance will be returned when no encoding is specified.   Most likely, you want <code>utf-8</code>, so setting <code>encoding</code> to <code>true</code> will decode as <code>utf-8</code>.   You can use any type of encoding supported by iconv-lite.</li> </ul> <p>You can also pass a string in place of options to just specify the encoding.</p> <p>If an error occurs, the stream will be paused, everything unpiped, and you are responsible for correctly disposing the stream. For HTTP requests, you may need to finish consuming the stream if you want to keep the socket open for future requests. For streams that use file descriptors, you should <code>stream.destroy()</code> or <code>stream.close()</code> to prevent leaks.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#errors","title":"Errors","text":"<p>This module creates errors depending on the error condition during reading. The error may be an error from the underlying Node.js implementation, but is otherwise an error created by this module, which has the following attributes:</p> <ul> <li><code>limit</code> - the limit in bytes</li> <li><code>length</code> and <code>expected</code> - the expected length of the stream</li> <li><code>received</code> - the received bytes</li> <li><code>encoding</code> - the invalid encoding</li> <li><code>status</code> and <code>statusCode</code> - the corresponding status code for the error</li> <li><code>type</code> - the error type</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#types","title":"Types","text":"<p>The errors from this module have a <code>type</code> property which allows for the programmatic determination of the type of error returned.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#encodingunsupported","title":"encoding.unsupported","text":"<p>This error will occur when the <code>encoding</code> option is specified, but the value does not map to an encoding supported by the iconv-lite module.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#entitytoolarge","title":"entity.too.large","text":"<p>This error will occur when the <code>limit</code> option is specified, but the stream has an entity that is larger.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#requestaborted","title":"request.aborted","text":"<p>This error will occur when the request stream is aborted by the client before reading the body has finished.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#requestsizeinvalid","title":"request.size.invalid","text":"<p>This error will occur when the <code>length</code> option is specified, but the stream has emitted more bytes.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#streamencodingset","title":"stream.encoding.set","text":"<p>This error will occur when the given stream has an encoding set on it, making it a decoded stream. The stream should not have an encoding set and is expected to emit <code>Buffer</code> objects.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#streamnotreadable","title":"stream.not.readable","text":"<p>This error will occur when the given stream is not readable.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#examples","title":"Examples","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#simple-express-example","title":"Simple Express example","text":"<pre><code>var contentType = require('content-type')\nvar express = require('express')\nvar getRawBody = require('raw-body')\n\nvar app = express()\n\napp.use(function (req, res, next) {\n  getRawBody(req, {\n    length: req.headers['content-length'],\n    limit: '1mb',\n    encoding: contentType.parse(req).parameters.charset\n  }, function (err, string) {\n    if (err) return next(err)\n    req.text = string\n    next()\n  })\n})\n\n// now access req.text\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#simple-koa-example","title":"Simple Koa example","text":"<pre><code>var contentType = require('content-type')\nvar getRawBody = require('raw-body')\nvar koa = require('koa')\n\nvar app = koa()\n\napp.use(function * (next) {\n  this.text = yield getRawBody(this.req, {\n    length: this.req.headers['content-length'],\n    limit: '1mb',\n    encoding: contentType.parse(this.req).parameters.charset\n  })\n  yield next\n})\n\n// now access this.text\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#using-as-a-promise","title":"Using as a promise","text":"<p>To use this library as a promise, simply omit the <code>callback</code> and a promise is returned, provided that a global <code>Promise</code> is defined.</p> <pre><code>var getRawBody = require('raw-body')\nvar http = require('http')\n\nvar server = http.createServer(function (req, res) {\n  getRawBody(req)\n    .then(function (buf) {\n      res.statusCode = 200\n      res.end(buf.length + ' bytes submitted')\n    })\n    .catch(function (err) {\n      res.statusCode = 500\n      res.end(err.message)\n    })\n})\n\nserver.listen(3000)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#using-with-typescript","title":"Using with TypeScript","text":"<pre><code>import * as getRawBody from 'raw-body';\nimport * as http from 'http';\n\nconst server = http.createServer((req, res) =&gt; {\n  getRawBody(req)\n  .then((buf) =&gt; {\n    res.statusCode = 200;\n    res.end(buf.length + ' bytes submitted');\n  })\n  .catch((err) =&gt; {\n    res.statusCode = err.statusCode;\n    res.end(err.message);\n  });\n});\n\nserver.listen(3000);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/","title":"3.0.0 / 2024-07-25","text":"<ul> <li>deps: iconv-lite@0.6.3<ul> <li>Fix HKSCS encoding to prefer Big5 codes</li> <li>Fix minor issue in UTF-32 decoder's endianness detection code</li> <li>Update 'gb18030' encoding to :2005 edition</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#300-beta1-2023-02-21","title":"3.0.0-beta.1 / 2023-02-21","text":"<ul> <li>Change TypeScript argument to <code>NodeJS.ReadableStream</code> interface</li> <li>Drop support for Node.js 0.8</li> <li>deps: iconv-lite@0.5.2<ul> <li>Add encoding cp720</li> <li>Add encoding UTF-32</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#252-2023-02-21","title":"2.5.2 / 2023-02-21","text":"<ul> <li>Fix error message for non-stream argument</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#251-2022-02-28","title":"2.5.1 / 2022-02-28","text":"<ul> <li>Fix error on early async hooks implementations</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#250-2022-02-21","title":"2.5.0 / 2022-02-21","text":"<ul> <li>Prevent loss of async hooks context</li> <li>Prevent hanging when stream is not readable</li> <li>deps: http-errors@2.0.0<ul> <li>deps: depd@2.0.0</li> <li>deps: statuses@2.0.1</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#243-2022-02-14","title":"2.4.3 / 2022-02-14","text":"<ul> <li>deps: bytes@3.1.2</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#242-2021-11-16","title":"2.4.2 / 2021-11-16","text":"<ul> <li>deps: bytes@3.1.1</li> <li>deps: http-errors@1.8.1<ul> <li>deps: setprototypeof@1.2.0</li> <li>deps: toidentifier@1.0.1</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#241-2019-06-25","title":"2.4.1 / 2019-06-25","text":"<ul> <li>deps: http-errors@1.7.3<ul> <li>deps: inherits@2.0.4</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#240-2019-04-17","title":"2.4.0 / 2019-04-17","text":"<ul> <li>deps: bytes@3.1.0<ul> <li>Add petabyte (<code>pb</code>) support</li> </ul> </li> <li>deps: http-errors@1.7.2<ul> <li>Set constructor name when possible</li> <li>deps: setprototypeof@1.1.1</li> <li>deps: statuses@'&gt;= 1.5.0 &lt; 2'</li> </ul> </li> <li>deps: iconv-lite@0.4.24<ul> <li>Added encoding MIK</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#233-2018-05-08","title":"2.3.3 / 2018-05-08","text":"<ul> <li>deps: http-errors@1.6.3<ul> <li>deps: depd@~1.1.2</li> <li>deps: setprototypeof@1.1.0</li> <li>deps: statuses@'&gt;= 1.3.1 &lt; 2'</li> </ul> </li> <li>deps: iconv-lite@0.4.23<ul> <li>Fix loading encoding with year appended</li> <li>Fix deprecation warnings on Node.js 10+</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#232-2017-09-09","title":"2.3.2 / 2017-09-09","text":"<ul> <li>deps: iconv-lite@0.4.19<ul> <li>Fix ISO-8859-1 regression</li> <li>Update Windows-1255</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#231-2017-09-07","title":"2.3.1 / 2017-09-07","text":"<ul> <li>deps: bytes@3.0.0</li> <li>deps: http-errors@1.6.2<ul> <li>deps: depd@1.1.1</li> </ul> </li> <li>perf: skip buffer decoding on overage chunk</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#230-2017-08-04","title":"2.3.0 / 2017-08-04","text":"<ul> <li>Add TypeScript definitions</li> <li>Use <code>http-errors</code> for standard emitted errors</li> <li>deps: bytes@2.5.0</li> <li>deps: iconv-lite@0.4.18<ul> <li>Add support for React Native</li> <li>Add a warning if not loaded as utf-8</li> <li>Fix CESU-8 decoding in Node.js 8</li> <li>Improve speed of ISO-8859-1 encoding</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#220-2017-01-02","title":"2.2.0 / 2017-01-02","text":"<ul> <li>deps: iconv-lite@0.4.15<ul> <li>Added encoding MS-31J</li> <li>Added encoding MS-932</li> <li>Added encoding MS-936</li> <li>Added encoding MS-949</li> <li>Added encoding MS-950</li> <li>Fix GBK/GB18030 handling of Euro character</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#217-2016-06-19","title":"2.1.7 / 2016-06-19","text":"<ul> <li>deps: bytes@2.4.0</li> <li>perf: remove double-cleanup on happy path</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#216-2016-03-07","title":"2.1.6 / 2016-03-07","text":"<ul> <li>deps: bytes@2.3.0<ul> <li>Drop partial bytes on all parsed units</li> <li>Fix parsing byte string that looks like hex</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#215-2015-11-30","title":"2.1.5 / 2015-11-30","text":"<ul> <li>deps: bytes@2.2.0</li> <li>deps: iconv-lite@0.4.13</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#214-2015-09-27","title":"2.1.4 / 2015-09-27","text":"<ul> <li>Fix masking critical errors from <code>iconv-lite</code></li> <li>deps: iconv-lite@0.4.12<ul> <li>Fix CESU-8 decoding in Node.js 4.x</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#213-2015-09-12","title":"2.1.3 / 2015-09-12","text":"<ul> <li>Fix sync callback when attaching data listener causes sync read<ul> <li>Node.js 0.10 compatibility issue</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#212-2015-07-05","title":"2.1.2 / 2015-07-05","text":"<ul> <li>Fix error stack traces to skip <code>makeError</code></li> <li>deps: iconv-lite@0.4.11<ul> <li>Add encoding CESU-8</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#211-2015-06-14","title":"2.1.1 / 2015-06-14","text":"<ul> <li>Use <code>unpipe</code> module for unpiping requests</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#210-2015-05-28","title":"2.1.0 / 2015-05-28","text":"<ul> <li>deps: iconv-lite@0.4.10<ul> <li>Improved UTF-16 endianness detection</li> <li>Leading BOM is now removed when decoding</li> <li>The encoding UTF-16 without BOM now defaults to UTF-16LE when detection fails</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#202-2015-05-21","title":"2.0.2 / 2015-05-21","text":"<ul> <li>deps: bytes@2.1.0<ul> <li>Slight optimizations</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#201-2015-05-10","title":"2.0.1 / 2015-05-10","text":"<ul> <li>Fix a false-positive when unpiping in Node.js 0.8</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#200-2015-05-08","title":"2.0.0 / 2015-05-08","text":"<ul> <li>Return a promise without callback instead of thunk</li> <li>deps: bytes@2.0.1<ul> <li>units no longer case sensitive when parsing</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#134-2015-04-15","title":"1.3.4 / 2015-04-15","text":"<ul> <li>Fix hanging callback if request aborts during read</li> <li>deps: iconv-lite@0.4.8<ul> <li>Add encoding alias UNICODE-1-1-UTF-7</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#133-2015-02-08","title":"1.3.3 / 2015-02-08","text":"<ul> <li>deps: iconv-lite@0.4.7<ul> <li>Gracefully support enumerables on <code>Object.prototype</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#132-2015-01-20","title":"1.3.2 / 2015-01-20","text":"<ul> <li>deps: iconv-lite@0.4.6<ul> <li>Fix rare aliases of single-byte encodings</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#131-2014-11-21","title":"1.3.1 / 2014-11-21","text":"<ul> <li>deps: iconv-lite@0.4.5<ul> <li>Fix Windows-31J and X-SJIS encoding support</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#130-2014-07-20","title":"1.3.0 / 2014-07-20","text":"<ul> <li>Fully unpipe the stream on error<ul> <li>Fixes <code>Cannot switch to old mode now</code> error on Node.js 0.10+</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#123-2014-07-20","title":"1.2.3 / 2014-07-20","text":"<ul> <li>deps: iconv-lite@0.4.4<ul> <li>Added encoding UTF-7</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#122-2014-06-19","title":"1.2.2 / 2014-06-19","text":"<ul> <li>Send invalid encoding error to callback</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#121-2014-06-15","title":"1.2.1 / 2014-06-15","text":"<ul> <li>deps: iconv-lite@0.4.3<ul> <li>Added encodings UTF-16BE and UTF-16 with BOM</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#120-2014-06-13","title":"1.2.0 / 2014-06-13","text":"<ul> <li>Passing string as <code>options</code> interpreted as encoding</li> <li>Support all encodings from <code>iconv-lite</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#117-2014-06-12","title":"1.1.7 / 2014-06-12","text":"<ul> <li>use <code>string_decoder</code> module from npm</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#116-2014-05-27","title":"1.1.6 / 2014-05-27","text":"<ul> <li>check encoding for old streams1</li> <li>support node.js &lt; 0.10.6</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#115-2014-05-14","title":"1.1.5 / 2014-05-14","text":"<ul> <li>bump bytes</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#114-2014-04-19","title":"1.1.4 / 2014-04-19","text":"<ul> <li>allow true as an option</li> <li>bump bytes</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#113-2014-03-02","title":"1.1.3 / 2014-03-02","text":"<ul> <li>fix case when length=null</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#112-2013-12-01","title":"1.1.2 / 2013-12-01","text":"<ul> <li>be less strict on state.encoding check</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#111-2013-11-27","title":"1.1.1 / 2013-11-27","text":"<ul> <li>add engines</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#110-2013-11-27","title":"1.1.0 / 2013-11-27","text":"<ul> <li>add err.statusCode and err.type</li> <li>allow for encoding option to be true</li> <li>pause the stream instead of dumping on error</li> <li>throw if the stream's encoding is set</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#101-2013-11-19","title":"1.0.1 / 2013-11-19","text":"<ul> <li>dont support streams1, throw if dev set encoding</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#100-2013-11-17","title":"1.0.0 / 2013-11-17","text":"<ul> <li>rename <code>expected</code> option to <code>length</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#020-2013-11-15","title":"0.2.0 / 2013-11-15","text":"<ul> <li>republish</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#011-2013-11-15","title":"0.1.1 / 2013-11-15","text":"<ul> <li>use bytes</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#010-2013-11-11","title":"0.1.0 / 2013-11-11","text":"<ul> <li>generator support</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#003-2013-10-10","title":"0.0.3 / 2013-10-10","text":"<ul> <li>update repo</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#002-2013-09-14","title":"0.0.2 / 2013-09-14","text":"<ul> <li>dump stream on bad headers</li> <li>listen to events after defining received and buffers</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/HISTORY/#001-2013-09-14","title":"0.0.1 / 2013-09-14","text":"<ul> <li>Initial release</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/SECURITY/","title":"Security Policies and Procedures","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/raw-body/SECURITY/#reporting-a-bug","title":"Reporting a Bug","text":"<p>The <code>raw-body</code> team and community take all security bugs seriously. Thank you for improving the security of Express. We appreciate your efforts and responsible disclosure and will make every effort to acknowledge your contributions.</p> <p>Report security bugs by emailing the current owners of <code>raw-body</code>. This information can be found in the npm registry using the command <code>npm owner ls raw-body</code>. If unsure or unable to get the information from the above, open an issue in the project issue tracker asking for the current contact information.</p> <p>To ensure the timely response to your report, please ensure that the entirety of the report is contained within the email body and not solely behind a web link or an attachment.</p> <p>At least one owner will acknowledge your email within 48 hours, and will send a more detailed response within 48 hours indicating the next steps in handling your report. After the initial reply to your report, the owners will endeavor to keep you informed of the progress towards a fix and full announcement, and may ask for additional information or guidance.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/readdirp/","title":"readdirp","text":"<p>Recursive version of fs.readdir. Exposes a stream API and a promise API.</p> <pre><code>npm install readdirp\n</code></pre> <pre><code>const readdirp = require('readdirp');\n\n// Use streams to achieve small RAM &amp; CPU footprint.\n// 1) Streams example with for-await.\nfor await (const entry of readdirp('.')) {\n  const {path} = entry;\n  console.log(`${JSON.stringify({path})}`);\n}\n\n// 2) Streams example, non for-await.\n// Print out all JS files along with their size within the current folder &amp; subfolders.\nreaddirp('.', {fileFilter: '*.js', alwaysStat: true})\n  .on('data', (entry) =&gt; {\n    const {path, stats: {size}} = entry;\n    console.log(`${JSON.stringify({path, size})}`);\n  })\n  // Optionally call stream.destroy() in `warn()` in order to abort and cause 'close' to be emitted\n  .on('warn', error =&gt; console.error('non-fatal error', error))\n  .on('error', error =&gt; console.error('fatal error', error))\n  .on('end', () =&gt; console.log('done'));\n\n// 3) Promise example. More RAM and CPU than streams / for-await.\nconst files = await readdirp.promise('.');\nconsole.log(files.map(file =&gt; file.path));\n\n// Other options.\nreaddirp('test', {\n  fileFilter: '*.js',\n  directoryFilter: ['!.git', '!*modules']\n  // directoryFilter: (di) =&gt; di.basename.length === 9\n  type: 'files_directories',\n  depth: 1\n});\n</code></pre> <p>For more examples, check out <code>examples</code> directory.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/readdirp/#api","title":"API","text":"<p><code>const stream = readdirp(root[, options])</code> \u2014 Stream API</p> <ul> <li>Reads given root recursively and returns a <code>stream</code> of entry infos</li> <li>Optionally can be used like <code>for await (const entry of stream)</code> with node.js 10+ (<code>asyncIterator</code>).</li> <li><code>on('data', (entry) =&gt; {})</code> entry info for every file / dir.</li> <li><code>on('warn', (error) =&gt; {})</code> non-fatal <code>Error</code> that prevents a file / dir from being processed. Example: inaccessible to the user.</li> <li><code>on('error', (error) =&gt; {})</code> fatal <code>Error</code> which also ends the stream. Example: illegal options where passed.</li> <li><code>on('end')</code> \u2014 we are done. Called when all entries were found and no more will be emitted.</li> <li><code>on('close')</code> \u2014 stream is destroyed via <code>stream.destroy()</code>.   Could be useful if you want to manually abort even on a non fatal error.   At that point the stream is no longer <code>readable</code> and no more entries, warning or errors are emitted</li> <li>To learn more about streams, consult the very detailed nodejs streams documentation   or the stream-handbook</li> </ul> <p><code>const entries = await readdirp.promise(root[, options])</code> \u2014 Promise API. Returns a list of entry infos.</p> <p>First argument is awalys <code>root</code>, path in which to start reading and recursing into subdirectories.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/readdirp/#options","title":"options","text":"<ul> <li><code>fileFilter: [\"*.js\"]</code>: filter to include or exclude files. A <code>Function</code>, Glob string or Array of glob strings.<ul> <li>Function: a function that takes an entry info as a parameter and returns true to include or false to exclude the entry</li> <li>Glob string: a string (e.g., <code>*.js</code>) which is matched using picomatch, so go there for more     information. Globstars (<code>**</code>) are not supported since specifying a recursive pattern for an already recursive function doesn't make sense. Negated globs (as explained in the minimatch documentation) are allowed, e.g., <code>!*.txt</code> matches everything but text files.</li> <li>Array of glob strings: either need to be all inclusive or all exclusive (negated) patterns otherwise an error is thrown.     <code>['*.json', '*.js']</code> includes all JavaScript and Json files.     <code>['!.git', '!node_modules']</code> includes all directories except the '.git' and 'node_modules'.</li> <li>Directories that do not pass a filter will not be recursed into.</li> </ul> </li> <li><code>directoryFilter: ['!.git']</code>: filter to include/exclude directories found and to recurse into. Directories that do not pass a filter will not be recursed into.</li> <li><code>depth: 5</code>: depth at which to stop recursing even if more subdirectories are found</li> <li><code>type: 'files'</code>: determines if data events on the stream should be emitted for <code>'files'</code> (default), <code>'directories'</code>, <code>'files_directories'</code>, or <code>'all'</code>. Setting to <code>'all'</code> will also include entries for other types of file descriptors like character devices, unix sockets and named pipes.</li> <li><code>alwaysStat: false</code>: always return <code>stats</code> property for every file. Default is <code>false</code>, readdirp will return <code>Dirent</code> entries. Setting it to <code>true</code> can double readdir execution time - use it only when you need file <code>size</code>, <code>mtime</code> etc. Cannot be enabled on node &lt;10.10.0.</li> <li><code>lstat: false</code>: include symlink entries in the stream along with files. When <code>true</code>, <code>fs.lstat</code> would be used instead of <code>fs.stat</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/readdirp/#entryinfo","title":"<code>EntryInfo</code>","text":"<p>Has the following properties:</p> <ul> <li><code>path: 'assets/javascripts/react.js'</code>: path to the file/directory (relative to given root)</li> <li><code>fullPath: '/Users/dev/projects/app/assets/javascripts/react.js'</code>: full path to the file/directory found</li> <li><code>basename: 'react.js'</code>: name of the file/directory</li> <li><code>dirent: fs.Dirent</code>: built-in dir entry object - only with <code>alwaysStat: false</code></li> <li><code>stats: fs.Stats</code>: built in stat object - only with <code>alwaysStat: true</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/readdirp/#changelog","title":"Changelog","text":"<ul> <li>3.5 (Oct 13, 2020) disallows recursive directory-based symlinks.   Before, it could have entered infinite loop.</li> <li>3.4 (Mar 19, 2020) adds support for directory-based symlinks.</li> <li>3.3 (Dec 6, 2019) stabilizes RAM consumption and enables perf management with <code>highWaterMark</code> option. Fixes race conditions related to <code>for-await</code> looping.</li> <li>3.2 (Oct 14, 2019) improves performance by 250% and makes streams implementation more idiomatic.</li> <li>3.1 (Jul 7, 2019) brings <code>bigint</code> support to <code>stat</code> output on Windows. This is backwards-incompatible for some cases. Be careful. It you use it incorrectly, you'll see \"TypeError: Cannot mix BigInt and other types, use explicit conversions\".</li> <li>3.0 brings huge performance improvements and stream backpressure support.</li> <li>Upgrading 2.x to 3.x:<ul> <li>Signature changed from <code>readdirp(options)</code> to <code>readdirp(root, options)</code></li> <li>Replaced callback API with promise API.</li> <li>Renamed <code>entryType</code> option to <code>type</code></li> <li>Renamed <code>entryType: 'both'</code> to <code>'files_directories'</code></li> <li><code>EntryInfo</code><ul> <li>Renamed <code>stat</code> to <code>stats</code><ul> <li>Emitted only when <code>alwaysStat: true</code></li> <li><code>dirent</code> is emitted instead of <code>stats</code> by default with <code>alwaysStat: false</code></li> </ul> </li> <li>Renamed <code>name</code> to <code>basename</code></li> <li>Removed <code>parentDir</code> and <code>fullParentDir</code> properties</li> </ul> </li> </ul> </li> <li>Supported node.js versions:<ul> <li>3.x: node 8+</li> <li>2.x: node 0.6+</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/readdirp/#license","title":"License","text":"<p>Copyright (c) 2012-2019 Thorsten Lorenz, Paul Miller (https://paulmillr.com)</p> <p>MIT License, see LICENSE file.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/","title":"router","text":"<p>Simple middleware-style router</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#installation","title":"Installation","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install router\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#api","title":"API","text":"<pre><code>var finalhandler = require('finalhandler')\nvar http = require('http')\nvar Router = require('router')\n\nvar router = Router()\nrouter.get('/', function (req, res) {\n  res.setHeader('Content-Type', 'text/plain; charset=utf-8')\n  res.end('Hello World!')\n})\n\nvar server = http.createServer(function (req, res) {\n  router(req, res, finalhandler(req, res))\n})\n\nserver.listen(3000)\n</code></pre> <p>This module is currently an extracted version from the Express project, but with the main change being it can be used with a plain <code>http.createServer</code> object or other web frameworks by removing Express-specific API calls.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#routeroptions","title":"Router(options)","text":"<p>Options</p> <ul> <li><code>strict</code>        - When <code>false</code> trailing slashes are optional (default: <code>false</code>)</li> <li><code>caseSensitive</code> - When <code>true</code> the routing will be case sensitive. (default: <code>false</code>)</li> <li><code>mergeParams</code>   - When <code>true</code> any <code>req.params</code> passed to the router will be   merged into the router's <code>req.params</code>. (default: <code>false</code>) (example)</li> </ul> <p>Returns a function with the signature <code>router(req, res, callback)</code> where <code>callback([err])</code> must be provided to handle errors and fall-through from not handling requests.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#routerusepath-middleware","title":"router.use([path], ...middleware)","text":"<p>Use the given middleware function for all http methods on the given <code>path</code>, defaulting to the root path.</p> <p><code>router</code> does not automatically see <code>use</code> as a handler. As such, it will not consider it one for handling <code>OPTIONS</code> requests.</p> <ul> <li>Note: If a <code>path</code> is specified, that <code>path</code> is stripped from the start of   <code>req.url</code>.</li> </ul> <pre><code>router.use(function (req, res, next) {\n  // do your things\n\n  // continue to the next middleware\n  // the request will stall if this is not called\n  next()\n\n  // note: you should NOT call `next` if you have begun writing to the response\n})\n</code></pre> <p>Middleware can themselves use <code>next('router')</code> at any time to exit the current router instance completely, invoking the top-level callback.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#routermethodpath-middleware-handler","title":"router[method](path, ...[middleware], handler)","text":"<p>The http methods provide the routing functionality in <code>router</code>.</p> <p>Method middleware and handlers follow usual middleware behavior, except they will only be called when the method and path match the request.</p> <pre><code>// handle a `GET` request\nrouter.get('/', function (req, res) {\n  res.setHeader('Content-Type', 'text/plain; charset=utf-8')\n  res.end('Hello World!')\n})\n</code></pre> <p>Middleware given before the handler have one additional trick, they may invoke <code>next('route')</code>. Calling <code>next('route')</code> bypasses the remaining middleware and the handler mounted for this route, passing the request to the next route suitable for handling this request.</p> <p>Route handlers and middleware can themselves use <code>next('router')</code> at any time to exit the current router instance completely, invoking the top-level callback.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#routerparamname-param_middleware","title":"router.param(name, param_middleware)","text":"<p>Maps the specified path parameter <code>name</code> to a specialized param-capturing middleware.</p> <p>This function positions the middleware in the same stack as <code>.use</code>.</p> <p>The function can optionally return a <code>Promise</code> object. If a <code>Promise</code> object is returned from the function, the router will attach an <code>onRejected</code> callback using <code>.then</code>. If the promise is rejected, <code>next</code> will be called with the rejected value, or an error if the value is falsy.</p> <p>Parameter mapping is used to provide pre-conditions to routes which use normalized placeholders. For example a :user_id parameter could automatically load a user's information from the database without any additional code:</p> <pre><code>router.param('user_id', function (req, res, next, id) {\n  User.find(id, function (err, user) {\n    if (err) {\n      return next(err)\n    } else if (!user) {\n      return next(new Error('failed to load user'))\n    }\n    req.user = user\n\n    // continue processing the request\n    next()\n  })\n})\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#routerroutepath","title":"router.route(path)","text":"<p>Creates an instance of a single <code>Route</code> for the given <code>path</code>. (See <code>Router.Route</code> below)</p> <p>Routes can be used to handle http <code>methods</code> with their own, optional middleware.</p> <p>Using <code>router.route(path)</code> is a recommended approach to avoiding duplicate route naming and thus typo errors.</p> <pre><code>var api = router.route('/api/')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#routerroutepath_1","title":"Router.Route(path)","text":"<p>Represents a single route as an instance that can be used to handle http <code>methods</code> with it's own, optional middleware.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#routemethodhandler","title":"route[method](handler)","text":"<p>These are functions which you can directly call on a route to register a new <code>handler</code> for the <code>method</code> on the route.</p> <pre><code>// handle a `GET` request\nvar status = router.route('/status')\n\nstatus.get(function (req, res) {\n  res.setHeader('Content-Type', 'text/plain; charset=utf-8')\n  res.end('All Systems Green!')\n})\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#routeallhandler","title":"route.all(handler)","text":"<p>Adds a handler for all HTTP methods to this route.</p> <p>The handler can behave like middleware and call <code>next</code> to continue processing rather than responding.</p> <pre><code>router.route('/')\n  .all(function (req, res, next) {\n    next()\n  })\n  .all(checkSomething)\n  .get(function (req, res) {\n    res.setHeader('Content-Type', 'text/plain; charset=utf-8')\n    res.end('Hello World!')\n  })\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#middleware","title":"Middleware","text":"<p>Middleware (and method handlers) are functions that follow specific function parameters and have defined behavior when used with <code>router</code>. The most common format is with three parameters - \"req\", \"res\" and \"next\".</p> <ul> <li><code>req</code>  - This is a HTTP incoming message instance.</li> <li><code>res</code>  - This is a HTTP server response instance.</li> <li><code>next</code> - Calling this function that tells <code>router</code> to proceed to the next matching middleware or method handler. It accepts an error as the first argument.</li> </ul> <p>The function can optionally return a <code>Promise</code> object. If a <code>Promise</code> object is returned from the function, the router will attach an <code>onRejected</code> callback using <code>.then</code>. If the promise is rejected, <code>next</code> will be called with the rejected value, or an error if the value is falsy.</p> <p>Middleware and method handlers can also be defined with four arguments. When the function has four parameters defined, the first argument is an error and subsequent arguments remain, becoming - \"err\", \"req\", \"res\", \"next\". These functions are \"error handling middleware\", and can be used for handling errors that occurred in previous handlers (E.g. from calling <code>next(err)</code>). This is most used when you want to define arbitrary rendering of errors.</p> <pre><code>router.get('/error_route', function (req, res, next) {\n  return next(new Error('Bad Request'))\n})\n\nrouter.use(function (err, req, res, next) {\n  res.end(err.message) //= &gt; \"Bad Request\"\n})\n</code></pre> <p>Error handling middleware will only be invoked when an error was given. As long as the error is in the pipeline, normal middleware and handlers will be bypassed - only error handling middleware will be invoked with an error.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#examples","title":"Examples","text":"<pre><code>// import our modules\nvar http = require('http')\nvar Router = require('router')\nvar finalhandler = require('finalhandler')\nvar compression = require('compression')\nvar bodyParser = require('body-parser')\n\n// store our message to display\nvar message = 'Hello World!'\n\n// initialize the router &amp; server and add a final callback.\nvar router = Router()\nvar server = http.createServer(function onRequest (req, res) {\n  router(req, res, finalhandler(req, res))\n})\n\n// use some middleware and compress all outgoing responses\nrouter.use(compression())\n\n// handle `GET` requests to `/message`\nrouter.get('/message', function (req, res) {\n  res.statusCode = 200\n  res.setHeader('Content-Type', 'text/plain; charset=utf-8')\n  res.end(message + '\\n')\n})\n\n// create and mount a new router for our API\nvar api = Router()\nrouter.use('/api/', api)\n\n// add a body parsing middleware to our API\napi.use(bodyParser.json())\n\n// handle `PATCH` requests to `/api/set-message`\napi.patch('/set-message', function (req, res) {\n  if (req.body.value) {\n    message = req.body.value\n\n    res.statusCode = 200\n    res.setHeader('Content-Type', 'text/plain; charset=utf-8')\n    res.end(message + '\\n')\n  } else {\n    res.statusCode = 400\n    res.setHeader('Content-Type', 'text/plain; charset=utf-8')\n    res.end('Invalid API Syntax\\n')\n  }\n})\n\n// make our http server listen to connections\nserver.listen(8080)\n</code></pre> <p>You can get the message by running this command in your terminal,  or navigating to <code>127.0.0.1:8080</code> in a web browser. <pre><code>curl http://127.0.0.1:8080\n</code></pre></p> <p>You can set the message by sending it a <code>PATCH</code> request via this command: <pre><code>curl http://127.0.0.1:8080/api/set-message -X PATCH -H \"Content-Type: application/json\" -d '{\"value\":\"Cats!\"}'\n</code></pre></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#example-using-mergeparams","title":"Example using mergeParams","text":"<pre><code>var http = require('http')\nvar Router = require('router')\nvar finalhandler = require('finalhandler')\n\n// this example is about the mergeParams option\nvar opts = { mergeParams: true }\n\n// make a router with out special options\nvar router = Router(opts)\nvar server = http.createServer(function onRequest (req, res) {\n  // set something to be passed into the router\n  req.params = { type: 'kitten' }\n\n  router(req, res, finalhandler(req, res))\n})\n\nrouter.get('/', function (req, res) {\n  res.statusCode = 200\n  res.setHeader('Content-Type', 'text/plain; charset=utf-8')\n\n  // with respond with the the params that were passed in\n  res.end(req.params.type + '\\n')\n})\n\n// make another router with our options\nvar handler = Router(opts)\n\n// mount our new router to a route that accepts a param\nrouter.use('/:path', handler)\n\nhandler.get('/', function (req, res) {\n  res.statusCode = 200\n  res.setHeader('Content-Type', 'text/plain; charset=utf-8')\n\n  // will respond with the param of the router's parent route\n  res.end(req.params.path + '\\n')\n})\n\n// make our http server listen to connections\nserver.listen(8080)\n</code></pre> <p>Now you can get the type, or what path you are requesting: <pre><code>curl http://127.0.0.1:8080\n&gt; kitten\ncurl http://127.0.0.1:8080/such_path\n&gt; such_path\n</code></pre></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#example-of-advanced-route-usage","title":"Example of advanced <code>.route()</code> usage","text":"<p>This example shows how to implement routes where there is a custom handler to execute when the path matched, but no methods matched. Without any special handling, this would be treated as just a generic non-match by <code>router</code> (which typically results in a 404), but with a custom handler, a <code>405 Method Not Allowed</code> can be sent.</p> <pre><code>var http = require('http')\nvar finalhandler = require('finalhandler')\nvar Router = require('router')\n\n// create the router and server\nvar router = new Router()\nvar server = http.createServer(function onRequest (req, res) {\n  router(req, res, finalhandler(req, res))\n})\n\n// register a route and add all methods\nrouter.route('/pet/:id')\n  .get(function (req, res) {\n    // this is GET /pet/:id\n    res.setHeader('Content-Type', 'application/json')\n    res.end(JSON.stringify({ name: 'tobi' }))\n  })\n  .delete(function (req, res) {\n    // this is DELETE /pet/:id\n    res.end()\n  })\n  .all(function (req, res) {\n    // this is called for all other methods not\n    // defined above for /pet/:id\n    res.statusCode = 405\n    res.end()\n  })\n\n// make our http server listen to connections\nserver.listen(8080)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/","title":"2.2.0 / 2025-03-26","text":"<ul> <li>Remove <code>setImmediate</code> support check</li> <li>Restore <code>debug</code> dependency</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#210-2025-02-10","title":"2.1.0 / 2025-02-10","text":"<ul> <li>Updated <code>engines</code> field to Node@18 or higher</li> <li>Remove <code>Object.setPrototypeOf</code> polyfill</li> <li>Use <code>Array.flat</code> instead of <code>array-flatten</code> package</li> <li>Replace <code>methods</code> dependency with standard library</li> <li>deps: parseurl@^1.3.3</li> <li>deps: is-promise@^4.0.0</li> <li>Replace <code>utils-merge</code> dependency with <code>Object.assign</code></li> <li>deps: Remove unused dep <code>after</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#200-2024-09-09","title":"2.0.0 / 2024-09-09","text":"<ul> <li>Drop support for node &lt;18</li> <li>deps: path-to-regexp@^8.0.0</li> <li>Drop support for partial capture group <code>router.route('/user(s?)/:user/:op')</code> but still have optional non-capture <code>/user{s}/:user/:op</code></li> <li><code>:name?</code> becomes <code>{:name}</code></li> <li><code>:name*</code> becomes <code>*name</code>.</li> <li>The splat change also changes splat from strings to an array of strings</li> <li>Optional splats become <code>{*name}</code></li> <li><code>:name+</code> becomes <code>*name</code> and thus equivalent to <code>*name</code> so I dropped those tests</li> <li>Strings as regular expressions are fully removed, need to be converted to native regular expressions</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#200-beta2-2024-03-20","title":"2.0.0-beta.2 / 2024-03-20","text":"<p>This incorporates all changes after 1.3.5 up to 1.3.8.</p> <ul> <li>Add support for returned, rejected Promises to <code>router.param</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#200-beta1-2020-03-29","title":"2.0.0-beta.1 / 2020-03-29","text":"<p>This incorporates all changes after 1.3.3 up to 1.3.5.</p> <ul> <li>Internalize private <code>router.process_params</code> method</li> <li>Remove <code>debug</code> dependency</li> <li>deps: array-flatten@3.0.0</li> <li>deps: parseurl@~1.3.3</li> <li>deps: path-to-regexp@3.2.0<ul> <li>Add new <code>?</code>, <code>*</code>, and <code>+</code> parameter modifiers.</li> <li>Matching group expressions are only RegExp syntax.   <code>(*)</code> is no longer valid and must be written as <code>(.*)</code>, for example.</li> <li>Named matching groups no longer available by position in <code>req.params</code>.   <code>/:foo(.*)</code> only captures as <code>req.params.foo</code> and not available as   <code>req.params[0]</code>.</li> <li>Regular expressions can only be used in a matching group.   <code>/\\\\d+</code> is no longer valid and must be written as <code>/(\\\\d+)</code>.</li> <li>Matching groups are now literal regular expressions.   <code>:foo</code> named captures can no longer be included inside a capture group.</li> <li>Special <code>*</code> path segment behavior removed.   <code>/foo/*/bar</code> will match a literal <code>*</code> as the middle segment.</li> </ul> </li> <li>deps: setprototypeof@1.2.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#200-alpha1-2018-07-27","title":"2.0.0-alpha.1 / 2018-07-27","text":"<ul> <li>Add basic support for returned, rejected Promises<ul> <li>Rejected Promises from middleware functions <code>next(error)</code></li> </ul> </li> <li>Drop support for Node.js below 0.10</li> <li>deps: debug@3.1.0<ul> <li>Add <code>DEBUG_HIDE_DATE</code> environment variable</li> <li>Change timer to per-namespace instead of global</li> <li>Change non-TTY date format</li> <li>Remove <code>DEBUG_FD</code> environment variable support</li> <li>Support 256 namespace colors</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#138-2023-02-24","title":"1.3.8 / 2023-02-24","text":"<ul> <li>Fix routing requests without method</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#137-2022-04-28","title":"1.3.7 / 2022-04-28","text":"<ul> <li>Fix hanging on large stack of sync routes</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#136-2021-11-15","title":"1.3.6 / 2021-11-15","text":"<ul> <li>Fix handling very large stacks of sync middleware</li> <li>deps: safe-buffer@5.2.1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#135-2020-03-24","title":"1.3.5 / 2020-03-24","text":"<ul> <li>Fix incorrect middleware execution with unanchored <code>RegExp</code>s</li> <li>perf: use plain object for internal method map</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#134-2020-01-24","title":"1.3.4 / 2020-01-24","text":"<ul> <li>deps: array-flatten@3.0.0</li> <li>deps: parseurl@~1.3.3</li> <li>deps: setprototypeof@1.2.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#133-2018-07-06","title":"1.3.3 / 2018-07-06","text":"<ul> <li>Fix JSDoc for <code>Router</code> constructor</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#132-2017-09-24","title":"1.3.2 / 2017-09-24","text":"<ul> <li>deps: debug@2.6.9</li> <li>deps: parseurl@~1.3.2<ul> <li>perf: reduce overhead for full URLs</li> <li>perf: unroll the \"fast-path\" <code>RegExp</code></li> </ul> </li> <li>deps: setprototypeof@1.1.0</li> <li>deps: utils-merge@1.0.1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#131-2017-05-19","title":"1.3.1 / 2017-05-19","text":"<ul> <li>deps: debug@2.6.8<ul> <li>Fix <code>DEBUG_MAX_ARRAY_LENGTH</code></li> <li>deps: ms@2.0.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#130-2017-02-25","title":"1.3.0 / 2017-02-25","text":"<ul> <li>Add <code>next(\"router\")</code> to exit from router</li> <li>Fix case where <code>router.use</code> skipped requests routes did not</li> <li>Use <code>%o</code> in path debug to tell types apart</li> <li>deps: setprototypeof@1.0.3</li> <li>perf: add fast match path for <code>*</code> route</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#120-2017-02-17","title":"1.2.0 / 2017-02-17","text":"<ul> <li>Skip routing when <code>req.url</code> is not set</li> <li>deps: debug@2.6.1<ul> <li>Allow colors in workers</li> <li>Deprecated <code>DEBUG_FD</code> environment variable set to <code>3</code> or higher</li> <li>Fix error when running under React Native</li> <li>Use same color for same namespace</li> <li>deps: ms@0.7.2</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#115-2017-01-28","title":"1.1.5 / 2017-01-28","text":"<ul> <li>deps: array-flatten@2.1.1</li> <li>deps: setprototypeof@1.0.2<ul> <li>Fix using fallback even when native method exists</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#114-2016-01-21","title":"1.1.4 / 2016-01-21","text":"<ul> <li>deps: array-flatten@2.0.0</li> <li>deps: methods@~1.1.2<ul> <li>perf: enable strict mode</li> </ul> </li> <li>deps: parseurl@~1.3.1<ul> <li>perf: enable strict mode</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#113-2015-08-02","title":"1.1.3 / 2015-08-02","text":"<ul> <li>Fix infinite loop condition using <code>mergeParams: true</code></li> <li>Fix inner numeric indices incorrectly altering parent <code>req.params</code></li> <li>deps: array-flatten@1.1.1<ul> <li>perf: enable strict mode</li> </ul> </li> <li>deps: path-to-regexp@0.1.7<ul> <li>Fix regression with escaped round brackets and matching groups</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#112-2015-07-06","title":"1.1.2 / 2015-07-06","text":"<ul> <li>Fix hiding platform issues with <code>decodeURIComponent</code><ul> <li>Only <code>URIError</code>s are a 400</li> </ul> </li> <li>Fix using <code>*</code> before params in routes</li> <li>Fix using capture groups before params in routes</li> <li>deps: path-to-regexp@0.1.6</li> <li>perf: enable strict mode</li> <li>perf: remove argument reassignments in routing</li> <li>perf: skip attempting to decode zero length string</li> <li>perf: use plain for loops</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#111-2015-05-25","title":"1.1.1 / 2015-05-25","text":"<ul> <li>Fix issue where <code>next('route')</code> in <code>router.param</code> would incorrectly skip values</li> <li>deps: array-flatten@1.1.0</li> <li>deps: debug@~2.2.0<ul> <li>deps: ms@0.7.1</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#110-2015-04-22","title":"1.1.0 / 2015-04-22","text":"<ul> <li>Use <code>setprototypeof</code> instead of <code>__proto__</code></li> <li>deps: debug@~2.1.3<ul> <li>Fix high intensity foreground color for bold</li> <li>deps: ms@0.7.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#100-2015-01-13","title":"1.0.0 / 2015-01-13","text":"<ul> <li>Fix crash from error within <code>OPTIONS</code> response handler</li> <li>deps: array-flatten@1.0.2<ul> <li>Remove redundant code path</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#100-beta3-2015-01-11","title":"1.0.0-beta.3 / 2015-01-11","text":"<ul> <li>Fix duplicate methods appearing in OPTIONS responses</li> <li>Fix OPTIONS responses to include the HEAD method properly</li> <li>Remove support for leading colon in <code>router.param(name, fn)</code></li> <li>Use <code>array-flatten</code> for flattening arrays</li> <li>deps: debug@~2.1.1</li> <li>deps: methods@~1.1.1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#100-beta2-2014-11-19","title":"1.0.0-beta.2 / 2014-11-19","text":"<ul> <li>Match routes iteratively to prevent stack overflows</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/router/HISTORY/#100-beta1-2014-11-16","title":"1.0.0-beta.1 / 2014-11-16","text":"<ul> <li>Initial release ported from Express 4.x<ul> <li>Altered to work without Express</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/","title":"safe-buffer","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#safer-nodejs-buffer-api","title":"Safer Node.js Buffer API","text":"<p>Use the new Node.js Buffer APIs (<code>Buffer.from</code>, <code>Buffer.alloc</code>, <code>Buffer.allocUnsafe</code>, <code>Buffer.allocUnsafeSlow</code>) in all versions of Node.js.</p> <p>Uses the built-in implementation when available.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#install","title":"install","text":"<pre><code>npm install safe-buffer\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#usage","title":"usage","text":"<p>The goal of this package is to provide a safe replacement for the node.js <code>Buffer</code>.</p> <p>It's a drop-in replacement for <code>Buffer</code>. You can use it by adding one <code>require</code> line to the top of your node.js modules:</p> <pre><code>var Buffer = require('safe-buffer').Buffer\n\n// Existing buffer code will continue to work without issues:\n\nnew Buffer('hey', 'utf8')\nnew Buffer([1, 2, 3], 'utf8')\nnew Buffer(obj)\nnew Buffer(16) // create an uninitialized buffer (potentially unsafe)\n\n// But you can use these new explicit APIs to make clear what you want:\n\nBuffer.from('hey', 'utf8') // convert from many types to a Buffer\nBuffer.alloc(16) // create a zero-filled buffer (safe)\nBuffer.allocUnsafe(16) // create an uninitialized buffer (potentially unsafe)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#api","title":"api","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#class-method-bufferfromarray","title":"Class Method: Buffer.from(array)","text":"<ul> <li><code>array</code> {Array}</li> </ul> <p>Allocates a new <code>Buffer</code> using an <code>array</code> of octets.</p> <pre><code>const buf = Buffer.from([0x62,0x75,0x66,0x66,0x65,0x72]);\n  // creates a new Buffer containing ASCII bytes\n  // ['b','u','f','f','e','r']\n</code></pre> <p>A <code>TypeError</code> will be thrown if <code>array</code> is not an <code>Array</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#class-method-bufferfromarraybuffer-byteoffset-length","title":"Class Method: Buffer.from(arrayBuffer[, byteOffset[, length]])","text":"<ul> <li><code>arrayBuffer</code> {ArrayBuffer} The <code>.buffer</code> property of a <code>TypedArray</code> or   a <code>new ArrayBuffer()</code></li> <li><code>byteOffset</code> {Number} Default: <code>0</code></li> <li><code>length</code> {Number} Default: <code>arrayBuffer.length - byteOffset</code></li> </ul> <p>When passed a reference to the <code>.buffer</code> property of a <code>TypedArray</code> instance, the newly created <code>Buffer</code> will share the same allocated memory as the TypedArray.</p> <pre><code>const arr = new Uint16Array(2);\narr[0] = 5000;\narr[1] = 4000;\n\nconst buf = Buffer.from(arr.buffer); // shares the memory with arr;\n\nconsole.log(buf);\n  // Prints: &lt;Buffer 88 13 a0 0f&gt;\n\n// changing the TypedArray changes the Buffer also\narr[1] = 6000;\n\nconsole.log(buf);\n  // Prints: &lt;Buffer 88 13 70 17&gt;\n</code></pre> <p>The optional <code>byteOffset</code> and <code>length</code> arguments specify a memory range within the <code>arrayBuffer</code> that will be shared by the <code>Buffer</code>.</p> <pre><code>const ab = new ArrayBuffer(10);\nconst buf = Buffer.from(ab, 0, 2);\nconsole.log(buf.length);\n  // Prints: 2\n</code></pre> <p>A <code>TypeError</code> will be thrown if <code>arrayBuffer</code> is not an <code>ArrayBuffer</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#class-method-bufferfrombuffer","title":"Class Method: Buffer.from(buffer)","text":"<ul> <li><code>buffer</code> {Buffer}</li> </ul> <p>Copies the passed <code>buffer</code> data onto a new <code>Buffer</code> instance.</p> <pre><code>const buf1 = Buffer.from('buffer');\nconst buf2 = Buffer.from(buf1);\n\nbuf1[0] = 0x61;\nconsole.log(buf1.toString());\n  // 'auffer'\nconsole.log(buf2.toString());\n  // 'buffer' (copy is not changed)\n</code></pre> <p>A <code>TypeError</code> will be thrown if <code>buffer</code> is not a <code>Buffer</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#class-method-bufferfromstr-encoding","title":"Class Method: Buffer.from(str[, encoding])","text":"<ul> <li><code>str</code> {String} String to encode.</li> <li><code>encoding</code> {String} Encoding to use, Default: <code>'utf8'</code></li> </ul> <p>Creates a new <code>Buffer</code> containing the given JavaScript string <code>str</code>. If provided, the <code>encoding</code> parameter identifies the character encoding. If not provided, <code>encoding</code> defaults to <code>'utf8'</code>.</p> <pre><code>const buf1 = Buffer.from('this is a t\u00e9st');\nconsole.log(buf1.toString());\n  // prints: this is a t\u00e9st\nconsole.log(buf1.toString('ascii'));\n  // prints: this is a tC)st\n\nconst buf2 = Buffer.from('7468697320697320612074c3a97374', 'hex');\nconsole.log(buf2.toString());\n  // prints: this is a t\u00e9st\n</code></pre> <p>A <code>TypeError</code> will be thrown if <code>str</code> is not a string.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#class-method-bufferallocsize-fill-encoding","title":"Class Method: Buffer.alloc(size[, fill[, encoding]])","text":"<ul> <li><code>size</code> {Number}</li> <li><code>fill</code> {Value} Default: <code>undefined</code></li> <li><code>encoding</code> {String} Default: <code>utf8</code></li> </ul> <p>Allocates a new <code>Buffer</code> of <code>size</code> bytes. If <code>fill</code> is <code>undefined</code>, the <code>Buffer</code> will be zero-filled.</p> <pre><code>const buf = Buffer.alloc(5);\nconsole.log(buf);\n  // &lt;Buffer 00 00 00 00 00&gt;\n</code></pre> <p>The <code>size</code> must be less than or equal to the value of <code>require('buffer').kMaxLength</code> (on 64-bit architectures, <code>kMaxLength</code> is <code>(2^31)-1</code>). Otherwise, a [<code>RangeError</code>][] is thrown. A zero-length Buffer will be created if a <code>size</code> less than or equal to 0 is specified.</p> <p>If <code>fill</code> is specified, the allocated <code>Buffer</code> will be initialized by calling <code>buf.fill(fill)</code>. See [<code>buf.fill()</code>][] for more information.</p> <pre><code>const buf = Buffer.alloc(5, 'a');\nconsole.log(buf);\n  // &lt;Buffer 61 61 61 61 61&gt;\n</code></pre> <p>If both <code>fill</code> and <code>encoding</code> are specified, the allocated <code>Buffer</code> will be initialized by calling <code>buf.fill(fill, encoding)</code>. For example:</p> <pre><code>const buf = Buffer.alloc(11, 'aGVsbG8gd29ybGQ=', 'base64');\nconsole.log(buf);\n  // &lt;Buffer 68 65 6c 6c 6f 20 77 6f 72 6c 64&gt;\n</code></pre> <p>Calling <code>Buffer.alloc(size)</code> can be significantly slower than the alternative <code>Buffer.allocUnsafe(size)</code> but ensures that the newly created <code>Buffer</code> instance contents will never contain sensitive data.</p> <p>A <code>TypeError</code> will be thrown if <code>size</code> is not a number.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#class-method-bufferallocunsafesize","title":"Class Method: Buffer.allocUnsafe(size)","text":"<ul> <li><code>size</code> {Number}</li> </ul> <p>Allocates a new non-zero-filled <code>Buffer</code> of <code>size</code> bytes.  The <code>size</code> must be less than or equal to the value of <code>require('buffer').kMaxLength</code> (on 64-bit architectures, <code>kMaxLength</code> is <code>(2^31)-1</code>). Otherwise, a [<code>RangeError</code>][] is thrown. A zero-length Buffer will be created if a <code>size</code> less than or equal to 0 is specified.</p> <p>The underlying memory for <code>Buffer</code> instances created in this way is not initialized. The contents of the newly created <code>Buffer</code> are unknown and may contain sensitive data. Use [<code>buf.fill(0)</code>][] to initialize such <code>Buffer</code> instances to zeroes.</p> <pre><code>const buf = Buffer.allocUnsafe(5);\nconsole.log(buf);\n  // &lt;Buffer 78 e0 82 02 01&gt;\n  // (octets will be different, every time)\nbuf.fill(0);\nconsole.log(buf);\n  // &lt;Buffer 00 00 00 00 00&gt;\n</code></pre> <p>A <code>TypeError</code> will be thrown if <code>size</code> is not a number.</p> <p>Note that the <code>Buffer</code> module pre-allocates an internal <code>Buffer</code> instance of size <code>Buffer.poolSize</code> that is used as a pool for the fast allocation of new <code>Buffer</code> instances created using <code>Buffer.allocUnsafe(size)</code> (and the deprecated <code>new Buffer(size)</code> constructor) only when <code>size</code> is less than or equal to <code>Buffer.poolSize &gt;&gt; 1</code> (floor of <code>Buffer.poolSize</code> divided by two). The default value of <code>Buffer.poolSize</code> is <code>8192</code> but can be modified.</p> <p>Use of this pre-allocated internal memory pool is a key difference between calling <code>Buffer.alloc(size, fill)</code> vs. <code>Buffer.allocUnsafe(size).fill(fill)</code>. Specifically, <code>Buffer.alloc(size, fill)</code> will never use the internal Buffer pool, while <code>Buffer.allocUnsafe(size).fill(fill)</code> will use the internal Buffer pool if <code>size</code> is less than or equal to half <code>Buffer.poolSize</code>. The difference is subtle but can be important when an application requires the additional performance that <code>Buffer.allocUnsafe(size)</code> provides.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#class-method-bufferallocunsafeslowsize","title":"Class Method: Buffer.allocUnsafeSlow(size)","text":"<ul> <li><code>size</code> {Number}</li> </ul> <p>Allocates a new non-zero-filled and non-pooled <code>Buffer</code> of <code>size</code> bytes.  The <code>size</code> must be less than or equal to the value of <code>require('buffer').kMaxLength</code> (on 64-bit architectures, <code>kMaxLength</code> is <code>(2^31)-1</code>). Otherwise, a [<code>RangeError</code>][] is thrown. A zero-length Buffer will be created if a <code>size</code> less than or equal to 0 is specified.</p> <p>The underlying memory for <code>Buffer</code> instances created in this way is not initialized. The contents of the newly created <code>Buffer</code> are unknown and may contain sensitive data. Use [<code>buf.fill(0)</code>][] to initialize such <code>Buffer</code> instances to zeroes.</p> <p>When using <code>Buffer.allocUnsafe()</code> to allocate new <code>Buffer</code> instances, allocations under 4KB are, by default, sliced from a single pre-allocated <code>Buffer</code>. This allows applications to avoid the garbage collection overhead of creating many individually allocated Buffers. This approach improves both performance and memory usage by eliminating the need to track and cleanup as many <code>Persistent</code> objects.</p> <p>However, in the case where a developer may need to retain a small chunk of memory from a pool for an indeterminate amount of time, it may be appropriate to create an un-pooled Buffer instance using <code>Buffer.allocUnsafeSlow()</code> then copy out the relevant bits.</p> <pre><code>// need to keep around a few small chunks of memory\nconst store = [];\n\nsocket.on('readable', () =&gt; {\n  const data = socket.read();\n  // allocate for retained data\n  const sb = Buffer.allocUnsafeSlow(10);\n  // copy the data into the new allocation\n  data.copy(sb, 0, 0, 10);\n  store.push(sb);\n});\n</code></pre> <p>Use of <code>Buffer.allocUnsafeSlow()</code> should be used only as a last resort after a developer has observed undue memory retention in their applications.</p> <p>A <code>TypeError</code> will be thrown if <code>size</code> is not a number.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#all-the-rest","title":"All the Rest","text":"<p>The rest of the <code>Buffer</code> API is exactly the same as in node.js. See the docs.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#related-links","title":"Related links","text":"<ul> <li>Node.js issue: Buffer(number) is unsafe</li> <li>Node.js Enhancement Proposal: Buffer.from/Buffer.alloc/Buffer.zalloc/Buffer() soft-deprecate</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#why-is-buffer-unsafe","title":"Why is <code>Buffer</code> unsafe?","text":"<p>Today, the node.js <code>Buffer</code> constructor is overloaded to handle many different argument types like <code>String</code>, <code>Array</code>, <code>Object</code>, <code>TypedArrayView</code> (<code>Uint8Array</code>, etc.), <code>ArrayBuffer</code>, and also <code>Number</code>.</p> <p>The API is optimized for convenience: you can throw any type at it, and it will try to do what you want.</p> <p>Because the Buffer constructor is so powerful, you often see code like this:</p> <pre><code>// Convert UTF-8 strings to hex\nfunction toHex (str) {\n  return new Buffer(str).toString('hex')\n}\n</code></pre> <p>But what happens if <code>toHex</code> is called with a <code>Number</code> argument?</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#remote-memory-disclosure","title":"Remote Memory Disclosure","text":"<p>If an attacker can make your program call the <code>Buffer</code> constructor with a <code>Number</code> argument, then they can make it allocate uninitialized memory from the node.js process. This could potentially disclose TLS private keys, user data, or database passwords.</p> <p>When the <code>Buffer</code> constructor is passed a <code>Number</code> argument, it returns an UNINITIALIZED block of memory of the specified <code>size</code>. When you create a <code>Buffer</code> like this, you MUST overwrite the contents before returning it to the user.</p> <p>From the node.js docs:</p> <p><code>new Buffer(size)</code></p> <ul> <li><code>size</code> Number</li> </ul> <p>The underlying memory for <code>Buffer</code> instances created in this way is not initialized. The contents of a newly created <code>Buffer</code> are unknown and could contain sensitive data. Use <code>buf.fill(0)</code> to initialize a Buffer to zeroes.</p> <p>(Emphasis our own.)</p> <p>Whenever the programmer intended to create an uninitialized <code>Buffer</code> you often see code like this:</p> <pre><code>var buf = new Buffer(16)\n\n// Immediately overwrite the uninitialized buffer with data from another buffer\nfor (var i = 0; i &lt; buf.length; i++) {\n  buf[i] = otherBuf[i]\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#would-this-ever-be-a-problem-in-real-code","title":"Would this ever be a problem in real code?","text":"<p>Yes. It's surprisingly common to forget to check the type of your variables in a dynamically-typed language like JavaScript.</p> <p>Usually the consequences of assuming the wrong type is that your program crashes with an uncaught exception. But the failure mode for forgetting to check the type of arguments to the <code>Buffer</code> constructor is more catastrophic.</p> <p>Here's an example of a vulnerable service that takes a JSON payload and converts it to hex:</p> <pre><code>// Take a JSON payload {str: \"some string\"} and convert it to hex\nvar server = http.createServer(function (req, res) {\n  var data = ''\n  req.setEncoding('utf8')\n  req.on('data', function (chunk) {\n    data += chunk\n  })\n  req.on('end', function () {\n    var body = JSON.parse(data)\n    res.end(new Buffer(body.str).toString('hex'))\n  })\n})\n\nserver.listen(8080)\n</code></pre> <p>In this example, an http client just has to send:</p> <pre><code>{\n  \"str\": 1000\n}\n</code></pre> <p>and it will get back 1,000 bytes of uninitialized memory from the server.</p> <p>This is a very serious bug. It's similar in severity to the the Heartbleed bug that allowed disclosure of OpenSSL process memory by remote attackers.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#which-real-world-packages-were-vulnerable","title":"Which real-world packages were vulnerable?","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#bittorrent-dht","title":"<code>bittorrent-dht</code>","text":"<p>Mathias Buus and I (Feross Aboukhadijeh) found this issue in one of our own packages, <code>bittorrent-dht</code>. The bug would allow anyone on the internet to send a series of messages to a user of <code>bittorrent-dht</code> and get them to reveal 20 bytes at a time of uninitialized memory from the node.js process.</p> <p>Here's the commit that fixed it. We released a new fixed version, created a Node Security Project disclosure, and deprecated all vulnerable versions on npm so users will get a warning to upgrade to a newer version.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#ws","title":"<code>ws</code>","text":"<p>That got us wondering if there were other vulnerable packages. Sure enough, within a short period of time, we found the same issue in <code>ws</code>, the most popular WebSocket implementation in node.js.</p> <p>If certain APIs were called with <code>Number</code> parameters instead of <code>String</code> or <code>Buffer</code> as expected, then uninitialized server memory would be disclosed to the remote peer.</p> <p>These were the vulnerable methods:</p> <pre><code>socket.send(number)\nsocket.ping(number)\nsocket.pong(number)\n</code></pre> <p>Here's a vulnerable socket server with some echo functionality:</p> <pre><code>server.on('connection', function (socket) {\n  socket.on('message', function (message) {\n    message = JSON.parse(message)\n    if (message.type === 'echo') {\n      socket.send(message.data) // send back the user's message\n    }\n  })\n})\n</code></pre> <p><code>socket.send(number)</code> called on the server, will disclose server memory.</p> <p>Here's the release where the issue was fixed, with a more detailed explanation. Props to Arnout Kazemier for the quick fix. Here's the Node Security Project disclosure.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#whats-the-solution","title":"What's the solution?","text":"<p>It's important that node.js offers a fast way to get memory otherwise performance-critical applications would needlessly get a lot slower.</p> <p>But we need a better way to signal our intent as programmers. When we want uninitialized memory, we should request it explicitly.</p> <p>Sensitive functionality should not be packed into a developer-friendly API that loosely accepts many different types. This type of API encourages the lazy practice of passing variables in without checking the type very carefully.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#a-new-api-bufferallocunsafenumber","title":"A new API: <code>Buffer.allocUnsafe(number)</code>","text":"<p>The functionality of creating buffers with uninitialized memory should be part of another API. We propose <code>Buffer.allocUnsafe(number)</code>. This way, it's not part of an API that frequently gets user input of all sorts of different types passed into it.</p> <pre><code>var buf = Buffer.allocUnsafe(16) // careful, uninitialized memory!\n\n// Immediately overwrite the uninitialized buffer with data from another buffer\nfor (var i = 0; i &lt; buf.length; i++) {\n  buf[i] = otherBuf[i]\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#how-do-we-fix-nodejs-core","title":"How do we fix node.js core?","text":"<p>We sent a PR to node.js core (merged as <code>semver-major</code>) which defends against one case:</p> <pre><code>var str = 16\nnew Buffer(str, 'utf8')\n</code></pre> <p>In this situation, it's implied that the programmer intended the first argument to be a string, since they passed an encoding as a second argument. Today, node.js will allocate uninitialized memory in the case of <code>new Buffer(number, encoding)</code>, which is probably not what the programmer intended.</p> <p>But this is only a partial solution, since if the programmer does <code>new Buffer(variable)</code> (without an <code>encoding</code> parameter) there's no way to know what they intended. If <code>variable</code> is sometimes a number, then uninitialized memory will sometimes be returned.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#whats-the-real-long-term-fix","title":"What's the real long-term fix?","text":"<p>We could deprecate and remove <code>new Buffer(number)</code> and use <code>Buffer.allocUnsafe(number)</code> when we need uninitialized memory. But that would break 1000s of packages.</p> <p>~~We believe the best solution is to:~~</p> <p>~~1. Change <code>new Buffer(number)</code> to return safe, zeroed-out memory~~</p> <p>~~2. Create a new API for creating uninitialized Buffers. We propose: <code>Buffer.allocUnsafe(number)</code>~~</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#update","title":"Update","text":"<p>We now support adding three new APIs:</p> <ul> <li><code>Buffer.from(value)</code> - convert from any type to a buffer</li> <li><code>Buffer.alloc(size)</code> - create a zero-filled buffer</li> <li><code>Buffer.allocUnsafe(size)</code> - create an uninitialized buffer with given size</li> </ul> <p>This solves the core problem that affected <code>ws</code> and <code>bittorrent-dht</code> which is <code>Buffer(variable)</code> getting tricked into taking a number argument.</p> <p>This way, existing code continues working and the impact on the npm ecosystem will be minimal. Over time, npm maintainers can migrate performance-critical code to use <code>Buffer.allocUnsafe(number)</code> instead of <code>new Buffer(number)</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#conclusion","title":"Conclusion","text":"<p>We think there's a serious design issue with the <code>Buffer</code> API as it exists today. It promotes insecure software by putting high-risk functionality into a convenient API with friendly \"developer ergonomics\".</p> <p>This wasn't merely a theoretical exercise because we found the issue in some of the most popular npm packages.</p> <p>Fortunately, there's an easy fix that can be applied today. Use <code>safe-buffer</code> in place of <code>buffer</code>.</p> <pre><code>var Buffer = require('safe-buffer').Buffer\n</code></pre> <p>Eventually, we hope that node.js core can switch to this new, safer behavior. We believe the impact on the ecosystem would be minimal since it's not a breaking change. Well-maintained, popular packages would be updated to use <code>Buffer.alloc</code> quickly, while older, insecure packages would magically become safe from this attack vector.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#links","title":"links","text":"<ul> <li>Node.js PR: buffer: throw if both length and enc are passed</li> <li>Node Security Project disclosure for <code>ws</code></li> <li>Node Security Project disclosure for<code>bittorrent-dht</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#credit","title":"credit","text":"<p>The original issues in <code>bittorrent-dht</code> (disclosure) and <code>ws</code> (disclosure) were discovered by Mathias Buus and Feross Aboukhadijeh.</p> <p>Thanks to Adam Baldwin for helping disclose these issues and for his work running the Node Security Project.</p> <p>Thanks to John Hiesey for proofreading this README and auditing the code.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safe-buffer/#license","title":"license","text":"<p>MIT. Copyright (C) Feross Aboukhadijeh</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/","title":"Porting to the Buffer.from/Buffer.alloc API","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/#overview","title":"Overview","text":"<ul> <li>Variant 1: Drop support for Node.js \u2264 4.4.x and 5.0.0 \u2014 5.9.x. (recommended)</li> <li>Variant 2: Use a polyfill</li> <li>Variant 3: manual detection, with safeguards</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/#finding-problematic-bits-of-code-using-grep","title":"Finding problematic bits of code using grep","text":"<p>Just run <code>grep -nrE '[^a-zA-Z](Slow)?Buffer\\s*\\(' --exclude-dir node_modules</code>.</p> <p>It will find all the potentially unsafe places in your own code (with some considerably unlikely exceptions).</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/#finding-problematic-bits-of-code-using-nodejs-8","title":"Finding problematic bits of code using Node.js 8","text":"<p>If you\u2019re using Node.js \u2265 8.0.0 (which is recommended), Node.js exposes multiple options that help with finding the relevant pieces of code:</p> <ul> <li><code>--trace-warnings</code> will make Node.js show a stack trace for this warning and other warnings that are printed by Node.js.</li> <li><code>--trace-deprecation</code> does the same thing, but only for deprecation warnings.</li> <li><code>--pending-deprecation</code> will show more types of deprecation warnings. In particular, it will show the <code>Buffer()</code> deprecation warning, even on Node.js 8.</li> </ul> <p>You can set these flags using an environment variable:</p> <pre><code>$ export NODE_OPTIONS='--trace-warnings --pending-deprecation'\n$ cat example.js\n'use strict';\nconst foo = new Buffer('foo');\n$ node example.js\n(node:7147) [DEP0005] DeprecationWarning: The Buffer() and new Buffer() constructors are not recommended for use due to security and usability concerns. Please use the new Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() construction methods instead.\n    at showFlaggedDeprecation (buffer.js:127:13)\n    at new Buffer (buffer.js:148:3)\n    at Object.&lt;anonymous&gt; (/path/to/example.js:2:13)\n    [... more stack trace lines ...]\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/#finding-problematic-bits-of-code-using-linters","title":"Finding problematic bits of code using linters","text":"<p>Eslint rules no-buffer-constructor or node/no-deprecated-api also find calls to deprecated <code>Buffer()</code> API. Those rules are included in some pre-sets.</p> <p>There is a drawback, though, that it doesn't always work correctly when <code>Buffer</code> is overriden e.g. with a polyfill, so recommended is a combination of this and some other method described above.</p> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/#variant-1-drop-support-for-nodejs-44x-and-500-59x","title":"Variant 1: Drop support for Node.js \u2264 4.4.x and 5.0.0 \u2014 5.9.x.","text":"<p>This is the recommended solution nowadays that would imply only minimal overhead.</p> <p>The Node.js 5.x release line has been unsupported since July 2016, and the Node.js 4.x release line reaches its End of Life in April 2018 (\u2192 Schedule). This means that these versions of Node.js will not receive any updates, even in case of security issues, so using these release lines should be avoided, if at all possible.</p> <p>What you would do in this case is to convert all <code>new Buffer()</code> or <code>Buffer()</code> calls to use <code>Buffer.alloc()</code> or <code>Buffer.from()</code>, in the following way:</p> <ul> <li>For <code>new Buffer(number)</code>, replace it with <code>Buffer.alloc(number)</code>.</li> <li>For <code>new Buffer(string)</code> (or <code>new Buffer(string, encoding)</code>), replace it with <code>Buffer.from(string)</code> (or <code>Buffer.from(string, encoding)</code>).</li> <li>For all other combinations of arguments (these are much rarer), also replace <code>new Buffer(...arguments)</code> with <code>Buffer.from(...arguments)</code>.</li> </ul> <p>Note that <code>Buffer.alloc()</code> is also faster on the current Node.js versions than <code>new Buffer(size).fill(0)</code>, which is what you would otherwise need to ensure zero-filling.</p> <p>Enabling eslint rule no-buffer-constructor or node/no-deprecated-api is recommended to avoid accidential unsafe Buffer API usage.</p> <p>There is also a JSCodeshift codemod for automatically migrating Buffer constructors to <code>Buffer.alloc()</code> or <code>Buffer.from()</code>. Note that it currently only works with cases where the arguments are literals or where the constructor is invoked with two arguments.</p> <p>If you currently support those older Node.js versions and dropping them would be a semver-major change for you, or if you support older branches of your packages, consider using Variant 2 or Variant 3 on older branches, so people using those older branches will also receive the fix. That way, you will eradicate potential issues caused by unguarded Buffer API usage and your users will not observe a runtime deprecation warning when running your code on Node.js 10.</p> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/#variant-2-use-a-polyfill","title":"Variant 2: Use a polyfill","text":"<p>Utilize safer-buffer as a polyfill to support older Node.js versions.</p> <p>You would take exacly the same steps as in Variant 1, but with a polyfill <code>const Buffer = require('safer-buffer').Buffer</code> in all files where you use the new <code>Buffer</code> api.</p> <p>Make sure that you do not use old <code>new Buffer</code> API \u2014 in any files where the line above is added, using old <code>new Buffer()</code> API will throw. It will be easy to notice that in CI, though.</p> <p>Alternatively, you could use buffer-from and/or buffer-alloc ponyfills \u2014 those are great, the only downsides being 4 deps in the tree and slightly more code changes to migrate off them (as you would be using e.g. <code>Buffer.from</code> under a different name). If you need only <code>Buffer.from</code> polyfilled \u2014 <code>buffer-from</code> alone which comes with no extra dependencies.</p> <p>Alternatively, you could use safe-buffer \u2014 it also provides a polyfill, but takes a different approach which has it's drawbacks. It will allow you to also use the older <code>new Buffer()</code> API in your code, though \u2014 but that's arguably a benefit, as it is problematic, can cause issues in your code, and will start emitting runtime deprecation warnings starting with Node.js 10.</p> <p>Note that in either case, it is important that you also remove all calls to the old Buffer API manually \u2014 just throwing in <code>safe-buffer</code> doesn't fix the problem by itself, it just provides a polyfill for the new API. I have seen people doing that mistake.</p> <p>Enabling eslint rule no-buffer-constructor or node/no-deprecated-api is recommended.</p> <p>Don't forget to drop the polyfill usage once you drop support for Node.js &lt; 4.5.0.</p> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/#variant-3-manual-detection-with-safeguards","title":"Variant 3 \u2014 manual detection, with safeguards","text":"<p>This is useful if you create Buffer instances in only a few places (e.g. one), or you have your own wrapper around them.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/#buffer0","title":"Buffer(0)","text":"<p>This special case for creating empty buffers can be safely replaced with <code>Buffer.concat([])</code>, which returns the same result all the way down to Node.js 0.8.x.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/#buffernotnumber","title":"Buffer(notNumber)","text":"<p>Before:</p> <pre><code>var buf = new Buffer(notNumber, encoding);\n</code></pre> <p>After:</p> <pre><code>var buf;\nif (Buffer.from &amp;&amp; Buffer.from !== Uint8Array.from) {\n  buf = Buffer.from(notNumber, encoding);\n} else {\n  if (typeof notNumber === 'number')\n    throw new Error('The \"size\" argument must be of type number.');\n  buf = new Buffer(notNumber, encoding);\n}\n</code></pre> <p><code>encoding</code> is optional.</p> <p>Note that the <code>typeof notNumber</code> before <code>new Buffer</code> is required (for cases when <code>notNumber</code> argument is not hard-coded) and is not caused by the deprecation of Buffer constructor \u2014 it's exactly why the Buffer constructor is deprecated. Ecosystem packages lacking this type-check caused numereous security issues \u2014 situations when unsanitized user input could end up in the <code>Buffer(arg)</code> create problems ranging from DoS to leaking sensitive information to the attacker from the process memory.</p> <p>When <code>notNumber</code> argument is hardcoded (e.g. literal <code>\"abc\"</code> or <code>[0,1,2]</code>), the <code>typeof</code> check can be omitted.</p> <p>Also note that using TypeScript does not fix this problem for you \u2014 when libs written in <code>TypeScript</code> are used from JS, or when user input ends up there \u2014 it behaves exactly as pure JS, as all type checks are translation-time only and are not present in the actual JS code which TS compiles to.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/#buffernumber","title":"Buffer(number)","text":"<p>For Node.js 0.10.x (and below) support:</p> <pre><code>var buf;\nif (Buffer.alloc) {\n  buf = Buffer.alloc(number);\n} else {\n  buf = new Buffer(number);\n  buf.fill(0);\n}\n</code></pre> <p>Otherwise (Node.js \u2265 0.12.x):</p> <pre><code>const buf = Buffer.alloc ? Buffer.alloc(number) : new Buffer(number).fill(0);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/#regarding-bufferallocunsafe","title":"Regarding Buffer.allocUnsafe","text":"<p>Be extra cautious when using <code>Buffer.allocUnsafe</code>:  * Don't use it if you don't have a good reason to    * e.g. you probably won't ever see a performance difference for small buffers, in fact, those      might be even faster with <code>Buffer.alloc()</code>,    * if your code is not in the hot code path \u2014 you also probably won't notice a difference,    * keep in mind that zero-filling minimizes the potential risks.  * If you use it, make sure that you never return the buffer in a partially-filled state,    * if you are writing to it sequentially \u2014 always truncate it to the actuall written length</p> <p>Errors in handling buffers allocated with <code>Buffer.allocUnsafe</code> could result in various issues, ranged from undefined behaviour of your code to sensitive data (user input, passwords, certs) leaking to the remote attacker.</p> <p>Note that the same applies to <code>new Buffer</code> usage without zero-filling, depending on the Node.js version (and lacking type checks also adds DoS to the list of potential problems).</p> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/#faq","title":"FAQ","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/#what-is-wrong-with-the-buffer-constructor","title":"What is wrong with the <code>Buffer</code> constructor?","text":"<p>The <code>Buffer</code> constructor could be used to create a buffer in many different ways:</p> <ul> <li><code>new Buffer(42)</code> creates a <code>Buffer</code> of 42 bytes. Before Node.js 8, this buffer contained   arbitrary memory for performance reasons, which could include anything ranging from   program source code to passwords and encryption keys.</li> <li><code>new Buffer('abc')</code> creates a <code>Buffer</code> that contains the UTF-8-encoded version of   the string <code>'abc'</code>. A second argument could specify another encoding: For example,   <code>new Buffer(string, 'base64')</code> could be used to convert a Base64 string into the original   sequence of bytes that it represents.</li> <li>There are several other combinations of arguments.</li> </ul> <p>This meant that, in code like <code>var buffer = new Buffer(foo);</code>, it is not possible to tell what exactly the contents of the generated buffer are without knowing the type of <code>foo</code>.</p> <p>Sometimes, the value of <code>foo</code> comes from an external source. For example, this function could be exposed as a service on a web server, converting a UTF-8 string into its Base64 form:</p> <pre><code>function stringToBase64(req, res) {\n  // The request body should have the format of `{ string: 'foobar' }`\n  const rawBytes = new Buffer(req.body.string)\n  const encoded = rawBytes.toString('base64')\n  res.end({ encoded: encoded })\n}\n</code></pre> <p>Note that this code does not validate the type of <code>req.body.string</code>:</p> <ul> <li><code>req.body.string</code> is expected to be a string. If this is the case, all goes well.</li> <li><code>req.body.string</code> is controlled by the client that sends the request.</li> <li>If <code>req.body.string</code> is the number <code>50</code>, the <code>rawBytes</code> would be 50 bytes:</li> <li>Before Node.js 8, the content would be uninitialized</li> <li>After Node.js 8, the content would be <code>50</code> bytes with the value <code>0</code></li> </ul> <p>Because of the missing type check, an attacker could intentionally send a number as part of the request. Using this, they can either:</p> <ul> <li>Read uninitialized memory. This will leak passwords, encryption keys and other   kinds of sensitive information. (Information leak)</li> <li>Force the program to allocate a large amount of memory. For example, when specifying   <code>500000000</code> as the input value, each request will allocate 500MB of memory.   This can be used to either exhaust the memory available of a program completely   and make it crash, or slow it down significantly. (Denial of Service)</li> </ul> <p>Both of these scenarios are considered serious security issues in a real-world web server context.</p> <p>when using <code>Buffer.from(req.body.string)</code> instead, passing a number will always throw an exception instead, giving a controlled behaviour that can always be handled by the program.</p> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Porting-Buffer/#the-buffer-constructor-has-been-deprecated-for-a-while-is-this-really-an-issue","title":"The <code>Buffer()</code> constructor has been deprecated for a while. Is this really an issue?","text":"<p>Surveys of code in the <code>npm</code> ecosystem have shown that the <code>Buffer()</code> constructor is still widely used. This includes new code, and overall usage of such code has actually been increasing.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Readme/","title":"safer-buffer","text":"<p>Modern Buffer API polyfill without footguns, working on Node.js from 0.8 to current.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Readme/#how-to-use","title":"How to use?","text":"<p>First, port all <code>Buffer()</code> and <code>new Buffer()</code> calls to <code>Buffer.alloc()</code> and <code>Buffer.from()</code> API.</p> <p>Then, to achieve compatibility with outdated Node.js versions (<code>&lt;4.5.0</code> and 5.x <code>&lt;5.9.0</code>), use <code>const Buffer = require('safer-buffer').Buffer</code> in all files where you make calls to the new Buffer API. Use <code>var</code> instead of <code>const</code> if you need that for your Node.js version range support.</p> <p>Also, see the porting Buffer guide.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Readme/#do-i-need-it","title":"Do I need it?","text":"<p>Hopefully, not \u2014 dropping support for outdated Node.js versions should be fine nowdays, and that is the recommended path forward. You do need to port to the <code>Buffer.alloc()</code> and <code>Buffer.from()</code> though.</p> <p>See the porting guide for a better description.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Readme/#why-not-safe-buffer","title":"Why not safe-buffer?","text":"<p>In short: while <code>safe-buffer</code> serves as a polyfill for the new API, it allows old API usage and itself contains footguns.</p> <p><code>safe-buffer</code> could be used safely to get the new API while still keeping support for older Node.js versions (like this module), but while analyzing ecosystem usage of the old Buffer API I found out that <code>safe-buffer</code> is itself causing problems in some cases.</p> <p>For example, consider the following snippet:</p> <pre><code>$ cat example.unsafe.js\nconsole.log(Buffer(20))\n$ ./node-v6.13.0-linux-x64/bin/node example.unsafe.js\n&lt;Buffer 0a 00 00 00 00 00 00 00 28 13 de 02 00 00 00 00 05 00 00 00&gt;\n$ standard example.unsafe.js\nstandard: Use JavaScript Standard Style (https://standardjs.com)\n  /home/chalker/repo/safer-buffer/example.unsafe.js:2:13: 'Buffer()' was deprecated since v6. Use 'Buffer.alloc()' or 'Buffer.from()' (use 'https://www.npmjs.com/package/safe-buffer' for '&lt;4.5.0') instead.\n</code></pre> <p>This is allocates and writes to console an uninitialized chunk of memory. standard linter (among others) catch that and warn people to avoid using unsafe API.</p> <p>Let's now throw in <code>safe-buffer</code>!</p> <pre><code>$ cat example.safe-buffer.js\nconst Buffer = require('safe-buffer').Buffer\nconsole.log(Buffer(20))\n$ standard example.safe-buffer.js\n$ ./node-v6.13.0-linux-x64/bin/node example.safe-buffer.js\n&lt;Buffer 08 00 00 00 00 00 00 00 28 58 01 82 fe 7f 00 00 00 00 00 00&gt;\n</code></pre> <p>See the problem? Adding in <code>safe-buffer</code> magically removes the lint warning, but the behavior remains identi\u0441al to what we had before, and when launched on Node.js 6.x LTS \u2014 this dumps out chunks of uninitialized memory. And this code will still emit runtime warnings on Node.js 10.x and above.</p> <p>That was done by design. I first considered changing <code>safe-buffer</code>, prohibiting old API usage or emitting warnings on it, but that significantly diverges from <code>safe-buffer</code> design. After some discussion, it was decided to move my approach into a separate package, and this is that separate package.</p> <p>This footgun is not imaginary \u2014 I observed top-downloaded packages doing that kind of thing, \u00abfixing\u00bb the lint warning by blindly including <code>safe-buffer</code> without any actual changes.</p> <p>Also in some cases, even if the API was migrated to use of safe Buffer API \u2014 a random pull request can bring unsafe Buffer API usage back to the codebase by adding new calls \u2014 and that could go unnoticed even if you have a linter prohibiting that (becase of the reason stated above), and even pass CI. I also observed that being done in popular packages.</p> <p>Some examples:  * webdriverio    (a module with 548 759 downloads/month),  * websocket-stream    (218 288 d/m, fix in maxogden/websocket-stream#142),  * node-serialport    (113 138 d/m, fix in node-serialport/node-serialport#1510),  * karma    (3 973 193 d/m, fix in karma-runner/karma#2947),  * spdy-transport    (5 970 727 d/m, fix in spdy-http2/spdy-transport#53).  * And there are a lot more over the ecosystem.</p> <p>I filed a PR at mysticatea/eslint-plugin-node#110 to partially fix that (for cases when that lint rule is used), but it is a semver-major change for linter rules and presets, so it would take significant time for that to reach actual setups. It also hasn't been released yet (2018-03-20).</p> <p>Also, <code>safer-buffer</code> discourages the usage of <code>.allocUnsafe()</code>, which is often done by a mistake. It still supports it with an explicit concern barier, by placing it under <code>require('safer-buffer/dangereous')</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Readme/#but-isnt-throwing-bad","title":"But isn't throwing bad?","text":"<p>Not really. It's an error that could be noticed and fixed early, instead of causing havoc later like unguarded <code>new Buffer()</code> calls that end up receiving user input can do.</p> <p>This package affects only the files where <code>var Buffer = require('safer-buffer').Buffer</code> was done, so it is really simple to keep track of things and make sure that you don't mix old API usage with that. Also, CI should hint anything that you might have missed.</p> <p>New commits, if tested, won't land new usage of unsafe Buffer API this way. Node.js 10.x also deals with that by printing a runtime depecation warning.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Readme/#would-it-affect-third-party-modules","title":"Would it affect third-party modules?","text":"<p>No, unless you explicitly do an awful thing like monkey-patching or overriding the built-in <code>Buffer</code>. Don't do that.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Readme/#but-i-dont-want-throwing","title":"But I don't want throwing\u2026","text":"<p>That is also fine!</p> <p>Also, it could be better in some cases when you don't comprehensive enough test coverage.</p> <p>In that case \u2014 just don't override <code>Buffer</code> and use <code>var SaferBuffer = require('safer-buffer').Buffer</code> instead.</p> <p>That way, everything using <code>Buffer</code> natively would still work, but there would be two drawbacks:</p> <ul> <li><code>Buffer.from</code>/<code>Buffer.alloc</code> won't be polyfilled \u2014 use <code>SaferBuffer.from</code> and   <code>SaferBuffer.alloc</code> instead.</li> <li>You are still open to accidentally using the insecure deprecated API \u2014 use a linter to catch that.</li> </ul> <p>Note that using a linter to catch accidential <code>Buffer</code> constructor usage in this case is strongly recommended. <code>Buffer</code> is not overriden in this usecase, so linters won't get confused.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/safer-buffer/Readme/#without-footguns","title":"\u00abWithout footguns\u00bb?","text":"<p>Well, it is still possible to do some things with <code>Buffer</code> API, e.g. accessing <code>.buffer</code> property on older versions and duping things from there. You shouldn't do that in your code, probabably.</p> <p>The intention is to remove the most significant footguns that affect lots of packages in the ecosystem, and to do it in the proper way.</p> <p>Also, this package doesn't protect against security issues affecting some Node.js versions, so for usage in your own production code, it is still recommended to update to a Node.js version supported by upstream.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/","title":"semver(1) -- The semantic versioner for npm","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#install","title":"Install","text":"<pre><code>npm install semver\n````\n\n## Usage\n\nAs a node module:\n\n```js\nconst semver = require('semver')\n\nsemver.valid('1.2.3') // '1.2.3'\nsemver.valid('a.b.c') // null\nsemver.clean('  =v1.2.3   ') // '1.2.3'\nsemver.satisfies('1.2.3', '1.x || &gt;=2.5.0 || 5.0.0 - 7.2.3') // true\nsemver.gt('1.2.3', '9.8.7') // false\nsemver.lt('1.2.3', '9.8.7') // true\nsemver.minVersion('&gt;=1.0.0') // '1.0.0'\nsemver.valid(semver.coerce('v2')) // '2.0.0'\nsemver.valid(semver.coerce('42.6.7.9.3-alpha')) // '42.6.7'\n</code></pre> <p>You can also just load the module for the function that you care about if you'd like to minimize your footprint.</p> <pre><code>// load the whole API at once in a single object\nconst semver = require('semver')\n\n// or just load the bits you need\n// all of them listed here, just pick and choose what you want\n\n// classes\nconst SemVer = require('semver/classes/semver')\nconst Comparator = require('semver/classes/comparator')\nconst Range = require('semver/classes/range')\n\n// functions for working with versions\nconst semverParse = require('semver/functions/parse')\nconst semverValid = require('semver/functions/valid')\nconst semverClean = require('semver/functions/clean')\nconst semverInc = require('semver/functions/inc')\nconst semverDiff = require('semver/functions/diff')\nconst semverMajor = require('semver/functions/major')\nconst semverMinor = require('semver/functions/minor')\nconst semverPatch = require('semver/functions/patch')\nconst semverPrerelease = require('semver/functions/prerelease')\nconst semverCompare = require('semver/functions/compare')\nconst semverRcompare = require('semver/functions/rcompare')\nconst semverCompareLoose = require('semver/functions/compare-loose')\nconst semverCompareBuild = require('semver/functions/compare-build')\nconst semverSort = require('semver/functions/sort')\nconst semverRsort = require('semver/functions/rsort')\n\n// low-level comparators between versions\nconst semverGt = require('semver/functions/gt')\nconst semverLt = require('semver/functions/lt')\nconst semverEq = require('semver/functions/eq')\nconst semverNeq = require('semver/functions/neq')\nconst semverGte = require('semver/functions/gte')\nconst semverLte = require('semver/functions/lte')\nconst semverCmp = require('semver/functions/cmp')\nconst semverCoerce = require('semver/functions/coerce')\n\n// working with ranges\nconst semverSatisfies = require('semver/functions/satisfies')\nconst semverMaxSatisfying = require('semver/ranges/max-satisfying')\nconst semverMinSatisfying = require('semver/ranges/min-satisfying')\nconst semverToComparators = require('semver/ranges/to-comparators')\nconst semverMinVersion = require('semver/ranges/min-version')\nconst semverValidRange = require('semver/ranges/valid')\nconst semverOutside = require('semver/ranges/outside')\nconst semverGtr = require('semver/ranges/gtr')\nconst semverLtr = require('semver/ranges/ltr')\nconst semverIntersects = require('semver/ranges/intersects')\nconst semverSimplifyRange = require('semver/ranges/simplify')\nconst semverRangeSubset = require('semver/ranges/subset')\n</code></pre> <p>As a command-line utility:</p> <pre><code>$ semver -h\n\nA JavaScript implementation of the https://semver.org/ specification\nCopyright Isaac Z. Schlueter\n\nUsage: semver [options] &lt;version&gt; [&lt;version&gt; [...]]\nPrints valid versions sorted by SemVer precedence\n\nOptions:\n-r --range &lt;range&gt;\n        Print versions that match the specified range.\n\n-i --increment [&lt;level&gt;]\n        Increment a version by the specified level.  Level can\n        be one of: major, minor, patch, premajor, preminor,\n        prepatch, prerelease, or release.  Default level is 'patch'.\n        Only one version may be specified.\n\n--preid &lt;identifier&gt;\n        Identifier to be used to prefix premajor, preminor,\n        prepatch or prerelease version increments.\n\n-l --loose\n        Interpret versions and ranges loosely\n\n-n &lt;0|1&gt;\n        This is the base to be used for the prerelease identifier.\n\n-p --include-prerelease\n        Always include prerelease versions in range matching\n\n-c --coerce\n        Coerce a string into SemVer if possible\n        (does not imply --loose)\n\n--rtl\n        Coerce version strings right to left\n\n--ltr\n        Coerce version strings left to right (default)\n\nProgram exits successfully if any valid version satisfies\nall supplied ranges, and prints all satisfying versions.\n\nIf no satisfying versions are found, then exits failure.\n\nVersions are printed in ascending order, so supplying\nmultiple versions to the utility will just sort them.\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#versions","title":"Versions","text":"<p>A \"version\" is described by the <code>v2.0.0</code> specification found at https://semver.org/.</p> <p>A leading <code>\"=\"</code> or <code>\"v\"</code> character is stripped off and ignored. Support for stripping a leading \"v\" is kept for compatibility with <code>v1.0.0</code> of the SemVer specification but should not be used anymore.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#ranges","title":"Ranges","text":"<p>A <code>version range</code> is a set of <code>comparators</code> that specify versions that satisfy the range.</p> <p>A <code>comparator</code> is composed of an <code>operator</code> and a <code>version</code>.  The set of primitive <code>operators</code> is:</p> <ul> <li><code>&lt;</code> Less than</li> <li><code>&lt;=</code> Less than or equal to</li> <li><code>&gt;</code> Greater than</li> <li><code>&gt;=</code> Greater than or equal to</li> <li><code>=</code> Equal.  If no operator is specified, then equality is assumed,   so this operator is optional but MAY be included.</li> </ul> <p>For example, the comparator <code>&gt;=1.2.7</code> would match the versions <code>1.2.7</code>, <code>1.2.8</code>, <code>2.5.3</code>, and <code>1.3.9</code>, but not the versions <code>1.2.6</code> or <code>1.1.0</code>. The comparator <code>&gt;1</code> is equivalent to <code>&gt;=2.0.0</code> and would match the versions <code>2.0.0</code> and <code>3.1.0</code>, but not the versions <code>1.0.1</code> or <code>1.1.0</code>.</p> <p>Comparators can be joined by whitespace to form a <code>comparator set</code>, which is satisfied by the intersection of all of the comparators it includes.</p> <p>A range is composed of one or more comparator sets, joined by <code>||</code>.  A version matches a range if and only if every comparator in at least one of the <code>||</code>-separated comparator sets is satisfied by the version.</p> <p>For example, the range <code>&gt;=1.2.7 &lt;1.3.0</code> would match the versions <code>1.2.7</code>, <code>1.2.8</code>, and <code>1.2.99</code>, but not the versions <code>1.2.6</code>, <code>1.3.0</code>, or <code>1.1.0</code>.</p> <p>The range <code>1.2.7 || &gt;=1.2.9 &lt;2.0.0</code> would match the versions <code>1.2.7</code>, <code>1.2.9</code>, and <code>1.4.6</code>, but not the versions <code>1.2.8</code> or <code>2.0.0</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#prerelease-tags","title":"Prerelease Tags","text":"<p>If a version has a prerelease tag (for example, <code>1.2.3-alpha.3</code>) then it will only be allowed to satisfy comparator sets if at least one comparator with the same <code>[major, minor, patch]</code> tuple also has a prerelease tag.</p> <p>For example, the range <code>&gt;1.2.3-alpha.3</code> would be allowed to match the version <code>1.2.3-alpha.7</code>, but it would not be satisfied by <code>3.4.5-alpha.9</code>, even though <code>3.4.5-alpha.9</code> is technically \"greater than\" <code>1.2.3-alpha.3</code> according to the SemVer sort rules.  The version range only accepts prerelease tags on the <code>1.2.3</code> version. Version <code>3.4.5</code> would satisfy the range because it does not have a prerelease flag, and <code>3.4.5</code> is greater than <code>1.2.3-alpha.7</code>.</p> <p>The purpose of this behavior is twofold.  First, prerelease versions frequently are updated very quickly, and contain many breaking changes that are (by the author's design) not yet fit for public consumption. Therefore, by default, they are excluded from range-matching semantics.</p> <p>Second, a user who has opted into using a prerelease version has indicated the intent to use that specific set of alpha/beta/rc versions.  By including a prerelease tag in the range, the user is indicating that they are aware of the risk.  However, it is still not appropriate to assume that they have opted into taking a similar risk on the next set of prerelease versions.</p> <p>Note that this behavior can be suppressed (treating all prerelease versions as if they were normal versions, for range-matching) by setting the <code>includePrerelease</code> flag on the options object to any functions that do range matching.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#prerelease-identifiers","title":"Prerelease Identifiers","text":"<p>The method <code>.inc</code> takes an additional <code>identifier</code> string argument that will append the value of the string as a prerelease identifier:</p> <pre><code>semver.inc('1.2.3', 'prerelease', 'beta')\n// '1.2.4-beta.0'\n</code></pre> <p>command-line example:</p> <pre><code>$ semver 1.2.3 -i prerelease --preid beta\n1.2.4-beta.0\n</code></pre> <p>Which then can be used to increment further:</p> <pre><code>$ semver 1.2.4-beta.0 -i prerelease\n1.2.4-beta.1\n</code></pre> <p>To get out of the prerelease phase, use the <code>release</code> option:</p> <pre><code>$ semver 1.2.4-beta.1 -i release\n1.2.4\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#prerelease-identifier-base","title":"Prerelease Identifier Base","text":"<p>The method <code>.inc</code> takes an optional parameter 'identifierBase' string that will let you let your prerelease number as zero-based or one-based. Set to <code>false</code> to omit the prerelease number altogether. If you do not specify this parameter, it will default to zero-based.</p> <pre><code>semver.inc('1.2.3', 'prerelease', 'beta', '1')\n// '1.2.4-beta.1'\n</code></pre> <pre><code>semver.inc('1.2.3', 'prerelease', 'beta', false)\n// '1.2.4-beta'\n</code></pre> <p>command-line example:</p> <pre><code>$ semver 1.2.3 -i prerelease --preid beta -n 1\n1.2.4-beta.1\n</code></pre> <pre><code>$ semver 1.2.3 -i prerelease --preid beta -n false\n1.2.4-beta\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#advanced-range-syntax","title":"Advanced Range Syntax","text":"<p>Advanced range syntax desugars to primitive comparators in deterministic ways.</p> <p>Advanced ranges may be combined in the same way as primitive comparators using white space or <code>||</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#hyphen-ranges-xyz-abc","title":"Hyphen Ranges <code>X.Y.Z - A.B.C</code>","text":"<p>Specifies an inclusive set.</p> <ul> <li><code>1.2.3 - 2.3.4</code> := <code>&gt;=1.2.3 &lt;=2.3.4</code></li> </ul> <p>If a partial version is provided as the first version in the inclusive range, then the missing pieces are replaced with zeroes.</p> <ul> <li><code>1.2 - 2.3.4</code> := <code>&gt;=1.2.0 &lt;=2.3.4</code></li> </ul> <p>If a partial version is provided as the second version in the inclusive range, then all versions that start with the supplied parts of the tuple are accepted, but nothing that would be greater than the provided tuple parts.</p> <ul> <li><code>1.2.3 - 2.3</code> := <code>&gt;=1.2.3 &lt;2.4.0-0</code></li> <li><code>1.2.3 - 2</code> := <code>&gt;=1.2.3 &lt;3.0.0-0</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#x-ranges-12x-1x-12","title":"X-Ranges <code>1.2.x</code> <code>1.X</code> <code>1.2.*</code> <code>*</code>","text":"<p>Any of <code>X</code>, <code>x</code>, or <code>*</code> may be used to \"stand in\" for one of the numeric values in the <code>[major, minor, patch]</code> tuple.</p> <ul> <li><code>*</code> := <code>&gt;=0.0.0</code> (Any non-prerelease version satisfies, unless   <code>includePrerelease</code> is specified, in which case any version at all   satisfies)</li> <li><code>1.x</code> := <code>&gt;=1.0.0 &lt;2.0.0-0</code> (Matching major version)</li> <li><code>1.2.x</code> := <code>&gt;=1.2.0 &lt;1.3.0-0</code> (Matching major and minor versions)</li> </ul> <p>A partial version range is treated as an X-Range, so the special character is in fact optional.</p> <ul> <li><code>\"\"</code> (empty string) := <code>*</code> := <code>&gt;=0.0.0</code></li> <li><code>1</code> := <code>1.x.x</code> := <code>&gt;=1.0.0 &lt;2.0.0-0</code></li> <li><code>1.2</code> := <code>1.2.x</code> := <code>&gt;=1.2.0 &lt;1.3.0-0</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#tilde-ranges-123-12-1","title":"Tilde Ranges <code>~1.2.3</code> <code>~1.2</code> <code>~1</code>","text":"<p>Allows patch-level changes if a minor version is specified on the comparator.  Allows minor-level changes if not.</p> <ul> <li><code>~1.2.3</code> := <code>&gt;=1.2.3 &lt;1.(2+1).0</code> := <code>&gt;=1.2.3 &lt;1.3.0-0</code></li> <li><code>~1.2</code> := <code>&gt;=1.2.0 &lt;1.(2+1).0</code> := <code>&gt;=1.2.0 &lt;1.3.0-0</code> (Same as <code>1.2.x</code>)</li> <li><code>~1</code> := <code>&gt;=1.0.0 &lt;(1+1).0.0</code> := <code>&gt;=1.0.0 &lt;2.0.0-0</code> (Same as <code>1.x</code>)</li> <li><code>~0.2.3</code> := <code>&gt;=0.2.3 &lt;0.(2+1).0</code> := <code>&gt;=0.2.3 &lt;0.3.0-0</code></li> <li><code>~0.2</code> := <code>&gt;=0.2.0 &lt;0.(2+1).0</code> := <code>&gt;=0.2.0 &lt;0.3.0-0</code> (Same as <code>0.2.x</code>)</li> <li><code>~0</code> := <code>&gt;=0.0.0 &lt;(0+1).0.0</code> := <code>&gt;=0.0.0 &lt;1.0.0-0</code> (Same as <code>0.x</code>)</li> <li><code>~1.2.3-beta.2</code> := <code>&gt;=1.2.3-beta.2 &lt;1.3.0-0</code> Note that prereleases in   the <code>1.2.3</code> version will be allowed, if they are greater than or   equal to <code>beta.2</code>.  So, <code>1.2.3-beta.4</code> would be allowed, but   <code>1.2.4-beta.2</code> would not, because it is a prerelease of a   different <code>[major, minor, patch]</code> tuple.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#caret-ranges-123-025-004","title":"Caret Ranges <code>^1.2.3</code> <code>^0.2.5</code> <code>^0.0.4</code>","text":"<p>Allows changes that do not modify the left-most non-zero element in the <code>[major, minor, patch]</code> tuple.  In other words, this allows patch and minor updates for versions <code>1.0.0</code> and above, patch updates for versions <code>0.X &gt;=0.1.0</code>, and no updates for versions <code>0.0.X</code>.</p> <p>Many authors treat a <code>0.x</code> version as if the <code>x</code> were the major \"breaking-change\" indicator.</p> <p>Caret ranges are ideal when an author may make breaking changes between <code>0.2.4</code> and <code>0.3.0</code> releases, which is a common practice. However, it presumes that there will not be breaking changes between <code>0.2.4</code> and <code>0.2.5</code>.  It allows for changes that are presumed to be additive (but non-breaking), according to commonly observed practices.</p> <ul> <li><code>^1.2.3</code> := <code>&gt;=1.2.3 &lt;2.0.0-0</code></li> <li><code>^0.2.3</code> := <code>&gt;=0.2.3 &lt;0.3.0-0</code></li> <li><code>^0.0.3</code> := <code>&gt;=0.0.3 &lt;0.0.4-0</code></li> <li><code>^1.2.3-beta.2</code> := <code>&gt;=1.2.3-beta.2 &lt;2.0.0-0</code> Note that prereleases in   the <code>1.2.3</code> version will be allowed, if they are greater than or   equal to <code>beta.2</code>.  So, <code>1.2.3-beta.4</code> would be allowed, but   <code>1.2.4-beta.2</code> would not, because it is a prerelease of a   different <code>[major, minor, patch]</code> tuple.</li> <li><code>^0.0.3-beta</code> := <code>&gt;=0.0.3-beta &lt;0.0.4-0</code>  Note that prereleases in the   <code>0.0.3</code> version only will be allowed, if they are greater than or   equal to <code>beta</code>.  So, <code>0.0.3-pr.2</code> would be allowed.</li> </ul> <p>When parsing caret ranges, a missing <code>patch</code> value desugars to the number <code>0</code>, but will allow flexibility within that value, even if the major and minor versions are both <code>0</code>.</p> <ul> <li><code>^1.2.x</code> := <code>&gt;=1.2.0 &lt;2.0.0-0</code></li> <li><code>^0.0.x</code> := <code>&gt;=0.0.0 &lt;0.1.0-0</code></li> <li><code>^0.0</code> := <code>&gt;=0.0.0 &lt;0.1.0-0</code></li> </ul> <p>A missing <code>minor</code> and <code>patch</code> values will desugar to zero, but also allow flexibility within those values, even if the major version is zero.</p> <ul> <li><code>^1.x</code> := <code>&gt;=1.0.0 &lt;2.0.0-0</code></li> <li><code>^0.x</code> := <code>&gt;=0.0.0 &lt;1.0.0-0</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#range-grammar","title":"Range Grammar","text":"<p>Putting all this together, here is a Backus-Naur grammar for ranges, for the benefit of parser authors:</p> <pre><code>range-set  ::= range ( logical-or range ) *\nlogical-or ::= ( ' ' ) * '||' ( ' ' ) *\nrange      ::= hyphen | simple ( ' ' simple ) * | ''\nhyphen     ::= partial ' - ' partial\nsimple     ::= primitive | partial | tilde | caret\nprimitive  ::= ( '&lt;' | '&gt;' | '&gt;=' | '&lt;=' | '=' ) partial\npartial    ::= xr ( '.' xr ( '.' xr qualifier ? )? )?\nxr         ::= 'x' | 'X' | '*' | nr\nnr         ::= '0' | ['1'-'9'] ( ['0'-'9'] ) *\ntilde      ::= '~' partial\ncaret      ::= '^' partial\nqualifier  ::= ( '-' pre )? ( '+' build )?\npre        ::= parts\nbuild      ::= parts\nparts      ::= part ( '.' part ) *\npart       ::= nr | [-0-9A-Za-z]+\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#functions","title":"Functions","text":"<p>All methods and classes take a final <code>options</code> object argument.  All options in this object are <code>false</code> by default.  The options supported are:</p> <ul> <li><code>loose</code>: Be more forgiving about not-quite-valid semver strings.   (Any resulting output will always be 100% strict compliant, of   course.)  For backwards compatibility reasons, if the <code>options</code>   argument is a boolean value instead of an object, it is interpreted   to be the <code>loose</code> param.</li> <li><code>includePrerelease</code>: Set to suppress the default   behavior of   excluding prerelease tagged versions from ranges unless they are   explicitly opted into.</li> </ul> <p>Strict-mode Comparators and Ranges will be strict about the SemVer strings that they parse.</p> <ul> <li><code>valid(v)</code>: Return the parsed version, or null if it's not valid.</li> <li><code>inc(v, releaseType, options, identifier, identifierBase)</code>:    Return the version incremented by the release   type (<code>major</code>, <code>premajor</code>, <code>minor</code>, <code>preminor</code>, <code>patch</code>,   <code>prepatch</code>, <code>prerelease</code>, or <code>release</code>), or null if it's not valid</li> <li><code>premajor</code> in one call will bump the version up to the next major     version and down to a prerelease of that major version.     <code>preminor</code>, and <code>prepatch</code> work the same way.</li> <li>If called from a non-prerelease version, <code>prerelease</code> will work the     same as <code>prepatch</code>. It increments the patch version and then makes a     prerelease. If the input version is already a prerelease it simply     increments it.</li> <li><code>release</code> will remove any prerelease part of the version.</li> <li><code>identifier</code> can be used to prefix <code>premajor</code>, <code>preminor</code>,     <code>prepatch</code>, or <code>prerelease</code> version increments. <code>identifierBase</code>     is the base to be used for the <code>prerelease</code> identifier.</li> <li><code>prerelease(v)</code>: Returns an array of prerelease components, or null   if none exist. Example: <code>prerelease('1.2.3-alpha.1') -&gt; ['alpha', 1]</code></li> <li><code>major(v)</code>: Return the major version number.</li> <li><code>minor(v)</code>: Return the minor version number.</li> <li><code>patch(v)</code>: Return the patch version number.</li> <li><code>intersects(r1, r2, loose)</code>: Return true if the two supplied ranges   or comparators intersect.</li> <li><code>parse(v)</code>: Attempt to parse a string as a semantic version, returning either   a <code>SemVer</code> object or <code>null</code>.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#comparison","title":"Comparison","text":"<ul> <li><code>gt(v1, v2)</code>: <code>v1 &gt; v2</code></li> <li><code>gte(v1, v2)</code>: <code>v1 &gt;= v2</code></li> <li><code>lt(v1, v2)</code>: <code>v1 &lt; v2</code></li> <li><code>lte(v1, v2)</code>: <code>v1 &lt;= v2</code></li> <li><code>eq(v1, v2)</code>: <code>v1 == v2</code> This is true if they're logically equivalent,   even if they're not the same string.  You already know how to   compare strings.</li> <li><code>neq(v1, v2)</code>: <code>v1 != v2</code> The opposite of <code>eq</code>.</li> <li><code>cmp(v1, comparator, v2)</code>: Pass in a comparison string, and it'll call   the corresponding function above.  <code>\"===\"</code> and <code>\"!==\"</code> do simple   string comparison, but are included for completeness.  Throws if an   invalid comparison string is provided.</li> <li><code>compare(v1, v2)</code>: Return <code>0</code> if <code>v1 == v2</code>, or <code>1</code> if <code>v1</code> is greater, or <code>-1</code> if   <code>v2</code> is greater.  Sorts in ascending order if passed to <code>Array.sort()</code>.</li> <li><code>rcompare(v1, v2)</code>: The reverse of <code>compare</code>.  Sorts an array of versions   in descending order when passed to <code>Array.sort()</code>.</li> <li><code>compareBuild(v1, v2)</code>: The same as <code>compare</code> but considers <code>build</code> when two versions   are equal.  Sorts in ascending order if passed to <code>Array.sort()</code>.</li> <li><code>compareLoose(v1, v2)</code>: Short for <code>compare(v1, v2, { loose: true })</code>.</li> <li><code>diff(v1, v2)</code>: Returns the difference between two versions by the release type   (<code>major</code>, <code>premajor</code>, <code>minor</code>, <code>preminor</code>, <code>patch</code>, <code>prepatch</code>, or <code>prerelease</code>),   or null if the versions are the same.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#sorting","title":"Sorting","text":"<ul> <li><code>sort(versions)</code>: Returns a sorted array of versions based on the <code>compareBuild</code>    function.</li> <li><code>rsort(versions)</code>: The reverse of <code>sort</code>. Returns an array of versions based on   the <code>compareBuild</code> function in descending order.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#comparators","title":"Comparators","text":"<ul> <li><code>intersects(comparator)</code>: Return true if the comparators intersect</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#ranges_1","title":"Ranges","text":"<ul> <li><code>validRange(range)</code>: Return the valid range or null if it's not valid.</li> <li><code>satisfies(version, range)</code>: Return true if the version satisfies the   range.</li> <li><code>maxSatisfying(versions, range)</code>: Return the highest version in the list   that satisfies the range, or <code>null</code> if none of them do.</li> <li><code>minSatisfying(versions, range)</code>: Return the lowest version in the list   that satisfies the range, or <code>null</code> if none of them do.</li> <li><code>minVersion(range)</code>: Return the lowest version that can match   the given range.</li> <li><code>gtr(version, range)</code>: Return <code>true</code> if the version is greater than all the   versions possible in the range.</li> <li><code>ltr(version, range)</code>: Return <code>true</code> if the version is less than all the   versions possible in the range.</li> <li><code>outside(version, range, hilo)</code>: Return true if the version is outside   the bounds of the range in either the high or low direction.  The   <code>hilo</code> argument must be either the string <code>'&gt;'</code> or <code>'&lt;'</code>.  (This is   the function called by <code>gtr</code> and <code>ltr</code>.)</li> <li><code>intersects(range)</code>: Return true if any of the range comparators intersect.</li> <li><code>simplifyRange(versions, range)</code>: Return a \"simplified\" range that   matches the same items in the <code>versions</code> list as the range specified.  Note   that it does not guarantee that it would match the same versions in all   cases, only for the set of versions provided.  This is useful when   generating ranges by joining together multiple versions with <code>||</code>   programmatically, to provide the user with something a bit more   ergonomic.  If the provided range is shorter in string-length than the   generated range, then that is returned.</li> <li><code>subset(subRange, superRange)</code>: Return <code>true</code> if the <code>subRange</code> range is   entirely contained by the <code>superRange</code> range.</li> </ul> <p>Note that, since ranges may be non-contiguous, a version might not be greater than a range, less than a range, or satisfy a range!  For example, the range <code>1.2 &lt;1.2.9 || &gt;2.0.0</code> would have a hole from <code>1.2.9</code> until <code>2.0.0</code>, so version <code>1.2.10</code> would not be greater than the range (because <code>2.0.1</code> satisfies, which is higher), nor less than the range (since <code>1.2.8</code> satisfies, which is lower), and it also does not satisfy the range.</p> <p>If you want to know if a version satisfies or does not satisfy a range, use the <code>satisfies(version, range)</code> function.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#coercion","title":"Coercion","text":"<ul> <li><code>coerce(version, options)</code>: Coerces a string to semver if possible</li> </ul> <p>This aims to provide a very forgiving translation of a non-semver string to semver. It looks for the first digit in a string and consumes all remaining characters which satisfy at least a partial semver (e.g., <code>1</code>, <code>1.2</code>, <code>1.2.3</code>) up to the max permitted length (256 characters).  Longer versions are simply truncated (<code>4.6.3.9.2-alpha2</code> becomes <code>4.6.3</code>).  All surrounding text is simply ignored (<code>v3.4 replaces v3.3.1</code> becomes <code>3.4.0</code>).  Only text which lacks digits will fail coercion (<code>version one</code> is not valid).  The maximum length for any semver component considered for coercion is 16 characters; longer components will be ignored (<code>10000000000000000.4.7.4</code> becomes <code>4.7.4</code>).  The maximum value for any semver component is <code>Number.MAX_SAFE_INTEGER || (2**53 - 1)</code>; higher value components are invalid (<code>9999999999999999.4.7.4</code> is likely invalid).</p> <p>If the <code>options.rtl</code> flag is set, then <code>coerce</code> will return the right-most coercible tuple that does not share an ending index with a longer coercible tuple.  For example, <code>1.2.3.4</code> will return <code>2.3.4</code> in rtl mode, not <code>4.0.0</code>.  <code>1.2.3/4</code> will return <code>4.0.0</code>, because the <code>4</code> is not a part of any other overlapping SemVer tuple.</p> <p>If the <code>options.includePrerelease</code> flag is set, then the <code>coerce</code> result will contain prerelease and build parts of a version.  For example, <code>1.2.3.4-rc.1+rev.2</code> will preserve prerelease <code>rc.1</code> and build <code>rev.2</code> in the result.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#clean","title":"Clean","text":"<ul> <li><code>clean(version)</code>: Clean a string to be a valid semver if possible</li> </ul> <p>This will return a cleaned and trimmed semver version. If the provided version is not valid a null will be returned. This does not work for ranges.</p> <p>ex. * <code>s.clean(' = v 2.1.5foo')</code>: <code>null</code> * <code>s.clean(' = v 2.1.5foo', { loose: true })</code>: <code>'2.1.5-foo'</code> * <code>s.clean(' = v 2.1.5-foo')</code>: <code>null</code> * <code>s.clean(' = v 2.1.5-foo', { loose: true })</code>: <code>'2.1.5-foo'</code> * <code>s.clean('=v2.1.5')</code>: <code>'2.1.5'</code> * <code>s.clean('  =v2.1.5')</code>: <code>'2.1.5'</code> * <code>s.clean('      2.1.5   ')</code>: <code>'2.1.5'</code> * <code>s.clean('~1.0.0')</code>: <code>null</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#constants","title":"Constants","text":"<p>As a convenience, helper constants are exported to provide information about what <code>node-semver</code> supports:</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#release_types","title":"<code>RELEASE_TYPES</code>","text":"<ul> <li>major</li> <li>premajor</li> <li>minor</li> <li>preminor</li> <li>patch</li> <li>prepatch</li> <li>prerelease</li> </ul> <pre><code>const semver = require('semver');\n\nif (semver.RELEASE_TYPES.includes(arbitraryUserInput)) {\n  console.log('This is a valid release type!');\n} else {\n  console.warn('This is NOT a valid release type!');\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#semver_spec_version","title":"<code>SEMVER_SPEC_VERSION</code>","text":"<p>2.0.0</p> <pre><code>const semver = require('semver');\n\nconsole.log('We are currently using the semver specification version:', semver.SEMVER_SPEC_VERSION);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/semver/#exported-modules","title":"Exported Modules","text":"<p>You may pull in just the part of this semver utility that you need if you are sensitive to packing and tree-shaking concerns.  The main <code>require('semver')</code> export uses getter functions to lazily load the parts of the API that are used.</p> <p>The following modules are available:</p> <ul> <li><code>require('semver')</code></li> <li><code>require('semver/classes')</code></li> <li><code>require('semver/classes/comparator')</code></li> <li><code>require('semver/classes/range')</code></li> <li><code>require('semver/classes/semver')</code></li> <li><code>require('semver/functions/clean')</code></li> <li><code>require('semver/functions/cmp')</code></li> <li><code>require('semver/functions/coerce')</code></li> <li><code>require('semver/functions/compare')</code></li> <li><code>require('semver/functions/compare-build')</code></li> <li><code>require('semver/functions/compare-loose')</code></li> <li><code>require('semver/functions/diff')</code></li> <li><code>require('semver/functions/eq')</code></li> <li><code>require('semver/functions/gt')</code></li> <li><code>require('semver/functions/gte')</code></li> <li><code>require('semver/functions/inc')</code></li> <li><code>require('semver/functions/lt')</code></li> <li><code>require('semver/functions/lte')</code></li> <li><code>require('semver/functions/major')</code></li> <li><code>require('semver/functions/minor')</code></li> <li><code>require('semver/functions/neq')</code></li> <li><code>require('semver/functions/parse')</code></li> <li><code>require('semver/functions/patch')</code></li> <li><code>require('semver/functions/prerelease')</code></li> <li><code>require('semver/functions/rcompare')</code></li> <li><code>require('semver/functions/rsort')</code></li> <li><code>require('semver/functions/satisfies')</code></li> <li><code>require('semver/functions/sort')</code></li> <li><code>require('semver/functions/valid')</code></li> <li><code>require('semver/ranges/gtr')</code></li> <li><code>require('semver/ranges/intersects')</code></li> <li><code>require('semver/ranges/ltr')</code></li> <li><code>require('semver/ranges/max-satisfying')</code></li> <li><code>require('semver/ranges/min-satisfying')</code></li> <li><code>require('semver/ranges/min-version')</code></li> <li><code>require('semver/ranges/outside')</code></li> <li><code>require('semver/ranges/simplify')</code></li> <li><code>require('semver/ranges/subset')</code></li> <li><code>require('semver/ranges/to-comparators')</code></li> <li><code>require('semver/ranges/valid')</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/","title":"send","text":"<p>Send is a library for streaming files from the file system as a http response supporting partial responses (Ranges), conditional-GET negotiation (If-Match, If-Unmodified-Since, If-None-Match, If-Modified-Since), high test coverage, and granular events which may be leveraged to take appropriate actions in your application or framework.</p> <p>Looking to serve up entire folders mapped to URLs? Try serve-static.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#installation","title":"Installation","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install send\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#api","title":"API","text":"<pre><code>var send = require('send')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#sendreq-path-options","title":"send(req, path, [options])","text":"<p>Create a new <code>SendStream</code> for the given path to send to a <code>res</code>. The <code>req</code> is the Node.js HTTP request and the <code>path</code> is a urlencoded path to send (urlencoded, not the actual file-system path).</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#options","title":"Options","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/send/#acceptranges","title":"acceptRanges","text":"<p>Enable or disable accepting ranged requests, defaults to true. Disabling this will not send <code>Accept-Ranges</code> and ignore the contents of the <code>Range</code> request header.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#cachecontrol","title":"cacheControl","text":"<p>Enable or disable setting <code>Cache-Control</code> response header, defaults to true. Disabling this will ignore the <code>immutable</code> and <code>maxAge</code> options.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#dotfiles","title":"dotfiles","text":"<p>Set how \"dotfiles\" are treated when encountered. A dotfile is a file or directory that begins with a dot (\".\"). Note this check is done on the path itself without checking if the path actually exists on the disk. If <code>root</code> is specified, only the dotfiles above the root are checked (i.e. the root itself can be within a dotfile when set to \"deny\").</p> <ul> <li><code>'allow'</code> No special treatment for dotfiles.</li> <li><code>'deny'</code> Send a 403 for any request for a dotfile.</li> <li><code>'ignore'</code> Pretend like the dotfile does not exist and 404.</li> </ul> <p>The default value is similar to <code>'ignore'</code>, with the exception that this default will not ignore the files within a directory that begins with a dot, for backward-compatibility.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#end","title":"end","text":"<p>Byte offset at which the stream ends, defaults to the length of the file minus 1. The end is inclusive in the stream, meaning <code>end: 3</code> will include the 4th byte in the stream.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#etag","title":"etag","text":"<p>Enable or disable etag generation, defaults to true.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#extensions","title":"extensions","text":"<p>If a given file doesn't exist, try appending one of the given extensions, in the given order. By default, this is disabled (set to <code>false</code>). An example value that will serve extension-less HTML files: <code>['html', 'htm']</code>. This is skipped if the requested file already has an extension.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#immutable","title":"immutable","text":"<p>Enable or disable the <code>immutable</code> directive in the <code>Cache-Control</code> response header, defaults to <code>false</code>. If set to <code>true</code>, the <code>maxAge</code> option should also be specified to enable caching. The <code>immutable</code> directive will prevent supported clients from making conditional requests during the life of the <code>maxAge</code> option to check if the file has changed.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#index","title":"index","text":"<p>By default send supports \"index.html\" files, to disable this set <code>false</code> or to supply a new index pass a string or an array in preferred order.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#lastmodified","title":"lastModified","text":"<p>Enable or disable <code>Last-Modified</code> header, defaults to true. Uses the file system's last modified value.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#maxage","title":"maxAge","text":"<p>Provide a max-age in milliseconds for http caching, defaults to 0. This can also be a string accepted by the ms module.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#root","title":"root","text":"<p>Serve files relative to <code>path</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#start","title":"start","text":"<p>Byte offset at which the stream starts, defaults to 0. The start is inclusive, meaning <code>start: 2</code> will include the 3rd byte in the stream.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#events","title":"Events","text":"<p>The <code>SendStream</code> is an event emitter and will emit the following events:</p> <ul> <li><code>error</code> an error occurred <code>(err)</code></li> <li><code>directory</code> a directory was requested <code>(res, path)</code></li> <li><code>file</code> a file was requested <code>(path, stat)</code></li> <li><code>headers</code> the headers are about to be set on a file <code>(res, path, stat)</code></li> <li><code>stream</code> file streaming has started <code>(stream)</code></li> <li><code>end</code> streaming has completed</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#pipe","title":".pipe","text":"<p>The <code>pipe</code> method is used to pipe the response into the Node.js HTTP response object, typically <code>send(req, path, options).pipe(res)</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#error-handling","title":"Error-handling","text":"<p>By default when no <code>error</code> listeners are present an automatic response will be made, otherwise you have full control over the response, aka you may show a 5xx page etc.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#caching","title":"Caching","text":"<p>It does not perform internal caching, you should use a reverse proxy cache such as Varnish for this, or those fancy things called CDNs. If your application is small enough that it would benefit from single-node memory caching, it's small enough that it does not need caching at all ;).</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#debugging","title":"Debugging","text":"<p>To enable <code>debug()</code> instrumentation output export DEBUG:</p> <pre><code>$ DEBUG=send node app\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#running-tests","title":"Running tests","text":"<pre><code>$ npm install\n$ npm test\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#examples","title":"Examples","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/send/#serve-a-specific-file","title":"Serve a specific file","text":"<p>This simple example will send a specific file to all requests.</p> <pre><code>var http = require('http')\nvar send = require('send')\n\nvar server = http.createServer(function onRequest (req, res) {\n  send(req, '/path/to/index.html')\n    .pipe(res)\n})\n\nserver.listen(3000)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#serve-all-files-from-a-directory","title":"Serve all files from a directory","text":"<p>This simple example will just serve up all the files in a given directory as the top-level. For example, a request <code>GET /foo.txt</code> will send back <code>/www/public/foo.txt</code>.</p> <pre><code>var http = require('http')\nvar parseUrl = require('parseurl')\nvar send = require('send')\n\nvar server = http.createServer(function onRequest (req, res) {\n  send(req, parseUrl(req).pathname, { root: '/www/public' })\n    .pipe(res)\n})\n\nserver.listen(3000)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#custom-file-types","title":"Custom file types","text":"<pre><code>var extname = require('path').extname\nvar http = require('http')\nvar parseUrl = require('parseurl')\nvar send = require('send')\n\nvar server = http.createServer(function onRequest (req, res) {\n  send(req, parseUrl(req).pathname, { root: '/www/public' })\n    .on('headers', function (res, path) {\n      switch (extname(path)) {\n        case '.x-mt':\n        case '.x-mtt':\n          // custom type for these extensions\n          res.setHeader('Content-Type', 'application/x-my-type')\n          break\n      }\n    })\n    .pipe(res)\n})\n\nserver.listen(3000)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#custom-directory-index-view","title":"Custom directory index view","text":"<p>This is an example of serving up a structure of directories with a custom function to render a listing of a directory.</p> <pre><code>var http = require('http')\nvar fs = require('fs')\nvar parseUrl = require('parseurl')\nvar send = require('send')\n\n// Transfer arbitrary files from within /www/example.com/public/*\n// with a custom handler for directory listing\nvar server = http.createServer(function onRequest (req, res) {\n  send(req, parseUrl(req).pathname, { index: false, root: '/www/public' })\n    .once('directory', directory)\n    .pipe(res)\n})\n\nserver.listen(3000)\n\n// Custom directory handler\nfunction directory (res, path) {\n  var stream = this\n\n  // redirect to trailing slash for consistent url\n  if (!stream.hasTrailingSlash()) {\n    return stream.redirect(path)\n  }\n\n  // get directory list\n  fs.readdir(path, function onReaddir (err, list) {\n    if (err) return stream.error(err)\n\n    // render an index for the directory\n    res.setHeader('Content-Type', 'text/plain; charset=UTF-8')\n    res.end(list.join('\\n') + '\\n')\n  })\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#serving-from-a-root-directory-with-custom-error-handling","title":"Serving from a root directory with custom error-handling","text":"<pre><code>var http = require('http')\nvar parseUrl = require('parseurl')\nvar send = require('send')\n\nvar server = http.createServer(function onRequest (req, res) {\n  // your custom error-handling logic:\n  function error (err) {\n    res.statusCode = err.status || 500\n    res.end(err.message)\n  }\n\n  // your custom headers\n  function headers (res, path, stat) {\n    // serve all files for download\n    res.setHeader('Content-Disposition', 'attachment')\n  }\n\n  // your custom directory handling logic:\n  function redirect () {\n    res.statusCode = 301\n    res.setHeader('Location', req.url + '/')\n    res.end('Redirecting to ' + req.url + '/')\n  }\n\n  // transfer arbitrary files from within\n  // /www/example.com/public/*\n  send(req, parseUrl(req).pathname, { root: '/www/public' })\n    .on('error', error)\n    .on('directory', redirect)\n    .on('headers', headers)\n    .pipe(res)\n})\n\nserver.listen(3000)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/","title":"1.2.0 / 2025-03-27","text":"<ul> <li>deps:<ul> <li><code>mime-types@^3.0.1</code> </li> <li><code>fresh@^2.0.0</code> </li> <li>removed <code>destroy</code></li> </ul> </li> <li>remove <code>getHeaderNames()</code> polyfill and refactor <code>clearHeaders()</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#110-2024-09-10","title":"1.1.0 / 2024-09-10","text":"<ul> <li>Changes from 0.19.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#100-2024-07-25","title":"1.0.0 / 2024-07-25","text":"<ul> <li>Drop support for Node.js &lt;18.0</li> <li><code>statuses@^2.0.1</code></li> <li><code>range-parser@^1.2.1</code></li> <li><code>on-finished@^2.4.1</code></li> <li><code>ms@^2.1.3</code></li> <li><code>mime-types@^2.1.35</code></li> <li><code>http-errors@^2.0.0</code></li> <li><code>fresh@^0.5.2</code></li> <li><code>etag@^1.8.1</code></li> <li><code>escape-html@^1.0.3</code></li> <li><code>encodeurl@^2.0.0</code></li> <li><code>destroy@^1.2.0</code></li> <li><code>debug@^4.3.5</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#100-beta2-2024-03-04","title":"1.0.0-beta.2 / 2024-03-04","text":"<ul> <li>Changes from 0.18.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#100-beta1-2022-02-04","title":"1.0.0-beta.1 / 2022-02-04","text":"<ul> <li>Drop support for Node.js 0.8</li> <li>Remove <code>hidden</code> option -- use <code>dotfiles</code> option</li> <li>Remove <code>from</code> alias to <code>root</code> -- use <code>root</code> directly</li> <li>Remove <code>send.etag()</code> -- use <code>etag</code> in <code>options</code></li> <li>Remove <code>send.index()</code> -- use <code>index</code> in <code>options</code></li> <li>Remove <code>send.maxage()</code> -- use <code>maxAge</code> in <code>options</code></li> <li>Remove <code>send.root()</code> -- use <code>root</code> in <code>options</code></li> <li>Use <code>mime-types</code> for file to content type mapping -- removed <code>send.mime</code></li> <li>deps: debug@3.1.0<ul> <li>Add <code>DEBUG_HIDE_DATE</code> environment variable</li> <li>Change timer to per-namespace instead of global</li> <li>Change non-TTY date format</li> <li>Remove <code>DEBUG_FD</code> environment variable support</li> <li>Support 256 namespace colors</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0190-2024-09-10","title":"0.19.0 / 2024-09-10","text":"<ul> <li>Remove link renderization in html while redirecting</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0180-2022-03-23","title":"0.18.0 / 2022-03-23","text":"<ul> <li>Fix emitted 416 error missing headers property</li> <li>Limit the headers removed for 304 response</li> <li>deps: depd@2.0.0<ul> <li>Replace internal <code>eval</code> usage with <code>Function</code> constructor</li> <li>Use instance methods on <code>process</code> to check for listeners</li> </ul> </li> <li>deps: destroy@1.2.0</li> <li>deps: http-errors@2.0.0<ul> <li>deps: depd@2.0.0</li> <li>deps: statuses@2.0.1</li> </ul> </li> <li>deps: on-finished@2.4.1</li> <li>deps: statuses@2.0.1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0172-2021-12-11","title":"0.17.2 / 2021-12-11","text":"<ul> <li>pref: ignore empty http tokens</li> <li>deps: http-errors@1.8.1<ul> <li>deps: inherits@2.0.4</li> <li>deps: toidentifier@1.0.1</li> <li>deps: setprototypeof@1.2.0</li> </ul> </li> <li>deps: ms@2.1.3</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0171-2019-05-10","title":"0.17.1 / 2019-05-10","text":"<ul> <li>Set stricter CSP header in redirect &amp; error responses</li> <li>deps: range-parser@~1.2.1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0170-2019-05-03","title":"0.17.0 / 2019-05-03","text":"<ul> <li>deps: http-errors@~1.7.2<ul> <li>Set constructor name when possible</li> <li>Use <code>toidentifier</code> module to make class names</li> <li>deps: depd@~1.1.2</li> <li>deps: setprototypeof@1.1.1</li> <li>deps: statuses@'&gt;= 1.5.0 &lt; 2'</li> </ul> </li> <li>deps: mime@1.6.0<ul> <li>Add extensions for JPEG-2000 images</li> <li>Add new <code>font/*</code> types from IANA</li> <li>Add WASM mapping</li> <li>Update <code>.bdoc</code> to <code>application/bdoc</code></li> <li>Update <code>.bmp</code> to <code>image/bmp</code></li> <li>Update <code>.m4a</code> to <code>audio/mp4</code></li> <li>Update <code>.rtf</code> to <code>application/rtf</code></li> <li>Update <code>.wav</code> to <code>audio/wav</code></li> <li>Update <code>.xml</code> to <code>application/xml</code></li> <li>Update generic extensions to <code>application/octet-stream</code>:   <code>.deb</code>, <code>.dll</code>, <code>.dmg</code>, <code>.exe</code>, <code>.iso</code>, <code>.msi</code></li> <li>Use mime-score module to resolve extension conflicts</li> </ul> </li> <li>deps: ms@2.1.1<ul> <li>Add <code>week</code>/<code>w</code> support</li> <li>Fix negative number handling</li> </ul> </li> <li>deps: statuses@~1.5.0</li> <li>perf: remove redundant <code>path.normalize</code> call</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0162-2018-02-07","title":"0.16.2 / 2018-02-07","text":"<ul> <li>Fix incorrect end tag in default error &amp; redirects</li> <li>deps: depd@~1.1.2<ul> <li>perf: remove argument reassignment</li> </ul> </li> <li>deps: encodeurl@~1.0.2<ul> <li>Fix encoding <code>%</code> as last character</li> </ul> </li> <li>deps: statuses@~1.4.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0161-2017-09-29","title":"0.16.1 / 2017-09-29","text":"<ul> <li>Fix regression in edge-case behavior for empty <code>path</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0160-2017-09-27","title":"0.16.0 / 2017-09-27","text":"<ul> <li>Add <code>immutable</code> option</li> <li>Fix missing <code>&lt;/html&gt;</code> in default error &amp; redirects</li> <li>Use instance methods on steam to check for listeners</li> <li>deps: mime@1.4.1<ul> <li>Add 70 new types for file extensions</li> <li>Set charset as \"UTF-8\" for .js and .json</li> </ul> </li> <li>perf: improve path validation speed</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0156-2017-09-22","title":"0.15.6 / 2017-09-22","text":"<ul> <li>deps: debug@2.6.9</li> <li>perf: improve <code>If-Match</code> token parsing</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0155-2017-09-20","title":"0.15.5 / 2017-09-20","text":"<ul> <li>deps: etag@~1.8.1<ul> <li>perf: replace regular expression with substring</li> </ul> </li> <li>deps: fresh@0.5.2<ul> <li>Fix handling of modified headers with invalid dates</li> <li>perf: improve ETag match loop</li> <li>perf: improve <code>If-None-Match</code> token parsing</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0154-2017-08-05","title":"0.15.4 / 2017-08-05","text":"<ul> <li>deps: debug@2.6.8</li> <li>deps: depd@~1.1.1<ul> <li>Remove unnecessary <code>Buffer</code> loading</li> </ul> </li> <li>deps: http-errors@~1.6.2<ul> <li>deps: depd@1.1.1</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0153-2017-05-16","title":"0.15.3 / 2017-05-16","text":"<ul> <li>deps: debug@2.6.7<ul> <li>deps: ms@2.0.0</li> </ul> </li> <li>deps: ms@2.0.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0152-2017-04-26","title":"0.15.2 / 2017-04-26","text":"<ul> <li>deps: debug@2.6.4<ul> <li>Fix <code>DEBUG_MAX_ARRAY_LENGTH</code></li> <li>deps: ms@0.7.3</li> </ul> </li> <li>deps: ms@1.0.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0151-2017-03-04","title":"0.15.1 / 2017-03-04","text":"<ul> <li>Fix issue when <code>Date.parse</code> does not return <code>NaN</code> on invalid date</li> <li>Fix strict violation in broken environments</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0150-2017-02-25","title":"0.15.0 / 2017-02-25","text":"<ul> <li>Support <code>If-Match</code> and <code>If-Unmodified-Since</code> headers</li> <li>Add <code>res</code> and <code>path</code> arguments to <code>directory</code> event</li> <li>Remove usage of <code>res._headers</code> private field<ul> <li>Improves compatibility with Node.js 8 nightly</li> </ul> </li> <li>Send complete HTML document in redirect &amp; error responses</li> <li>Set default CSP header in redirect &amp; error responses</li> <li>Use <code>res.getHeaderNames()</code> when available</li> <li>Use <code>res.headersSent</code> when available</li> <li>deps: debug@2.6.1<ul> <li>Allow colors in workers</li> <li>Deprecated <code>DEBUG_FD</code> environment variable set to <code>3</code> or higher</li> <li>Fix error when running under React Native</li> <li>Use same color for same namespace</li> <li>deps: ms@0.7.2</li> </ul> </li> <li>deps: etag@~1.8.0</li> <li>deps: fresh@0.5.0<ul> <li>Fix false detection of <code>no-cache</code> request directive</li> <li>Fix incorrect result when <code>If-None-Match</code> has both <code>*</code> and ETags</li> <li>Fix weak <code>ETag</code> matching to match spec</li> <li>perf: delay reading header values until needed</li> <li>perf: enable strict mode</li> <li>perf: hoist regular expressions</li> <li>perf: remove duplicate conditional</li> <li>perf: remove unnecessary boolean coercions</li> <li>perf: skip checking modified time if ETag check failed</li> <li>perf: skip parsing <code>If-None-Match</code> when no <code>ETag</code> header</li> <li>perf: use <code>Date.parse</code> instead of <code>new Date</code></li> </ul> </li> <li>deps: http-errors@~1.6.1<ul> <li>Make <code>message</code> property enumerable for <code>HttpError</code>s</li> <li>deps: setprototypeof@1.0.3</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0142-2017-01-23","title":"0.14.2 / 2017-01-23","text":"<ul> <li>deps: http-errors@~1.5.1<ul> <li>deps: inherits@2.0.3</li> <li>deps: setprototypeof@1.0.2</li> <li>deps: statuses@'&gt;= 1.3.1 &lt; 2'</li> </ul> </li> <li>deps: ms@0.7.2</li> <li>deps: statuses@~1.3.1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0141-2016-06-09","title":"0.14.1 / 2016-06-09","text":"<ul> <li>Fix redirect error when <code>path</code> contains raw non-URL characters</li> <li>Fix redirect when <code>path</code> starts with multiple forward slashes</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0140-2016-06-06","title":"0.14.0 / 2016-06-06","text":"<ul> <li>Add <code>acceptRanges</code> option</li> <li>Add <code>cacheControl</code> option</li> <li>Attempt to combine multiple ranges into single range</li> <li>Correctly inherit from <code>Stream</code> class</li> <li>Fix <code>Content-Range</code> header in 416 responses when using <code>start</code>/<code>end</code> options</li> <li>Fix <code>Content-Range</code> header missing from default 416 responses</li> <li>Ignore non-byte <code>Range</code> headers</li> <li>deps: http-errors@~1.5.0<ul> <li>Add <code>HttpError</code> export, for <code>err instanceof createError.HttpError</code></li> <li>Support new code <code>421 Misdirected Request</code></li> <li>Use <code>setprototypeof</code> module to replace <code>__proto__</code> setting</li> <li>deps: inherits@2.0.1</li> <li>deps: statuses@'&gt;= 1.3.0 &lt; 2'</li> <li>perf: enable strict mode</li> </ul> </li> <li>deps: range-parser@~1.2.0<ul> <li>Fix incorrectly returning -1 when there is at least one valid range</li> <li>perf: remove internal function</li> </ul> </li> <li>deps: statuses@~1.3.0<ul> <li>Add <code>421 Misdirected Request</code></li> <li>perf: enable strict mode</li> </ul> </li> <li>perf: remove argument reassignment</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0132-2016-03-05","title":"0.13.2 / 2016-03-05","text":"<ul> <li>Fix invalid <code>Content-Type</code> header when <code>send.mime.default_type</code> unset</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0131-2016-01-16","title":"0.13.1 / 2016-01-16","text":"<ul> <li>deps: depd@~1.1.0<ul> <li>Support web browser loading</li> <li>perf: enable strict mode</li> </ul> </li> <li>deps: destroy@~1.0.4<ul> <li>perf: enable strict mode</li> </ul> </li> <li>deps: escape-html@~1.0.3<ul> <li>perf: enable strict mode</li> <li>perf: optimize string replacement</li> <li>perf: use faster string coercion</li> </ul> </li> <li>deps: range-parser@~1.0.3<ul> <li>perf: enable strict mode</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0130-2015-06-16","title":"0.13.0 / 2015-06-16","text":"<ul> <li>Allow Node.js HTTP server to set <code>Date</code> response header</li> <li>Fix incorrectly removing <code>Content-Location</code> on 304 response</li> <li>Improve the default redirect response headers</li> <li>Send appropriate headers on default error response</li> <li>Use <code>http-errors</code> for standard emitted errors</li> <li>Use <code>statuses</code> instead of <code>http</code> module for status messages</li> <li>deps: escape-html@1.0.2</li> <li>deps: etag@~1.7.0<ul> <li>Improve stat performance by removing hashing</li> </ul> </li> <li>deps: fresh@0.3.0<ul> <li>Add weak <code>ETag</code> matching support</li> </ul> </li> <li>deps: on-finished@~2.3.0<ul> <li>Add defined behavior for HTTP <code>CONNECT</code> requests</li> <li>Add defined behavior for HTTP <code>Upgrade</code> requests</li> <li>deps: ee-first@1.1.1</li> </ul> </li> <li>perf: enable strict mode</li> <li>perf: remove unnecessary array allocations</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0123-2015-05-13","title":"0.12.3 / 2015-05-13","text":"<ul> <li>deps: debug@~2.2.0<ul> <li>deps: ms@0.7.1</li> </ul> </li> <li>deps: depd@~1.0.1</li> <li>deps: etag@~1.6.0</li> <li>Improve support for JXcore</li> <li>Support \"fake\" stats objects in environments without <code>fs</code></li> <li>deps: ms@0.7.1<ul> <li>Prevent extraordinarily long inputs</li> </ul> </li> <li>deps: on-finished@~2.2.1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0122-2015-03-13","title":"0.12.2 / 2015-03-13","text":"<ul> <li>Throw errors early for invalid <code>extensions</code> or <code>index</code> options</li> <li>deps: debug@~2.1.3<ul> <li>Fix high intensity foreground color for bold</li> <li>deps: ms@0.7.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0121-2015-02-17","title":"0.12.1 / 2015-02-17","text":"<ul> <li>Fix regression sending zero-length files</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0120-2015-02-16","title":"0.12.0 / 2015-02-16","text":"<ul> <li>Always read the stat size from the file</li> <li>Fix mutating passed-in <code>options</code></li> <li>deps: mime@1.3.4</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0111-2015-01-20","title":"0.11.1 / 2015-01-20","text":"<ul> <li>Fix <code>root</code> path disclosure</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0110-2015-01-05","title":"0.11.0 / 2015-01-05","text":"<ul> <li>deps: debug@~2.1.1</li> <li>deps: etag@~1.5.1<ul> <li>deps: crc@3.2.1</li> </ul> </li> <li>deps: ms@0.7.0<ul> <li>Add <code>milliseconds</code></li> <li>Add <code>msecs</code></li> <li>Add <code>secs</code></li> <li>Add <code>mins</code></li> <li>Add <code>hrs</code></li> <li>Add <code>yrs</code></li> </ul> </li> <li>deps: on-finished@~2.2.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0101-2014-10-22","title":"0.10.1 / 2014-10-22","text":"<ul> <li>deps: on-finished@~2.1.1<ul> <li>Fix handling of pipelined requests</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#0100-2014-10-15","title":"0.10.0 / 2014-10-15","text":"<ul> <li>deps: debug@~2.1.0<ul> <li>Implement <code>DEBUG_FD</code> env variable support</li> </ul> </li> <li>deps: depd@~1.0.0</li> <li>deps: etag@~1.5.0<ul> <li>Improve string performance</li> <li>Slightly improve speed for weak ETags over 1KB</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#093-2014-09-24","title":"0.9.3 / 2014-09-24","text":"<ul> <li>deps: etag@~1.4.0<ul> <li>Support \"fake\" stats objects</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#092-2014-09-15","title":"0.9.2 / 2014-09-15","text":"<ul> <li>deps: depd@0.4.5</li> <li>deps: etag@~1.3.1</li> <li>deps: range-parser@~1.0.2</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#091-2014-09-07","title":"0.9.1 / 2014-09-07","text":"<ul> <li>deps: fresh@0.2.4</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#090-2014-09-07","title":"0.9.0 / 2014-09-07","text":"<ul> <li>Add <code>lastModified</code> option</li> <li>Use <code>etag</code> to generate <code>ETag</code> header</li> <li>deps: debug@~2.0.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#085-2014-09-04","title":"0.8.5 / 2014-09-04","text":"<ul> <li>Fix malicious path detection for empty string path</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#084-2014-09-04","title":"0.8.4 / 2014-09-04","text":"<ul> <li>Fix a path traversal issue when using <code>root</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#083-2014-08-16","title":"0.8.3 / 2014-08-16","text":"<ul> <li>deps: destroy@1.0.3<ul> <li>renamed from dethroy</li> </ul> </li> <li>deps: on-finished@2.1.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#082-2014-08-14","title":"0.8.2 / 2014-08-14","text":"<ul> <li>Work around <code>fd</code> leak in Node.js 0.10 for <code>fs.ReadStream</code></li> <li>deps: dethroy@1.0.2</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#081-2014-08-05","title":"0.8.1 / 2014-08-05","text":"<ul> <li>Fix <code>extensions</code> behavior when file already has extension</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#080-2014-08-05","title":"0.8.0 / 2014-08-05","text":"<ul> <li>Add <code>extensions</code> option</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#074-2014-08-04","title":"0.7.4 / 2014-08-04","text":"<ul> <li>Fix serving index files without root dir</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#073-2014-07-29","title":"0.7.3 / 2014-07-29","text":"<ul> <li>Fix incorrect 403 on Windows and Node.js 0.11</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#072-2014-07-27","title":"0.7.2 / 2014-07-27","text":"<ul> <li>deps: depd@0.4.4<ul> <li>Work-around v8 generating empty stack traces</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#071-2014-07-26","title":"0.7.1 / 2014-07-26","text":"<ul> <li>deps: depd@0.4.3</li> <li>Fix exception when global <code>Error.stackTraceLimit</code> is too low</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#070-2014-07-20","title":"0.7.0 / 2014-07-20","text":"<ul> <li>Deprecate <code>hidden</code> option; use <code>dotfiles</code> option</li> <li>Add <code>dotfiles</code> option</li> <li>deps: debug@1.0.4</li> <li>deps: depd@0.4.2</li> <li>Add <code>TRACE_DEPRECATION</code> environment variable</li> <li>Remove non-standard grey color from color output</li> <li>Support <code>--no-deprecation</code> argument</li> <li>Support <code>--trace-deprecation</code> argument</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#060-2014-07-11","title":"0.6.0 / 2014-07-11","text":"<ul> <li>Deprecate <code>from</code> option; use <code>root</code> option</li> <li>Deprecate <code>send.etag()</code> -- use <code>etag</code> in <code>options</code></li> <li>Deprecate <code>send.hidden()</code> -- use <code>hidden</code> in <code>options</code></li> <li>Deprecate <code>send.index()</code> -- use <code>index</code> in <code>options</code></li> <li>Deprecate <code>send.maxage()</code> -- use <code>maxAge</code> in <code>options</code></li> <li>Deprecate <code>send.root()</code> -- use <code>root</code> in <code>options</code></li> <li>Cap <code>maxAge</code> value to 1 year</li> <li>deps: debug@1.0.3</li> <li>Add support for multiple wildcards in namespaces</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#050-2014-06-28","title":"0.5.0 / 2014-06-28","text":"<ul> <li>Accept string for <code>maxAge</code> (converted by <code>ms</code>)</li> <li>Add <code>headers</code> event</li> <li>Include link in default redirect response</li> <li>Use <code>EventEmitter.listenerCount</code> to count listeners</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#043-2014-06-11","title":"0.4.3 / 2014-06-11","text":"<ul> <li>Do not throw un-catchable error on file open race condition</li> <li>Use <code>escape-html</code> for HTML escaping</li> <li>deps: debug@1.0.2</li> <li>fix some debugging output colors on node.js 0.8</li> <li>deps: finished@1.2.2</li> <li>deps: fresh@0.2.2</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#042-2014-06-09","title":"0.4.2 / 2014-06-09","text":"<ul> <li>fix \"event emitter leak\" warnings</li> <li>deps: debug@1.0.1</li> <li>deps: finished@1.2.1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#041-2014-06-02","title":"0.4.1 / 2014-06-02","text":"<ul> <li>Send <code>max-age</code> in <code>Cache-Control</code> in correct format</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#040-2014-05-27","title":"0.4.0 / 2014-05-27","text":"<ul> <li>Calculate ETag with md5 for reduced collisions</li> <li>Fix wrong behavior when index file matches directory</li> <li>Ignore stream errors after request ends</li> <li>Goodbye <code>EBADF, read</code></li> <li>Skip directories in index file search</li> <li>deps: debug@0.8.1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#030-2014-04-24","title":"0.3.0 / 2014-04-24","text":"<ul> <li>Fix sending files with dots without root set</li> <li>Coerce option types</li> <li>Accept API options in options object</li> <li>Set etags to \"weak\"</li> <li>Include file path in etag</li> <li>Make \"Can't set headers after they are sent.\" catchable</li> <li>Send full entity-body for multi range requests</li> <li>Default directory access to 403 when index disabled</li> <li>Support multiple index paths</li> <li>Support \"If-Range\" header</li> <li>Control whether to generate etags</li> <li>deps: mime@1.2.11</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#020-2014-01-29","title":"0.2.0 / 2014-01-29","text":"<ul> <li>update range-parser and fresh</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#014-2013-08-11","title":"0.1.4 / 2013-08-11","text":"<ul> <li>update fresh</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#013-2013-07-08","title":"0.1.3 / 2013-07-08","text":"<ul> <li>Revert \"Fix fd leak\"</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#012-2013-07-03","title":"0.1.2 / 2013-07-03","text":"<ul> <li>Fix fd leak</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#010-2012-08-25","title":"0.1.0 / 2012-08-25","text":"<ul> <li>add options parameter to send() that is passed to fs.createReadStream() [kanongil]</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#004-2012-08-16","title":"0.0.4 / 2012-08-16","text":"<ul> <li>allow custom \"Accept-Ranges\" definition</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#003-2012-07-16","title":"0.0.3 / 2012-07-16","text":"<ul> <li>fix normalization of the root directory. Closes #3</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#002-2012-07-09","title":"0.0.2 / 2012-07-09","text":"<ul> <li>add passing of req explicitly for now (YUCK)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/send/HISTORY/#001-2010-01-03","title":"0.0.1 / 2010-01-03","text":"<ul> <li>Initial release</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/","title":"serve-static","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#install","title":"Install","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install serve-static\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#api","title":"API","text":"<pre><code>var serveStatic = require('serve-static')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#servestaticroot-options","title":"serveStatic(root, options)","text":"<p>Create a new middleware function to serve files from within a given root directory. The file to serve will be determined by combining <code>req.url</code> with the provided root directory. When a file is not found, instead of sending a 404 response, this module will instead call <code>next()</code> to move on to the next middleware, allowing for stacking and fall-backs.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#options","title":"Options","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#acceptranges","title":"acceptRanges","text":"<p>Enable or disable accepting ranged requests, defaults to true. Disabling this will not send <code>Accept-Ranges</code> and ignore the contents of the <code>Range</code> request header.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#cachecontrol","title":"cacheControl","text":"<p>Enable or disable setting <code>Cache-Control</code> response header, defaults to true. Disabling this will ignore the <code>immutable</code> and <code>maxAge</code> options.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#dotfiles","title":"dotfiles","text":"<p>Set how \"dotfiles\" are treated when encountered. A dotfile is a file or directory that begins with a dot (\".\"). Note this check is done on the path itself without checking if the path actually exists on the disk. If <code>root</code> is specified, only the dotfiles above the root are checked (i.e. the root itself can be within a dotfile when set to \"deny\").</p> <ul> <li><code>'allow'</code> No special treatment for dotfiles.</li> <li><code>'deny'</code> Deny a request for a dotfile and 403/<code>next()</code>.</li> <li><code>'ignore'</code> Pretend like the dotfile does not exist and 404/<code>next()</code>.</li> </ul> <p>The default value is <code>'ignore'</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#etag","title":"etag","text":"<p>Enable or disable etag generation, defaults to true.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#extensions","title":"extensions","text":"<p>Set file extension fallbacks. When set, if a file is not found, the given extensions will be added to the file name and search for. The first that exists will be served. Example: <code>['html', 'htm']</code>.</p> <p>The default value is <code>false</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#fallthrough","title":"fallthrough","text":"<p>Set the middleware to have client errors fall-through as just unhandled requests, otherwise forward a client error. The difference is that client errors like a bad request or a request to a non-existent file will cause this middleware to simply <code>next()</code> to your next middleware when this value is <code>true</code>. When this value is <code>false</code>, these errors (even 404s), will invoke <code>next(err)</code>.</p> <p>Typically <code>true</code> is desired such that multiple physical directories can be mapped to the same web address or for routes to fill in non-existent files.</p> <p>The value <code>false</code> can be used if this middleware is mounted at a path that is designed to be strictly a single file system directory, which allows for short-circuiting 404s for less overhead. This middleware will also reply to all methods.</p> <p>The default value is <code>true</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#immutable","title":"immutable","text":"<p>Enable or disable the <code>immutable</code> directive in the <code>Cache-Control</code> response header, defaults to <code>false</code>. If set to <code>true</code>, the <code>maxAge</code> option should also be specified to enable caching. The <code>immutable</code> directive will prevent supported clients from making conditional requests during the life of the <code>maxAge</code> option to check if the file has changed.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#index","title":"index","text":"<p>By default this module will send \"index.html\" files in response to a request on a directory. To disable this set <code>false</code> or to supply a new index pass a string or an array in preferred order.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#lastmodified","title":"lastModified","text":"<p>Enable or disable <code>Last-Modified</code> header, defaults to true. Uses the file system's last modified value.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#maxage","title":"maxAge","text":"<p>Provide a max-age in milliseconds for http caching, defaults to 0. This can also be a string accepted by the ms module.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#redirect","title":"redirect","text":"<p>Redirect to trailing \"/\" when the pathname is a dir. Defaults to <code>true</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#setheaders","title":"setHeaders","text":"<p>Function to set custom headers on response. Alterations to the headers need to occur synchronously. The function is called as <code>fn(res, path, stat)</code>, where the arguments are:</p> <ul> <li><code>res</code> the response object</li> <li><code>path</code> the file path that is being sent</li> <li><code>stat</code> the stat object of the file that is being sent</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#examples","title":"Examples","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#serve-files-with-vanilla-nodejs-http-server","title":"Serve files with vanilla node.js http server","text":"<pre><code>var finalhandler = require('finalhandler')\nvar http = require('http')\nvar serveStatic = require('serve-static')\n\n// Serve up public/ftp folder\nvar serve = serveStatic('public/ftp', { index: ['index.html', 'index.htm'] })\n\n// Create server\nvar server = http.createServer(function onRequest (req, res) {\n  serve(req, res, finalhandler(req, res))\n})\n\n// Listen\nserver.listen(3000)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#serve-all-files-as-downloads","title":"Serve all files as downloads","text":"<pre><code>var contentDisposition = require('content-disposition')\nvar finalhandler = require('finalhandler')\nvar http = require('http')\nvar serveStatic = require('serve-static')\n\n// Serve up public/ftp folder\nvar serve = serveStatic('public/ftp', {\n  index: false,\n  setHeaders: setHeaders\n})\n\n// Set header to force download\nfunction setHeaders (res, path) {\n  res.setHeader('Content-Disposition', contentDisposition(path))\n}\n\n// Create server\nvar server = http.createServer(function onRequest (req, res) {\n  serve(req, res, finalhandler(req, res))\n})\n\n// Listen\nserver.listen(3000)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#serving-using-express","title":"Serving using express","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#simple","title":"Simple","text":"<p>This is a simple example of using Express.</p> <pre><code>var express = require('express')\nvar serveStatic = require('serve-static')\n\nvar app = express()\n\napp.use(serveStatic('public/ftp', { index: ['default.html', 'default.htm'] }))\napp.listen(3000)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#multiple-roots","title":"Multiple roots","text":"<p>This example shows a simple way to search through multiple directories. Files are searched for in <code>public-optimized/</code> first, then <code>public/</code> second as a fallback.</p> <pre><code>var express = require('express')\nvar path = require('path')\nvar serveStatic = require('serve-static')\n\nvar app = express()\n\napp.use(serveStatic(path.join(__dirname, 'public-optimized')))\napp.use(serveStatic(path.join(__dirname, 'public')))\napp.listen(3000)\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#different-settings-for-paths","title":"Different settings for paths","text":"<p>This example shows how to set a different max age depending on the served file. In this example, HTML files are not cached, while everything else is for 1 day.</p> <pre><code>var express = require('express')\nvar path = require('path')\nvar serveStatic = require('serve-static')\n\nvar app = express()\n\napp.use(serveStatic(path.join(__dirname, 'public'), {\n  maxAge: '1d',\n  setHeaders: setCustomCacheControl\n}))\n\napp.listen(3000)\n\nfunction setCustomCacheControl (res, file) {\n  if (path.extname(file) === '.html') {\n    // Custom Cache-Control for HTML files\n    res.setHeader('Cache-Control', 'public, max-age=0')\n  }\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/","title":"2.2.0 / 2025-03-27","text":"<ul> <li>deps: send@^1.2.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#210-2024-09-10","title":"2.1.0 / 2024-09-10","text":"<ul> <li>Changes from 1.16.0</li> <li>deps: send@^1.2.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#200-2024-08-23","title":"2.0.0 / 2024-08-23","text":"<ul> <li>deps: </li> <li>parseurl@^1.3.3</li> <li>excape-html@^1.0.3</li> <li>encodeurl@^2.0.0</li> <li>supertest@^6.3.4</li> <li>safe-buffer@^5.2.1</li> <li>nyc@^17.0.0</li> <li>mocha@^10.7.0</li> <li>Changes from 1.x</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#200-beta2-2024-03-20","title":"2.0.0-beta.2 / 2024-03-20","text":"<ul> <li>deps: send@1.0.0-beta.2</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#200-beta1-2022-02-05","title":"2.0.0-beta.1 / 2022-02-05","text":"<ul> <li>Change <code>dotfiles</code> option default to <code>'ignore'</code></li> <li>Drop support for Node.js 0.8</li> <li>Remove <code>hidden</code> option; use <code>dotfiles</code> option instead</li> <li>Remove <code>mime</code> export; use <code>mime-types</code> package instead</li> <li>deps: send@1.0.0-beta.1<ul> <li>Use <code>mime-types</code> for file to content type mapping</li> <li>deps: debug@3.1.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1160-2024-09-10","title":"1.16.0 / 2024-09-10","text":"<ul> <li>Remove link renderization in html while redirecting</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1150-2022-03-24","title":"1.15.0 / 2022-03-24","text":"<ul> <li>deps: send@0.18.0<ul> <li>Fix emitted 416 error missing headers property</li> <li>Limit the headers removed for 304 response</li> <li>deps: depd@2.0.0</li> <li>deps: destroy@1.2.0</li> <li>deps: http-errors@2.0.0</li> <li>deps: on-finished@2.4.1</li> <li>deps: statuses@2.0.1</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1142-2021-12-15","title":"1.14.2 / 2021-12-15","text":"<ul> <li>deps: send@0.17.2<ul> <li>deps: http-errors@1.8.1</li> <li>deps: ms@2.1.3</li> <li>pref: ignore empty http tokens</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1141-2019-05-10","title":"1.14.1 / 2019-05-10","text":"<ul> <li>Set stricter CSP header in redirect response</li> <li>deps: send@0.17.1<ul> <li>deps: range-parser@~1.2.1</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1140-2019-05-07","title":"1.14.0 / 2019-05-07","text":"<ul> <li>deps: parseurl@~1.3.3</li> <li>deps: send@0.17.0<ul> <li>deps: http-errors@~1.7.2</li> <li>deps: mime@1.6.0</li> <li>deps: ms@2.1.1</li> <li>deps: statuses@~1.5.0</li> <li>perf: remove redundant <code>path.normalize</code> call</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1132-2018-02-07","title":"1.13.2 / 2018-02-07","text":"<ul> <li>Fix incorrect end tag in redirects</li> <li>deps: encodeurl@~1.0.2<ul> <li>Fix encoding <code>%</code> as last character</li> </ul> </li> <li>deps: send@0.16.2<ul> <li>deps: depd@~1.1.2</li> <li>deps: encodeurl@~1.0.2</li> <li>deps: statuses@~1.4.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1131-2017-09-29","title":"1.13.1 / 2017-09-29","text":"<ul> <li>Fix regression when <code>root</code> is incorrectly set to a file</li> <li>deps: send@0.16.1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1130-2017-09-27","title":"1.13.0 / 2017-09-27","text":"<ul> <li>deps: send@0.16.0<ul> <li>Add 70 new types for file extensions</li> <li>Add <code>immutable</code> option</li> <li>Fix missing <code>&lt;/html&gt;</code> in default error &amp; redirects</li> <li>Set charset as \"UTF-8\" for .js and .json</li> <li>Use instance methods on steam to check for listeners</li> <li>deps: mime@1.4.1</li> <li>perf: improve path validation speed</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1126-2017-09-22","title":"1.12.6 / 2017-09-22","text":"<ul> <li>deps: send@0.15.6<ul> <li>deps: debug@2.6.9</li> <li>perf: improve <code>If-Match</code> token parsing</li> </ul> </li> <li>perf: improve slash collapsing</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1125-2017-09-21","title":"1.12.5 / 2017-09-21","text":"<ul> <li>deps: parseurl@~1.3.2<ul> <li>perf: reduce overhead for full URLs</li> <li>perf: unroll the \"fast-path\" <code>RegExp</code></li> </ul> </li> <li>deps: send@0.15.5<ul> <li>Fix handling of modified headers with invalid dates</li> <li>deps: etag@~1.8.1</li> <li>deps: fresh@0.5.2</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1124-2017-08-05","title":"1.12.4 / 2017-08-05","text":"<ul> <li>deps: send@0.15.4<ul> <li>deps: debug@2.6.8</li> <li>deps: depd@~1.1.1</li> <li>deps: http-errors@~1.6.2</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1123-2017-05-16","title":"1.12.3 / 2017-05-16","text":"<ul> <li>deps: send@0.15.3<ul> <li>deps: debug@2.6.7</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1122-2017-04-26","title":"1.12.2 / 2017-04-26","text":"<ul> <li>deps: send@0.15.2<ul> <li>deps: debug@2.6.4</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1121-2017-03-04","title":"1.12.1 / 2017-03-04","text":"<ul> <li>deps: send@0.15.1<ul> <li>Fix issue when <code>Date.parse</code> does not return <code>NaN</code> on invalid date</li> <li>Fix strict violation in broken environments</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1120-2017-02-25","title":"1.12.0 / 2017-02-25","text":"<ul> <li>Send complete HTML document in redirect response</li> <li>Set default CSP header in redirect response</li> <li>deps: send@0.15.0<ul> <li>Fix false detection of <code>no-cache</code> request directive</li> <li>Fix incorrect result when <code>If-None-Match</code> has both <code>*</code> and ETags</li> <li>Fix weak <code>ETag</code> matching to match spec</li> <li>Remove usage of <code>res._headers</code> private field</li> <li>Support <code>If-Match</code> and <code>If-Unmodified-Since</code> headers</li> <li>Use <code>res.getHeaderNames()</code> when available</li> <li>Use <code>res.headersSent</code> when available</li> <li>deps: debug@2.6.1</li> <li>deps: etag@~1.8.0</li> <li>deps: fresh@0.5.0</li> <li>deps: http-errors@~1.6.1</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1112-2017-01-23","title":"1.11.2 / 2017-01-23","text":"<ul> <li>deps: send@0.14.2<ul> <li>deps: http-errors@~1.5.1</li> <li>deps: ms@0.7.2</li> <li>deps: statuses@~1.3.1</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1111-2016-06-10","title":"1.11.1 / 2016-06-10","text":"<ul> <li>Fix redirect error when <code>req.url</code> contains raw non-URL characters</li> <li>deps: send@0.14.1</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1110-2016-06-07","title":"1.11.0 / 2016-06-07","text":"<ul> <li>Use status code 301 for redirects</li> <li>deps: send@0.14.0<ul> <li>Add <code>acceptRanges</code> option</li> <li>Add <code>cacheControl</code> option</li> <li>Attempt to combine multiple ranges into single range</li> <li>Correctly inherit from <code>Stream</code> class</li> <li>Fix <code>Content-Range</code> header in 416 responses when using <code>start</code>/<code>end</code> options</li> <li>Fix <code>Content-Range</code> header missing from default 416 responses</li> <li>Ignore non-byte <code>Range</code> headers</li> <li>deps: http-errors@~1.5.0</li> <li>deps: range-parser@~1.2.0</li> <li>deps: statuses@~1.3.0</li> <li>perf: remove argument reassignment</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1103-2016-05-30","title":"1.10.3 / 2016-05-30","text":"<ul> <li>deps: send@0.13.2<ul> <li>Fix invalid <code>Content-Type</code> header when <code>send.mime.default_type</code> unset</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1102-2016-01-19","title":"1.10.2 / 2016-01-19","text":"<ul> <li>deps: parseurl@~1.3.1<ul> <li>perf: enable strict mode</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1101-2016-01-16","title":"1.10.1 / 2016-01-16","text":"<ul> <li>deps: escape-html@~1.0.3<ul> <li>perf: enable strict mode</li> <li>perf: optimize string replacement</li> <li>perf: use faster string coercion</li> </ul> </li> <li>deps: send@0.13.1<ul> <li>deps: depd@~1.1.0</li> <li>deps: destroy@~1.0.4</li> <li>deps: escape-html@~1.0.3</li> <li>deps: range-parser@~1.0.3</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#1100-2015-06-17","title":"1.10.0 / 2015-06-17","text":"<ul> <li>Add <code>fallthrough</code> option<ul> <li>Allows declaring this middleware is the final destination</li> <li>Provides better integration with Express patterns</li> </ul> </li> <li>Fix reading options from options prototype</li> <li>Improve the default redirect response headers</li> <li>deps: escape-html@1.0.2</li> <li>deps: send@0.13.0<ul> <li>Allow Node.js HTTP server to set <code>Date</code> response header</li> <li>Fix incorrectly removing <code>Content-Location</code> on 304 response</li> <li>Improve the default redirect response headers</li> <li>Send appropriate headers on default error response</li> <li>Use <code>http-errors</code> for standard emitted errors</li> <li>Use <code>statuses</code> instead of <code>http</code> module for status messages</li> <li>deps: escape-html@1.0.2</li> <li>deps: etag@~1.7.0</li> <li>deps: fresh@0.3.0</li> <li>deps: on-finished@~2.3.0</li> <li>perf: enable strict mode</li> <li>perf: remove unnecessary array allocations</li> </ul> </li> <li>perf: enable strict mode</li> <li>perf: remove argument reassignment</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#193-2015-05-14","title":"1.9.3 / 2015-05-14","text":"<ul> <li>deps: send@0.12.3<ul> <li>deps: debug@~2.2.0</li> <li>deps: depd@~1.0.1</li> <li>deps: etag@~1.6.0</li> <li>deps: ms@0.7.1</li> <li>deps: on-finished@~2.2.1</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#192-2015-03-14","title":"1.9.2 / 2015-03-14","text":"<ul> <li>deps: send@0.12.2<ul> <li>Throw errors early for invalid <code>extensions</code> or <code>index</code> options</li> <li>deps: debug@~2.1.3</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#191-2015-02-17","title":"1.9.1 / 2015-02-17","text":"<ul> <li>deps: send@0.12.1<ul> <li>Fix regression sending zero-length files</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#190-2015-02-16","title":"1.9.0 / 2015-02-16","text":"<ul> <li>deps: send@0.12.0<ul> <li>Always read the stat size from the file</li> <li>Fix mutating passed-in <code>options</code></li> <li>deps: mime@1.3.4</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#181-2015-01-20","title":"1.8.1 / 2015-01-20","text":"<ul> <li>Fix redirect loop in Node.js 0.11.14</li> <li>deps: send@0.11.1<ul> <li>Fix root path disclosure</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#180-2015-01-05","title":"1.8.0 / 2015-01-05","text":"<ul> <li>deps: send@0.11.0<ul> <li>deps: debug@~2.1.1</li> <li>deps: etag@~1.5.1</li> <li>deps: ms@0.7.0</li> <li>deps: on-finished@~2.2.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#172-2015-01-02","title":"1.7.2 / 2015-01-02","text":"<ul> <li>Fix potential open redirect when mounted at root</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#171-2014-10-22","title":"1.7.1 / 2014-10-22","text":"<ul> <li>deps: send@0.10.1<ul> <li>deps: on-finished@~2.1.1</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#170-2014-10-15","title":"1.7.0 / 2014-10-15","text":"<ul> <li>deps: send@0.10.0<ul> <li>deps: debug@~2.1.0</li> <li>deps: depd@~1.0.0</li> <li>deps: etag@~1.5.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#165-2015-02-04","title":"1.6.5 / 2015-02-04","text":"<ul> <li>Fix potential open redirect when mounted at root<ul> <li>Back-ported from v1.7.2</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#164-2014-10-08","title":"1.6.4 / 2014-10-08","text":"<ul> <li>Fix redirect loop when index file serving disabled</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#163-2014-09-24","title":"1.6.3 / 2014-09-24","text":"<ul> <li>deps: send@0.9.3<ul> <li>deps: etag@~1.4.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#162-2014-09-15","title":"1.6.2 / 2014-09-15","text":"<ul> <li>deps: send@0.9.2<ul> <li>deps: depd@0.4.5</li> <li>deps: etag@~1.3.1</li> <li>deps: range-parser@~1.0.2</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#161-2014-09-07","title":"1.6.1 / 2014-09-07","text":"<ul> <li>deps: send@0.9.1<ul> <li>deps: fresh@0.2.4</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#160-2014-09-07","title":"1.6.0 / 2014-09-07","text":"<ul> <li>deps: send@0.9.0<ul> <li>Add <code>lastModified</code> option</li> <li>Use <code>etag</code> to generate <code>ETag</code> header</li> <li>deps: debug@~2.0.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#154-2014-09-04","title":"1.5.4 / 2014-09-04","text":"<ul> <li>deps: send@0.8.5<ul> <li>Fix a path traversal issue when using <code>root</code></li> <li>Fix malicious path detection for empty string path</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#153-2014-08-17","title":"1.5.3 / 2014-08-17","text":"<ul> <li>deps: send@0.8.3</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#152-2014-08-14","title":"1.5.2 / 2014-08-14","text":"<ul> <li>deps: send@0.8.2<ul> <li>Work around <code>fd</code> leak in Node.js 0.10 for <code>fs.ReadStream</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#151-2014-08-09","title":"1.5.1 / 2014-08-09","text":"<ul> <li>Fix parsing of weird <code>req.originalUrl</code> values</li> <li>deps: parseurl@~1.3.0</li> <li>deps: utils-merge@1.0.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#150-2014-08-05","title":"1.5.0 / 2014-08-05","text":"<ul> <li>deps: send@0.8.1<ul> <li>Add <code>extensions</code> option</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#144-2014-08-04","title":"1.4.4 / 2014-08-04","text":"<ul> <li>deps: send@0.7.4<ul> <li>Fix serving index files without root dir</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#143-2014-07-29","title":"1.4.3 / 2014-07-29","text":"<ul> <li>deps: send@0.7.3<ul> <li>Fix incorrect 403 on Windows and Node.js 0.11</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#142-2014-07-27","title":"1.4.2 / 2014-07-27","text":"<ul> <li>deps: send@0.7.2<ul> <li>deps: depd@0.4.4</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#141-2014-07-26","title":"1.4.1 / 2014-07-26","text":"<ul> <li>deps: send@0.7.1<ul> <li>deps: depd@0.4.3</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#140-2014-07-21","title":"1.4.0 / 2014-07-21","text":"<ul> <li>deps: parseurl@~1.2.0<ul> <li>Cache URLs based on original value</li> <li>Remove no-longer-needed URL mis-parse work-around</li> <li>Simplify the \"fast-path\" <code>RegExp</code></li> </ul> </li> <li>deps: send@0.7.0<ul> <li>Add <code>dotfiles</code> option</li> <li>deps: debug@1.0.4</li> <li>deps: depd@0.4.2</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#132-2014-07-11","title":"1.3.2 / 2014-07-11","text":"<ul> <li>deps: send@0.6.0<ul> <li>Cap <code>maxAge</code> value to 1 year</li> <li>deps: debug@1.0.3</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#131-2014-07-09","title":"1.3.1 / 2014-07-09","text":"<ul> <li>deps: parseurl@~1.1.3<ul> <li>faster parsing of href-only URLs</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#130-2014-06-28","title":"1.3.0 / 2014-06-28","text":"<ul> <li>Add <code>setHeaders</code> option</li> <li>Include HTML link in redirect response</li> <li>deps: send@0.5.0<ul> <li>Accept string for <code>maxAge</code> (converted by <code>ms</code>)</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#123-2014-06-11","title":"1.2.3 / 2014-06-11","text":"<ul> <li>deps: send@0.4.3<ul> <li>Do not throw un-catchable error on file open race condition</li> <li>Use <code>escape-html</code> for HTML escaping</li> <li>deps: debug@1.0.2</li> <li>deps: finished@1.2.2</li> <li>deps: fresh@0.2.2</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#122-2014-06-09","title":"1.2.2 / 2014-06-09","text":"<ul> <li>deps: send@0.4.2<ul> <li>fix \"event emitter leak\" warnings</li> <li>deps: debug@1.0.1</li> <li>deps: finished@1.2.1</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#121-2014-06-02","title":"1.2.1 / 2014-06-02","text":"<ul> <li>use <code>escape-html</code> for escaping</li> <li>deps: send@0.4.1<ul> <li>Send <code>max-age</code> in <code>Cache-Control</code> in correct format</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#120-2014-05-29","title":"1.2.0 / 2014-05-29","text":"<ul> <li>deps: send@0.4.0<ul> <li>Calculate ETag with md5 for reduced collisions</li> <li>Fix wrong behavior when index file matches directory</li> <li>Ignore stream errors after request ends</li> <li>Skip directories in index file search</li> <li>deps: debug@0.8.1</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#110-2014-04-24","title":"1.1.0 / 2014-04-24","text":"<ul> <li>Accept options directly to <code>send</code> module</li> <li>deps: send@0.3.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#104-2014-04-07","title":"1.0.4 / 2014-04-07","text":"<ul> <li>Resolve relative paths at middleware setup</li> <li>Use parseurl to parse the URL from request</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#103-2014-03-20","title":"1.0.3 / 2014-03-20","text":"<ul> <li>Do not rely on connect-like environments</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#102-2014-03-06","title":"1.0.2 / 2014-03-06","text":"<ul> <li>deps: send@0.2.0</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#101-2014-03-05","title":"1.0.1 / 2014-03-05","text":"<ul> <li>Add mime export for back-compat</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/serve-static/HISTORY/#100-2014-03-05","title":"1.0.0 / 2014-03-05","text":"<ul> <li>Genesis from <code>connect</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/setprototypeof/","title":"Polyfill for <code>Object.setPrototypeOf</code>","text":"<p>A simple cross platform implementation to set the prototype of an instianted object.  Supports all modern browsers and at least back to IE8.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/setprototypeof/#usage","title":"Usage:","text":"<pre><code>$ npm install --save setprototypeof\n</code></pre> <pre><code>var setPrototypeOf = require('setprototypeof')\n\nvar obj = {}\nsetPrototypeOf(obj, {\n  foo: function () {\n    return 'bar'\n  }\n})\nobj.foo() // bar\n</code></pre> <p>TypeScript is also supported:</p> <pre><code>import setPrototypeOf from 'setprototypeof'\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/","title":"side-channel","text":"<p>Store information about any JS value in a side channel. Uses WeakMap if available.</p> <p>Warning: in an environment that lacks <code>WeakMap</code>, this implementation will leak memory until you <code>delete</code> the <code>key</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/#getting-started","title":"Getting started","text":"<pre><code>npm install --save side-channel\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/#usageexamples","title":"Usage/Examples","text":"<pre><code>const assert = require('assert');\nconst getSideChannel = require('side-channel');\n\nconst channel = getSideChannel();\n\nconst key = {};\nassert.equal(channel.has(key), false);\nassert.throws(() =&gt; channel.assert(key), TypeError);\n\nchannel.set(key, 42);\n\nchannel.assert(key); // does not throw\nassert.equal(channel.has(key), true);\nassert.equal(channel.get(key), 42);\n\nchannel.delete(key);\nassert.equal(channel.has(key), false);\nassert.throws(() =&gt; channel.assert(key), TypeError);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/#tests","title":"Tests","text":"<p>Clone the repo, <code>npm install</code>, and run <code>npm test</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#v110-2024-12-11","title":"v1.1.0 - 2024-12-11","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#commits","title":"Commits","text":"<ul> <li>[Refactor] extract implementations to <code>side-channel-weakmap</code>, <code>side-channel-map</code>, <code>side-channel-list</code> <code>ada5955</code></li> <li>[New] add <code>channel.delete</code> <code>c01d2d3</code></li> <li>[types] improve types <code>0c54356</code></li> <li>[readme] add content <code>be24868</code></li> <li>[actions] split out node 10-20, and 20+ <code>c4488e2</code></li> <li>[types] use shared tsconfig <code>0e0d57c</code></li> <li>[Dev Deps] update <code>@ljharb/eslint-config</code>, <code>@ljharb/tsconfig</code>, <code>@types/get-intrinsic</code>, <code>@types/object-inspect</code>, <code>@types/tape</code>, <code>auto-changelog</code>, <code>tape</code> <code>fb4f622</code></li> <li>[Deps] update <code>call-bind</code>, <code>get-intrinsic</code>, <code>object-inspect</code> <code>b78336b</code></li> <li>[Tests] replace <code>aud</code> with <code>npm audit</code> <code>ee3ab46</code></li> <li>[Dev Deps] add missing peer dep <code>c03e21a</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#v106-2024-02-29","title":"v1.0.6 - 2024-02-29","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#commits_1","title":"Commits","text":"<ul> <li>add types <code>9beef66</code></li> <li>[meta] simplify <code>exports</code> <code>4334cf9</code></li> <li>[Deps] update <code>call-bind</code> <code>d6043c4</code></li> <li>[Dev Deps] update <code>tape</code> <code>6aca376</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#v105-2024-02-06","title":"v1.0.5 - 2024-02-06","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#commits_2","title":"Commits","text":"<ul> <li>[actions] reuse common workflows <code>3d2e1ff</code></li> <li>[meta] use <code>npmignore</code> to autogenerate an npmignore file <code>04296ea</code></li> <li>[meta] add <code>.editorconfig</code>; add <code>eclint</code> <code>130f0a6</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>auto-changelog</code>, <code>safe-publish-latest</code>, <code>tape</code> <code>d480c2f</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>auto-changelog</code>, <code>tape</code> <code>ecbe70e</code></li> <li>[actions] update rebase action <code>75240b9</code></li> <li>[Dev Deps] update <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>npmignore</code>, <code>tape</code> <code>ae8d281</code></li> <li>[Dev Deps] update <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>tape</code> <code>7125b88</code></li> <li>[Deps] update <code>call-bind</code>, <code>get-intrinsic</code>, <code>object-inspect</code> <code>82577c9</code></li> <li>[Deps] update <code>call-bind</code>, <code>get-intrinsic</code>, <code>object-inspect</code> <code>550aadf</code></li> <li>[Tests] increase coverage <code>5130877</code></li> <li>[Deps] update <code>get-intrinsic</code>, <code>object-inspect</code> <code>ba0194c</code></li> <li>[meta] add missing <code>engines.node</code> <code>985fd24</code></li> <li>[Refactor] use <code>es-errors</code>, so things that only need those do not need <code>get-intrinsic</code> <code>40227a8</code></li> <li>[Deps] update <code>get-intrinsic</code> <code>a989b40</code></li> <li>[Deps] update <code>object-inspect</code> <code>aec42d2</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#v104-2020-12-29","title":"v1.0.4 - 2020-12-29","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#commits_3","title":"Commits","text":"<ul> <li>[Tests] migrate tests to Github Actions <code>10909cb</code></li> <li>[Refactor] Use a linked list rather than an array, and move accessed nodes to the beginning <code>195613f</code></li> <li>[meta] do not publish github action workflow files <code>290ec29</code></li> <li>[Tests] run <code>nyc</code> on all tests; use <code>tape</code> runner <code>ea6d030</code></li> <li>[actions] add \"Allow Edits\" workflow <code>d464d8f</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>auto-changelog</code> <code>02daca8</code></li> <li>[Refactor] use <code>call-bind</code> and <code>get-intrinsic</code> instead of <code>es-abstract</code> <code>e09d481</code></li> <li>[Deps] update <code>object.assign</code> <code>ee83aa8</code></li> <li>[actions] update rebase action to use checkout v2 <code>7726b0b</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#v103-2020-08-23","title":"v1.0.3 - 2020-08-23","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#commits_4","title":"Commits","text":"<ul> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>aud</code>, <code>auto-changelog</code>, <code>tape</code> <code>1f10561</code></li> <li>[Deps] update <code>es-abstract</code>, <code>object-inspect</code> <code>bc20159</code></li> <li>[Dev Deps] update <code>@ljharb/eslint-config</code>, <code>tape</code> <code>b9b2b22</code></li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>tape</code> <code>7055ab4</code></li> <li>[Dev Deps] update <code>auto-changelog</code>; add <code>aud</code> <code>d278c37</code></li> <li>[actions] switch Automatic Rebase workflow to <code>pull_request_target</code> event <code>3bcf982</code></li> <li>[Tests] only audit prod deps <code>18d01c4</code></li> <li>[Deps] update <code>es-abstract</code> <code>6ab096d</code></li> <li>[Dev Deps] update <code>tape</code> <code>9dc174c</code></li> <li>[Deps] update <code>es-abstract</code> <code>431d0f0</code></li> <li>[Deps] update <code>es-abstract</code> <code>49869fd</code></li> <li>[meta] Add package.json to package's exports <code>77d9cdc</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#v102-2019-12-20","title":"v1.0.2 - 2019-12-20","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#commits_5","title":"Commits","text":"<ul> <li>[Dev Deps] update <code>@ljharb/eslint-config</code>, <code>tape</code> <code>4a526df</code></li> <li>[Deps] update <code>es-abstract</code> <code>d4f6e62</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#v101-2019-12-01","title":"v1.0.1 - 2019-12-01","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#commits_6","title":"Commits","text":"<ul> <li>[Fix] add missing \"exports\" <code>d212907</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#v100-2019-12-01","title":"v1.0.0 - 2019-12-01","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel/CHANGELOG/#commits_7","title":"Commits","text":"<ul> <li>Initial implementation <code>dbebd3a</code></li> <li>Initial tests <code>73bdefe</code></li> <li>Initial commit <code>43c03e1</code></li> <li>npm init <code>5c090a7</code></li> <li>[meta] add <code>auto-changelog</code> <code>a5c4e56</code></li> <li>[actions] add automatic rebasing / merge commit blocking <code>bab1683</code></li> <li>[meta] add <code>funding</code> field; create FUNDING.yml <code>63d7aea</code></li> <li>[Tests] add <code>npm run lint</code> <code>46a5a81</code></li> <li>Only apps should have lockfiles <code>8b16b03</code></li> <li>[meta] add <code>safe-publish-latest</code> <code>2f098ef</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-list/","title":"side-channel-list","text":"<p>Store information about any JS value in a side channel, using a linked list.</p> <p>Warning: this implementation will leak memory until you <code>delete</code> the <code>key</code>. Use <code>side-channel</code> for the best available strategy.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-list/#getting-started","title":"Getting started","text":"<pre><code>npm install --save side-channel-list\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-list/#usageexamples","title":"Usage/Examples","text":"<pre><code>const assert = require('assert');\nconst getSideChannelList = require('side-channel-list');\n\nconst channel = getSideChannelList();\n\nconst key = {};\nassert.equal(channel.has(key), false);\nassert.throws(() =&gt; channel.assert(key), TypeError);\n\nchannel.set(key, 42);\n\nchannel.assert(key); // does not throw\nassert.equal(channel.has(key), true);\nassert.equal(channel.get(key), 42);\n\nchannel.delete(key);\nassert.equal(channel.has(key), false);\nassert.throws(() =&gt; channel.assert(key), TypeError);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-list/#tests","title":"Tests","text":"<p>Clone the repo, <code>npm install</code>, and run <code>npm test</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-list/CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-list/CHANGELOG/#v100-2024-12-10","title":"v1.0.0 - 2024-12-10","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-list/CHANGELOG/#commits","title":"Commits","text":"<ul> <li>Initial implementation, tests, readme, types <code>5d6baee</code></li> <li>Initial commit <code>3ae784c</code></li> <li>npm init <code>07055a4</code></li> <li>Only apps should have lockfiles <code>9573058</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-map/","title":"side-channel-map","text":"<p>Store information about any JS value in a side channel, using a Map.</p> <p>Warning: if the <code>key</code> is an object, this implementation will leak memory until you <code>delete</code> it. Use <code>side-channel</code> for the best available strategy.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-map/#getting-started","title":"Getting started","text":"<pre><code>npm install --save side-channel-map\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-map/#usageexamples","title":"Usage/Examples","text":"<pre><code>const assert = require('assert');\nconst getSideChannelMap = require('side-channel-map');\n\nconst channel = getSideChannelMap();\n\nconst key = {};\nassert.equal(channel.has(key), false);\nassert.throws(() =&gt; channel.assert(key), TypeError);\n\nchannel.set(key, 42);\n\nchannel.assert(key); // does not throw\nassert.equal(channel.has(key), true);\nassert.equal(channel.get(key), 42);\n\nchannel.delete(key);\nassert.equal(channel.has(key), false);\nassert.throws(() =&gt; channel.assert(key), TypeError);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-map/#tests","title":"Tests","text":"<p>Clone the repo, <code>npm install</code>, and run <code>npm test</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-map/CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-map/CHANGELOG/#v101-2024-12-10","title":"v1.0.1 - 2024-12-10","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-map/CHANGELOG/#commits","title":"Commits","text":"<ul> <li>[Deps] update <code>call-bound</code> <code>6d05aaa</code></li> <li>[types] fix generics ordering <code>11c0184</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-map/CHANGELOG/#v100-2024-12-10","title":"v1.0.0 - 2024-12-10","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-map/CHANGELOG/#commits_1","title":"Commits","text":"<ul> <li>Initial implementation, tests, readme, types <code>ad877b4</code></li> <li>Initial commit <code>28f8879</code></li> <li>npm init <code>2c9604e</code></li> <li>Only apps should have lockfiles <code>5e7ba9c</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-weakmap/","title":"side-channel-weakmap","text":"<p>Store information about any JS value in a side channel. Uses WeakMap if available.</p> <p>Warning: this implementation will leak memory until you <code>delete</code> the <code>key</code>. Use <code>side-channel</code> for the best available strategy.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-weakmap/#getting-started","title":"Getting started","text":"<pre><code>npm install --save side-channel-weakmap\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-weakmap/#usageexamples","title":"Usage/Examples","text":"<pre><code>const assert = require('assert');\nconst getSideChannelList = require('side-channel-weakmap');\n\nconst channel = getSideChannelList();\n\nconst key = {};\nassert.equal(channel.has(key), false);\nassert.throws(() =&gt; channel.assert(key), TypeError);\n\nchannel.set(key, 42);\n\nchannel.assert(key); // does not throw\nassert.equal(channel.has(key), true);\nassert.equal(channel.get(key), 42);\n\nchannel.delete(key);\nassert.equal(channel.has(key), false);\nassert.throws(() =&gt; channel.assert(key), TypeError);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-weakmap/#tests","title":"Tests","text":"<p>Clone the repo, <code>npm install</code>, and run <code>npm test</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-weakmap/CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-weakmap/CHANGELOG/#v102-2024-12-10","title":"v1.0.2 - 2024-12-10","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-weakmap/CHANGELOG/#commits","title":"Commits","text":"<ul> <li>[types] fix generics ordering <code>1b62e94</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-weakmap/CHANGELOG/#v101-2024-12-10","title":"v1.0.1 - 2024-12-10","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-weakmap/CHANGELOG/#commits_1","title":"Commits","text":"<ul> <li>[types] fix generics ordering <code>08a4a5d</code></li> <li>[Deps] update <code>side-channel-map</code> <code>b53fe44</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-weakmap/CHANGELOG/#v100-2024-12-10","title":"v1.0.0 - 2024-12-10","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/side-channel-weakmap/CHANGELOG/#commits_2","title":"Commits","text":"<ul> <li>Initial implementation, tests, readme, types <code>53c0fa4</code></li> <li>Initial commit <code>a157947</code></li> <li>npm init <code>54dfc55</code></li> <li>Only apps should have lockfiles <code>0ddd6c7</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/","title":"Index","text":"<p>Installation: <code>npm install sift</code>, or <code>yarn add sift</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#sift-is-a-tiny-library-for-using-mongodb-queries-in-javascript","title":"Sift is a tiny library for using MongoDB queries in Javascript","text":"<p>For extended documentation, checkout http://docs.mongodb.org/manual/reference/operator/query/</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#features","title":"Features:","text":"<ul> <li>Supported operators: \\$in, \\$nin, \\$exists, \\$gte, \\$gt, \\$lte, \\$lt, \\$eq, \\$ne, \\$mod, \\$all, \\$and, \\$or, \\$nor, \\$not, \\$size, \\$type, \\$regex, \\$where, \\$elemMatch</li> <li>Regexp searches</li> <li>Supports node.js, and web</li> <li>Custom Operations</li> <li>Tree-shaking (omitting functionality from web app bundles)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#examples","title":"Examples","text":"<pre><code>import sift from \"sift\";\n\n// intersecting arrays\nconst result1 = [\"hello\", \"sifted\", \"array!\"].filter(\n  sift({ $in: [\"hello\", \"world\"] }),\n); // ['hello']\n\n// regexp filter\nconst result2 = [\"craig\", \"john\", \"jake\"].filter(sift(/^j/)); //['john','jake']\n\n// function filter\nconst testFilter = sift({\n  //you can also filter against functions\n  name: function (value) {\n    return value.length == 5;\n  },\n});\n\nconst result3 = [\n  {\n    name: \"craig\",\n  },\n  {\n    name: \"john\",\n  },\n  {\n    name: \"jake\",\n  },\n].filter(testFilter); // filtered: [{ name: 'craig' }]\n\n// you can test *single values* against your custom sifter\ntestFilter({ name: \"sarah\" }); //true\ntestFilter({ name: \"tim\" }); //false\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#api","title":"API","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#siftquery-mongoquery-options-options-function","title":"sift(query: MongoQuery, options?: Options): Function","text":"<p>Creates a filter with all the built-in MongoDB query operations.</p> <ul> <li><code>query</code> - the filter to use against the target array</li> <li><code>options</code></li> <li><code>operations</code> - custom operations</li> <li><code>compare</code> - compares difference between two values</li> </ul> <p>Example:</p> <pre><code>import sift from \"sift\";\n\nconst test = sift({ $gt: 5 });\n\nconsole.log(test(6)); // true\nconsole.log(test(4)); // false\n\n[3, 4, 5, 6, 7].filter(test); // [6, 7]\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#createquerytesterquery-query-options-options-function","title":"createQueryTester(query: Query, options?: Options): Function","text":"<p>Creates a filter function without built-in MongoDB query operations. This is useful if you're looking to omit certain operations from application bundles. See Omitting built-in operations for more info.</p> <pre><code>import { createQueryTester, $eq, $in } from \"sift\";\nconst filter = createQueryTester({ $eq: 5 }, { operations: { $eq, $in } });\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#createequalsoperationparams-any-ownerquery-query-options-options-operation","title":"createEqualsOperation(params: any, ownerQuery: Query, options: Options): Operation","text":"<p>Used for custom operations.</p> <pre><code>import { createQueryTester, createEqualsOperation, $eq, $in } from \"sift\";\nconst filter = createQueryTester(\n  { $mod: 5 },\n  {\n    operations: {\n      $something(mod, ownerQuery, options) {\n        return createEqualsOperation(\n          (value) =&gt; value % mod === 0,\n          ownerQuery,\n          options,\n        );\n      },\n    },\n  },\n);\nfilter(10); // true\nfilter(11); // false\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#supported-operators","title":"Supported Operators","text":"<p>See MongoDB's advanced queries for more info.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#in","title":"\\$in","text":"<p>array value must be \\$in the given query:</p> <p>Intersecting two arrays:</p> <pre><code>// filtered: ['Brazil']\n[\"Brazil\", \"Haiti\", \"Peru\", \"Chile\"].filter(\n  sift({ $in: [\"Costa Rica\", \"Brazil\"] }),\n);\n</code></pre> <p>Here's another example. This acts more like the \\$or operator:</p> <pre><code>[{ name: \"Craig\", location: \"Brazil\" }].filter(\n  sift({ location: { $in: [\"Costa Rica\", \"Brazil\"] } }),\n);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#nin","title":"\\$nin","text":"<p>Opposite of \\$in:</p> <pre><code>// filtered: ['Haiti','Peru','Chile']\n[\"Brazil\", \"Haiti\", \"Peru\", \"Chile\"].filter(\n  sift({ $nin: [\"Costa Rica\", \"Brazil\"] }),\n);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#exists","title":"\\$exists","text":"<p>Checks if whether a value exists:</p> <pre><code>// filtered: ['Craig','Tim']\nsift({ $exists: true })([\"Craig\", null, \"Tim\"]);\n</code></pre> <p>You can also filter out values that don't exist</p> <pre><code>// filtered: [{ name: \"Tim\" }]\n[{ name: \"Craig\", city: \"Minneapolis\" }, { name: \"Tim\" }].filter(\n  sift({ city: { $exists: false } }),\n);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#gte","title":"\\$gte","text":"<p>Checks if a number is &gt;= value:</p> <pre><code>// filtered: [2, 3]\n[0, 1, 2, 3].filter(sift({ $gte: 2 }));\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#gt","title":"\\$gt","text":"<p>Checks if a number is &gt; value:</p> <pre><code>// filtered: [3]\n[0, 1, 2, 3].filter(sift({ $gt: 2 }));\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#lte","title":"\\$lte","text":"<p>Checks if a number is &lt;= value.</p> <pre><code>// filtered: [0, 1, 2]\n[0, 1, 2, 3].filter(sift({ $lte: 2 }));\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#lt","title":"\\$lt","text":"<p>Checks if number is &lt; value.</p> <pre><code>// filtered: [0, 1]\n[0, 1, 2, 3].filter(sift({ $lt: 2 }));\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#eq","title":"\\$eq","text":"<p>Checks if <code>query === value</code>. Note that \\$eq can be omitted. For \\$eq, and \\$ne</p> <pre><code>// filtered: [{ state: 'MN' }]\n[{ state: \"MN\" }, { state: \"CA\" }, { state: \"WI\" }].filter(\n  sift({ state: { $eq: \"MN\" } }),\n);\n</code></pre> <p>Or:</p> <pre><code>// filtered: [{ state: 'MN' }]\n[{ state: \"MN\" }, { state: \"CA\" }, { state: \"WI\" }].filter(\n  sift({ state: \"MN\" }),\n);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#ne","title":"\\$ne","text":"<p>Checks if <code>query !== value</code>.</p> <pre><code>// filtered: [{ state: 'CA' }, { state: 'WI'}]\n[{ state: \"MN\" }, { state: \"CA\" }, { state: \"WI\" }].filter(\n  sift({ state: { $ne: \"MN\" } }),\n);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#mod","title":"\\$mod","text":"<p>Modulus:</p> <pre><code>// filtered: [300, 600]\n[100, 200, 300, 400, 500, 600].filter(sift({ $mod: [3, 0] }));\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#all","title":"\\$all","text":"<p>values must match everything in array:</p> <pre><code>// filtered: [ { tags: ['books','programming','travel' ]} ]\n[\n  { tags: [\"books\", \"programming\", \"travel\"] },\n  { tags: [\"travel\", \"cooking\"] },\n].filter(sift({ tags: { $all: [\"books\", \"programming\"] } }));\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#and","title":"\\$and","text":"<p>ability to use an array of expressions. All expressions must test true.</p> <pre><code>// filtered: [ { name: 'Craig', state: 'MN' }]\n\n[\n  { name: \"Craig\", state: \"MN\" },\n  { name: \"Tim\", state: \"MN\" },\n  { name: \"Joe\", state: \"CA\" },\n].filter(sift({ $and: [{ name: \"Craig\" }, { state: \"MN\" }] }));\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#or","title":"\\$or","text":"<p>OR array of expressions.</p> <pre><code>// filtered: [ { name: 'Craig', state: 'MN' }, { name: 'Tim', state: 'MN' }]\n[\n  { name: \"Craig\", state: \"MN\" },\n  { name: \"Tim\", state: \"MN\" },\n  { name: \"Joe\", state: \"CA\" },\n].filter(sift({ $or: [{ name: \"Craig\" }, { state: \"MN\" }] }));\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#nor","title":"\\$nor","text":"<p>opposite of or:</p> <pre><code>// filtered: [{ name: 'Joe', state: 'CA' }]\n[\n  { name: \"Craig\", state: \"MN\" },\n  { name: \"Tim\", state: \"MN\" },\n  { name: \"Joe\", state: \"CA\" },\n].filter(sift({ $nor: [{ name: \"Craig\" }, { state: \"MN\" }] }));\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#size","title":"\\$size","text":"<p>Matches an array - must match given size:</p> <pre><code>// filtered: ['food','cooking']\n[{ tags: [\"food\", \"cooking\"] }, { tags: [\"traveling\"] }].filter(\n  sift({ tags: { $size: 2 } }),\n);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#type","title":"\\$type","text":"<p>Matches a values based on the type</p> <pre><code>[new Date(), 4342, \"hello world\"].filter(sift({ $type: Date })); // returns single date\n[new Date(), 4342, \"hello world\"].filter(sift({ $type: String })); // returns ['hello world']\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#regex","title":"\\$regex","text":"<p>Matches values based on the given regular expression</p> <pre><code>[\"frank\", \"fred\", \"sam\", \"frost\"].filter(\n  sift({ $regex: /^f/i, $nin: [\"frank\"] }),\n); // [\"fred\", \"frost\"]\n[\"frank\", \"fred\", \"sam\", \"frost\"].filter(\n  sift({ $regex: \"^f\", $options: \"i\", $nin: [\"frank\"] }),\n); // [\"fred\", \"frost\"]\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#where","title":"\\$where","text":"<p>Matches based on some javascript comparison</p> <pre><code>[{ name: \"frank\" }, { name: \"joe\" }].filter(\n  sift({ $where: \"this.name === 'frank'\" }),\n); // [\"frank\"]\n[{ name: \"frank\" }, { name: \"joe\" }].filter(\n  sift({\n    $where: function () {\n      return this.name === \"frank\";\n    },\n  }),\n); // [\"frank\"]\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#elemmatch","title":"\\$elemMatch","text":"<p>Matches elements of array</p> <pre><code>var bills = [\n  {\n    month: \"july\",\n    casts: [\n      {\n        id: 1,\n        value: 200,\n      },\n      {\n        id: 2,\n        value: 1000,\n      },\n    ],\n  },\n  {\n    month: \"august\",\n    casts: [\n      {\n        id: 3,\n        value: 1000,\n      },\n      {\n        id: 4,\n        value: 4000,\n      },\n    ],\n  },\n];\n\nvar result = bills.filter(\n  sift({\n    casts: {\n      $elemMatch: {\n        value: { $gt: 1000 },\n      },\n    },\n  }),\n); // {month:'august', casts:[{id:3, value: 1000},{id: 4, value: 4000}]}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#not","title":"\\$not","text":"<p>Not expression:</p> <pre><code>[\"craig\", \"tim\", \"jake\"].filter(sift({ $not: { $in: [\"craig\", \"tim\"] } })); // ['jake']\n[\"craig\", \"tim\", \"jake\"].filter(sift({ $not: { $size: 5 } })); // ['tim','jake']\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#date-comparison","title":"Date comparison","text":"<p>Mongodb allows you to do date comparisons like so:</p> <pre><code>db.collection.find({ createdAt: { $gte: \"2018-03-22T06:00:00Z\" } });\n</code></pre> <p>In Sift, you'll need to specify a Date object:</p> <pre><code>collection.find(\n  sift({ createdAt: { $gte: new Date(\"2018-03-22T06:00:00Z\") } }),\n);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#custom-behavior","title":"Custom behavior","text":"<p>Sift works like MongoDB out of the box, but you're also able to modify the behavior to suite your needs.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#custom-operations","title":"Custom operations","text":"<p>You can register your own custom operations. Here's an example:</p> <pre><code>import sift, { createEqualsOperation } from \"sift\";\n\nvar filter = sift(\n  {\n    $customMod: 2,\n  },\n  {\n    operations: {\n      $customMod(params, ownerQuery, options) {\n        return createEqualsOperation(\n          (value) =&gt; value % params !== 0,\n          ownerQuery,\n          options,\n        );\n      },\n    },\n  },\n);\n\n[1, 2, 3, 4, 5].filter(filter); // [1, 3, 5]\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/sift/#omitting-built-in-operations","title":"Omitting built-in operations","text":"<p>You can create a filter function that omits the built-in operations like so:</p> <pre><code>import { createQueryTester, $in, $all, $nin, $lt } from \"sift\";\nconst test = createQueryTester(\n  {\n    $eq: 10,\n  },\n  { operations: { $in, $all, $nin, $lt } },\n);\n\n[1, 2, 3, 4, 10].filter(test);\n</code></pre> <p>For bundlers like <code>Webpack</code> and <code>Rollup</code>, operations that aren't used are omitted from application bundles via tree-shaking.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/simple-update-notifier/","title":"simple-update-notifier","text":"<p>Simple update notifier to check for npm updates for cli applications.</p> <p></p> <p>Checks for updates for an npm module and outputs to the command line if there is one available. The result is cached for the specified time so it doesn't check every time the app runs.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/simple-update-notifier/#install","title":"Install","text":"<pre><code>npm install simple-update-notifier\nOR\nyarn add simple-update-notifier\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/simple-update-notifier/#usage","title":"Usage","text":"<pre><code>import updateNotifier from 'simple-update-notifier';\nimport packageJson from './package.json' assert { type: 'json' };\n\nupdateNotifier({ pkg: packageJson });\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/simple-update-notifier/#options","title":"Options","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/simple-update-notifier/#pkg","title":"pkg","text":"<p>Type: <code>object</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/simple-update-notifier/#name","title":"name","text":"<p>Required\\ Type: <code>string</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/simple-update-notifier/#version","title":"version","text":"<p>Required\\ Type: <code>string</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/simple-update-notifier/#updatecheckinterval","title":"updateCheckInterval","text":"<p>Type: <code>number</code>\\ Default: <code>1000 * 60 * 60 * 24</code> (1 day)</p> <p>How often to check for updates.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/simple-update-notifier/#shouldnotifyinnpmscript","title":"shouldNotifyInNpmScript","text":"<p>Type: <code>boolean</code>\\ Default: <code>false</code></p> <p>Allows notification to be shown when running as an npm script.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/simple-update-notifier/#disttag","title":"distTag","text":"<p>Type: <code>string</code>\\ Default: <code>'latest'</code></p> <p>Which dist-tag to use to find the latest version.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/simple-update-notifier/#alwaysrun","title":"alwaysRun","text":"<p>Type: <code>boolean</code>\\ Default: <code>false</code></p> <p>When set, <code>updateCheckInterval</code> will not be respected and a check for an update will always be performed.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/simple-update-notifier/#debug","title":"debug","text":"<p>Type: <code>boolean</code>\\ Default: <code>false</code></p> <p>When set, logs explaining the decision will be output to <code>stderr</code> whenever the module opts to not print an update notification</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/sparse-bitfield/","title":"sparse-bitfield","text":"<p>Bitfield implementation that allocates a series of 1kb buffers to support sparse bitfields without allocating a massive buffer. If you want to simple implementation of a flat bitfield see the bitfield module.</p> <p>This module is mostly useful if you need a big bitfield where you won't nessecarily set every bit.</p> <pre><code>npm install sparse-bitfield\n</code></pre> <p></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/sparse-bitfield/#usage","title":"Usage","text":"<pre><code>var bitfield = require('sparse-bitfield')\nvar bits = bitfield()\n\nbits.set(0, true) // set first bit\nbits.set(1, true) // set second bit\nbits.set(1000000000000, true) // set the 1.000.000.000.000th bit\n</code></pre> <p>Running the above example will allocate two 1kb buffers internally. Each 1kb buffer can hold information about 8192 bits so the first one will be used to store information about the first two bits and the second will be used to store the 1.000.000.000.000th bit.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/sparse-bitfield/#api","title":"API","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/sparse-bitfield/#var-bits-bitfieldoptions","title":"<code>var bits = bitfield([options])</code>","text":"<p>Create a new bitfield. Options include</p> <pre><code>{\n  pageSize: 1024, // how big should the partial buffers be\n  buffer: anExistingBitfield,\n  trackUpdates: false // track when pages are being updated in the pager\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/sparse-bitfield/#bitssetindex-value","title":"<code>bits.set(index, value)</code>","text":"<p>Set a bit to true or false.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/sparse-bitfield/#bitsgetindex","title":"<code>bits.get(index)</code>","text":"<p>Get the value of a bit.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/sparse-bitfield/#bitspages","title":"<code>bits.pages</code>","text":"<p>A memory-pager instance that is managing the underlying memory. If you set <code>trackUpdates</code> to true in the constructor you can use <code>.lastUpdate()</code> on this instance to get the last updated memory page.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/sparse-bitfield/#var-buffer-bitstobuffer","title":"<code>var buffer = bits.toBuffer()</code>","text":"<p>Get a single buffer representing the entire bitfield.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/sparse-bitfield/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/","title":"statuses","text":"<p>HTTP status utility for node.</p> <p>This module provides a list of status codes and messages sourced from a few different projects:</p> <ul> <li>The IANA Status Code Registry</li> <li>The Node.js project</li> <li>The NGINX project</li> <li>The Apache HTTP Server project</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/#installation","title":"Installation","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install statuses\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/#api","title":"API","text":"<pre><code>var status = require('statuses')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/#statuscode","title":"status(code)","text":"<p>Returns the status message string for a known HTTP status code. The code may be a number or a string. An error is thrown for an unknown status code.</p> <pre><code>status(403) // =&gt; 'Forbidden'\nstatus('403') // =&gt; 'Forbidden'\nstatus(306) // throws\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/#statusmsg","title":"status(msg)","text":"<p>Returns the numeric status code for a known HTTP status message. The message is case-insensitive. An error is thrown for an unknown status message.</p> <pre><code>status('forbidden') // =&gt; 403\nstatus('Forbidden') // =&gt; 403\nstatus('foo') // throws\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/#statuscodes","title":"status.codes","text":"<p>Returns an array of all the status codes as <code>Integer</code>s.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/#statuscodemsg","title":"status.code[msg]","text":"<p>Returns the numeric status code for a known status message (in lower-case), otherwise <code>undefined</code>.</p> <pre><code>status['not found'] // =&gt; 404\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/#statusemptycode","title":"status.empty[code]","text":"<p>Returns <code>true</code> if a status code expects an empty body.</p> <pre><code>status.empty[200] // =&gt; undefined\nstatus.empty[204] // =&gt; true\nstatus.empty[304] // =&gt; true\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/#statusmessagecode","title":"status.message[code]","text":"<p>Returns the string message for a known numeric status code, otherwise <code>undefined</code>. This object is the same format as the Node.js http module <code>http.STATUS_CODES</code>.</p> <pre><code>status.message[404] // =&gt; 'Not Found'\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/#statusredirectcode","title":"status.redirect[code]","text":"<p>Returns <code>true</code> if a status code is a valid redirect status.</p> <pre><code>status.redirect[200] // =&gt; undefined\nstatus.redirect[301] // =&gt; true\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/#statusretrycode","title":"status.retry[code]","text":"<p>Returns <code>true</code> if you should retry the rest.</p> <pre><code>status.retry[501] // =&gt; undefined\nstatus.retry[503] // =&gt; true\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/HISTORY/","title":"2.0.1 / 2021-01-03","text":"<ul> <li>Fix returning values from <code>Object.prototype</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/HISTORY/#200-2020-04-19","title":"2.0.0 / 2020-04-19","text":"<ul> <li>Drop support for Node.js 0.6</li> <li>Fix messaging casing of <code>418 I'm a Teapot</code></li> <li>Remove code 306</li> <li>Remove <code>status[code]</code> exports; use <code>status.message[code]</code></li> <li>Remove <code>status[msg]</code> exports; use <code>status.code[msg]</code></li> <li>Rename <code>425 Unordered Collection</code> to standard <code>425 Too Early</code></li> <li>Rename <code>STATUS_CODES</code> export to <code>message</code></li> <li>Return status message for <code>statuses(code)</code> when given code</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/HISTORY/#150-2018-03-27","title":"1.5.0 / 2018-03-27","text":"<ul> <li>Add <code>103 Early Hints</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/HISTORY/#140-2017-10-20","title":"1.4.0 / 2017-10-20","text":"<ul> <li>Add <code>STATUS_CODES</code> export</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/HISTORY/#131-2016-11-11","title":"1.3.1 / 2016-11-11","text":"<ul> <li>Fix return type in JSDoc</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/HISTORY/#130-2016-05-17","title":"1.3.0 / 2016-05-17","text":"<ul> <li>Add <code>421 Misdirected Request</code></li> <li>perf: enable strict mode</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/HISTORY/#121-2015-02-01","title":"1.2.1 / 2015-02-01","text":"<ul> <li>Fix message for status 451<ul> <li><code>451 Unavailable For Legal Reasons</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/HISTORY/#120-2014-09-28","title":"1.2.0 / 2014-09-28","text":"<ul> <li>Add <code>208 Already Repored</code></li> <li>Add <code>226 IM Used</code></li> <li>Add <code>306 (Unused)</code></li> <li>Add <code>415 Unable For Legal Reasons</code></li> <li>Add <code>508 Loop Detected</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/HISTORY/#111-2014-09-24","title":"1.1.1 / 2014-09-24","text":"<ul> <li>Add missing 308 to <code>codes.json</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/HISTORY/#110-2014-09-21","title":"1.1.0 / 2014-09-21","text":"<ul> <li>Add <code>codes.json</code> for universal support</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/HISTORY/#104-2014-08-20","title":"1.0.4 / 2014-08-20","text":"<ul> <li>Package cleanup</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/HISTORY/#103-2014-06-08","title":"1.0.3 / 2014-06-08","text":"<ul> <li>Add 308 to <code>.redirect</code> category</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/HISTORY/#102-2014-03-13","title":"1.0.2 / 2014-03-13","text":"<ul> <li>Add <code>.retry</code> category</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/statuses/HISTORY/#101-2014-03-12","title":"1.0.1 / 2014-03-12","text":"<ul> <li>Initial release</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/supports-color/readme/","title":"supports-color","text":"<p>Detect whether a terminal supports color</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/supports-color/readme/#install","title":"Install","text":"<pre><code>$ npm install supports-color\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/supports-color/readme/#usage","title":"Usage","text":"<pre><code>const supportsColor = require('supports-color');\n\nif (supportsColor.stdout) {\n    console.log('Terminal stdout supports color');\n}\n\nif (supportsColor.stdout.has256) {\n    console.log('Terminal stdout supports 256 colors');\n}\n\nif (supportsColor.stderr.has16m) {\n    console.log('Terminal stderr supports 16 million colors (truecolor)');\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/supports-color/readme/#api","title":"API","text":"<p>Returns an <code>Object</code> with a <code>stdout</code> and <code>stderr</code> property for testing either streams. Each property is an <code>Object</code>, or <code>false</code> if color is not supported.</p> <p>The <code>stdout</code>/<code>stderr</code> objects specifies a level of support for color through a <code>.level</code> property and a corresponding flag:</p> <ul> <li><code>.level = 1</code> and <code>.hasBasic = true</code>: Basic color support (16 colors)</li> <li><code>.level = 2</code> and <code>.has256 = true</code>: 256 color support</li> <li><code>.level = 3</code> and <code>.has16m = true</code>: Truecolor support (16 million colors)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/supports-color/readme/#info","title":"Info","text":"<p>It obeys the <code>--color</code> and <code>--no-color</code> CLI flags.</p> <p>Can be overridden by the user with the flags <code>--color</code> and <code>--no-color</code>. For situations where using <code>--color</code> is not possible, add the environment variable <code>FORCE_COLOR=1</code> to forcefully enable color or <code>FORCE_COLOR=0</code> to forcefully disable. The use of <code>FORCE_COLOR</code> overrides all other color support checks.</p> <p>Explicit 256/Truecolor mode can be enabled using the <code>--color=256</code> and <code>--color=16m</code> flags, respectively.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/supports-color/readme/#related","title":"Related","text":"<ul> <li>supports-color-cli - CLI for this module</li> <li>chalk - Terminal string styling done right</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/supports-color/readme/#maintainers","title":"Maintainers","text":"<ul> <li>Sindre Sorhus</li> <li>Josh Junon</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/supports-color/readme/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/","title":"to-regex-range","text":"<p>Pass two numbers, get a regex-compatible source string for matching ranges. Validated against more than 2.78 million test assertions.</p> <p>Please consider following this project's author, Jon Schlinkert, and consider starring the project to show your  and support.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#install","title":"Install","text":"<p>Install with npm:</p> <pre><code>$ npm install --save to-regex-range\n</code></pre> What does this do?   This libary generates the `source` string to be passed to `new RegExp()` for matching a range of numbers.  **Example**  <pre><code>const toRegexRange = require('to-regex-range');\nconst regex = new RegExp(toRegexRange('15', '95'));\n</code></pre>  A string is returned so that you can do whatever you need with it before passing it to `new RegExp()` (like adding `^` or `$` boundaries, defining flags, or combining it another string).   Why use this library?   ### Convenience  Creating regular expressions for matching numbers gets deceptively complicated pretty fast.  For example, let's say you need a validation regex for matching part of a user-id, postal code, social security number, tax id, etc:  * regex for matching `1` =&gt; `/1/` (easy enough) * regex for matching `1` through `5` =&gt; `/[1-5]/` (not bad...) * regex for matching `1` or `5` =&gt; `/(1|5)/` (still easy...) * regex for matching `1` through `50` =&gt; `/([1-9]|[1-4][0-9]|50)/` (uh-oh...) * regex for matching `1` through `55` =&gt; `/([1-9]|[1-4][0-9]|5[0-5])/` (no prob, I can do this...) * regex for matching `1` through `555` =&gt; `/([1-9]|[1-9][0-9]|[1-4][0-9]{2}|5[0-4][0-9]|55[0-5])/` (maybe not...) * regex for matching `0001` through `5555` =&gt; `/(0{3}[1-9]|0{2}[1-9][0-9]|0[1-9][0-9]{2}|[1-4][0-9]{3}|5[0-4][0-9]{2}|55[0-4][0-9]|555[0-5])/` (okay, I get the point!)  The numbers are contrived, but they're also really basic. In the real world you might need to generate a regex on-the-fly for validation.  **Learn more**  If you're interested in learning more about [character classes](http://www.regular-expressions.info/charclass.html) and other regex features, I personally have always found [regular-expressions.info](http://www.regular-expressions.info/charclass.html) to be pretty useful.  ### Heavily tested  As of April 07, 2019, this library runs [&gt;1m test assertions](./test/test.js) against generated regex-ranges to provide brute-force verification that results are correct.  Tests run in ~280ms on my MacBook Pro, 2.5 GHz Intel Core i7.  ### Optimized  Generated regular expressions are optimized:  * duplicate sequences and character classes are reduced using quantifiers * smart enough to use `?` conditionals when number(s) or range(s) can be positive or negative * uses fragment caching to avoid processing the same exact string more than once"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#usage","title":"Usage","text":"<p>Add this library to your javascript application with the following line of code</p> <pre><code>const toRegexRange = require('to-regex-range');\n</code></pre> <p>The main export is a function that takes two integers: the <code>min</code> value and <code>max</code> value (formatted as strings or numbers).</p> <pre><code>const source = toRegexRange('15', '95');\n//=&gt; 1[5-9]|[2-8][0-9]|9[0-5]\n\nconst regex = new RegExp(`^${source}$`);\nconsole.log(regex.test('14')); //=&gt; false\nconsole.log(regex.test('50')); //=&gt; true\nconsole.log(regex.test('94')); //=&gt; true\nconsole.log(regex.test('96')); //=&gt; false\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#options","title":"Options","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#optionscapture","title":"options.capture","text":"<p>Type: <code>boolean</code></p> <p>Deafault: <code>undefined</code></p> <p>Wrap the returned value in parentheses when there is more than one regex condition. Useful when you're dynamically generating ranges.</p> <pre><code>console.log(toRegexRange('-10', '10'));\n//=&gt; -[1-9]|-?10|[0-9]\n\nconsole.log(toRegexRange('-10', '10', { capture: true }));\n//=&gt; (-[1-9]|-?10|[0-9])\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#optionsshorthand","title":"options.shorthand","text":"<p>Type: <code>boolean</code></p> <p>Deafault: <code>undefined</code></p> <p>Use the regex shorthand for <code>[0-9]</code>:</p> <pre><code>console.log(toRegexRange('0', '999999'));\n//=&gt; [0-9]|[1-9][0-9]{1,5}\n\nconsole.log(toRegexRange('0', '999999', { shorthand: true }));\n//=&gt; \\d|[1-9]\\d{1,5}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#optionsrelaxzeros","title":"options.relaxZeros","text":"<p>Type: <code>boolean</code></p> <p>Default: <code>true</code></p> <p>This option relaxes matching for leading zeros when when ranges are zero-padded.</p> <pre><code>const source = toRegexRange('-0010', '0010');\nconst regex = new RegExp(`^${source}$`);\nconsole.log(regex.test('-10')); //=&gt; true\nconsole.log(regex.test('-010')); //=&gt; true\nconsole.log(regex.test('-0010')); //=&gt; true\nconsole.log(regex.test('10')); //=&gt; true\nconsole.log(regex.test('010')); //=&gt; true\nconsole.log(regex.test('0010')); //=&gt; true\n</code></pre> <p>When <code>relaxZeros</code> is false, matching is strict:</p> <pre><code>const source = toRegexRange('-0010', '0010', { relaxZeros: false });\nconst regex = new RegExp(`^${source}$`);\nconsole.log(regex.test('-10')); //=&gt; false\nconsole.log(regex.test('-010')); //=&gt; false\nconsole.log(regex.test('-0010')); //=&gt; true\nconsole.log(regex.test('10')); //=&gt; false\nconsole.log(regex.test('010')); //=&gt; false\nconsole.log(regex.test('0010')); //=&gt; true\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#examples","title":"Examples","text":"Range Result Compile time <code>toRegexRange(-10, 10)</code> <code>-[1-9]\\|-?10\\|[0-9]</code> 132\u03bcs <code>toRegexRange(-100, -10)</code> <code>-1[0-9]\\|-[2-9][0-9]\\|-100</code> 50\u03bcs <code>toRegexRange(-100, 100)</code> <code>-[1-9]\\|-?[1-9][0-9]\\|-?100\\|[0-9]</code> 42\u03bcs <code>toRegexRange(001, 100)</code> <code>0{0,2}[1-9]\\|0?[1-9][0-9]\\|100</code> 109\u03bcs <code>toRegexRange(001, 555)</code> <code>0{0,2}[1-9]\\|0?[1-9][0-9]\\|[1-4][0-9]{2}\\|5[0-4][0-9]\\|55[0-5]</code> 51\u03bcs <code>toRegexRange(0010, 1000)</code> <code>0{0,2}1[0-9]\\|0{0,2}[2-9][0-9]\\|0?[1-9][0-9]{2}\\|1000</code> 31\u03bcs <code>toRegexRange(1, 50)</code> <code>[1-9]\\|[1-4][0-9]\\|50</code> 24\u03bcs <code>toRegexRange(1, 55)</code> <code>[1-9]\\|[1-4][0-9]\\|5[0-5]</code> 23\u03bcs <code>toRegexRange(1, 555)</code> <code>[1-9]\\|[1-9][0-9]\\|[1-4][0-9]{2}\\|5[0-4][0-9]\\|55[0-5]</code> 30\u03bcs <code>toRegexRange(1, 5555)</code> <code>[1-9]\\|[1-9][0-9]{1,2}\\|[1-4][0-9]{3}\\|5[0-4][0-9]{2}\\|55[0-4][0-9]\\|555[0-5]</code> 43\u03bcs <code>toRegexRange(111, 555)</code> <code>11[1-9]\\|1[2-9][0-9]\\|[2-4][0-9]{2}\\|5[0-4][0-9]\\|55[0-5]</code> 38\u03bcs <code>toRegexRange(29, 51)</code> <code>29\\|[34][0-9]\\|5[01]</code> 24\u03bcs <code>toRegexRange(31, 877)</code> <code>3[1-9]\\|[4-9][0-9]\\|[1-7][0-9]{2}\\|8[0-6][0-9]\\|87[0-7]</code> 32\u03bcs <code>toRegexRange(5, 5)</code> <code>5</code> 8\u03bcs <code>toRegexRange(5, 6)</code> <code>5\\|6</code> 11\u03bcs <code>toRegexRange(1, 2)</code> <code>1\\|2</code> 6\u03bcs <code>toRegexRange(1, 5)</code> <code>[1-5]</code> 15\u03bcs <code>toRegexRange(1, 10)</code> <code>[1-9]\\|10</code> 22\u03bcs <code>toRegexRange(1, 100)</code> <code>[1-9]\\|[1-9][0-9]\\|100</code> 25\u03bcs <code>toRegexRange(1, 1000)</code> <code>[1-9]\\|[1-9][0-9]{1,2}\\|1000</code> 31\u03bcs <code>toRegexRange(1, 10000)</code> <code>[1-9]\\|[1-9][0-9]{1,3}\\|10000</code> 34\u03bcs <code>toRegexRange(1, 100000)</code> <code>[1-9]\\|[1-9][0-9]{1,4}\\|100000</code> 36\u03bcs <code>toRegexRange(1, 1000000)</code> <code>[1-9]\\|[1-9][0-9]{1,5}\\|1000000</code> 42\u03bcs <code>toRegexRange(1, 10000000)</code> <code>[1-9]\\|[1-9][0-9]{1,6}\\|10000000</code> 42\u03bcs"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#heads-up","title":"Heads up!","text":"<p>Order of arguments</p> <p>When the <code>min</code> is larger than the <code>max</code>, values will be flipped to create a valid range:</p> <pre><code>toRegexRange('51', '29');\n</code></pre> <p>Is effectively flipped to:</p> <pre><code>toRegexRange('29', '51');\n//=&gt; 29|[3-4][0-9]|5[0-1]\n</code></pre> <p>Steps / increments</p> <p>This library does not support steps (increments). A pr to add support would be welcome.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#history","title":"History","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#v200-2017-04-21","title":"v2.0.0 - 2017-04-21","text":"<p>New features</p> <p>Adds support for zero-padding!</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#v100","title":"v1.0.0","text":"<p>Optimizations</p> <p>Repeating ranges are now grouped using quantifiers. rocessing time is roughly the same, but the generated regex is much smaller, which should result in faster matching.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#attribution","title":"Attribution","text":"<p>Inspired by the python library range-regex.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#about","title":"About","text":"Contributing  Pull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).   Running Tests  Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:  <pre><code>$ npm install &amp;&amp; npm test\n</code></pre> Building docs  _(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_  To generate the readme, run the following command:  <pre><code>$ npm install -g verbose/verb#dev verb-generate-readme &amp;&amp; verb\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#related-projects","title":"Related projects","text":"<p>You might also be interested in these projects:</p> <ul> <li>expand-range: Fast, bash-like range expansion. Expand a range of numbers or letters, uppercase or lowercase. Used\u2026 more | homepage</li> <li>fill-range: Fill in a range of numbers or letters, optionally passing an increment or <code>step</code> to\u2026 more | homepage</li> <li>micromatch: Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch. | homepage</li> <li>repeat-element: Create an array by repeating the given value n times. | homepage</li> <li>repeat-string: Repeat the given string n times. Fastest implementation for repeating a string. | homepage</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#contributors","title":"Contributors","text":"Commits Contributor 63 jonschlinkert 3 doowb 2 realityking"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#author","title":"Author","text":"<p>Jon Schlinkert</p> <ul> <li>GitHub Profile</li> <li>Twitter Profile</li> <li>LinkedIn Profile</li> </ul> <p>Please consider supporting me on Patreon, or start your own Patreon page!</p> <p> </p>"},{"location":"system-desing/crud-app/JS/server/node_modules/to-regex-range/#license","title":"License","text":"<p>Copyright \u00a9 2019, Jon Schlinkert. Released under the MIT License.</p> <p>This file was generated by verb-generate-readme, v0.8.0, on April 07, 2019.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/toidentifier/","title":"toidentifier","text":"<p>Convert a string of words to a JavaScript identifier</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/toidentifier/#install","title":"Install","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install toidentifier\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/toidentifier/#example","title":"Example","text":"<pre><code>var toIdentifier = require('toidentifier')\n\nconsole.log(toIdentifier('Bad Request'))\n// =&gt; \"BadRequest\"\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/toidentifier/#api","title":"API","text":"<p>This CommonJS module exports a single default function: <code>toIdentifier</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/toidentifier/#toidentifierstring","title":"toIdentifier(string)","text":"<p>Given a string as the argument, it will be transformed according to the following rules and the new string will be returned:</p> <ol> <li>Split into words separated by space characters (<code>0x20</code>).</li> <li>Upper case the first character of each word.</li> <li>Join the words together with no separator.</li> <li>Remove all non-word (<code>[0-9a-z_]</code>) characters.</li> </ol>"},{"location":"system-desing/crud-app/JS/server/node_modules/toidentifier/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/toidentifier/#_1","title":"toidentifier","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/toidentifier/HISTORY/","title":"1.0.1 / 2021-11-14","text":"<ul> <li>pref: enable strict mode</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/toidentifier/HISTORY/#100-2018-07-09","title":"1.0.0 / 2018-07-09","text":"<ul> <li>Initial release</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/touch/","title":"node-touch","text":"<p>For all your node touching needs.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/touch/#installing","title":"Installing","text":"<pre><code>npm install touch\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/touch/#cli-usage","title":"CLI Usage:","text":"<p>See <code>man touch</code></p> <p>This package exports a binary called <code>nodetouch</code> that works mostly like the unix builtin <code>touch(1)</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/touch/#api-usage","title":"API Usage:","text":"<pre><code>var touch = require(\"touch\")\n</code></pre> <p>Gives you the following functions:</p> <ul> <li><code>touch(filename, options, cb)</code></li> <li><code>touch.sync(filename, options)</code></li> <li><code>touch.ftouch(fd, options, cb)</code></li> <li><code>touch.ftouchSync(fd, options)</code></li> </ul> <p>All the <code>options</code> objects are optional.</p> <p>All the async functions return a Promise.  If a callback function is provided, then it's attached to the Promise.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/touch/#options","title":"Options","text":"<ul> <li><code>force</code> like <code>touch -f</code> Boolean</li> <li><code>time</code> like <code>touch -t &lt;date&gt;</code> Can be a Date object, or any parseable   Date string, or epoch ms number.</li> <li><code>atime</code> like <code>touch -a</code> Can be either a Boolean, or a Date.</li> <li><code>mtime</code> like <code>touch -m</code> Can be either a Boolean, or a Date.</li> <li><code>ref</code> like <code>touch -r &lt;file&gt;</code> Must be path to a file.</li> <li><code>nocreate</code> like <code>touch -c</code> Boolean</li> </ul> <p>If neither <code>atime</code> nor <code>mtime</code> are set, then both values are set.  If one of them is set, then the other is not.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/touch/#cli","title":"cli","text":"<p>This package creates a <code>nodetouch</code> command line executable that works very much like the unix builtin <code>touch(1)</code></p>"},{"location":"system-desing/crud-app/JS/server/node_modules/tr46/","title":"tr46","text":"<p>An JavaScript implementation of Unicode Technical Standard #46: Unicode IDNA Compatibility Processing.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/tr46/#api","title":"API","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/tr46/#toasciidomainname-options","title":"<code>toASCII(domainName[, options])</code>","text":"<p>Converts a string of Unicode symbols to a case-folded Punycode string of ASCII symbols.</p> <p>Available options:</p> <ul> <li><code>checkBidi</code></li> <li><code>checkHyphens</code></li> <li><code>checkJoiners</code></li> <li><code>ignoreInvalidPunycode</code></li> <li><code>transitionalProcessing</code></li> <li><code>useSTD3ASCIIRules</code></li> <li><code>verifyDNSLength</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/tr46/#tounicodedomainname-options","title":"<code>toUnicode(domainName[, options])</code>","text":"<p>Converts a case-folded Punycode string of ASCII symbols to a string of Unicode symbols.</p> <p>Available options:</p> <ul> <li><code>checkBidi</code></li> <li><code>checkHyphens</code></li> <li><code>checkJoiners</code></li> <li><code>ignoreInvalidPunycode</code></li> <li><code>transitionalProcessing</code></li> <li><code>useSTD3ASCIIRules</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/tr46/#options","title":"Options","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/tr46/#checkbidi","title":"<code>checkBidi</code>","text":"<p>Type: <code>boolean</code> Default value: <code>false</code> When set to <code>true</code>, any bi-directional text within the input will be checked for validation.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/tr46/#checkhyphens","title":"<code>checkHyphens</code>","text":"<p>Type: <code>boolean</code> Default value: <code>false</code> When set to <code>true</code>, the positions of any hyphen characters within the input will be checked for validation.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/tr46/#checkjoiners","title":"<code>checkJoiners</code>","text":"<p>Type: <code>boolean</code> Default value: <code>false</code> When set to <code>true</code>, any word joiner characters within the input will be checked for validation.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/tr46/#ignoreinvalidpunycode","title":"<code>ignoreInvalidPunycode</code>","text":"<p>Type: <code>boolean</code> Default value: <code>false</code> When set to <code>true</code>, invalid Punycode strings within the input will be allowed.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/tr46/#transitionalprocessing","title":"<code>transitionalProcessing</code>","text":"<p>Type: <code>boolean</code> Default value: <code>false</code> When set to <code>true</code>, uses transitional (compatibility) processing of the deviation characters.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/tr46/#usestd3asciirules","title":"<code>useSTD3ASCIIRules</code>","text":"<p>Type: <code>boolean</code> Default value: <code>false</code> When set to <code>true</code>, input will be validated according to STD3 Rules.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/tr46/#verifydnslength","title":"<code>verifyDNSLength</code>","text":"<p>Type: <code>boolean</code> Default value: <code>false</code> When set to <code>true</code>, the length of each DNS label within the input will be checked for validation.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/tr46/LICENSE/","title":"LICENSE","text":"<p>The MIT License (MIT)</p> <p>Copyright (c) Sebastian Mayr</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/","title":"type-is","text":"<p>Infer the content-type of a request.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/#install","title":"Install","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install type-is\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/#api","title":"API","text":"<pre><code>var http = require('http')\nvar typeis = require('type-is')\n\nhttp.createServer(function (req, res) {\n  var istext = typeis(req, ['text/*'])\n  res.end('you ' + (istext ? 'sent' : 'did not send') + ' me text')\n})\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/#typeisrequest-types","title":"typeis(request, types)","text":"<p>Checks if the <code>request</code> is one of the <code>types</code>. If the request has no body, even if there is a <code>Content-Type</code> header, then <code>null</code> is returned. If the <code>Content-Type</code> header is invalid or does not matches any of the <code>types</code>, then <code>false</code> is returned. Otherwise, a string of the type that matched is returned.</p> <p>The <code>request</code> argument is expected to be a Node.js HTTP request. The <code>types</code> argument is an array of type strings.</p> <p>Each type in the <code>types</code> array can be one of the following:</p> <ul> <li>A file extension name such as <code>json</code>. This name will be returned if matched.</li> <li>A mime type such as <code>application/json</code>.</li> <li>A mime type with a wildcard such as <code>*/*</code> or <code>*/json</code> or <code>application/*</code>.   The full mime type will be returned if matched.</li> <li>A suffix such as <code>+json</code>. This can be combined with a wildcard such as   <code>*/vnd+json</code> or <code>application/*+json</code>. The full mime type will be returned   if matched.</li> </ul> <p>Some examples to illustrate the inputs and returned value:</p> <pre><code>// req.headers.content-type = 'application/json'\n\ntypeis(req, ['json']) // =&gt; 'json'\ntypeis(req, ['html', 'json']) // =&gt; 'json'\ntypeis(req, ['application/*']) // =&gt; 'application/json'\ntypeis(req, ['application/json']) // =&gt; 'application/json'\n\ntypeis(req, ['html']) // =&gt; false\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/#typeishasbodyrequest","title":"typeis.hasBody(request)","text":"<p>Returns a Boolean if the given <code>request</code> has a body, regardless of the <code>Content-Type</code> header.</p> <p>Having a body has no relation to how large the body is (it may be 0 bytes). This is similar to how file existence works. If a body does exist, then this indicates that there is data to read from the Node.js request stream.</p> <pre><code>if (typeis.hasBody(req)) {\n  // read the body, since there is one\n\n  req.on('data', function (chunk) {\n    // ...\n  })\n}\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/#typeisismediatype-types","title":"typeis.is(mediaType, types)","text":"<p>Checks if the <code>mediaType</code> is one of the <code>types</code>. If the <code>mediaType</code> is invalid or does not matches any of the <code>types</code>, then <code>false</code> is returned. Otherwise, a string of the type that matched is returned.</p> <p>The <code>mediaType</code> argument is expected to be a media type string. The <code>types</code> argument is an array of type strings.</p> <p>Each type in the <code>types</code> array can be one of the following:</p> <ul> <li>A file extension name such as <code>json</code>. This name will be returned if matched.</li> <li>A mime type such as <code>application/json</code>.</li> <li>A mime type with a wildcard such as <code>*/*</code> or <code>*/json</code> or <code>application/*</code>.   The full mime type will be returned if matched.</li> <li>A suffix such as <code>+json</code>. This can be combined with a wildcard such as   <code>*/vnd+json</code> or <code>application/*+json</code>. The full mime type will be returned   if matched.</li> </ul> <p>Some examples to illustrate the inputs and returned value:</p> <pre><code>var mediaType = 'application/json'\n\ntypeis.is(mediaType, ['json']) // =&gt; 'json'\ntypeis.is(mediaType, ['html', 'json']) // =&gt; 'json'\ntypeis.is(mediaType, ['application/*']) // =&gt; 'application/json'\ntypeis.is(mediaType, ['application/json']) // =&gt; 'application/json'\n\ntypeis.is(mediaType, ['html']) // =&gt; false\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/#typeismatchexpected-actual","title":"typeis.match(expected, actual)","text":"<p>Match the type string <code>expected</code> with <code>actual</code>, taking in to account wildcards. A wildcard can only be in the type of the subtype part of a media type and only in the <code>expected</code> value (as <code>actual</code> should be the real media type to match). A suffix can still be included even with a wildcard subtype. If an input is malformed, <code>false</code> will be returned.</p> <pre><code>typeis.match('text/html', 'text/html') // =&gt; true\ntypeis.match('*/html', 'text/html') // =&gt; true\ntypeis.match('text/*', 'text/html') // =&gt; true\ntypeis.match('*/*', 'text/html') // =&gt; true\ntypeis.match('*/*+json', 'application/x-custom+json') // =&gt; true\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/#typeisnormalizetype","title":"typeis.normalize(type)","text":"<p>Normalize a <code>type</code> string. This works by performing the following:</p> <ul> <li>If the <code>type</code> is not a string, <code>false</code> is returned.</li> <li>If the string starts with <code>+</code> (so it is a <code>+suffix</code> shorthand like <code>+json</code>),   then it is expanded to contain the complete wildcard notation of <code>*/*+suffix</code>.</li> <li>If the string contains a <code>/</code>, then it is returned as the type.</li> <li>Else the string is assumed to be a file extension and the mapped media type is   returned, or <code>false</code> is there is no mapping.</li> </ul> <p>This includes two special mappings:</p> <ul> <li><code>'multipart'</code> -&gt; <code>'multipart/*'</code></li> <li><code>'urlencoded'</code> -&gt; <code>'application/x-www-form-urlencoded'</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/#examples","title":"Examples","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/#example-body-parser","title":"Example body parser","text":"<pre><code>var express = require('express')\nvar typeis = require('type-is')\n\nvar app = express()\n\napp.use(function bodyParser (req, res, next) {\n  if (!typeis.hasBody(req)) {\n    return next()\n  }\n\n  switch (typeis(req, ['urlencoded', 'json', 'multipart'])) {\n    case 'urlencoded':\n      // parse urlencoded body\n      throw new Error('implement urlencoded body parsing')\n    case 'json':\n      // parse json body\n      throw new Error('implement json body parsing')\n    case 'multipart':\n      // parse multipart body\n      throw new Error('implement multipart body parsing')\n    default:\n      // 415 error code\n      res.statusCode = 415\n      res.end()\n      break\n  }\n})\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/","title":"2.0.1 / 2025-03-27","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#200-2024-08-31","title":"2.0.0 / 2024-08-31","text":"<ul> <li>Drop node &lt;18</li> <li>Use <code>content-type@^1.0.5</code> and <code>media-typer@^1.0.0</code> for type validation<ul> <li>No behavior changes, upgrades <code>media-typer</code></li> </ul> </li> <li>deps: mime-types@^3.0.0<ul> <li>Add <code>application/toml</code> with extension <code>.toml</code></li> <li>Add <code>application/ubjson</code> with extension <code>.ubj</code></li> <li>Add <code>application/x-keepass2</code> with extension <code>.kdbx</code></li> <li>Add deprecated iWorks mime types and extensions</li> <li>Add extension <code>.amr</code> to <code>audio/amr</code></li> <li>Add extension <code>.cjs</code> to <code>application/node</code></li> <li>Add extension <code>.dbf</code> to <code>application/vnd.dbf</code></li> <li>Add extension <code>.m4s</code> to <code>video/iso.segment</code></li> <li>Add extension <code>.mvt</code> to <code>application/vnd.mapbox-vector-tile</code></li> <li>Add extension <code>.mxmf</code> to <code>audio/mobile-xmf</code></li> <li>Add extension <code>.opus</code> to <code>audio/ogg</code></li> <li>Add extension <code>.rar</code> to <code>application/vnd.rar</code></li> <li>Add extension <code>.td</code> to <code>application/urc-targetdesc+xml</code></li> <li>Add extension <code>.trig</code> to <code>application/trig</code></li> <li>Add extensions from IANA for <code>application/*+xml</code> types</li> <li>Add <code>image/avif</code> with extension <code>.avif</code></li> <li>Add <code>image/ktx2</code> with extension <code>.ktx2</code></li> <li>Add <code>image/vnd.ms-dds</code> with extension <code>.dds</code></li> <li>Add new upstream MIME types</li> <li>Fix extension of <code>application/vnd.apple.keynote</code> to be <code>.key</code></li> <li>Remove ambigious extensions from IANA for <code>application/*+xml</code> types</li> <li>Update primary extension to <code>.es</code> for <code>application/ecmascript</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#1618-2019-04-26","title":"1.6.18 / 2019-04-26","text":"<ul> <li>Fix regression passing request object to <code>typeis.is</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#1617-2019-04-25","title":"1.6.17 / 2019-04-25","text":"<ul> <li>deps: mime-types@~2.1.24<ul> <li>Add Apple file extensions from IANA</li> <li>Add extension <code>.csl</code> to <code>application/vnd.citationstyles.style+xml</code></li> <li>Add extension <code>.es</code> to <code>application/ecmascript</code></li> <li>Add extension <code>.nq</code> to <code>application/n-quads</code></li> <li>Add extension <code>.nt</code> to <code>application/n-triples</code></li> <li>Add extension <code>.owl</code> to <code>application/rdf+xml</code></li> <li>Add extensions <code>.siv</code> and <code>.sieve</code> to <code>application/sieve</code></li> <li>Add extensions from IANA for <code>image/*</code> types</li> <li>Add extensions from IANA for <code>model/*</code> types</li> <li>Add extensions to HEIC image types</li> <li>Add new mime types</li> <li>Add <code>text/mdx</code> with extension <code>.mdx</code></li> </ul> </li> <li>perf: prevent internal <code>throw</code> on invalid type</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#1616-2018-02-16","title":"1.6.16 / 2018-02-16","text":"<ul> <li>deps: mime-types@~2.1.18<ul> <li>Add <code>application/raml+yaml</code> with extension <code>.raml</code></li> <li>Add <code>application/wasm</code> with extension <code>.wasm</code></li> <li>Add <code>text/shex</code> with extension <code>.shex</code></li> <li>Add extensions for JPEG-2000 images</li> <li>Add extensions from IANA for <code>message/*</code> types</li> <li>Add extension <code>.mjs</code> to <code>application/javascript</code></li> <li>Add extension <code>.wadl</code> to <code>application/vnd.sun.wadl+xml</code></li> <li>Add extension <code>.gz</code> to <code>application/gzip</code></li> <li>Add glTF types and extensions</li> <li>Add new mime types</li> <li>Update extensions <code>.md</code> and <code>.markdown</code> to be <code>text/markdown</code></li> <li>Update font MIME types</li> <li>Update <code>text/hjson</code> to registered <code>application/hjson</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#1615-2017-03-31","title":"1.6.15 / 2017-03-31","text":"<ul> <li>deps: mime-types@~2.1.15<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#1614-2016-11-18","title":"1.6.14 / 2016-11-18","text":"<ul> <li>deps: mime-types@~2.1.13<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#1613-2016-05-18","title":"1.6.13 / 2016-05-18","text":"<ul> <li>deps: mime-types@~2.1.11<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#1612-2016-02-28","title":"1.6.12 / 2016-02-28","text":"<ul> <li>deps: mime-types@~2.1.10<ul> <li>Add new mime types</li> <li>Fix extension of <code>application/dash+xml</code></li> <li>Update primary extension for <code>audio/mp4</code></li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#1611-2016-01-29","title":"1.6.11 / 2016-01-29","text":"<ul> <li>deps: mime-types@~2.1.9<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#1610-2015-12-01","title":"1.6.10 / 2015-12-01","text":"<ul> <li>deps: mime-types@~2.1.8<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#169-2015-09-27","title":"1.6.9 / 2015-09-27","text":"<ul> <li>deps: mime-types@~2.1.7<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#168-2015-09-04","title":"1.6.8 / 2015-09-04","text":"<ul> <li>deps: mime-types@~2.1.6<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#167-2015-08-20","title":"1.6.7 / 2015-08-20","text":"<ul> <li>Fix type error when given invalid type to match against</li> <li>deps: mime-types@~2.1.5<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#166-2015-07-31","title":"1.6.6 / 2015-07-31","text":"<ul> <li>deps: mime-types@~2.1.4<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#165-2015-07-16","title":"1.6.5 / 2015-07-16","text":"<ul> <li>deps: mime-types@~2.1.3<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#164-2015-07-01","title":"1.6.4 / 2015-07-01","text":"<ul> <li>deps: mime-types@~2.1.2<ul> <li>Add new mime types</li> </ul> </li> <li>perf: enable strict mode</li> <li>perf: remove argument reassignment</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#163-2015-06-08","title":"1.6.3 / 2015-06-08","text":"<ul> <li>deps: mime-types@~2.1.1<ul> <li>Add new mime types</li> </ul> </li> <li>perf: reduce try block size</li> <li>perf: remove bitwise operations</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#162-2015-05-10","title":"1.6.2 / 2015-05-10","text":"<ul> <li>deps: mime-types@~2.0.11<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#161-2015-03-13","title":"1.6.1 / 2015-03-13","text":"<ul> <li>deps: mime-types@~2.0.10<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#160-2015-02-12","title":"1.6.0 / 2015-02-12","text":"<ul> <li>fix false-positives in <code>hasBody</code> <code>Transfer-Encoding</code> check</li> <li>support wildcard for both type and subtype (<code>*/*</code>)</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#157-2015-02-09","title":"1.5.7 / 2015-02-09","text":"<ul> <li>fix argument reassignment</li> <li>deps: mime-types@~2.0.9<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#156-2015-01-29","title":"1.5.6 / 2015-01-29","text":"<ul> <li>deps: mime-types@~2.0.8<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#155-2014-12-30","title":"1.5.5 / 2014-12-30","text":"<ul> <li>deps: mime-types@~2.0.7<ul> <li>Add new mime types</li> <li>Fix missing extensions</li> <li>Fix various invalid MIME type entries</li> <li>Remove example template MIME types</li> <li>deps: mime-db@~1.5.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#154-2014-12-10","title":"1.5.4 / 2014-12-10","text":"<ul> <li>deps: mime-types@~2.0.4<ul> <li>Add new mime types</li> <li>deps: mime-db@~1.3.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#153-2014-11-09","title":"1.5.3 / 2014-11-09","text":"<ul> <li>deps: mime-types@~2.0.3<ul> <li>Add new mime types</li> <li>deps: mime-db@~1.2.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#152-2014-09-28","title":"1.5.2 / 2014-09-28","text":"<ul> <li>deps: mime-types@~2.0.2<ul> <li>Add new mime types</li> <li>deps: mime-db@~1.1.0</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#151-2014-09-07","title":"1.5.1 / 2014-09-07","text":"<ul> <li>Support Node.js 0.6</li> <li>deps: media-typer@0.3.0</li> <li>deps: mime-types@~2.0.1<ul> <li>Support Node.js 0.6</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#150-2014-09-05","title":"1.5.0 / 2014-09-05","text":"<ul> <li>fix <code>hasbody</code> to be true for <code>content-length: 0</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#140-2014-09-02","title":"1.4.0 / 2014-09-02","text":"<ul> <li>update mime-types</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#132-2014-06-24","title":"1.3.2 / 2014-06-24","text":"<ul> <li>use <code>~</code> range on mime-types</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#131-2014-06-19","title":"1.3.1 / 2014-06-19","text":"<ul> <li>fix global variable leak</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#130-2014-06-19","title":"1.3.0 / 2014-06-19","text":"<ul> <li> <p>improve type parsing</p> </li> <li> <p>invalid media type never matches</p> </li> <li>media type not case-sensitive</li> <li>extra LWS does not affect results</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#122-2014-06-19","title":"1.2.2 / 2014-06-19","text":"<ul> <li>fix behavior on unknown type argument</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#121-2014-06-03","title":"1.2.1 / 2014-06-03","text":"<ul> <li>switch dependency from <code>mime</code> to <code>mime-types@1.0.0</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#120-2014-05-11","title":"1.2.0 / 2014-05-11","text":"<ul> <li> <p>support suffix matching:</p> </li> <li> <p><code>+json</code> matches <code>application/vnd+json</code></p> </li> <li><code>*/vnd+json</code> matches <code>application/vnd+json</code></li> <li><code>application/*+json</code> matches <code>application/vnd+json</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#110-2014-04-12","title":"1.1.0 / 2014-04-12","text":"<ul> <li>add non-array values support</li> <li> <p>expose internal utilities:</p> </li> <li> <p><code>.is()</code></p> </li> <li><code>.hasBody()</code></li> <li><code>.normalize()</code></li> <li><code>.match()</code></li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/type-is/HISTORY/#101-2014-03-30","title":"1.0.1 / 2014-03-30","text":"<ul> <li>add <code>multipart</code> as a shorthand</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/undefsafe/","title":"undefsafe","text":"<p>Simple function for retrieving deep object properties without getting \"Cannot read property 'X' of undefined\"</p> <p>Can also be used to safely set deep values.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/undefsafe/#usage","title":"Usage","text":"<pre><code>var object = {\n  a: {\n    b: {\n      c: 1,\n      d: [1,2,3],\n      e: 'remy'\n    }\n  }\n};\n\nconsole.log(undefsafe(object, 'a.b.e')); // \"remy\"\nconsole.log(undefsafe(object, 'a.b.not.found')); // undefined\n</code></pre> <p>Demo: https://jsbin.com/eroqame/3/edit?js,console</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/undefsafe/#setting","title":"Setting","text":"<pre><code>var object = {\n  a: {\n    b: [1,2,3]\n  }\n};\n\n// modified object\nvar res = undefsafe(object, 'a.b.0', 10);\n\nconsole.log(object); // { a: { b: [10, 2, 3] } }\nconsole.log(res); // 1 - previous value\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/undefsafe/#star-rules-in-paths","title":"Star rules in paths","text":"<p>As of 1.2.0, <code>undefsafe</code> supports a <code>*</code> in the path if you want to search all of the properties (or array elements) for a particular element.</p> <p>The function will only return a single result, either the 3rd argument validation value, or the first positive match. For example, the following github data:</p> <pre><code>const githubData = {\n        commits: [{\n          modified: [\n            \"one\",\n            \"two\"\n          ]\n        }, /* ... */ ]\n      };\n\n// first modified file found in the first commit\nconsole.log(undefsafe(githubData, 'commits.*.modified.0'));\n\n// returns `two` or undefined if not found\nconsole.log(undefsafe(githubData, 'commits.*.modified.*', 'two'));\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/unpipe/","title":"unpipe","text":"<p>Unpipe a stream from all destinations.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/unpipe/#installation","title":"Installation","text":"<pre><code>$ npm install unpipe\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/unpipe/#api","title":"API","text":"<pre><code>var unpipe = require('unpipe')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/unpipe/#unpipestream","title":"unpipe(stream)","text":"<p>Unpipes all destinations from a given stream. With stream 2+, this is equivalent to <code>stream.unpipe()</code>. When used with streams 1 style streams (typically Node.js 0.8 and below), this module attempts to undo the actions done in <code>stream.pipe(dest)</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/unpipe/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/unpipe/HISTORY/","title":"1.0.0 / 2015-06-14","text":"<ul> <li>Initial release</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/","title":"vary","text":"<p>Manipulate the HTTP Vary header</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/#installation","title":"Installation","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command: </p> <pre><code>$ npm install vary\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/#api","title":"API","text":"<pre><code>var vary = require('vary')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/#varyres-field","title":"vary(res, field)","text":"<p>Adds the given header <code>field</code> to the <code>Vary</code> response header of <code>res</code>. This can be a string of a single field, a string of a valid <code>Vary</code> header, or an array of multiple fields.</p> <p>This will append the header if not already listed, otherwise leaves it listed in the current location.</p> <pre><code>// Append \"Origin\" to the Vary header of the response\nvary(res, 'Origin')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/#varyappendheader-field","title":"vary.append(header, field)","text":"<p>Adds the given header <code>field</code> to the <code>Vary</code> response header string <code>header</code>. This can be a string of a single field, a string of a valid <code>Vary</code> header, or an array of multiple fields.</p> <p>This will append the header if not already listed, otherwise leaves it listed in the current location. The new header string is returned.</p> <pre><code>// Get header string appending \"Origin\" to \"Accept, User-Agent\"\nvary.append('Accept, User-Agent', 'Origin')\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/#examples","title":"Examples","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/vary/#updating-the-vary-header-when-content-is-based-on-it","title":"Updating the Vary header when content is based on it","text":"<pre><code>var http = require('http')\nvar vary = require('vary')\n\nhttp.createServer(function onRequest (req, res) {\n  // about to user-agent sniff\n  vary(res, 'User-Agent')\n\n  var ua = req.headers['user-agent'] || ''\n  var isMobile = /mobi|android|touch|mini/i.test(ua)\n\n  // serve site, depending on isMobile\n  res.setHeader('Content-Type', 'text/html')\n  res.end('You are (probably) ' + (isMobile ? '' : 'not ') + 'a mobile user')\n})\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/#testing","title":"Testing","text":"<pre><code>$ npm test\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/#license","title":"License","text":"<p>MIT</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/HISTORY/","title":"1.1.2 / 2017-09-23","text":"<ul> <li>perf: improve header token parsing speed</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/HISTORY/#111-2017-03-20","title":"1.1.1 / 2017-03-20","text":"<ul> <li>perf: hoist regular expression</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/HISTORY/#110-2015-09-29","title":"1.1.0 / 2015-09-29","text":"<ul> <li>Only accept valid field names in the <code>field</code> argument<ul> <li>Ensures the resulting string is a valid HTTP header value</li> </ul> </li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/HISTORY/#101-2015-07-08","title":"1.0.1 / 2015-07-08","text":"<ul> <li>Fix setting empty header from empty <code>field</code></li> <li>perf: enable strict mode</li> <li>perf: remove argument reassignments</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/HISTORY/#100-2014-08-10","title":"1.0.0 / 2014-08-10","text":"<ul> <li>Accept valid <code>Vary</code> header string as <code>field</code></li> <li>Add <code>vary.append</code> for low-level string manipulation</li> <li>Move to <code>jshttp</code> orgainzation</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/HISTORY/#010-2014-06-05","title":"0.1.0 / 2014-06-05","text":"<ul> <li>Support array of fields to set</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/vary/HISTORY/#000-2014-06-04","title":"0.0.0 / 2014-06-04","text":"<ul> <li>Initial release</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/webidl-conversions/","title":"Web IDL Type Conversions on JavaScript Values","text":"<p>This package implements, in JavaScript, the algorithms to convert a given JavaScript value according to a given Web IDL type.</p> <p>The goal is that you should be able to write code like</p> <pre><code>\"use strict\";\nconst conversions = require(\"webidl-conversions\");\n\nfunction doStuff(x, y) {\n    x = conversions[\"boolean\"](x);\n    y = conversions[\"unsigned long\"](y);\n    // actual algorithm code here\n}\n</code></pre> <p>and your function <code>doStuff</code> will behave the same as a Web IDL operation declared as</p> <pre><code>undefined doStuff(boolean x, unsigned long y);\n</code></pre>"},{"location":"system-desing/crud-app/JS/server/node_modules/webidl-conversions/#api","title":"API","text":"<p>This package's main module's default export is an object with a variety of methods, each corresponding to a different Web IDL type. Each method, when invoked on a JavaScript value, will give back the new JavaScript value that results after passing through the Web IDL conversion rules. (See below for more details on what that means.) Alternately, the method could throw an error, if the Web IDL algorithm is specified to do so: for example <code>conversions[\"float\"](NaN)</code> will throw a <code>TypeError</code>.</p> <p>Each method also accepts a second, optional, parameter for miscellaneous options. For conversion methods that throw errors, a string option <code>{ context }</code> may be provided to provide more information in the error message. (For example, <code>conversions[\"float\"](NaN, { context: \"Argument 1 of Interface's operation\" })</code> will throw an error with message <code>\"Argument 1 of Interface's operation is not a finite floating-point value.\"</code>)</p> <p>If we are dealing with multiple JavaScript realms (such as those created using Node.js' vm module or the HTML <code>iframe</code> element), and exceptions from another realm need to be thrown, one can supply an object option <code>globals</code> containing the following properties:</p> <pre><code>{\n  globals: {\n    Number,\n    String,\n    TypeError\n  }\n}\n</code></pre> <p>Those specific functions will be used when throwing exceptions.</p> <p>Specific conversions may also accept other options, the details of which can be found below.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/webidl-conversions/#conversions-implemented","title":"Conversions implemented","text":"<p>Conversions for all of the basic types from the Web IDL specification are implemented:</p> <ul> <li><code>any</code></li> <li><code>undefined</code></li> <li><code>boolean</code></li> <li>Integer types, which can additionally be provided the boolean options <code>{ clamp, enforceRange }</code> as a second parameter</li> <li><code>float</code>, <code>unrestricted float</code></li> <li><code>double</code>, <code>unrestricted double</code></li> <li><code>DOMString</code>, which can additionally be provided the boolean option <code>{ treatNullAsEmptyString }</code> as a second parameter</li> <li><code>ByteString</code>, <code>USVString</code></li> <li><code>object</code></li> <li>Buffer source types, which can additionally be provided with the boolean option <code>{ allowShared }</code> as a second parameter</li> </ul> <p>Additionally, for convenience, the following derived type definitions are implemented:</p> <ul> <li><code>ArrayBufferView</code>, which can additionally be provided with the boolean option <code>{ allowShared }</code> as a second parameter</li> <li><code>BufferSource</code></li> <li><code>DOMTimeStamp</code></li> </ul> <p>Derived types, such as nullable types, promise types, sequences, records, etc. are not handled by this library. You may wish to investigate the webidl2js project.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/webidl-conversions/#a-note-on-the-long-long-types","title":"A note on the <code>long long</code> types","text":"<p>The <code>long long</code> and <code>unsigned long long</code> Web IDL types can hold values that cannot be stored in JavaScript numbers. Conversions are still accurate as we make use of BigInt in the conversion process, but in the case of <code>unsigned long long</code> we simply cannot represent some possible output values in JavaScript. For example, converting the JavaScript number <code>-1</code> to a Web IDL <code>unsigned long long</code> is supposed to produce the Web IDL value <code>18446744073709551615</code>. Since we are representing our Web IDL values in JavaScript, we can't represent <code>18446744073709551615</code>, so we instead the best we could do is <code>18446744073709551616</code> as the output.</p> <p>To mitigate this, we could return the raw BigInt value from the conversion function, but right now it is not implemented. If your use case requires such precision, file an issue.</p> <p>On the other hand, <code>long long</code> conversion is always accurate, since the input value can never be more precise than the output value.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/webidl-conversions/#a-note-on-buffersource-types","title":"A note on <code>BufferSource</code> types","text":"<p>All of the <code>BufferSource</code> types will throw when the relevant <code>ArrayBuffer</code> has been detached. This technically is not part of the specified conversion algorithm, but instead part of the getting a reference/getting a copy algorithms. We've consolidated them here for convenience and ease of implementation, but if there is a need to separate them in the future, please open an issue so we can investigate.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/webidl-conversions/#background","title":"Background","text":"<p>What's actually going on here, conceptually, is pretty weird. Let's try to explain.</p> <p>Web IDL, as part of its madness-inducing design, has its own type system. When people write algorithms in web platform specs, they usually operate on Web IDL values, i.e. instances of Web IDL types. For example, if they were specifying the algorithm for our <code>doStuff</code> operation above, they would treat <code>x</code> as a Web IDL value of Web IDL type <code>boolean</code>. Crucially, they would not treat <code>x</code> as a JavaScript variable whose value is either the JavaScript <code>true</code> or <code>false</code>. They're instead working in a different type system altogether, with its own rules.</p> <p>Separately from its type system, Web IDL defines a \"binding\" of the type system into JavaScript. This contains rules like: when you pass a JavaScript value to the JavaScript method that manifests a given Web IDL operation, how does that get converted into a Web IDL value? For example, a JavaScript <code>true</code> passed in the position of a Web IDL <code>boolean</code> argument becomes a Web IDL <code>true</code>. But, a JavaScript <code>true</code> passed in the position of a Web IDL <code>unsigned long</code> becomes a Web IDL <code>1</code>. And so on.</p> <p>Finally, we have the actual implementation code. This is usually C++, although these days some smart people are using Rust. The implementation, of course, has its own type system. So when they implement the Web IDL algorithms, they don't actually use Web IDL values, since those aren't \"real\" outside of specs. Instead, implementations apply the Web IDL binding rules in such a way as to convert incoming JavaScript values into C++ values. For example, if code in the browser called <code>doStuff(true, true)</code>, then the implementation code would eventually receive a C++ <code>bool</code> containing <code>true</code> and a C++ <code>uint32_t</code> containing <code>1</code>.</p> <p>The upside of all this is that implementations can abstract all the conversion logic away, letting Web IDL handle it, and focus on implementing the relevant methods in C++ with values of the correct type already provided. That is payoff of Web IDL, in a nutshell.</p> <p>And getting to that payoff is the goal of this project\u2014but for JavaScript implementations, instead of C++ ones. That is, this library is designed to make it easier for JavaScript developers to write functions that behave like a given Web IDL operation. So conceptually, the conversion pipeline, which in its general form is JavaScript values \u21a6 Web IDL values \u21a6 implementation-language values, in this case becomes JavaScript values \u21a6 Web IDL values \u21a6 JavaScript values. And that intermediate step is where all the logic is performed: a JavaScript <code>true</code> becomes a Web IDL <code>1</code> in an unsigned long context, which then becomes a JavaScript <code>1</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/webidl-conversions/#dont-use-this","title":"Don't use this","text":"<p>Seriously, why would you ever use this? You really shouldn't. Web IDL is \u2026 strange, and you shouldn't be emulating its semantics. If you're looking for a generic argument-processing library, you should find one with better rules than those from Web IDL. In general, your JavaScript should not be trying to become more like Web IDL; if anything, we should fix Web IDL to make it more like JavaScript.</p> <p>The only people who should use this are those trying to create faithful implementations (or polyfills) of web platform interfaces defined in Web IDL. Its main consumer is the jsdom project.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/webidl-conversions/LICENSE/","title":"The BSD 2-Clause License","text":"<p>Copyright (c) 2014, Domenic Denicola All rights reserved.</p> <p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p> <ol> <li> <p>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</p> </li> <li> <p>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</p> </li> </ol> <p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/whatwg-url/","title":"whatwg-url","text":"<p>whatwg-url is a full implementation of the WHATWG URL Standard. It can be used standalone, but it also exposes a lot of the internal algorithms that are useful for integrating a URL parser into a project like jsdom.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/whatwg-url/#specification-conformance","title":"Specification conformance","text":"<p>whatwg-url is currently up to date with the URL spec up to commit 6c78200.</p> <p>For <code>file:</code> URLs, whose origin is left unspecified, whatwg-url chooses to use a new opaque origin (which serializes to <code>\"null\"</code>).</p> <p>whatwg-url does not yet implement any encoding handling beyond UTF-8. That is, the encoding override parameter does not exist in our API.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/whatwg-url/#api","title":"API","text":""},{"location":"system-desing/crud-app/JS/server/node_modules/whatwg-url/#the-url-and-urlsearchparams-classes","title":"The <code>URL</code> and <code>URLSearchParams</code> classes","text":"<p>The main API is provided by the <code>URL</code> and <code>URLSearchParams</code> exports, which follows the spec's behavior in all ways (including e.g. <code>USVString</code> conversion). Most consumers of this library will want to use these.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/whatwg-url/#low-level-url-standard-api","title":"Low-level URL Standard API","text":"<p>The following methods are exported for use by places like jsdom that need to implement things like <code>HTMLHyperlinkElementUtils</code>. They mostly operate on or return an \"internal URL\" or \"URL record\" type.</p> <ul> <li>URL parser: <code>parseURL(input, { baseURL })</code></li> <li>Basic URL parser: <code>basicURLParse(input, { baseURL, url, stateOverride })</code></li> <li>URL serializer: <code>serializeURL(urlRecord, excludeFragment)</code></li> <li>Host serializer: <code>serializeHost(hostFromURLRecord)</code></li> <li>URL path serializer: <code>serializePath(urlRecord)</code></li> <li>Serialize an integer: <code>serializeInteger(number)</code></li> <li>Origin serializer: <code>serializeURLOrigin(urlRecord)</code></li> <li>Set the username: <code>setTheUsername(urlRecord, usernameString)</code></li> <li>Set the password: <code>setThePassword(urlRecord, passwordString)</code></li> <li>Has an opaque path: <code>hasAnOpaquePath(urlRecord)</code></li> <li>Cannot have a username/password/port: <code>cannotHaveAUsernamePasswordPort(urlRecord)</code></li> <li>Percent decode bytes: <code>percentDecodeBytes(uint8Array)</code></li> <li>Percent decode a string: <code>percentDecodeString(string)</code></li> </ul> <p>The <code>stateOverride</code> parameter is one of the following strings:</p> <ul> <li><code>\"scheme start\"</code></li> <li><code>\"scheme\"</code></li> <li><code>\"no scheme\"</code></li> <li><code>\"special relative or authority\"</code></li> <li><code>\"path or authority\"</code></li> <li><code>\"relative\"</code></li> <li><code>\"relative slash\"</code></li> <li><code>\"special authority slashes\"</code></li> <li><code>\"special authority ignore slashes\"</code></li> <li><code>\"authority\"</code></li> <li><code>\"host\"</code></li> <li><code>\"hostname\"</code></li> <li><code>\"port\"</code></li> <li><code>\"file\"</code></li> <li><code>\"file slash\"</code></li> <li><code>\"file host\"</code></li> <li><code>\"path start\"</code></li> <li><code>\"path\"</code></li> <li><code>\"opaque path\"</code></li> <li><code>\"query\"</code></li> <li><code>\"fragment\"</code></li> </ul> <p>The URL record type has the following API:</p> <ul> <li><code>scheme</code></li> <li><code>username</code></li> <li><code>password</code></li> <li><code>host</code></li> <li><code>port</code></li> <li><code>path</code> (as an array of strings, or a string)</li> <li><code>query</code></li> <li><code>fragment</code></li> </ul> <p>These properties should be treated with care, as in general changing them will cause the URL record to be in an inconsistent state until the appropriate invocation of <code>basicURLParse</code> is used to fix it up. You can see examples of this in the URL Standard, where there are many step sequences like \"4. Set context object\u2019s url\u2019s fragment to the empty string. 5. Basic URL parse input with context object\u2019s url as url and fragment state as state override.\" In between those two steps, a URL record is in an unusable state.</p> <p>The return value of \"failure\" in the spec is represented by <code>null</code>. That is, functions like <code>parseURL</code> and <code>basicURLParse</code> can return either a URL record or <code>null</code>.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/whatwg-url/#whatwg-urlwebidl2js-wrapper-module","title":"<code>whatwg-url/webidl2js-wrapper</code> module","text":"<p>This module exports the <code>URL</code> and <code>URLSearchParams</code> interface wrappers API generated by webidl2js.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/whatwg-url/#development-instructions","title":"Development instructions","text":"<p>First, install Node.js. Then, fetch the dependencies of whatwg-url, by running from this directory:</p> <pre><code>npm install\n</code></pre> <p>To run tests:</p> <pre><code>npm test\n</code></pre> <p>To generate a coverage report:</p> <pre><code>npm run coverage\n</code></pre> <p>To build and run the live viewer:</p> <pre><code>npm run prepare\nnpm run build-live-viewer\n</code></pre> <p>Serve the contents of the <code>live-viewer</code> directory using any web server.</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/whatwg-url/#supporting-whatwg-url","title":"Supporting whatwg-url","text":"<p>The jsdom project (including whatwg-url) is a community-driven project maintained by a team of volunteers. You could support us by:</p> <ul> <li>Getting professional support for whatwg-url as part of a Tidelift subscription. Tidelift helps making open source sustainable for us while giving teams assurances for maintenance, licensing, and security.</li> <li>Contributing directly to the project.</li> </ul>"},{"location":"system-desing/crud-app/JS/server/node_modules/wrappy/","title":"wrappy","text":"<p>Callback wrapping utility</p>"},{"location":"system-desing/crud-app/JS/server/node_modules/wrappy/#usage","title":"USAGE","text":"<pre><code>var wrappy = require(\"wrappy\")\n\n// var wrapper = wrappy(wrapperFunction)\n\n// make sure a cb is called only once\n// See also: http://npm.im/once for this specific use case\nvar once = wrappy(function (cb) {\n  var called = false\n  return function () {\n    if (called) return\n    called = true\n    return cb.apply(this, arguments)\n  }\n})\n\nfunction printBoo () {\n  console.log('boo')\n}\n// has some rando property\nprintBoo.iAmBooPrinter = true\n\nvar onlyPrintOnce = once(printBoo)\n\nonlyPrintOnce() // prints 'boo'\nonlyPrintOnce() // does nothing\n\n// random property is retained!\nassert.equal(onlyPrintOnce.iAmBooPrinter, true)\n</code></pre>"}]}